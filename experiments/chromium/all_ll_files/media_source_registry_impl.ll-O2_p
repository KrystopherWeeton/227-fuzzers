; ModuleID = '../../third_party/blink/renderer/modules/mediasource/media_source_registry_impl.cc'
source_filename = "../../third_party/blink/renderer/modules/mediasource/media_source_registry_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::MediaSourceRegistryImpl>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::MediaSourceRegistryImpl>::InstanceStorage" = type { %"class.blink::MediaSourceRegistryImpl"* }
%"class.blink::MediaSourceRegistryImpl" = type { %"class.blink::MediaSourceRegistry", %"class.WTF::Mutex", %"class.WTF::HashMap" }
%"class.blink::MediaSourceRegistry" = type { %"class.blink::URLRegistry" }
%"class.blink::URLRegistry" = type { i32 (...)** }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %class.scoped_refptr.1 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type <{ %"class.blink::URLRegistrable", %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.blink::SecurityOrigin" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink23MediaSourceRegistryImplD2Ev = comdat any

$_ZN5blink23MediaSourceRegistryImplD0Ev = comdat any

$_ZN5blink11URLRegistry6LookupERKN3WTF6StringE = comdat any

$_ZN5blink11URLRegistry8ContainsERKN3WTF6StringE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

@_ZZN5blink23MediaSourceRegistryImpl4InitEvE10s_instance = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink23MediaSourceRegistryImpl4InitEvE10s_instance = internal global i64 0, align 8
@_ZTVN5blink23MediaSourceRegistryImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MediaSourceRegistryImpl"*)* @_ZN5blink23MediaSourceRegistryImplD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaSourceRegistryImpl"*)* @_ZN5blink23MediaSourceRegistryImplD0Ev to i8*), i8* bitcast (void (%"class.blink::MediaSourceRegistryImpl"*, %"class.blink::SecurityOrigin"*, %"class.blink::KURL"*, %"class.blink::URLRegistrable"*)* @_ZN5blink23MediaSourceRegistryImpl11RegisterURLEPNS_14SecurityOriginERKNS_4KURLEPNS_14URLRegistrableE to i8*), i8* bitcast (void (%"class.blink::MediaSourceRegistryImpl"*, %"class.blink::KURL"*)* @_ZN5blink23MediaSourceRegistryImpl13UnregisterURLERKNS_4KURLE to i8*), i8* bitcast (%"class.blink::URLRegistrable"* (%"class.blink::URLRegistry"*, %"class.WTF::String"*)* @_ZN5blink11URLRegistry6LookupERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::URLRegistry"*, %"class.WTF::String"*)* @_ZN5blink11URLRegistry8ContainsERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistryImpl"*, %"class.WTF::String"*)* @_ZN5blink23MediaSourceRegistryImpl17LookupMediaSourceERKN3WTF6StringE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink21MediaSourceAttachmentEEEEEEPKcv = private unnamed_addr constant [124 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, scoped_refptr<blink::MediaSourceAttachment> >]\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink23MediaSourceRegistryImplC1Ev = hidden unnamed_addr alias void (%"class.blink::MediaSourceRegistryImpl"*), void (%"class.blink::MediaSourceRegistryImpl"*)* @_ZN5blink23MediaSourceRegistryImplC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MediaSourceRegistryImpl4InitEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23MediaSourceRegistryImpl4InitEvE10s_instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %13, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23MediaSourceRegistryImpl4InitEvE10s_instance) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 72) #9
  %8 = bitcast i8* %7 to %"class.blink::MediaSourceRegistry"*
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23MediaSourceRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %"class.WTF::MutexBase"*
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %11, i1 zeroext false) #9
  %12 = getelementptr inbounds i8, i8* %7, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #9
  tail call void @_ZN5blink21MediaSourceAttachment11SetRegistryEPNS_19MediaSourceRegistryE(%"class.blink::MediaSourceRegistry"* %8) #9
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink23MediaSourceRegistryImpl4InitEvE10s_instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23MediaSourceRegistryImpl4InitEvE10s_instance) #9
  br label %13

13:                                               ; preds = %3, %6, %0
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MediaSourceRegistryImpl11RegisterURLEPNS_14SecurityOriginERKNS_4KURLEPNS_14URLRegistrableE(%"class.blink::MediaSourceRegistryImpl"*, %"class.blink::SecurityOrigin"* nocapture readnone, %"class.blink::KURL"* dereferenceable(112), %"class.blink::URLRegistrable"*) unnamed_addr #0 align 2 {
  %5 = alloca %class.scoped_refptr.1, align 8
  %6 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #9
  %7 = bitcast %class.scoped_refptr.1* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %5, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr.1* %5 to %"class.blink::URLRegistrable"**
  store %"class.blink::URLRegistrable"* %3, %"class.blink::URLRegistrable"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4
  %11 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %"class.WTF::String"* dereferenceable(8) %10, %class.scoped_refptr.1* nonnull dereferenceable(8) %5) #9
  %13 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %4
  %17 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %12, 0
  %18 = bitcast %class.scoped_refptr.1* %5 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.blink::MediaSourceAttachment"* null, %"class.blink::MediaSourceAttachment"** %8, align 8
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1
  %21 = bitcast %class.scoped_refptr.1* %20 to i64*
  %22 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %20, i64 0, i32 0
  %23 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %22, align 8
  store i64 %19, i64* %21, align 8
  %24 = icmp eq %"class.blink::MediaSourceAttachment"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %23, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.blink::MediaSourceAttachment"*
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %31 to void (%"class.blink::MediaSourceAttachment"*)***
  %34 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %34, i64 1
  %36 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %35, align 8
  call void %36(%"class.blink::MediaSourceAttachment"* nonnull %32) #9
  br label %37

37:                                               ; preds = %4, %16, %25, %30
  %38 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %8, align 8
  %39 = icmp eq %"class.blink::MediaSourceAttachment"* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %38, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.blink::MediaSourceAttachment"*
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %46 to void (%"class.blink::MediaSourceAttachment"*)***
  %49 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %49, i64 1
  %51 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %50, align 8
  call void %51(%"class.blink::MediaSourceAttachment"* nonnull %47) #9
  br label %52

52:                                               ; preds = %37, %40, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MediaSourceRegistryImpl13UnregisterURLERKNS_4KURLE(%"class.blink::MediaSourceRegistryImpl"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #9
  %5 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4
  %7 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %7, %"class.WTF::String"* dereferenceable(8) %6) #9
  %9 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %5, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %9, %15
  br i1 %16, label %52, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 0, i32 1, i32 0
  %19 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %18, align 8
  %20 = icmp eq %"class.blink::MediaSourceAttachment"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #9
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %28

28:                                               ; preds = %17, %21, %25
  %29 = bitcast %"class.blink::MediaSourceAttachment"* %19 to void (%"class.blink::MediaSourceAttachment"*)***
  %30 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %30, i64 5
  %32 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %31, align 8
  call void %32(%"class.blink::MediaSourceAttachment"* %19) #9
  %33 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %34 = load i32, i32* %12, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 %35
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %9
  br i1 %37, label %39, label %38

38:                                               ; preds = %28
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"* %7, %"struct.WTF::KeyValuePair"* %9) #9
  br label %39

39:                                               ; preds = %28, %38
  br i1 %20, label %52, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %19, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.blink::MediaSourceAttachment"*
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %46 to void (%"class.blink::MediaSourceAttachment"*)***
  %49 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %49, i64 1
  %51 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %50, align 8
  call void %51(%"class.blink::MediaSourceAttachment"* nonnull %47) #9
  br label %52

52:                                               ; preds = %45, %40, %39, %2
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaSourceAttachment"* @_ZN5blink23MediaSourceRegistryImpl17LookupMediaSourceERKN3WTF6StringE(%"class.blink::MediaSourceRegistryImpl"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %4) #9
  %5 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #9
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1, i32 0
  %10 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %9, align 8
  %11 = icmp eq %"class.blink::MediaSourceAttachment"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %2, %8, %12, %16
  %20 = phi %"class.blink::MediaSourceAttachment"* [ null, %8 ], [ %10, %12 ], [ %10, %16 ], [ null, %2 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %4) #9
  ret %"class.blink::MediaSourceAttachment"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MediaSourceRegistryImplC2Ev(%"class.blink::MediaSourceRegistryImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23MediaSourceRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"* %4, i1 zeroext false) #9
  %5 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2
  %6 = bitcast %"class.WTF::HashMap"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #9
  tail call void @_ZN5blink21MediaSourceAttachment11SetRegistryEPNS_19MediaSourceRegistryE(%"class.blink::MediaSourceRegistry"* %2) #9
  ret void
}

declare void @_ZN5blink21MediaSourceAttachment11SetRegistryEPNS_19MediaSourceRegistryE(%"class.blink::MediaSourceRegistry"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23MediaSourceRegistryImplD2Ev(%"class.blink::MediaSourceRegistryImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23MediaSourceRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %56, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %51, %10
  %13 = phi i64 [ 0, %10 ], [ %52, %51 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %51, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %19, align 8
  %21 = icmp eq %"class.blink::MediaSourceAttachment"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.blink::MediaSourceAttachment"*
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %28 to void (%"class.blink::MediaSourceAttachment"*)***
  %31 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %31, i64 1
  %33 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %32, align 8
  tail call void %33(%"class.blink::MediaSourceAttachment"* nonnull %29) #9
  br label %34

34:                                               ; preds = %27, %22, %18
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %51

51:                                               ; preds = %50, %47, %34, %12
  %52 = add nuw nsw i64 %13, 1
  %53 = icmp eq i64 %52, %11
  br i1 %53, label %54, label %12

54:                                               ; preds = %51, %6
  %55 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #9
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %56

56:                                               ; preds = %1, %54
  %57 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %57) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23MediaSourceRegistryImplD0Ev(%"class.blink::MediaSourceRegistryImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink23MediaSourceRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %56, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %51, %10
  %13 = phi i64 [ 0, %10 ], [ %52, %51 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %51, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %19, align 8
  %21 = icmp eq %"class.blink::MediaSourceAttachment"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.blink::MediaSourceAttachment"*
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %28 to void (%"class.blink::MediaSourceAttachment"*)***
  %31 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %31, i64 1
  %33 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %32, align 8
  tail call void %33(%"class.blink::MediaSourceAttachment"* nonnull %29) #9
  br label %34

34:                                               ; preds = %27, %22, %18
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %51

51:                                               ; preds = %50, %47, %34, %12
  %52 = add nuw nsw i64 %13, 1
  %53 = icmp eq i64 %52, %11
  br i1 %53, label %54, label %12

54:                                               ; preds = %51, %6
  %55 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #9
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %56

56:                                               ; preds = %1, %54
  %57 = getelementptr inbounds %"class.blink::MediaSourceRegistryImpl", %"class.blink::MediaSourceRegistryImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"* %57) #9
  %58 = bitcast %"class.blink::MediaSourceRegistryImpl"* %0 to i8*
  tail call void @free(i8* %58) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::URLRegistrable"* @_ZN5blink11URLRegistry6LookupERKN3WTF6StringE(%"class.blink::URLRegistry"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::URLRegistrable"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11URLRegistry8ContainsERKN3WTF6StringE(%"class.blink::URLRegistry"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF9MutexBaseC2Eb(%"class.WTF::MutexBase"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF9MutexBaseD2Ev(%"class.WTF::MutexBase"*) unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.1* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #9
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #9
  br i1 %57, label %151, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #9
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #9
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !4

96:                                               ; preds = %87
  tail call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #9
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %120 = bitcast %class.scoped_refptr.1* %2 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.blink::MediaSourceAttachment"* null, %"class.blink::MediaSourceAttachment"** %119, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %123 = bitcast %class.scoped_refptr.1* %122 to i64*
  %124 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %122, i64 0, i32 0
  %125 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %124, align 8
  store i64 %121, i64* %123, align 8
  %126 = icmp eq %"class.blink::MediaSourceAttachment"* %125, null
  br i1 %126, label %139, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %125, i64 0, i32 1, i32 0
  %129 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %139

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %128, i64 -2
  %134 = bitcast %"class.base::RefCountedThreadSafe"* %133 to %"class.blink::MediaSourceAttachment"*
  %135 = bitcast %"class.base::RefCountedThreadSafe"* %133 to void (%"class.blink::MediaSourceAttachment"*)***
  %136 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %136, i64 1
  %138 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %137, align 8
  tail call void %138(%"class.blink::MediaSourceAttachment"* nonnull %134) #9
  br label %139

139:                                              ; preds = %118, %127, %132
  %140 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  %143 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %144 = load i32, i32* %143, align 8
  %145 = add i32 %144, %142
  %146 = shl i32 %145, 1
  %147 = load i32, i32* %12, align 8
  %148 = icmp ult i32 %146, %147
  br i1 %148, label %151, label %149

149:                                              ; preds = %139
  %150 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %151

151:                                              ; preds = %54, %139, %149
  %152 = phi i8 [ 1, %139 ], [ 1, %149 ], [ 0, %54 ]
  %153 = phi %"struct.WTF::KeyValuePair"* [ %79, %139 ], [ %150, %149 ], [ %47, %54 ]
  %154 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %153, 0
  %155 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %154, i8 %152, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %155
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink21MediaSourceAttachmentEEEEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #9
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %89

24:                                               ; preds = %151
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %152, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %155, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %153, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %85, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %83, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %80, %39
  %42 = phi i64 [ 0, %39 ], [ %81, %80 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %80, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0
  %49 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %48, align 8
  %50 = icmp eq %"class.blink::MediaSourceAttachment"* %49, null
  br i1 %50, label %63, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %49, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe"* %57 to %"class.blink::MediaSourceAttachment"*
  %59 = bitcast %"class.base::RefCountedThreadSafe"* %57 to void (%"class.blink::MediaSourceAttachment"*)***
  %60 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %60, i64 1
  %62 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %61, align 8
  call void %62(%"class.blink::MediaSourceAttachment"* nonnull %58) #9
  br label %63

63:                                               ; preds = %56, %51, %47
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #9
  br label %80

80:                                               ; preds = %79, %76, %63, %41
  %81 = add nuw nsw i64 %42, 1
  %82 = icmp eq i64 %81, %40
  br i1 %82, label %83, label %41

83:                                               ; preds = %80, %37
  %84 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %85

85:                                               ; preds = %28, %83
  %86 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, -2147483648
  store i32 %88, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair"* %33

89:                                               ; preds = %21, %151
  %90 = phi i64 [ %152, %151 ], [ %23, %21 ]
  %91 = phi i32 [ %153, %151 ], [ %13, %21 ]
  %92 = phi %"struct.WTF::KeyValuePair"* [ %154, %151 ], [ %22, %21 ]
  %93 = phi %"struct.WTF::KeyValuePair"* [ %155, %151 ], [ null, %21 ]
  %94 = phi i32 [ %156, %151 ], [ 0, %21 ]
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 %95
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"struct.WTF::KeyValuePair"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  switch i64 %99, label %100 [
    i64 -1, label %151
    i64 0, label %151
  ]

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 0, i32 0
  %102 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %101) #9
  %103 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %102, 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 1, i32 0
  %105 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %104, align 8
  %106 = icmp eq %"class.blink::MediaSourceAttachment"* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %105, i64 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %119

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %108, i64 -2
  %114 = bitcast %"class.base::RefCountedThreadSafe"* %113 to %"class.blink::MediaSourceAttachment"*
  %115 = bitcast %"class.base::RefCountedThreadSafe"* %113 to void (%"class.blink::MediaSourceAttachment"*)***
  %116 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %116, i64 1
  %118 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %117, align 8
  call void %118(%"class.blink::MediaSourceAttachment"* nonnull %114) #9
  br label %119

119:                                              ; preds = %112, %107, %100
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %119, %132, %135
  %137 = load i64, i64* %98, align 8
  %138 = bitcast %"struct.WTF::KeyValuePair"* %103 to i64*
  store i64 %137, i64* %138, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %97, align 8
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 1
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 %95, i32 1
  %141 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %140, i64 0, i32 0
  %142 = bitcast %class.scoped_refptr.1* %140 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %class.scoped_refptr.1* %139 to i64*
  store i64 %143, i64* %144, align 8
  store %"class.blink::MediaSourceAttachment"* null, %"class.blink::MediaSourceAttachment"** %141, align 8
  %145 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %145, i64 %95
  %147 = icmp eq %"struct.WTF::KeyValuePair"* %146, %3
  %148 = select i1 %147, %"struct.WTF::KeyValuePair"* %103, %"struct.WTF::KeyValuePair"* %93
  %149 = load i32, i32* %12, align 8
  %150 = ptrtoint %"struct.WTF::KeyValuePair"* %145 to i64
  br label %151

151:                                              ; preds = %89, %89, %136
  %152 = phi i64 [ %90, %89 ], [ %150, %136 ], [ %90, %89 ]
  %153 = phi i32 [ %91, %89 ], [ %149, %136 ], [ %91, %89 ]
  %154 = phi %"struct.WTF::KeyValuePair"* [ %92, %89 ], [ %145, %136 ], [ %92, %89 ]
  %155 = phi %"struct.WTF::KeyValuePair"* [ %93, %89 ], [ %148, %136 ], [ %93, %89 ]
  %156 = add i32 %94, 1
  %157 = icmp eq i32 %156, %153
  br i1 %157, label %24, label %89
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #9
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #9
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::MediaSourceAttachment"*, %"class.blink::MediaSourceAttachment"** %3, align 8
  %5 = icmp eq %"class.blink::MediaSourceAttachment"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::MediaSourceAttachment"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::MediaSourceAttachment"*)***
  %15 = load void (%"class.blink::MediaSourceAttachment"*)**, void (%"class.blink::MediaSourceAttachment"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %15, i64 1
  %17 = load void (%"class.blink::MediaSourceAttachment"*)*, void (%"class.blink::MediaSourceAttachment"*)** %16, align 8
  tail call void %17(%"class.blink::MediaSourceAttachment"* nonnull %13) #9
  br label %18

18:                                               ; preds = %11, %6, %2
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, 1
  %40 = and i32 %39, 2147483647
  %41 = and i32 %38, -2147483648
  %42 = or i32 %40, %41
  store i32 %42, i32* %37, align 8
  %43 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, -1
  store i32 %45, i32* %43, align 4
  %46 = mul i32 %45, 6
  %47 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp ult i32 %46, %48
  %50 = icmp ugt i32 %48, 8
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %35
  %53 = lshr i32 %48, 1
  %54 = zext i32 %53 to i64
  %55 = shl nuw nsw i64 %54, 4
  %56 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %55, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringE13scoped_refptrIN5blink21MediaSourceAttachmentEEEEEEPKcv, i64 0, i64 0)) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %56, i8 0, i64 %55, i1 false) #9
  %57 = bitcast i8* %56 to %"struct.WTF::KeyValuePair"*
  %58 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %57, i32 %53, %"struct.WTF::KeyValuePair"* null) #9
  br label %59

59:                                               ; preds = %52, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_13scoped_refptrIN5blink21MediaSourceAttachmentEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair"* %62
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
