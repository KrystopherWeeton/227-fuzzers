; ModuleID = '../../v8/src/heap/base/stack.cc'
source_filename = "../../v8/src/heap/base/stack.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.heap::base::Stack" = type { i8* }
%"class.heap::base::StackVisitor" = type { i32 (...)** }

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"0u == reinterpret_cast<uintptr_t>(current) & (kMinStackAlignment - 1)\00", align 1

@_ZN4heap4base5StackC1EPKv = hidden unnamed_addr alias void (%"class.heap::base::Stack"*, i8*), void (%"class.heap::base::Stack"*, i8*)* @_ZN4heap4base5StackC2EPKv

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4heap4base5StackC2EPKv(%"class.heap::base::Stack"* nocapture, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.heap::base::Stack", %"class.heap::base::Stack"* %0, i64 0, i32 0
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4heap4base5Stack9IsOnStackEPv(%"class.heap::base::Stack"* nocapture readonly, i8* readnone) local_unnamed_addr #1 align 2 {
  %3 = tail call i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() #5
  %4 = inttoptr i64 %3 to i8*
  %5 = icmp ugt i8* %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.heap::base::Stack", %"class.heap::base::Stack"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp uge i8* %8, %1
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ false, %2 ], [ %9, %6 ]
  ret i1 %11
}

declare i64 @_ZN2v84base5Stack23GetCurrentStackPositionEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4heap4base5Stack15IteratePointersEPNS0_12StackVisitorE(%"class.heap::base::Stack"*, %"class.heap::base::StackVisitor"*) local_unnamed_addr #1 align 2 {
  tail call void @PushAllRegistersAndIterateStack(%"class.heap::base::Stack"* %0, %"class.heap::base::StackVisitor"* %1, void (%"class.heap::base::Stack"*, %"class.heap::base::StackVisitor"*, i64*)* nonnull @_ZN4heap4base12_GLOBAL__N_119IteratePointersImplEPKNS0_5StackEPNS0_12StackVisitorEPl) #5
  ret void
}

declare void @PushAllRegistersAndIterateStack(%"class.heap::base::Stack"*, %"class.heap::base::StackVisitor"*, void (%"class.heap::base::Stack"*, %"class.heap::base::StackVisitor"*, i64*)*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define internal void @_ZN4heap4base12_GLOBAL__N_119IteratePointersImplEPKNS0_5StackEPNS0_12StackVisitorEPl(%"class.heap::base::Stack"* nocapture readonly, %"class.heap::base::StackVisitor"*, i64*) #3 {
  %4 = ptrtoint i64* %2 to i64
  %5 = and i64 %4, 7
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

8:                                                ; preds = %3
  %9 = bitcast i64* %2 to i8*
  %10 = getelementptr inbounds %"class.heap::base::Stack", %"class.heap::base::Stack"* %0, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ugt i8* %11, %9
  br i1 %12, label %13, label %30

13:                                               ; preds = %8
  %14 = bitcast i64* %2 to i8**
  %15 = bitcast %"class.heap::base::StackVisitor"* %1 to void (%"class.heap::base::StackVisitor"*, i8*)***
  br label %16

16:                                               ; preds = %13, %25
  %17 = phi i8* [ %11, %13 ], [ %26, %25 ]
  %18 = phi i8** [ %14, %13 ], [ %27, %25 ]
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = load void (%"class.heap::base::StackVisitor"*, i8*)**, void (%"class.heap::base::StackVisitor"*, i8*)*** %15, align 8
  %23 = load void (%"class.heap::base::StackVisitor"*, i8*)*, void (%"class.heap::base::StackVisitor"*, i8*)** %22, align 8
  tail call void %23(%"class.heap::base::StackVisitor"* %1, i8* nonnull %19) #5
  %24 = load i8*, i8** %10, align 8
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i8* [ %17, %16 ], [ %24, %21 ]
  %27 = getelementptr inbounds i8*, i8** %18, i64 1
  %28 = bitcast i8** %27 to i8*
  %29 = icmp ugt i8* %26, %28
  br i1 %29, label %16, label %30

30:                                               ; preds = %25, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4heap4base5Stack21IteratePointersUnsafeEPNS0_12StackVisitorEm(%"class.heap::base::Stack"* nocapture readonly, %"class.heap::base::StackVisitor"*, i64) local_unnamed_addr #1 align 2 {
  %4 = inttoptr i64 %2 to i64*
  tail call void @_ZN4heap4base12_GLOBAL__N_119IteratePointersImplEPKNS0_5StackEPNS0_12StackVisitorEPl(%"class.heap::base::Stack"* %0, %"class.heap::base::StackVisitor"* %1, i64* %4)
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
