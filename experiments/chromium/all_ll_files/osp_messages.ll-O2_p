; ModuleID = 'gen/third_party/openscreen/src/osp/msgs/osp_messages.cc'
source_filename = "gen/third_party/openscreen/src/osp/msgs/osp_messages.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.openscreen::msgs::CborEncodeBuffer" = type { i64, i64, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"struct.openscreen::msgs::PresentationConnectionMessage::Message" = type { i32, %union.anon.7 }
%union.anon.7 = type { %"class.std::__1::vector" }
%struct.CborValue = type { %struct.CborParser*, i8*, i32, i16, i8, i8 }
%struct.CborParser = type { i8*, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.openscreen::msgs::AgentInfoResponse" = type { i64, %"struct.openscreen::msgs::AgentInfo" }
%"struct.openscreen::msgs::AgentInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%struct.CborEncoder = type { %union.anon.6, i8*, i64, i32 }
%union.anon.6 = type { i8* }
%"struct.openscreen::msgs::AgentStatusRequest" = type { i64, i8, %"struct.openscreen::msgs::Status" }
%"struct.openscreen::msgs::Status" = type { %"class.std::__1::basic_string" }
%"struct.openscreen::msgs::AgentStatusResponse" = type { i64, i8, %"struct.openscreen::msgs::Status" }
%"struct.openscreen::msgs::AuthenticationRequest" = type { i64, i64, %"class.std::__1::vector", i64 }
%"struct.openscreen::msgs::AuthenticationResponse" = type { i64, i64, %"class.std::__1::vector" }
%"struct.openscreen::msgs::AuthenticationResult" = type { i64 }
%"struct.openscreen::msgs::PresentationConnectionCloseEvent" = type { i64, i64, i8, %"class.std::__1::basic_string" }
%"struct.openscreen::msgs::PresentationConnectionCloseRequest" = type { i64, i64 }
%"struct.openscreen::msgs::PresentationConnectionCloseResponse" = type { i64, i64 }
%"struct.openscreen::msgs::PresentationConnectionMessage" = type { i64, %"struct.openscreen::msgs::PresentationConnectionMessage::Message" }
%"struct.openscreen::msgs::PresentationConnectionOpenRequest" = type { i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.openscreen::msgs::PresentationConnectionOpenResponse" = type { i64, i64, i64 }
%"struct.openscreen::msgs::PresentationStartRequest" = type { i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"*, %"class.std::__1::__compressed_pair.10" }
%"struct.openscreen::msgs::HttpHeader" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.openscreen::msgs::HttpHeader"* }
%"struct.openscreen::msgs::PresentationStartResponse" = type { i64, i64, i64 }
%"struct.openscreen::msgs::PresentationTerminationEvent" = type { %"class.std::__1::basic_string", i64 }
%"struct.openscreen::msgs::PresentationTerminationRequest" = type { i64, %"class.std::__1::basic_string", i64 }
%"struct.openscreen::msgs::PresentationTerminationResponse" = type { i64, i64 }
%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent" = type { i64, %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { i64*, i64*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64* }
%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest" = type { i64, %"class.std::__1::vector.23", i64, i64 }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::basic_string"* }
%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse" = type { i64, %"class.std::__1::vector.15" }
%"struct.openscreen::msgs::AgentInfoRequest" = type { i64 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN10openscreen4msgs10HttpHeaderENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN10openscreen4msgs15UrlAvailabilityENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8__appendEm = comdat any

@_ZN10openscreen4msgs16CborEncodeBuffer31kDefaultInitialEncodeBufferSizeE = hidden local_unnamed_addr constant i64 250, align 8
@_ZN10openscreen4msgs16CborEncodeBuffer27kDefaultMaxEncodeBufferSizeE = hidden local_unnamed_addr constant i64 64000, align 8
@.str = private unnamed_addr constant [7 x i8] c"status\00", align 1

@_ZN10openscreen4msgs16CborEncodeBufferC1Ev = hidden unnamed_addr alias void (%"class.openscreen::msgs::CborEncodeBuffer"*), void (%"class.openscreen::msgs::CborEncodeBuffer"*)* @_ZN10openscreen4msgs16CborEncodeBufferC2Ev
@_ZN10openscreen4msgs16CborEncodeBufferC1Emm = hidden unnamed_addr alias void (%"class.openscreen::msgs::CborEncodeBuffer"*, i64, i64), void (%"class.openscreen::msgs::CborEncodeBuffer"*, i64, i64)* @_ZN10openscreen4msgs16CborEncodeBufferC2Emm
@_ZN10openscreen4msgs16CborEncodeBufferD1Ev = hidden unnamed_addr alias void (%"class.openscreen::msgs::CborEncodeBuffer"*), void (%"class.openscreen::msgs::CborEncodeBuffer"*)* @_ZN10openscreen4msgs16CborEncodeBufferD2Ev
@_ZN10openscreen4msgs29PresentationConnectionMessage7MessageC1Ev = hidden unnamed_addr alias void (%"struct.openscreen::msgs::PresentationConnectionMessage::Message"*), void (%"struct.openscreen::msgs::PresentationConnectionMessage::Message"*)* @_ZN10openscreen4msgs29PresentationConnectionMessage7MessageC2Ev
@_ZN10openscreen4msgs29PresentationConnectionMessage7MessageD1Ev = hidden unnamed_addr alias void (%"struct.openscreen::msgs::PresentationConnectionMessage::Message"*), void (%"struct.openscreen::msgs::PresentationConnectionMessage::Message"*)* @_ZN10openscreen4msgs29PresentationConnectionMessage7MessageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10openscreen4msgs9ExpectKeyEP9CborValuem(%struct.CborValue*, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %6
  %12 = and i8 %8, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* %0) #13
  br label %20

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %0, i64 0, i32 3
  %18 = load i16, i16* %17, align 4
  %19 = zext i16 %18 to i64
  br label %20

20:                                               ; preds = %16, %14
  %21 = phi i64 [ %15, %14 ], [ %19, %16 ]
  %22 = icmp eq i64 %21, %1
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = tail call i32 @cbor_value_advance_fixed(%struct.CborValue* %0) #13
  %25 = and i32 %24, 2147483647
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 0, i32 %24
  br label %28

28:                                               ; preds = %2, %20, %23, %6
  %29 = phi i32 [ 519, %6 ], [ 519, %20 ], [ %27, %23 ], [ 519, %2 ]
  ret i32 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @cbor_value_advance_fixed(%struct.CborValue*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10openscreen4msgs9ExpectKeyEP9CborValuePKcm(%struct.CborValue*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 96
  br i1 %8, label %9, label %89

9:                                                ; preds = %3
  %10 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i64 0, i64* %4, align 8
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %87

15:                                               ; preds = %9
  %16 = and i8 %12, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = tail call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* %0) #13
  br label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %0, i64 0, i32 3
  %22 = load i16, i16* %21, align 4
  %23 = zext i16 %22 to i64
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi i64 [ %19, %18 ], [ %23, %20 ]
  store i64 %25, i64* %4, align 8
  %26 = icmp eq i64 %25, %2
  br i1 %26, label %27, label %87

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %32 = icmp ugt i64 %2, -17
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  br i1 %32, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #14
  unreachable

36:                                               ; preds = %27
  %37 = icmp ult i64 %2, 23
  br i1 %37, label %44, label %38

38:                                               ; preds = %36
  %39 = add nuw i64 %2, 16
  %40 = and i64 %39, -16
  %41 = tail call i8* @_Znwm(i64 %40) #15
  store i8* %41, i8** %29, align 8
  %42 = or i64 %40, -9223372036854775808
  store i64 %42, i64* %31, align 8
  store i64 %2, i64* %30, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %49

44:                                               ; preds = %36
  %45 = trunc i64 %2 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 %45, i8* %47, align 1
  %48 = icmp eq i64 %2, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %38
  %50 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %44 ], [ %43, %38 ]
  %51 = phi i8* [ %28, %44 ], [ %41, %38 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %51, i8 0, i64 %2, i1 false) #13
  br label %52

52:                                               ; preds = %44, %49
  %53 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %46, %44 ], [ %50, %49 ]
  %54 = phi i8* [ %28, %44 ], [ %51, %49 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %2
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i8*, i8** %29, align 8
  %60 = select i1 %58, i8* %59, i8* %28
  %61 = call i32 @_cbor_value_copy_string(%struct.CborValue* %0, i8* %60, i64* nonnull %4, %struct.CborValue* null) #13
  %62 = and i32 %61, 2147483647
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %80

64:                                               ; preds = %52
  %65 = call i64 @strlen(i8* %1) #13
  %66 = load i8, i8* %56, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i64, i64* %30, align 8
  %69 = zext i8 %66 to i64
  %70 = select i1 %67, i64 %68, i64 %69
  %71 = icmp eq i64 %65, %70
  br i1 %71, label %72, label %80

72:                                               ; preds = %64
  %73 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* %1, i64 %65) #13
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %72
  %76 = call i32 @cbor_value_advance(%struct.CborValue* %0) #13
  %77 = and i32 %76, 2147483647
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %78, i32 0, i32 %76
  br label %80

80:                                               ; preds = %72, %64, %75, %52
  %81 = phi i32 [ %61, %52 ], [ 519, %72 ], [ %79, %75 ], [ 519, %64 ]
  %82 = load i8, i8* %56, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %85) #15
  br label %86

86:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  br label %87

87:                                               ; preds = %9, %24, %86
  %88 = phi i32 [ %81, %86 ], [ 519, %24 ], [ 2, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %89

89:                                               ; preds = %3, %87
  %90 = phi i32 [ %88, %87 ], [ 519, %3 ]
  ret i32 %90
}

declare i32 @cbor_value_advance(%struct.CborValue*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen4msgs16CborEncodeBufferC2Ev(%"class.openscreen::msgs::CborEncodeBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.openscreen::msgs::CborEncodeBuffer"* %0 to <2 x i64>*
  store <2 x i64> <i64 64000, i64 0>, <2 x i64>* %2, align 8
  %3 = tail call i8* @_Znwm(i64 250) #15
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  store i8* %3, i8** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 250
  %7 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i8* %6, i8** %7, align 8
  %8 = bitcast i8** %4 to i64*
  %9 = ptrtoint i8* %3 to i64
  %10 = sub i64 250, %9
  %11 = getelementptr i8, i8* %3, i64 %10
  %12 = ptrtoint i8* %11 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %3, i8 0, i64 %12, i1 false) #13
  %13 = ptrtoint i8* %6 to i64
  store i64 %13, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen4msgs16CborEncodeBufferC2Emm(%"class.openscreen::msgs::CborEncodeBuffer"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 0
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2
  %7 = icmp eq i64 %1, 0
  %8 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  br i1 %7, label %25, label %9

9:                                                ; preds = %3
  %10 = icmp slt i64 %1, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #14
  unreachable

13:                                               ; preds = %9
  %14 = tail call i8* @_Znwm(i64 %1) #15
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  %18 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = bitcast i8** %15 to i64*
  %20 = ptrtoint i8* %14 to i64
  %21 = sub i64 %1, %20
  %22 = getelementptr i8, i8* %14, i64 %21
  %23 = ptrtoint i8* %22 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 0, i64 %23, i1 false) #13
  %24 = ptrtoint i8* %17 to i64
  store i64 %24, i64* %19, align 8
  br label %25

25:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen4msgs16CborEncodeBufferD2Ev(%"class.openscreen::msgs::CborEncodeBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #15
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs16CborEncodeBuffer7SetTypeEPKhm(%"class.openscreen::msgs::CborEncodeBuffer"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp ult i64 %13, %2
  %15 = inttoptr i64 %9 to i8*
  br i1 %14, label %16, label %38

16:                                               ; preds = %3
  %17 = icmp slt i64 %2, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = sub nsw i64 0, %2
  %20 = icmp ult i64 %10, %19
  br i1 %20, label %44, label %27

21:                                               ; preds = %16
  %22 = add i64 %7, %2
  %23 = sub i64 %22, %9
  %24 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %23, %25
  br i1 %26, label %44, label %27

27:                                               ; preds = %21, %18
  %28 = add i64 %10, %2
  %29 = icmp ult i64 %10, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %4, i64 %2) #13
  %31 = load i64, i64* %11, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %38

34:                                               ; preds = %27
  %35 = icmp ugt i64 %10, %28
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = getelementptr inbounds i8, i8* %15, i64 %28
  store i8* %37, i8** %5, align 8
  br label %38

38:                                               ; preds = %36, %34, %30, %3
  %39 = phi i8* [ %15, %36 ], [ %15, %34 ], [ %33, %30 ], [ %15, %3 ]
  %40 = phi i64 [ %12, %36 ], [ %12, %34 ], [ %31, %30 ], [ %12, %3 ]
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %1, i64 %2, i1 false)
  %42 = load i64, i64* %11, align 8
  %43 = add i64 %42, %2
  store i64 %43, i64* %11, align 8
  br label %44

44:                                               ; preds = %21, %18, %38
  %45 = phi i1 [ true, %38 ], [ false, %18 ], [ false, %21 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs16CborEncodeBuffer8ResizeByEl(%"class.openscreen::msgs::CborEncodeBuffer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = icmp slt i64 %1, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %4
  %7 = sub nsw i64 0, %1
  %8 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp ult i64 %14, %7
  br i1 %15, label %43, label %30

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %20, %1
  %24 = sub i64 %23, %22
  %25 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %24, %26
  br i1 %27, label %43, label %28

28:                                               ; preds = %16
  %29 = sub i64 %20, %22
  br label %30

30:                                               ; preds = %28, %6
  %31 = phi i64 [ %29, %28 ], [ %14, %6 ]
  %32 = phi i64 [ %22, %28 ], [ %13, %6 ]
  %33 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %34 = add i64 %31, %1
  %35 = icmp ult i64 %31, %34
  %36 = inttoptr i64 %32 to i8*
  br i1 %35, label %37, label %39

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %38, i64 %1) #13
  br label %43

39:                                               ; preds = %30
  %40 = icmp ugt i64 %31, %34
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = getelementptr inbounds i8, i8* %36, i64 %34
  store i8* %42, i8** %33, align 8
  br label %43

43:                                               ; preds = %41, %39, %37, %16, %6, %2
  %44 = phi i1 [ true, %2 ], [ false, %6 ], [ false, %16 ], [ true, %37 ], [ true, %39 ], [ true, %41 ]
  ret i1 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs16CborEncodeBuffer6AppendEm(%"class.openscreen::msgs::CborEncodeBuffer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = add i64 %11, %1
  %13 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = sub i64 %14, %11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %16, %4
  %20 = phi i64 [ %12, %4 ], [ %14, %16 ]
  %21 = phi i64 [ %1, %4 ], [ %17, %16 ]
  %22 = icmp ult i64 %11, %20
  %23 = inttoptr i64 %10 to i8*
  br i1 %22, label %24, label %25

24:                                               ; preds = %19
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %21) #13
  br label %29

25:                                               ; preds = %19
  %26 = icmp ugt i64 %11, %20
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %23, i64 %20
  store i8* %28, i8** %6, align 8
  br label %29

29:                                               ; preds = %24, %25, %27
  %30 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %0, i64 0, i32 1
  store i64 %11, i64* %30, align 8
  br label %31

31:                                               ; preds = %16, %2, %29
  %32 = phi i1 [ true, %29 ], [ false, %2 ], [ false, %16 ]
  ret i1 %32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs7IsErrorEl(i64) local_unnamed_addr #3 {
  %2 = icmp slt i64 %0, 0
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs23EncodeAgentInfoResponseERKNS0_17AgentInfoResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::AgentInfoResponse"* dereferenceable(56), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %120, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = icmp eq i64 %39, %40
  %44 = inttoptr i64 %41 to i8*
  br i1 %43, label %45, label %58

45:                                               ; preds = %38
  %46 = add i64 %42, 1
  %47 = sub i64 %46, %41
  %48 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %120, label %51

51:                                               ; preds = %45
  %52 = icmp eq i64 %40, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 1) #13
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  br label %58

57:                                               ; preds = %51
  store i8* %44, i8** %4, align 8
  br label %58

58:                                               ; preds = %38, %53, %57
  %59 = phi i8* [ %44, %57 ], [ %56, %53 ], [ %44, %38 ]
  %60 = phi i64 [ -1, %57 ], [ %54, %53 ], [ %40, %38 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8 11, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %65 = load i64, i64* %5, align 8
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %65, %66
  %68 = sub i64 %67, %63
  %69 = inttoptr i64 %66 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %63
  %71 = tail call i64 @_ZN10openscreen4msgs23EncodeAgentInfoResponseERKNS0_17AgentInfoResponseEPhm(%"struct.openscreen::msgs::AgentInfoResponse"* dereferenceable(56) %0, i8* %70, i64 %68)
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %58, %110
  %74 = phi i64 [ %118, %110 ], [ %71, %58 ]
  %75 = phi i64 [ %115, %110 ], [ %68, %58 ]
  %76 = icmp sle i64 %74, %75
  %77 = sub i64 %74, %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = icmp slt i64 %77, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = sub nsw i64 0, %77
  %83 = load i64, i64* %5, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 %83, %84
  %86 = icmp ult i64 %85, %82
  br i1 %86, label %107, label %96

87:                                               ; preds = %79
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %88, %77
  %91 = sub i64 %90, %89
  %92 = load i64, i64* %64, align 8
  %93 = icmp ugt i64 %91, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = sub i64 %88, %89
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i64 [ %95, %94 ], [ %85, %81 ]
  %98 = phi i64 [ %89, %94 ], [ %84, %81 ]
  %99 = add i64 %97, %77
  %100 = icmp ult i64 %97, %99
  %101 = inttoptr i64 %98 to i8*
  br i1 %100, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %77) #13
  br label %107

103:                                              ; preds = %96
  %104 = icmp ugt i64 %97, %99
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8* %106, i8** %4, align 8
  br label %107

107:                                              ; preds = %73, %81, %87, %102, %103, %105
  %108 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %87 ], [ false, %102 ], [ false, %103 ], [ false, %105 ]
  %109 = or i1 %76, %108
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %10, align 8
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = sub i64 %114, %111
  %116 = inttoptr i64 %113 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %111
  %118 = tail call i64 @_ZN10openscreen4msgs23EncodeAgentInfoResponseERKNS0_17AgentInfoResponseEPhm(%"struct.openscreen::msgs::AgentInfoResponse"* dereferenceable(56) %0, i8* %117, i64 %115)
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %73

120:                                              ; preds = %107, %110, %58, %45, %18
  %121 = phi i1 [ false, %18 ], [ false, %45 ], [ false, %58 ], [ false, %110 ], [ %76, %107 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs23EncodeAgentInfoResponseERKNS0_17AgentInfoResponseEPhm(%"struct.openscreen::msgs::AgentInfoResponse"* dereferenceable(56), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %8 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %10 = and i32 %9, 2147483647
  %11 = icmp eq i32 %10, 0
  %12 = sub nsw i32 0, %9
  %13 = sext i32 %12 to i64
  br i1 %11, label %14, label %123

14:                                               ; preds = %3
  %15 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %123

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %22) #13
  %24 = and i32 %23, 2147483647
  %25 = icmp eq i32 %24, 0
  %26 = sub nsw i32 0, %23
  %27 = sext i32 %26 to i64
  br i1 %25, label %28, label %123

28:                                               ; preds = %20
  %29 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %30 = and i32 %29, 2147483647
  %31 = icmp eq i32 %30, 0
  %32 = sub nsw i32 0, %29
  %33 = sext i32 %32 to i64
  br i1 %31, label %34, label %123

34:                                               ; preds = %28
  %35 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 2) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %121

41:                                               ; preds = %34
  %42 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %6, i64 0) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %121

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 1, i32 0
  %49 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %48)
  br i1 %49, label %50, label %121

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %60 = zext i8 %53 to i64
  %61 = select i1 %54, i8* %56, i8* %59
  %62 = select i1 %54, i64 %58, i64 %60
  %63 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* %61, i64 %62) #13
  %64 = and i32 %63, 2147483647
  %65 = icmp eq i32 %64, 0
  %66 = sub nsw i32 0, %63
  %67 = sext i32 %66 to i64
  br i1 %65, label %68, label %121

68:                                               ; preds = %50
  %69 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %6, i64 1) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = sub nsw i32 0, %69
  %73 = sext i32 %72 to i64
  br i1 %71, label %74, label %121

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 1, i32 1
  %76 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %75)
  br i1 %76, label %77, label %121

77:                                               ; preds = %74
  %78 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %87 = zext i8 %80 to i64
  %88 = select i1 %81, i8* %83, i8* %86
  %89 = select i1 %81, i64 %85, i64 %87
  %90 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* %88, i64 %89) #13
  %91 = and i32 %90, 2147483647
  %92 = icmp eq i32 %91, 0
  %93 = sub nsw i32 0, %90
  %94 = sext i32 %93 to i64
  br i1 %92, label %95, label %121

95:                                               ; preds = %77
  %96 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %97 = and i32 %96, 2147483647
  %98 = icmp eq i32 %97, 0
  %99 = sub nsw i32 0, %96
  %100 = sext i32 %99 to i64
  br i1 %98, label %101, label %121

101:                                              ; preds = %95
  %102 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %103 = and i32 %102, 2147483647
  %104 = icmp eq i32 %103, 0
  %105 = sub nsw i32 0, %102
  %106 = sext i32 %105 to i64
  br i1 %104, label %107, label %121

107:                                              ; preds = %101
  %108 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, null
  %111 = bitcast %struct.CborEncoder* %4 to i64*
  %112 = load i64, i64* %111, align 8
  br i1 %110, label %113, label %117

113:                                              ; preds = %107
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = add i64 %112, %2
  br label %121

117:                                              ; preds = %107, %113
  %118 = phi i64 [ 0, %113 ], [ %112, %107 ]
  %119 = ptrtoint i8* %1 to i64
  %120 = sub i64 %118, %119
  br label %121

121:                                              ; preds = %115, %117, %74, %47, %101, %95, %77, %68, %50, %41, %34
  %122 = phi i64 [ %106, %101 ], [ %100, %95 ], [ %94, %77 ], [ %73, %68 ], [ %67, %50 ], [ %46, %41 ], [ %40, %34 ], [ -516, %47 ], [ -516, %74 ], [ %116, %115 ], [ %120, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  br label %123

123:                                              ; preds = %28, %20, %14, %3, %121
  %124 = phi i64 [ %122, %121 ], [ %33, %28 ], [ %27, %20 ], [ %19, %14 ], [ %13, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret i64 %124
}

declare void @cbor_encoder_init(%struct.CborEncoder*, i8*, i64, i32) local_unnamed_addr #2

declare i32 @cbor_encoder_create_map(%struct.CborEncoder*, %struct.CborEncoder*, i64) local_unnamed_addr #2

declare i32 @cbor_encode_uint(%struct.CborEncoder*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i8* %7, i8* %10
  %13 = select i1 %5, i64 %9, i64 %11
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = ptrtoint i8* %14 to i64
  %16 = icmp sgt i64 %13, 0
  br i1 %16, label %17, label %86

17:                                               ; preds = %1, %83
  %18 = phi i8* [ %84, %83 ], [ %12, %1 ]
  %19 = ptrtoint i8* %18 to i64
  %20 = sub i64 %15, %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %86, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds i8, i8* %18, i64 1
  %24 = load i8, i8* %18, align 1
  %25 = zext i8 %24 to i32
  %26 = icmp sgt i8 %24, -1
  br i1 %26, label %83, label %27

27:                                               ; preds = %22
  %28 = icmp ult i8 %24, -62
  br i1 %28, label %86, label %29, !prof !2

29:                                               ; preds = %27
  %30 = icmp ult i8 %24, -32
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = icmp ult i8 %24, -16
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = icmp ult i8 %24, -11
  br i1 %34, label %35, label %86

35:                                               ; preds = %33, %31, %29
  %36 = phi i32 [ 31, %29 ], [ 15, %31 ], [ 7, %33 ]
  %37 = phi i32 [ 2, %29 ], [ 3, %31 ], [ 4, %33 ]
  %38 = phi i32 [ 128, %29 ], [ 2048, %31 ], [ 65536, %33 ]
  %39 = and i32 %36, %25
  %40 = zext i32 %37 to i64
  %41 = icmp slt i64 %20, %40
  br i1 %41, label %86, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %18, i64 2
  %44 = load i8, i8* %23, align 1
  %45 = zext i8 %44 to i32
  %46 = and i32 %45, 192
  %47 = icmp eq i32 %46, 128
  br i1 %47, label %48, label %86

48:                                               ; preds = %42
  %49 = shl nuw nsw i32 %39, 6
  %50 = and i32 %45, 63
  %51 = or i32 %50, %49
  %52 = icmp ugt i32 %37, 2
  br i1 %52, label %53, label %74

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %18, i64 3
  %55 = load i8, i8* %43, align 1
  %56 = zext i8 %55 to i32
  %57 = and i32 %56, 192
  %58 = icmp eq i32 %57, 128
  br i1 %58, label %59, label %86

59:                                               ; preds = %53
  %60 = shl nuw nsw i32 %51, 6
  %61 = and i32 %56, 63
  %62 = or i32 %61, %60
  %63 = icmp ugt i32 %37, 3
  br i1 %63, label %64, label %74

64:                                               ; preds = %59
  %65 = load i8, i8* %54, align 1
  %66 = zext i8 %65 to i32
  %67 = and i32 %66, 192
  %68 = icmp eq i32 %67, 128
  br i1 %68, label %69, label %86

69:                                               ; preds = %64
  %70 = getelementptr inbounds i8, i8* %18, i64 4
  %71 = shl nuw nsw i32 %62, 6
  %72 = and i32 %66, 63
  %73 = or i32 %72, %71
  br label %74

74:                                               ; preds = %69, %59, %48
  %75 = phi i8* [ %70, %69 ], [ %54, %59 ], [ %43, %48 ]
  %76 = phi i32 [ %73, %69 ], [ %62, %59 ], [ %51, %48 ]
  %77 = icmp ult i32 %76, %38
  br i1 %77, label %86, label %78

78:                                               ; preds = %74
  %79 = and i32 %76, -2048
  %80 = icmp eq i32 %79, 55296
  %81 = icmp ugt i32 %76, 1114111
  %82 = or i1 %81, %80
  br i1 %82, label %86, label %83

83:                                               ; preds = %78, %22
  %84 = phi i8* [ %75, %78 ], [ %23, %22 ]
  %85 = icmp ult i8* %84, %14
  br i1 %85, label %17, label %86

86:                                               ; preds = %83, %17, %27, %33, %35, %42, %53, %64, %74, %78, %1
  %87 = phi i1 [ true, %1 ], [ false, %78 ], [ false, %74 ], [ false, %64 ], [ false, %53 ], [ false, %42 ], [ false, %35 ], [ false, %33 ], [ false, %27 ], [ false, %17 ], [ true, %83 ]
  ret i1 %87
}

declare i32 @cbor_encode_text_string(%struct.CborEncoder*, i8*, i64) local_unnamed_addr #2

declare i32 @cbor_encoder_close_container(%struct.CborEncoder*, %struct.CborEncoder*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs24EncodeAgentStatusRequestERKNS0_18AgentStatusRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::AgentStatusRequest"* dereferenceable(40), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %120, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = icmp eq i64 %39, %40
  %44 = inttoptr i64 %41 to i8*
  br i1 %43, label %45, label %58

45:                                               ; preds = %38
  %46 = add i64 %42, 1
  %47 = sub i64 %46, %41
  %48 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %120, label %51

51:                                               ; preds = %45
  %52 = icmp eq i64 %40, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 1) #13
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  br label %58

57:                                               ; preds = %51
  store i8* %44, i8** %4, align 8
  br label %58

58:                                               ; preds = %38, %53, %57
  %59 = phi i8* [ %44, %57 ], [ %56, %53 ], [ %44, %38 ]
  %60 = phi i64 [ -1, %57 ], [ %54, %53 ], [ %40, %38 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8 12, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %65 = load i64, i64* %5, align 8
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %65, %66
  %68 = sub i64 %67, %63
  %69 = inttoptr i64 %66 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %63
  %71 = tail call i64 @_ZN10openscreen4msgs24EncodeAgentStatusRequestERKNS0_18AgentStatusRequestEPhm(%"struct.openscreen::msgs::AgentStatusRequest"* dereferenceable(40) %0, i8* %70, i64 %68)
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %58, %110
  %74 = phi i64 [ %118, %110 ], [ %71, %58 ]
  %75 = phi i64 [ %115, %110 ], [ %68, %58 ]
  %76 = icmp sle i64 %74, %75
  %77 = sub i64 %74, %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = icmp slt i64 %77, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = sub nsw i64 0, %77
  %83 = load i64, i64* %5, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 %83, %84
  %86 = icmp ult i64 %85, %82
  br i1 %86, label %107, label %96

87:                                               ; preds = %79
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %88, %77
  %91 = sub i64 %90, %89
  %92 = load i64, i64* %64, align 8
  %93 = icmp ugt i64 %91, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = sub i64 %88, %89
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i64 [ %95, %94 ], [ %85, %81 ]
  %98 = phi i64 [ %89, %94 ], [ %84, %81 ]
  %99 = add i64 %97, %77
  %100 = icmp ult i64 %97, %99
  %101 = inttoptr i64 %98 to i8*
  br i1 %100, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %77) #13
  br label %107

103:                                              ; preds = %96
  %104 = icmp ugt i64 %97, %99
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8* %106, i8** %4, align 8
  br label %107

107:                                              ; preds = %73, %81, %87, %102, %103, %105
  %108 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %87 ], [ false, %102 ], [ false, %103 ], [ false, %105 ]
  %109 = or i1 %76, %108
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %10, align 8
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = sub i64 %114, %111
  %116 = inttoptr i64 %113 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %111
  %118 = tail call i64 @_ZN10openscreen4msgs24EncodeAgentStatusRequestERKNS0_18AgentStatusRequestEPhm(%"struct.openscreen::msgs::AgentStatusRequest"* dereferenceable(40) %0, i8* %117, i64 %115)
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %73

120:                                              ; preds = %107, %110, %58, %45, %18
  %121 = phi i1 [ false, %18 ], [ false, %45 ], [ false, %58 ], [ false, %110 ], [ %76, %107 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs24EncodeAgentStatusRequestERKNS0_18AgentStatusRequestEPhm(%"struct.openscreen::msgs::AgentStatusRequest"* dereferenceable(40), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %8 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = add nuw nsw i8 %10, 1
  %12 = zext i8 %11 to i64
  %13 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 %12) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %99

18:                                               ; preds = %3
  %19 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %20 = and i32 %19, 2147483647
  %21 = icmp eq i32 %20, 0
  %22 = sub nsw i32 0, %19
  %23 = sext i32 %22 to i64
  br i1 %21, label %24, label %99

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %26) #13
  %28 = and i32 %27, 2147483647
  %29 = icmp eq i32 %28, 0
  %30 = sub nsw i32 0, %27
  %31 = sext i32 %30 to i64
  br i1 %29, label %32, label %99

32:                                               ; preds = %24
  %33 = load i8, i8* %9, align 8, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %79, label %35

35:                                               ; preds = %32
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %99

41:                                               ; preds = %35
  %42 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false)
  %43 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 1) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %75

46:                                               ; preds = %41
  %47 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #13
  %48 = and i32 %47, 2147483647
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %75

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 2, i32 0
  %52 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %51)
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  br label %99

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %64 = zext i8 %57 to i64
  %65 = select i1 %58, i8* %60, i8* %63
  %66 = select i1 %58, i64 %62, i64 %64
  %67 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* %65, i64 %66) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %54
  %71 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  br label %79

75:                                               ; preds = %70, %54, %46, %41
  %76 = phi i32 [ %67, %54 ], [ %47, %46 ], [ %43, %41 ], [ %71, %70 ]
  %77 = sub nsw i32 0, %76
  %78 = sext i32 %77 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  br label %99

79:                                               ; preds = %74, %32
  %80 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %81 = and i32 %80, 2147483647
  %82 = icmp eq i32 %81, 0
  %83 = sub nsw i32 0, %80
  %84 = sext i32 %83 to i64
  br i1 %82, label %85, label %99

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  %89 = bitcast %struct.CborEncoder* %4 to i64*
  %90 = load i64, i64* %89, align 8
  br i1 %88, label %91, label %95

91:                                               ; preds = %85
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = add i64 %90, %2
  br label %99

95:                                               ; preds = %85, %91
  %96 = phi i64 [ 0, %91 ], [ %90, %85 ]
  %97 = ptrtoint i8* %1 to i64
  %98 = sub i64 %96, %97
  br label %99

99:                                               ; preds = %75, %53, %93, %95, %35, %79, %24, %18, %3
  %100 = phi i64 [ %84, %79 ], [ %78, %75 ], [ %40, %35 ], [ %31, %24 ], [ %23, %18 ], [ %17, %3 ], [ %94, %93 ], [ %98, %95 ], [ -516, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret i64 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs25EncodeAgentStatusResponseERKNS0_19AgentStatusResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::AgentStatusResponse"* dereferenceable(40), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %120, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = icmp eq i64 %39, %40
  %44 = inttoptr i64 %41 to i8*
  br i1 %43, label %45, label %58

45:                                               ; preds = %38
  %46 = add i64 %42, 1
  %47 = sub i64 %46, %41
  %48 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %120, label %51

51:                                               ; preds = %45
  %52 = icmp eq i64 %40, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 1) #13
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  br label %58

57:                                               ; preds = %51
  store i8* %44, i8** %4, align 8
  br label %58

58:                                               ; preds = %38, %53, %57
  %59 = phi i8* [ %44, %57 ], [ %56, %53 ], [ %44, %38 ]
  %60 = phi i64 [ -1, %57 ], [ %54, %53 ], [ %40, %38 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8 13, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %65 = load i64, i64* %5, align 8
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %65, %66
  %68 = sub i64 %67, %63
  %69 = inttoptr i64 %66 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %63
  %71 = tail call i64 @_ZN10openscreen4msgs25EncodeAgentStatusResponseERKNS0_19AgentStatusResponseEPhm(%"struct.openscreen::msgs::AgentStatusResponse"* dereferenceable(40) %0, i8* %70, i64 %68)
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %58, %110
  %74 = phi i64 [ %118, %110 ], [ %71, %58 ]
  %75 = phi i64 [ %115, %110 ], [ %68, %58 ]
  %76 = icmp sle i64 %74, %75
  %77 = sub i64 %74, %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = icmp slt i64 %77, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = sub nsw i64 0, %77
  %83 = load i64, i64* %5, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 %83, %84
  %86 = icmp ult i64 %85, %82
  br i1 %86, label %107, label %96

87:                                               ; preds = %79
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %88, %77
  %91 = sub i64 %90, %89
  %92 = load i64, i64* %64, align 8
  %93 = icmp ugt i64 %91, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = sub i64 %88, %89
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i64 [ %95, %94 ], [ %85, %81 ]
  %98 = phi i64 [ %89, %94 ], [ %84, %81 ]
  %99 = add i64 %97, %77
  %100 = icmp ult i64 %97, %99
  %101 = inttoptr i64 %98 to i8*
  br i1 %100, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %77) #13
  br label %107

103:                                              ; preds = %96
  %104 = icmp ugt i64 %97, %99
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8* %106, i8** %4, align 8
  br label %107

107:                                              ; preds = %73, %81, %87, %102, %103, %105
  %108 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %87 ], [ false, %102 ], [ false, %103 ], [ false, %105 ]
  %109 = or i1 %76, %108
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %10, align 8
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = sub i64 %114, %111
  %116 = inttoptr i64 %113 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %111
  %118 = tail call i64 @_ZN10openscreen4msgs25EncodeAgentStatusResponseERKNS0_19AgentStatusResponseEPhm(%"struct.openscreen::msgs::AgentStatusResponse"* dereferenceable(40) %0, i8* %117, i64 %115)
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %73

120:                                              ; preds = %107, %110, %58, %45, %18
  %121 = phi i1 [ false, %18 ], [ false, %45 ], [ false, %58 ], [ false, %110 ], [ %76, %107 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs25EncodeAgentStatusResponseERKNS0_19AgentStatusResponseEPhm(%"struct.openscreen::msgs::AgentStatusResponse"* dereferenceable(40), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %8 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = add nuw nsw i8 %10, 1
  %12 = zext i8 %11 to i64
  %13 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 %12) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %99

18:                                               ; preds = %3
  %19 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %20 = and i32 %19, 2147483647
  %21 = icmp eq i32 %20, 0
  %22 = sub nsw i32 0, %19
  %23 = sext i32 %22 to i64
  br i1 %21, label %24, label %99

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %26) #13
  %28 = and i32 %27, 2147483647
  %29 = icmp eq i32 %28, 0
  %30 = sub nsw i32 0, %27
  %31 = sext i32 %30 to i64
  br i1 %29, label %32, label %99

32:                                               ; preds = %24
  %33 = load i8, i8* %9, align 8, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %79, label %35

35:                                               ; preds = %32
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %99

41:                                               ; preds = %35
  %42 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false)
  %43 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 1) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %75

46:                                               ; preds = %41
  %47 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6) #13
  %48 = and i32 %47, 2147483647
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %75

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 2, i32 0
  %52 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %51)
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  br label %99

54:                                               ; preds = %50
  %55 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %64 = zext i8 %57 to i64
  %65 = select i1 %58, i8* %60, i8* %63
  %66 = select i1 %58, i64 %62, i64 %64
  %67 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* %65, i64 %66) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %54
  %71 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  br label %79

75:                                               ; preds = %70, %54, %46, %41
  %76 = phi i32 [ %67, %54 ], [ %47, %46 ], [ %43, %41 ], [ %71, %70 ]
  %77 = sub nsw i32 0, %76
  %78 = sext i32 %77 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  br label %99

79:                                               ; preds = %74, %32
  %80 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %81 = and i32 %80, 2147483647
  %82 = icmp eq i32 %81, 0
  %83 = sub nsw i32 0, %80
  %84 = sext i32 %83 to i64
  br i1 %82, label %85, label %99

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  %89 = bitcast %struct.CborEncoder* %4 to i64*
  %90 = load i64, i64* %89, align 8
  br i1 %88, label %91, label %95

91:                                               ; preds = %85
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = add i64 %90, %2
  br label %99

95:                                               ; preds = %85, %91
  %96 = phi i64 [ 0, %91 ], [ %90, %85 ]
  %97 = ptrtoint i8* %1 to i64
  %98 = sub i64 %96, %97
  br label %99

99:                                               ; preds = %75, %53, %93, %95, %35, %79, %24, %18, %3
  %100 = phi i64 [ %84, %79 ], [ %78, %75 ], [ %40, %35 ], [ %31, %24 ], [ %23, %18 ], [ %17, %3 ], [ %94, %93 ], [ %98, %95 ], [ -516, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret i64 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs27EncodeAuthenticationRequestERKNS0_21AuthenticationRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::AuthenticationRequest"* nocapture readonly dereferenceable(48), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 -5821, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs27EncodeAuthenticationRequestERKNS0_21AuthenticationRequestEPhm(%"struct.openscreen::msgs::AuthenticationRequest"* dereferenceable(48) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs27EncodeAuthenticationRequestERKNS0_21AuthenticationRequestEPhm(%"struct.openscreen::msgs::AuthenticationRequest"* dereferenceable(48) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs27EncodeAuthenticationRequestERKNS0_21AuthenticationRequestEPhm(%"struct.openscreen::msgs::AuthenticationRequest"* nocapture readonly dereferenceable(48), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 4) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %94

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %94

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %94

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %94

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %94

41:                                               ; preds = %33
  %42 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %94

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint i8* %49 to i64
  %54 = sub i64 %52, %53
  %55 = call i32 @cbor_encode_byte_string(%struct.CborEncoder* nonnull %5, i8* %49, i64 %54) #13
  %56 = and i32 %55, 2147483647
  %57 = icmp eq i32 %56, 0
  %58 = sub nsw i32 0, %55
  %59 = sext i32 %58 to i64
  br i1 %57, label %60, label %94

60:                                               ; preds = %47
  %61 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 3) #13
  %62 = and i32 %61, 2147483647
  %63 = icmp eq i32 %62, 0
  %64 = sub nsw i32 0, %61
  %65 = sext i32 %64 to i64
  br i1 %63, label %66, label %94

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %68) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = sub nsw i32 0, %69
  %73 = sext i32 %72 to i64
  br i1 %71, label %74, label %94

74:                                               ; preds = %66
  %75 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %76 = and i32 %75, 2147483647
  %77 = icmp eq i32 %76, 0
  %78 = sub nsw i32 0, %75
  %79 = sext i32 %78 to i64
  br i1 %77, label %80, label %94

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  %84 = bitcast %struct.CborEncoder* %4 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %83, label %86, label %90

86:                                               ; preds = %80
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = add i64 %85, %2
  br label %94

90:                                               ; preds = %80, %86
  %91 = phi i64 [ 0, %86 ], [ %85, %80 ]
  %92 = ptrtoint i8* %1 to i64
  %93 = sub i64 %91, %92
  br label %94

94:                                               ; preds = %88, %90, %74, %66, %60, %47, %41, %33, %27, %19, %13, %3
  %95 = phi i64 [ %79, %74 ], [ %73, %66 ], [ %65, %60 ], [ %59, %47 ], [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %89, %88 ], [ %93, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %95
}

declare i32 @cbor_encode_byte_string(%struct.CborEncoder*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs28EncodeAuthenticationResponseERKNS0_22AuthenticationResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::AuthenticationResponse"* nocapture readonly dereferenceable(40), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 -5565, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs28EncodeAuthenticationResponseERKNS0_22AuthenticationResponseEPhm(%"struct.openscreen::msgs::AuthenticationResponse"* dereferenceable(40) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs28EncodeAuthenticationResponseERKNS0_22AuthenticationResponseEPhm(%"struct.openscreen::msgs::AuthenticationResponse"* dereferenceable(40) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs28EncodeAuthenticationResponseERKNS0_22AuthenticationResponseEPhm(%"struct.openscreen::msgs::AuthenticationResponse"* nocapture readonly dereferenceable(40), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 3) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %80

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %80

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %80

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %80

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %80

41:                                               ; preds = %33
  %42 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %80

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint i8* %49 to i64
  %54 = sub i64 %52, %53
  %55 = call i32 @cbor_encode_byte_string(%struct.CborEncoder* nonnull %5, i8* %49, i64 %54) #13
  %56 = and i32 %55, 2147483647
  %57 = icmp eq i32 %56, 0
  %58 = sub nsw i32 0, %55
  %59 = sext i32 %58 to i64
  br i1 %57, label %60, label %80

60:                                               ; preds = %47
  %61 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %62 = and i32 %61, 2147483647
  %63 = icmp eq i32 %62, 0
  %64 = sub nsw i32 0, %61
  %65 = sext i32 %64 to i64
  br i1 %63, label %66, label %80

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  %70 = bitcast %struct.CborEncoder* %4 to i64*
  %71 = load i64, i64* %70, align 8
  br i1 %69, label %72, label %76

72:                                               ; preds = %66
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = add i64 %71, %2
  br label %80

76:                                               ; preds = %66, %72
  %77 = phi i64 [ 0, %72 ], [ %71, %66 ]
  %78 = ptrtoint i8* %1 to i64
  %79 = sub i64 %77, %78
  br label %80

80:                                               ; preds = %74, %76, %60, %47, %41, %33, %27, %19, %13, %3
  %81 = phi i64 [ %65, %60 ], [ %59, %47 ], [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %75, %74 ], [ %79, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs26EncodeAuthenticationResultERKNS0_20AuthenticationResultEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::AuthenticationResult"* nocapture readonly dereferenceable(8), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 -5309, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs26EncodeAuthenticationResultERKNS0_20AuthenticationResultEPhm(%"struct.openscreen::msgs::AuthenticationResult"* dereferenceable(8) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs26EncodeAuthenticationResultERKNS0_20AuthenticationResultEPhm(%"struct.openscreen::msgs::AuthenticationResult"* dereferenceable(8) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs26EncodeAuthenticationResultERKNS0_20AuthenticationResultEPhm(%"struct.openscreen::msgs::AuthenticationResult"* nocapture readonly dereferenceable(8), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 1) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %47

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %47

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResult", %"struct.openscreen::msgs::AuthenticationResult"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %47

27:                                               ; preds = %19
  %28 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %47

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  %37 = bitcast %struct.CborEncoder* %4 to i64*
  %38 = load i64, i64* %37, align 8
  br i1 %36, label %39, label %43

39:                                               ; preds = %33
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = add i64 %38, %2
  br label %47

43:                                               ; preds = %33, %39
  %44 = phi i64 [ 0, %39 ], [ %38, %33 ]
  %45 = ptrtoint i8* %1 to i64
  %46 = sub i64 %44, %45
  br label %47

47:                                               ; preds = %41, %43, %27, %19, %13, %3
  %48 = phi i64 [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %42, %41 ], [ %46, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs38EncodePresentationConnectionCloseEventERKNS0_32PresentationConnectionCloseEventEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationConnectionCloseEvent"* dereferenceable(48), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 28992, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs38EncodePresentationConnectionCloseEventERKNS0_32PresentationConnectionCloseEventEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseEvent"* dereferenceable(48) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs38EncodePresentationConnectionCloseEventERKNS0_32PresentationConnectionCloseEventEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseEvent"* dereferenceable(48) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs38EncodePresentationConnectionCloseEventERKNS0_32PresentationConnectionCloseEventEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseEvent"* dereferenceable(48), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = or i8 %9, 2
  %11 = zext i8 %10 to i64
  %12 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 %11) #13
  %13 = and i32 %12, 2147483647
  %14 = icmp eq i32 %13, 0
  %15 = sub nsw i32 0, %12
  %16 = sext i32 %15 to i64
  br i1 %14, label %17, label %95

17:                                               ; preds = %3
  %18 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %19 = and i32 %18, 2147483647
  %20 = icmp eq i32 %19, 0
  %21 = sub nsw i32 0, %18
  %22 = sext i32 %21 to i64
  br i1 %20, label %23, label %95

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %25) #13
  %27 = and i32 %26, 2147483647
  %28 = icmp eq i32 %27, 0
  %29 = sub nsw i32 0, %26
  %30 = sext i32 %29 to i64
  br i1 %28, label %31, label %95

31:                                               ; preds = %23
  %32 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %33 = and i32 %32, 2147483647
  %34 = icmp eq i32 %33, 0
  %35 = sub nsw i32 0, %32
  %36 = sext i32 %35 to i64
  br i1 %34, label %37, label %95

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %39) #13
  %41 = and i32 %40, 2147483647
  %42 = icmp eq i32 %41, 0
  %43 = sub nsw i32 0, %40
  %44 = sext i32 %43 to i64
  br i1 %42, label %45, label %95

45:                                               ; preds = %37
  %46 = load i8, i8* %8, align 8, !range !3
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %45
  %49 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 3) #13
  %50 = and i32 %49, 2147483647
  %51 = icmp eq i32 %50, 0
  %52 = sub nsw i32 0, %49
  %53 = sext i32 %52 to i64
  br i1 %51, label %54, label %95

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 3
  %56 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %55)
  br i1 %56, label %57, label %95

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %67 = zext i8 %60 to i64
  %68 = select i1 %61, i8* %63, i8* %66
  %69 = select i1 %61, i64 %65, i64 %67
  %70 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %68, i64 %69) #13
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %95

75:                                               ; preds = %45, %57
  %76 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %77 = and i32 %76, 2147483647
  %78 = icmp eq i32 %77, 0
  %79 = sub nsw i32 0, %76
  %80 = sext i32 %79 to i64
  br i1 %78, label %81, label %95

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %83, null
  %85 = bitcast %struct.CborEncoder* %4 to i64*
  %86 = load i64, i64* %85, align 8
  br i1 %84, label %87, label %91

87:                                               ; preds = %81
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = add i64 %86, %2
  br label %95

91:                                               ; preds = %81, %87
  %92 = phi i64 [ 0, %87 ], [ %86, %81 ]
  %93 = ptrtoint i8* %1 to i64
  %94 = sub i64 %92, %93
  br label %95

95:                                               ; preds = %89, %91, %54, %57, %48, %75, %37, %31, %23, %17, %3
  %96 = phi i64 [ %80, %75 ], [ %74, %57 ], [ %53, %48 ], [ %44, %37 ], [ %36, %31 ], [ %30, %23 ], [ %22, %17 ], [ %16, %3 ], [ -516, %54 ], [ %90, %89 ], [ %94, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs40EncodePresentationConnectionCloseRequestERKNS0_34PresentationConnectionCloseRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture readonly dereferenceable(16), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 28480, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs40EncodePresentationConnectionCloseRequestERKNS0_34PresentationConnectionCloseRequestEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseRequest"* dereferenceable(16) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs40EncodePresentationConnectionCloseRequestERKNS0_34PresentationConnectionCloseRequestEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseRequest"* dereferenceable(16) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs40EncodePresentationConnectionCloseRequestERKNS0_34PresentationConnectionCloseRequestEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture readonly dereferenceable(16), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %61

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %61

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %61

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %61

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %61

41:                                               ; preds = %33
  %42 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %61

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  %51 = bitcast %struct.CborEncoder* %4 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %50, label %53, label %57

53:                                               ; preds = %47
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = add i64 %52, %2
  br label %61

57:                                               ; preds = %47, %53
  %58 = phi i64 [ 0, %53 ], [ %52, %47 ]
  %59 = ptrtoint i8* %1 to i64
  %60 = sub i64 %58, %59
  br label %61

61:                                               ; preds = %55, %57, %41, %33, %27, %19, %13, %3
  %62 = phi i64 [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %56, %55 ], [ %60, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs41EncodePresentationConnectionCloseResponseERKNS0_35PresentationConnectionCloseResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture readonly dereferenceable(16), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 28736, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs41EncodePresentationConnectionCloseResponseERKNS0_35PresentationConnectionCloseResponseEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseResponse"* dereferenceable(16) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs41EncodePresentationConnectionCloseResponseERKNS0_35PresentationConnectionCloseResponseEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseResponse"* dereferenceable(16) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs41EncodePresentationConnectionCloseResponseERKNS0_35PresentationConnectionCloseResponseEPhm(%"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture readonly dereferenceable(16), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %61

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %61

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %61

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %61

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %61

41:                                               ; preds = %33
  %42 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %61

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  %51 = bitcast %struct.CborEncoder* %4 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %50, label %53, label %57

53:                                               ; preds = %47
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = add i64 %52, %2
  br label %61

57:                                               ; preds = %47, %53
  %58 = phi i64 [ 0, %53 ], [ %52, %47 ]
  %59 = ptrtoint i8* %1 to i64
  %60 = sub i64 %58, %59
  br label %61

61:                                               ; preds = %55, %57, %41, %33, %27, %19, %13, %3
  %62 = phi i64 [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %56, %55 ], [ %60, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %62
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10openscreen4msgs29PresentationConnectionMessage7MessageC2Ev(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 0
  store i32 2, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1
  %4 = bitcast %union.anon.7* %3 to i8*
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen4msgs29PresentationConnectionMessage7MessageD2Ev(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %21 [
    i32 0, label %4
    i32 1, label %12
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = ptrtoint i8* %6 to i64
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  tail call void @_ZdlPv(i8* nonnull %6) #15
  br label %21

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1
  %14 = bitcast %union.anon.7* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %union.anon.7, %union.anon.7* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %18, %12, %8, %4, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs35EncodePresentationConnectionMessageERKNS0_29PresentationConnectionMessageEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationConnectionMessage"* dereferenceable(40), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %120, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = icmp eq i64 %39, %40
  %44 = inttoptr i64 %41 to i8*
  br i1 %43, label %45, label %58

45:                                               ; preds = %38
  %46 = add i64 %42, 1
  %47 = sub i64 %46, %41
  %48 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %120, label %51

51:                                               ; preds = %45
  %52 = icmp eq i64 %40, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 1) #13
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  br label %58

57:                                               ; preds = %51
  store i8* %44, i8** %4, align 8
  br label %58

58:                                               ; preds = %38, %53, %57
  %59 = phi i8* [ %44, %57 ], [ %56, %53 ], [ %44, %38 ]
  %60 = phi i64 [ -1, %57 ], [ %54, %53 ], [ %40, %38 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8 16, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %65 = load i64, i64* %5, align 8
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %65, %66
  %68 = sub i64 %67, %63
  %69 = inttoptr i64 %66 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %63
  %71 = tail call i64 @_ZN10openscreen4msgs35EncodePresentationConnectionMessageERKNS0_29PresentationConnectionMessageEPhm(%"struct.openscreen::msgs::PresentationConnectionMessage"* dereferenceable(40) %0, i8* %70, i64 %68)
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %58, %110
  %74 = phi i64 [ %118, %110 ], [ %71, %58 ]
  %75 = phi i64 [ %115, %110 ], [ %68, %58 ]
  %76 = icmp sle i64 %74, %75
  %77 = sub i64 %74, %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = icmp slt i64 %77, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = sub nsw i64 0, %77
  %83 = load i64, i64* %5, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 %83, %84
  %86 = icmp ult i64 %85, %82
  br i1 %86, label %107, label %96

87:                                               ; preds = %79
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %88, %77
  %91 = sub i64 %90, %89
  %92 = load i64, i64* %64, align 8
  %93 = icmp ugt i64 %91, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = sub i64 %88, %89
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i64 [ %95, %94 ], [ %85, %81 ]
  %98 = phi i64 [ %89, %94 ], [ %84, %81 ]
  %99 = add i64 %97, %77
  %100 = icmp ult i64 %97, %99
  %101 = inttoptr i64 %98 to i8*
  br i1 %100, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %77) #13
  br label %107

103:                                              ; preds = %96
  %104 = icmp ugt i64 %97, %99
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8* %106, i8** %4, align 8
  br label %107

107:                                              ; preds = %73, %81, %87, %102, %103, %105
  %108 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %87 ], [ false, %102 ], [ false, %103 ], [ false, %105 ]
  %109 = or i1 %76, %108
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %10, align 8
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = sub i64 %114, %111
  %116 = inttoptr i64 %113 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %111
  %118 = tail call i64 @_ZN10openscreen4msgs35EncodePresentationConnectionMessageERKNS0_29PresentationConnectionMessageEPhm(%"struct.openscreen::msgs::PresentationConnectionMessage"* dereferenceable(40) %0, i8* %117, i64 %115)
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %73

120:                                              ; preds = %107, %110, %58, %45, %18
  %121 = phi i1 [ false, %18 ], [ false, %45 ], [ false, %58 ], [ false, %110 ], [ %76, %107 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs35EncodePresentationConnectionMessageERKNS0_29PresentationConnectionMessageEPhm(%"struct.openscreen::msgs::PresentationConnectionMessage"* dereferenceable(40), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %92

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %92

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %92

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %92

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1, i32 0
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %72 [
    i32 0, label %36
    i32 1, label %49
    i32 2, label %92
  ]

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint i8* %38 to i64
  %43 = sub i64 %41, %42
  %44 = call i32 @cbor_encode_byte_string(%struct.CborEncoder* nonnull %5, i8* %38, i64 %43) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %72, label %92

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1, i32 1
  %51 = bitcast %union.anon.7* %50 to %"class.std::__1::basic_string"*
  %52 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %51)
  br i1 %52, label %53, label %92

53:                                               ; preds = %49
  %54 = bitcast %union.anon.7* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %union.anon.7, %union.anon.7* %50, i64 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %union.anon.7* %50 to i8*
  %64 = zext i8 %56 to i64
  %65 = select i1 %57, i8* %59, i8* %63
  %66 = select i1 %57, i64 %62, i64 %64
  %67 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %65, i64 %66) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = sub nsw i32 0, %67
  %71 = sext i32 %70 to i64
  br i1 %69, label %72, label %92

72:                                               ; preds = %53, %36, %33
  %73 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %74 = and i32 %73, 2147483647
  %75 = icmp eq i32 %74, 0
  %76 = sub nsw i32 0, %73
  %77 = sext i32 %76 to i64
  br i1 %75, label %78, label %92

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, null
  %82 = bitcast %struct.CborEncoder* %4 to i64*
  %83 = load i64, i64* %82, align 8
  br i1 %81, label %84, label %88

84:                                               ; preds = %78
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = add i64 %83, %2
  br label %92

88:                                               ; preds = %78, %84
  %89 = phi i64 [ 0, %84 ], [ %83, %78 ]
  %90 = ptrtoint i8* %1 to i64
  %91 = sub i64 %89, %90
  br label %92

92:                                               ; preds = %86, %88, %33, %49, %72, %36, %53, %27, %19, %13, %3
  %93 = phi i64 [ %77, %72 ], [ %71, %53 ], [ %48, %36 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ -516, %49 ], [ -1, %33 ], [ %87, %86 ], [ %91, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs39EncodePresentationConnectionOpenRequestERKNS0_33PresentationConnectionOpenRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* dereferenceable(56), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 27968, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs39EncodePresentationConnectionOpenRequestERKNS0_33PresentationConnectionOpenRequestEPhm(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* dereferenceable(56) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs39EncodePresentationConnectionOpenRequestERKNS0_33PresentationConnectionOpenRequestEPhm(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* dereferenceable(56) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs39EncodePresentationConnectionOpenRequestERKNS0_33PresentationConnectionOpenRequestEPhm(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* dereferenceable(56), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 3) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %101

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %101

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %101

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %101

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 1
  %35 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %34)
  br i1 %35, label %36, label %101

36:                                               ; preds = %33
  %37 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %46 = zext i8 %39 to i64
  %47 = select i1 %40, i8* %42, i8* %45
  %48 = select i1 %40, i64 %44, i64 %46
  %49 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %47, i64 %48) #13
  %50 = and i32 %49, 2147483647
  %51 = icmp eq i32 %50, 0
  %52 = sub nsw i32 0, %49
  %53 = sext i32 %52 to i64
  br i1 %51, label %54, label %101

54:                                               ; preds = %36
  %55 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %56 = and i32 %55, 2147483647
  %57 = icmp eq i32 %56, 0
  %58 = sub nsw i32 0, %55
  %59 = sext i32 %58 to i64
  br i1 %57, label %60, label %101

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 2
  %62 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %61)
  br i1 %62, label %63, label %101

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %73 = zext i8 %66 to i64
  %74 = select i1 %67, i8* %69, i8* %72
  %75 = select i1 %67, i64 %71, i64 %73
  %76 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %74, i64 %75) #13
  %77 = and i32 %76, 2147483647
  %78 = icmp eq i32 %77, 0
  %79 = sub nsw i32 0, %76
  %80 = sext i32 %79 to i64
  br i1 %78, label %81, label %101

81:                                               ; preds = %63
  %82 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %83 = and i32 %82, 2147483647
  %84 = icmp eq i32 %83, 0
  %85 = sub nsw i32 0, %82
  %86 = sext i32 %85 to i64
  br i1 %84, label %87, label %101

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %89 = load i8*, i8** %88, align 8
  %90 = icmp eq i8* %89, null
  %91 = bitcast %struct.CborEncoder* %4 to i64*
  %92 = load i64, i64* %91, align 8
  br i1 %90, label %93, label %97

93:                                               ; preds = %87
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = add i64 %92, %2
  br label %101

97:                                               ; preds = %87, %93
  %98 = phi i64 [ 0, %93 ], [ %92, %87 ]
  %99 = ptrtoint i8* %1 to i64
  %100 = sub i64 %98, %99
  br label %101

101:                                              ; preds = %95, %97, %60, %33, %81, %63, %54, %36, %27, %19, %13, %3
  %102 = phi i64 [ %86, %81 ], [ %80, %63 ], [ %59, %54 ], [ %53, %36 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ -516, %33 ], [ -516, %60 ], [ %96, %95 ], [ %100, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs40EncodePresentationConnectionOpenResponseERKNS0_34PresentationConnectionOpenResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture readonly dereferenceable(24), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 28224, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs40EncodePresentationConnectionOpenResponseERKNS0_34PresentationConnectionOpenResponseEPhm(%"struct.openscreen::msgs::PresentationConnectionOpenResponse"* dereferenceable(24) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs40EncodePresentationConnectionOpenResponseERKNS0_34PresentationConnectionOpenResponseEPhm(%"struct.openscreen::msgs::PresentationConnectionOpenResponse"* dereferenceable(24) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs40EncodePresentationConnectionOpenResponseERKNS0_34PresentationConnectionOpenResponseEPhm(%"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture readonly dereferenceable(24), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 3) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %75

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %75

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %75

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %75

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %75

41:                                               ; preds = %33
  %42 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %75

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %49) #13
  %51 = and i32 %50, 2147483647
  %52 = icmp eq i32 %51, 0
  %53 = sub nsw i32 0, %50
  %54 = sext i32 %53 to i64
  br i1 %52, label %55, label %75

55:                                               ; preds = %47
  %56 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %57 = and i32 %56, 2147483647
  %58 = icmp eq i32 %57, 0
  %59 = sub nsw i32 0, %56
  %60 = sext i32 %59 to i64
  br i1 %58, label %61, label %75

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  %65 = bitcast %struct.CborEncoder* %4 to i64*
  %66 = load i64, i64* %65, align 8
  br i1 %64, label %67, label %71

67:                                               ; preds = %61
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = add i64 %66, %2
  br label %75

71:                                               ; preds = %61, %67
  %72 = phi i64 [ 0, %67 ], [ %66, %61 ]
  %73 = ptrtoint i8* %1 to i64
  %74 = sub i64 %72, %73
  br label %75

75:                                               ; preds = %69, %71, %55, %47, %41, %33, %27, %19, %13, %3
  %76 = phi i64 [ %60, %55 ], [ %54, %47 ], [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %70, %69 ], [ %74, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs30EncodePresentationStartRequestERKNS0_24PresentationStartRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationStartRequest"* dereferenceable(80), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 26688, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs30EncodePresentationStartRequestERKNS0_24PresentationStartRequestEPhm(%"struct.openscreen::msgs::PresentationStartRequest"* dereferenceable(80) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs30EncodePresentationStartRequestERKNS0_24PresentationStartRequestEPhm(%"struct.openscreen::msgs::PresentationStartRequest"* dereferenceable(80) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs30EncodePresentationStartRequestERKNS0_24PresentationStartRequestEPhm(%"struct.openscreen::msgs::PresentationStartRequest"* dereferenceable(80), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = alloca %struct.CborEncoder, align 8
  %8 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %9 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 4) #13
  %11 = and i32 %10, 2147483647
  %12 = icmp eq i32 %11, 0
  %13 = sub nsw i32 0, %10
  %14 = sext i32 %13 to i64
  br i1 %12, label %15, label %199

15:                                               ; preds = %3
  %16 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %17 = and i32 %16, 2147483647
  %18 = icmp eq i32 %17, 0
  %19 = sub nsw i32 0, %16
  %20 = sext i32 %19 to i64
  br i1 %18, label %21, label %199

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %23) #13
  %25 = and i32 %24, 2147483647
  %26 = icmp eq i32 %25, 0
  %27 = sub nsw i32 0, %24
  %28 = sext i32 %27 to i64
  br i1 %26, label %29, label %199

29:                                               ; preds = %21
  %30 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %31 = and i32 %30, 2147483647
  %32 = icmp eq i32 %31, 0
  %33 = sub nsw i32 0, %30
  %34 = sext i32 %33 to i64
  br i1 %32, label %35, label %199

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 1
  %37 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %36)
  br i1 %37, label %38, label %199

38:                                               ; preds = %35
  %39 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %48 = zext i8 %41 to i64
  %49 = select i1 %42, i8* %44, i8* %47
  %50 = select i1 %42, i64 %46, i64 %48
  %51 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %49, i64 %50) #13
  %52 = and i32 %51, 2147483647
  %53 = icmp eq i32 %52, 0
  %54 = sub nsw i32 0, %51
  %55 = sext i32 %54 to i64
  br i1 %53, label %56, label %199

56:                                               ; preds = %38
  %57 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %58 = and i32 %57, 2147483647
  %59 = icmp eq i32 %58, 0
  %60 = sub nsw i32 0, %57
  %61 = sext i32 %60 to i64
  br i1 %59, label %62, label %199

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 2
  %64 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %63)
  br i1 %64, label %65, label %199

65:                                               ; preds = %62
  %66 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %75 = zext i8 %68 to i64
  %76 = select i1 %69, i8* %71, i8* %74
  %77 = select i1 %69, i64 %73, i64 %75
  %78 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %76, i64 %77) #13
  %79 = and i32 %78, 2147483647
  %80 = icmp eq i32 %79, 0
  %81 = sub nsw i32 0, %78
  %82 = sext i32 %81 to i64
  br i1 %80, label %83, label %199

83:                                               ; preds = %65
  %84 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 3) #13
  %85 = and i32 %84, 2147483647
  %86 = icmp eq i32 %85, 0
  %87 = sub nsw i32 0, %84
  %88 = sext i32 %87 to i64
  br i1 %86, label %89, label %199

89:                                               ; preds = %83
  %90 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 32, i1 false)
  %91 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 3
  %92 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 3, i32 0, i32 1
  %93 = bitcast %"struct.openscreen::msgs::HttpHeader"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.8"* %91 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = sdiv exact i64 %97, 48
  %99 = call i32 @cbor_encoder_create_array(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 %98) #13
  %100 = and i32 %99, 2147483647
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %181

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %91, i64 0, i32 0, i32 0
  %104 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %103, align 8
  %105 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %92, align 8
  %106 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %104, %105
  br i1 %106, label %171, label %107

107:                                              ; preds = %102
  %108 = bitcast %struct.CborEncoder* %7 to i8*
  br label %109

109:                                              ; preds = %107, %162
  %110 = phi %"struct.openscreen::msgs::HttpHeader"* [ %104, %107 ], [ %163, %162 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false)
  %111 = call i32 @cbor_encoder_create_array(%struct.CborEncoder* nonnull %6, %struct.CborEncoder* nonnull %7, i64 2) #13
  %112 = and i32 %111, 2147483647
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %165

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %110, i64 0, i32 0
  %116 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %115)
  br i1 %116, label %117, label %169

117:                                              ; preds = %114
  %118 = bitcast %"struct.openscreen::msgs::HttpHeader"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  br label %130

127:                                              ; preds = %117
  %128 = bitcast %"struct.openscreen::msgs::HttpHeader"* %110 to i8*
  %129 = zext i8 %120 to i64
  br label %130

130:                                              ; preds = %122, %127
  %131 = phi i8* [ %124, %122 ], [ %128, %127 ]
  %132 = phi i64 [ %126, %122 ], [ %129, %127 ]
  %133 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %7, i8* %131, i64 %132) #13
  %134 = and i32 %133, 2147483647
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %165

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %110, i64 0, i32 1
  %138 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %137)
  br i1 %138, label %139, label %169

139:                                              ; preds = %136
  %140 = bitcast %"class.std::__1::basic_string"* %137 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %110, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  br label %152

149:                                              ; preds = %139
  %150 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %151 = zext i8 %142 to i64
  br label %152

152:                                              ; preds = %144, %149
  %153 = phi i8* [ %146, %144 ], [ %150, %149 ]
  %154 = phi i64 [ %148, %144 ], [ %151, %149 ]
  %155 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %7, i8* %153, i64 %154) #13
  %156 = and i32 %155, 2147483647
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %165

158:                                              ; preds = %152
  %159 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %6, %struct.CborEncoder* nonnull %7) #13
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %158
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #13
  %163 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %110, i64 1
  %164 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %163, %105
  br i1 %164, label %171, label %109

165:                                              ; preds = %130, %109, %152, %158
  %166 = phi i32 [ %159, %158 ], [ %155, %152 ], [ %111, %109 ], [ %133, %130 ]
  %167 = sub nsw i32 0, %166
  %168 = sext i32 %167 to i64
  br label %169

169:                                              ; preds = %136, %114, %165
  %170 = phi i64 [ %168, %165 ], [ -516, %114 ], [ -516, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  br label %199

171:                                              ; preds = %162, %102
  %172 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %173 = and i32 %172, 2147483647
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %171
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  %176 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %177 = and i32 %176, 2147483647
  %178 = icmp eq i32 %177, 0
  %179 = sub nsw i32 0, %176
  %180 = sext i32 %179 to i64
  br i1 %178, label %185, label %199

181:                                              ; preds = %171, %89
  %182 = phi i32 [ %99, %89 ], [ %172, %171 ]
  %183 = sub nsw i32 0, %182
  %184 = sext i32 %183 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  br label %199

185:                                              ; preds = %175
  %186 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  %189 = bitcast %struct.CborEncoder* %4 to i64*
  %190 = load i64, i64* %189, align 8
  br i1 %188, label %191, label %195

191:                                              ; preds = %185
  %192 = icmp eq i64 %190, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = add i64 %190, %2
  br label %199

195:                                              ; preds = %185, %191
  %196 = phi i64 [ 0, %191 ], [ %190, %185 ]
  %197 = ptrtoint i8* %1 to i64
  %198 = sub i64 %196, %197
  br label %199

199:                                              ; preds = %181, %169, %193, %195, %62, %35, %175, %83, %65, %56, %38, %29, %21, %15, %3
  %200 = phi i64 [ %180, %175 ], [ %184, %181 ], [ %88, %83 ], [ %82, %65 ], [ %61, %56 ], [ %55, %38 ], [ %34, %29 ], [ %28, %21 ], [ %20, %15 ], [ %14, %3 ], [ -516, %35 ], [ -516, %62 ], [ %194, %193 ], [ %198, %195 ], [ %170, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  ret i64 %200
}

declare i32 @cbor_encoder_create_array(%struct.CborEncoder*, %struct.CborEncoder*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs31EncodePresentationStartResponseERKNS0_25PresentationStartResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationStartResponse"* nocapture readonly dereferenceable(24), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 26944, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs31EncodePresentationStartResponseERKNS0_25PresentationStartResponseEPhm(%"struct.openscreen::msgs::PresentationStartResponse"* dereferenceable(24) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs31EncodePresentationStartResponseERKNS0_25PresentationStartResponseEPhm(%"struct.openscreen::msgs::PresentationStartResponse"* dereferenceable(24) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs31EncodePresentationStartResponseERKNS0_25PresentationStartResponseEPhm(%"struct.openscreen::msgs::PresentationStartResponse"* nocapture readonly dereferenceable(24), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 3) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %75

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %75

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %75

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %75

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %75

41:                                               ; preds = %33
  %42 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %75

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %49) #13
  %51 = and i32 %50, 2147483647
  %52 = icmp eq i32 %51, 0
  %53 = sub nsw i32 0, %50
  %54 = sext i32 %53 to i64
  br i1 %52, label %55, label %75

55:                                               ; preds = %47
  %56 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %57 = and i32 %56, 2147483647
  %58 = icmp eq i32 %57, 0
  %59 = sub nsw i32 0, %56
  %60 = sext i32 %59 to i64
  br i1 %58, label %61, label %75

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  %65 = bitcast %struct.CborEncoder* %4 to i64*
  %66 = load i64, i64* %65, align 8
  br i1 %64, label %67, label %71

67:                                               ; preds = %61
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = add i64 %66, %2
  br label %75

71:                                               ; preds = %61, %67
  %72 = phi i64 [ 0, %67 ], [ %66, %61 ]
  %73 = ptrtoint i8* %1 to i64
  %74 = sub i64 %72, %73
  br label %75

75:                                               ; preds = %69, %71, %55, %47, %41, %33, %27, %19, %13, %3
  %76 = phi i64 [ %60, %55 ], [ %54, %47 ], [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %70, %69 ], [ %74, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs34EncodePresentationTerminationEventERKNS0_28PresentationTerminationEventEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationTerminationEvent"* dereferenceable(32), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 27712, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs34EncodePresentationTerminationEventERKNS0_28PresentationTerminationEventEPhm(%"struct.openscreen::msgs::PresentationTerminationEvent"* dereferenceable(32) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs34EncodePresentationTerminationEventERKNS0_28PresentationTerminationEventEPhm(%"struct.openscreen::msgs::PresentationTerminationEvent"* dereferenceable(32) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs34EncodePresentationTerminationEventERKNS0_28PresentationTerminationEventEPhm(%"struct.openscreen::msgs::PresentationTerminationEvent"* dereferenceable(32), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %74

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %74

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0
  %21 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %20)
  br i1 %21, label %22, label %74

22:                                               ; preds = %19
  %23 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %0 to i8*
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i8* %28, i8* %31
  %34 = select i1 %26, i64 %30, i64 %32
  %35 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %33, i64 %34) #13
  %36 = and i32 %35, 2147483647
  %37 = icmp eq i32 %36, 0
  %38 = sub nsw i32 0, %35
  %39 = sext i32 %38 to i64
  br i1 %37, label %40, label %74

40:                                               ; preds = %22
  %41 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %42 = and i32 %41, 2147483647
  %43 = icmp eq i32 %42, 0
  %44 = sub nsw i32 0, %41
  %45 = sext i32 %44 to i64
  br i1 %43, label %46, label %74

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %48) #13
  %50 = and i32 %49, 2147483647
  %51 = icmp eq i32 %50, 0
  %52 = sub nsw i32 0, %49
  %53 = sext i32 %52 to i64
  br i1 %51, label %54, label %74

54:                                               ; preds = %46
  %55 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %56 = and i32 %55, 2147483647
  %57 = icmp eq i32 %56, 0
  %58 = sub nsw i32 0, %55
  %59 = sext i32 %58 to i64
  br i1 %57, label %60, label %74

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  %64 = bitcast %struct.CborEncoder* %4 to i64*
  %65 = load i64, i64* %64, align 8
  br i1 %63, label %66, label %70

66:                                               ; preds = %60
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = add i64 %65, %2
  br label %74

70:                                               ; preds = %60, %66
  %71 = phi i64 [ 0, %66 ], [ %65, %60 ]
  %72 = ptrtoint i8* %1 to i64
  %73 = sub i64 %71, %72
  br label %74

74:                                               ; preds = %68, %70, %19, %54, %46, %40, %22, %13, %3
  %75 = phi i64 [ %59, %54 ], [ %53, %46 ], [ %45, %40 ], [ %39, %22 ], [ %18, %13 ], [ %12, %3 ], [ -516, %19 ], [ %69, %68 ], [ %73, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs36EncodePresentationTerminationRequestERKNS0_30PresentationTerminationRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationTerminationRequest"* dereferenceable(40), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 27200, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs36EncodePresentationTerminationRequestERKNS0_30PresentationTerminationRequestEPhm(%"struct.openscreen::msgs::PresentationTerminationRequest"* dereferenceable(40) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs36EncodePresentationTerminationRequestERKNS0_30PresentationTerminationRequestEPhm(%"struct.openscreen::msgs::PresentationTerminationRequest"* dereferenceable(40) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs36EncodePresentationTerminationRequestERKNS0_30PresentationTerminationRequestEPhm(%"struct.openscreen::msgs::PresentationTerminationRequest"* dereferenceable(40), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 3) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %88

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %88

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %88

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %88

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 1
  %35 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %34)
  br i1 %35, label %36, label %88

36:                                               ; preds = %33
  %37 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %46 = zext i8 %39 to i64
  %47 = select i1 %40, i8* %42, i8* %45
  %48 = select i1 %40, i64 %44, i64 %46
  %49 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %5, i8* %47, i64 %48) #13
  %50 = and i32 %49, 2147483647
  %51 = icmp eq i32 %50, 0
  %52 = sub nsw i32 0, %49
  %53 = sext i32 %52 to i64
  br i1 %51, label %54, label %88

54:                                               ; preds = %36
  %55 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %56 = and i32 %55, 2147483647
  %57 = icmp eq i32 %56, 0
  %58 = sub nsw i32 0, %55
  %59 = sext i32 %58 to i64
  br i1 %57, label %60, label %88

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %62) #13
  %64 = and i32 %63, 2147483647
  %65 = icmp eq i32 %64, 0
  %66 = sub nsw i32 0, %63
  %67 = sext i32 %66 to i64
  br i1 %65, label %68, label %88

68:                                               ; preds = %60
  %69 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = sub nsw i32 0, %69
  %73 = sext i32 %72 to i64
  br i1 %71, label %74, label %88

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  %78 = bitcast %struct.CborEncoder* %4 to i64*
  %79 = load i64, i64* %78, align 8
  br i1 %77, label %80, label %84

80:                                               ; preds = %74
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = add i64 %79, %2
  br label %88

84:                                               ; preds = %74, %80
  %85 = phi i64 [ 0, %80 ], [ %79, %74 ]
  %86 = ptrtoint i8* %1 to i64
  %87 = sub i64 %85, %86
  br label %88

88:                                               ; preds = %82, %84, %33, %68, %60, %54, %36, %27, %19, %13, %3
  %89 = phi i64 [ %73, %68 ], [ %67, %60 ], [ %59, %54 ], [ %53, %36 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ -516, %33 ], [ %83, %82 ], [ %87, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs37EncodePresentationTerminationResponseERKNS0_31PresentationTerminationResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture readonly dereferenceable(16), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 27456, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs37EncodePresentationTerminationResponseERKNS0_31PresentationTerminationResponseEPhm(%"struct.openscreen::msgs::PresentationTerminationResponse"* dereferenceable(16) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs37EncodePresentationTerminationResponseERKNS0_31PresentationTerminationResponseEPhm(%"struct.openscreen::msgs::PresentationTerminationResponse"* dereferenceable(16) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs37EncodePresentationTerminationResponseERKNS0_31PresentationTerminationResponseEPhm(%"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture readonly dereferenceable(16), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %7 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  br i1 %10, label %13, label %61

13:                                               ; preds = %3
  %14 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %61

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %21) #13
  %23 = and i32 %22, 2147483647
  %24 = icmp eq i32 %23, 0
  %25 = sub nsw i32 0, %22
  %26 = sext i32 %25 to i64
  br i1 %24, label %27, label %61

27:                                               ; preds = %19
  %28 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %29 = and i32 %28, 2147483647
  %30 = icmp eq i32 %29, 0
  %31 = sub nsw i32 0, %28
  %32 = sext i32 %31 to i64
  br i1 %30, label %33, label %61

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %0, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %35) #13
  %37 = and i32 %36, 2147483647
  %38 = icmp eq i32 %37, 0
  %39 = sub nsw i32 0, %36
  %40 = sext i32 %39 to i64
  br i1 %38, label %41, label %61

41:                                               ; preds = %33
  %42 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %43 = and i32 %42, 2147483647
  %44 = icmp eq i32 %43, 0
  %45 = sub nsw i32 0, %42
  %46 = sext i32 %45 to i64
  br i1 %44, label %47, label %61

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  %51 = bitcast %struct.CborEncoder* %4 to i64*
  %52 = load i64, i64* %51, align 8
  br i1 %50, label %53, label %57

53:                                               ; preds = %47
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = add i64 %52, %2
  br label %61

57:                                               ; preds = %47, %53
  %58 = phi i64 [ 0, %53 ], [ %52, %47 ]
  %59 = ptrtoint i8* %1 to i64
  %60 = sub i64 %58, %59
  br label %61

61:                                               ; preds = %55, %57, %41, %33, %27, %19, %13, %3
  %62 = phi i64 [ %46, %41 ], [ %40, %33 ], [ %32, %27 ], [ %26, %19 ], [ %18, %13 ], [ %12, %3 ], [ %56, %55 ], [ %60, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs38EncodePresentationUrlAvailabilityEventERKNS0_32PresentationUrlAvailabilityEventEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* nocapture readonly dereferenceable(32), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %124, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = sub i64 %39, %40
  %44 = icmp ult i64 %43, 2
  %45 = inttoptr i64 %41 to i8*
  br i1 %44, label %46, label %61

46:                                               ; preds = %38
  %47 = add i64 %42, 2
  %48 = sub i64 %47, %41
  %49 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp ugt i64 %48, %50
  br i1 %51, label %124, label %52

52:                                               ; preds = %46
  %53 = icmp ult i64 %39, -2
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 2) #13
  %55 = load i64, i64* %10, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br label %61

58:                                               ; preds = %52
  %59 = add nsw i64 %39, 2
  %60 = getelementptr inbounds i8, i8* %45, i64 %59
  store i8* %60, i8** %4, align 8
  br label %61

61:                                               ; preds = %38, %54, %58
  %62 = phi i8* [ %45, %58 ], [ %57, %54 ], [ %45, %38 ]
  %63 = phi i64 [ %40, %58 ], [ %55, %54 ], [ %40, %38 ]
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i16*
  store i16 26432, i16* %65, align 1
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 2
  store i64 %67, i64* %10, align 8
  %68 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %7, align 8
  %71 = sub i64 %69, %70
  %72 = sub i64 %71, %67
  %73 = inttoptr i64 %70 to i8*
  %74 = getelementptr inbounds i8, i8* %73, i64 %67
  %75 = tail call i64 @_ZN10openscreen4msgs38EncodePresentationUrlAvailabilityEventERKNS0_32PresentationUrlAvailabilityEventEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* dereferenceable(32) %0, i8* %74, i64 %72)
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %124, label %77

77:                                               ; preds = %61, %114
  %78 = phi i64 [ %122, %114 ], [ %75, %61 ]
  %79 = phi i64 [ %119, %114 ], [ %72, %61 ]
  %80 = icmp sle i64 %78, %79
  %81 = sub i64 %78, %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %77
  %84 = icmp slt i64 %81, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = sub nsw i64 0, %81
  %87 = load i64, i64* %5, align 8
  %88 = load i64, i64* %7, align 8
  %89 = sub i64 %87, %88
  %90 = icmp ult i64 %89, %86
  br i1 %90, label %111, label %100

91:                                               ; preds = %83
  %92 = load i64, i64* %5, align 8
  %93 = load i64, i64* %7, align 8
  %94 = add i64 %92, %81
  %95 = sub i64 %94, %93
  %96 = load i64, i64* %68, align 8
  %97 = icmp ugt i64 %95, %96
  br i1 %97, label %111, label %98

98:                                               ; preds = %91
  %99 = sub i64 %92, %93
  br label %100

100:                                              ; preds = %98, %85
  %101 = phi i64 [ %99, %98 ], [ %89, %85 ]
  %102 = phi i64 [ %93, %98 ], [ %88, %85 ]
  %103 = add i64 %101, %81
  %104 = icmp ult i64 %101, %103
  %105 = inttoptr i64 %102 to i8*
  br i1 %104, label %106, label %107

106:                                              ; preds = %100
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %81) #13
  br label %111

107:                                              ; preds = %100
  %108 = icmp ugt i64 %101, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %105, i64 %103
  store i8* %110, i8** %4, align 8
  br label %111

111:                                              ; preds = %77, %85, %91, %106, %107, %109
  %112 = phi i1 [ false, %77 ], [ true, %85 ], [ true, %91 ], [ false, %106 ], [ false, %107 ], [ false, %109 ]
  %113 = or i1 %80, %112
  br i1 %113, label %124, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %10, align 8
  %116 = load i64, i64* %5, align 8
  %117 = load i64, i64* %7, align 8
  %118 = sub i64 %116, %117
  %119 = sub i64 %118, %115
  %120 = inttoptr i64 %117 to i8*
  %121 = getelementptr inbounds i8, i8* %120, i64 %115
  %122 = tail call i64 @_ZN10openscreen4msgs38EncodePresentationUrlAvailabilityEventERKNS0_32PresentationUrlAvailabilityEventEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* dereferenceable(32) %0, i8* %121, i64 %119)
  %123 = icmp slt i64 %122, 0
  br i1 %123, label %124, label %77

124:                                              ; preds = %111, %114, %61, %46, %18
  %125 = phi i1 [ false, %18 ], [ false, %46 ], [ false, %61 ], [ false, %114 ], [ %80, %111 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs38EncodePresentationUrlAvailabilityEventERKNS0_32PresentationUrlAvailabilityEventEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* nocapture readonly dereferenceable(32), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %8 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %10 = and i32 %9, 2147483647
  %11 = icmp eq i32 %10, 0
  %12 = sub nsw i32 0, %9
  %13 = sext i32 %12 to i64
  br i1 %11, label %14, label %89

14:                                               ; preds = %3
  %15 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %89

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %22) #13
  %24 = and i32 %23, 2147483647
  %25 = icmp eq i32 %24, 0
  %26 = sub nsw i32 0, %23
  %27 = sext i32 %26 to i64
  br i1 %25, label %28, label %89

28:                                               ; preds = %20
  %29 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %30 = and i32 %29, 2147483647
  %31 = icmp eq i32 %30, 0
  %32 = sub nsw i32 0, %29
  %33 = sext i32 %32 to i64
  br i1 %31, label %34, label %89

34:                                               ; preds = %28
  %35 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast i64** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.15"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = call i32 @cbor_encoder_create_array(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 %43) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %65

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %36, i64 0, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64*, i64** %37, align 8
  %51 = icmp eq i64* %49, %50
  br i1 %51, label %61, label %54

52:                                               ; preds = %54
  %53 = icmp eq i64* %60, %50
  br i1 %53, label %61, label %54

54:                                               ; preds = %47, %52
  %55 = phi i64* [ %60, %52 ], [ %49, %47 ]
  %56 = load i64, i64* %55, align 8
  %57 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %6, i64 %56) #13
  %58 = and i32 %57, 2147483647
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds i64, i64* %55, i64 1
  br i1 %59, label %52, label %65

61:                                               ; preds = %52, %47
  %62 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %63 = and i32 %62, 2147483647
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %54, %61, %34
  %66 = phi i32 [ %44, %34 ], [ %62, %61 ], [ %57, %54 ]
  %67 = sub nsw i32 0, %66
  %68 = sext i32 %67 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  br label %89

69:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  %70 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %89

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  %79 = bitcast %struct.CborEncoder* %4 to i64*
  %80 = load i64, i64* %79, align 8
  br i1 %78, label %81, label %85

81:                                               ; preds = %75
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = add i64 %80, %2
  br label %89

85:                                               ; preds = %75, %81
  %86 = phi i64 [ 0, %81 ], [ %80, %75 ]
  %87 = ptrtoint i8* %1 to i64
  %88 = sub i64 %86, %87
  br label %89

89:                                               ; preds = %65, %83, %85, %69, %28, %20, %14, %3
  %90 = phi i64 [ %74, %69 ], [ %68, %65 ], [ %33, %28 ], [ %27, %20 ], [ %19, %14 ], [ %13, %3 ], [ %84, %83 ], [ %88, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret i64 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs40EncodePresentationUrlAvailabilityRequestERKNS0_34PresentationUrlAvailabilityRequestEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* nocapture readonly dereferenceable(48), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %120, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = icmp eq i64 %39, %40
  %44 = inttoptr i64 %41 to i8*
  br i1 %43, label %45, label %58

45:                                               ; preds = %38
  %46 = add i64 %42, 1
  %47 = sub i64 %46, %41
  %48 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %120, label %51

51:                                               ; preds = %45
  %52 = icmp eq i64 %40, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 1) #13
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  br label %58

57:                                               ; preds = %51
  store i8* %44, i8** %4, align 8
  br label %58

58:                                               ; preds = %38, %53, %57
  %59 = phi i8* [ %44, %57 ], [ %56, %53 ], [ %44, %38 ]
  %60 = phi i64 [ -1, %57 ], [ %54, %53 ], [ %40, %38 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8 14, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %65 = load i64, i64* %5, align 8
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %65, %66
  %68 = sub i64 %67, %63
  %69 = inttoptr i64 %66 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %63
  %71 = tail call i64 @_ZN10openscreen4msgs40EncodePresentationUrlAvailabilityRequestERKNS0_34PresentationUrlAvailabilityRequestEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* dereferenceable(48) %0, i8* %70, i64 %68)
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %58, %110
  %74 = phi i64 [ %118, %110 ], [ %71, %58 ]
  %75 = phi i64 [ %115, %110 ], [ %68, %58 ]
  %76 = icmp sle i64 %74, %75
  %77 = sub i64 %74, %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = icmp slt i64 %77, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = sub nsw i64 0, %77
  %83 = load i64, i64* %5, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 %83, %84
  %86 = icmp ult i64 %85, %82
  br i1 %86, label %107, label %96

87:                                               ; preds = %79
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %88, %77
  %91 = sub i64 %90, %89
  %92 = load i64, i64* %64, align 8
  %93 = icmp ugt i64 %91, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = sub i64 %88, %89
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i64 [ %95, %94 ], [ %85, %81 ]
  %98 = phi i64 [ %89, %94 ], [ %84, %81 ]
  %99 = add i64 %97, %77
  %100 = icmp ult i64 %97, %99
  %101 = inttoptr i64 %98 to i8*
  br i1 %100, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %77) #13
  br label %107

103:                                              ; preds = %96
  %104 = icmp ugt i64 %97, %99
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8* %106, i8** %4, align 8
  br label %107

107:                                              ; preds = %73, %81, %87, %102, %103, %105
  %108 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %87 ], [ false, %102 ], [ false, %103 ], [ false, %105 ]
  %109 = or i1 %76, %108
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %10, align 8
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = sub i64 %114, %111
  %116 = inttoptr i64 %113 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %111
  %118 = tail call i64 @_ZN10openscreen4msgs40EncodePresentationUrlAvailabilityRequestERKNS0_34PresentationUrlAvailabilityRequestEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* dereferenceable(48) %0, i8* %117, i64 %115)
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %73

120:                                              ; preds = %107, %110, %58, %45, %18
  %121 = phi i1 [ false, %18 ], [ false, %45 ], [ false, %58 ], [ false, %110 ], [ %76, %107 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs40EncodePresentationUrlAvailabilityRequestERKNS0_34PresentationUrlAvailabilityRequestEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* nocapture readonly dereferenceable(48), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %8 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 4) #13
  %10 = and i32 %9, 2147483647
  %11 = icmp eq i32 %10, 0
  %12 = sub nsw i32 0, %9
  %13 = sext i32 %12 to i64
  br i1 %11, label %14, label %138

14:                                               ; preds = %3
  %15 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %138

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %22) #13
  %24 = and i32 %23, 2147483647
  %25 = icmp eq i32 %24, 0
  %26 = sub nsw i32 0, %23
  %27 = sext i32 %26 to i64
  br i1 %25, label %28, label %138

28:                                               ; preds = %20
  %29 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %30 = and i32 %29, 2147483647
  %31 = icmp eq i32 %30, 0
  %32 = sub nsw i32 0, %29
  %33 = sext i32 %32 to i64
  br i1 %31, label %34, label %138

34:                                               ; preds = %28
  %35 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.23"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = sdiv exact i64 %42, 24
  %44 = call i32 @cbor_encoder_create_array(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 %43) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %92

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %36, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %51 = icmp eq %"class.std::__1::basic_string"* %49, %50
  br i1 %51, label %82, label %54

52:                                               ; preds = %70
  %53 = icmp eq %"class.std::__1::basic_string"* %76, %50
  br i1 %53, label %82, label %54

54:                                               ; preds = %47, %52
  %55 = phi %"class.std::__1::basic_string"* [ %76, %52 ], [ %49, %47 ]
  %56 = call fastcc zeroext i1 @_ZN10openscreen4msgs12_GLOBAL__N_111IsValidUtf8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %55)
  br i1 %56, label %57, label %80

57:                                               ; preds = %54
  %58 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %70

67:                                               ; preds = %57
  %68 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %69 = zext i8 %60 to i64
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i8* [ %64, %62 ], [ %68, %67 ]
  %72 = phi i64 [ %66, %62 ], [ %69, %67 ]
  %73 = call i32 @cbor_encode_text_string(%struct.CborEncoder* nonnull %6, i8* %71, i64 %72) #13
  %74 = and i32 %73, 2147483647
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  br i1 %75, label %52, label %77

77:                                               ; preds = %70
  %78 = sub nsw i32 0, %73
  %79 = sext i32 %78 to i64
  br label %80

80:                                               ; preds = %54, %77
  %81 = phi i64 [ %79, %77 ], [ -516, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  br label %138

82:                                               ; preds = %52, %47
  %83 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %84 = and i32 %83, 2147483647
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  %87 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 2) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %96, label %138

92:                                               ; preds = %82, %34
  %93 = phi i32 [ %44, %34 ], [ %83, %82 ]
  %94 = sub nsw i32 0, %93
  %95 = sext i32 %94 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  br label %138

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %98) #13
  %100 = and i32 %99, 2147483647
  %101 = icmp eq i32 %100, 0
  %102 = sub nsw i32 0, %99
  %103 = sext i32 %102 to i64
  br i1 %101, label %104, label %138

104:                                              ; preds = %96
  %105 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 3) #13
  %106 = and i32 %105, 2147483647
  %107 = icmp eq i32 %106, 0
  %108 = sub nsw i32 0, %105
  %109 = sext i32 %108 to i64
  br i1 %107, label %110, label %138

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 3
  %112 = load i64, i64* %111, align 8
  %113 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %112) #13
  %114 = and i32 %113, 2147483647
  %115 = icmp eq i32 %114, 0
  %116 = sub nsw i32 0, %113
  %117 = sext i32 %116 to i64
  br i1 %115, label %118, label %138

118:                                              ; preds = %110
  %119 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %120 = and i32 %119, 2147483647
  %121 = icmp eq i32 %120, 0
  %122 = sub nsw i32 0, %119
  %123 = sext i32 %122 to i64
  br i1 %121, label %124, label %138

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %126, null
  %128 = bitcast %struct.CborEncoder* %4 to i64*
  %129 = load i64, i64* %128, align 8
  br i1 %127, label %130, label %134

130:                                              ; preds = %124
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = add i64 %129, %2
  br label %138

134:                                              ; preds = %124, %130
  %135 = phi i64 [ 0, %130 ], [ %129, %124 ]
  %136 = ptrtoint i8* %1 to i64
  %137 = sub i64 %135, %136
  br label %138

138:                                              ; preds = %92, %80, %132, %134, %118, %110, %104, %96, %86, %28, %20, %14, %3
  %139 = phi i64 [ %123, %118 ], [ %117, %110 ], [ %109, %104 ], [ %103, %96 ], [ %91, %86 ], [ %95, %92 ], [ %33, %28 ], [ %27, %20 ], [ %19, %14 ], [ %13, %3 ], [ %133, %132 ], [ %137, %134 ], [ %81, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret i64 %139
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4msgs41EncodePresentationUrlAvailabilityResponseERKNS0_35PresentationUrlAvailabilityResponseEPNS0_16CborEncodeBufferE(%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* nocapture readonly dereferenceable(32), %"class.openscreen::msgs::CborEncodeBuffer"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %38

13:                                               ; preds = %2
  %14 = add i64 %9, 250
  %15 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = sub i64 %16, %9
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %120, label %21

21:                                               ; preds = %18, %13
  %22 = phi i64 [ %14, %13 ], [ %16, %18 ]
  %23 = phi i64 [ 250, %13 ], [ %19, %18 ]
  %24 = icmp ult i64 %9, %22
  %25 = inttoptr i64 %8 to i8*
  br i1 %24, label %26, label %29

26:                                               ; preds = %21
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %23) #13
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %7, align 8
  br label %34

29:                                               ; preds = %21
  %30 = icmp ugt i64 %9, %22
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds i8, i8* %25, i64 %22
  store i8* %32, i8** %4, align 8
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %26, %29, %31
  %35 = phi i64 [ %28, %26 ], [ %8, %29 ], [ %8, %31 ]
  %36 = phi i64 [ %27, %26 ], [ %6, %29 ], [ %33, %31 ]
  store i64 %9, i64* %10, align 8
  %37 = sub i64 %36, %35
  br label %38

38:                                               ; preds = %34, %2
  %39 = phi i64 [ %37, %34 ], [ %9, %2 ]
  %40 = phi i64 [ %9, %34 ], [ %11, %2 ]
  %41 = phi i64 [ %35, %34 ], [ %8, %2 ]
  %42 = phi i64 [ %36, %34 ], [ %6, %2 ]
  %43 = icmp eq i64 %39, %40
  %44 = inttoptr i64 %41 to i8*
  br i1 %43, label %45, label %58

45:                                               ; preds = %38
  %46 = add i64 %42, 1
  %47 = sub i64 %46, %41
  %48 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %120, label %51

51:                                               ; preds = %45
  %52 = icmp eq i64 %40, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 1) #13
  %54 = load i64, i64* %10, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  br label %58

57:                                               ; preds = %51
  store i8* %44, i8** %4, align 8
  br label %58

58:                                               ; preds = %38, %53, %57
  %59 = phi i8* [ %44, %57 ], [ %56, %53 ], [ %44, %38 ]
  %60 = phi i64 [ -1, %57 ], [ %54, %53 ], [ %40, %38 ]
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  store i8 15, i8* %61, align 1
  %62 = load i64, i64* %10, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %10, align 8
  %64 = getelementptr inbounds %"class.openscreen::msgs::CborEncodeBuffer", %"class.openscreen::msgs::CborEncodeBuffer"* %1, i64 0, i32 0
  %65 = load i64, i64* %5, align 8
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %65, %66
  %68 = sub i64 %67, %63
  %69 = inttoptr i64 %66 to i8*
  %70 = getelementptr inbounds i8, i8* %69, i64 %63
  %71 = tail call i64 @_ZN10openscreen4msgs41EncodePresentationUrlAvailabilityResponseERKNS0_35PresentationUrlAvailabilityResponseEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* dereferenceable(32) %0, i8* %70, i64 %68)
  %72 = icmp slt i64 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %58, %110
  %74 = phi i64 [ %118, %110 ], [ %71, %58 ]
  %75 = phi i64 [ %115, %110 ], [ %68, %58 ]
  %76 = icmp sle i64 %74, %75
  %77 = sub i64 %74, %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = icmp slt i64 %77, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = sub nsw i64 0, %77
  %83 = load i64, i64* %5, align 8
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 %83, %84
  %86 = icmp ult i64 %85, %82
  br i1 %86, label %107, label %96

87:                                               ; preds = %79
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %7, align 8
  %90 = add i64 %88, %77
  %91 = sub i64 %90, %89
  %92 = load i64, i64* %64, align 8
  %93 = icmp ugt i64 %91, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87
  %95 = sub i64 %88, %89
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i64 [ %95, %94 ], [ %85, %81 ]
  %98 = phi i64 [ %89, %94 ], [ %84, %81 ]
  %99 = add i64 %97, %77
  %100 = icmp ult i64 %97, %99
  %101 = inttoptr i64 %98 to i8*
  br i1 %100, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %3, i64 %77) #13
  br label %107

103:                                              ; preds = %96
  %104 = icmp ugt i64 %97, %99
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8* %106, i8** %4, align 8
  br label %107

107:                                              ; preds = %73, %81, %87, %102, %103, %105
  %108 = phi i1 [ false, %73 ], [ true, %81 ], [ true, %87 ], [ false, %102 ], [ false, %103 ], [ false, %105 ]
  %109 = or i1 %76, %108
  br i1 %109, label %120, label %110

110:                                              ; preds = %107
  %111 = load i64, i64* %10, align 8
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = sub i64 %114, %111
  %116 = inttoptr i64 %113 to i8*
  %117 = getelementptr inbounds i8, i8* %116, i64 %111
  %118 = tail call i64 @_ZN10openscreen4msgs41EncodePresentationUrlAvailabilityResponseERKNS0_35PresentationUrlAvailabilityResponseEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* dereferenceable(32) %0, i8* %117, i64 %115)
  %119 = icmp slt i64 %118, 0
  br i1 %119, label %120, label %73

120:                                              ; preds = %107, %110, %58, %45, %18
  %121 = phi i1 [ false, %18 ], [ false, %45 ], [ false, %58 ], [ false, %110 ], [ %76, %107 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs41EncodePresentationUrlAvailabilityResponseERKNS0_35PresentationUrlAvailabilityResponseEPhm(%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* nocapture readonly dereferenceable(32), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.CborEncoder, align 8
  %5 = alloca %struct.CborEncoder, align 8
  %6 = alloca %struct.CborEncoder, align 8
  %7 = bitcast %struct.CborEncoder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @cbor_encoder_init(%struct.CborEncoder* nonnull %4, i8* %1, i64 %2, i32 0) #13
  %8 = bitcast %struct.CborEncoder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = call i32 @cbor_encoder_create_map(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5, i64 2) #13
  %10 = and i32 %9, 2147483647
  %11 = icmp eq i32 %10, 0
  %12 = sub nsw i32 0, %9
  %13 = sext i32 %12 to i64
  br i1 %11, label %14, label %89

14:                                               ; preds = %3
  %15 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 0) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %89

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 %22) #13
  %24 = and i32 %23, 2147483647
  %25 = icmp eq i32 %24, 0
  %26 = sub nsw i32 0, %23
  %27 = sext i32 %26 to i64
  br i1 %25, label %28, label %89

28:                                               ; preds = %20
  %29 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %5, i64 1) #13
  %30 = and i32 %29, 2147483647
  %31 = icmp eq i32 %30, 0
  %32 = sub nsw i32 0, %29
  %33 = sext i32 %32 to i64
  br i1 %31, label %34, label %89

34:                                               ; preds = %28
  %35 = bitcast %struct.CborEncoder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  %36 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast i64** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.15"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = call i32 @cbor_encoder_create_array(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6, i64 %43) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %65

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %36, i64 0, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64*, i64** %37, align 8
  %51 = icmp eq i64* %49, %50
  br i1 %51, label %61, label %54

52:                                               ; preds = %54
  %53 = icmp eq i64* %60, %50
  br i1 %53, label %61, label %54

54:                                               ; preds = %47, %52
  %55 = phi i64* [ %60, %52 ], [ %49, %47 ]
  %56 = load i64, i64* %55, align 8
  %57 = call i32 @cbor_encode_uint(%struct.CborEncoder* nonnull %6, i64 %56) #13
  %58 = and i32 %57, 2147483647
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds i64, i64* %55, i64 1
  br i1 %59, label %52, label %65

61:                                               ; preds = %52, %47
  %62 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %5, %struct.CborEncoder* nonnull %6) #13
  %63 = and i32 %62, 2147483647
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %54, %61, %34
  %66 = phi i32 [ %44, %34 ], [ %62, %61 ], [ %57, %54 ]
  %67 = sub nsw i32 0, %66
  %68 = sext i32 %67 to i64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  br label %89

69:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  %70 = call i32 @cbor_encoder_close_container(%struct.CborEncoder* nonnull %4, %struct.CborEncoder* nonnull %5) #13
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %89

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.CborEncoder, %struct.CborEncoder* %4, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  %79 = bitcast %struct.CborEncoder* %4 to i64*
  %80 = load i64, i64* %79, align 8
  br i1 %78, label %81, label %85

81:                                               ; preds = %75
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = add i64 %80, %2
  br label %89

85:                                               ; preds = %75, %81
  %86 = phi i64 [ 0, %81 ], [ %80, %75 ]
  %87 = ptrtoint i8* %1 to i64
  %88 = sub i64 %86, %87
  br label %89

89:                                               ; preds = %65, %83, %85, %69, %28, %20, %14, %3
  %90 = phi i64 [ %74, %69 ], [ %68, %65 ], [ %33, %28 ], [ %27, %20 ], [ %19, %14 ], [ %13, %3 ], [ %84, %83 ], [ %88, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret i64 %90
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN10openscreen4msgs17TypeEnumValidator8SafeCastEm(i64) local_unnamed_addr #3 align 2 {
  switch i64 %0, label %2 [
    i64 11, label %3
    i64 12, label %3
    i64 13, label %3
    i64 1001, label %3
    i64 1002, label %3
    i64 1003, label %3
    i64 113, label %3
    i64 111, label %3
    i64 112, label %3
    i64 16, label %3
    i64 109, label %3
    i64 110, label %3
    i64 104, label %3
    i64 105, label %3
    i64 108, label %3
    i64 106, label %3
    i64 107, label %3
    i64 103, label %3
    i64 14, label %3
    i64 15, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i64 [ 0, %2 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ], [ %0, %1 ]
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs23DecodeAgentInfoResponseEPKhmPNS0_17AgentInfoResponseE(i8*, i64, %"struct.openscreen::msgs::AgentInfoResponse"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca %struct.CborValue, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %13 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %14 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %15 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %17 = and i32 %16, 2147483647
  %18 = icmp eq i32 %17, 0
  %19 = sub nsw i32 0, %16
  %20 = sext i32 %19 to i64
  br i1 %18, label %21, label %338

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, -96
  br i1 %24, label %25, label %338

25:                                               ; preds = %21
  %26 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %28 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %29 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %30 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %31 = load i8, i8* %14, align 1
  %32 = and i8 %31, 4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %336

34:                                               ; preds = %25
  %35 = and i8 %31, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %42

39:                                               ; preds = %34
  %40 = load i16, i16* %13, align 4
  %41 = zext i16 %40 to i64
  br label %42

42:                                               ; preds = %39, %37
  %43 = phi i64 [ %41, %39 ], [ %38, %37 ]
  %44 = icmp eq i64 %43, 2
  br i1 %44, label %45, label %336

45:                                               ; preds = %42
  %46 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %47 = and i32 %46, 2147483647
  %48 = icmp eq i32 %47, 0
  %49 = sub nsw i32 0, %46
  %50 = sext i32 %49 to i64
  br i1 %48, label %51, label %336

51:                                               ; preds = %45
  %52 = load i8, i8* %28, align 2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %336

54:                                               ; preds = %51
  %55 = load i8, i8* %29, align 1
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %336

58:                                               ; preds = %54
  %59 = and i8 %55, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %66

63:                                               ; preds = %58
  %64 = load i16, i16* %27, align 4
  %65 = zext i16 %64 to i64
  br label %66

66:                                               ; preds = %63, %61
  %67 = phi i64 [ %62, %61 ], [ %65, %63 ]
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %336

69:                                               ; preds = %66
  %70 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = select i1 %72, i32 0, i32 %70
  %74 = and i32 %73, 2147483647
  %75 = icmp eq i32 %74, 0
  %76 = sub nsw i32 0, %73
  %77 = sext i32 %76 to i64
  br i1 %75, label %78, label %336

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %2, i64 0, i32 0
  %80 = load i8, i8* %29, align 1
  %81 = and i8 %80, 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %88

85:                                               ; preds = %78
  %86 = load i16, i16* %27, align 4
  %87 = zext i16 %86 to i64
  br label %88

88:                                               ; preds = %85, %83
  %89 = phi i64 [ %84, %83 ], [ %87, %85 ]
  store i64 %89, i64* %79, align 8
  %90 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %91 = and i32 %90, 2147483647
  %92 = icmp eq i32 %91, 0
  %93 = sub nsw i32 0, %90
  %94 = sext i32 %93 to i64
  br i1 %92, label %95, label %336

95:                                               ; preds = %88
  %96 = load i8, i8* %28, align 2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %336

98:                                               ; preds = %95
  %99 = load i8, i8* %29, align 1
  %100 = and i8 %99, 2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %336

102:                                              ; preds = %98
  %103 = and i8 %99, 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %110

107:                                              ; preds = %102
  %108 = load i16, i16* %27, align 4
  %109 = zext i16 %108 to i64
  br label %110

110:                                              ; preds = %107, %105
  %111 = phi i64 [ %106, %105 ], [ %109, %107 ]
  %112 = icmp eq i64 %111, 1
  br i1 %112, label %113, label %336

113:                                              ; preds = %110
  %114 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %115 = and i32 %114, 2147483647
  %116 = icmp eq i32 %115, 0
  %117 = select i1 %116, i32 0, i32 %114
  %118 = and i32 %117, 2147483647
  %119 = icmp eq i32 %118, 0
  %120 = sub nsw i32 0, %117
  %121 = sext i32 %120 to i64
  br i1 %119, label %122, label %336

122:                                              ; preds = %113
  %123 = load i8, i8* %28, align 2
  %124 = icmp eq i8 %123, -96
  br i1 %124, label %125, label %336

125:                                              ; preds = %122
  %126 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 3
  %128 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 4
  %129 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 5
  %130 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 24, i1 false)
  %131 = load i8, i8* %29, align 1
  %132 = and i8 %131, 4
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %334

134:                                              ; preds = %125
  %135 = and i8 %131, 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %142

139:                                              ; preds = %134
  %140 = load i16, i16* %27, align 4
  %141 = zext i16 %140 to i64
  br label %142

142:                                              ; preds = %139, %137
  %143 = phi i64 [ %141, %139 ], [ %138, %137 ]
  %144 = icmp eq i64 %143, 2
  br i1 %144, label %145, label %334

145:                                              ; preds = %142
  %146 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %147 = and i32 %146, 2147483647
  %148 = icmp eq i32 %147, 0
  %149 = sub nsw i32 0, %146
  %150 = sext i32 %149 to i64
  br i1 %148, label %151, label %334

151:                                              ; preds = %145
  %152 = load i8, i8* %128, align 2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %334

154:                                              ; preds = %151
  %155 = load i8, i8* %129, align 1
  %156 = and i8 %155, 2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %334

158:                                              ; preds = %154
  %159 = and i8 %155, 1
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %166

163:                                              ; preds = %158
  %164 = load i16, i16* %127, align 4
  %165 = zext i16 %164 to i64
  br label %166

166:                                              ; preds = %163, %161
  %167 = phi i64 [ %162, %161 ], [ %165, %163 ]
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %334

169:                                              ; preds = %166
  %170 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %7) #13
  %171 = and i32 %170, 2147483647
  %172 = icmp eq i32 %171, 0
  %173 = select i1 %172, i32 0, i32 %170
  %174 = and i32 %173, 2147483647
  %175 = icmp eq i32 %174, 0
  %176 = sub nsw i32 0, %173
  %177 = sext i32 %176 to i64
  br i1 %175, label %178, label %334

178:                                              ; preds = %169
  %179 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #13
  store i64 0, i64* %8, align 8
  %180 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %7, i32 16384) #13
  %181 = and i32 %180, 2147483647
  %182 = icmp eq i32 %181, 0
  %183 = sub nsw i32 0, %180
  %184 = sext i32 %183 to i64
  br i1 %182, label %185, label %332

185:                                              ; preds = %178
  %186 = load i8, i8* %129, align 1
  %187 = and i8 %186, 4
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %199

189:                                              ; preds = %185
  %190 = and i8 %186, 1
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %197

194:                                              ; preds = %189
  %195 = load i16, i16* %127, align 4
  %196 = zext i16 %195 to i64
  br label %197

197:                                              ; preds = %192, %194
  %198 = phi i64 [ %193, %192 ], [ %196, %194 ]
  store i64 %198, i64* %8, align 8
  br label %207

199:                                              ; preds = %185
  %200 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %7, i64* nonnull %8) #13
  %201 = and i32 %200, 2147483647
  %202 = icmp eq i32 %201, 0
  %203 = sub nsw i32 0, %200
  %204 = sext i32 %203 to i64
  br i1 %202, label %205, label %332

205:                                              ; preds = %199
  %206 = load i64, i64* %8, align 8
  br label %207

207:                                              ; preds = %205, %197
  %208 = phi i64 [ %198, %197 ], [ %206, %205 ]
  %209 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %2, i64 0, i32 1, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %209, i64 %208, i8 signext 0) #13
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  br label %219

217:                                              ; preds = %207
  %218 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  br label %219

219:                                              ; preds = %214, %217
  %220 = phi i8* [ %216, %214 ], [ %218, %217 ]
  %221 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %7, i8* %220, i64* nonnull %8, %struct.CborValue* null) #13
  %222 = and i32 %221, 2147483647
  %223 = icmp eq i32 %222, 0
  %224 = sub nsw i32 0, %221
  %225 = sext i32 %224 to i64
  br i1 %223, label %226, label %332

226:                                              ; preds = %219
  %227 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %7) #13
  %228 = and i32 %227, 2147483647
  %229 = icmp eq i32 %228, 0
  %230 = sub nsw i32 0, %227
  %231 = sext i32 %230 to i64
  br i1 %229, label %232, label %332

232:                                              ; preds = %226
  %233 = load i8, i8* %128, align 2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %235, label %332

235:                                              ; preds = %232
  %236 = load i8, i8* %129, align 1
  %237 = and i8 %236, 2
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %239, label %332

239:                                              ; preds = %235
  %240 = and i8 %236, 1
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %239
  %243 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %247

244:                                              ; preds = %239
  %245 = load i16, i16* %127, align 4
  %246 = zext i16 %245 to i64
  br label %247

247:                                              ; preds = %244, %242
  %248 = phi i64 [ %243, %242 ], [ %246, %244 ]
  %249 = icmp eq i64 %248, 1
  br i1 %249, label %250, label %332

250:                                              ; preds = %247
  %251 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %7) #13
  %252 = and i32 %251, 2147483647
  %253 = icmp eq i32 %252, 0
  %254 = select i1 %253, i32 0, i32 %251
  %255 = and i32 %254, 2147483647
  %256 = icmp eq i32 %255, 0
  %257 = sub nsw i32 0, %254
  %258 = sext i32 %257 to i64
  br i1 %256, label %259, label %332

259:                                              ; preds = %250
  %260 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #13
  store i64 0, i64* %9, align 8
  %261 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %7, i32 16384) #13
  %262 = and i32 %261, 2147483647
  %263 = icmp eq i32 %262, 0
  %264 = sub nsw i32 0, %261
  %265 = sext i32 %264 to i64
  br i1 %263, label %266, label %330

266:                                              ; preds = %259
  %267 = load i8, i8* %129, align 1
  %268 = and i8 %267, 4
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %270, label %280

270:                                              ; preds = %266
  %271 = and i8 %267, 1
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %278

275:                                              ; preds = %270
  %276 = load i16, i16* %127, align 4
  %277 = zext i16 %276 to i64
  br label %278

278:                                              ; preds = %273, %275
  %279 = phi i64 [ %274, %273 ], [ %277, %275 ]
  store i64 %279, i64* %9, align 8
  br label %288

280:                                              ; preds = %266
  %281 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %7, i64* nonnull %9) #13
  %282 = and i32 %281, 2147483647
  %283 = icmp eq i32 %282, 0
  %284 = sub nsw i32 0, %281
  %285 = sext i32 %284 to i64
  br i1 %283, label %286, label %330

286:                                              ; preds = %280
  %287 = load i64, i64* %9, align 8
  br label %288

288:                                              ; preds = %286, %278
  %289 = phi i64 [ %279, %278 ], [ %287, %286 ]
  %290 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %2, i64 0, i32 1, i32 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %290, i64 %289, i8 signext 0) #13
  %291 = bitcast %"class.std::__1::basic_string"* %290 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %295, label %298

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %290, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load i8*, i8** %296, align 8
  br label %300

298:                                              ; preds = %288
  %299 = bitcast %"class.std::__1::basic_string"* %290 to i8*
  br label %300

300:                                              ; preds = %295, %298
  %301 = phi i8* [ %297, %295 ], [ %299, %298 ]
  %302 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %7, i8* %301, i64* nonnull %9, %struct.CborValue* null) #13
  %303 = and i32 %302, 2147483647
  %304 = icmp eq i32 %303, 0
  %305 = sub nsw i32 0, %302
  %306 = sext i32 %305 to i64
  br i1 %304, label %307, label %330

307:                                              ; preds = %300
  %308 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %7) #13
  %309 = and i32 %308, 2147483647
  %310 = icmp eq i32 %309, 0
  %311 = sub nsw i32 0, %308
  %312 = sext i32 %311 to i64
  br i1 %310, label %313, label %330

313:                                              ; preds = %307
  %314 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %315 = and i32 %314, 2147483647
  %316 = icmp eq i32 %315, 0
  %317 = sub nsw i32 0, %314
  %318 = sext i32 %317 to i64
  br i1 %316, label %319, label %330

319:                                              ; preds = %313
  %320 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %321 = and i32 %320, 2147483647
  %322 = icmp eq i32 %321, 0
  %323 = sub nsw i32 0, %320
  %324 = sext i32 %323 to i64
  br i1 %322, label %325, label %330

325:                                              ; preds = %319
  %326 = bitcast i8** %12 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = ptrtoint i8* %0 to i64
  %329 = sub i64 %327, %328
  br label %330

330:                                              ; preds = %319, %313, %307, %300, %280, %259, %325
  %331 = phi i64 [ %329, %325 ], [ %324, %319 ], [ %318, %313 ], [ %312, %307 ], [ %306, %300 ], [ %285, %280 ], [ %265, %259 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #13
  br label %332

332:                                              ; preds = %232, %247, %235, %250, %226, %219, %199, %178, %330
  %333 = phi i64 [ %331, %330 ], [ %258, %250 ], [ %231, %226 ], [ %225, %219 ], [ %204, %199 ], [ %184, %178 ], [ -519, %235 ], [ -519, %247 ], [ -519, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #13
  br label %334

334:                                              ; preds = %125, %151, %166, %154, %142, %169, %145, %332
  %335 = phi i64 [ %333, %332 ], [ %177, %169 ], [ %150, %145 ], [ -1, %142 ], [ -519, %154 ], [ -519, %166 ], [ -519, %151 ], [ -2, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  br label %336

336:                                              ; preds = %25, %95, %110, %98, %51, %66, %54, %122, %42, %113, %88, %69, %45, %334
  %337 = phi i64 [ %335, %334 ], [ %121, %113 ], [ %94, %88 ], [ %77, %69 ], [ %50, %45 ], [ -1, %42 ], [ -1, %122 ], [ -519, %54 ], [ -519, %66 ], [ -519, %51 ], [ -519, %98 ], [ -519, %110 ], [ -519, %95 ], [ -2, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  br label %338

338:                                              ; preds = %21, %3, %336
  %339 = phi i64 [ %337, %336 ], [ %20, %3 ], [ -1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  ret i64 %339
}

declare i32 @cbor_parser_init(i8*, i64, i32, %struct.CborParser*, %struct.CborValue*) local_unnamed_addr #2

declare i32 @cbor_value_enter_container(%struct.CborValue*, %struct.CborValue*) local_unnamed_addr #2

declare i32 @cbor_value_validate(%struct.CborValue*, i32) local_unnamed_addr #2

declare i32 @cbor_value_calculate_string_length(%struct.CborValue*, i64*) local_unnamed_addr #2

declare i32 @cbor_value_leave_container(%struct.CborValue*, %struct.CborValue*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs24DecodeAgentStatusRequestEPKhmPNS0_18AgentStatusRequestE(i8*, i64, %"struct.openscreen::msgs::AgentStatusRequest"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca %struct.CborValue, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %13 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %14 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %244

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, -96
  br i1 %23, label %24, label %244

24:                                               ; preds = %20
  %25 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %28 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %29 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i8, i8* %13, align 1
  %31 = and i8 %30, 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %242

33:                                               ; preds = %24
  %34 = and i8 %30, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %41

38:                                               ; preds = %33
  %39 = load i16, i16* %12, align 4
  %40 = zext i16 %39 to i64
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi i64 [ %40, %38 ], [ %37, %36 ]
  %43 = add i64 %42, -1
  %44 = icmp ugt i64 %43, 1
  br i1 %44, label %242, label %45

45:                                               ; preds = %41
  %46 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %47 = and i32 %46, 2147483647
  %48 = icmp eq i32 %47, 0
  %49 = sub nsw i32 0, %46
  %50 = sext i32 %49 to i64
  %51 = select i1 %48, i64 %19, i64 %50
  br i1 %48, label %52, label %242

52:                                               ; preds = %45
  %53 = load i8, i8* %27, align 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %242

55:                                               ; preds = %52
  %56 = load i8, i8* %28, align 1
  %57 = and i8 %56, 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %242

59:                                               ; preds = %55
  %60 = and i8 %56, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %67

64:                                               ; preds = %59
  %65 = load i16, i16* %26, align 4
  %66 = zext i16 %65 to i64
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i64 [ %63, %62 ], [ %66, %64 ]
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %242

70:                                               ; preds = %67
  %71 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, i32 0, i32 %71
  %75 = and i32 %74, 2147483647
  %76 = icmp eq i32 %75, 0
  %77 = sub nsw i32 0, %74
  %78 = sext i32 %77 to i64
  %79 = select i1 %76, i64 %51, i64 %78
  br i1 %76, label %80, label %242

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %2, i64 0, i32 0
  %82 = load i8, i8* %28, align 1
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %90

87:                                               ; preds = %80
  %88 = load i16, i16* %26, align 4
  %89 = zext i16 %88 to i64
  br label %90

90:                                               ; preds = %87, %85
  %91 = phi i64 [ %86, %85 ], [ %89, %87 ]
  store i64 %91, i64* %81, align 8
  %92 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %93 = and i32 %92, 2147483647
  %94 = icmp eq i32 %93, 0
  %95 = sub nsw i32 0, %92
  %96 = sext i32 %95 to i64
  %97 = select i1 %94, i64 %79, i64 %96
  br i1 %94, label %98, label %242

98:                                               ; preds = %90
  %99 = icmp ugt i64 %42, 1
  br i1 %99, label %100, label %229

100:                                              ; preds = %98
  %101 = load i8, i8* %27, align 2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %242

103:                                              ; preds = %100
  %104 = load i8, i8* %28, align 1
  %105 = and i8 %104, 2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %242

107:                                              ; preds = %103
  %108 = and i8 %104, 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %115

112:                                              ; preds = %107
  %113 = load i16, i16* %26, align 4
  %114 = zext i16 %113 to i64
  br label %115

115:                                              ; preds = %112, %110
  %116 = phi i64 [ %111, %110 ], [ %114, %112 ]
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %118, label %242

118:                                              ; preds = %115
  %119 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %120 = and i32 %119, 2147483647
  %121 = icmp eq i32 %120, 0
  %122 = select i1 %121, i32 0, i32 %119
  %123 = and i32 %122, 2147483647
  %124 = icmp eq i32 %123, 0
  %125 = sub nsw i32 0, %122
  %126 = sext i32 %125 to i64
  %127 = select i1 %124, i64 %97, i64 %126
  br i1 %124, label %128, label %242

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %2, i64 0, i32 1
  store i8 1, i8* %129, align 8
  %130 = load i8, i8* %27, align 2
  %131 = icmp eq i8 %130, -96
  br i1 %131, label %132, label %242

132:                                              ; preds = %128
  %133 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #13
  %134 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 3
  %135 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 5
  %136 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 24, i1 false)
  %137 = load i8, i8* %28, align 1
  %138 = and i8 %137, 4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %214

140:                                              ; preds = %132
  %141 = and i8 %137, 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %148

145:                                              ; preds = %140
  %146 = load i16, i16* %26, align 4
  %147 = zext i16 %146 to i64
  br label %148

148:                                              ; preds = %145, %143
  %149 = phi i64 [ %147, %145 ], [ %144, %143 ]
  %150 = icmp eq i64 %149, 1
  br i1 %150, label %151, label %214

151:                                              ; preds = %148
  %152 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %153 = and i32 %152, 2147483647
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %216

155:                                              ; preds = %151
  %156 = call i32 @_ZN10openscreen4msgs9ExpectKeyEP9CborValuePKcm(%struct.CborValue* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6)
  %157 = and i32 %156, 2147483647
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %216

159:                                              ; preds = %155
  %160 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #13
  store i64 0, i64* %8, align 8
  %161 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %7, i32 16384) #13
  %162 = and i32 %161, 2147483647
  %163 = icmp eq i32 %162, 0
  %164 = sub nsw i32 0, %161
  %165 = sext i32 %164 to i64
  %166 = select i1 %163, i64 %127, i64 %165
  br i1 %163, label %167, label %220

167:                                              ; preds = %159
  %168 = load i8, i8* %135, align 1
  %169 = and i8 %168, 4
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %181

171:                                              ; preds = %167
  %172 = and i8 %168, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %179

176:                                              ; preds = %171
  %177 = load i16, i16* %134, align 4
  %178 = zext i16 %177 to i64
  br label %179

179:                                              ; preds = %174, %176
  %180 = phi i64 [ %175, %174 ], [ %178, %176 ]
  store i64 %180, i64* %8, align 8
  br label %189

181:                                              ; preds = %167
  %182 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %7, i64* nonnull %8) #13
  %183 = and i32 %182, 2147483647
  %184 = icmp eq i32 %183, 0
  %185 = sub nsw i32 0, %182
  %186 = sext i32 %185 to i64
  br i1 %184, label %187, label %220

187:                                              ; preds = %181
  %188 = load i64, i64* %8, align 8
  br label %189

189:                                              ; preds = %187, %179
  %190 = phi i64 [ %188, %187 ], [ %180, %179 ]
  %191 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %2, i64 0, i32 2, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %191, i64 %190, i8 signext 0) #13
  %192 = bitcast %"class.std::__1::basic_string"* %191 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  br label %201

199:                                              ; preds = %189
  %200 = bitcast %"class.std::__1::basic_string"* %191 to i8*
  br label %201

201:                                              ; preds = %196, %199
  %202 = phi i8* [ %198, %196 ], [ %200, %199 ]
  %203 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %7, i8* %202, i64* nonnull %8, %struct.CborValue* null) #13
  %204 = and i32 %203, 2147483647
  %205 = icmp eq i32 %204, 0
  %206 = sub nsw i32 0, %203
  %207 = sext i32 %206 to i64
  br i1 %205, label %208, label %220

208:                                              ; preds = %201
  %209 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %7) #13
  %210 = and i32 %209, 2147483647
  %211 = icmp eq i32 %210, 0
  %212 = sub nsw i32 0, %209
  %213 = sext i32 %212 to i64
  br i1 %211, label %222, label %220

214:                                              ; preds = %132, %148
  %215 = phi i64 [ -1, %148 ], [ -2, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %242

216:                                              ; preds = %155, %151
  %217 = phi i32 [ %152, %151 ], [ %156, %155 ]
  %218 = sub nsw i32 0, %217
  %219 = sext i32 %218 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %242

220:                                              ; preds = %208, %201, %181, %159
  %221 = phi i64 [ %165, %159 ], [ %186, %181 ], [ %207, %201 ], [ %213, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %242

222:                                              ; preds = %208
  %223 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %224 = and i32 %223, 2147483647
  %225 = icmp eq i32 %224, 0
  %226 = sub nsw i32 0, %223
  %227 = sext i32 %226 to i64
  %228 = select i1 %225, i64 %166, i64 %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br i1 %225, label %231, label %242

229:                                              ; preds = %98
  %230 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %2, i64 0, i32 1
  store i8 0, i8* %230, align 8
  br label %231

231:                                              ; preds = %222, %229
  %232 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %233 = and i32 %232, 2147483647
  %234 = icmp eq i32 %233, 0
  %235 = sub nsw i32 0, %232
  %236 = sext i32 %235 to i64
  br i1 %234, label %237, label %242

237:                                              ; preds = %231
  %238 = bitcast i8** %11 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = ptrtoint i8* %0 to i64
  %241 = sub i64 %239, %240
  br label %242

242:                                              ; preds = %220, %216, %24, %100, %115, %103, %52, %67, %55, %214, %128, %41, %222, %118, %231, %90, %70, %45, %237
  %243 = phi i64 [ %241, %237 ], [ %236, %231 ], [ %228, %222 ], [ %126, %118 ], [ %96, %90 ], [ %78, %70 ], [ %50, %45 ], [ -1, %41 ], [ -1, %128 ], [ %215, %214 ], [ -519, %55 ], [ -519, %67 ], [ -519, %52 ], [ -519, %103 ], [ -519, %115 ], [ -519, %100 ], [ -2, %24 ], [ %219, %216 ], [ %221, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %244

244:                                              ; preds = %20, %3, %242
  %245 = phi i64 [ %243, %242 ], [ %19, %3 ], [ -1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i64 %245
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs25DecodeAgentStatusResponseEPKhmPNS0_19AgentStatusResponseE(i8*, i64, %"struct.openscreen::msgs::AgentStatusResponse"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca %struct.CborValue, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %13 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %14 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %244

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, -96
  br i1 %23, label %24, label %244

24:                                               ; preds = %20
  %25 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %28 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %29 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i8, i8* %13, align 1
  %31 = and i8 %30, 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %242

33:                                               ; preds = %24
  %34 = and i8 %30, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %41

38:                                               ; preds = %33
  %39 = load i16, i16* %12, align 4
  %40 = zext i16 %39 to i64
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi i64 [ %40, %38 ], [ %37, %36 ]
  %43 = add i64 %42, -1
  %44 = icmp ugt i64 %43, 1
  br i1 %44, label %242, label %45

45:                                               ; preds = %41
  %46 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %47 = and i32 %46, 2147483647
  %48 = icmp eq i32 %47, 0
  %49 = sub nsw i32 0, %46
  %50 = sext i32 %49 to i64
  %51 = select i1 %48, i64 %19, i64 %50
  br i1 %48, label %52, label %242

52:                                               ; preds = %45
  %53 = load i8, i8* %27, align 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %242

55:                                               ; preds = %52
  %56 = load i8, i8* %28, align 1
  %57 = and i8 %56, 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %242

59:                                               ; preds = %55
  %60 = and i8 %56, 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %67

64:                                               ; preds = %59
  %65 = load i16, i16* %26, align 4
  %66 = zext i16 %65 to i64
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i64 [ %63, %62 ], [ %66, %64 ]
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %242

70:                                               ; preds = %67
  %71 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = select i1 %73, i32 0, i32 %71
  %75 = and i32 %74, 2147483647
  %76 = icmp eq i32 %75, 0
  %77 = sub nsw i32 0, %74
  %78 = sext i32 %77 to i64
  %79 = select i1 %76, i64 %51, i64 %78
  br i1 %76, label %80, label %242

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %2, i64 0, i32 0
  %82 = load i8, i8* %28, align 1
  %83 = and i8 %82, 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %90

87:                                               ; preds = %80
  %88 = load i16, i16* %26, align 4
  %89 = zext i16 %88 to i64
  br label %90

90:                                               ; preds = %87, %85
  %91 = phi i64 [ %86, %85 ], [ %89, %87 ]
  store i64 %91, i64* %81, align 8
  %92 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %93 = and i32 %92, 2147483647
  %94 = icmp eq i32 %93, 0
  %95 = sub nsw i32 0, %92
  %96 = sext i32 %95 to i64
  %97 = select i1 %94, i64 %79, i64 %96
  br i1 %94, label %98, label %242

98:                                               ; preds = %90
  %99 = icmp ugt i64 %42, 1
  br i1 %99, label %100, label %229

100:                                              ; preds = %98
  %101 = load i8, i8* %27, align 2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %242

103:                                              ; preds = %100
  %104 = load i8, i8* %28, align 1
  %105 = and i8 %104, 2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %242

107:                                              ; preds = %103
  %108 = and i8 %104, 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %115

112:                                              ; preds = %107
  %113 = load i16, i16* %26, align 4
  %114 = zext i16 %113 to i64
  br label %115

115:                                              ; preds = %112, %110
  %116 = phi i64 [ %111, %110 ], [ %114, %112 ]
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %118, label %242

118:                                              ; preds = %115
  %119 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %120 = and i32 %119, 2147483647
  %121 = icmp eq i32 %120, 0
  %122 = select i1 %121, i32 0, i32 %119
  %123 = and i32 %122, 2147483647
  %124 = icmp eq i32 %123, 0
  %125 = sub nsw i32 0, %122
  %126 = sext i32 %125 to i64
  %127 = select i1 %124, i64 %97, i64 %126
  br i1 %124, label %128, label %242

128:                                              ; preds = %118
  %129 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %2, i64 0, i32 1
  store i8 1, i8* %129, align 8
  %130 = load i8, i8* %27, align 2
  %131 = icmp eq i8 %130, -96
  br i1 %131, label %132, label %242

132:                                              ; preds = %128
  %133 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #13
  %134 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 3
  %135 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 5
  %136 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 24, i1 false)
  %137 = load i8, i8* %28, align 1
  %138 = and i8 %137, 4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %214

140:                                              ; preds = %132
  %141 = and i8 %137, 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %148

145:                                              ; preds = %140
  %146 = load i16, i16* %26, align 4
  %147 = zext i16 %146 to i64
  br label %148

148:                                              ; preds = %145, %143
  %149 = phi i64 [ %147, %145 ], [ %144, %143 ]
  %150 = icmp eq i64 %149, 1
  br i1 %150, label %151, label %214

151:                                              ; preds = %148
  %152 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %153 = and i32 %152, 2147483647
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %216

155:                                              ; preds = %151
  %156 = call i32 @_ZN10openscreen4msgs9ExpectKeyEP9CborValuePKcm(%struct.CborValue* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6)
  %157 = and i32 %156, 2147483647
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %216

159:                                              ; preds = %155
  %160 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #13
  store i64 0, i64* %8, align 8
  %161 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %7, i32 16384) #13
  %162 = and i32 %161, 2147483647
  %163 = icmp eq i32 %162, 0
  %164 = sub nsw i32 0, %161
  %165 = sext i32 %164 to i64
  %166 = select i1 %163, i64 %127, i64 %165
  br i1 %163, label %167, label %220

167:                                              ; preds = %159
  %168 = load i8, i8* %135, align 1
  %169 = and i8 %168, 4
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %181

171:                                              ; preds = %167
  %172 = and i8 %168, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %179

176:                                              ; preds = %171
  %177 = load i16, i16* %134, align 4
  %178 = zext i16 %177 to i64
  br label %179

179:                                              ; preds = %174, %176
  %180 = phi i64 [ %175, %174 ], [ %178, %176 ]
  store i64 %180, i64* %8, align 8
  br label %189

181:                                              ; preds = %167
  %182 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %7, i64* nonnull %8) #13
  %183 = and i32 %182, 2147483647
  %184 = icmp eq i32 %183, 0
  %185 = sub nsw i32 0, %182
  %186 = sext i32 %185 to i64
  br i1 %184, label %187, label %220

187:                                              ; preds = %181
  %188 = load i64, i64* %8, align 8
  br label %189

189:                                              ; preds = %187, %179
  %190 = phi i64 [ %188, %187 ], [ %180, %179 ]
  %191 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %2, i64 0, i32 2, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %191, i64 %190, i8 signext 0) #13
  %192 = bitcast %"class.std::__1::basic_string"* %191 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  br label %201

199:                                              ; preds = %189
  %200 = bitcast %"class.std::__1::basic_string"* %191 to i8*
  br label %201

201:                                              ; preds = %196, %199
  %202 = phi i8* [ %198, %196 ], [ %200, %199 ]
  %203 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %7, i8* %202, i64* nonnull %8, %struct.CborValue* null) #13
  %204 = and i32 %203, 2147483647
  %205 = icmp eq i32 %204, 0
  %206 = sub nsw i32 0, %203
  %207 = sext i32 %206 to i64
  br i1 %205, label %208, label %220

208:                                              ; preds = %201
  %209 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %7) #13
  %210 = and i32 %209, 2147483647
  %211 = icmp eq i32 %210, 0
  %212 = sub nsw i32 0, %209
  %213 = sext i32 %212 to i64
  br i1 %211, label %222, label %220

214:                                              ; preds = %132, %148
  %215 = phi i64 [ -1, %148 ], [ -2, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %242

216:                                              ; preds = %155, %151
  %217 = phi i32 [ %152, %151 ], [ %156, %155 ]
  %218 = sub nsw i32 0, %217
  %219 = sext i32 %218 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %242

220:                                              ; preds = %208, %201, %181, %159
  %221 = phi i64 [ %165, %159 ], [ %186, %181 ], [ %207, %201 ], [ %213, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br label %242

222:                                              ; preds = %208
  %223 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %224 = and i32 %223, 2147483647
  %225 = icmp eq i32 %224, 0
  %226 = sub nsw i32 0, %223
  %227 = sext i32 %226 to i64
  %228 = select i1 %225, i64 %166, i64 %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #13
  br i1 %225, label %231, label %242

229:                                              ; preds = %98
  %230 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %2, i64 0, i32 1
  store i8 0, i8* %230, align 8
  br label %231

231:                                              ; preds = %222, %229
  %232 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %233 = and i32 %232, 2147483647
  %234 = icmp eq i32 %233, 0
  %235 = sub nsw i32 0, %232
  %236 = sext i32 %235 to i64
  br i1 %234, label %237, label %242

237:                                              ; preds = %231
  %238 = bitcast i8** %11 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = ptrtoint i8* %0 to i64
  %241 = sub i64 %239, %240
  br label %242

242:                                              ; preds = %220, %216, %24, %100, %115, %103, %52, %67, %55, %214, %128, %41, %222, %118, %231, %90, %70, %45, %237
  %243 = phi i64 [ %241, %237 ], [ %236, %231 ], [ %228, %222 ], [ %126, %118 ], [ %96, %90 ], [ %78, %70 ], [ %50, %45 ], [ -1, %41 ], [ -1, %128 ], [ %215, %214 ], [ -519, %55 ], [ -519, %67 ], [ -519, %52 ], [ -519, %103 ], [ -519, %115 ], [ -519, %100 ], [ -2, %24 ], [ %219, %216 ], [ %221, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %244

244:                                              ; preds = %20, %3, %242
  %245 = phi i64 [ %243, %242 ], [ %19, %3 ], [ -1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i64 %245
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs27DecodeAuthenticationRequestEPKhmPNS0_21AuthenticationRequestE(i8*, i64, %"struct.openscreen::msgs::AuthenticationRequest"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %278

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %278

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %276

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = icmp eq i64 %41, 4
  br i1 %42, label %43, label %276

43:                                               ; preds = %40
  %44 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %49, label %276

49:                                               ; preds = %43
  %50 = load i8, i8* %26, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %276

52:                                               ; preds = %49
  %53 = load i8, i8* %27, align 1
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %276

56:                                               ; preds = %52
  %57 = and i8 %53, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %64

61:                                               ; preds = %56
  %62 = load i16, i16* %25, align 4
  %63 = zext i16 %62 to i64
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %276

67:                                               ; preds = %64
  %68 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %69 = and i32 %68, 2147483647
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = sub nsw i32 0, %71
  %75 = sext i32 %74 to i64
  br i1 %73, label %76, label %276

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %2, i64 0, i32 0
  %78 = load i8, i8* %27, align 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %86

83:                                               ; preds = %76
  %84 = load i16, i16* %25, align 4
  %85 = zext i16 %84 to i64
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  store i64 %87, i64* %77, align 8
  %88 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %89 = and i32 %88, 2147483647
  %90 = icmp eq i32 %89, 0
  %91 = sub nsw i32 0, %88
  %92 = sext i32 %91 to i64
  br i1 %90, label %93, label %276

93:                                               ; preds = %86
  %94 = load i8, i8* %26, align 2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %276

96:                                               ; preds = %93
  %97 = load i8, i8* %27, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %276

100:                                              ; preds = %96
  %101 = and i8 %97, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %108

105:                                              ; preds = %100
  %106 = load i16, i16* %25, align 4
  %107 = zext i16 %106 to i64
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i64 [ %104, %103 ], [ %107, %105 ]
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %276

111:                                              ; preds = %108
  %112 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %113 = and i32 %112, 2147483647
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 0, i32 %112
  %116 = and i32 %115, 2147483647
  %117 = icmp eq i32 %116, 0
  %118 = sub nsw i32 0, %115
  %119 = sext i32 %118 to i64
  br i1 %117, label %120, label %276

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %2, i64 0, i32 1
  %122 = load i8, i8* %27, align 1
  %123 = and i8 %122, 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  %126 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %130

127:                                              ; preds = %120
  %128 = load i16, i16* %25, align 4
  %129 = zext i16 %128 to i64
  br label %130

130:                                              ; preds = %127, %125
  %131 = phi i64 [ %126, %125 ], [ %129, %127 ]
  store i64 %131, i64* %121, align 8
  %132 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %133 = and i32 %132, 2147483647
  %134 = icmp eq i32 %133, 0
  %135 = sub nsw i32 0, %132
  %136 = sext i32 %135 to i64
  br i1 %134, label %137, label %276

137:                                              ; preds = %130
  %138 = load i8, i8* %26, align 2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %276

140:                                              ; preds = %137
  %141 = load i8, i8* %27, align 1
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %276

144:                                              ; preds = %140
  %145 = and i8 %141, 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %152

149:                                              ; preds = %144
  %150 = load i16, i16* %25, align 4
  %151 = zext i16 %150 to i64
  br label %152

152:                                              ; preds = %149, %147
  %153 = phi i64 [ %148, %147 ], [ %151, %149 ]
  %154 = icmp eq i64 %153, 2
  br i1 %154, label %155, label %276

155:                                              ; preds = %152
  %156 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %157 = and i32 %156, 2147483647
  %158 = icmp eq i32 %157, 0
  %159 = select i1 %158, i32 0, i32 %156
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 0
  %162 = sub nsw i32 0, %159
  %163 = sext i32 %162 to i64
  br i1 %161, label %164, label %276

164:                                              ; preds = %155
  %165 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #13
  store i64 0, i64* %7, align 8
  %166 = load i8, i8* %27, align 1
  %167 = and i8 %166, 4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %164
  %170 = and i8 %166, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %177

174:                                              ; preds = %169
  %175 = load i16, i16* %25, align 4
  %176 = zext i16 %175 to i64
  br label %177

177:                                              ; preds = %172, %174
  %178 = phi i64 [ %173, %172 ], [ %176, %174 ]
  store i64 %178, i64* %7, align 8
  br label %187

179:                                              ; preds = %164
  %180 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %181 = and i32 %180, 2147483647
  %182 = icmp eq i32 %181, 0
  %183 = sub nsw i32 0, %180
  %184 = sext i32 %183 to i64
  br i1 %182, label %185, label %274

185:                                              ; preds = %179
  %186 = load i64, i64* %7, align 8
  br label %187

187:                                              ; preds = %185, %177
  %188 = phi i64 [ %178, %177 ], [ %186, %185 ]
  %189 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %2, i64 0, i32 2
  %190 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %2, i64 0, i32 2, i32 0, i32 1
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = icmp ugt i64 %188, %195
  %197 = inttoptr i64 %194 to i8*
  br i1 %196, label %198, label %202

198:                                              ; preds = %187
  %199 = sub i64 %188, %195
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %189, i64 %199) #13
  %200 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %189, i64 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  br label %206

202:                                              ; preds = %187
  %203 = icmp ult i64 %188, %195
  br i1 %203, label %204, label %206

204:                                              ; preds = %202
  %205 = getelementptr inbounds i8, i8* %197, i64 %188
  store i8* %205, i8** %190, align 8
  br label %206

206:                                              ; preds = %198, %202, %204
  %207 = phi i8* [ %201, %198 ], [ %197, %202 ], [ %197, %204 ]
  %208 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %207, i64* nonnull %7, %struct.CborValue* null) #13
  %209 = and i32 %208, 2147483647
  %210 = icmp eq i32 %209, 0
  %211 = sub nsw i32 0, %208
  %212 = sext i32 %211 to i64
  br i1 %210, label %213, label %274

213:                                              ; preds = %206
  %214 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %215 = and i32 %214, 2147483647
  %216 = icmp eq i32 %215, 0
  %217 = sub nsw i32 0, %214
  %218 = sext i32 %217 to i64
  br i1 %216, label %219, label %274

219:                                              ; preds = %213
  %220 = load i8, i8* %26, align 2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %274

222:                                              ; preds = %219
  %223 = load i8, i8* %27, align 1
  %224 = and i8 %223, 2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %274

226:                                              ; preds = %222
  %227 = and i8 %223, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %234

231:                                              ; preds = %226
  %232 = load i16, i16* %25, align 4
  %233 = zext i16 %232 to i64
  br label %234

234:                                              ; preds = %231, %229
  %235 = phi i64 [ %230, %229 ], [ %233, %231 ]
  %236 = icmp eq i64 %235, 3
  br i1 %236, label %237, label %274

237:                                              ; preds = %234
  %238 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %239 = and i32 %238, 2147483647
  %240 = icmp eq i32 %239, 0
  %241 = select i1 %240, i32 0, i32 %238
  %242 = and i32 %241, 2147483647
  %243 = icmp eq i32 %242, 0
  %244 = sub nsw i32 0, %241
  %245 = sext i32 %244 to i64
  br i1 %243, label %246, label %274

246:                                              ; preds = %237
  %247 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %2, i64 0, i32 3
  %248 = load i8, i8* %27, align 1
  %249 = and i8 %248, 1
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %246
  %252 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %256

253:                                              ; preds = %246
  %254 = load i16, i16* %25, align 4
  %255 = zext i16 %254 to i64
  br label %256

256:                                              ; preds = %253, %251
  %257 = phi i64 [ %252, %251 ], [ %255, %253 ]
  store i64 %257, i64* %247, align 8
  %258 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %259 = and i32 %258, 2147483647
  %260 = icmp eq i32 %259, 0
  %261 = sub nsw i32 0, %258
  %262 = sext i32 %261 to i64
  br i1 %260, label %263, label %274

263:                                              ; preds = %256
  %264 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %265 = and i32 %264, 2147483647
  %266 = icmp eq i32 %265, 0
  %267 = sub nsw i32 0, %264
  %268 = sext i32 %267 to i64
  br i1 %266, label %269, label %274

269:                                              ; preds = %263
  %270 = bitcast i8** %10 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = ptrtoint i8* %0 to i64
  %273 = sub i64 %271, %272
  br label %274

274:                                              ; preds = %219, %234, %222, %263, %256, %237, %213, %206, %179, %269
  %275 = phi i64 [ %273, %269 ], [ %268, %263 ], [ %262, %256 ], [ %245, %237 ], [ %218, %213 ], [ %212, %206 ], [ %184, %179 ], [ -519, %222 ], [ -519, %234 ], [ -519, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #13
  br label %276

276:                                              ; preds = %23, %137, %152, %140, %93, %108, %96, %49, %64, %52, %40, %155, %130, %111, %86, %67, %43, %274
  %277 = phi i64 [ %275, %274 ], [ %163, %155 ], [ %136, %130 ], [ %119, %111 ], [ %92, %86 ], [ %75, %67 ], [ %48, %43 ], [ -1, %40 ], [ -519, %52 ], [ -519, %64 ], [ -519, %49 ], [ -519, %96 ], [ -519, %108 ], [ -519, %93 ], [ -519, %140 ], [ -519, %152 ], [ -519, %137 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %278

278:                                              ; preds = %19, %3, %276
  %279 = phi i64 [ %277, %276 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %279
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs28DecodeAuthenticationResponseEPKhmPNS0_22AuthenticationResponseE(i8*, i64, %"struct.openscreen::msgs::AuthenticationResponse"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %234

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %234

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %232

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = icmp eq i64 %41, 3
  br i1 %42, label %43, label %232

43:                                               ; preds = %40
  %44 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %49, label %232

49:                                               ; preds = %43
  %50 = load i8, i8* %26, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %232

52:                                               ; preds = %49
  %53 = load i8, i8* %27, align 1
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %232

56:                                               ; preds = %52
  %57 = and i8 %53, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %64

61:                                               ; preds = %56
  %62 = load i16, i16* %25, align 4
  %63 = zext i16 %62 to i64
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %232

67:                                               ; preds = %64
  %68 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %69 = and i32 %68, 2147483647
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = sub nsw i32 0, %71
  %75 = sext i32 %74 to i64
  br i1 %73, label %76, label %232

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %2, i64 0, i32 0
  %78 = load i8, i8* %27, align 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %86

83:                                               ; preds = %76
  %84 = load i16, i16* %25, align 4
  %85 = zext i16 %84 to i64
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  store i64 %87, i64* %77, align 8
  %88 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %89 = and i32 %88, 2147483647
  %90 = icmp eq i32 %89, 0
  %91 = sub nsw i32 0, %88
  %92 = sext i32 %91 to i64
  br i1 %90, label %93, label %232

93:                                               ; preds = %86
  %94 = load i8, i8* %26, align 2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %232

96:                                               ; preds = %93
  %97 = load i8, i8* %27, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %232

100:                                              ; preds = %96
  %101 = and i8 %97, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %108

105:                                              ; preds = %100
  %106 = load i16, i16* %25, align 4
  %107 = zext i16 %106 to i64
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i64 [ %104, %103 ], [ %107, %105 ]
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %232

111:                                              ; preds = %108
  %112 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %113 = and i32 %112, 2147483647
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 0, i32 %112
  %116 = and i32 %115, 2147483647
  %117 = icmp eq i32 %116, 0
  %118 = sub nsw i32 0, %115
  %119 = sext i32 %118 to i64
  br i1 %117, label %120, label %232

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %2, i64 0, i32 1
  %122 = load i8, i8* %27, align 1
  %123 = and i8 %122, 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %120
  %126 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %130

127:                                              ; preds = %120
  %128 = load i16, i16* %25, align 4
  %129 = zext i16 %128 to i64
  br label %130

130:                                              ; preds = %127, %125
  %131 = phi i64 [ %126, %125 ], [ %129, %127 ]
  store i64 %131, i64* %121, align 8
  %132 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %133 = and i32 %132, 2147483647
  %134 = icmp eq i32 %133, 0
  %135 = sub nsw i32 0, %132
  %136 = sext i32 %135 to i64
  br i1 %134, label %137, label %232

137:                                              ; preds = %130
  %138 = load i8, i8* %26, align 2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %232

140:                                              ; preds = %137
  %141 = load i8, i8* %27, align 1
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %232

144:                                              ; preds = %140
  %145 = and i8 %141, 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %152

149:                                              ; preds = %144
  %150 = load i16, i16* %25, align 4
  %151 = zext i16 %150 to i64
  br label %152

152:                                              ; preds = %149, %147
  %153 = phi i64 [ %148, %147 ], [ %151, %149 ]
  %154 = icmp eq i64 %153, 2
  br i1 %154, label %155, label %232

155:                                              ; preds = %152
  %156 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %157 = and i32 %156, 2147483647
  %158 = icmp eq i32 %157, 0
  %159 = select i1 %158, i32 0, i32 %156
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 0
  %162 = sub nsw i32 0, %159
  %163 = sext i32 %162 to i64
  br i1 %161, label %164, label %232

164:                                              ; preds = %155
  %165 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #13
  store i64 0, i64* %7, align 8
  %166 = load i8, i8* %27, align 1
  %167 = and i8 %166, 4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %179

169:                                              ; preds = %164
  %170 = and i8 %166, 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %177

174:                                              ; preds = %169
  %175 = load i16, i16* %25, align 4
  %176 = zext i16 %175 to i64
  br label %177

177:                                              ; preds = %172, %174
  %178 = phi i64 [ %173, %172 ], [ %176, %174 ]
  store i64 %178, i64* %7, align 8
  br label %187

179:                                              ; preds = %164
  %180 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %181 = and i32 %180, 2147483647
  %182 = icmp eq i32 %181, 0
  %183 = sub nsw i32 0, %180
  %184 = sext i32 %183 to i64
  br i1 %182, label %185, label %230

185:                                              ; preds = %179
  %186 = load i64, i64* %7, align 8
  br label %187

187:                                              ; preds = %185, %177
  %188 = phi i64 [ %178, %177 ], [ %186, %185 ]
  %189 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %2, i64 0, i32 2
  %190 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %2, i64 0, i32 2, i32 0, i32 1
  %191 = bitcast i8** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = icmp ugt i64 %188, %195
  %197 = inttoptr i64 %194 to i8*
  br i1 %196, label %198, label %202

198:                                              ; preds = %187
  %199 = sub i64 %188, %195
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %189, i64 %199) #13
  %200 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %189, i64 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  br label %206

202:                                              ; preds = %187
  %203 = icmp ult i64 %188, %195
  br i1 %203, label %204, label %206

204:                                              ; preds = %202
  %205 = getelementptr inbounds i8, i8* %197, i64 %188
  store i8* %205, i8** %190, align 8
  br label %206

206:                                              ; preds = %198, %202, %204
  %207 = phi i8* [ %201, %198 ], [ %197, %202 ], [ %197, %204 ]
  %208 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %207, i64* nonnull %7, %struct.CborValue* null) #13
  %209 = and i32 %208, 2147483647
  %210 = icmp eq i32 %209, 0
  %211 = sub nsw i32 0, %208
  %212 = sext i32 %211 to i64
  br i1 %210, label %213, label %230

213:                                              ; preds = %206
  %214 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %215 = and i32 %214, 2147483647
  %216 = icmp eq i32 %215, 0
  %217 = sub nsw i32 0, %214
  %218 = sext i32 %217 to i64
  br i1 %216, label %219, label %230

219:                                              ; preds = %213
  %220 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %221 = and i32 %220, 2147483647
  %222 = icmp eq i32 %221, 0
  %223 = sub nsw i32 0, %220
  %224 = sext i32 %223 to i64
  br i1 %222, label %225, label %230

225:                                              ; preds = %219
  %226 = bitcast i8** %10 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = ptrtoint i8* %0 to i64
  %229 = sub i64 %227, %228
  br label %230

230:                                              ; preds = %219, %213, %206, %179, %225
  %231 = phi i64 [ %229, %225 ], [ %224, %219 ], [ %218, %213 ], [ %212, %206 ], [ %184, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #13
  br label %232

232:                                              ; preds = %23, %137, %152, %140, %93, %108, %96, %49, %64, %52, %40, %155, %130, %111, %86, %67, %43, %230
  %233 = phi i64 [ %231, %230 ], [ %163, %155 ], [ %136, %130 ], [ %119, %111 ], [ %92, %86 ], [ %75, %67 ], [ %48, %43 ], [ -1, %40 ], [ -519, %52 ], [ -519, %64 ], [ -519, %49 ], [ -519, %96 ], [ -519, %108 ], [ -519, %93 ], [ -519, %140 ], [ -519, %152 ], [ -519, %137 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %234

234:                                              ; preds = %19, %3, %232
  %235 = phi i64 [ %233, %232 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %235
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs26DecodeAuthenticationResultEPKhmPNS0_20AuthenticationResultE(i8*, i64, %"struct.openscreen::msgs::AuthenticationResult"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %12 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %105

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, -96
  br i1 %21, label %22, label %105

22:                                               ; preds = %18
  %23 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %27 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %11, align 1
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %103

31:                                               ; preds = %22
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %39

36:                                               ; preds = %31
  %37 = load i16, i16* %10, align 4
  %38 = zext i16 %37 to i64
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i64 [ %38, %36 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %42, label %103

42:                                               ; preds = %39
  %43 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = sext i32 %46 to i64
  br i1 %45, label %48, label %103

48:                                               ; preds = %42
  %49 = load i8, i8* %25, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %103

51:                                               ; preds = %48
  %52 = load i8, i8* %26, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %103

55:                                               ; preds = %51
  %56 = and i8 %52, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %63

60:                                               ; preds = %55
  %61 = load i16, i16* %24, align 4
  %62 = zext i16 %61 to i64
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %62, %60 ]
  %65 = icmp eq i64 %64, 1
  br i1 %65, label %66, label %103

66:                                               ; preds = %63
  %67 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 0, i32 %67
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %103

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResult", %"struct.openscreen::msgs::AuthenticationResult"* %2, i64 0, i32 0
  %77 = load i8, i8* %26, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %85

82:                                               ; preds = %75
  %83 = load i16, i16* %24, align 4
  %84 = zext i16 %83 to i64
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i64 [ %81, %80 ], [ %84, %82 ]
  store i64 %86, i64* %76, align 8
  %87 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %92, label %103

92:                                               ; preds = %85
  %93 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %94 = and i32 %93, 2147483647
  %95 = icmp eq i32 %94, 0
  %96 = sub nsw i32 0, %93
  %97 = sext i32 %96 to i64
  br i1 %95, label %98, label %103

98:                                               ; preds = %92
  %99 = bitcast i8** %9 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = ptrtoint i8* %0 to i64
  %102 = sub i64 %100, %101
  br label %103

103:                                              ; preds = %22, %48, %63, %51, %39, %92, %85, %66, %42, %98
  %104 = phi i64 [ %102, %98 ], [ %97, %92 ], [ %91, %85 ], [ %74, %66 ], [ %47, %42 ], [ -1, %39 ], [ -519, %51 ], [ -519, %63 ], [ -519, %48 ], [ -2, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %105

105:                                              ; preds = %18, %3, %103
  %106 = phi i64 [ %104, %103 ], [ %17, %3 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i64 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs38DecodePresentationConnectionCloseEventEPKhmPNS0_32PresentationConnectionCloseEventE(i8*, i64, %"struct.openscreen::msgs::PresentationConnectionCloseEvent"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %234

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %234

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %232

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = or i64 %41, 1
  %43 = icmp eq i64 %42, 3
  br i1 %43, label %44, label %232

44:                                               ; preds = %40
  %45 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %46 = and i32 %45, 2147483647
  %47 = icmp eq i32 %46, 0
  %48 = sub nsw i32 0, %45
  %49 = sext i32 %48 to i64
  br i1 %47, label %50, label %232

50:                                               ; preds = %44
  %51 = load i8, i8* %26, align 2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %232

53:                                               ; preds = %50
  %54 = load i8, i8* %27, align 1
  %55 = and i8 %54, 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %232

57:                                               ; preds = %53
  %58 = and i8 %54, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %65

62:                                               ; preds = %57
  %63 = load i16, i16* %25, align 4
  %64 = zext i16 %63 to i64
  br label %65

65:                                               ; preds = %62, %60
  %66 = phi i64 [ %61, %60 ], [ %64, %62 ]
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %232

68:                                               ; preds = %65
  %69 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 0, i32 %69
  %73 = and i32 %72, 2147483647
  %74 = icmp eq i32 %73, 0
  %75 = sub nsw i32 0, %72
  %76 = sext i32 %75 to i64
  br i1 %74, label %77, label %232

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %2, i64 0, i32 0
  %79 = load i8, i8* %27, align 1
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %87

84:                                               ; preds = %77
  %85 = load i16, i16* %25, align 4
  %86 = zext i16 %85 to i64
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %86, %84 ]
  store i64 %88, i64* %78, align 8
  %89 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %90 = and i32 %89, 2147483647
  %91 = icmp eq i32 %90, 0
  %92 = sub nsw i32 0, %89
  %93 = sext i32 %92 to i64
  br i1 %91, label %94, label %232

94:                                               ; preds = %87
  %95 = load i8, i8* %26, align 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %232

97:                                               ; preds = %94
  %98 = load i8, i8* %27, align 1
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %232

101:                                              ; preds = %97
  %102 = and i8 %98, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %109

106:                                              ; preds = %101
  %107 = load i16, i16* %25, align 4
  %108 = zext i16 %107 to i64
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %105, %104 ], [ %108, %106 ]
  %111 = icmp eq i64 %110, 2
  br i1 %111, label %112, label %232

112:                                              ; preds = %109
  %113 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %114 = and i32 %113, 2147483647
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, i32 0, i32 %113
  %117 = and i32 %116, 2147483647
  %118 = icmp eq i32 %117, 0
  %119 = sub nsw i32 0, %116
  %120 = sext i32 %119 to i64
  br i1 %118, label %121, label %232

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %2, i64 0, i32 1
  %123 = load i8, i8* %27, align 1
  %124 = and i8 %123, 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %121
  %127 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %131

128:                                              ; preds = %121
  %129 = load i16, i16* %25, align 4
  %130 = zext i16 %129 to i64
  br label %131

131:                                              ; preds = %128, %126
  %132 = phi i64 [ %127, %126 ], [ %130, %128 ]
  store i64 %132, i64* %122, align 8
  %133 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %134 = and i32 %133, 2147483647
  %135 = icmp eq i32 %134, 0
  %136 = sub nsw i32 0, %133
  %137 = sext i32 %136 to i64
  br i1 %135, label %138, label %232

138:                                              ; preds = %131
  %139 = icmp ugt i64 %41, 2
  br i1 %139, label %140, label %219

140:                                              ; preds = %138
  %141 = load i8, i8* %26, align 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %232

143:                                              ; preds = %140
  %144 = load i8, i8* %27, align 1
  %145 = and i8 %144, 2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %232

147:                                              ; preds = %143
  %148 = and i8 %144, 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %155

152:                                              ; preds = %147
  %153 = load i16, i16* %25, align 4
  %154 = zext i16 %153 to i64
  br label %155

155:                                              ; preds = %152, %150
  %156 = phi i64 [ %151, %150 ], [ %154, %152 ]
  %157 = icmp eq i64 %156, 3
  br i1 %157, label %158, label %232

158:                                              ; preds = %155
  %159 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %161, i32 0, i32 %159
  %163 = and i32 %162, 2147483647
  %164 = icmp eq i32 %163, 0
  %165 = sub nsw i32 0, %162
  %166 = sext i32 %165 to i64
  br i1 %164, label %167, label %232

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %2, i64 0, i32 2
  store i8 1, i8* %168, align 8
  %169 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #13
  store i64 0, i64* %7, align 8
  %170 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %171 = and i32 %170, 2147483647
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %215

173:                                              ; preds = %167
  %174 = load i8, i8* %27, align 1
  %175 = and i8 %174, 4
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %187

177:                                              ; preds = %173
  %178 = and i8 %174, 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %185

182:                                              ; preds = %177
  %183 = load i16, i16* %25, align 4
  %184 = zext i16 %183 to i64
  br label %185

185:                                              ; preds = %180, %182
  %186 = phi i64 [ %181, %180 ], [ %184, %182 ]
  store i64 %186, i64* %7, align 8
  br label %193

187:                                              ; preds = %173
  %188 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %189 = and i32 %188, 2147483647
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %215

191:                                              ; preds = %187
  %192 = load i64, i64* %7, align 8
  br label %193

193:                                              ; preds = %191, %185
  %194 = phi i64 [ %192, %191 ], [ %186, %185 ]
  %195 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %2, i64 0, i32 3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %195, i64 %194, i8 signext 0) #13
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  br label %205

203:                                              ; preds = %193
  %204 = bitcast %"class.std::__1::basic_string"* %195 to i8*
  br label %205

205:                                              ; preds = %200, %203
  %206 = phi i8* [ %202, %200 ], [ %204, %203 ]
  %207 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %206, i64* nonnull %7, %struct.CborValue* null) #13
  %208 = and i32 %207, 2147483647
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %205
  %211 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %212 = and i32 %211, 2147483647
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #13
  br label %221

215:                                              ; preds = %210, %205, %187, %167
  %216 = phi i32 [ %207, %205 ], [ %188, %187 ], [ %170, %167 ], [ %211, %210 ]
  %217 = sub nsw i32 0, %216
  %218 = sext i32 %217 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #13
  br label %232

219:                                              ; preds = %138
  %220 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %2, i64 0, i32 2
  store i8 0, i8* %220, align 8
  br label %221

221:                                              ; preds = %214, %219
  %222 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %223 = and i32 %222, 2147483647
  %224 = icmp eq i32 %223, 0
  %225 = sub nsw i32 0, %222
  %226 = sext i32 %225 to i64
  br i1 %224, label %227, label %232

227:                                              ; preds = %221
  %228 = bitcast i8** %10 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = ptrtoint i8* %0 to i64
  %231 = sub i64 %229, %230
  br label %232

232:                                              ; preds = %23, %215, %140, %155, %143, %94, %109, %97, %50, %65, %53, %40, %158, %221, %131, %112, %87, %68, %44, %227
  %233 = phi i64 [ %231, %227 ], [ %226, %221 ], [ %218, %215 ], [ %166, %158 ], [ %137, %131 ], [ %120, %112 ], [ %93, %87 ], [ %76, %68 ], [ %49, %44 ], [ -1, %40 ], [ -519, %53 ], [ -519, %65 ], [ -519, %50 ], [ -519, %97 ], [ -519, %109 ], [ -519, %94 ], [ -519, %143 ], [ -519, %155 ], [ -519, %140 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %234

234:                                              ; preds = %19, %3, %232
  %235 = phi i64 [ %233, %232 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %235
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs40DecodePresentationConnectionCloseRequestEPKhmPNS0_34PresentationConnectionCloseRequestE(i8*, i64, %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %12 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %149

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, -96
  br i1 %21, label %22, label %149

22:                                               ; preds = %18
  %23 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %27 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %11, align 1
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %147

31:                                               ; preds = %22
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %39

36:                                               ; preds = %31
  %37 = load i16, i16* %10, align 4
  %38 = zext i16 %37 to i64
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i64 [ %38, %36 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, 2
  br i1 %41, label %42, label %147

42:                                               ; preds = %39
  %43 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = sext i32 %46 to i64
  br i1 %45, label %48, label %147

48:                                               ; preds = %42
  %49 = load i8, i8* %25, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %147

51:                                               ; preds = %48
  %52 = load i8, i8* %26, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %147

55:                                               ; preds = %51
  %56 = and i8 %52, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %63

60:                                               ; preds = %55
  %61 = load i16, i16* %24, align 4
  %62 = zext i16 %61 to i64
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %62, %60 ]
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %147

66:                                               ; preds = %63
  %67 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 0, i32 %67
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %147

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %2, i64 0, i32 0
  %77 = load i8, i8* %26, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %85

82:                                               ; preds = %75
  %83 = load i16, i16* %24, align 4
  %84 = zext i16 %83 to i64
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i64 [ %81, %80 ], [ %84, %82 ]
  store i64 %86, i64* %76, align 8
  %87 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %92, label %147

92:                                               ; preds = %85
  %93 = load i8, i8* %25, align 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %147

95:                                               ; preds = %92
  %96 = load i8, i8* %26, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %147

99:                                               ; preds = %95
  %100 = and i8 %96, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %107

104:                                              ; preds = %99
  %105 = load i16, i16* %24, align 4
  %106 = zext i16 %105 to i64
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi i64 [ %103, %102 ], [ %106, %104 ]
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %147

110:                                              ; preds = %107
  %111 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %112 = and i32 %111, 2147483647
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 0, i32 %111
  %115 = and i32 %114, 2147483647
  %116 = icmp eq i32 %115, 0
  %117 = sub nsw i32 0, %114
  %118 = sext i32 %117 to i64
  br i1 %116, label %119, label %147

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %2, i64 0, i32 1
  %121 = load i8, i8* %26, align 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %129

126:                                              ; preds = %119
  %127 = load i16, i16* %24, align 4
  %128 = zext i16 %127 to i64
  br label %129

129:                                              ; preds = %126, %124
  %130 = phi i64 [ %125, %124 ], [ %128, %126 ]
  store i64 %130, i64* %120, align 8
  %131 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %132 = and i32 %131, 2147483647
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i32 0, %131
  %135 = sext i32 %134 to i64
  br i1 %133, label %136, label %147

136:                                              ; preds = %129
  %137 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %138 = and i32 %137, 2147483647
  %139 = icmp eq i32 %138, 0
  %140 = sub nsw i32 0, %137
  %141 = sext i32 %140 to i64
  br i1 %139, label %142, label %147

142:                                              ; preds = %136
  %143 = bitcast i8** %9 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = ptrtoint i8* %0 to i64
  %146 = sub i64 %144, %145
  br label %147

147:                                              ; preds = %22, %92, %107, %95, %48, %63, %51, %39, %136, %129, %110, %85, %66, %42, %142
  %148 = phi i64 [ %146, %142 ], [ %141, %136 ], [ %135, %129 ], [ %118, %110 ], [ %91, %85 ], [ %74, %66 ], [ %47, %42 ], [ -1, %39 ], [ -519, %51 ], [ -519, %63 ], [ -519, %48 ], [ -519, %95 ], [ -519, %107 ], [ -519, %92 ], [ -2, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %149

149:                                              ; preds = %18, %3, %147
  %150 = phi i64 [ %148, %147 ], [ %17, %3 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i64 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs41DecodePresentationConnectionCloseResponseEPKhmPNS0_35PresentationConnectionCloseResponseE(i8*, i64, %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %12 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %149

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, -96
  br i1 %21, label %22, label %149

22:                                               ; preds = %18
  %23 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %27 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %11, align 1
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %147

31:                                               ; preds = %22
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %39

36:                                               ; preds = %31
  %37 = load i16, i16* %10, align 4
  %38 = zext i16 %37 to i64
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i64 [ %38, %36 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, 2
  br i1 %41, label %42, label %147

42:                                               ; preds = %39
  %43 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = sext i32 %46 to i64
  br i1 %45, label %48, label %147

48:                                               ; preds = %42
  %49 = load i8, i8* %25, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %147

51:                                               ; preds = %48
  %52 = load i8, i8* %26, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %147

55:                                               ; preds = %51
  %56 = and i8 %52, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %63

60:                                               ; preds = %55
  %61 = load i16, i16* %24, align 4
  %62 = zext i16 %61 to i64
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %62, %60 ]
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %147

66:                                               ; preds = %63
  %67 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 0, i32 %67
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %147

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %2, i64 0, i32 0
  %77 = load i8, i8* %26, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %85

82:                                               ; preds = %75
  %83 = load i16, i16* %24, align 4
  %84 = zext i16 %83 to i64
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i64 [ %81, %80 ], [ %84, %82 ]
  store i64 %86, i64* %76, align 8
  %87 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %92, label %147

92:                                               ; preds = %85
  %93 = load i8, i8* %25, align 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %147

95:                                               ; preds = %92
  %96 = load i8, i8* %26, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %147

99:                                               ; preds = %95
  %100 = and i8 %96, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %107

104:                                              ; preds = %99
  %105 = load i16, i16* %24, align 4
  %106 = zext i16 %105 to i64
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi i64 [ %103, %102 ], [ %106, %104 ]
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %147

110:                                              ; preds = %107
  %111 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %112 = and i32 %111, 2147483647
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 0, i32 %111
  %115 = and i32 %114, 2147483647
  %116 = icmp eq i32 %115, 0
  %117 = sub nsw i32 0, %114
  %118 = sext i32 %117 to i64
  br i1 %116, label %119, label %147

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %2, i64 0, i32 1
  %121 = load i8, i8* %26, align 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %129

126:                                              ; preds = %119
  %127 = load i16, i16* %24, align 4
  %128 = zext i16 %127 to i64
  br label %129

129:                                              ; preds = %126, %124
  %130 = phi i64 [ %125, %124 ], [ %128, %126 ]
  store i64 %130, i64* %120, align 8
  %131 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %132 = and i32 %131, 2147483647
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i32 0, %131
  %135 = sext i32 %134 to i64
  br i1 %133, label %136, label %147

136:                                              ; preds = %129
  %137 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %138 = and i32 %137, 2147483647
  %139 = icmp eq i32 %138, 0
  %140 = sub nsw i32 0, %137
  %141 = sext i32 %140 to i64
  br i1 %139, label %142, label %147

142:                                              ; preds = %136
  %143 = bitcast i8** %9 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = ptrtoint i8* %0 to i64
  %146 = sub i64 %144, %145
  br label %147

147:                                              ; preds = %22, %92, %107, %95, %48, %63, %51, %39, %136, %129, %110, %85, %66, %42, %142
  %148 = phi i64 [ %146, %142 ], [ %141, %136 ], [ %135, %129 ], [ %118, %110 ], [ %91, %85 ], [ %74, %66 ], [ %47, %42 ], [ -1, %39 ], [ -519, %51 ], [ -519, %63 ], [ -519, %48 ], [ -519, %95 ], [ -519, %107 ], [ -519, %92 ], [ -2, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %149

149:                                              ; preds = %18, %3, %147
  %150 = phi i64 [ %148, %147 ], [ %17, %3 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i64 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs35DecodePresentationConnectionMessageEPKhmPNS0_29PresentationConnectionMessageE(i8*, i64, %"struct.openscreen::msgs::PresentationConnectionMessage"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %13 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %14 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %243

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, -96
  br i1 %23, label %24, label %243

24:                                               ; preds = %20
  %25 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %28 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %29 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i8, i8* %13, align 1
  %31 = and i8 %30, 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %241

33:                                               ; preds = %24
  %34 = and i8 %30, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %41

38:                                               ; preds = %33
  %39 = load i16, i16* %12, align 4
  %40 = zext i16 %39 to i64
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi i64 [ %40, %38 ], [ %37, %36 ]
  %43 = icmp eq i64 %42, 2
  br i1 %43, label %44, label %241

44:                                               ; preds = %41
  %45 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %46 = and i32 %45, 2147483647
  %47 = icmp eq i32 %46, 0
  %48 = sub nsw i32 0, %45
  %49 = sext i32 %48 to i64
  br i1 %47, label %50, label %241

50:                                               ; preds = %44
  %51 = load i8, i8* %27, align 2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %241

53:                                               ; preds = %50
  %54 = load i8, i8* %28, align 1
  %55 = and i8 %54, 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %241

57:                                               ; preds = %53
  %58 = and i8 %54, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %65

62:                                               ; preds = %57
  %63 = load i16, i16* %26, align 4
  %64 = zext i16 %63 to i64
  br label %65

65:                                               ; preds = %62, %60
  %66 = phi i64 [ %61, %60 ], [ %64, %62 ]
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %241

68:                                               ; preds = %65
  %69 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 0, i32 %69
  %73 = and i32 %72, 2147483647
  %74 = icmp eq i32 %73, 0
  %75 = sub nsw i32 0, %72
  %76 = sext i32 %75 to i64
  br i1 %74, label %77, label %241

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %2, i64 0, i32 0
  %79 = load i8, i8* %28, align 1
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %87

84:                                               ; preds = %77
  %85 = load i16, i16* %26, align 4
  %86 = zext i16 %85 to i64
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %86, %84 ]
  store i64 %88, i64* %78, align 8
  %89 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %90 = and i32 %89, 2147483647
  %91 = icmp eq i32 %90, 0
  %92 = sub nsw i32 0, %89
  %93 = sext i32 %92 to i64
  br i1 %91, label %94, label %241

94:                                               ; preds = %87
  %95 = load i8, i8* %27, align 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %241

97:                                               ; preds = %94
  %98 = load i8, i8* %28, align 1
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %241

101:                                              ; preds = %97
  %102 = and i8 %98, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %109

106:                                              ; preds = %101
  %107 = load i16, i16* %26, align 4
  %108 = zext i16 %107 to i64
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %105, %104 ], [ %108, %106 ]
  %111 = icmp eq i64 %110, 2
  br i1 %111, label %112, label %241

112:                                              ; preds = %109
  %113 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %114 = and i32 %113, 2147483647
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, i32 0, i32 %113
  %117 = and i32 %116, 2147483647
  %118 = icmp eq i32 %117, 0
  %119 = sub nsw i32 0, %116
  %120 = sext i32 %119 to i64
  br i1 %118, label %121, label %241

121:                                              ; preds = %112
  %122 = load i8, i8* %27, align 2
  switch i8 %122, label %241 [
    i8 64, label %123
    i8 96, label %178
  ]

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %2, i64 0, i32 1, i32 0
  store i32 0, i32* %124, align 8
  %125 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %2, i64 0, i32 1, i32 1, i32 0
  %126 = bitcast %"class.std::__1::vector"* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #13
  %127 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #13
  store i64 0, i64* %7, align 8
  %128 = load i8, i8* %28, align 1
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %141

131:                                              ; preds = %123
  %132 = and i8 %128, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %139

136:                                              ; preds = %131
  %137 = load i16, i16* %26, align 4
  %138 = zext i16 %137 to i64
  br label %139

139:                                              ; preds = %134, %136
  %140 = phi i64 [ %135, %134 ], [ %138, %136 ]
  store i64 %140, i64* %7, align 8
  br label %147

141:                                              ; preds = %123
  %142 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %143 = and i32 %142, 2147483647
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %174

145:                                              ; preds = %141
  %146 = load i64, i64* %7, align 8
  br label %147

147:                                              ; preds = %145, %139
  %148 = phi i64 [ %146, %145 ], [ %140, %139 ]
  %149 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %150 = bitcast i8** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector"* %125 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = icmp ugt i64 %148, %154
  %156 = inttoptr i64 %153 to i8*
  br i1 %155, label %157, label %161

157:                                              ; preds = %147
  %158 = sub i64 %148, %154
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %125, i64 %158) #13
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %125, i64 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  br label %165

161:                                              ; preds = %147
  %162 = icmp ult i64 %148, %154
  br i1 %162, label %163, label %165

163:                                              ; preds = %161
  %164 = getelementptr inbounds i8, i8* %156, i64 %148
  store i8* %164, i8** %149, align 8
  br label %165

165:                                              ; preds = %157, %161, %163
  %166 = phi i8* [ %160, %157 ], [ %156, %161 ], [ %156, %163 ]
  %167 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %166, i64* nonnull %7, %struct.CborValue* null) #13
  %168 = and i32 %167, 2147483647
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %165
  %171 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %172 = and i32 %171, 2147483647
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %229, label %174

174:                                              ; preds = %170, %165, %141
  %175 = phi i32 [ %167, %165 ], [ %142, %141 ], [ %171, %170 ]
  %176 = sub nsw i32 0, %175
  %177 = sext i32 %176 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #13
  br label %241

178:                                              ; preds = %121
  %179 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %2, i64 0, i32 1, i32 0
  store i32 1, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %2, i64 0, i32 1, i32 1
  %181 = bitcast %union.anon.7* %180 to %"class.std::__1::basic_string"*
  %182 = bitcast %union.anon.7* %180 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 24, i1 false) #13
  %183 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #13
  store i64 0, i64* %8, align 8
  %184 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %185 = and i32 %184, 2147483647
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %225

187:                                              ; preds = %178
  %188 = load i8, i8* %28, align 1
  %189 = and i8 %188, 4
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %201

191:                                              ; preds = %187
  %192 = and i8 %188, 1
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %199

196:                                              ; preds = %191
  %197 = load i16, i16* %26, align 4
  %198 = zext i16 %197 to i64
  br label %199

199:                                              ; preds = %194, %196
  %200 = phi i64 [ %195, %194 ], [ %198, %196 ]
  store i64 %200, i64* %8, align 8
  br label %207

201:                                              ; preds = %187
  %202 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %8) #13
  %203 = and i32 %202, 2147483647
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %225

205:                                              ; preds = %201
  %206 = load i64, i64* %8, align 8
  br label %207

207:                                              ; preds = %205, %199
  %208 = phi i64 [ %206, %205 ], [ %200, %199 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %181, i64 %208, i8 signext 0) #13
  %209 = bitcast %union.anon.7* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %207
  %214 = getelementptr inbounds %union.anon.7, %union.anon.7* %180, i64 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  br label %216

216:                                              ; preds = %207, %213
  %217 = phi i8* [ %215, %213 ], [ %182, %207 ]
  %218 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %217, i64* nonnull %8, %struct.CborValue* null) #13
  %219 = and i32 %218, 2147483647
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %225

221:                                              ; preds = %216
  %222 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %223 = and i32 %222, 2147483647
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %229, label %225

225:                                              ; preds = %221, %216, %201, %178
  %226 = phi i32 [ %218, %216 ], [ %202, %201 ], [ %184, %178 ], [ %222, %221 ]
  %227 = sub nsw i32 0, %226
  %228 = sext i32 %227 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13
  br label %241

229:                                              ; preds = %221, %170
  %230 = phi i8* [ %127, %170 ], [ %183, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #13
  %231 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %232 = and i32 %231, 2147483647
  %233 = icmp eq i32 %232, 0
  %234 = sub nsw i32 0, %231
  %235 = sext i32 %234 to i64
  br i1 %233, label %236, label %241

236:                                              ; preds = %229
  %237 = bitcast i8** %11 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = ptrtoint i8* %0 to i64
  %240 = sub i64 %238, %239
  br label %241

241:                                              ; preds = %24, %174, %225, %94, %109, %97, %50, %65, %53, %236, %229, %121, %41, %112, %87, %68, %44
  %242 = phi i64 [ %120, %112 ], [ %93, %87 ], [ %76, %68 ], [ %49, %44 ], [ -1, %41 ], [ %240, %236 ], [ %235, %229 ], [ %177, %174 ], [ %228, %225 ], [ -1, %121 ], [ -519, %53 ], [ -519, %65 ], [ -519, %50 ], [ -519, %97 ], [ -519, %109 ], [ -519, %94 ], [ -2, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %243

243:                                              ; preds = %20, %3, %241
  %244 = phi i64 [ %242, %241 ], [ %19, %3 ], [ -1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i64 %244
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs39DecodePresentationConnectionOpenRequestEPKhmPNS0_33PresentationConnectionOpenRequestE(i8*, i64, %"struct.openscreen::msgs::PresentationConnectionOpenRequest"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %13 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %14 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %273

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, -96
  br i1 %23, label %24, label %273

24:                                               ; preds = %20
  %25 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %28 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %29 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i8, i8* %13, align 1
  %31 = and i8 %30, 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %271

33:                                               ; preds = %24
  %34 = and i8 %30, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %41

38:                                               ; preds = %33
  %39 = load i16, i16* %12, align 4
  %40 = zext i16 %39 to i64
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi i64 [ %40, %38 ], [ %37, %36 ]
  %43 = icmp eq i64 %42, 3
  br i1 %43, label %44, label %271

44:                                               ; preds = %41
  %45 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %46 = and i32 %45, 2147483647
  %47 = icmp eq i32 %46, 0
  %48 = sub nsw i32 0, %45
  %49 = sext i32 %48 to i64
  br i1 %47, label %50, label %271

50:                                               ; preds = %44
  %51 = load i8, i8* %27, align 2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %271

53:                                               ; preds = %50
  %54 = load i8, i8* %28, align 1
  %55 = and i8 %54, 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %271

57:                                               ; preds = %53
  %58 = and i8 %54, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %65

62:                                               ; preds = %57
  %63 = load i16, i16* %26, align 4
  %64 = zext i16 %63 to i64
  br label %65

65:                                               ; preds = %62, %60
  %66 = phi i64 [ %61, %60 ], [ %64, %62 ]
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %271

68:                                               ; preds = %65
  %69 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 0, i32 %69
  %73 = and i32 %72, 2147483647
  %74 = icmp eq i32 %73, 0
  %75 = sub nsw i32 0, %72
  %76 = sext i32 %75 to i64
  br i1 %74, label %77, label %271

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %2, i64 0, i32 0
  %79 = load i8, i8* %28, align 1
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %87

84:                                               ; preds = %77
  %85 = load i16, i16* %26, align 4
  %86 = zext i16 %85 to i64
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %86, %84 ]
  store i64 %88, i64* %78, align 8
  %89 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %90 = and i32 %89, 2147483647
  %91 = icmp eq i32 %90, 0
  %92 = sub nsw i32 0, %89
  %93 = sext i32 %92 to i64
  br i1 %91, label %94, label %271

94:                                               ; preds = %87
  %95 = load i8, i8* %27, align 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %271

97:                                               ; preds = %94
  %98 = load i8, i8* %28, align 1
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %271

101:                                              ; preds = %97
  %102 = and i8 %98, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %109

106:                                              ; preds = %101
  %107 = load i16, i16* %26, align 4
  %108 = zext i16 %107 to i64
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %105, %104 ], [ %108, %106 ]
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %271

112:                                              ; preds = %109
  %113 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %114 = and i32 %113, 2147483647
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, i32 0, i32 %113
  %117 = and i32 %116, 2147483647
  %118 = icmp eq i32 %117, 0
  %119 = sub nsw i32 0, %116
  %120 = sext i32 %119 to i64
  br i1 %118, label %121, label %271

121:                                              ; preds = %112
  %122 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #13
  store i64 0, i64* %7, align 8
  %123 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %124 = and i32 %123, 2147483647
  %125 = icmp eq i32 %124, 0
  %126 = sub nsw i32 0, %123
  %127 = sext i32 %126 to i64
  br i1 %125, label %128, label %269

128:                                              ; preds = %121
  %129 = load i8, i8* %28, align 1
  %130 = and i8 %129, 4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %142

132:                                              ; preds = %128
  %133 = and i8 %129, 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %140

137:                                              ; preds = %132
  %138 = load i16, i16* %26, align 4
  %139 = zext i16 %138 to i64
  br label %140

140:                                              ; preds = %135, %137
  %141 = phi i64 [ %136, %135 ], [ %139, %137 ]
  store i64 %141, i64* %7, align 8
  br label %150

142:                                              ; preds = %128
  %143 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %144 = and i32 %143, 2147483647
  %145 = icmp eq i32 %144, 0
  %146 = sub nsw i32 0, %143
  %147 = sext i32 %146 to i64
  br i1 %145, label %148, label %269

148:                                              ; preds = %142
  %149 = load i64, i64* %7, align 8
  br label %150

150:                                              ; preds = %148, %140
  %151 = phi i64 [ %141, %140 ], [ %149, %148 ]
  %152 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %2, i64 0, i32 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %152, i64 %151, i8 signext 0) #13
  %153 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  br label %162

160:                                              ; preds = %150
  %161 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  br label %162

162:                                              ; preds = %157, %160
  %163 = phi i8* [ %159, %157 ], [ %161, %160 ]
  %164 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %163, i64* nonnull %7, %struct.CborValue* null) #13
  %165 = and i32 %164, 2147483647
  %166 = icmp eq i32 %165, 0
  %167 = sub nsw i32 0, %164
  %168 = sext i32 %167 to i64
  br i1 %166, label %169, label %269

169:                                              ; preds = %162
  %170 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %171 = and i32 %170, 2147483647
  %172 = icmp eq i32 %171, 0
  %173 = sub nsw i32 0, %170
  %174 = sext i32 %173 to i64
  br i1 %172, label %175, label %269

175:                                              ; preds = %169
  %176 = load i8, i8* %27, align 2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %269

178:                                              ; preds = %175
  %179 = load i8, i8* %28, align 1
  %180 = and i8 %179, 2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %269

182:                                              ; preds = %178
  %183 = and i8 %179, 1
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %187, label %185

185:                                              ; preds = %182
  %186 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %190

187:                                              ; preds = %182
  %188 = load i16, i16* %26, align 4
  %189 = zext i16 %188 to i64
  br label %190

190:                                              ; preds = %187, %185
  %191 = phi i64 [ %186, %185 ], [ %189, %187 ]
  %192 = icmp eq i64 %191, 2
  br i1 %192, label %193, label %269

193:                                              ; preds = %190
  %194 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %195 = and i32 %194, 2147483647
  %196 = icmp eq i32 %195, 0
  %197 = select i1 %196, i32 0, i32 %194
  %198 = and i32 %197, 2147483647
  %199 = icmp eq i32 %198, 0
  %200 = sub nsw i32 0, %197
  %201 = sext i32 %200 to i64
  br i1 %199, label %202, label %269

202:                                              ; preds = %193
  %203 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #13
  store i64 0, i64* %8, align 8
  %204 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %205 = and i32 %204, 2147483647
  %206 = icmp eq i32 %205, 0
  %207 = sub nsw i32 0, %204
  %208 = sext i32 %207 to i64
  br i1 %206, label %209, label %267

209:                                              ; preds = %202
  %210 = load i8, i8* %28, align 1
  %211 = and i8 %210, 4
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %223

213:                                              ; preds = %209
  %214 = and i8 %210, 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %221

218:                                              ; preds = %213
  %219 = load i16, i16* %26, align 4
  %220 = zext i16 %219 to i64
  br label %221

221:                                              ; preds = %216, %218
  %222 = phi i64 [ %217, %216 ], [ %220, %218 ]
  store i64 %222, i64* %8, align 8
  br label %231

223:                                              ; preds = %209
  %224 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %8) #13
  %225 = and i32 %224, 2147483647
  %226 = icmp eq i32 %225, 0
  %227 = sub nsw i32 0, %224
  %228 = sext i32 %227 to i64
  br i1 %226, label %229, label %267

229:                                              ; preds = %223
  %230 = load i64, i64* %8, align 8
  br label %231

231:                                              ; preds = %229, %221
  %232 = phi i64 [ %222, %221 ], [ %230, %229 ]
  %233 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %2, i64 0, i32 2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %233, i64 %232, i8 signext 0) #13
  %234 = bitcast %"class.std::__1::basic_string"* %233 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  br label %243

241:                                              ; preds = %231
  %242 = bitcast %"class.std::__1::basic_string"* %233 to i8*
  br label %243

243:                                              ; preds = %238, %241
  %244 = phi i8* [ %240, %238 ], [ %242, %241 ]
  %245 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %244, i64* nonnull %8, %struct.CborValue* null) #13
  %246 = and i32 %245, 2147483647
  %247 = icmp eq i32 %246, 0
  %248 = sub nsw i32 0, %245
  %249 = sext i32 %248 to i64
  br i1 %247, label %250, label %267

250:                                              ; preds = %243
  %251 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %252 = and i32 %251, 2147483647
  %253 = icmp eq i32 %252, 0
  %254 = sub nsw i32 0, %251
  %255 = sext i32 %254 to i64
  br i1 %253, label %256, label %267

256:                                              ; preds = %250
  %257 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %258 = and i32 %257, 2147483647
  %259 = icmp eq i32 %258, 0
  %260 = sub nsw i32 0, %257
  %261 = sext i32 %260 to i64
  br i1 %259, label %262, label %267

262:                                              ; preds = %256
  %263 = bitcast i8** %11 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = ptrtoint i8* %0 to i64
  %266 = sub i64 %264, %265
  br label %267

267:                                              ; preds = %256, %250, %243, %223, %202, %262
  %268 = phi i64 [ %266, %262 ], [ %261, %256 ], [ %255, %250 ], [ %249, %243 ], [ %228, %223 ], [ %208, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #13
  br label %269

269:                                              ; preds = %175, %190, %178, %193, %169, %162, %142, %121, %267
  %270 = phi i64 [ %268, %267 ], [ %201, %193 ], [ %174, %169 ], [ %168, %162 ], [ %147, %142 ], [ %127, %121 ], [ -519, %178 ], [ -519, %190 ], [ -519, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #13
  br label %271

271:                                              ; preds = %24, %94, %109, %97, %50, %65, %53, %41, %112, %87, %68, %44, %269
  %272 = phi i64 [ %270, %269 ], [ %120, %112 ], [ %93, %87 ], [ %76, %68 ], [ %49, %44 ], [ -1, %41 ], [ -519, %53 ], [ -519, %65 ], [ -519, %50 ], [ -519, %97 ], [ -519, %109 ], [ -519, %94 ], [ -2, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %273

273:                                              ; preds = %20, %3, %271
  %274 = phi i64 [ %272, %271 ], [ %19, %3 ], [ -1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i64 %274
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs40DecodePresentationConnectionOpenResponseEPKhmPNS0_34PresentationConnectionOpenResponseE(i8*, i64, %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %12 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %193

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, -96
  br i1 %21, label %22, label %193

22:                                               ; preds = %18
  %23 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %27 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %11, align 1
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %191

31:                                               ; preds = %22
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %39

36:                                               ; preds = %31
  %37 = load i16, i16* %10, align 4
  %38 = zext i16 %37 to i64
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i64 [ %38, %36 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, 3
  br i1 %41, label %42, label %191

42:                                               ; preds = %39
  %43 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = sext i32 %46 to i64
  br i1 %45, label %48, label %191

48:                                               ; preds = %42
  %49 = load i8, i8* %25, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %191

51:                                               ; preds = %48
  %52 = load i8, i8* %26, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %191

55:                                               ; preds = %51
  %56 = and i8 %52, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %63

60:                                               ; preds = %55
  %61 = load i16, i16* %24, align 4
  %62 = zext i16 %61 to i64
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %62, %60 ]
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %191

66:                                               ; preds = %63
  %67 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 0, i32 %67
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %191

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %2, i64 0, i32 0
  %77 = load i8, i8* %26, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %85

82:                                               ; preds = %75
  %83 = load i16, i16* %24, align 4
  %84 = zext i16 %83 to i64
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i64 [ %81, %80 ], [ %84, %82 ]
  store i64 %86, i64* %76, align 8
  %87 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %92, label %191

92:                                               ; preds = %85
  %93 = load i8, i8* %25, align 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %191

95:                                               ; preds = %92
  %96 = load i8, i8* %26, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %191

99:                                               ; preds = %95
  %100 = and i8 %96, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %107

104:                                              ; preds = %99
  %105 = load i16, i16* %24, align 4
  %106 = zext i16 %105 to i64
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi i64 [ %103, %102 ], [ %106, %104 ]
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %191

110:                                              ; preds = %107
  %111 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %112 = and i32 %111, 2147483647
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 0, i32 %111
  %115 = and i32 %114, 2147483647
  %116 = icmp eq i32 %115, 0
  %117 = sub nsw i32 0, %114
  %118 = sext i32 %117 to i64
  br i1 %116, label %119, label %191

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %2, i64 0, i32 1
  %121 = load i8, i8* %26, align 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %129

126:                                              ; preds = %119
  %127 = load i16, i16* %24, align 4
  %128 = zext i16 %127 to i64
  br label %129

129:                                              ; preds = %126, %124
  %130 = phi i64 [ %125, %124 ], [ %128, %126 ]
  store i64 %130, i64* %120, align 8
  %131 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %132 = and i32 %131, 2147483647
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i32 0, %131
  %135 = sext i32 %134 to i64
  br i1 %133, label %136, label %191

136:                                              ; preds = %129
  %137 = load i8, i8* %25, align 2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %191

139:                                              ; preds = %136
  %140 = load i8, i8* %26, align 1
  %141 = and i8 %140, 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %191

143:                                              ; preds = %139
  %144 = and i8 %140, 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %143
  %147 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %151

148:                                              ; preds = %143
  %149 = load i16, i16* %24, align 4
  %150 = zext i16 %149 to i64
  br label %151

151:                                              ; preds = %148, %146
  %152 = phi i64 [ %147, %146 ], [ %150, %148 ]
  %153 = icmp eq i64 %152, 2
  br i1 %153, label %154, label %191

154:                                              ; preds = %151
  %155 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %156 = and i32 %155, 2147483647
  %157 = icmp eq i32 %156, 0
  %158 = select i1 %157, i32 0, i32 %155
  %159 = and i32 %158, 2147483647
  %160 = icmp eq i32 %159, 0
  %161 = sub nsw i32 0, %158
  %162 = sext i32 %161 to i64
  br i1 %160, label %163, label %191

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %2, i64 0, i32 2
  %165 = load i8, i8* %26, align 1
  %166 = and i8 %165, 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163
  %169 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %173

170:                                              ; preds = %163
  %171 = load i16, i16* %24, align 4
  %172 = zext i16 %171 to i64
  br label %173

173:                                              ; preds = %170, %168
  %174 = phi i64 [ %169, %168 ], [ %172, %170 ]
  store i64 %174, i64* %164, align 8
  %175 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %176 = and i32 %175, 2147483647
  %177 = icmp eq i32 %176, 0
  %178 = sub nsw i32 0, %175
  %179 = sext i32 %178 to i64
  br i1 %177, label %180, label %191

180:                                              ; preds = %173
  %181 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %182 = and i32 %181, 2147483647
  %183 = icmp eq i32 %182, 0
  %184 = sub nsw i32 0, %181
  %185 = sext i32 %184 to i64
  br i1 %183, label %186, label %191

186:                                              ; preds = %180
  %187 = bitcast i8** %9 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = ptrtoint i8* %0 to i64
  %190 = sub i64 %188, %189
  br label %191

191:                                              ; preds = %22, %136, %151, %139, %92, %107, %95, %48, %63, %51, %39, %180, %173, %154, %129, %110, %85, %66, %42, %186
  %192 = phi i64 [ %190, %186 ], [ %185, %180 ], [ %179, %173 ], [ %162, %154 ], [ %135, %129 ], [ %118, %110 ], [ %91, %85 ], [ %74, %66 ], [ %47, %42 ], [ -1, %39 ], [ -519, %51 ], [ -519, %63 ], [ -519, %48 ], [ -519, %95 ], [ -519, %107 ], [ -519, %92 ], [ -519, %139 ], [ -519, %151 ], [ -519, %136 ], [ -2, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %193

193:                                              ; preds = %18, %3, %191
  %194 = phi i64 [ %192, %191 ], [ %17, %3 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i64 %194
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs30DecodePresentationStartRequestEPKhmPNS0_24PresentationStartRequestE(i8*, i64, %"struct.openscreen::msgs::PresentationStartRequest"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.CborValue, align 8
  %10 = alloca %struct.CborValue, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %16 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %17 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %18 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %20 = and i32 %19, 2147483647
  %21 = icmp eq i32 %20, 0
  %22 = sub nsw i32 0, %19
  %23 = sext i32 %22 to i64
  br i1 %21, label %24, label %563

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %26 = load i8, i8* %25, align 2
  %27 = icmp eq i8 %26, -96
  br i1 %27, label %28, label %563

28:                                               ; preds = %24
  %29 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %31 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %32 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %33 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  %34 = load i8, i8* %17, align 1
  %35 = and i8 %34, 4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %561

37:                                               ; preds = %28
  %38 = and i8 %34, 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %45

42:                                               ; preds = %37
  %43 = load i16, i16* %16, align 4
  %44 = zext i16 %43 to i64
  br label %45

45:                                               ; preds = %42, %40
  %46 = phi i64 [ %44, %42 ], [ %41, %40 ]
  %47 = icmp eq i64 %46, 4
  br i1 %47, label %48, label %561

48:                                               ; preds = %45
  %49 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %50 = and i32 %49, 2147483647
  %51 = icmp eq i32 %50, 0
  %52 = sub nsw i32 0, %49
  %53 = sext i32 %52 to i64
  %54 = select i1 %51, i64 %23, i64 %53
  br i1 %51, label %55, label %561

55:                                               ; preds = %48
  %56 = load i8, i8* %31, align 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %561

58:                                               ; preds = %55
  %59 = load i8, i8* %32, align 1
  %60 = and i8 %59, 2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %561

62:                                               ; preds = %58
  %63 = and i8 %59, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %70

67:                                               ; preds = %62
  %68 = load i16, i16* %30, align 4
  %69 = zext i16 %68 to i64
  br label %70

70:                                               ; preds = %67, %65
  %71 = phi i64 [ %66, %65 ], [ %69, %67 ]
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %561

73:                                               ; preds = %70
  %74 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %75 = and i32 %74, 2147483647
  %76 = icmp eq i32 %75, 0
  %77 = select i1 %76, i32 0, i32 %74
  %78 = and i32 %77, 2147483647
  %79 = icmp eq i32 %78, 0
  %80 = sub nsw i32 0, %77
  %81 = sext i32 %80 to i64
  %82 = select i1 %79, i64 %54, i64 %81
  br i1 %79, label %83, label %561

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %2, i64 0, i32 0
  %85 = load i8, i8* %32, align 1
  %86 = and i8 %85, 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %83
  %89 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %93

90:                                               ; preds = %83
  %91 = load i16, i16* %30, align 4
  %92 = zext i16 %91 to i64
  br label %93

93:                                               ; preds = %90, %88
  %94 = phi i64 [ %89, %88 ], [ %92, %90 ]
  store i64 %94, i64* %84, align 8
  %95 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %96 = and i32 %95, 2147483647
  %97 = icmp eq i32 %96, 0
  %98 = sub nsw i32 0, %95
  %99 = sext i32 %98 to i64
  %100 = select i1 %97, i64 %82, i64 %99
  br i1 %97, label %101, label %561

101:                                              ; preds = %93
  %102 = load i8, i8* %31, align 2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %561

104:                                              ; preds = %101
  %105 = load i8, i8* %32, align 1
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %561

108:                                              ; preds = %104
  %109 = and i8 %105, 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %108
  %112 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %116

113:                                              ; preds = %108
  %114 = load i16, i16* %30, align 4
  %115 = zext i16 %114 to i64
  br label %116

116:                                              ; preds = %113, %111
  %117 = phi i64 [ %112, %111 ], [ %115, %113 ]
  %118 = icmp eq i64 %117, 1
  br i1 %118, label %119, label %561

119:                                              ; preds = %116
  %120 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %121 = and i32 %120, 2147483647
  %122 = icmp eq i32 %121, 0
  %123 = select i1 %122, i32 0, i32 %120
  %124 = and i32 %123, 2147483647
  %125 = icmp eq i32 %124, 0
  %126 = sub nsw i32 0, %123
  %127 = sext i32 %126 to i64
  %128 = select i1 %125, i64 %100, i64 %127
  br i1 %125, label %129, label %561

129:                                              ; preds = %119
  %130 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #13
  store i64 0, i64* %7, align 8
  %131 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %132 = and i32 %131, 2147483647
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i32 0, %131
  %135 = sext i32 %134 to i64
  %136 = select i1 %133, i64 %128, i64 %135
  br i1 %133, label %137, label %559

137:                                              ; preds = %129
  %138 = load i8, i8* %32, align 1
  %139 = and i8 %138, 4
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %151

141:                                              ; preds = %137
  %142 = and i8 %138, 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %149

146:                                              ; preds = %141
  %147 = load i16, i16* %30, align 4
  %148 = zext i16 %147 to i64
  br label %149

149:                                              ; preds = %144, %146
  %150 = phi i64 [ %145, %144 ], [ %148, %146 ]
  store i64 %150, i64* %7, align 8
  br label %159

151:                                              ; preds = %137
  %152 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %153 = and i32 %152, 2147483647
  %154 = icmp eq i32 %153, 0
  %155 = sub nsw i32 0, %152
  %156 = sext i32 %155 to i64
  br i1 %154, label %157, label %559

157:                                              ; preds = %151
  %158 = load i64, i64* %7, align 8
  br label %159

159:                                              ; preds = %157, %149
  %160 = phi i64 [ %150, %149 ], [ %158, %157 ]
  %161 = phi i64 [ %128, %149 ], [ %136, %157 ]
  %162 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %2, i64 0, i32 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %162, i64 %160, i8 signext 0) #13
  %163 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  br label %172

170:                                              ; preds = %159
  %171 = bitcast %"class.std::__1::basic_string"* %162 to i8*
  br label %172

172:                                              ; preds = %167, %170
  %173 = phi i8* [ %169, %167 ], [ %171, %170 ]
  %174 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %173, i64* nonnull %7, %struct.CborValue* null) #13
  %175 = and i32 %174, 2147483647
  %176 = icmp eq i32 %175, 0
  %177 = sub nsw i32 0, %174
  %178 = sext i32 %177 to i64
  br i1 %176, label %179, label %559

179:                                              ; preds = %172
  %180 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %181 = and i32 %180, 2147483647
  %182 = icmp eq i32 %181, 0
  %183 = sub nsw i32 0, %180
  %184 = sext i32 %183 to i64
  %185 = select i1 %182, i64 %161, i64 %184
  br i1 %182, label %186, label %559

186:                                              ; preds = %179
  %187 = load i8, i8* %31, align 2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %559

189:                                              ; preds = %186
  %190 = load i8, i8* %32, align 1
  %191 = and i8 %190, 2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %559

193:                                              ; preds = %189
  %194 = and i8 %190, 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %201

198:                                              ; preds = %193
  %199 = load i16, i16* %30, align 4
  %200 = zext i16 %199 to i64
  br label %201

201:                                              ; preds = %198, %196
  %202 = phi i64 [ %197, %196 ], [ %200, %198 ]
  %203 = icmp eq i64 %202, 2
  br i1 %203, label %204, label %559

204:                                              ; preds = %201
  %205 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %206 = and i32 %205, 2147483647
  %207 = icmp eq i32 %206, 0
  %208 = select i1 %207, i32 0, i32 %205
  %209 = and i32 %208, 2147483647
  %210 = icmp eq i32 %209, 0
  %211 = sub nsw i32 0, %208
  %212 = sext i32 %211 to i64
  %213 = select i1 %210, i64 %185, i64 %212
  br i1 %210, label %214, label %559

214:                                              ; preds = %204
  %215 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #13
  store i64 0, i64* %8, align 8
  %216 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %217 = and i32 %216, 2147483647
  %218 = icmp eq i32 %217, 0
  %219 = sub nsw i32 0, %216
  %220 = sext i32 %219 to i64
  %221 = select i1 %218, i64 %213, i64 %220
  br i1 %218, label %222, label %557

222:                                              ; preds = %214
  %223 = load i8, i8* %32, align 1
  %224 = and i8 %223, 4
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %222
  %227 = and i8 %223, 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %226
  %230 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %234

231:                                              ; preds = %226
  %232 = load i16, i16* %30, align 4
  %233 = zext i16 %232 to i64
  br label %234

234:                                              ; preds = %229, %231
  %235 = phi i64 [ %230, %229 ], [ %233, %231 ]
  store i64 %235, i64* %8, align 8
  br label %244

236:                                              ; preds = %222
  %237 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %8) #13
  %238 = and i32 %237, 2147483647
  %239 = icmp eq i32 %238, 0
  %240 = sub nsw i32 0, %237
  %241 = sext i32 %240 to i64
  br i1 %239, label %242, label %557

242:                                              ; preds = %236
  %243 = load i64, i64* %8, align 8
  br label %244

244:                                              ; preds = %242, %234
  %245 = phi i64 [ %235, %234 ], [ %243, %242 ]
  %246 = phi i64 [ %213, %234 ], [ %221, %242 ]
  %247 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %2, i64 0, i32 2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %247, i64 %245, i8 signext 0) #13
  %248 = bitcast %"class.std::__1::basic_string"* %247 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  br label %257

255:                                              ; preds = %244
  %256 = bitcast %"class.std::__1::basic_string"* %247 to i8*
  br label %257

257:                                              ; preds = %252, %255
  %258 = phi i8* [ %254, %252 ], [ %256, %255 ]
  %259 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %258, i64* nonnull %8, %struct.CborValue* null) #13
  %260 = and i32 %259, 2147483647
  %261 = icmp eq i32 %260, 0
  %262 = sub nsw i32 0, %259
  %263 = sext i32 %262 to i64
  br i1 %261, label %264, label %557

264:                                              ; preds = %257
  %265 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %266 = and i32 %265, 2147483647
  %267 = icmp eq i32 %266, 0
  %268 = sub nsw i32 0, %265
  %269 = sext i32 %268 to i64
  %270 = select i1 %267, i64 %246, i64 %269
  br i1 %267, label %271, label %557

271:                                              ; preds = %264
  %272 = load i8, i8* %31, align 2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %557

274:                                              ; preds = %271
  %275 = load i8, i8* %32, align 1
  %276 = and i8 %275, 2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %278, label %557

278:                                              ; preds = %274
  %279 = and i8 %275, 1
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %278
  %282 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %286

283:                                              ; preds = %278
  %284 = load i16, i16* %30, align 4
  %285 = zext i16 %284 to i64
  br label %286

286:                                              ; preds = %283, %281
  %287 = phi i64 [ %282, %281 ], [ %285, %283 ]
  %288 = icmp eq i64 %287, 3
  br i1 %288, label %289, label %557

289:                                              ; preds = %286
  %290 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %291 = and i32 %290, 2147483647
  %292 = icmp eq i32 %291, 0
  %293 = select i1 %292, i32 0, i32 %290
  %294 = and i32 %293, 2147483647
  %295 = icmp eq i32 %294, 0
  %296 = sub nsw i32 0, %293
  %297 = sext i32 %296 to i64
  %298 = select i1 %295, i64 %270, i64 %297
  br i1 %295, label %299, label %557

299:                                              ; preds = %289
  %300 = load i8, i8* %31, align 2
  %301 = icmp eq i8 %300, -128
  br i1 %301, label %302, label %557

302:                                              ; preds = %299
  %303 = bitcast %struct.CborValue* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #13
  %304 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %9, i64 0, i32 3
  %305 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %9, i64 0, i32 4
  %306 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %9, i64 0, i32 5
  %307 = bitcast %struct.CborValue* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %307, i8 -86, i64 24, i1 false)
  %308 = load i8, i8* %32, align 1
  %309 = and i8 %308, 4
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %546

311:                                              ; preds = %302
  %312 = and i8 %308, 1
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %311
  %315 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %319

316:                                              ; preds = %311
  %317 = load i16, i16* %30, align 4
  %318 = zext i16 %317 to i64
  br label %319

319:                                              ; preds = %316, %314
  %320 = phi i64 [ %318, %316 ], [ %315, %314 ]
  %321 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %2, i64 0, i32 3
  %322 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %2, i64 0, i32 3, i32 0, i32 1
  %323 = bitcast %"struct.openscreen::msgs::HttpHeader"** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.std::__1::vector.8"* %321 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = sub i64 %324, %326
  %328 = sdiv exact i64 %327, 48
  %329 = icmp ugt i64 %320, %328
  %330 = inttoptr i64 %326 to %"struct.openscreen::msgs::HttpHeader"*
  %331 = inttoptr i64 %324 to %"struct.openscreen::msgs::HttpHeader"*
  br i1 %329, label %332, label %334

332:                                              ; preds = %319
  %333 = sub i64 %320, %328
  call void @_ZNSt3__16vectorIN10openscreen4msgs10HttpHeaderENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.8"* %321, i64 %333) #13
  br label %361

334:                                              ; preds = %319
  %335 = icmp ult i64 %320, %328
  br i1 %335, label %336, label %361

336:                                              ; preds = %334
  %337 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %330, i64 %320
  %338 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %337, %331
  br i1 %338, label %360, label %339

339:                                              ; preds = %336, %358
  %340 = phi %"struct.openscreen::msgs::HttpHeader"* [ %341, %358 ], [ %331, %336 ]
  %341 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %340, i64 -1
  %342 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %340, i64 -1, i32 1
  %343 = bitcast %"class.std::__1::basic_string"* %342 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %343, i64 0, i32 1, i32 0
  %345 = load i8, i8* %344, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %339
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %342, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load i8*, i8** %348, align 8
  call void @_ZdlPv(i8* %349) #15
  br label %350

350:                                              ; preds = %347, %339
  %351 = bitcast %"struct.openscreen::msgs::HttpHeader"* %341 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %352 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %351, i64 0, i32 1, i32 0
  %353 = load i8, i8* %352, align 1
  %354 = icmp slt i8 %353, 0
  br i1 %354, label %355, label %358

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %341, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  call void @_ZdlPv(i8* %357) #15
  br label %358

358:                                              ; preds = %355, %350
  %359 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %341, %337
  br i1 %359, label %360, label %339

360:                                              ; preds = %358, %336
  store %"struct.openscreen::msgs::HttpHeader"* %337, %"struct.openscreen::msgs::HttpHeader"** %322, align 8
  br label %361

361:                                              ; preds = %332, %334, %360
  %362 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %9) #13
  %363 = and i32 %362, 2147483647
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %548

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %321, i64 0, i32 0, i32 0
  %367 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %366, align 8
  %368 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %322, align 8
  %369 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %367, %368
  br i1 %369, label %536, label %370

370:                                              ; preds = %365
  %371 = bitcast %struct.CborValue* %10 to i8*
  %372 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %10, i64 0, i32 3
  %373 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %10, i64 0, i32 5
  %374 = bitcast i64* %11 to i8*
  %375 = bitcast i64* %12 to i8*
  %376 = bitcast %struct.CborValue* %10 to i8*
  br label %380

377:                                              ; preds = %531
  %378 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %322, align 8
  %379 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %535, %378
  br i1 %379, label %536, label %380

380:                                              ; preds = %370, %377
  %381 = phi i64 [ %298, %370 ], [ %533, %377 ]
  %382 = phi %"struct.openscreen::msgs::HttpHeader"* [ %367, %370 ], [ %535, %377 ]
  %383 = load i8, i8* %305, align 2
  %384 = icmp eq i8 %383, -128
  br i1 %384, label %385, label %546

385:                                              ; preds = %380
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %371) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %376, i8 -86, i64 24, i1 false)
  %386 = load i8, i8* %306, align 1
  %387 = and i8 %386, 4
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %389, label %518

389:                                              ; preds = %385
  %390 = and i8 %386, 1
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %394, label %392

392:                                              ; preds = %389
  %393 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %9) #13
  br label %397

394:                                              ; preds = %389
  %395 = load i16, i16* %304, align 4
  %396 = zext i16 %395 to i64
  br label %397

397:                                              ; preds = %394, %392
  %398 = phi i64 [ %396, %394 ], [ %393, %392 ]
  %399 = icmp eq i64 %398, 2
  br i1 %399, label %400, label %518

400:                                              ; preds = %397
  %401 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %9, %struct.CborValue* nonnull %10) #13
  %402 = and i32 %401, 2147483647
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %407, label %404

404:                                              ; preds = %400
  %405 = sub nsw i32 0, %401
  %406 = sext i32 %405 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #13
  br label %546

407:                                              ; preds = %400
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #13
  store i64 0, i64* %11, align 8
  %408 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %10, i32 16384) #13
  %409 = and i32 %408, 2147483647
  %410 = icmp eq i32 %409, 0
  %411 = sub nsw i32 0, %408
  %412 = sext i32 %411 to i64
  %413 = select i1 %410, i64 %381, i64 %412
  br i1 %410, label %414, label %529

414:                                              ; preds = %407
  %415 = load i8, i8* %373, align 1
  %416 = and i8 %415, 4
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %418, label %428

418:                                              ; preds = %414
  %419 = and i8 %415, 1
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %423, label %421

421:                                              ; preds = %418
  %422 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %10) #13
  br label %426

423:                                              ; preds = %418
  %424 = load i16, i16* %372, align 4
  %425 = zext i16 %424 to i64
  br label %426

426:                                              ; preds = %421, %423
  %427 = phi i64 [ %422, %421 ], [ %425, %423 ]
  store i64 %427, i64* %11, align 8
  br label %434

428:                                              ; preds = %414
  %429 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %10, i64* nonnull %11) #13
  %430 = and i32 %429, 2147483647
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %526

432:                                              ; preds = %428
  %433 = load i64, i64* %11, align 8
  br label %434

434:                                              ; preds = %432, %426
  %435 = phi i64 [ %433, %432 ], [ %427, %426 ]
  %436 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %382, i64 0, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %436, i64 %435, i8 signext 0) #13
  %437 = bitcast %"struct.openscreen::msgs::HttpHeader"* %382 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %437, i64 0, i32 1, i32 0
  %439 = load i8, i8* %438, align 1
  %440 = icmp slt i8 %439, 0
  br i1 %440, label %441, label %444

441:                                              ; preds = %434
  %442 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %382, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load i8*, i8** %442, align 8
  br label %446

444:                                              ; preds = %434
  %445 = bitcast %"struct.openscreen::msgs::HttpHeader"* %382 to i8*
  br label %446

446:                                              ; preds = %441, %444
  %447 = phi i8* [ %443, %441 ], [ %445, %444 ]
  %448 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %10, i8* %447, i64* nonnull %11, %struct.CborValue* null) #13
  %449 = and i32 %448, 2147483647
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %523

451:                                              ; preds = %446
  %452 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %10) #13
  %453 = and i32 %452, 2147483647
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %520

455:                                              ; preds = %451
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %375) #13
  store i64 0, i64* %12, align 8
  %456 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %10, i32 16384) #13
  %457 = and i32 %456, 2147483647
  %458 = icmp eq i32 %457, 0
  %459 = sub nsw i32 0, %456
  %460 = sext i32 %459 to i64
  %461 = select i1 %458, i64 %413, i64 %460
  br i1 %458, label %462, label %531

462:                                              ; preds = %455
  %463 = load i8, i8* %373, align 1
  %464 = and i8 %463, 4
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %466, label %476

466:                                              ; preds = %462
  %467 = and i8 %463, 1
  %468 = icmp eq i8 %467, 0
  br i1 %468, label %471, label %469

469:                                              ; preds = %466
  %470 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %10) #13
  br label %474

471:                                              ; preds = %466
  %472 = load i16, i16* %372, align 4
  %473 = zext i16 %472 to i64
  br label %474

474:                                              ; preds = %469, %471
  %475 = phi i64 [ %470, %469 ], [ %473, %471 ]
  store i64 %475, i64* %12, align 8
  br label %484

476:                                              ; preds = %462
  %477 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %10, i64* nonnull %12) #13
  %478 = and i32 %477, 2147483647
  %479 = icmp eq i32 %478, 0
  %480 = sub nsw i32 0, %477
  %481 = sext i32 %480 to i64
  br i1 %479, label %482, label %531

482:                                              ; preds = %476
  %483 = load i64, i64* %12, align 8
  br label %484

484:                                              ; preds = %482, %474
  %485 = phi i64 [ %483, %482 ], [ %475, %474 ]
  %486 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %382, i64 0, i32 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %486, i64 %485, i8 signext 0) #13
  %487 = bitcast %"class.std::__1::basic_string"* %486 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %488 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %487, i64 0, i32 1, i32 0
  %489 = load i8, i8* %488, align 1
  %490 = icmp slt i8 %489, 0
  br i1 %490, label %491, label %494

491:                                              ; preds = %484
  %492 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %486, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = load i8*, i8** %492, align 8
  br label %496

494:                                              ; preds = %484
  %495 = bitcast %"class.std::__1::basic_string"* %486 to i8*
  br label %496

496:                                              ; preds = %491, %494
  %497 = phi i8* [ %493, %491 ], [ %495, %494 ]
  %498 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %10, i8* %497, i64* nonnull %12, %struct.CborValue* null) #13
  %499 = and i32 %498, 2147483647
  %500 = icmp eq i32 %499, 0
  %501 = sub nsw i32 0, %498
  %502 = sext i32 %501 to i64
  br i1 %500, label %503, label %531

503:                                              ; preds = %496
  %504 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %10) #13
  %505 = and i32 %504, 2147483647
  %506 = icmp eq i32 %505, 0
  %507 = sub nsw i32 0, %504
  %508 = sext i32 %507 to i64
  br i1 %506, label %509, label %531

509:                                              ; preds = %503
  %510 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %9, %struct.CborValue* nonnull %10) #13
  %511 = and i32 %510, 2147483647
  %512 = icmp eq i32 %511, 0
  %513 = sub nsw i32 0, %510
  %514 = sext i32 %513 to i64
  %515 = xor i1 %512, true
  %516 = select i1 %512, i64 %461, i64 %514
  %517 = zext i1 %515 to i32
  br label %531

518:                                              ; preds = %385, %397
  %519 = phi i64 [ -1, %397 ], [ -2, %385 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #13
  br label %546

520:                                              ; preds = %451
  %521 = sub nsw i32 0, %452
  %522 = sext i32 %521 to i64
  br label %529

523:                                              ; preds = %446
  %524 = sub nsw i32 0, %448
  %525 = sext i32 %524 to i64
  br label %529

526:                                              ; preds = %428
  %527 = sub nsw i32 0, %429
  %528 = sext i32 %527 to i64
  br label %529

529:                                              ; preds = %407, %526, %523, %520
  %530 = phi i64 [ %522, %520 ], [ %525, %523 ], [ %528, %526 ], [ %412, %407 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #13
  br label %546

531:                                              ; preds = %455, %476, %496, %503, %509
  %532 = phi i32 [ 1, %503 ], [ 1, %496 ], [ 1, %476 ], [ 1, %455 ], [ %517, %509 ]
  %533 = phi i64 [ %508, %503 ], [ %502, %496 ], [ %481, %476 ], [ %460, %455 ], [ %516, %509 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %375) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %371) #13
  %534 = icmp eq i32 %532, 0
  %535 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %382, i64 1
  br i1 %534, label %377, label %546

536:                                              ; preds = %377, %365
  %537 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %9) #13
  %538 = and i32 %537, 2147483647
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %548

540:                                              ; preds = %536
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #13
  %541 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %542 = and i32 %541, 2147483647
  %543 = icmp eq i32 %542, 0
  %544 = sub nsw i32 0, %541
  %545 = sext i32 %544 to i64
  br i1 %543, label %552, label %557

546:                                              ; preds = %531, %380, %404, %529, %302, %518
  %547 = phi i64 [ %519, %518 ], [ -2, %302 ], [ %406, %404 ], [ %530, %529 ], [ %533, %531 ], [ -1, %380 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #13
  br label %557

548:                                              ; preds = %536, %361
  %549 = phi i32 [ %362, %361 ], [ %537, %536 ]
  %550 = sub nsw i32 0, %549
  %551 = sext i32 %550 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #13
  br label %557

552:                                              ; preds = %540
  %553 = bitcast i8** %15 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = ptrtoint i8* %0 to i64
  %556 = sub i64 %554, %555
  br label %557

557:                                              ; preds = %548, %271, %286, %274, %546, %299, %540, %289, %264, %257, %236, %214, %552
  %558 = phi i64 [ %556, %552 ], [ %545, %540 ], [ %551, %548 ], [ %297, %289 ], [ %269, %264 ], [ %263, %257 ], [ %241, %236 ], [ %220, %214 ], [ -1, %299 ], [ %547, %546 ], [ -519, %274 ], [ -519, %286 ], [ -519, %271 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #13
  br label %559

559:                                              ; preds = %186, %201, %189, %204, %179, %172, %151, %129, %557
  %560 = phi i64 [ %558, %557 ], [ %212, %204 ], [ %184, %179 ], [ %178, %172 ], [ %156, %151 ], [ %135, %129 ], [ -519, %189 ], [ -519, %201 ], [ -519, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #13
  br label %561

561:                                              ; preds = %28, %101, %116, %104, %55, %70, %58, %45, %119, %93, %73, %48, %559
  %562 = phi i64 [ %560, %559 ], [ %127, %119 ], [ %99, %93 ], [ %81, %73 ], [ %53, %48 ], [ -1, %45 ], [ -519, %58 ], [ -519, %70 ], [ -519, %55 ], [ -519, %104 ], [ -519, %116 ], [ -519, %101 ], [ -2, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  br label %563

563:                                              ; preds = %24, %3, %561
  %564 = phi i64 [ %562, %561 ], [ %23, %3 ], [ -1, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #13
  ret i64 %564
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs31DecodePresentationStartResponseEPKhmPNS0_25PresentationStartResponseE(i8*, i64, %"struct.openscreen::msgs::PresentationStartResponse"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %12 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %193

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, -96
  br i1 %21, label %22, label %193

22:                                               ; preds = %18
  %23 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %27 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %11, align 1
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %191

31:                                               ; preds = %22
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %39

36:                                               ; preds = %31
  %37 = load i16, i16* %10, align 4
  %38 = zext i16 %37 to i64
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i64 [ %38, %36 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, 3
  br i1 %41, label %42, label %191

42:                                               ; preds = %39
  %43 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = sext i32 %46 to i64
  br i1 %45, label %48, label %191

48:                                               ; preds = %42
  %49 = load i8, i8* %25, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %191

51:                                               ; preds = %48
  %52 = load i8, i8* %26, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %191

55:                                               ; preds = %51
  %56 = and i8 %52, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %63

60:                                               ; preds = %55
  %61 = load i16, i16* %24, align 4
  %62 = zext i16 %61 to i64
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %62, %60 ]
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %191

66:                                               ; preds = %63
  %67 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 0, i32 %67
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %191

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %2, i64 0, i32 0
  %77 = load i8, i8* %26, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %85

82:                                               ; preds = %75
  %83 = load i16, i16* %24, align 4
  %84 = zext i16 %83 to i64
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i64 [ %81, %80 ], [ %84, %82 ]
  store i64 %86, i64* %76, align 8
  %87 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %92, label %191

92:                                               ; preds = %85
  %93 = load i8, i8* %25, align 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %191

95:                                               ; preds = %92
  %96 = load i8, i8* %26, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %191

99:                                               ; preds = %95
  %100 = and i8 %96, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %107

104:                                              ; preds = %99
  %105 = load i16, i16* %24, align 4
  %106 = zext i16 %105 to i64
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi i64 [ %103, %102 ], [ %106, %104 ]
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %191

110:                                              ; preds = %107
  %111 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %112 = and i32 %111, 2147483647
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 0, i32 %111
  %115 = and i32 %114, 2147483647
  %116 = icmp eq i32 %115, 0
  %117 = sub nsw i32 0, %114
  %118 = sext i32 %117 to i64
  br i1 %116, label %119, label %191

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %2, i64 0, i32 1
  %121 = load i8, i8* %26, align 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %129

126:                                              ; preds = %119
  %127 = load i16, i16* %24, align 4
  %128 = zext i16 %127 to i64
  br label %129

129:                                              ; preds = %126, %124
  %130 = phi i64 [ %125, %124 ], [ %128, %126 ]
  store i64 %130, i64* %120, align 8
  %131 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %132 = and i32 %131, 2147483647
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i32 0, %131
  %135 = sext i32 %134 to i64
  br i1 %133, label %136, label %191

136:                                              ; preds = %129
  %137 = load i8, i8* %25, align 2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %191

139:                                              ; preds = %136
  %140 = load i8, i8* %26, align 1
  %141 = and i8 %140, 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %191

143:                                              ; preds = %139
  %144 = and i8 %140, 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %143
  %147 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %151

148:                                              ; preds = %143
  %149 = load i16, i16* %24, align 4
  %150 = zext i16 %149 to i64
  br label %151

151:                                              ; preds = %148, %146
  %152 = phi i64 [ %147, %146 ], [ %150, %148 ]
  %153 = icmp eq i64 %152, 2
  br i1 %153, label %154, label %191

154:                                              ; preds = %151
  %155 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %156 = and i32 %155, 2147483647
  %157 = icmp eq i32 %156, 0
  %158 = select i1 %157, i32 0, i32 %155
  %159 = and i32 %158, 2147483647
  %160 = icmp eq i32 %159, 0
  %161 = sub nsw i32 0, %158
  %162 = sext i32 %161 to i64
  br i1 %160, label %163, label %191

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %2, i64 0, i32 2
  %165 = load i8, i8* %26, align 1
  %166 = and i8 %165, 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163
  %169 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %173

170:                                              ; preds = %163
  %171 = load i16, i16* %24, align 4
  %172 = zext i16 %171 to i64
  br label %173

173:                                              ; preds = %170, %168
  %174 = phi i64 [ %169, %168 ], [ %172, %170 ]
  store i64 %174, i64* %164, align 8
  %175 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %176 = and i32 %175, 2147483647
  %177 = icmp eq i32 %176, 0
  %178 = sub nsw i32 0, %175
  %179 = sext i32 %178 to i64
  br i1 %177, label %180, label %191

180:                                              ; preds = %173
  %181 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %182 = and i32 %181, 2147483647
  %183 = icmp eq i32 %182, 0
  %184 = sub nsw i32 0, %181
  %185 = sext i32 %184 to i64
  br i1 %183, label %186, label %191

186:                                              ; preds = %180
  %187 = bitcast i8** %9 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = ptrtoint i8* %0 to i64
  %190 = sub i64 %188, %189
  br label %191

191:                                              ; preds = %22, %136, %151, %139, %92, %107, %95, %48, %63, %51, %39, %180, %173, %154, %129, %110, %85, %66, %42, %186
  %192 = phi i64 [ %190, %186 ], [ %185, %180 ], [ %179, %173 ], [ %162, %154 ], [ %135, %129 ], [ %118, %110 ], [ %91, %85 ], [ %74, %66 ], [ %47, %42 ], [ -1, %39 ], [ -519, %51 ], [ -519, %63 ], [ -519, %48 ], [ -519, %95 ], [ -519, %107 ], [ -519, %92 ], [ -519, %139 ], [ -519, %151 ], [ -519, %136 ], [ -2, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %193

193:                                              ; preds = %18, %3, %191
  %194 = phi i64 [ %192, %191 ], [ %17, %3 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i64 %194
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs34DecodePresentationTerminationEventEPKhmPNS0_28PresentationTerminationEventE(i8*, i64, %"struct.openscreen::msgs::PresentationTerminationEvent"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %189

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %189

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %187

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = icmp eq i64 %41, 2
  br i1 %42, label %43, label %187

43:                                               ; preds = %40
  %44 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %49, label %187

49:                                               ; preds = %43
  %50 = load i8, i8* %26, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %187

52:                                               ; preds = %49
  %53 = load i8, i8* %27, align 1
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %187

56:                                               ; preds = %52
  %57 = and i8 %53, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %64

61:                                               ; preds = %56
  %62 = load i16, i16* %25, align 4
  %63 = zext i16 %62 to i64
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  %66 = icmp eq i64 %65, 1
  br i1 %66, label %67, label %187

67:                                               ; preds = %64
  %68 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %69 = and i32 %68, 2147483647
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = sub nsw i32 0, %71
  %75 = sext i32 %74 to i64
  br i1 %73, label %76, label %187

76:                                               ; preds = %67
  %77 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  store i64 0, i64* %7, align 8
  %78 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %79 = and i32 %78, 2147483647
  %80 = icmp eq i32 %79, 0
  %81 = sub nsw i32 0, %78
  %82 = sext i32 %81 to i64
  br i1 %80, label %83, label %185

83:                                               ; preds = %76
  %84 = load i8, i8* %27, align 1
  %85 = and i8 %84, 4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %83
  %88 = and i8 %84, 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %95

92:                                               ; preds = %87
  %93 = load i16, i16* %25, align 4
  %94 = zext i16 %93 to i64
  br label %95

95:                                               ; preds = %90, %92
  %96 = phi i64 [ %91, %90 ], [ %94, %92 ]
  store i64 %96, i64* %7, align 8
  br label %105

97:                                               ; preds = %83
  %98 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %99 = and i32 %98, 2147483647
  %100 = icmp eq i32 %99, 0
  %101 = sub nsw i32 0, %98
  %102 = sext i32 %101 to i64
  br i1 %100, label %103, label %185

103:                                              ; preds = %97
  %104 = load i64, i64* %7, align 8
  br label %105

105:                                              ; preds = %103, %95
  %106 = phi i64 [ %96, %95 ], [ %104, %103 ]
  %107 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %2, i64 0, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %107, i64 %106, i8 signext 0) #13
  %108 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  br label %117

115:                                              ; preds = %105
  %116 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %2 to i8*
  br label %117

117:                                              ; preds = %112, %115
  %118 = phi i8* [ %114, %112 ], [ %116, %115 ]
  %119 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %118, i64* nonnull %7, %struct.CborValue* null) #13
  %120 = and i32 %119, 2147483647
  %121 = icmp eq i32 %120, 0
  %122 = sub nsw i32 0, %119
  %123 = sext i32 %122 to i64
  br i1 %121, label %124, label %185

124:                                              ; preds = %117
  %125 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %126 = and i32 %125, 2147483647
  %127 = icmp eq i32 %126, 0
  %128 = sub nsw i32 0, %125
  %129 = sext i32 %128 to i64
  br i1 %127, label %130, label %185

130:                                              ; preds = %124
  %131 = load i8, i8* %26, align 2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %185

133:                                              ; preds = %130
  %134 = load i8, i8* %27, align 1
  %135 = and i8 %134, 2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %185

137:                                              ; preds = %133
  %138 = and i8 %134, 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %145

142:                                              ; preds = %137
  %143 = load i16, i16* %25, align 4
  %144 = zext i16 %143 to i64
  br label %145

145:                                              ; preds = %142, %140
  %146 = phi i64 [ %141, %140 ], [ %144, %142 ]
  %147 = icmp eq i64 %146, 2
  br i1 %147, label %148, label %185

148:                                              ; preds = %145
  %149 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %150 = and i32 %149, 2147483647
  %151 = icmp eq i32 %150, 0
  %152 = select i1 %151, i32 0, i32 %149
  %153 = and i32 %152, 2147483647
  %154 = icmp eq i32 %153, 0
  %155 = sub nsw i32 0, %152
  %156 = sext i32 %155 to i64
  br i1 %154, label %157, label %185

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %2, i64 0, i32 1
  %159 = load i8, i8* %27, align 1
  %160 = and i8 %159, 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %157
  %163 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %167

164:                                              ; preds = %157
  %165 = load i16, i16* %25, align 4
  %166 = zext i16 %165 to i64
  br label %167

167:                                              ; preds = %164, %162
  %168 = phi i64 [ %163, %162 ], [ %166, %164 ]
  store i64 %168, i64* %158, align 8
  %169 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %170 = and i32 %169, 2147483647
  %171 = icmp eq i32 %170, 0
  %172 = sub nsw i32 0, %169
  %173 = sext i32 %172 to i64
  br i1 %171, label %174, label %185

174:                                              ; preds = %167
  %175 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %176 = and i32 %175, 2147483647
  %177 = icmp eq i32 %176, 0
  %178 = sub nsw i32 0, %175
  %179 = sext i32 %178 to i64
  br i1 %177, label %180, label %185

180:                                              ; preds = %174
  %181 = bitcast i8** %10 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = ptrtoint i8* %0 to i64
  %184 = sub i64 %182, %183
  br label %185

185:                                              ; preds = %130, %145, %133, %174, %167, %148, %124, %117, %97, %76, %180
  %186 = phi i64 [ %184, %180 ], [ %179, %174 ], [ %173, %167 ], [ %156, %148 ], [ %129, %124 ], [ %123, %117 ], [ %102, %97 ], [ %82, %76 ], [ -519, %133 ], [ -519, %145 ], [ -519, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  br label %187

187:                                              ; preds = %23, %49, %64, %52, %40, %67, %43, %185
  %188 = phi i64 [ %186, %185 ], [ %75, %67 ], [ %48, %43 ], [ -1, %40 ], [ -519, %52 ], [ -519, %64 ], [ -519, %49 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %189

189:                                              ; preds = %19, %3, %187
  %190 = phi i64 [ %188, %187 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %190
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs36DecodePresentationTerminationRequestEPKhmPNS0_30PresentationTerminationRequestE(i8*, i64, %"struct.openscreen::msgs::PresentationTerminationRequest"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca i64, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %233

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %233

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %231

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = icmp eq i64 %41, 3
  br i1 %42, label %43, label %231

43:                                               ; preds = %40
  %44 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %49, label %231

49:                                               ; preds = %43
  %50 = load i8, i8* %26, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %231

52:                                               ; preds = %49
  %53 = load i8, i8* %27, align 1
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %231

56:                                               ; preds = %52
  %57 = and i8 %53, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %64

61:                                               ; preds = %56
  %62 = load i16, i16* %25, align 4
  %63 = zext i16 %62 to i64
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %231

67:                                               ; preds = %64
  %68 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %69 = and i32 %68, 2147483647
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = sub nsw i32 0, %71
  %75 = sext i32 %74 to i64
  br i1 %73, label %76, label %231

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %2, i64 0, i32 0
  %78 = load i8, i8* %27, align 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %86

83:                                               ; preds = %76
  %84 = load i16, i16* %25, align 4
  %85 = zext i16 %84 to i64
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  store i64 %87, i64* %77, align 8
  %88 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %89 = and i32 %88, 2147483647
  %90 = icmp eq i32 %89, 0
  %91 = sub nsw i32 0, %88
  %92 = sext i32 %91 to i64
  br i1 %90, label %93, label %231

93:                                               ; preds = %86
  %94 = load i8, i8* %26, align 2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %231

96:                                               ; preds = %93
  %97 = load i8, i8* %27, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %231

100:                                              ; preds = %96
  %101 = and i8 %97, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %108

105:                                              ; preds = %100
  %106 = load i16, i16* %25, align 4
  %107 = zext i16 %106 to i64
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i64 [ %104, %103 ], [ %107, %105 ]
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %231

111:                                              ; preds = %108
  %112 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %113 = and i32 %112, 2147483647
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 0, i32 %112
  %116 = and i32 %115, 2147483647
  %117 = icmp eq i32 %116, 0
  %118 = sub nsw i32 0, %115
  %119 = sext i32 %118 to i64
  br i1 %117, label %120, label %231

120:                                              ; preds = %111
  %121 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #13
  store i64 0, i64* %7, align 8
  %122 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %6, i32 16384) #13
  %123 = and i32 %122, 2147483647
  %124 = icmp eq i32 %123, 0
  %125 = sub nsw i32 0, %122
  %126 = sext i32 %125 to i64
  br i1 %124, label %127, label %229

127:                                              ; preds = %120
  %128 = load i8, i8* %27, align 1
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %141

131:                                              ; preds = %127
  %132 = and i8 %128, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %139

136:                                              ; preds = %131
  %137 = load i16, i16* %25, align 4
  %138 = zext i16 %137 to i64
  br label %139

139:                                              ; preds = %134, %136
  %140 = phi i64 [ %135, %134 ], [ %138, %136 ]
  store i64 %140, i64* %7, align 8
  br label %149

141:                                              ; preds = %127
  %142 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %6, i64* nonnull %7) #13
  %143 = and i32 %142, 2147483647
  %144 = icmp eq i32 %143, 0
  %145 = sub nsw i32 0, %142
  %146 = sext i32 %145 to i64
  br i1 %144, label %147, label %229

147:                                              ; preds = %141
  %148 = load i64, i64* %7, align 8
  br label %149

149:                                              ; preds = %147, %139
  %150 = phi i64 [ %140, %139 ], [ %148, %147 ]
  %151 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %2, i64 0, i32 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %151, i64 %150, i8 signext 0) #13
  %152 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  br label %161

159:                                              ; preds = %149
  %160 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  br label %161

161:                                              ; preds = %156, %159
  %162 = phi i8* [ %158, %156 ], [ %160, %159 ]
  %163 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %6, i8* %162, i64* nonnull %7, %struct.CborValue* null) #13
  %164 = and i32 %163, 2147483647
  %165 = icmp eq i32 %164, 0
  %166 = sub nsw i32 0, %163
  %167 = sext i32 %166 to i64
  br i1 %165, label %168, label %229

168:                                              ; preds = %161
  %169 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %6) #13
  %170 = and i32 %169, 2147483647
  %171 = icmp eq i32 %170, 0
  %172 = sub nsw i32 0, %169
  %173 = sext i32 %172 to i64
  br i1 %171, label %174, label %229

174:                                              ; preds = %168
  %175 = load i8, i8* %26, align 2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %229

177:                                              ; preds = %174
  %178 = load i8, i8* %27, align 1
  %179 = and i8 %178, 2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %229

181:                                              ; preds = %177
  %182 = and i8 %178, 1
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %189

186:                                              ; preds = %181
  %187 = load i16, i16* %25, align 4
  %188 = zext i16 %187 to i64
  br label %189

189:                                              ; preds = %186, %184
  %190 = phi i64 [ %185, %184 ], [ %188, %186 ]
  %191 = icmp eq i64 %190, 2
  br i1 %191, label %192, label %229

192:                                              ; preds = %189
  %193 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %194 = and i32 %193, 2147483647
  %195 = icmp eq i32 %194, 0
  %196 = select i1 %195, i32 0, i32 %193
  %197 = and i32 %196, 2147483647
  %198 = icmp eq i32 %197, 0
  %199 = sub nsw i32 0, %196
  %200 = sext i32 %199 to i64
  br i1 %198, label %201, label %229

201:                                              ; preds = %192
  %202 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %2, i64 0, i32 2
  %203 = load i8, i8* %27, align 1
  %204 = and i8 %203, 1
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %201
  %207 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %211

208:                                              ; preds = %201
  %209 = load i16, i16* %25, align 4
  %210 = zext i16 %209 to i64
  br label %211

211:                                              ; preds = %208, %206
  %212 = phi i64 [ %207, %206 ], [ %210, %208 ]
  store i64 %212, i64* %202, align 8
  %213 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %214 = and i32 %213, 2147483647
  %215 = icmp eq i32 %214, 0
  %216 = sub nsw i32 0, %213
  %217 = sext i32 %216 to i64
  br i1 %215, label %218, label %229

218:                                              ; preds = %211
  %219 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %220 = and i32 %219, 2147483647
  %221 = icmp eq i32 %220, 0
  %222 = sub nsw i32 0, %219
  %223 = sext i32 %222 to i64
  br i1 %221, label %224, label %229

224:                                              ; preds = %218
  %225 = bitcast i8** %10 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = ptrtoint i8* %0 to i64
  %228 = sub i64 %226, %227
  br label %229

229:                                              ; preds = %174, %189, %177, %218, %211, %192, %168, %161, %141, %120, %224
  %230 = phi i64 [ %228, %224 ], [ %223, %218 ], [ %217, %211 ], [ %200, %192 ], [ %173, %168 ], [ %167, %161 ], [ %146, %141 ], [ %126, %120 ], [ -519, %177 ], [ -519, %189 ], [ -519, %174 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #13
  br label %231

231:                                              ; preds = %23, %93, %108, %96, %49, %64, %52, %40, %111, %86, %67, %43, %229
  %232 = phi i64 [ %230, %229 ], [ %119, %111 ], [ %92, %86 ], [ %75, %67 ], [ %48, %43 ], [ -1, %40 ], [ -519, %52 ], [ -519, %64 ], [ -519, %49 ], [ -519, %96 ], [ -519, %108 ], [ -519, %93 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %233

233:                                              ; preds = %19, %3, %231
  %234 = phi i64 [ %232, %231 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %234
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs37DecodePresentationTerminationResponseEPKhmPNS0_31PresentationTerminationResponseE(i8*, i64, %"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %12 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %14 = and i32 %13, 2147483647
  %15 = icmp eq i32 %14, 0
  %16 = sub nsw i32 0, %13
  %17 = sext i32 %16 to i64
  br i1 %15, label %18, label %149

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = icmp eq i8 %20, -96
  br i1 %21, label %22, label %149

22:                                               ; preds = %18
  %23 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %27 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %11, align 1
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %147

31:                                               ; preds = %22
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %39

36:                                               ; preds = %31
  %37 = load i16, i16* %10, align 4
  %38 = zext i16 %37 to i64
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i64 [ %38, %36 ], [ %35, %34 ]
  %41 = icmp eq i64 %40, 2
  br i1 %41, label %42, label %147

42:                                               ; preds = %39
  %43 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %44 = and i32 %43, 2147483647
  %45 = icmp eq i32 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = sext i32 %46 to i64
  br i1 %45, label %48, label %147

48:                                               ; preds = %42
  %49 = load i8, i8* %25, align 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %147

51:                                               ; preds = %48
  %52 = load i8, i8* %26, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %147

55:                                               ; preds = %51
  %56 = and i8 %52, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %63

60:                                               ; preds = %55
  %61 = load i16, i16* %24, align 4
  %62 = zext i16 %61 to i64
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %62, %60 ]
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %147

66:                                               ; preds = %63
  %67 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %68 = and i32 %67, 2147483647
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i32 0, i32 %67
  %71 = and i32 %70, 2147483647
  %72 = icmp eq i32 %71, 0
  %73 = sub nsw i32 0, %70
  %74 = sext i32 %73 to i64
  br i1 %72, label %75, label %147

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %2, i64 0, i32 0
  %77 = load i8, i8* %26, align 1
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %85

82:                                               ; preds = %75
  %83 = load i16, i16* %24, align 4
  %84 = zext i16 %83 to i64
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi i64 [ %81, %80 ], [ %84, %82 ]
  store i64 %86, i64* %76, align 8
  %87 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %88 = and i32 %87, 2147483647
  %89 = icmp eq i32 %88, 0
  %90 = sub nsw i32 0, %87
  %91 = sext i32 %90 to i64
  br i1 %89, label %92, label %147

92:                                               ; preds = %85
  %93 = load i8, i8* %25, align 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %147

95:                                               ; preds = %92
  %96 = load i8, i8* %26, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %147

99:                                               ; preds = %95
  %100 = and i8 %96, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %107

104:                                              ; preds = %99
  %105 = load i16, i16* %24, align 4
  %106 = zext i16 %105 to i64
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi i64 [ %103, %102 ], [ %106, %104 ]
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %147

110:                                              ; preds = %107
  %111 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %112 = and i32 %111, 2147483647
  %113 = icmp eq i32 %112, 0
  %114 = select i1 %113, i32 0, i32 %111
  %115 = and i32 %114, 2147483647
  %116 = icmp eq i32 %115, 0
  %117 = sub nsw i32 0, %114
  %118 = sext i32 %117 to i64
  br i1 %116, label %119, label %147

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %2, i64 0, i32 1
  %121 = load i8, i8* %26, align 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %129

126:                                              ; preds = %119
  %127 = load i16, i16* %24, align 4
  %128 = zext i16 %127 to i64
  br label %129

129:                                              ; preds = %126, %124
  %130 = phi i64 [ %125, %124 ], [ %128, %126 ]
  store i64 %130, i64* %120, align 8
  %131 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %132 = and i32 %131, 2147483647
  %133 = icmp eq i32 %132, 0
  %134 = sub nsw i32 0, %131
  %135 = sext i32 %134 to i64
  br i1 %133, label %136, label %147

136:                                              ; preds = %129
  %137 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %138 = and i32 %137, 2147483647
  %139 = icmp eq i32 %138, 0
  %140 = sub nsw i32 0, %137
  %141 = sext i32 %140 to i64
  br i1 %139, label %142, label %147

142:                                              ; preds = %136
  %143 = bitcast i8** %9 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = ptrtoint i8* %0 to i64
  %146 = sub i64 %144, %145
  br label %147

147:                                              ; preds = %22, %92, %107, %95, %48, %63, %51, %39, %136, %129, %110, %85, %66, %42, %142
  %148 = phi i64 [ %146, %142 ], [ %141, %136 ], [ %135, %129 ], [ %118, %110 ], [ %91, %85 ], [ %74, %66 ], [ %47, %42 ], [ -1, %39 ], [ -519, %51 ], [ -519, %63 ], [ -519, %48 ], [ -519, %95 ], [ -519, %107 ], [ -519, %92 ], [ -2, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br label %149

149:                                              ; preds = %18, %3, %147
  %150 = phi i64 [ %148, %147 ], [ %17, %3 ], [ -1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i64 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs38DecodePresentationUrlAvailabilityEventEPKhmPNS0_32PresentationUrlAvailabilityEventE(i8*, i64, %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca %struct.CborValue, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %207

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %207

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %205

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = icmp eq i64 %41, 2
  br i1 %42, label %43, label %205

43:                                               ; preds = %40
  %44 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %49, label %205

49:                                               ; preds = %43
  %50 = load i8, i8* %26, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %205

52:                                               ; preds = %49
  %53 = load i8, i8* %27, align 1
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %205

56:                                               ; preds = %52
  %57 = and i8 %53, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %64

61:                                               ; preds = %56
  %62 = load i16, i16* %25, align 4
  %63 = zext i16 %62 to i64
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  %66 = icmp eq i64 %65, 1
  br i1 %66, label %67, label %205

67:                                               ; preds = %64
  %68 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %69 = and i32 %68, 2147483647
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = sub nsw i32 0, %71
  %75 = sext i32 %74 to i64
  br i1 %73, label %76, label %205

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %2, i64 0, i32 0
  %78 = load i8, i8* %27, align 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %86

83:                                               ; preds = %76
  %84 = load i16, i16* %25, align 4
  %85 = zext i16 %84 to i64
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  store i64 %87, i64* %77, align 8
  %88 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %89 = and i32 %88, 2147483647
  %90 = icmp eq i32 %89, 0
  %91 = sub nsw i32 0, %88
  %92 = sext i32 %91 to i64
  br i1 %90, label %93, label %205

93:                                               ; preds = %86
  %94 = load i8, i8* %26, align 2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %205

96:                                               ; preds = %93
  %97 = load i8, i8* %27, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %205

100:                                              ; preds = %96
  %101 = and i8 %97, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %108

105:                                              ; preds = %100
  %106 = load i16, i16* %25, align 4
  %107 = zext i16 %106 to i64
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i64 [ %104, %103 ], [ %107, %105 ]
  %110 = icmp eq i64 %109, 2
  br i1 %110, label %111, label %205

111:                                              ; preds = %108
  %112 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %113 = and i32 %112, 2147483647
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 0, i32 %112
  %116 = and i32 %115, 2147483647
  %117 = icmp eq i32 %116, 0
  %118 = sub nsw i32 0, %115
  %119 = sext i32 %118 to i64
  br i1 %117, label %120, label %205

120:                                              ; preds = %111
  %121 = load i8, i8* %26, align 2
  %122 = icmp eq i8 %121, -128
  br i1 %122, label %123, label %205

123:                                              ; preds = %120
  %124 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #13
  %125 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 3
  %126 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 5
  %127 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 24, i1 false)
  %128 = load i8, i8* %27, align 1
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %139

131:                                              ; preds = %123
  %132 = and i8 %128, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %140

136:                                              ; preds = %131
  %137 = load i16, i16* %25, align 4
  %138 = zext i16 %137 to i64
  br label %140

139:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  br label %205

140:                                              ; preds = %136, %134
  %141 = phi i64 [ %138, %136 ], [ %135, %134 ]
  %142 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %2, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %2, i64 0, i32 1, i32 0, i32 1
  %144 = bitcast i64** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.std::__1::vector.15"* %142 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = ashr exact i64 %148, 3
  %150 = icmp ugt i64 %141, %149
  %151 = inttoptr i64 %147 to i64*
  br i1 %150, label %152, label %154

152:                                              ; preds = %140
  %153 = sub i64 %141, %149
  call void @_ZNSt3__16vectorIN10openscreen4msgs15UrlAvailabilityENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.15"* %142, i64 %153) #13
  br label %158

154:                                              ; preds = %140
  %155 = icmp ult i64 %141, %149
  br i1 %155, label %156, label %158

156:                                              ; preds = %154
  %157 = getelementptr inbounds i64, i64* %151, i64 %141
  store i64* %157, i64** %143, align 8
  br label %158

158:                                              ; preds = %152, %154, %156
  %159 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %196

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %142, i64 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = load i64*, i64** %143, align 8
  %166 = icmp eq i64* %164, %165
  br i1 %166, label %186, label %170

167:                                              ; preds = %180
  %168 = load i64*, i64** %143, align 8
  %169 = icmp eq i64* %185, %168
  br i1 %169, label %186, label %170

170:                                              ; preds = %162, %167
  %171 = phi i64* [ %185, %167 ], [ %164, %162 ]
  %172 = load i8, i8* %126, align 1
  %173 = and i8 %172, 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %170
  %176 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %180

177:                                              ; preds = %170
  %178 = load i16, i16* %125, align 4
  %179 = zext i16 %178 to i64
  br label %180

180:                                              ; preds = %177, %175
  %181 = phi i64 [ %176, %175 ], [ %179, %177 ]
  store i64 %181, i64* %171, align 8
  %182 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %7) #13
  %183 = and i32 %182, 2147483647
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds i64, i64* %171, i64 1
  br i1 %184, label %167, label %196

186:                                              ; preds = %167, %162
  %187 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %188 = and i32 %187, 2147483647
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  %191 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %192 = and i32 %191, 2147483647
  %193 = icmp eq i32 %192, 0
  %194 = sub nsw i32 0, %191
  %195 = sext i32 %194 to i64
  br i1 %193, label %200, label %205

196:                                              ; preds = %180, %186, %158
  %197 = phi i32 [ %159, %158 ], [ %187, %186 ], [ %182, %180 ]
  %198 = sub nsw i32 0, %197
  %199 = sext i32 %198 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  br label %205

200:                                              ; preds = %190
  %201 = bitcast i8** %10 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = ptrtoint i8* %0 to i64
  %204 = sub i64 %202, %203
  br label %205

205:                                              ; preds = %23, %196, %93, %108, %96, %49, %64, %52, %139, %120, %40, %190, %111, %86, %67, %43, %200
  %206 = phi i64 [ %204, %200 ], [ %195, %190 ], [ %199, %196 ], [ %119, %111 ], [ %92, %86 ], [ %75, %67 ], [ %48, %43 ], [ -1, %40 ], [ -1, %120 ], [ -2, %139 ], [ -519, %52 ], [ -519, %64 ], [ -519, %49 ], [ -519, %96 ], [ -519, %108 ], [ -519, %93 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %207

207:                                              ; preds = %19, %3, %205
  %208 = phi i64 [ %206, %205 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %208
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs40DecodePresentationUrlAvailabilityRequestEPKhmPNS0_34PresentationUrlAvailabilityRequestE(i8*, i64, %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca %struct.CborValue, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %13 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %14 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  %18 = sub nsw i32 0, %15
  %19 = sext i32 %18 to i64
  br i1 %17, label %20, label %348

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, -96
  br i1 %23, label %24, label %348

24:                                               ; preds = %20
  %25 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %28 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %29 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = load i8, i8* %13, align 1
  %31 = and i8 %30, 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %346

33:                                               ; preds = %24
  %34 = and i8 %30, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %41

38:                                               ; preds = %33
  %39 = load i16, i16* %12, align 4
  %40 = zext i16 %39 to i64
  br label %41

41:                                               ; preds = %38, %36
  %42 = phi i64 [ %40, %38 ], [ %37, %36 ]
  %43 = icmp eq i64 %42, 4
  br i1 %43, label %44, label %346

44:                                               ; preds = %41
  %45 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %46 = and i32 %45, 2147483647
  %47 = icmp eq i32 %46, 0
  %48 = sub nsw i32 0, %45
  %49 = sext i32 %48 to i64
  br i1 %47, label %50, label %346

50:                                               ; preds = %44
  %51 = load i8, i8* %27, align 2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %346

53:                                               ; preds = %50
  %54 = load i8, i8* %28, align 1
  %55 = and i8 %54, 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %346

57:                                               ; preds = %53
  %58 = and i8 %54, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %65

62:                                               ; preds = %57
  %63 = load i16, i16* %26, align 4
  %64 = zext i16 %63 to i64
  br label %65

65:                                               ; preds = %62, %60
  %66 = phi i64 [ %61, %60 ], [ %64, %62 ]
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %346

68:                                               ; preds = %65
  %69 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %70 = and i32 %69, 2147483647
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 0, i32 %69
  %73 = and i32 %72, 2147483647
  %74 = icmp eq i32 %73, 0
  %75 = sub nsw i32 0, %72
  %76 = sext i32 %75 to i64
  br i1 %74, label %77, label %346

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %2, i64 0, i32 0
  %79 = load i8, i8* %28, align 1
  %80 = and i8 %79, 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %87

84:                                               ; preds = %77
  %85 = load i16, i16* %26, align 4
  %86 = zext i16 %85 to i64
  br label %87

87:                                               ; preds = %84, %82
  %88 = phi i64 [ %83, %82 ], [ %86, %84 ]
  store i64 %88, i64* %78, align 8
  %89 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %90 = and i32 %89, 2147483647
  %91 = icmp eq i32 %90, 0
  %92 = sub nsw i32 0, %89
  %93 = sext i32 %92 to i64
  br i1 %91, label %94, label %346

94:                                               ; preds = %87
  %95 = load i8, i8* %27, align 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %346

97:                                               ; preds = %94
  %98 = load i8, i8* %28, align 1
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %346

101:                                              ; preds = %97
  %102 = and i8 %98, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %109

106:                                              ; preds = %101
  %107 = load i16, i16* %26, align 4
  %108 = zext i16 %107 to i64
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %105, %104 ], [ %108, %106 ]
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %346

112:                                              ; preds = %109
  %113 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %114 = and i32 %113, 2147483647
  %115 = icmp eq i32 %114, 0
  %116 = select i1 %115, i32 0, i32 %113
  %117 = and i32 %116, 2147483647
  %118 = icmp eq i32 %117, 0
  %119 = sub nsw i32 0, %116
  %120 = sext i32 %119 to i64
  br i1 %118, label %121, label %346

121:                                              ; preds = %112
  %122 = load i8, i8* %27, align 2
  %123 = icmp eq i8 %122, -128
  br i1 %123, label %124, label %346

124:                                              ; preds = %121
  %125 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  %126 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 3
  %127 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 5
  %128 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 24, i1 false)
  %129 = load i8, i8* %28, align 1
  %130 = and i8 %129, 4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %244

132:                                              ; preds = %124
  %133 = and i8 %129, 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %140

137:                                              ; preds = %132
  %138 = load i16, i16* %26, align 4
  %139 = zext i16 %138 to i64
  br label %140

140:                                              ; preds = %137, %135
  %141 = phi i64 [ %139, %137 ], [ %136, %135 ]
  %142 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %2, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %2, i64 0, i32 1, i32 0, i32 1
  %144 = bitcast %"class.std::__1::basic_string"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.std::__1::vector.23"* %142 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = sdiv exact i64 %148, 24
  %150 = icmp ugt i64 %141, %149
  %151 = inttoptr i64 %147 to %"class.std::__1::basic_string"*
  %152 = inttoptr i64 %145 to %"class.std::__1::basic_string"*
  br i1 %150, label %153, label %155

153:                                              ; preds = %140
  %154 = sub i64 %141, %149
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8__appendEm(%"class.std::__1::vector.23"* %142, i64 %154) #13
  br label %173

155:                                              ; preds = %140
  %156 = icmp ult i64 %141, %149
  br i1 %156, label %157, label %173

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %141
  %159 = icmp eq %"class.std::__1::basic_string"* %158, %152
  br i1 %159, label %172, label %160

160:                                              ; preds = %157, %170
  %161 = phi %"class.std::__1::basic_string"* [ %162, %170 ], [ %152, %157 ]
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 -1
  %163 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #15
  br label %170

170:                                              ; preds = %167, %160
  %171 = icmp eq %"class.std::__1::basic_string"* %162, %158
  br i1 %171, label %172, label %160

172:                                              ; preds = %170, %157
  store %"class.std::__1::basic_string"* %158, %"class.std::__1::basic_string"** %143, align 8
  br label %173

173:                                              ; preds = %153, %155, %172
  %174 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %175 = and i32 %174, 2147483647
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %246

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %142, i64 0, i32 0, i32 0
  %179 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %178, align 8
  %180 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %143, align 8
  %181 = icmp eq %"class.std::__1::basic_string"* %179, %180
  br i1 %181, label %237, label %182

182:                                              ; preds = %177
  %183 = bitcast i64* %8 to i8*
  br label %184

184:                                              ; preds = %182, %229
  %185 = phi %"class.std::__1::basic_string"* [ %179, %182 ], [ %230, %229 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #13
  store i64 0, i64* %8, align 8
  %186 = call i32 @cbor_value_validate(%struct.CborValue* nonnull %7, i32 16384) #13
  %187 = and i32 %186, 2147483647
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %233

189:                                              ; preds = %184
  %190 = load i8, i8* %127, align 1
  %191 = and i8 %190, 4
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %203

193:                                              ; preds = %189
  %194 = and i8 %190, 1
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %193
  %197 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %201

198:                                              ; preds = %193
  %199 = load i16, i16* %126, align 4
  %200 = zext i16 %199 to i64
  br label %201

201:                                              ; preds = %196, %198
  %202 = phi i64 [ %197, %196 ], [ %200, %198 ]
  store i64 %202, i64* %8, align 8
  br label %209

203:                                              ; preds = %189
  %204 = call i32 @cbor_value_calculate_string_length(%struct.CborValue* nonnull %7, i64* nonnull %8) #13
  %205 = and i32 %204, 2147483647
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %233

207:                                              ; preds = %203
  %208 = load i64, i64* %8, align 8
  br label %209

209:                                              ; preds = %207, %201
  %210 = phi i64 [ %208, %207 ], [ %202, %201 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %185, i64 %210, i8 signext 0) #13
  %211 = bitcast %"class.std::__1::basic_string"* %185 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  br label %220

218:                                              ; preds = %209
  %219 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  br label %220

220:                                              ; preds = %215, %218
  %221 = phi i8* [ %217, %215 ], [ %219, %218 ]
  %222 = call i32 @_cbor_value_copy_string(%struct.CborValue* nonnull %7, i8* %221, i64* nonnull %8, %struct.CborValue* null) #13
  %223 = and i32 %222, 2147483647
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %233

225:                                              ; preds = %220
  %226 = call i32 @cbor_value_advance(%struct.CborValue* nonnull %7) #13
  %227 = and i32 %226, 2147483647
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %233

229:                                              ; preds = %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 1
  %231 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %143, align 8
  %232 = icmp eq %"class.std::__1::basic_string"* %230, %231
  br i1 %232, label %237, label %184

233:                                              ; preds = %184, %220, %203, %225
  %234 = phi i32 [ %226, %225 ], [ %204, %203 ], [ %222, %220 ], [ %186, %184 ]
  %235 = sub nsw i32 0, %234
  %236 = sext i32 %235 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #13
  br label %244

237:                                              ; preds = %229, %177
  %238 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %239 = and i32 %238, 2147483647
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  %242 = load i8, i8* %27, align 2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %250, label %346

244:                                              ; preds = %124, %233
  %245 = phi i64 [ %236, %233 ], [ -2, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  br label %346

246:                                              ; preds = %237, %173
  %247 = phi i32 [ %174, %173 ], [ %238, %237 ]
  %248 = sub nsw i32 0, %247
  %249 = sext i32 %248 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  br label %346

250:                                              ; preds = %241
  %251 = load i8, i8* %28, align 1
  %252 = and i8 %251, 2
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %346

254:                                              ; preds = %250
  %255 = and i8 %251, 1
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %254
  %258 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %262

259:                                              ; preds = %254
  %260 = load i16, i16* %26, align 4
  %261 = zext i16 %260 to i64
  br label %262

262:                                              ; preds = %259, %257
  %263 = phi i64 [ %258, %257 ], [ %261, %259 ]
  %264 = icmp eq i64 %263, 2
  br i1 %264, label %265, label %346

265:                                              ; preds = %262
  %266 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %267 = and i32 %266, 2147483647
  %268 = icmp eq i32 %267, 0
  %269 = select i1 %268, i32 0, i32 %266
  %270 = and i32 %269, 2147483647
  %271 = icmp eq i32 %270, 0
  %272 = sub nsw i32 0, %269
  %273 = sext i32 %272 to i64
  br i1 %271, label %274, label %346

274:                                              ; preds = %265
  %275 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %2, i64 0, i32 2
  %276 = load i8, i8* %28, align 1
  %277 = and i8 %276, 1
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %281, label %279

279:                                              ; preds = %274
  %280 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %284

281:                                              ; preds = %274
  %282 = load i16, i16* %26, align 4
  %283 = zext i16 %282 to i64
  br label %284

284:                                              ; preds = %281, %279
  %285 = phi i64 [ %280, %279 ], [ %283, %281 ]
  store i64 %285, i64* %275, align 8
  %286 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %287 = and i32 %286, 2147483647
  %288 = icmp eq i32 %287, 0
  %289 = sub nsw i32 0, %286
  %290 = sext i32 %289 to i64
  br i1 %288, label %291, label %346

291:                                              ; preds = %284
  %292 = load i8, i8* %27, align 2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %346

294:                                              ; preds = %291
  %295 = load i8, i8* %28, align 1
  %296 = and i8 %295, 2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %346

298:                                              ; preds = %294
  %299 = and i8 %295, 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %303, label %301

301:                                              ; preds = %298
  %302 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %306

303:                                              ; preds = %298
  %304 = load i16, i16* %26, align 4
  %305 = zext i16 %304 to i64
  br label %306

306:                                              ; preds = %303, %301
  %307 = phi i64 [ %302, %301 ], [ %305, %303 ]
  %308 = icmp eq i64 %307, 3
  br i1 %308, label %309, label %346

309:                                              ; preds = %306
  %310 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %311 = and i32 %310, 2147483647
  %312 = icmp eq i32 %311, 0
  %313 = select i1 %312, i32 0, i32 %310
  %314 = and i32 %313, 2147483647
  %315 = icmp eq i32 %314, 0
  %316 = sub nsw i32 0, %313
  %317 = sext i32 %316 to i64
  br i1 %315, label %318, label %346

318:                                              ; preds = %309
  %319 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %2, i64 0, i32 3
  %320 = load i8, i8* %28, align 1
  %321 = and i8 %320, 1
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %318
  %324 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %328

325:                                              ; preds = %318
  %326 = load i16, i16* %26, align 4
  %327 = zext i16 %326 to i64
  br label %328

328:                                              ; preds = %325, %323
  %329 = phi i64 [ %324, %323 ], [ %327, %325 ]
  store i64 %329, i64* %319, align 8
  %330 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %331 = and i32 %330, 2147483647
  %332 = icmp eq i32 %331, 0
  %333 = sub nsw i32 0, %330
  %334 = sext i32 %333 to i64
  br i1 %332, label %335, label %346

335:                                              ; preds = %328
  %336 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %337 = and i32 %336, 2147483647
  %338 = icmp eq i32 %337, 0
  %339 = sub nsw i32 0, %336
  %340 = sext i32 %339 to i64
  br i1 %338, label %341, label %346

341:                                              ; preds = %335
  %342 = bitcast i8** %11 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = ptrtoint i8* %0 to i64
  %345 = sub i64 %343, %344
  br label %346

346:                                              ; preds = %24, %246, %291, %306, %294, %241, %262, %250, %94, %109, %97, %50, %65, %53, %244, %121, %41, %335, %328, %309, %284, %265, %112, %87, %68, %44, %341
  %347 = phi i64 [ %345, %341 ], [ %340, %335 ], [ %334, %328 ], [ %317, %309 ], [ %290, %284 ], [ %273, %265 ], [ %249, %246 ], [ %120, %112 ], [ %93, %87 ], [ %76, %68 ], [ %49, %44 ], [ -1, %41 ], [ -1, %121 ], [ %245, %244 ], [ -519, %53 ], [ -519, %65 ], [ -519, %50 ], [ -519, %97 ], [ -519, %109 ], [ -519, %94 ], [ -519, %250 ], [ -519, %262 ], [ -519, %241 ], [ -519, %294 ], [ -519, %306 ], [ -519, %291 ], [ -2, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  br label %348

348:                                              ; preds = %20, %3, %346
  %349 = phi i64 [ %347, %346 ], [ %19, %3 ], [ -1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i64 %349
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN10openscreen4msgs41DecodePresentationUrlAvailabilityResponseEPKhmPNS0_35PresentationUrlAvailabilityResponseE(i8*, i64, %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"*) local_unnamed_addr #0 {
  %4 = alloca %struct.CborParser, align 8
  %5 = alloca %struct.CborValue, align 8
  %6 = alloca %struct.CborValue, align 8
  %7 = alloca %struct.CborValue, align 8
  %8 = bitcast %struct.CborParser* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %10 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 3
  %12 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 5
  %13 = bitcast %struct.CborValue* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = call i32 @cbor_parser_init(i8* %0, i64 %1, i32 0, %struct.CborParser* nonnull %4, %struct.CborValue* nonnull %5) #13
  %15 = and i32 %14, 2147483647
  %16 = icmp eq i32 %15, 0
  %17 = sub nsw i32 0, %14
  %18 = sext i32 %17 to i64
  br i1 %16, label %19, label %207

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %5, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, -96
  br i1 %22, label %23, label %207

23:                                               ; preds = %19
  %24 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 3
  %26 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 4
  %27 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %6, i64 0, i32 5
  %28 = bitcast %struct.CborValue* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %12, align 1
  %30 = and i8 %29, 4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %205

32:                                               ; preds = %23
  %33 = and i8 %29, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %5) #13
  br label %40

37:                                               ; preds = %32
  %38 = load i16, i16* %11, align 4
  %39 = zext i16 %38 to i64
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi i64 [ %39, %37 ], [ %36, %35 ]
  %42 = icmp eq i64 %41, 2
  br i1 %42, label %43, label %205

43:                                               ; preds = %40
  %44 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %45 = and i32 %44, 2147483647
  %46 = icmp eq i32 %45, 0
  %47 = sub nsw i32 0, %44
  %48 = sext i32 %47 to i64
  br i1 %46, label %49, label %205

49:                                               ; preds = %43
  %50 = load i8, i8* %26, align 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %205

52:                                               ; preds = %49
  %53 = load i8, i8* %27, align 1
  %54 = and i8 %53, 2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %205

56:                                               ; preds = %52
  %57 = and i8 %53, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %64

61:                                               ; preds = %56
  %62 = load i16, i16* %25, align 4
  %63 = zext i16 %62 to i64
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %205

67:                                               ; preds = %64
  %68 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %69 = and i32 %68, 2147483647
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 0, i32 %68
  %72 = and i32 %71, 2147483647
  %73 = icmp eq i32 %72, 0
  %74 = sub nsw i32 0, %71
  %75 = sext i32 %74 to i64
  br i1 %73, label %76, label %205

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %2, i64 0, i32 0
  %78 = load i8, i8* %27, align 1
  %79 = and i8 %78, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %86

83:                                               ; preds = %76
  %84 = load i16, i16* %25, align 4
  %85 = zext i16 %84 to i64
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  store i64 %87, i64* %77, align 8
  %88 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %89 = and i32 %88, 2147483647
  %90 = icmp eq i32 %89, 0
  %91 = sub nsw i32 0, %88
  %92 = sext i32 %91 to i64
  br i1 %90, label %93, label %205

93:                                               ; preds = %86
  %94 = load i8, i8* %26, align 2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %205

96:                                               ; preds = %93
  %97 = load i8, i8* %27, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %205

100:                                              ; preds = %96
  %101 = and i8 %97, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %108

105:                                              ; preds = %100
  %106 = load i16, i16* %25, align 4
  %107 = zext i16 %106 to i64
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i64 [ %104, %103 ], [ %107, %105 ]
  %110 = icmp eq i64 %109, 1
  br i1 %110, label %111, label %205

111:                                              ; preds = %108
  %112 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %6) #13
  %113 = and i32 %112, 2147483647
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 0, i32 %112
  %116 = and i32 %115, 2147483647
  %117 = icmp eq i32 %116, 0
  %118 = sub nsw i32 0, %115
  %119 = sext i32 %118 to i64
  br i1 %117, label %120, label %205

120:                                              ; preds = %111
  %121 = load i8, i8* %26, align 2
  %122 = icmp eq i8 %121, -128
  br i1 %122, label %123, label %205

123:                                              ; preds = %120
  %124 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #13
  %125 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 3
  %126 = getelementptr inbounds %struct.CborValue, %struct.CborValue* %7, i64 0, i32 5
  %127 = bitcast %struct.CborValue* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -86, i64 24, i1 false)
  %128 = load i8, i8* %27, align 1
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %139

131:                                              ; preds = %123
  %132 = and i8 %128, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %6) #13
  br label %140

136:                                              ; preds = %131
  %137 = load i16, i16* %25, align 4
  %138 = zext i16 %137 to i64
  br label %140

139:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  br label %205

140:                                              ; preds = %136, %134
  %141 = phi i64 [ %138, %136 ], [ %135, %134 ]
  %142 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %2, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %2, i64 0, i32 1, i32 0, i32 1
  %144 = bitcast i64** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.std::__1::vector.15"* %142 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = ashr exact i64 %148, 3
  %150 = icmp ugt i64 %141, %149
  %151 = inttoptr i64 %147 to i64*
  br i1 %150, label %152, label %154

152:                                              ; preds = %140
  %153 = sub i64 %141, %149
  call void @_ZNSt3__16vectorIN10openscreen4msgs15UrlAvailabilityENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.15"* %142, i64 %153) #13
  br label %158

154:                                              ; preds = %140
  %155 = icmp ult i64 %141, %149
  br i1 %155, label %156, label %158

156:                                              ; preds = %154
  %157 = getelementptr inbounds i64, i64* %151, i64 %141
  store i64* %157, i64** %143, align 8
  br label %158

158:                                              ; preds = %152, %154, %156
  %159 = call i32 @cbor_value_enter_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %160 = and i32 %159, 2147483647
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %196

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %142, i64 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = load i64*, i64** %143, align 8
  %166 = icmp eq i64* %164, %165
  br i1 %166, label %186, label %170

167:                                              ; preds = %180
  %168 = load i64*, i64** %143, align 8
  %169 = icmp eq i64* %185, %168
  br i1 %169, label %186, label %170

170:                                              ; preds = %162, %167
  %171 = phi i64* [ %185, %167 ], [ %164, %162 ]
  %172 = load i8, i8* %126, align 1
  %173 = and i8 %172, 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %170
  %176 = call i64 @_cbor_value_decode_int64_internal(%struct.CborValue* nonnull %7) #13
  br label %180

177:                                              ; preds = %170
  %178 = load i16, i16* %125, align 4
  %179 = zext i16 %178 to i64
  br label %180

180:                                              ; preds = %177, %175
  %181 = phi i64 [ %176, %175 ], [ %179, %177 ]
  store i64 %181, i64* %171, align 8
  %182 = call i32 @cbor_value_advance_fixed(%struct.CborValue* nonnull %7) #13
  %183 = and i32 %182, 2147483647
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds i64, i64* %171, i64 1
  br i1 %184, label %167, label %196

186:                                              ; preds = %167, %162
  %187 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %6, %struct.CborValue* nonnull %7) #13
  %188 = and i32 %187, 2147483647
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  %191 = call i32 @cbor_value_leave_container(%struct.CborValue* nonnull %5, %struct.CborValue* nonnull %6) #13
  %192 = and i32 %191, 2147483647
  %193 = icmp eq i32 %192, 0
  %194 = sub nsw i32 0, %191
  %195 = sext i32 %194 to i64
  br i1 %193, label %200, label %205

196:                                              ; preds = %180, %186, %158
  %197 = phi i32 [ %159, %158 ], [ %187, %186 ], [ %182, %180 ]
  %198 = sub nsw i32 0, %197
  %199 = sext i32 %198 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  br label %205

200:                                              ; preds = %190
  %201 = bitcast i8** %10 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = ptrtoint i8* %0 to i64
  %204 = sub i64 %202, %203
  br label %205

205:                                              ; preds = %23, %196, %93, %108, %96, %49, %64, %52, %139, %120, %40, %190, %111, %86, %67, %43, %200
  %206 = phi i64 [ %204, %200 ], [ %195, %190 ], [ %199, %196 ], [ %119, %111 ], [ %92, %86 ], [ %75, %67 ], [ %48, %43 ], [ -1, %40 ], [ -1, %120 ], [ -2, %139 ], [ -519, %52 ], [ -519, %64 ], [ -519, %49 ], [ -519, %96 ], [ -519, %108 ], [ -519, %93 ], [ -2, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  br label %207

207:                                              ; preds = %19, %3, %205
  %208 = phi i64 [ %206, %205 ], [ %18, %3 ], [ -1, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i64 %208
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs9AgentInfoeqERKS1_(%"struct.openscreen::msgs::AgentInfo"* nocapture readonly, %"struct.openscreen::msgs::AgentInfo"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.openscreen::msgs::AgentInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.openscreen::msgs::AgentInfo"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %104

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.openscreen::msgs::AgentInfo"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.openscreen::msgs::AgentInfo"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %104

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %104

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #13
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %104

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %1, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfo", %"struct.openscreen::msgs::AgentInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = icmp eq i64 %62, %70
  br i1 %71, label %72, label %104

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %76 = select i1 %58, i8* %74, i8* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %80 = select i1 %66, i8* %78, i8* %79
  %81 = icmp eq i64 %62, 0
  br i1 %58, label %88, label %82

82:                                               ; preds = %72
  br i1 %81, label %104, label %83

83:                                               ; preds = %82
  %84 = ptrtoint i8* %74 to i64
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %80, align 1
  %87 = icmp eq i8 %86, %85
  br i1 %87, label %92, label %104

88:                                               ; preds = %72
  br i1 %81, label %104, label %89

89:                                               ; preds = %88
  %90 = tail call i32 @bcmp(i8* %76, i8* %80, i64 %62) #13
  %91 = icmp eq i32 %90, 0
  br label %104

92:                                               ; preds = %83, %99
  %93 = phi i64 [ %96, %99 ], [ %61, %83 ]
  %94 = phi i8* [ %97, %99 ], [ %75, %83 ]
  %95 = phi i8* [ %100, %99 ], [ %80, %83 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %104

104:                                              ; preds = %44, %99, %92, %31, %83, %2, %89, %88, %82, %52, %49
  %105 = phi i1 [ false, %49 ], [ false, %52 ], [ %91, %89 ], [ true, %88 ], [ true, %82 ], [ false, %2 ], [ false, %83 ], [ false, %31 ], [ true, %92 ], [ false, %99 ], [ false, %44 ]
  ret i1 %105
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs9AgentInfoneERKS1_(%"struct.openscreen::msgs::AgentInfo"* nocapture readonly, %"struct.openscreen::msgs::AgentInfo"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK10openscreen4msgs9AgentInfoeqERKS1_(%"struct.openscreen::msgs::AgentInfo"* %0, %"struct.openscreen::msgs::AgentInfo"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs16AgentInfoRequesteqERKS1_(%"struct.openscreen::msgs::AgentInfoRequest"* nocapture readonly, %"struct.openscreen::msgs::AgentInfoRequest"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoRequest", %"struct.openscreen::msgs::AgentInfoRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoRequest", %"struct.openscreen::msgs::AgentInfoRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs16AgentInfoRequestneERKS1_(%"struct.openscreen::msgs::AgentInfoRequest"* nocapture readonly, %"struct.openscreen::msgs::AgentInfoRequest"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoRequest", %"struct.openscreen::msgs::AgentInfoRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoRequest", %"struct.openscreen::msgs::AgentInfoRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs17AgentInfoResponseeqERKS1_(%"struct.openscreen::msgs::AgentInfoResponse"* nocapture readonly, %"struct.openscreen::msgs::AgentInfoResponse"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %1, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZNK10openscreen4msgs9AgentInfoeqERKS1_(%"struct.openscreen::msgs::AgentInfo"* %9, %"struct.openscreen::msgs::AgentInfo"* dereferenceable(48) %10)
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i1 [ false, %2 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs17AgentInfoResponseneERKS1_(%"struct.openscreen::msgs::AgentInfoResponse"* nocapture readonly, %"struct.openscreen::msgs::AgentInfoResponse"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::AgentInfoResponse", %"struct.openscreen::msgs::AgentInfoResponse"* %1, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZNK10openscreen4msgs9AgentInfoeqERKS1_(%"struct.openscreen::msgs::AgentInfo"* %9, %"struct.openscreen::msgs::AgentInfo"* dereferenceable(48) %10) #13
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ true, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs18AgentStatusRequesteqERKS1_(%"struct.openscreen::msgs::AgentStatusRequest"* nocapture readonly, %"struct.openscreen::msgs::AgentStatusRequest"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %1, i64 0, i32 2
  %11 = bitcast %"struct.openscreen::msgs::Status"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"struct.openscreen::msgs::Status"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"struct.openscreen::msgs::Status"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"struct.openscreen::msgs::Status"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %48, label %60

44:                                               ; preds = %28
  br i1 %37, label %60, label %45

45:                                               ; preds = %44
  %46 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %47 = icmp eq i32 %46, 0
  br label %60

48:                                               ; preds = %39, %55
  %49 = phi i64 [ %52, %55 ], [ %17, %39 ]
  %50 = phi i8* [ %53, %55 ], [ %31, %39 ]
  %51 = phi i8* [ %56, %55 ], [ %36, %39 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %60

60:                                               ; preds = %55, %48, %39, %45, %44, %38, %8, %2
  %61 = phi i1 [ false, %2 ], [ false, %8 ], [ %47, %45 ], [ true, %44 ], [ true, %38 ], [ false, %39 ], [ false, %55 ], [ true, %48 ]
  ret i1 %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs6StatuseqERKS1_(%"struct.openscreen::msgs::Status"* nocapture readonly, %"struct.openscreen::msgs::Status"* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.openscreen::msgs::Status"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.openscreen::msgs::Status"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %52

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.openscreen::msgs::Status"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.openscreen::msgs::Status"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %40, label %52

36:                                               ; preds = %20
  br i1 %29, label %52, label %37

37:                                               ; preds = %36
  %38 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #13
  %39 = icmp eq i32 %38, 0
  br label %52

40:                                               ; preds = %31, %47
  %41 = phi i64 [ %44, %47 ], [ %9, %31 ]
  %42 = phi i8* [ %45, %47 ], [ %23, %31 ]
  %43 = phi i8* [ %48, %47 ], [ %28, %31 ]
  %44 = add i64 %41, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %45, align 1
  %50 = load i8, i8* %48, align 1
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %40, label %52

52:                                               ; preds = %40, %47, %31, %2, %30, %36, %37
  %53 = phi i1 [ false, %2 ], [ %39, %37 ], [ true, %36 ], [ true, %30 ], [ false, %31 ], [ false, %47 ], [ true, %40 ]
  ret i1 %53
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs18AgentStatusRequestneERKS1_(%"struct.openscreen::msgs::AgentStatusRequest"* nocapture readonly, %"struct.openscreen::msgs::AgentStatusRequest"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %1, i64 0, i32 2
  %11 = bitcast %"struct.openscreen::msgs::Status"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"struct.openscreen::msgs::Status"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusRequest", %"struct.openscreen::msgs::AgentStatusRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"struct.openscreen::msgs::Status"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"struct.openscreen::msgs::Status"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %48, label %60

44:                                               ; preds = %28
  br i1 %37, label %60, label %45

45:                                               ; preds = %44
  %46 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %47 = icmp ne i32 %46, 0
  br label %60

48:                                               ; preds = %39, %55
  %49 = phi i64 [ %52, %55 ], [ %17, %39 ]
  %50 = phi i8* [ %53, %55 ], [ %31, %39 ]
  %51 = phi i8* [ %56, %55 ], [ %36, %39 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %55, %2, %8, %38, %39, %44, %45
  %61 = phi i1 [ true, %2 ], [ true, %8 ], [ %47, %45 ], [ false, %44 ], [ false, %38 ], [ true, %39 ], [ false, %48 ], [ true, %55 ]
  ret i1 %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs19AgentStatusResponseeqERKS1_(%"struct.openscreen::msgs::AgentStatusResponse"* nocapture readonly, %"struct.openscreen::msgs::AgentStatusResponse"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %1, i64 0, i32 2
  %11 = bitcast %"struct.openscreen::msgs::Status"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"struct.openscreen::msgs::Status"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"struct.openscreen::msgs::Status"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"struct.openscreen::msgs::Status"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %48, label %60

44:                                               ; preds = %28
  br i1 %37, label %60, label %45

45:                                               ; preds = %44
  %46 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %47 = icmp eq i32 %46, 0
  br label %60

48:                                               ; preds = %39, %55
  %49 = phi i64 [ %52, %55 ], [ %17, %39 ]
  %50 = phi i8* [ %53, %55 ], [ %31, %39 ]
  %51 = phi i8* [ %56, %55 ], [ %36, %39 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %60

60:                                               ; preds = %55, %48, %39, %45, %44, %38, %8, %2
  %61 = phi i1 [ false, %2 ], [ false, %8 ], [ %47, %45 ], [ true, %44 ], [ true, %38 ], [ false, %39 ], [ false, %55 ], [ true, %48 ]
  ret i1 %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs19AgentStatusResponseneERKS1_(%"struct.openscreen::msgs::AgentStatusResponse"* nocapture readonly, %"struct.openscreen::msgs::AgentStatusResponse"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %1, i64 0, i32 2
  %11 = bitcast %"struct.openscreen::msgs::Status"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"struct.openscreen::msgs::Status"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AgentStatusResponse", %"struct.openscreen::msgs::AgentStatusResponse"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"struct.openscreen::msgs::Status"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"struct.openscreen::msgs::Status"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %48, label %60

44:                                               ; preds = %28
  br i1 %37, label %60, label %45

45:                                               ; preds = %44
  %46 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %47 = icmp ne i32 %46, 0
  br label %60

48:                                               ; preds = %39, %55
  %49 = phi i64 [ %52, %55 ], [ %17, %39 ]
  %50 = phi i8* [ %53, %55 ], [ %31, %39 ]
  %51 = phi i8* [ %56, %55 ], [ %36, %39 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %55, %2, %8, %38, %39, %44, %45
  %61 = phi i1 [ true, %2 ], [ true, %8 ], [ %47, %45 ], [ false, %44 ], [ false, %38 ], [ true, %39 ], [ false, %48 ], [ true, %55 ]
  ret i1 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs21AuthenticationRequesteqERKS1_(%"struct.openscreen::msgs::AuthenticationRequest"* nocapture readonly, %"struct.openscreen::msgs::AuthenticationRequest"* nocapture readonly dereferenceable(48)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %52

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to i8*
  %31 = inttoptr i64 %19 to i8*
  br i1 %29, label %32, label %52

32:                                               ; preds = %14
  %33 = icmp eq i8* %30, %31
  br i1 %33, label %46, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to i8*
  br label %36

36:                                               ; preds = %34, %42
  %37 = phi i8* [ %44, %42 ], [ %35, %34 ]
  %38 = phi i8* [ %43, %42 ], [ %30, %34 ]
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %37, align 1
  %41 = icmp eq i8 %39, %40
  br i1 %41, label %42, label %52

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %38, i64 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = icmp eq i8* %43, %31
  br i1 %45, label %46, label %36

46:                                               ; preds = %42, %32
  %47 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %48, %50
  br label %52

52:                                               ; preds = %36, %14, %46, %8, %2
  %53 = phi i1 [ false, %8 ], [ false, %2 ], [ %51, %46 ], [ false, %14 ], [ false, %36 ]
  ret i1 %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs21AuthenticationRequestneERKS1_(%"struct.openscreen::msgs::AuthenticationRequest"* nocapture readonly, %"struct.openscreen::msgs::AuthenticationRequest"* nocapture readonly dereferenceable(48)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %52

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to i8*
  %31 = inttoptr i64 %19 to i8*
  br i1 %29, label %32, label %52

32:                                               ; preds = %14
  %33 = icmp eq i8* %30, %31
  br i1 %33, label %46, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to i8*
  br label %36

36:                                               ; preds = %42, %34
  %37 = phi i8* [ %44, %42 ], [ %35, %34 ]
  %38 = phi i8* [ %43, %42 ], [ %30, %34 ]
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %37, align 1
  %41 = icmp eq i8 %39, %40
  br i1 %41, label %42, label %52

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %38, i64 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = icmp eq i8* %43, %31
  br i1 %45, label %46, label %36

46:                                               ; preds = %42, %32
  %47 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %0, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationRequest", %"struct.openscreen::msgs::AuthenticationRequest"* %1, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %48, %50
  br label %52

52:                                               ; preds = %36, %2, %8, %14, %46
  %53 = phi i1 [ true, %8 ], [ true, %2 ], [ %51, %46 ], [ true, %14 ], [ true, %36 ]
  ret i1 %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs22AuthenticationResponseeqERKS1_(%"struct.openscreen::msgs::AuthenticationResponse"* nocapture readonly, %"struct.openscreen::msgs::AuthenticationResponse"* nocapture readonly dereferenceable(40)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %46

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %46

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to i8*
  %31 = inttoptr i64 %19 to i8*
  br i1 %29, label %32, label %46

32:                                               ; preds = %14
  %33 = icmp eq i8* %30, %31
  br i1 %33, label %46, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to i8*
  br label %36

36:                                               ; preds = %34, %42
  %37 = phi i8* [ %44, %42 ], [ %35, %34 ]
  %38 = phi i8* [ %43, %42 ], [ %30, %34 ]
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %37, align 1
  %41 = icmp eq i8 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %38, i64 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = icmp eq i8* %43, %31
  br i1 %45, label %46, label %36

46:                                               ; preds = %42, %36, %32, %14, %8, %2
  %47 = phi i1 [ false, %8 ], [ false, %2 ], [ false, %14 ], [ true, %32 ], [ false, %36 ], [ true, %42 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs22AuthenticationResponseneERKS1_(%"struct.openscreen::msgs::AuthenticationResponse"* nocapture readonly, %"struct.openscreen::msgs::AuthenticationResponse"* nocapture readonly dereferenceable(40)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %46

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %46

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResponse", %"struct.openscreen::msgs::AuthenticationResponse"* %1, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to i8*
  %31 = inttoptr i64 %19 to i8*
  br i1 %29, label %32, label %46

32:                                               ; preds = %14
  %33 = icmp eq i8* %30, %31
  br i1 %33, label %46, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to i8*
  br label %36

36:                                               ; preds = %42, %34
  %37 = phi i8* [ %44, %42 ], [ %35, %34 ]
  %38 = phi i8* [ %43, %42 ], [ %30, %34 ]
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %37, align 1
  %41 = icmp eq i8 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %38, i64 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = icmp eq i8* %43, %31
  br i1 %45, label %46, label %36

46:                                               ; preds = %36, %42, %2, %8, %14, %32
  %47 = phi i1 [ true, %8 ], [ true, %2 ], [ true, %14 ], [ false, %32 ], [ false, %42 ], [ true, %36 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs20AuthenticationResulteqERKS1_(%"struct.openscreen::msgs::AuthenticationResult"* nocapture readonly, %"struct.openscreen::msgs::AuthenticationResult"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResult", %"struct.openscreen::msgs::AuthenticationResult"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResult", %"struct.openscreen::msgs::AuthenticationResult"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs20AuthenticationResultneERKS1_(%"struct.openscreen::msgs::AuthenticationResult"* nocapture readonly, %"struct.openscreen::msgs::AuthenticationResult"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResult", %"struct.openscreen::msgs::AuthenticationResult"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::AuthenticationResult", %"struct.openscreen::msgs::AuthenticationResult"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs10HttpHeadereqERKS1_(%"struct.openscreen::msgs::HttpHeader"* nocapture readonly, %"struct.openscreen::msgs::HttpHeader"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.openscreen::msgs::HttpHeader"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.openscreen::msgs::HttpHeader"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %104

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.openscreen::msgs::HttpHeader"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.openscreen::msgs::HttpHeader"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %104

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %104

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #13
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %104

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %0, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %1, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = icmp eq i64 %62, %70
  br i1 %71, label %72, label %104

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %76 = select i1 %58, i8* %74, i8* %75
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %80 = select i1 %66, i8* %78, i8* %79
  %81 = icmp eq i64 %62, 0
  br i1 %58, label %88, label %82

82:                                               ; preds = %72
  br i1 %81, label %104, label %83

83:                                               ; preds = %82
  %84 = ptrtoint i8* %74 to i64
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %80, align 1
  %87 = icmp eq i8 %86, %85
  br i1 %87, label %92, label %104

88:                                               ; preds = %72
  br i1 %81, label %104, label %89

89:                                               ; preds = %88
  %90 = tail call i32 @bcmp(i8* %76, i8* %80, i64 %62) #13
  %91 = icmp eq i32 %90, 0
  br label %104

92:                                               ; preds = %83, %99
  %93 = phi i64 [ %96, %99 ], [ %61, %83 ]
  %94 = phi i8* [ %97, %99 ], [ %75, %83 ]
  %95 = phi i8* [ %100, %99 ], [ %80, %83 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %104

104:                                              ; preds = %44, %99, %92, %31, %83, %2, %89, %88, %82, %52, %49
  %105 = phi i1 [ false, %49 ], [ false, %52 ], [ %91, %89 ], [ true, %88 ], [ true, %82 ], [ false, %2 ], [ false, %83 ], [ false, %31 ], [ true, %92 ], [ false, %99 ], [ false, %44 ]
  ret i1 %105
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs10HttpHeaderneERKS1_(%"struct.openscreen::msgs::HttpHeader"* nocapture readonly, %"struct.openscreen::msgs::HttpHeader"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK10openscreen4msgs10HttpHeadereqERKS1_(%"struct.openscreen::msgs::HttpHeader"* %0, %"struct.openscreen::msgs::HttpHeader"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs32PresentationConnectionCloseEventeqERKS1_(%"struct.openscreen::msgs::PresentationConnectionCloseEvent"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %66

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 3
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %66

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %38 = select i1 %20, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %42 = select i1 %28, i8* %40, i8* %41
  %43 = icmp eq i64 %24, 0
  br i1 %20, label %50, label %44

44:                                               ; preds = %34
  br i1 %43, label %66, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %36 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %42, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %54, label %66

50:                                               ; preds = %34
  br i1 %43, label %66, label %51

51:                                               ; preds = %50
  %52 = tail call i32 @bcmp(i8* %38, i8* %42, i64 %24) #13
  %53 = icmp eq i32 %52, 0
  br label %66

54:                                               ; preds = %45, %61
  %55 = phi i64 [ %58, %61 ], [ %23, %45 ]
  %56 = phi i8* [ %59, %61 ], [ %37, %45 ]
  %57 = phi i8* [ %62, %61 ], [ %42, %45 ]
  %58 = add i64 %55, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %57, i64 1
  %63 = load i8, i8* %59, align 1
  %64 = load i8, i8* %62, align 1
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %54, label %66

66:                                               ; preds = %61, %54, %45, %51, %50, %44, %14, %8, %2
  %67 = phi i1 [ false, %8 ], [ false, %2 ], [ false, %14 ], [ %53, %51 ], [ true, %50 ], [ true, %44 ], [ false, %45 ], [ true, %54 ], [ false, %61 ]
  ret i1 %67
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs32PresentationConnectionCloseEventneERKS1_(%"struct.openscreen::msgs::PresentationConnectionCloseEvent"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %66

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 3
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseEvent", %"struct.openscreen::msgs::PresentationConnectionCloseEvent"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %66

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %38 = select i1 %20, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %42 = select i1 %28, i8* %40, i8* %41
  %43 = icmp eq i64 %24, 0
  br i1 %20, label %50, label %44

44:                                               ; preds = %34
  br i1 %43, label %66, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %36 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %42, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %54, label %66

50:                                               ; preds = %34
  br i1 %43, label %66, label %51

51:                                               ; preds = %50
  %52 = tail call i32 @bcmp(i8* %38, i8* %42, i64 %24) #13
  %53 = icmp ne i32 %52, 0
  br label %66

54:                                               ; preds = %45, %61
  %55 = phi i64 [ %58, %61 ], [ %23, %45 ]
  %56 = phi i8* [ %59, %61 ], [ %37, %45 ]
  %57 = phi i8* [ %62, %61 ], [ %42, %45 ]
  %58 = add i64 %55, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %57, i64 1
  %63 = load i8, i8* %59, align 1
  %64 = load i8, i8* %62, align 1
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %54, label %66

66:                                               ; preds = %54, %61, %45, %2, %8, %14, %44, %50, %51
  %67 = phi i1 [ true, %8 ], [ true, %2 ], [ true, %14 ], [ %53, %51 ], [ false, %50 ], [ false, %44 ], [ true, %45 ], [ false, %54 ], [ true, %61 ]
  ret i1 %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs34PresentationConnectionCloseRequesteqERKS1_(%"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs34PresentationConnectionCloseRequestneERKS1_(%"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseRequest", %"struct.openscreen::msgs::PresentationConnectionCloseRequest"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs35PresentationConnectionCloseResponseeqERKS1_(%"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs35PresentationConnectionCloseResponseneERKS1_(%"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionCloseResponse", %"struct.openscreen::msgs::PresentationConnectionCloseResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessageeqERKS1_(%"struct.openscreen::msgs::PresentationConnectionMessage"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionMessage"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %1, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessage7MessageeqERKS2_(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %9, %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* dereferenceable(32) %10)
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i1 [ false, %2 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessage7MessageeqERKS2_(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %95

8:                                                ; preds = %2
  switch i32 %4, label %95 [
    i32 0, label %9
    i32 1, label %41
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %1, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %11 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = icmp eq i64 %17, %23
  %25 = inttoptr i64 %16 to i8*
  %26 = inttoptr i64 %14 to i8*
  br i1 %24, label %27, label %95

27:                                               ; preds = %9
  %28 = icmp eq i8* %25, %26
  br i1 %28, label %95, label %29

29:                                               ; preds = %27
  %30 = inttoptr i64 %22 to i8*
  br label %31

31:                                               ; preds = %29, %37
  %32 = phi i8* [ %39, %37 ], [ %30, %29 ]
  %33 = phi i8* [ %38, %37 ], [ %25, %29 ]
  %34 = load i8, i8* %33, align 1
  %35 = load i8, i8* %32, align 1
  %36 = icmp eq i8 %34, %35
  br i1 %36, label %37, label %95

37:                                               ; preds = %31
  %38 = getelementptr inbounds i8, i8* %33, i64 1
  %39 = getelementptr inbounds i8, i8* %32, i64 1
  %40 = icmp eq i8* %38, %26
  br i1 %40, label %95, label %31

41:                                               ; preds = %8
  %42 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage::Message", %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %1, i64 0, i32 1
  %50 = bitcast %union.anon.7* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = zext i8 %52 to i64
  %55 = select i1 %53, i64 %44, i64 %54
  %56 = bitcast %union.anon.7* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = zext i8 %58 to i64
  %61 = select i1 %59, i64 %47, i64 %60
  %62 = icmp eq i64 %55, %61
  br i1 %62, label %63, label %95

63:                                               ; preds = %41
  %64 = getelementptr inbounds %union.anon.7, %union.anon.7* %48, i64 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast %union.anon.7* %48 to i8*
  %67 = select i1 %53, i8* %65, i8* %66
  %68 = getelementptr inbounds %union.anon.7, %union.anon.7* %49, i64 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %union.anon.7* %49 to i8*
  %71 = select i1 %59, i8* %69, i8* %70
  %72 = icmp eq i64 %55, 0
  br i1 %53, label %79, label %73

73:                                               ; preds = %63
  br i1 %72, label %95, label %74

74:                                               ; preds = %73
  %75 = ptrtoint i8* %65 to i64
  %76 = trunc i64 %75 to i8
  %77 = load i8, i8* %71, align 1
  %78 = icmp eq i8 %77, %76
  br i1 %78, label %83, label %95

79:                                               ; preds = %63
  br i1 %72, label %95, label %80

80:                                               ; preds = %79
  %81 = tail call i32 @bcmp(i8* %67, i8* %71, i64 %55) #13
  %82 = icmp eq i32 %81, 0
  br label %95

83:                                               ; preds = %74, %90
  %84 = phi i64 [ %87, %90 ], [ %54, %74 ]
  %85 = phi i8* [ %88, %90 ], [ %66, %74 ]
  %86 = phi i8* [ %91, %90 ], [ %71, %74 ]
  %87 = add i64 %84, -1
  %88 = getelementptr inbounds i8, i8* %85, i64 1
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds i8, i8* %86, i64 1
  %92 = load i8, i8* %88, align 1
  %93 = load i8, i8* %91, align 1
  %94 = icmp eq i8 %92, %93
  br i1 %94, label %83, label %95

95:                                               ; preds = %90, %83, %31, %37, %74, %8, %27, %80, %79, %73, %41, %9, %2
  %96 = phi i1 [ false, %2 ], [ false, %9 ], [ false, %41 ], [ %82, %80 ], [ true, %79 ], [ true, %73 ], [ true, %27 ], [ true, %8 ], [ false, %74 ], [ false, %31 ], [ true, %37 ], [ true, %83 ], [ false, %90 ]
  ret i1 %96
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessageneERKS1_(%"struct.openscreen::msgs::PresentationConnectionMessage"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionMessage"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionMessage", %"struct.openscreen::msgs::PresentationConnectionMessage"* %1, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessage7MessageeqERKS2_(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %9, %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* dereferenceable(32) %10) #13
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i1 [ true, %2 ], [ %12, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessage7MessageneERKS2_(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK10openscreen4msgs29PresentationConnectionMessage7MessageeqERKS2_(%"struct.openscreen::msgs::PresentationConnectionMessage::Message"* %0, %"struct.openscreen::msgs::PresentationConnectionMessage::Message"* dereferenceable(32) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs33PresentationConnectionOpenRequesteqERKS1_(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %112

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %112

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %112

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %112

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %112

60:                                               ; preds = %45, %38, %44, %57
  %61 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 2
  %62 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %1, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenRequest", %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = icmp eq i64 %70, %78
  br i1 %79, label %80, label %112

80:                                               ; preds = %60
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %84 = select i1 %66, i8* %82, i8* %83
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %88 = select i1 %74, i8* %86, i8* %87
  %89 = icmp eq i64 %70, 0
  br i1 %66, label %96, label %90

90:                                               ; preds = %80
  br i1 %89, label %112, label %91

91:                                               ; preds = %90
  %92 = ptrtoint i8* %82 to i64
  %93 = trunc i64 %92 to i8
  %94 = load i8, i8* %88, align 1
  %95 = icmp eq i8 %94, %93
  br i1 %95, label %100, label %112

96:                                               ; preds = %80
  br i1 %89, label %112, label %97

97:                                               ; preds = %96
  %98 = tail call i32 @bcmp(i8* %84, i8* %88, i64 %70) #13
  %99 = icmp eq i32 %98, 0
  br label %112

100:                                              ; preds = %91, %107
  %101 = phi i64 [ %104, %107 ], [ %69, %91 ]
  %102 = phi i8* [ %105, %107 ], [ %83, %91 ]
  %103 = phi i8* [ %108, %107 ], [ %88, %91 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %112

112:                                              ; preds = %52, %107, %100, %39, %91, %8, %97, %96, %90, %60, %57, %2
  %113 = phi i1 [ false, %57 ], [ false, %2 ], [ false, %60 ], [ %99, %97 ], [ true, %96 ], [ true, %90 ], [ false, %8 ], [ false, %91 ], [ false, %39 ], [ true, %100 ], [ false, %107 ], [ false, %52 ]
  ret i1 %113
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs33PresentationConnectionOpenRequestneERKS1_(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK10openscreen4msgs33PresentationConnectionOpenRequesteqERKS1_(%"struct.openscreen::msgs::PresentationConnectionOpenRequest"* %0, %"struct.openscreen::msgs::PresentationConnectionOpenRequest"* dereferenceable(56) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs34PresentationConnectionOpenResponseeqERKS1_(%"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs34PresentationConnectionOpenResponseneERKS1_(%"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationConnectionOpenResponse", %"struct.openscreen::msgs::PresentationConnectionOpenResponse"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp ne i64 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ true, %8 ], [ true, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs24PresentationStartRequesteqERKS1_(%"struct.openscreen::msgs::PresentationStartRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationStartRequest"* nocapture readonly dereferenceable(80)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %142

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %142

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %142

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %142

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %142

60:                                               ; preds = %45, %38, %44, %57
  %61 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 2
  %62 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %65 to i64
  %70 = select i1 %66, i64 %68, i64 %69
  %71 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = icmp eq i64 %70, %78
  br i1 %79, label %80, label %142

80:                                               ; preds = %60
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %84 = select i1 %66, i8* %82, i8* %83
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %88 = select i1 %74, i8* %86, i8* %87
  %89 = icmp eq i64 %70, 0
  br i1 %66, label %96, label %90

90:                                               ; preds = %80
  br i1 %89, label %112, label %91

91:                                               ; preds = %90
  %92 = ptrtoint i8* %82 to i64
  %93 = trunc i64 %92 to i8
  %94 = load i8, i8* %88, align 1
  %95 = icmp eq i8 %94, %93
  br i1 %95, label %97, label %142

96:                                               ; preds = %80
  br i1 %89, label %112, label %109

97:                                               ; preds = %91, %104
  %98 = phi i64 [ %101, %104 ], [ %69, %91 ]
  %99 = phi i8* [ %102, %104 ], [ %83, %91 ]
  %100 = phi i8* [ %105, %104 ], [ %88, %91 ]
  %101 = add i64 %98, -1
  %102 = getelementptr inbounds i8, i8* %99, i64 1
  %103 = icmp eq i64 %101, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds i8, i8* %100, i64 1
  %106 = load i8, i8* %102, align 1
  %107 = load i8, i8* %105, align 1
  %108 = icmp eq i8 %106, %107
  br i1 %108, label %97, label %142

109:                                              ; preds = %96
  %110 = tail call i32 @bcmp(i8* %84, i8* %88, i64 %70) #13
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %142

112:                                              ; preds = %97, %90, %96, %109
  %113 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 3
  %114 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 3
  %115 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %0, i64 0, i32 3, i32 0, i32 1
  %116 = bitcast %"struct.openscreen::msgs::HttpHeader"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::vector.8"* %113 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartRequest", %"struct.openscreen::msgs::PresentationStartRequest"* %1, i64 0, i32 3, i32 0, i32 1
  %122 = bitcast %"struct.openscreen::msgs::HttpHeader"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector.8"* %114 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = icmp eq i64 %120, %126
  %128 = inttoptr i64 %119 to %"struct.openscreen::msgs::HttpHeader"*
  %129 = inttoptr i64 %117 to %"struct.openscreen::msgs::HttpHeader"*
  br i1 %127, label %130, label %142

130:                                              ; preds = %112
  %131 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %128, %129
  br i1 %131, label %142, label %132

132:                                              ; preds = %130
  %133 = inttoptr i64 %125 to %"struct.openscreen::msgs::HttpHeader"*
  br label %134

134:                                              ; preds = %132, %138
  %135 = phi %"struct.openscreen::msgs::HttpHeader"* [ %140, %138 ], [ %133, %132 ]
  %136 = phi %"struct.openscreen::msgs::HttpHeader"* [ %139, %138 ], [ %128, %132 ]
  %137 = tail call zeroext i1 @_ZNK10openscreen4msgs10HttpHeadereqERKS1_(%"struct.openscreen::msgs::HttpHeader"* %136, %"struct.openscreen::msgs::HttpHeader"* dereferenceable(48) %135) #13
  br i1 %137, label %138, label %142

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %136, i64 1
  %140 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %135, i64 1
  %141 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %139, %129
  br i1 %141, label %142, label %134

142:                                              ; preds = %52, %104, %138, %134, %39, %91, %60, %8, %130, %112, %109, %57, %2
  %143 = phi i1 [ false, %109 ], [ false, %57 ], [ false, %2 ], [ false, %112 ], [ true, %130 ], [ false, %8 ], [ false, %60 ], [ false, %91 ], [ false, %39 ], [ false, %134 ], [ true, %138 ], [ false, %104 ], [ false, %52 ]
  ret i1 %143
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs24PresentationStartRequestneERKS1_(%"struct.openscreen::msgs::PresentationStartRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationStartRequest"* nocapture readonly dereferenceable(80)) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK10openscreen4msgs24PresentationStartRequesteqERKS1_(%"struct.openscreen::msgs::PresentationStartRequest"* %0, %"struct.openscreen::msgs::PresentationStartRequest"* dereferenceable(80) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs25PresentationStartResponseeqERKS1_(%"struct.openscreen::msgs::PresentationStartResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationStartResponse"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs25PresentationStartResponseneERKS1_(%"struct.openscreen::msgs::PresentationStartResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationStartResponse"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationStartResponse", %"struct.openscreen::msgs::PresentationStartResponse"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp ne i64 %16, %18
  br label %20

20:                                               ; preds = %2, %8, %14
  %21 = phi i1 [ true, %8 ], [ true, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs28PresentationTerminationEventeqERKS1_(%"struct.openscreen::msgs::PresentationTerminationEvent"* nocapture readonly, %"struct.openscreen::msgs::PresentationTerminationEvent"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %58

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %58

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #13
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %37, %30, %36, %49
  %53 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %1, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %54, %56
  br label %58

58:                                               ; preds = %44, %31, %2, %52, %49
  %59 = phi i1 [ false, %49 ], [ %57, %52 ], [ false, %2 ], [ false, %31 ], [ false, %44 ]
  ret i1 %59
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs28PresentationTerminationEventneERKS1_(%"struct.openscreen::msgs::PresentationTerminationEvent"* nocapture readonly, %"struct.openscreen::msgs::PresentationTerminationEvent"* nocapture readonly dereferenceable(32)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.openscreen::msgs::PresentationTerminationEvent"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %58

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %58

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #13
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %37, %49, %36, %30
  %53 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %0, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationEvent", %"struct.openscreen::msgs::PresentationTerminationEvent"* %1, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp ne i64 %54, %56
  br label %58

58:                                               ; preds = %44, %31, %2, %49, %52
  %59 = phi i1 [ true, %49 ], [ %57, %52 ], [ true, %2 ], [ true, %31 ], [ true, %44 ]
  ret i1 %59
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs30PresentationTerminationRequesteqERKS1_(%"struct.openscreen::msgs::PresentationTerminationRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationTerminationRequest"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %66

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %66

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %66

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %45, %38, %44, %57
  %61 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %62, %64
  br label %66

66:                                               ; preds = %52, %39, %8, %60, %57, %2
  %67 = phi i1 [ false, %57 ], [ false, %2 ], [ %65, %60 ], [ false, %8 ], [ false, %39 ], [ false, %52 ]
  ret i1 %67
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs30PresentationTerminationRequestneERKS1_(%"struct.openscreen::msgs::PresentationTerminationRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationTerminationRequest"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %66

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %66

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %66

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %45, %57, %44, %38
  %61 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %0, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationRequest", %"struct.openscreen::msgs::PresentationTerminationRequest"* %1, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %62, %64
  br label %66

66:                                               ; preds = %52, %39, %2, %8, %57, %60
  %67 = phi i1 [ true, %57 ], [ true, %2 ], [ %65, %60 ], [ true, %8 ], [ true, %39 ], [ true, %52 ]
  ret i1 %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs31PresentationTerminationResponseeqERKS1_(%"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs31PresentationTerminationResponseneERKS1_(%"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationTerminationResponse"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationTerminationResponse", %"struct.openscreen::msgs::PresentationTerminationResponse"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs32PresentationUrlAvailabilityEventeqERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* nocapture readonly, %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.15"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i64** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.15"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to i64*
  %25 = inttoptr i64 %13 to i64*
  br i1 %23, label %26, label %40

26:                                               ; preds = %8
  %27 = icmp eq i64* %24, %25
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to i64*
  br label %30

30:                                               ; preds = %28, %36
  %31 = phi i64* [ %38, %36 ], [ %29, %28 ]
  %32 = phi i64* [ %37, %36 ], [ %24, %28 ]
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %31, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds i64, i64* %32, i64 1
  %38 = getelementptr inbounds i64, i64* %31, i64 1
  %39 = icmp eq i64* %37, %25
  br i1 %39, label %40, label %30

40:                                               ; preds = %36, %30, %26, %8, %2
  %41 = phi i1 [ false, %2 ], [ false, %8 ], [ true, %26 ], [ false, %30 ], [ true, %36 ]
  ret i1 %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs32PresentationUrlAvailabilityEventneERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* nocapture readonly, %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.15"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent", %"struct.openscreen::msgs::PresentationUrlAvailabilityEvent"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i64** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.15"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to i64*
  %25 = inttoptr i64 %13 to i64*
  br i1 %23, label %26, label %40

26:                                               ; preds = %8
  %27 = icmp eq i64* %24, %25
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to i64*
  br label %30

30:                                               ; preds = %36, %28
  %31 = phi i64* [ %38, %36 ], [ %29, %28 ]
  %32 = phi i64* [ %37, %36 ], [ %24, %28 ]
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %31, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds i64, i64* %32, i64 1
  %38 = getelementptr inbounds i64, i64* %31, i64 1
  %39 = icmp eq i64* %37, %25
  br i1 %39, label %40, label %30

40:                                               ; preds = %30, %36, %2, %8, %26
  %41 = phi i1 [ true, %2 ], [ true, %8 ], [ false, %26 ], [ false, %36 ], [ true, %30 ]
  ret i1 %41
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs34PresentationUrlAvailabilityRequesteqERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %98

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.23"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.23"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to %"class.std::__1::basic_string"*
  %25 = inttoptr i64 %13 to %"class.std::__1::basic_string"*
  br i1 %23, label %26, label %98

26:                                               ; preds = %8
  %27 = icmp eq %"class.std::__1::basic_string"* %24, %25
  br i1 %27, label %86, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to %"class.std::__1::basic_string"*
  br label %30

30:                                               ; preds = %28, %82
  %31 = phi %"class.std::__1::basic_string"* [ %84, %82 ], [ %29, %28 ]
  %32 = phi %"class.std::__1::basic_string"* [ %83, %82 ], [ %24, %28 ]
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = icmp eq i64 %40, %48
  br i1 %49, label %50, label %98

50:                                               ; preds = %30
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %54 = select i1 %36, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %58 = select i1 %44, i8* %56, i8* %57
  %59 = icmp eq i64 %40, 0
  br i1 %36, label %66, label %60

60:                                               ; preds = %50
  br i1 %59, label %82, label %61

61:                                               ; preds = %60
  %62 = ptrtoint i8* %52 to i64
  %63 = trunc i64 %62 to i8
  %64 = load i8, i8* %58, align 1
  %65 = icmp eq i8 %64, %63
  br i1 %65, label %67, label %98

66:                                               ; preds = %50
  br i1 %59, label %82, label %79

67:                                               ; preds = %61, %74
  %68 = phi i64 [ %71, %74 ], [ %39, %61 ]
  %69 = phi i8* [ %72, %74 ], [ %53, %61 ]
  %70 = phi i8* [ %75, %74 ], [ %58, %61 ]
  %71 = add i64 %68, -1
  %72 = getelementptr inbounds i8, i8* %69, i64 1
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds i8, i8* %70, i64 1
  %76 = load i8, i8* %72, align 1
  %77 = load i8, i8* %75, align 1
  %78 = icmp eq i8 %76, %77
  br i1 %78, label %67, label %98

79:                                               ; preds = %66
  %80 = tail call i32 @bcmp(i8* %54, i8* %58, i64 %40) #13
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %98

82:                                               ; preds = %67, %79, %66, %60
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %85 = icmp eq %"class.std::__1::basic_string"* %83, %25
  br i1 %85, label %86, label %30

86:                                               ; preds = %82, %26
  %87 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %1, i64 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %88, %90
  br i1 %91, label %92, label %98

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest", %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %1, i64 0, i32 3
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %94, %96
  br label %98

98:                                               ; preds = %30, %79, %61, %74, %8, %92, %86, %2
  %99 = phi i1 [ false, %86 ], [ false, %2 ], [ %97, %92 ], [ false, %8 ], [ false, %74 ], [ false, %61 ], [ false, %79 ], [ false, %30 ]
  ret i1 %99
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs34PresentationUrlAvailabilityRequestneERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* nocapture readonly, %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* nocapture readonly dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %3 = tail call zeroext i1 @_ZNK10openscreen4msgs34PresentationUrlAvailabilityRequesteqERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* %0, %"struct.openscreen::msgs::PresentationUrlAvailabilityRequest"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs35PresentationUrlAvailabilityResponseeqERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.15"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i64** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.15"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to i64*
  %25 = inttoptr i64 %13 to i64*
  br i1 %23, label %26, label %40

26:                                               ; preds = %8
  %27 = icmp eq i64* %24, %25
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to i64*
  br label %30

30:                                               ; preds = %28, %36
  %31 = phi i64* [ %38, %36 ], [ %29, %28 ]
  %32 = phi i64* [ %37, %36 ], [ %24, %28 ]
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %31, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds i64, i64* %32, i64 1
  %38 = getelementptr inbounds i64, i64* %31, i64 1
  %39 = icmp eq i64* %37, %25
  br i1 %39, label %40, label %30

40:                                               ; preds = %36, %30, %26, %8, %2
  %41 = phi i1 [ false, %2 ], [ false, %8 ], [ true, %26 ], [ false, %30 ], [ true, %36 ]
  ret i1 %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs35PresentationUrlAvailabilityResponseneERKS1_(%"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* nocapture readonly, %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %40

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.15"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse", %"struct.openscreen::msgs::PresentationUrlAvailabilityResponse"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i64** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.15"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to i64*
  %25 = inttoptr i64 %13 to i64*
  br i1 %23, label %26, label %40

26:                                               ; preds = %8
  %27 = icmp eq i64* %24, %25
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to i64*
  br label %30

30:                                               ; preds = %36, %28
  %31 = phi i64* [ %38, %36 ], [ %29, %28 ]
  %32 = phi i64* [ %37, %36 ], [ %24, %28 ]
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %31, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds i64, i64* %32, i64 1
  %38 = getelementptr inbounds i64, i64* %31, i64 1
  %39 = icmp eq i64* %37, %25
  br i1 %39, label %40, label %30

40:                                               ; preds = %30, %36, %2, %8, %26
  %41 = phi i1 [ true, %2 ], [ true, %8 ], [ false, %26 ], [ false, %36 ], [ true, %30 ]
  ret i1 %41
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10openscreen4msgs6StatusneERKS1_(%"struct.openscreen::msgs::Status"* nocapture readonly, %"struct.openscreen::msgs::Status"* nocapture readonly dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.openscreen::msgs::Status"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.openscreen::msgs::Status"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %52

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"struct.openscreen::msgs::Status"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"struct.openscreen::msgs::Status", %"struct.openscreen::msgs::Status"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"struct.openscreen::msgs::Status"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %40, label %52

36:                                               ; preds = %20
  br i1 %29, label %52, label %37

37:                                               ; preds = %36
  %38 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #13
  %39 = icmp ne i32 %38, 0
  br label %52

40:                                               ; preds = %31, %47
  %41 = phi i64 [ %44, %47 ], [ %9, %31 ]
  %42 = phi i8* [ %45, %47 ], [ %23, %31 ]
  %43 = phi i8* [ %48, %47 ], [ %28, %31 ]
  %44 = add i64 %41, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 1
  %49 = load i8, i8* %45, align 1
  %50 = load i8, i8* %48, align 1
  %51 = icmp eq i8 %49, %50
  br i1 %51, label %40, label %52

52:                                               ; preds = %40, %47, %31, %2, %30, %36, %37
  %53 = phi i1 [ true, %2 ], [ %39, %37 ], [ false, %36 ], [ false, %30 ], [ true, %31 ], [ false, %40 ], [ true, %47 ]
  ret i1 %53
}

declare i64 @_cbor_value_decode_int64_internal(%struct.CborValue*) local_unnamed_addr #2

declare i32 @_cbor_value_copy_string(%struct.CborValue*, i8*, i64*, %struct.CborValue*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #13
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #14
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #15
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #13
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #13
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #15
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10openscreen4msgs10HttpHeaderENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.openscreen::msgs::HttpHeader"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.openscreen::msgs::HttpHeader"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.openscreen::msgs::HttpHeader"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 48
  %25 = add i64 %23, 48
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #13
  %27 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %123

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 48
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 384307168202282325
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #14
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 48
  %42 = icmp ult i64 %41, 192153584101141162
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 384307168202282325, %39 ]
  %50 = mul i64 %49, 48
  %51 = tail call i8* @_Znwm(i64 %50) #15
  %52 = bitcast i8* %51 to %"struct.openscreen::msgs::HttpHeader"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.openscreen::msgs::HttpHeader"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %55, i64 %34
  %57 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %56 to i64
  %58 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.openscreen::msgs::HttpHeader"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 48, i1 false) #13
  %64 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %61, i64 1
  %65 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %64 to i64
  %66 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %58 to i64
  %69 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %70, align 8
  %72 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %6, align 8
  %73 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %71 to i64
  br label %92

76:                                               ; preds = %67, %76
  %77 = phi %"struct.openscreen::msgs::HttpHeader"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"struct.openscreen::msgs::HttpHeader"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %78, i64 -1
  %81 = bitcast %"struct.openscreen::msgs::HttpHeader"* %79 to i8*
  %82 = bitcast %"struct.openscreen::msgs::HttpHeader"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #13
  %83 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %77, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %78, i64 -1, i32 1
  %85 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 24, i1 false) #13
  %87 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %80, %71
  br i1 %87, label %88, label %76

88:                                               ; preds = %76
  %89 = ptrtoint %"struct.openscreen::msgs::HttpHeader"* %79 to i64
  %90 = load i64, i64* %31, align 8
  %91 = load %"struct.openscreen::msgs::HttpHeader"*, %"struct.openscreen::msgs::HttpHeader"** %6, align 8
  br label %92

92:                                               ; preds = %74, %88
  %93 = phi %"struct.openscreen::msgs::HttpHeader"* [ %71, %74 ], [ %91, %88 ]
  %94 = phi i64 [ %57, %74 ], [ %89, %88 ]
  %95 = phi i64 [ %75, %74 ], [ %90, %88 ]
  store i64 %94, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %96 = inttoptr i64 %95 to %"struct.openscreen::msgs::HttpHeader"*
  %97 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %93, %96
  br i1 %97, label %119, label %98

98:                                               ; preds = %92, %117
  %99 = phi %"struct.openscreen::msgs::HttpHeader"* [ %100, %117 ], [ %93, %92 ]
  %100 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %99, i64 -1
  %101 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %99, i64 -1, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  tail call void @_ZdlPv(i8* %108) #15
  br label %109

109:                                              ; preds = %106, %98
  %110 = bitcast %"struct.openscreen::msgs::HttpHeader"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.openscreen::msgs::HttpHeader", %"struct.openscreen::msgs::HttpHeader"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #15
  br label %117

117:                                              ; preds = %114, %109
  %118 = icmp eq %"struct.openscreen::msgs::HttpHeader"* %100, %96
  br i1 %118, label %119, label %98

119:                                              ; preds = %117, %92
  %120 = icmp eq i64 %95, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %95 to i8*
  tail call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %121, %119, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10openscreen4msgs15UrlAvailabilityENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.15"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i64** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i64*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i64, i64* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i64, i64* %13, i64 %18
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint i64* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to i64*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i64* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %33
  %59 = getelementptr inbounds i64, i64* %57, i64 %56
  %60 = getelementptr inbounds i64, i64* %58, i64 %1
  %61 = bitcast i64* %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #13
  %63 = ptrtoint i64* %59 to i64
  %64 = ptrtoint i64* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i64* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i64, i64* %58, i64 %71
  %73 = ptrtoint i64* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i64* %72 to i8*
  %77 = bitcast i64* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #13
  %78 = load i64*, i64** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i64* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i64* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE8__appendEm(%"class.std::__1::vector.23"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::basic_string"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #13
  %27 = ptrtoint %"class.std::__1::basic_string"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %110

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #14
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #15
  %52 = bitcast i8* %51 to %"class.std::__1::basic_string"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::basic_string"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::basic_string"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::basic_string"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #13
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  %66 = icmp eq %"class.std::__1::basic_string"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::basic_string"* %58 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  br label %88

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::basic_string"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::basic_string"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 -1
  %81 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #13
  %83 = icmp eq %"class.std::__1::basic_string"* %80, %71
  br i1 %83, label %84, label %76

84:                                               ; preds = %76
  %85 = ptrtoint %"class.std::__1::basic_string"* %79 to i64
  %86 = load i64, i64* %31, align 8
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %88

88:                                               ; preds = %74, %84
  %89 = phi %"class.std::__1::basic_string"* [ %71, %74 ], [ %87, %84 ]
  %90 = phi i64 [ %57, %74 ], [ %85, %84 ]
  %91 = phi i64 [ %75, %74 ], [ %86, %84 ]
  store i64 %90, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %92 = inttoptr i64 %91 to %"class.std::__1::basic_string"*
  %93 = icmp eq %"class.std::__1::basic_string"* %89, %92
  br i1 %93, label %106, label %94

94:                                               ; preds = %88, %104
  %95 = phi %"class.std::__1::basic_string"* [ %96, %104 ], [ %89, %88 ]
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 -1
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %101, %94
  %105 = icmp eq %"class.std::__1::basic_string"* %96, %92
  br i1 %105, label %106, label %94

106:                                              ; preds = %104, %88
  %107 = icmp eq i64 %91, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = inttoptr i64 %91 to i8*
  tail call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %108, %106, %28
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
