; ModuleID = '../../third_party/angle/src/compiler/preprocessor/DirectiveParser.cpp'
source_filename = "../../third_party/angle/src/compiler/preprocessor/DirectiveParser.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.angle::pp::DirectiveParser" = type <{ %"class.angle::pp::Lexer", i8, i8, [6 x i8], %"class.std::__1::vector", %"class.angle::pp::Tokenizer"*, %"class.std::__1::map"*, %"class.angle::pp::Diagnostics"*, %"class.angle::pp::DirectiveHandler"*, i32, %"struct.angle::pp::PreprocessorSettings", [4 x i8] }>
%"class.angle::pp::Lexer" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"class.std::__1::__compressed_pair.1" }
%"struct.angle::pp::DirectiveParser::ConditionalBlock" = type <{ %"class.std::__1::basic_string", %"struct.angle::pp::SourceLocation", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.angle::pp::SourceLocation" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.angle::pp::DirectiveParser::ConditionalBlock"* }
%"struct.angle::pp::PreprocessorSettings" = type { i32, i32 }
%"class.angle::pp::Tokenizer" = type { %"class.angle::pp::Lexer", i8*, %"struct.angle::pp::Tokenizer::Context", i64 }
%"struct.angle::pp::Tokenizer::Context" = type <{ %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Input", %"struct.angle::pp::Input::Location", i8, i8, [6 x i8] }>
%"class.angle::pp::Input" = type { i64, i8**, %"class.std::__1::vector.6", %"struct.angle::pp::Input::Location" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i64*, i64*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64* }
%"struct.angle::pp::Input::Location" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.angle::pp::DirectiveHandler" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.angle::pp::Token" = type { i32, i32, %"struct.angle::pp::SourceLocation", %"class.std::__1::basic_string" }
%"struct.std::__1::pair.36" = type { %"class.std::__1::basic_string", %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"struct.angle::pp::Macro"*, %"class.std::__1::__shared_weak_count"* }
%"struct.angle::pp::Macro" = type { i8, i8, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.21", %"class.std::__1::vector.28" }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.angle::pp::Token"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::shared_ptr" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.angle::pp::MacroExpander" = type { %"class.angle::pp::Lexer", %"class.angle::pp::Lexer"*, %"class.std::__1::map"*, %"class.angle::pp::Diagnostics"*, i8, %"class.std::__1::unique_ptr", %"class.std::__1::vector.39", i64, %"struct.angle::pp::PreprocessorSettings", i8, %"class.std::__1::vector.46" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.angle::pp::MacroExpander::MacroContext"**, %"struct.angle::pp::MacroExpander::MacroContext"**, %"class.std::__1::__compressed_pair.41" }
%"struct.angle::pp::MacroExpander::MacroContext" = type { %"class.std::__1::shared_ptr", i64, %"class.std::__1::vector.28" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.angle::pp::MacroExpander::MacroContext"** }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::shared_ptr"* }
%"class.angle::pp::ExpressionParser" = type { %"class.angle::pp::Lexer"*, %"class.angle::pp::Diagnostics"* }
%"struct.angle::pp::ExpressionParser::ErrorSettings" = type { i32, i8 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >::_Storage" = type { [88 x i8] }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_ = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5angle2pp5TokenENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISO_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE5eraseENS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN5angle2pp15DirectiveParser16ConditionalBlockENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEEE = comdat any

@_ZTVN5angle2pp15DirectiveParserE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::pp::DirectiveParser"*)* @_ZN5angle2pp15DirectiveParserD2Ev to i8*), i8* bitcast (void (%"class.angle::pp::DirectiveParser"*)* @_ZN5angle2pp15DirectiveParserD0Ev to i8*), i8* bitcast (void (%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*)* @_ZN5angle2pp15DirectiveParser3lexEPNS0_5TokenE to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c"STDGL\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"es\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"core\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"__VERSION__\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE16kDirectiveDefine = internal constant [7 x i8] c"define\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveUndef = internal constant [6 x i8] c"undef\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE12kDirectiveIf = internal constant [3 x i8] c"if\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveIfdef = internal constant [6 x i8] c"ifdef\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE16kDirectiveIfndef = internal constant [7 x i8] c"ifndef\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE14kDirectiveElse = internal constant [5 x i8] c"else\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE14kDirectiveElif = internal constant [5 x i8] c"elif\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveEndif = internal constant [6 x i8] c"endif\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveError = internal constant [6 x i8] c"error\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE16kDirectivePragma = internal constant [7 x i8] c"pragma\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE19kDirectiveExtension = internal constant [10 x i8] c"extension\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE17kDirectiveVersion = internal constant [8 x i8] c"version\00", align 1
@_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE14kDirectiveLine = internal constant [5 x i8] c"line\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"defined\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"GL_\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8

@_ZN5angle2pp15DirectiveParserC1EPNS0_9TokenizerEPNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_10shared_ptrINS0_5MacroEEENS4_4lessISB_EENS9_INS4_4pairIKSB_SE_EEEEEEPNS0_11DiagnosticsEPNS0_16DirectiveHandlerERKNS0_20PreprocessorSettingsE = hidden unnamed_addr alias void (%"class.angle::pp::DirectiveParser"*, %"class.angle::pp::Tokenizer"*, %"class.std::__1::map"*, %"class.angle::pp::Diagnostics"*, %"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::PreprocessorSettings"*), void (%"class.angle::pp::DirectiveParser"*, %"class.angle::pp::Tokenizer"*, %"class.std::__1::map"*, %"class.angle::pp::Diagnostics"*, %"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::PreprocessorSettings"*)* @_ZN5angle2pp15DirectiveParserC2EPNS0_9TokenizerEPNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_10shared_ptrINS0_5MacroEEENS4_4lessISB_EENS9_INS4_4pairIKSB_SE_EEEEEEPNS0_11DiagnosticsEPNS0_16DirectiveHandlerERKNS0_20PreprocessorSettingsE
@_ZN5angle2pp15DirectiveParserD1Ev = hidden unnamed_addr alias void (%"class.angle::pp::DirectiveParser"*), void (%"class.angle::pp::DirectiveParser"*)* @_ZN5angle2pp15DirectiveParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParserC2EPNS0_9TokenizerEPNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_10shared_ptrINS0_5MacroEEENS4_4lessISB_EENS9_INS4_4pairIKSB_SE_EEEEEEPNS0_11DiagnosticsEPNS0_16DirectiveHandlerERKNS0_20PreprocessorSettingsE(%"class.angle::pp::DirectiveParser"* nocapture, %"class.angle::pp::Tokenizer"*, %"class.std::__1::map"*, %"class.angle::pp::Diagnostics"*, %"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::PreprocessorSettings"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle2pp15DirectiveParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  store %"class.angle::pp::Tokenizer"* %1, %"class.angle::pp::Tokenizer"** %12, align 8
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  store %"class.std::__1::map"* %2, %"class.std::__1::map"** %13, align 8
  %14 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  store %"class.angle::pp::Diagnostics"* %3, %"class.angle::pp::Diagnostics"** %14, align 8
  %15 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 8
  store %"class.angle::pp::DirectiveHandler"* %4, %"class.angle::pp::DirectiveHandler"** %15, align 8
  %16 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 9
  store i32 100, i32* %16, align 8
  %17 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 10
  %18 = bitcast %"struct.angle::pp::PreprocessorSettings"* %5 to i64*
  %19 = bitcast %"struct.angle::pp::PreprocessorSettings"* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParserD2Ev(%"class.angle::pp::DirectiveParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle2pp15DirectiveParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %4, align 8
  %6 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5 to i8*
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %9, align 8
  %11 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %13, i64 -1
  %15 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 0
  tail call void @_ZN5angle2pp5LexerD2Ev(%"class.angle::pp::Lexer"* %30) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle2pp5LexerD2Ev(%"class.angle::pp::Lexer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParserD0Ev(%"class.angle::pp::DirectiveParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5angle2pp15DirectiveParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %4, align 8
  %6 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5 to i8*
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %9, align 8
  %11 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %13, i64 -1
  %15 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 0
  tail call void @_ZN5angle2pp5LexerD2Ev(%"class.angle::pp::Lexer"* %30) #11
  %31 = bitcast %"class.angle::pp::DirectiveParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser3lexEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 2
  br label %9

9:                                                ; preds = %55, %2
  %10 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %3, align 8
  %11 = bitcast %"class.angle::pp::Tokenizer"* %10 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %12 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %12, i64 2
  %14 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %13, align 8
  tail call void %14(%"class.angle::pp::Tokenizer"* %10, %"struct.angle::pp::Token"* %1) #11
  %15 = load i32, i32* %4, align 8
  switch i32 %15, label %17 [
    i32 282, label %16
    i32 10, label %31
    i32 0, label %31
  ]

16:                                               ; preds = %9
  tail call void @_ZN5angle2pp15DirectiveParser14parseDirectiveEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  store i8 1, i8* %5, align 8
  br label %29

17:                                               ; preds = %9
  %18 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %6, align 8
  %19 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %7, align 8
  %20 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %18, %19
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %19, i64 -1, i32 2
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %19, i64 -1, i32 3
  %25 = load i8, i8* %24, align 1
  %26 = or i8 %25, %23
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %21, %17
  store i8 1, i8* %8, align 1
  br label %29

29:                                               ; preds = %16, %28, %21
  %30 = load i32, i32* %4, align 8
  br label %31

31:                                               ; preds = %29, %9, %9
  %32 = phi i32 [ %30, %29 ], [ %15, %9 ], [ %15, %9 ]
  %33 = icmp eq i32 %32, 0
  %34 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %6, align 8
  %35 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %7, align 8
  %36 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %34, %35
  br i1 %33, label %37, label %43

37:                                               ; preds = %31
  br i1 %36, label %56, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %40 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %39, align 8
  %41 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %35, i64 -1, i32 1
  %42 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %35, i64 -1, i32 0
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %40, i32 28, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %41, %"class.std::__1::basic_string"* dereferenceable(24) %42) #11
  br label %56

43:                                               ; preds = %31
  br i1 %36, label %53, label %44

44:                                               ; preds = %43
  %45 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %35, i64 -1, i32 2
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %35, i64 -1, i32 3
  %48 = load i8, i8* %47, align 1
  %49 = or i8 %48, %46
  %50 = icmp ne i8 %49, 0
  %51 = icmp eq i32 %32, 10
  %52 = or i1 %51, %50
  br i1 %52, label %55, label %56

53:                                               ; preds = %43
  %54 = icmp eq i32 %32, 10
  br i1 %54, label %55, label %56

55:                                               ; preds = %53, %44
  br label %9

56:                                               ; preds = %44, %53, %37, %38
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser14parseDirectiveEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %4 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %3, align 8
  %5 = bitcast %"class.angle::pp::Tokenizer"* %4 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %6 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %6, i64 2
  %8 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %7, align 8
  tail call void %8(%"class.angle::pp::Tokenizer"* %4, %"struct.angle::pp::Token"* %1) #11
  %9 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %11 [
    i32 10, label %81
    i32 0, label %81
  ]

11:                                               ; preds = %2
  %12 = tail call fastcc i32 @_ZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenE(%"struct.angle::pp::Token"* %1)
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %15, align 8
  %17 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %14, %16
  br i1 %17, label %38, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %16, i64 -1, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %16, i64 -1, i32 3
  %22 = load i8, i8* %21, align 1
  %23 = or i8 %22, %20
  %24 = icmp eq i8 %23, 0
  %25 = add i32 %12, -3
  %26 = icmp ult i32 %25, 6
  %27 = or i1 %26, %24
  br i1 %27, label %38, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.angle::pp::Tokenizer"** %3 to %"class.angle::pp::Lexer"**
  %30 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %29, align 8
  %31 = bitcast %"class.angle::pp::Lexer"* %30 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %32

32:                                               ; preds = %34, %28
  %33 = load i32, i32* %9, align 8
  switch i32 %33, label %34 [
    i32 10, label %81
    i32 0, label %81
  ]

34:                                               ; preds = %32
  %35 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %31, align 8
  %36 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %35, i64 2
  %37 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %36, align 8
  tail call void %37(%"class.angle::pp::Lexer"* %30, %"struct.angle::pp::Token"* %1) #11
  br label %32

38:                                               ; preds = %18, %11
  switch i32 %12, label %66 [
    i32 0, label %39
    i32 1, label %53
    i32 2, label %54
    i32 3, label %55
    i32 4, label %56
    i32 5, label %57
    i32 6, label %58
    i32 7, label %59
    i32 8, label %60
    i32 9, label %61
    i32 10, label %62
    i32 11, label %63
    i32 12, label %64
    i32 13, label %65
  ]

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %41 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %40, align 8
  %42 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %41, i32 12, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %42, %"class.std::__1::basic_string"* dereferenceable(24) %43) #11
  %44 = bitcast %"class.angle::pp::Tokenizer"** %3 to %"class.angle::pp::Lexer"**
  %45 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %44, align 8
  %46 = bitcast %"class.angle::pp::Lexer"* %45 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %47

47:                                               ; preds = %49, %39
  %48 = load i32, i32* %9, align 8
  switch i32 %48, label %49 [
    i32 10, label %66
    i32 0, label %66
  ]

49:                                               ; preds = %47
  %50 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %46, align 8
  %51 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %50, i64 2
  %52 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %51, align 8
  tail call void %52(%"class.angle::pp::Lexer"* %45, %"struct.angle::pp::Token"* %1) #11
  br label %47

53:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser11parseDefineEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

54:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser10parseUndefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

55:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1) #11
  br label %66

56:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1) #11
  br label %66

57:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1) #11
  br label %66

58:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser9parseElseEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

59:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser9parseElifEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

60:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser10parseEndifEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

61:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser10parseErrorEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

62:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser11parsePragmaEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

63:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser14parseExtensionEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

64:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser12parseVersionEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

65:                                               ; preds = %38
  tail call void @_ZN5angle2pp15DirectiveParser9parseLineEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %66

66:                                               ; preds = %47, %47, %38, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53
  %67 = bitcast %"class.angle::pp::Tokenizer"** %3 to %"class.angle::pp::Lexer"**
  %68 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %67, align 8
  %69 = bitcast %"class.angle::pp::Lexer"* %68 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %70

70:                                               ; preds = %72, %66
  %71 = load i32, i32* %9, align 8
  switch i32 %71, label %72 [
    i32 0, label %76
    i32 10, label %81
  ]

72:                                               ; preds = %70
  %73 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %69, align 8
  %74 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %73, i64 2
  %75 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %74, align 8
  tail call void %75(%"class.angle::pp::Lexer"* %68, %"struct.angle::pp::Token"* %1) #11
  br label %70

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %78 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %77, align 8
  %79 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %80 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %78, i32 46, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %79, %"class.std::__1::basic_string"* dereferenceable(24) %80) #11
  br label %81

81:                                               ; preds = %32, %32, %70, %2, %2, %76
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5angle2pp15DirectiveParser8skippingEv(%"class.angle::pp::DirectiveParser"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %4, align 8
  %6 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, %5
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5, i64 -1, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %5, i64 -1, i32 3
  %11 = load i8, i8* %10, align 1
  %12 = or i8 %11, %9
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"*, i32, %"struct.angle::pp::SourceLocation"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenE(%"struct.angle::pp::Token"*) unnamed_addr #0 {
  %2 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 258
  br i1 %4, label %5, label %188

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 6
  br i1 %15, label %16, label %23

16:                                               ; preds = %5
  %17 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE16kDirectiveDefine, i64 0, i64 0), i64 6) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %188, label %19

19:                                               ; preds = %16
  %20 = load i8, i8* %8, align 1
  %21 = load i64, i64* %11, align 8
  %22 = zext i8 %20 to i64
  br label %23

23:                                               ; preds = %19, %5
  %24 = phi i64 [ %22, %19 ], [ %13, %5 ]
  %25 = phi i64 [ %21, %19 ], [ %12, %5 ]
  %26 = phi i8 [ %20, %19 ], [ %9, %5 ]
  %27 = icmp slt i8 %26, 0
  %28 = select i1 %27, i64 %25, i64 %24
  %29 = icmp eq i64 %28, 5
  br i1 %29, label %30, label %37

30:                                               ; preds = %23
  %31 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveUndef, i64 0, i64 0), i64 5) #11
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %188, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %8, align 1
  %35 = load i64, i64* %11, align 8
  %36 = zext i8 %34 to i64
  br label %37

37:                                               ; preds = %33, %23
  %38 = phi i64 [ %36, %33 ], [ %24, %23 ]
  %39 = phi i64 [ %35, %33 ], [ %25, %23 ]
  %40 = phi i8 [ %34, %33 ], [ %26, %23 ]
  %41 = icmp slt i8 %40, 0
  %42 = select i1 %41, i64 %39, i64 %38
  %43 = icmp eq i64 %42, 2
  br i1 %43, label %44, label %51

44:                                               ; preds = %37
  %45 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE12kDirectiveIf, i64 0, i64 0), i64 2) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %188, label %47

47:                                               ; preds = %44
  %48 = load i8, i8* %8, align 1
  %49 = load i64, i64* %11, align 8
  %50 = zext i8 %48 to i64
  br label %51

51:                                               ; preds = %47, %37
  %52 = phi i64 [ %50, %47 ], [ %38, %37 ]
  %53 = phi i64 [ %49, %47 ], [ %39, %37 ]
  %54 = phi i8 [ %48, %47 ], [ %40, %37 ]
  %55 = icmp slt i8 %54, 0
  %56 = select i1 %55, i64 %53, i64 %52
  %57 = icmp eq i64 %56, 5
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveIfdef, i64 0, i64 0), i64 5) #11
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %188, label %61

61:                                               ; preds = %58
  %62 = load i8, i8* %8, align 1
  %63 = load i64, i64* %11, align 8
  %64 = zext i8 %62 to i64
  br label %65

65:                                               ; preds = %61, %51
  %66 = phi i64 [ %64, %61 ], [ %52, %51 ]
  %67 = phi i64 [ %63, %61 ], [ %53, %51 ]
  %68 = phi i8 [ %62, %61 ], [ %54, %51 ]
  %69 = icmp slt i8 %68, 0
  %70 = select i1 %69, i64 %67, i64 %66
  %71 = icmp eq i64 %70, 6
  br i1 %71, label %72, label %79

72:                                               ; preds = %65
  %73 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE16kDirectiveIfndef, i64 0, i64 0), i64 6) #11
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %188, label %75

75:                                               ; preds = %72
  %76 = load i8, i8* %8, align 1
  %77 = load i64, i64* %11, align 8
  %78 = zext i8 %76 to i64
  br label %79

79:                                               ; preds = %75, %65
  %80 = phi i64 [ %78, %75 ], [ %66, %65 ]
  %81 = phi i64 [ %77, %75 ], [ %67, %65 ]
  %82 = phi i8 [ %76, %75 ], [ %68, %65 ]
  %83 = icmp slt i8 %82, 0
  %84 = select i1 %83, i64 %81, i64 %80
  %85 = icmp eq i64 %84, 4
  br i1 %85, label %86, label %93

86:                                               ; preds = %79
  %87 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE14kDirectiveElse, i64 0, i64 0), i64 4) #11
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %188, label %89

89:                                               ; preds = %86
  %90 = load i8, i8* %8, align 1
  %91 = load i64, i64* %11, align 8
  %92 = zext i8 %90 to i64
  br label %93

93:                                               ; preds = %89, %79
  %94 = phi i64 [ %92, %89 ], [ %80, %79 ]
  %95 = phi i64 [ %91, %89 ], [ %81, %79 ]
  %96 = phi i8 [ %90, %89 ], [ %82, %79 ]
  %97 = icmp slt i8 %96, 0
  %98 = select i1 %97, i64 %95, i64 %94
  %99 = icmp eq i64 %98, 4
  br i1 %99, label %100, label %107

100:                                              ; preds = %93
  %101 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE14kDirectiveElif, i64 0, i64 0), i64 4) #11
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %188, label %103

103:                                              ; preds = %100
  %104 = load i8, i8* %8, align 1
  %105 = load i64, i64* %11, align 8
  %106 = zext i8 %104 to i64
  br label %107

107:                                              ; preds = %103, %93
  %108 = phi i64 [ %106, %103 ], [ %94, %93 ]
  %109 = phi i64 [ %105, %103 ], [ %95, %93 ]
  %110 = phi i8 [ %104, %103 ], [ %96, %93 ]
  %111 = icmp slt i8 %110, 0
  %112 = select i1 %111, i64 %109, i64 %108
  %113 = icmp eq i64 %112, 5
  br i1 %113, label %114, label %121

114:                                              ; preds = %107
  %115 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveEndif, i64 0, i64 0), i64 5) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %188, label %117

117:                                              ; preds = %114
  %118 = load i8, i8* %8, align 1
  %119 = load i64, i64* %11, align 8
  %120 = zext i8 %118 to i64
  br label %121

121:                                              ; preds = %117, %107
  %122 = phi i64 [ %120, %117 ], [ %108, %107 ]
  %123 = phi i64 [ %119, %117 ], [ %109, %107 ]
  %124 = phi i8 [ %118, %117 ], [ %110, %107 ]
  %125 = icmp slt i8 %124, 0
  %126 = select i1 %125, i64 %123, i64 %122
  %127 = icmp eq i64 %126, 5
  br i1 %127, label %128, label %135

128:                                              ; preds = %121
  %129 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE15kDirectiveError, i64 0, i64 0), i64 5) #11
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %188, label %131

131:                                              ; preds = %128
  %132 = load i8, i8* %8, align 1
  %133 = load i64, i64* %11, align 8
  %134 = zext i8 %132 to i64
  br label %135

135:                                              ; preds = %131, %121
  %136 = phi i64 [ %134, %131 ], [ %122, %121 ]
  %137 = phi i64 [ %133, %131 ], [ %123, %121 ]
  %138 = phi i8 [ %132, %131 ], [ %124, %121 ]
  %139 = icmp slt i8 %138, 0
  %140 = select i1 %139, i64 %137, i64 %136
  %141 = icmp eq i64 %140, 6
  br i1 %141, label %142, label %149

142:                                              ; preds = %135
  %143 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE16kDirectivePragma, i64 0, i64 0), i64 6) #11
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %188, label %145

145:                                              ; preds = %142
  %146 = load i8, i8* %8, align 1
  %147 = load i64, i64* %11, align 8
  %148 = zext i8 %146 to i64
  br label %149

149:                                              ; preds = %145, %135
  %150 = phi i64 [ %148, %145 ], [ %136, %135 ]
  %151 = phi i64 [ %147, %145 ], [ %137, %135 ]
  %152 = phi i8 [ %146, %145 ], [ %138, %135 ]
  %153 = icmp slt i8 %152, 0
  %154 = select i1 %153, i64 %151, i64 %150
  %155 = icmp eq i64 %154, 9
  br i1 %155, label %156, label %163

156:                                              ; preds = %149
  %157 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE19kDirectiveExtension, i64 0, i64 0), i64 9) #11
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %188, label %159

159:                                              ; preds = %156
  %160 = load i8, i8* %8, align 1
  %161 = load i64, i64* %11, align 8
  %162 = zext i8 %160 to i64
  br label %163

163:                                              ; preds = %159, %149
  %164 = phi i64 [ %162, %159 ], [ %150, %149 ]
  %165 = phi i64 [ %161, %159 ], [ %151, %149 ]
  %166 = phi i8 [ %160, %159 ], [ %152, %149 ]
  %167 = icmp slt i8 %166, 0
  %168 = select i1 %167, i64 %165, i64 %164
  %169 = icmp eq i64 %168, 7
  br i1 %169, label %170, label %177

170:                                              ; preds = %163
  %171 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE17kDirectiveVersion, i64 0, i64 0), i64 7) #11
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %188, label %173

173:                                              ; preds = %170
  %174 = load i8, i8* %8, align 1
  %175 = load i64, i64* %11, align 8
  %176 = zext i8 %174 to i64
  br label %177

177:                                              ; preds = %173, %163
  %178 = phi i64 [ %176, %173 ], [ %164, %163 ]
  %179 = phi i64 [ %175, %173 ], [ %165, %163 ]
  %180 = phi i8 [ %174, %173 ], [ %166, %163 ]
  %181 = icmp slt i8 %180, 0
  %182 = select i1 %181, i64 %179, i64 %178
  %183 = icmp eq i64 %182, 4
  br i1 %183, label %184, label %188

184:                                              ; preds = %177
  %185 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenEE14kDirectiveLine, i64 0, i64 0), i64 4) #11
  %186 = icmp eq i32 %185, 0
  %187 = select i1 %186, i32 13, i32 0
  ret i32 %187

188:                                              ; preds = %177, %170, %156, %142, %128, %114, %100, %86, %72, %58, %44, %30, %16, %1
  %189 = phi i32 [ 0, %1 ], [ 1, %16 ], [ 2, %30 ], [ 3, %44 ], [ 4, %58 ], [ 5, %72 ], [ 6, %86 ], [ 7, %100 ], [ 8, %114 ], [ 9, %128 ], [ 10, %142 ], [ 11, %156 ], [ 12, %170 ], [ 0, %177 ]
  ret i32 %189
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser11parseDefineEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.std::__1::pair.36", align 8
  %6 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %7 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %6, align 8
  %8 = bitcast %"class.angle::pp::Tokenizer"* %7 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %9 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %9, i64 2
  %11 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %10, align 8
  tail call void %11(%"class.angle::pp::Tokenizer"* %7, %"struct.angle::pp::Token"* %1) #11
  %12 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 258
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %17 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  %18 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %17, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %18, %"class.std::__1::basic_string"* dereferenceable(24) %19) #11
  br label %429

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  %23 = load %"class.std::__1::map"*, %"class.std::__1::map"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %23, i64 0, i32 0
  %25 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"* %24, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %25, %26
  br i1 %27, label %39, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 7
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"struct.angle::pp::Macro"**
  %31 = load %"struct.angle::pp::Macro"*, %"struct.angle::pp::Macro"** %30, align 8
  %32 = getelementptr inbounds %"struct.angle::pp::Macro", %"struct.angle::pp::Macro"* %31, i64 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %37 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  %38 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %37, i32 15, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %38, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  br label %429

39:                                               ; preds = %28, %20
  %40 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp eq i64 %47, 7
  br i1 %48, label %49, label %52

49:                                               ; preds = %39
  %50 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %21, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %49, %39
  %53 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #11
  %54 = bitcast %"class.std::__1::basic_string"* %21 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %21, i64 0, i64 3, %"class.std::__1::allocator"* dereferenceable(1) %54) #11
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = icmp eq i64 %62, 3
  br i1 %63, label %64, label %68

64:                                               ; preds = %52
  %65 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #11
  %66 = icmp eq i32 %65, 0
  %67 = load i8, i8* %56, align 1
  br label %68

68:                                               ; preds = %64, %52
  %69 = phi i8 [ %57, %52 ], [ %67, %64 ]
  %70 = phi i1 [ false, %52 ], [ %66, %64 ]
  %71 = icmp slt i8 %69, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  br i1 %70, label %76, label %80

76:                                               ; preds = %49, %75
  %77 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %78 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %77, align 8
  %79 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %78, i32 13, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %79, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  br label %429

80:                                               ; preds = %75
  %81 = load i8, i8* %41, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %86 = select i1 %82, i8* %84, i8* %85
  %87 = load i64, i64* %44, align 8
  %88 = zext i8 %81 to i64
  %89 = select i1 %82, i64 %87, i64 %88
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  %91 = ptrtoint i8* %90 to i64
  %92 = ptrtoint i8* %86 to i64
  %93 = icmp slt i64 %89, 2
  br i1 %93, label %120, label %94

94:                                               ; preds = %80, %105
  %95 = phi i64 [ %108, %105 ], [ %89, %80 ]
  %96 = phi i8* [ %106, %105 ], [ %86, %80 ]
  %97 = add nsw i64 %95, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %120, label %99

99:                                               ; preds = %94
  %100 = call i8* @memchr(i8* %96, i32 95, i64 %97) #11
  %101 = icmp eq i8* %100, null
  br i1 %101, label %120, label %102

102:                                              ; preds = %99
  %103 = call i32 @bcmp(i8* nonnull %100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #11
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds i8, i8* %100, i64 1
  %107 = ptrtoint i8* %106 to i64
  %108 = sub i64 %91, %107
  %109 = icmp slt i64 %108, 2
  br i1 %109, label %120, label %94

110:                                              ; preds = %102
  %111 = ptrtoint i8* %100 to i64
  %112 = icmp ne i8* %100, %90
  %113 = sub i64 %111, %92
  %114 = icmp ne i64 %113, -1
  %115 = and i1 %112, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %118 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %117, align 8
  %119 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %118, i32 49, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %119, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  br label %120

120:                                              ; preds = %105, %99, %94, %80, %116, %110
  %121 = call i8* @_Znwm(i64 112) #12
  %122 = bitcast i8* %121 to i32 (...)***
  %123 = getelementptr inbounds i8, i8* %121, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %124 = getelementptr inbounds i8, i8* %121, i64 24
  %125 = bitcast i8* %124 to %"struct.angle::pp::Macro"*
  call void @_ZN5angle2pp5MacroC1Ev(%"struct.angle::pp::Macro"* %125) #11
  %126 = bitcast i8* %121 to %"class.std::__1::__shared_weak_count"*
  %127 = ptrtoint i8* %124 to i64
  %128 = getelementptr inbounds i8, i8* %121, i64 32
  %129 = bitcast i8* %128 to i32*
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds i8, i8* %121, i64 40
  %131 = bitcast i8* %130 to %"class.std::__1::basic_string"*
  %132 = icmp eq %"class.std::__1::basic_string"* %21, %131
  br i1 %132, label %152, label %133

133:                                              ; preds = %120
  %134 = getelementptr inbounds i8, i8* %121, i64 63
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i8, i8* %41, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %136, label %145, label %139

139:                                              ; preds = %133
  br i1 %138, label %141, label %140

140:                                              ; preds = %139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %85, i64 24, i1 false) #11
  br label %152

141:                                              ; preds = %139
  %142 = load i8*, i8** %83, align 8
  %143 = load i64, i64* %44, align 8
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %131, i8* %142, i64 %143) #11
  br label %152

145:                                              ; preds = %133
  %146 = load i8*, i8** %83, align 8
  %147 = load i64, i64* %44, align 8
  %148 = zext i8 %137 to i64
  %149 = select i1 %138, i8* %146, i8* %85
  %150 = select i1 %138, i64 %147, i64 %148
  %151 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %131, i8* %149, i64 %150) #11
  br label %152

152:                                              ; preds = %120, %140, %141, %145
  %153 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %6, align 8
  %154 = bitcast %"class.angle::pp::Tokenizer"* %153 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %155 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %155, i64 2
  %157 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %156, align 8
  call void %157(%"class.angle::pp::Tokenizer"* %153, %"struct.angle::pp::Token"* %1) #11
  %158 = load i32, i32* %12, align 8
  %159 = icmp eq i32 %158, 40
  br i1 %159, label %160, label %279

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %279

165:                                              ; preds = %160
  store i32 1, i32* %129, align 8
  %166 = getelementptr inbounds i8, i8* %121, i64 64
  %167 = bitcast i8* %166 to %"class.std::__1::vector.21"*
  %168 = bitcast i8* %166 to %"class.std::__1::basic_string"**
  %169 = getelementptr inbounds i8, i8* %121, i64 72
  %170 = bitcast i8* %169 to %"class.std::__1::basic_string"**
  %171 = getelementptr inbounds i8, i8* %121, i64 80
  %172 = bitcast i8* %171 to %"class.std::__1::basic_string"**
  %173 = bitcast i8* %169 to i64*
  br label %174

174:                                              ; preds = %258, %165
  %175 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %6, align 8
  %176 = bitcast %"class.angle::pp::Tokenizer"* %175 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %177 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %177, i64 2
  %179 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %178, align 8
  call void %179(%"class.angle::pp::Tokenizer"* %175, %"struct.angle::pp::Token"* %1) #11
  %180 = load i32, i32* %12, align 8
  %181 = icmp eq i32 %180, 258
  br i1 %181, label %182, label %266

182:                                              ; preds = %174
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %168, align 8
  %184 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %170, align 8
  %185 = icmp eq %"class.std::__1::basic_string"* %183, %184
  br i1 %185, label %236, label %186

186:                                              ; preds = %182
  %187 = load i8, i8* %41, align 1
  %188 = icmp slt i8 %187, 0
  %189 = load i64, i64* %44, align 8
  %190 = zext i8 %187 to i64
  %191 = select i1 %188, i64 %189, i64 %190
  %192 = load i8*, i8** %83, align 8
  %193 = select i1 %188, i8* %192, i8* %85
  %194 = icmp eq i64 %191, 0
  br label %195

195:                                              ; preds = %233, %186
  %196 = phi %"class.std::__1::basic_string"* [ %183, %186 ], [ %234, %233 ]
  %197 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = zext i8 %199 to i64
  %204 = select i1 %200, i64 %202, i64 %203
  %205 = icmp eq i64 %204, %191
  br i1 %205, label %206, label %233

206:                                              ; preds = %195
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %210 = select i1 %200, i8* %208, i8* %209
  br i1 %200, label %217, label %211

211:                                              ; preds = %206
  br i1 %194, label %236, label %212

212:                                              ; preds = %211
  %213 = ptrtoint i8* %208 to i64
  %214 = trunc i64 %213 to i8
  %215 = load i8, i8* %193, align 1
  %216 = icmp eq i8 %215, %214
  br i1 %216, label %218, label %233

217:                                              ; preds = %206
  br i1 %194, label %236, label %230

218:                                              ; preds = %212, %225
  %219 = phi i64 [ %222, %225 ], [ %203, %212 ]
  %220 = phi i8* [ %223, %225 ], [ %209, %212 ]
  %221 = phi i8* [ %226, %225 ], [ %193, %212 ]
  %222 = add i64 %219, -1
  %223 = getelementptr inbounds i8, i8* %220, i64 1
  %224 = icmp eq i64 %222, 0
  br i1 %224, label %236, label %225

225:                                              ; preds = %218
  %226 = getelementptr inbounds i8, i8* %221, i64 1
  %227 = load i8, i8* %223, align 1
  %228 = load i8, i8* %226, align 1
  %229 = icmp eq i8 %227, %228
  br i1 %229, label %218, label %233

230:                                              ; preds = %217
  %231 = call i32 @bcmp(i8* %210, i8* %193, i64 %191) #11
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %225, %212, %230, %195
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 1
  %235 = icmp eq %"class.std::__1::basic_string"* %234, %184
  br i1 %235, label %243, label %195

236:                                              ; preds = %211, %217, %230, %218, %182
  %237 = phi %"class.std::__1::basic_string"* [ %183, %182 ], [ %196, %218 ], [ %196, %230 ], [ %196, %217 ], [ %196, %211 ]
  %238 = icmp eq %"class.std::__1::basic_string"* %237, %184
  br i1 %238, label %243, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %241 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %240, align 8
  %242 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %241, i32 21, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %242, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  br label %419

243:                                              ; preds = %233, %236
  %244 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %172, align 8
  %245 = icmp eq %"class.std::__1::basic_string"* %184, %244
  br i1 %245, label %257, label %246

246:                                              ; preds = %243
  %247 = load i8, i8* %41, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %246
  %250 = bitcast %"class.std::__1::basic_string"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %85, i64 24, i1 false) #11
  br label %254

251:                                              ; preds = %246
  %252 = load i8*, i8** %83, align 8
  %253 = load i64, i64* %44, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %184, i8* %252, i64 %253) #11
  br label %254

254:                                              ; preds = %251, %249
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %184, i64 1
  %256 = ptrtoint %"class.std::__1::basic_string"* %255 to i64
  store i64 %256, i64* %173, align 8
  br label %258

257:                                              ; preds = %243
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.21"* %167, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  br label %258

258:                                              ; preds = %254, %257
  %259 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %6, align 8
  %260 = bitcast %"class.angle::pp::Tokenizer"* %259 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %261 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %260, align 8
  %262 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %261, i64 2
  %263 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %262, align 8
  call void %263(%"class.angle::pp::Tokenizer"* %259, %"struct.angle::pp::Token"* %1) #11
  %264 = load i32, i32* %12, align 8
  %265 = icmp eq i32 %264, 44
  br i1 %265, label %174, label %266

266:                                              ; preds = %174, %258
  %267 = phi i32 [ %180, %174 ], [ %264, %258 ]
  %268 = icmp eq i32 %267, 41
  br i1 %268, label %273, label %269

269:                                              ; preds = %266
  %270 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %271 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %270, align 8
  %272 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %271, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %272, %"class.std::__1::basic_string"* dereferenceable(24) %21) #11
  br label %419

273:                                              ; preds = %266
  %274 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %6, align 8
  %275 = bitcast %"class.angle::pp::Tokenizer"* %274 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %276 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %275, align 8
  %277 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %276, i64 2
  %278 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %277, align 8
  call void %278(%"class.angle::pp::Tokenizer"* %274, %"struct.angle::pp::Token"* %1) #11
  br label %279

279:                                              ; preds = %160, %273, %152
  %280 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %281 = bitcast %"struct.angle::pp::SourceLocation"* %280 to i64*
  %282 = getelementptr inbounds i8, i8* %121, i64 96
  %283 = bitcast i8* %282 to %"struct.angle::pp::Token"**
  %284 = getelementptr inbounds i8, i8* %121, i64 104
  %285 = bitcast i8* %284 to %"struct.angle::pp::Token"**
  %286 = bitcast %"struct.angle::pp::Token"* %1 to i8*
  %287 = bitcast i8* %282 to i64*
  %288 = getelementptr inbounds i8, i8* %121, i64 88
  %289 = bitcast i8* %288 to %"class.std::__1::vector.28"*
  br label %290

290:                                              ; preds = %310, %279
  %291 = load i32, i32* %12, align 8
  switch i32 %291, label %292 [
    i32 10, label %316
    i32 0, label %316
  ]

292:                                              ; preds = %290
  store i64 0, i64* %281, align 8
  %293 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %283, align 8
  %294 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %285, align 8
  %295 = icmp eq %"struct.angle::pp::Token"* %293, %294
  br i1 %295, label %309, label %296

296:                                              ; preds = %292
  %297 = bitcast %"struct.angle::pp::Token"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* align 8 %286, i64 16, i1 false) #11
  %298 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %293, i64 0, i32 3
  %299 = load i8, i8* %41, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %303, label %301

301:                                              ; preds = %296
  %302 = bitcast %"class.std::__1::basic_string"* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %85, i64 24, i1 false) #11
  br label %306

303:                                              ; preds = %296
  %304 = load i8*, i8** %83, align 8
  %305 = load i64, i64* %44, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %298, i8* %304, i64 %305) #11
  br label %306

306:                                              ; preds = %303, %301
  %307 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %293, i64 1
  %308 = ptrtoint %"struct.angle::pp::Token"* %307 to i64
  store i64 %308, i64* %287, align 8
  br label %310

309:                                              ; preds = %292
  call void @_ZNSt3__16vectorIN5angle2pp5TokenENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.28"* %289, %"struct.angle::pp::Token"* dereferenceable(40) %1) #11
  br label %310

310:                                              ; preds = %306, %309
  %311 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %6, align 8
  %312 = bitcast %"class.angle::pp::Tokenizer"* %311 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %313 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %313, i64 2
  %315 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %314, align 8
  call void %315(%"class.angle::pp::Tokenizer"* %311, %"struct.angle::pp::Token"* %1) #11
  br label %290

316:                                              ; preds = %290, %290
  %317 = bitcast i8* %288 to %"struct.angle::pp::Token"**
  %318 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %317, align 8
  %319 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %283, align 8
  %320 = icmp eq %"struct.angle::pp::Token"* %318, %319
  br i1 %320, label %322, label %321

321:                                              ; preds = %316
  call void @_ZN5angle2pp5Token18setHasLeadingSpaceEb(%"struct.angle::pp::Token"* %318, i1 zeroext false) #11
  br label %322

322:                                              ; preds = %321, %316
  %323 = load %"class.std::__1::map"*, %"class.std::__1::map"** %22, align 8
  %324 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %323, i64 0, i32 0
  %325 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"* %324, %"class.std::__1::basic_string"* dereferenceable(24) %131) #11
  %326 = load %"class.std::__1::map"*, %"class.std::__1::map"** %22, align 8
  %327 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %328 = icmp eq %"class.std::__1::__tree_end_node"* %325, %327
  br i1 %328, label %339, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %325, i64 7
  %331 = bitcast %"class.std::__1::__tree_end_node"* %330 to %"struct.angle::pp::Macro"**
  %332 = load %"struct.angle::pp::Macro"*, %"struct.angle::pp::Macro"** %331, align 8
  %333 = call zeroext i1 @_ZNK5angle2pp5Macro6equalsERKS1_(%"struct.angle::pp::Macro"* %125, %"struct.angle::pp::Macro"* dereferenceable(88) %332) #11
  br i1 %333, label %334, label %336

334:                                              ; preds = %329
  %335 = load %"class.std::__1::map"*, %"class.std::__1::map"** %22, align 8
  br label %339

336:                                              ; preds = %329
  %337 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %338 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %337, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %338, i32 14, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %280, %"class.std::__1::basic_string"* dereferenceable(24) %131) #11
  br label %419

339:                                              ; preds = %334, %322
  %340 = phi %"class.std::__1::map"* [ %335, %334 ], [ %326, %322 ]
  %341 = bitcast %"struct.std::__1::pair.36"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %341) #11
  %342 = getelementptr inbounds i8, i8* %121, i64 63
  %343 = load i8, i8* %342, align 1, !noalias !3
  %344 = icmp slt i8 %343, 0
  br i1 %344, label %346, label %345

345:                                              ; preds = %339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %341, i8* align 8 %130, i64 24, i1 false) #11
  br label %353

346:                                              ; preds = %339
  %347 = getelementptr inbounds %"struct.std::__1::pair.36", %"struct.std::__1::pair.36"* %5, i64 0, i32 0
  %348 = bitcast i8* %130 to i8**
  %349 = load i8*, i8** %348, align 8, !noalias !3
  %350 = getelementptr inbounds i8, i8* %121, i64 48
  %351 = bitcast i8* %350 to i64*
  %352 = load i64, i64* %351, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %347, i8* %349, i64 %352) #11
  br label %353

353:                                              ; preds = %346, %345
  %354 = getelementptr inbounds %"struct.std::__1::pair.36", %"struct.std::__1::pair.36"* %5, i64 0, i32 1
  %355 = bitcast %"class.std::__1::shared_ptr"* %354 to i64*
  store i64 %127, i64* %355, align 8, !alias.scope !3
  %356 = getelementptr inbounds %"struct.std::__1::pair.36", %"struct.std::__1::pair.36"* %5, i64 0, i32 1, i32 1
  %357 = bitcast %"class.std::__1::__shared_weak_count"** %356 to i8**
  store i8* %121, i8** %357, align 8, !alias.scope !3
  %358 = bitcast i8* %123 to i64*
  %359 = atomicrmw add i64* %358, i64 1 monotonic
  %360 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %340, i64 0, i32 0
  %361 = getelementptr inbounds %"struct.std::__1::pair.36", %"struct.std::__1::pair.36"* %5, i64 0, i32 0
  %362 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %362) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %363 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISO_EERKT_(%"class.std::__1::__tree"* %360, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %361) #11
  %364 = bitcast %"class.std::__1::__tree_node_base"** %363 to %"class.std::__1::__tree_node"**
  %365 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %364, align 8
  %366 = icmp eq %"class.std::__1::__tree_node"* %365, null
  br i1 %366, label %367, label %397

367:                                              ; preds = %353
  %368 = call i8* @_Znwm(i64 72) #12, !noalias !6
  %369 = getelementptr inbounds i8, i8* %368, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %369, i8* nonnull align 8 %341, i64 24, i1 false) #11, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %341, i8 0, i64 24, i1 false) #11, !noalias !6
  %370 = getelementptr inbounds i8, i8* %368, i64 56
  %371 = bitcast %"class.std::__1::shared_ptr"* %354 to <2 x i64>*
  %372 = load <2 x i64>, <2 x i64>* %371, align 8, !noalias !6
  %373 = bitcast i8* %370 to <2 x i64>*
  store <2 x i64> %372, <2 x i64>* %373, align 8, !noalias !6
  %374 = bitcast %"class.std::__1::shared_ptr"* %354 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %374, i8 0, i64 16, i1 false) #11, !noalias !6
  %375 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast i8* %368 to %"class.std::__1::__tree_node_base"*
  %378 = getelementptr inbounds i8, i8* %368, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 0, i64 16, i1 false) #11
  %379 = bitcast i8* %378 to i64*
  store i64 %376, i64* %379, align 8
  %380 = bitcast %"class.std::__1::__tree_node_base"** %363 to i8**
  store i8* %368, i8** %380, align 8
  %381 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %340, i64 0, i32 0, i32 0
  %382 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %381, align 8
  %383 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %382, i64 0, i32 0
  %384 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  %385 = icmp eq %"class.std::__1::__tree_node_base"* %384, null
  br i1 %385, label %390, label %386

386:                                              ; preds = %367
  %387 = ptrtoint %"class.std::__1::__tree_node_base"* %384 to i64
  %388 = bitcast %"class.std::__1::map"* %340 to i64*
  store i64 %387, i64* %388, align 8
  %389 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  br label %390

390:                                              ; preds = %386, %367
  %391 = phi %"class.std::__1::__tree_node_base"* [ %377, %367 ], [ %389, %386 ]
  %392 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %340, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %393 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %393, %"class.std::__1::__tree_node_base"* %391) #11
  %394 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %340, i64 0, i32 0, i32 2, i32 0, i32 0
  %395 = load i64, i64* %394, align 8
  %396 = add i64 %395, 1
  store i64 %396, i64* %394, align 8
  br label %397

397:                                              ; preds = %353, %390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %362) #11
  %398 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %356, align 8
  %399 = icmp eq %"class.std::__1::__shared_weak_count"* %398, null
  br i1 %399, label %410, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %398, i64 0, i32 0, i32 1
  %402 = atomicrmw add i64* %401, i64 -1 acq_rel
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %410

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %398, i64 0, i32 0
  %406 = bitcast %"class.std::__1::__shared_weak_count"* %398 to void (%"class.std::__1::__shared_count"*)***
  %407 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %406, align 8
  %408 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %407, i64 2
  %409 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %408, align 8
  call void %409(%"class.std::__1::__shared_count"* %405) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %398) #11
  br label %410

410:                                              ; preds = %404, %400, %397
  %411 = bitcast %"struct.std::__1::pair.36"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %411, i64 0, i32 1, i32 0
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %415, label %418

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"struct.std::__1::pair.36", %"struct.std::__1::pair.36"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  call void @_ZdlPv(i8* %417) #12
  br label %418

418:                                              ; preds = %410, %415
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %341) #11
  br label %419

419:                                              ; preds = %239, %269, %418, %336
  %420 = bitcast i8* %123 to i64*
  %421 = atomicrmw add i64* %420, i64 -1 acq_rel
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %423, label %429

423:                                              ; preds = %419
  %424 = bitcast i8* %121 to %"class.std::__1::__shared_count"*
  %425 = bitcast i8* %121 to void (%"class.std::__1::__shared_count"*)***
  %426 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %425, align 8
  %427 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %426, i64 2
  %428 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %427, align 8
  call void %428(%"class.std::__1::__shared_count"* nonnull %424) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %126) #11
  br label %429

429:                                              ; preds = %423, %419, %15, %35, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser10parseUndefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %4 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %3, align 8
  %5 = bitcast %"class.angle::pp::Tokenizer"* %4 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %6 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %6, i64 2
  %8 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %7, align 8
  tail call void %8(%"class.angle::pp::Tokenizer"* %4, %"struct.angle::pp::Token"* %1) #11
  %9 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 258
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %14 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %13, align 8
  %15 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %14, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %15, %"class.std::__1::basic_string"* dereferenceable(24) %16) #11
  br label %68

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  %19 = load %"class.std::__1::map"*, %"class.std::__1::map"** %18, align 8
  %20 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %19, i64 0, i32 0
  %22 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"* %21, %"class.std::__1::basic_string"* dereferenceable(24) %20) #11
  %23 = load %"class.std::__1::map"*, %"class.std::__1::map"** %18, align 8
  %24 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %22, %24
  br i1 %25, label %48, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 7
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"struct.angle::pp::Macro"**
  %29 = load %"struct.angle::pp::Macro"*, %"struct.angle::pp::Macro"** %28, align 8
  %30 = getelementptr inbounds %"struct.angle::pp::Macro", %"struct.angle::pp::Macro"* %29, i64 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %35 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %34, align 8
  %36 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %35, i32 16, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %36, %"class.std::__1::basic_string"* dereferenceable(24) %20) #11
  br label %68

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.angle::pp::Macro", %"struct.angle::pp::Macro"* %29, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %43 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %42, align 8
  %44 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %43, i32 18, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %44, %"class.std::__1::basic_string"* dereferenceable(24) %20) #11
  br label %68

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %23, i64 0, i32 0
  %47 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE5eraseENS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEE(%"class.std::__1::__tree"* %46, %"class.std::__1::__tree_end_node"* %22) #11
  br label %48

48:                                               ; preds = %17, %45
  %49 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %3, align 8
  %50 = bitcast %"class.angle::pp::Tokenizer"* %49 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %51 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %51, i64 2
  %53 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %52, align 8
  tail call void %53(%"class.angle::pp::Tokenizer"* %49, %"struct.angle::pp::Token"* %1) #11
  %54 = load i32, i32* %9, align 8
  switch i32 %54, label %55 [
    i32 10, label %68
    i32 0, label %68
  ]

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %57 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %56, align 8
  %58 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %57, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %58, %"class.std::__1::basic_string"* dereferenceable(24) %20) #11
  %59 = bitcast %"class.angle::pp::Tokenizer"** %3 to %"class.angle::pp::Lexer"**
  %60 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %59, align 8
  %61 = bitcast %"class.angle::pp::Lexer"* %60 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %62

62:                                               ; preds = %64, %55
  %63 = load i32, i32* %9, align 8
  switch i32 %63, label %64 [
    i32 10, label %68
    i32 0, label %68
  ]

64:                                               ; preds = %62
  %65 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %61, align 8
  %66 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %65, i64 2
  %67 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %66, align 8
  tail call void %67(%"class.angle::pp::Lexer"* %60, %"struct.angle::pp::Token"* %1) #11
  br label %62

68:                                               ; preds = %62, %62, %48, %48, %33, %41, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser7parseIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser10parseIfdefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser11parseIfndefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser9parseElseEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %5, align 8
  %7 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %4, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %10 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %9, align 8
  %11 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %10, i32 24, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %11, %"class.std::__1::basic_string"* dereferenceable(24) %12) #11
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %14 = bitcast %"class.angle::pp::Tokenizer"** %13 to %"class.angle::pp::Lexer"**
  %15 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %14, align 8
  %16 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %17 = bitcast %"class.angle::pp::Lexer"* %15 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %18

18:                                               ; preds = %20, %8
  %19 = load i32, i32* %16, align 8
  switch i32 %19, label %20 [
    i32 10, label %86
    i32 0, label %86
  ]

20:                                               ; preds = %18
  %21 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %17, align 8
  %22 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %21, i64 2
  %23 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %22, align 8
  tail call void %23(%"class.angle::pp::Lexer"* %15, %"struct.angle::pp::Token"* %1) #11
  br label %18

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 2
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %30 = bitcast %"class.angle::pp::Tokenizer"** %29 to %"class.angle::pp::Lexer"**
  %31 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %30, align 8
  %32 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %33 = bitcast %"class.angle::pp::Lexer"* %31 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %34

34:                                               ; preds = %36, %28
  %35 = load i32, i32* %32, align 8
  switch i32 %35, label %36 [
    i32 10, label %86
    i32 0, label %86
  ]

36:                                               ; preds = %34
  %37 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %33, align 8
  %38 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %37, i64 2
  %39 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %38, align 8
  tail call void %39(%"class.angle::pp::Lexer"* %31, %"struct.angle::pp::Token"* %1) #11
  br label %34

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 5
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %46 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %45, align 8
  %47 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %48 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %46, i32 25, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %47, %"class.std::__1::basic_string"* dereferenceable(24) %48) #11
  %49 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %50 = bitcast %"class.angle::pp::Tokenizer"** %49 to %"class.angle::pp::Lexer"**
  %51 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %50, align 8
  %52 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %53 = bitcast %"class.angle::pp::Lexer"* %51 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %54

54:                                               ; preds = %56, %44
  %55 = load i32, i32* %52, align 8
  switch i32 %55, label %56 [
    i32 10, label %86
    i32 0, label %86
  ]

56:                                               ; preds = %54
  %57 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %57, i64 2
  %59 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %58, align 8
  tail call void %59(%"class.angle::pp::Lexer"* %51, %"struct.angle::pp::Token"* %1) #11
  br label %54

60:                                               ; preds = %40
  store i8 1, i8* %41, align 1
  %61 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 4
  %62 = load i8, i8* %61, align 2, !range !2
  %63 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 3
  store i8 %62, i8* %63, align 1
  store i8 1, i8* %61, align 2
  %64 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %65 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %64, align 8
  %66 = bitcast %"class.angle::pp::Tokenizer"* %65 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %67 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %67, i64 2
  %69 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %68, align 8
  tail call void %69(%"class.angle::pp::Tokenizer"* %65, %"struct.angle::pp::Token"* %1) #11
  %70 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  switch i32 %71, label %72 [
    i32 10, label %86
    i32 0, label %86
  ]

72:                                               ; preds = %60
  %73 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %74 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %73, align 8
  %75 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %76 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %74, i32 29, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %75, %"class.std::__1::basic_string"* dereferenceable(24) %76) #11
  %77 = bitcast %"class.angle::pp::Tokenizer"** %64 to %"class.angle::pp::Lexer"**
  %78 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %77, align 8
  %79 = bitcast %"class.angle::pp::Lexer"* %78 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %80

80:                                               ; preds = %82, %72
  %81 = load i32, i32* %70, align 8
  switch i32 %81, label %82 [
    i32 10, label %86
    i32 0, label %86
  ]

82:                                               ; preds = %80
  %83 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %79, align 8
  %84 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %83, i64 2
  %85 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %84, align 8
  tail call void %85(%"class.angle::pp::Lexer"* %78, %"struct.angle::pp::Token"* %1) #11
  br label %80

86:                                               ; preds = %34, %34, %54, %54, %80, %80, %18, %18, %60, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser9parseElifEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %5, align 8
  %7 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %4, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %10 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %9, align 8
  %11 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %10, i32 26, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %11, %"class.std::__1::basic_string"* dereferenceable(24) %12) #11
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %14 = bitcast %"class.angle::pp::Tokenizer"** %13 to %"class.angle::pp::Lexer"**
  %15 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %14, align 8
  %16 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %17 = bitcast %"class.angle::pp::Lexer"* %15 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %18

18:                                               ; preds = %20, %8
  %19 = load i32, i32* %16, align 8
  switch i32 %19, label %20 [
    i32 10, label %84
    i32 0, label %84
  ]

20:                                               ; preds = %18
  %21 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %17, align 8
  %22 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %21, i64 2
  %23 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %22, align 8
  tail call void %23(%"class.angle::pp::Lexer"* %15, %"struct.angle::pp::Token"* %1) #11
  br label %18

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 2
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %30 = bitcast %"class.angle::pp::Tokenizer"** %29 to %"class.angle::pp::Lexer"**
  %31 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %30, align 8
  %32 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %33 = bitcast %"class.angle::pp::Lexer"* %31 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %34

34:                                               ; preds = %36, %28
  %35 = load i32, i32* %32, align 8
  switch i32 %35, label %36 [
    i32 10, label %84
    i32 0, label %84
  ]

36:                                               ; preds = %34
  %37 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %33, align 8
  %38 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %37, i64 2
  %39 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %38, align 8
  tail call void %39(%"class.angle::pp::Lexer"* %31, %"struct.angle::pp::Token"* %1) #11
  br label %34

40:                                               ; preds = %24
  %41 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 5
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %46 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %45, align 8
  %47 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %48 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %46, i32 27, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %47, %"class.std::__1::basic_string"* dereferenceable(24) %48) #11
  %49 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %50 = bitcast %"class.angle::pp::Tokenizer"** %49 to %"class.angle::pp::Lexer"**
  %51 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %50, align 8
  %52 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %53 = bitcast %"class.angle::pp::Lexer"* %51 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %54

54:                                               ; preds = %56, %44
  %55 = load i32, i32* %52, align 8
  switch i32 %55, label %56 [
    i32 10, label %84
    i32 0, label %84
  ]

56:                                               ; preds = %54
  %57 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %57, i64 2
  %59 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %58, align 8
  tail call void %59(%"class.angle::pp::Lexer"* %51, %"struct.angle::pp::Token"* %1) #11
  br label %54

60:                                               ; preds = %40
  %61 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 4
  %62 = load i8, i8* %61, align 2, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 3
  store i8 1, i8* %65, align 1
  %66 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %67 = bitcast %"class.angle::pp::Tokenizer"** %66 to %"class.angle::pp::Lexer"**
  %68 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %67, align 8
  %69 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %70 = bitcast %"class.angle::pp::Lexer"* %68 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %71

71:                                               ; preds = %73, %64
  %72 = load i32, i32* %69, align 8
  switch i32 %72, label %73 [
    i32 10, label %84
    i32 0, label %84
  ]

73:                                               ; preds = %71
  %74 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %70, align 8
  %75 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %74, i64 2
  %76 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %75, align 8
  tail call void %76(%"class.angle::pp::Lexer"* %68, %"struct.angle::pp::Token"* %1) #11
  br label %71

77:                                               ; preds = %60
  %78 = tail call i32 @_ZN5angle2pp15DirectiveParser17parseExpressionIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1, i32 3
  %81 = zext i1 %79 to i8
  store i8 %81, i8* %80, align 1
  %82 = icmp ne i32 %78, 0
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %61, align 2
  br label %84

84:                                               ; preds = %34, %34, %54, %54, %71, %71, %18, %18, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser10parseEndifEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %5, align 8
  %7 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %4, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %10 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %9, align 8
  %11 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %10, i32 23, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %11, %"class.std::__1::basic_string"* dereferenceable(24) %12) #11
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %14 = bitcast %"class.angle::pp::Tokenizer"** %13 to %"class.angle::pp::Lexer"**
  %15 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %14, align 8
  %16 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %17 = bitcast %"class.angle::pp::Lexer"* %15 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %18

18:                                               ; preds = %20, %8
  %19 = load i32, i32* %16, align 8
  switch i32 %19, label %20 [
    i32 10, label %56
    i32 0, label %56
  ]

20:                                               ; preds = %18
  %21 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %17, align 8
  %22 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %21, i64 2
  %23 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %22, align 8
  tail call void %23(%"class.angle::pp::Lexer"* %15, %"struct.angle::pp::Token"* %1) #11
  br label %18

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %6, i64 -1
  %26 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %24, %30
  store %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %25, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %5, align 8
  %34 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %35 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %34, align 8
  %36 = bitcast %"class.angle::pp::Tokenizer"* %35 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %37 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %37, i64 2
  %39 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %38, align 8
  tail call void %39(%"class.angle::pp::Tokenizer"* %35, %"struct.angle::pp::Token"* %1) #11
  %40 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %42 [
    i32 10, label %56
    i32 0, label %56
  ]

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %44 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %43, align 8
  %45 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %44, i32 29, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %45, %"class.std::__1::basic_string"* dereferenceable(24) %46) #11
  %47 = bitcast %"class.angle::pp::Tokenizer"** %34 to %"class.angle::pp::Lexer"**
  %48 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %47, align 8
  %49 = bitcast %"class.angle::pp::Lexer"* %48 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %50

50:                                               ; preds = %52, %42
  %51 = load i32, i32* %40, align 8
  switch i32 %51, label %52 [
    i32 10, label %56
    i32 0, label %56
  ]

52:                                               ; preds = %50
  %53 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %49, align 8
  %54 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %53, i64 2
  %55 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %54, align 8
  tail call void %55(%"class.angle::pp::Lexer"* %48, %"struct.angle::pp::Token"* %1) #11
  br label %50

56:                                               ; preds = %50, %50, %18, %18, %33, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser10parseErrorEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_stringbuf"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = load i8*, i8** %15, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #11
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #11
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %35, align 8
  %37 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %38 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %37, align 8
  %39 = bitcast %"class.angle::pp::Tokenizer"* %38 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %40 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %40, i64 2
  %42 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %41, align 8
  call void %42(%"class.angle::pp::Tokenizer"* %38, %"struct.angle::pp::Token"* %1) #11
  %43 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %44 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  br label %45

45:                                               ; preds = %47, %2
  %46 = load i32, i32* %43, align 8
  switch i32 %46, label %47 [
    i32 10, label %54
    i32 0, label %54
  ]

47:                                               ; preds = %45
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5angle2pplsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5TokenE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %44, %"struct.angle::pp::Token"* dereferenceable(40) %1) #11
  %49 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %37, align 8
  %50 = bitcast %"class.angle::pp::Tokenizer"* %49 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %51 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %51, i64 2
  %53 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %52, align 8
  call void %53(%"class.angle::pp::Tokenizer"* %49, %"struct.angle::pp::Token"* %1) #11
  br label %45

54:                                               ; preds = %45, %45
  %55 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 8
  %56 = load %"class.angle::pp::DirectiveHandler"*, %"class.angle::pp::DirectiveHandler"** %55, align 8
  %57 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_stringbuf"* %10) #11
  %59 = bitcast %"class.angle::pp::DirectiveHandler"* %56 to void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)***
  %60 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)**, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)** %60, i64 2
  %62 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*)** %61, align 8
  call void %62(%"class.angle::pp::DirectiveHandler"* %56, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %57, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %63 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %54, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #11
  %71 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %71, i64* %13, align 8
  %72 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %73 = inttoptr i64 %71 to i8*
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %5, i64 %76
  %78 = bitcast i8* %77 to i64*
  store i64 %72, i64* %78, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %70
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %70, %83
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %44, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #11
  %87 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %88 = bitcast %"class.std::__1::basic_ios.base"* %87 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %88) #11
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser11parsePragmaEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %10 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %9, align 8
  %11 = bitcast %"class.angle::pp::Tokenizer"* %10 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %12 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %12, i64 2
  %14 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %13, align 8
  tail call void %14(%"class.angle::pp::Tokenizer"* %10, %"struct.angle::pp::Token"* %1) #11
  %15 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp eq i64 %23, 5
  br i1 %24, label %25, label %34

25:                                               ; preds = %2
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %15, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %25
  %29 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %9, align 8
  %30 = bitcast %"class.angle::pp::Tokenizer"* %29 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %31 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %31, i64 2
  %33 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %32, align 8
  tail call void %33(%"class.angle::pp::Tokenizer"* %29, %"struct.angle::pp::Token"* %1) #11
  br label %34

34:                                               ; preds = %2, %28, %25
  %35 = phi i1 [ true, %28 ], [ false, %25 ], [ false, %2 ]
  %36 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %37 = icmp eq %"class.std::__1::basic_string"* %4, %15
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = icmp eq %"class.std::__1::basic_string"* %3, %15
  %43 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  br label %45

45:                                               ; preds = %107, %34
  %46 = phi i8 [ 1, %34 ], [ %109, %107 ]
  %47 = phi i32 [ 0, %34 ], [ %50, %107 ]
  %48 = load i32, i32* %36, align 8
  switch i32 %48, label %49 [
    i32 10, label %115
    i32 0, label %115
  ]

49:                                               ; preds = %45
  %50 = add nuw nsw i32 %47, 1
  switch i32 %47, label %107 [
    i32 0, label %51
    i32 1, label %75
    i32 2, label %79
    i32 3, label %103
  ]

51:                                               ; preds = %49
  br i1 %42, label %70, label %52

52:                                               ; preds = %51
  %53 = load i8, i8* %44, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8, i8* %17, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %54, label %63, label %57

57:                                               ; preds = %52
  br i1 %56, label %59, label %58

58:                                               ; preds = %57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %40, i64 24, i1 false) #11
  br label %70

59:                                               ; preds = %57
  %60 = load i8*, i8** %41, align 8
  %61 = load i64, i64* %20, align 8
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %60, i64 %61) #11
  br label %70

63:                                               ; preds = %52
  %64 = load i8*, i8** %41, align 8
  %65 = load i64, i64* %20, align 8
  %66 = zext i8 %55 to i64
  %67 = select i1 %56, i8* %64, i8* %40
  %68 = select i1 %56, i64 %65, i64 %66
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %67, i64 %68) #11
  br label %70

70:                                               ; preds = %51, %58, %59, %63
  %71 = icmp eq i8 %46, 0
  br i1 %71, label %107, label %72

72:                                               ; preds = %70
  %73 = load i32, i32* %36, align 8
  %74 = icmp eq i32 %73, 258
  br label %107

75:                                               ; preds = %49
  %76 = icmp ne i8 %46, 0
  %77 = icmp eq i32 %48, 40
  %78 = and i1 %76, %77
  br label %107

79:                                               ; preds = %49
  br i1 %37, label %98, label %80

80:                                               ; preds = %79
  %81 = load i8, i8* %39, align 1
  %82 = icmp slt i8 %81, 0
  %83 = load i8, i8* %17, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %82, label %91, label %85

85:                                               ; preds = %80
  br i1 %84, label %87, label %86

86:                                               ; preds = %85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %40, i64 24, i1 false) #11
  br label %98

87:                                               ; preds = %85
  %88 = load i8*, i8** %41, align 8
  %89 = load i64, i64* %20, align 8
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %88, i64 %89) #11
  br label %98

91:                                               ; preds = %80
  %92 = load i8*, i8** %41, align 8
  %93 = load i64, i64* %20, align 8
  %94 = zext i8 %83 to i64
  %95 = select i1 %84, i8* %92, i8* %40
  %96 = select i1 %84, i64 %93, i64 %94
  %97 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %95, i64 %96) #11
  br label %98

98:                                               ; preds = %79, %86, %87, %91
  %99 = icmp eq i8 %46, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %98
  %101 = load i32, i32* %36, align 8
  %102 = icmp eq i32 %101, 258
  br label %107

103:                                              ; preds = %49
  %104 = icmp ne i8 %46, 0
  %105 = icmp eq i32 %48, 41
  %106 = and i1 %104, %105
  br label %107

107:                                              ; preds = %49, %100, %98, %72, %70, %103, %75
  %108 = phi i1 [ %106, %103 ], [ %78, %75 ], [ false, %70 ], [ %74, %72 ], [ false, %98 ], [ %102, %100 ], [ false, %49 ]
  %109 = zext i1 %108 to i8
  %110 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %9, align 8
  %111 = bitcast %"class.angle::pp::Tokenizer"* %110 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %112 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %112, i64 2
  %114 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %113, align 8
  call void %114(%"class.angle::pp::Tokenizer"* %110, %"struct.angle::pp::Token"* %1) #11
  br label %45

115:                                              ; preds = %45, %45
  %116 = icmp eq i8 %46, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %115
  switch i32 %47, label %118 [
    i32 0, label %130
    i32 1, label %122
    i32 4, label %122
  ]

118:                                              ; preds = %117, %115
  %119 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %120 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %119, align 8
  %121 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %120, i32 47, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %121, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  br label %130

122:                                              ; preds = %117, %117
  %123 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 8
  %124 = load %"class.angle::pp::DirectiveHandler"*, %"class.angle::pp::DirectiveHandler"** %123, align 8
  %125 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %126 = bitcast %"class.angle::pp::DirectiveHandler"* %124 to void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)***
  %127 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)**, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)** %127, i64 3
  %129 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1)** %128, align 8
  call void %129(%"class.angle::pp::DirectiveHandler"* %124, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %125, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext %35) #11
  br label %130

130:                                              ; preds = %117, %122, %118
  %131 = load i8, i8* %39, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %130, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  %136 = load i8, i8* %44, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %135, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser14parseExtensionEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %10 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %9, align 8
  %11 = bitcast %"class.angle::pp::Tokenizer"* %10 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %12 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %12, i64 2
  %14 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %13, align 8
  tail call void %14(%"class.angle::pp::Tokenizer"* %10, %"struct.angle::pp::Token"* %1) #11
  %15 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %17 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %19 = icmp eq %"class.std::__1::basic_string"* %4, %18
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = icmp eq %"class.std::__1::basic_string"* %3, %18
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  br label %30

30:                                               ; preds = %102, %2
  %31 = phi i8 [ 1, %2 ], [ %103, %102 ]
  %32 = phi i32 [ 0, %2 ], [ %35, %102 ]
  %33 = load i32, i32* %15, align 8
  switch i32 %33, label %34 [
    i32 10, label %109
    i32 0, label %109
  ]

34:                                               ; preds = %30
  %35 = add nuw nsw i32 %32, 1
  switch i32 %32, label %97 [
    i32 0, label %36
    i32 1, label %63
    i32 2, label %70
  ]

36:                                               ; preds = %34
  %37 = and i8 %31, 1
  %38 = icmp eq i8 %37, 0
  %39 = icmp eq i32 %33, 258
  %40 = or i1 %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %42, i32 30, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %102

43:                                               ; preds = %36
  %44 = or i1 %38, %27
  br i1 %44, label %102, label %45

45:                                               ; preds = %43
  %46 = load i8, i8* %29, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i8, i8* %23, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %47, label %56, label %50

50:                                               ; preds = %45
  br i1 %49, label %52, label %51

51:                                               ; preds = %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %24, i64 24, i1 false) #11
  br label %102

52:                                               ; preds = %50
  %53 = load i8*, i8** %25, align 8
  %54 = load i64, i64* %26, align 8
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %53, i64 %54) #11
  br label %102

56:                                               ; preds = %45
  %57 = load i8*, i8** %25, align 8
  %58 = load i64, i64* %26, align 8
  %59 = zext i8 %48 to i64
  %60 = select i1 %49, i8* %57, i8* %24
  %61 = select i1 %49, i64 %58, i64 %59
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %60, i64 %61) #11
  br label %102

63:                                               ; preds = %34
  %64 = and i8 %31, 1
  %65 = icmp eq i8 %64, 0
  %66 = icmp eq i32 %33, 58
  %67 = or i1 %65, %66
  br i1 %67, label %102, label %68

68:                                               ; preds = %63
  %69 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %69, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %102

70:                                               ; preds = %34
  %71 = and i8 %31, 1
  %72 = icmp eq i8 %71, 0
  %73 = icmp eq i32 %33, 258
  %74 = or i1 %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %76, i32 31, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %102

77:                                               ; preds = %70
  %78 = or i1 %72, %19
  br i1 %78, label %102, label %79

79:                                               ; preds = %77
  %80 = load i8, i8* %21, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i8, i8* %23, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %81, label %90, label %84

84:                                               ; preds = %79
  br i1 %83, label %86, label %85

85:                                               ; preds = %84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %24, i64 24, i1 false) #11
  br label %102

86:                                               ; preds = %84
  %87 = load i8*, i8** %25, align 8
  %88 = load i64, i64* %26, align 8
  %89 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %87, i64 %88) #11
  br label %102

90:                                               ; preds = %79
  %91 = load i8*, i8** %25, align 8
  %92 = load i64, i64* %26, align 8
  %93 = zext i8 %82 to i64
  %94 = select i1 %83, i8* %91, i8* %24
  %95 = select i1 %83, i64 %92, i64 %93
  %96 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %94, i64 %95) #11
  br label %102

97:                                               ; preds = %34
  %98 = and i8 %31, 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %101, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %102

102:                                              ; preds = %77, %43, %90, %86, %85, %75, %56, %52, %51, %41, %97, %63, %100, %68
  %103 = phi i8 [ 0, %100 ], [ %31, %97 ], [ %31, %77 ], [ 0, %68 ], [ %31, %63 ], [ %31, %43 ], [ 0, %41 ], [ %31, %51 ], [ %31, %52 ], [ %31, %56 ], [ 0, %75 ], [ %31, %85 ], [ %31, %86 ], [ %31, %90 ]
  %104 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %9, align 8
  %105 = bitcast %"class.angle::pp::Tokenizer"* %104 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %106 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %106, i64 2
  %108 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %107, align 8
  call void %108(%"class.angle::pp::Tokenizer"* %104, %"struct.angle::pp::Token"* %1) #11
  br label %30

109:                                              ; preds = %30, %30
  %110 = and i8 %31, 1
  %111 = icmp ne i8 %110, 0
  %112 = icmp ne i32 %32, 3
  %113 = and i1 %111, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  %115 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %115, i32 32, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %142

116:                                              ; preds = %109
  %117 = icmp eq i8 %110, 0
  br i1 %117, label %142, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 2
  %120 = load i8, i8* %119, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %135, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 9
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 299
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %127, i32 41, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %142

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 10, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 1
  %132 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %16, align 8
  br i1 %131, label %133, label %134

133:                                              ; preds = %128
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %132, i32 48, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %135

134:                                              ; preds = %128
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %132, i32 40, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* dereferenceable(24) %18) #11
  br label %142

135:                                              ; preds = %118, %133
  %136 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 8
  %137 = load %"class.angle::pp::DirectiveHandler"*, %"class.angle::pp::DirectiveHandler"** %136, align 8
  %138 = bitcast %"class.angle::pp::DirectiveHandler"* %137 to void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %139 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %139, i64 4
  %141 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %140, align 8
  call void %141(%"class.angle::pp::DirectiveHandler"* %137, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  br label %142

142:                                              ; preds = %116, %114, %134, %126, %135
  %143 = load i8, i8* %21, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %142, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  %148 = load i8, i8* %29, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %147, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser12parseVersionEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %9 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %8, align 8
  %10 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %9, i32 35, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %10, %"class.std::__1::basic_string"* dereferenceable(24) %11) #11
  %12 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %13 = bitcast %"class.angle::pp::Tokenizer"** %12 to %"class.angle::pp::Lexer"**
  %14 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %13, align 8
  %15 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %16 = bitcast %"class.angle::pp::Lexer"* %14 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %17

17:                                               ; preds = %19, %7
  %18 = load i32, i32* %15, align 8
  switch i32 %18, label %19 [
    i32 10, label %140
    i32 0, label %140
  ]

19:                                               ; preds = %17
  %20 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %16, align 8
  %21 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %20, i64 2
  %22 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %21, align 8
  tail call void %22(%"class.angle::pp::Lexer"* %14, %"struct.angle::pp::Token"* %1) #11
  br label %17

23:                                               ; preds = %2
  %24 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11
  store i32 0, i32* %3, align 4
  %25 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %26 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %25, align 8
  %27 = bitcast %"class.angle::pp::Tokenizer"* %26 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %28 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %28, i64 2
  %30 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %29, align 8
  tail call void %30(%"class.angle::pp::Tokenizer"* %26, %"struct.angle::pp::Token"* %1) #11
  %31 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %37 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %38 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 10, i32 1
  %39 = load i32, i32* %31, align 8
  br label %40

40:                                               ; preds = %94, %23
  %41 = phi i32 [ %39, %23 ], [ %102, %94 ]
  %42 = phi i32 [ 0, %23 ], [ %106, %94 ]
  %43 = phi i8 [ 1, %23 ], [ %95, %94 ]
  switch i32 %41, label %44 [
    i32 10, label %109
    i32 0, label %109
  ]

44:                                               ; preds = %40
  switch i32 %42, label %92 [
    i32 0, label %45
    i32 1, label %64
    i32 2, label %78
  ]

45:                                               ; preds = %44
  %46 = icmp eq i32 %41, 259
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %48, i32 33, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %94

49:                                               ; preds = %45
  %50 = and i8 %43, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %94, label %52

52:                                               ; preds = %49
  %53 = call zeroext i1 @_ZNK5angle2pp5Token6iValueEPi(%"struct.angle::pp::Token"* %1, i32* nonnull %3) #11
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %55, i32 5, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %94

56:                                               ; preds = %52
  %57 = load i32, i32* %38, align 4
  %58 = add i32 %57, -7
  %59 = icmp ult i32 %58, 2
  br i1 %59, label %94, label %60

60:                                               ; preds = %56
  %61 = load i32, i32* %3, align 4
  %62 = icmp slt i32 %61, 300
  %63 = select i1 %62, i32 3, i32 1
  br label %94

64:                                               ; preds = %44
  %65 = icmp eq i32 %41, 258
  br i1 %65, label %66, label %76

66:                                               ; preds = %64
  %67 = load i8, i8* %34, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i64, i64* %35, align 8
  %70 = zext i8 %67 to i64
  %71 = select i1 %68, i64 %69, i64 %70
  %72 = icmp eq i64 %71, 2
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %32, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #11
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %94, label %76

76:                                               ; preds = %73, %66, %64
  %77 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %77, i32 34, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %94

78:                                               ; preds = %44
  %79 = icmp eq i32 %41, 258
  br i1 %79, label %80, label %90

80:                                               ; preds = %78
  %81 = load i8, i8* %34, align 1
  %82 = icmp slt i8 %81, 0
  %83 = load i64, i64* %35, align 8
  %84 = zext i8 %81 to i64
  %85 = select i1 %82, i64 %83, i64 %84
  %86 = icmp eq i64 %85, 4
  br i1 %86, label %87, label %90

87:                                               ; preds = %80
  %88 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %32, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #11
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %87, %80, %78
  %91 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %91, i32 34, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %94

92:                                               ; preds = %44
  %93 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %93, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %94

94:                                               ; preds = %49, %73, %87, %47, %54, %90, %76, %60, %56, %92
  %95 = phi i8 [ 0, %92 ], [ %43, %56 ], [ %43, %60 ], [ 0, %76 ], [ %43, %73 ], [ 0, %90 ], [ %43, %87 ], [ 0, %54 ], [ 0, %47 ], [ %43, %49 ]
  %96 = phi i32 [ %42, %92 ], [ 2, %56 ], [ %63, %60 ], [ 3, %76 ], [ 3, %73 ], [ 3, %90 ], [ 3, %87 ], [ 0, %54 ], [ 0, %47 ], [ 0, %49 ]
  %97 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %25, align 8
  %98 = bitcast %"class.angle::pp::Tokenizer"* %97 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %99 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %99, i64 2
  %101 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %100, align 8
  call void %101(%"class.angle::pp::Tokenizer"* %97, %"struct.angle::pp::Token"* %1) #11
  %102 = load i32, i32* %31, align 8
  %103 = icmp eq i32 %102, 10
  %104 = icmp eq i32 %96, 2
  %105 = and i1 %104, %103
  %106 = select i1 %105, i32 3, i32 %96
  %107 = and i8 %95, 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %139, label %40

109:                                              ; preds = %40, %40
  %110 = icmp eq i32 %42, 3
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %112, i32 34, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %139

113:                                              ; preds = %109
  %114 = and i8 %43, 1
  %115 = icmp ne i8 %114, 0
  %116 = load i32, i32* %3, align 4
  %117 = icmp sgt i32 %116, 299
  %118 = and i1 %115, %117
  br i1 %118, label %119, label %125

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, 1
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  %124 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %36, align 8
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %124, i32 36, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, %"class.std::__1::basic_string"* dereferenceable(24) %32) #11
  br label %139

125:                                              ; preds = %113
  %126 = icmp eq i8 %114, 0
  br i1 %126, label %139, label %127

127:                                              ; preds = %119, %125
  %128 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 8
  %129 = load %"class.angle::pp::DirectiveHandler"*, %"class.angle::pp::DirectiveHandler"** %128, align 8
  %130 = load i32, i32* %38, align 4
  %131 = bitcast %"class.angle::pp::DirectiveHandler"* %129 to void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)***
  %132 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)**, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)** %132, i64 5
  %134 = load void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)*, void (%"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::SourceLocation"*, i32, i32)** %133, align 8
  call void %134(%"class.angle::pp::DirectiveHandler"* %129, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %37, i32 %116, i32 %130) #11
  %135 = load i32, i32* %3, align 4
  %136 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 9
  store i32 %135, i32* %136, align 8
  %137 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  %138 = load %"class.std::__1::map"*, %"class.std::__1::map"** %137, align 8
  call void @_ZN5angle2pp14PredefineMacroEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS0_5MacroEEENS1_4lessIS8_EENS6_INS1_4pairIKS8_SB_EEEEEEPKci(%"class.std::__1::map"* %138, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 %135) #11
  br label %139

139:                                              ; preds = %94, %111, %123, %125, %127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11
  br label %140

140:                                              ; preds = %17, %17, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser9parseLineEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.angle::pp::MacroExpander", align 8
  %7 = alloca %"class.angle::pp::ExpressionParser", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.angle::pp::ExpressionParser::ErrorSettings"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 1, i8* %3, align 1
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %4, align 4
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 0, i32* %5, align 4
  %12 = bitcast %"class.angle::pp::MacroExpander"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 120, i1 false)
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %14 = bitcast %"class.angle::pp::Tokenizer"** %13 to %"class.angle::pp::Lexer"**
  %15 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %14, align 8
  %16 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  %17 = load %"class.std::__1::map"*, %"class.std::__1::map"** %16, align 8
  %18 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %19 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %18, align 8
  %20 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 10
  call void @_ZN5angle2pp13MacroExpanderC1EPNS0_5LexerEPNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_10shared_ptrINS0_5MacroEEENS4_4lessISB_EENS9_INS4_4pairIKSB_SE_EEEEEEPNS0_11DiagnosticsERKNS0_20PreprocessorSettingsEb(%"class.angle::pp::MacroExpander"* nonnull %6, %"class.angle::pp::Lexer"* %15, %"class.std::__1::map"* %17, %"class.angle::pp::Diagnostics"* %19, %"struct.angle::pp::PreprocessorSettings"* dereferenceable(8) %20, i1 zeroext false) #11
  call void @_ZN5angle2pp13MacroExpander3lexEPNS0_5TokenE(%"class.angle::pp::MacroExpander"* nonnull %6, %"struct.angle::pp::Token"* %1) #11
  %21 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %27 [
    i32 10, label %23
    i32 0, label %23
  ]

23:                                               ; preds = %2, %2
  %24 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %18, align 8
  %25 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %24, i32 39, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %25, %"class.std::__1::basic_string"* dereferenceable(24) %26) #11
  store i8 0, i8* %3, align 1
  br label %72

27:                                               ; preds = %2
  %28 = bitcast %"class.angle::pp::ExpressionParser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.angle::pp::MacroExpander", %"class.angle::pp::MacroExpander"* %6, i64 0, i32 0
  %30 = bitcast %"class.angle::pp::ExpressionParser"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %31 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %18, align 8
  call void @_ZN5angle2pp16ExpressionParserC1EPNS0_5LexerEPNS0_11DiagnosticsE(%"class.angle::pp::ExpressionParser"* nonnull %7, %"class.angle::pp::Lexer"* nonnull %29, %"class.angle::pp::Diagnostics"* %31) #11
  %32 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  store i64 -6148915419949301723, i64* %8, align 8
  %33 = bitcast i64* %8 to i32*
  %34 = call zeroext i1 @_ZN5angle2pp16ExpressionParser5parseEPNS0_5TokenEPibRKNS1_13ErrorSettingsEPb(%"class.angle::pp::ExpressionParser"* nonnull %7, %"struct.angle::pp::Token"* %1, i32* nonnull %4, i1 zeroext true, %"struct.angle::pp::ExpressionParser::ErrorSettings"* nonnull dereferenceable(8) %9, i8* nonnull %3) #11
  %35 = load i8, i8* %3, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %27
  %38 = load i32, i32* %21, align 8
  switch i32 %38, label %39 [
    i32 10, label %44
    i32 0, label %44
  ]

39:                                               ; preds = %37
  store i32 38, i32* %33, align 8
  %40 = call zeroext i1 @_ZN5angle2pp16ExpressionParser5parseEPNS0_5TokenEPibRKNS1_13ErrorSettingsEPb(%"class.angle::pp::ExpressionParser"* nonnull %7, %"struct.angle::pp::Token"* %1, i32* nonnull %5, i1 zeroext true, %"struct.angle::pp::ExpressionParser::ErrorSettings"* nonnull dereferenceable(8) %9, i8* nonnull %3) #11
  br label %41

41:                                               ; preds = %39, %27
  %42 = phi i1 [ false, %27 ], [ true, %39 ]
  %43 = load i32, i32* %21, align 8
  br label %44

44:                                               ; preds = %41, %37, %37
  %45 = phi i32 [ %43, %41 ], [ %38, %37 ], [ %38, %37 ]
  %46 = phi i1 [ %42, %41 ], [ false, %37 ], [ false, %37 ]
  switch i32 %45, label %47 [
    i32 10, label %63
    i32 0, label %63
  ]

47:                                               ; preds = %44
  %48 = load i8, i8* %3, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %18, align 8
  %52 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %53 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %51, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %52, %"class.std::__1::basic_string"* dereferenceable(24) %53) #11
  store i8 0, i8* %3, align 1
  br label %54

54:                                               ; preds = %47, %50
  %55 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %14, align 8
  %56 = bitcast %"class.angle::pp::Lexer"* %55 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %57

57:                                               ; preds = %59, %54
  %58 = load i32, i32* %21, align 8
  switch i32 %58, label %59 [
    i32 10, label %63
    i32 0, label %63
  ]

59:                                               ; preds = %57
  %60 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %56, align 8
  %61 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %60, i64 2
  %62 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %61, align 8
  call void %62(%"class.angle::pp::Lexer"* %55, %"struct.angle::pp::Token"* %1) #11
  br label %57

63:                                               ; preds = %57, %57, %44, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  %64 = load i8, i8* %3, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %13, align 8
  %68 = load i32, i32* %4, align 4
  call void @_ZN5angle2pp9Tokenizer13setLineNumberEi(%"class.angle::pp::Tokenizer"* %67, i32 %68) #11
  br i1 %46, label %69, label %72

69:                                               ; preds = %66
  %70 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %13, align 8
  %71 = load i32, i32* %5, align 4
  call void @_ZN5angle2pp9Tokenizer13setFileNumberEi(%"class.angle::pp::Tokenizer"* %70, i32 %71) #11
  br label %72

72:                                               ; preds = %23, %63, %66, %69
  call void @_ZN5angle2pp13MacroExpanderD1Ev(%"class.angle::pp::MacroExpander"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret void
}

declare void @_ZN5angle2pp5Token18setHasLeadingSpaceEb(%"struct.angle::pp::Token"*, i1 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZNK5angle2pp5Macro6equalsERKS1_(%"struct.angle::pp::Macro"*, %"struct.angle::pp::Macro"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle2pp15DirectiveParser18parseConditionalIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.angle::pp::DirectiveParser::ConditionalBlock", align 8
  %4 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 36, i1 false) #11
  %5 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 0
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %5
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %14, i64 24, i1 false) #11
  br label %21

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %17, i64 %19) #11
  br label %21

21:                                               ; preds = %2, %13, %15
  %22 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 1
  %24 = bitcast %"struct.angle::pp::SourceLocation"* %22 to i64*
  %25 = bitcast %"struct.angle::pp::SourceLocation"* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 0
  %28 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %27, align 8
  %29 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 1
  %30 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %29, align 8
  %31 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %28, %30
  br i1 %31, label %53, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %30, i64 -1, i32 2
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %30, i64 -1, i32 3
  %36 = load i8, i8* %35, align 1
  %37 = or i8 %36, %34
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %41 = bitcast %"class.angle::pp::Tokenizer"** %40 to %"class.angle::pp::Lexer"**
  %42 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %41, align 8
  %43 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %44 = bitcast %"class.angle::pp::Lexer"* %42 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %45

45:                                               ; preds = %47, %39
  %46 = load i32, i32* %43, align 8
  switch i32 %46, label %47 [
    i32 10, label %51
    i32 0, label %51
  ]

47:                                               ; preds = %45
  %48 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %44, align 8
  %49 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %48, i64 2
  %50 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %49, align 8
  call void %50(%"class.angle::pp::Lexer"* %42, %"struct.angle::pp::Token"* %1) #11
  br label %45

51:                                               ; preds = %45, %45
  %52 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 2
  store i8 1, i8* %52, align 8
  br label %71

53:                                               ; preds = %32, %21
  %54 = call fastcc i32 @_ZN5angle12_GLOBAL__N_112getDirectiveEPKNS_2pp5TokenE(%"struct.angle::pp::Token"* %1)
  switch i32 %54, label %63 [
    i32 3, label %55
    i32 4, label %57
    i32 5, label %59
  ]

55:                                               ; preds = %53
  %56 = call i32 @_ZN5angle2pp15DirectiveParser17parseExpressionIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %63

57:                                               ; preds = %53
  %58 = call i32 @_ZN5angle2pp15DirectiveParser20parseExpressionIfdefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  br label %63

59:                                               ; preds = %53
  %60 = call i32 @_ZN5angle2pp15DirectiveParser20parseExpressionIfdefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* %0, %"struct.angle::pp::Token"* %1)
  %61 = icmp eq i32 %60, 0
  %62 = zext i1 %61 to i32
  br label %63

63:                                               ; preds = %53, %59, %57, %55
  %64 = phi i32 [ 0, %53 ], [ %62, %59 ], [ %58, %57 ], [ %56, %55 ]
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 3
  %67 = zext i1 %65 to i8
  store i8 %67, i8* %66, align 1
  %68 = icmp ne i32 %64, 0
  %69 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 4
  %70 = zext i1 %68 to i8
  store i8 %70, i8* %69, align 2
  br label %71

71:                                               ; preds = %63, %51
  %72 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %29, align 8
  %73 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %74 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %73, align 8
  %75 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %72, %74
  br i1 %75, label %96, label %76

76:                                               ; preds = %71
  %77 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %4, i64 24, i1 false) #11
  br label %89

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %72, i64 0, i32 0
  %85 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %84, i8* %86, i64 %88) #11
  br label %89

89:                                               ; preds = %83, %81
  %90 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %72, i64 0, i32 1
  %91 = bitcast %"struct.angle::pp::SourceLocation"* %90 to i8*
  %92 = bitcast %"struct.angle::pp::SourceLocation"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 12, i1 false) #11
  %93 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %72, i64 1
  %94 = ptrtoint %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %93 to i64
  %95 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %29 to i64*
  store i64 %94, i64* %95, align 8
  br label %99

96:                                               ; preds = %71
  %97 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorIN5angle2pp15DirectiveParser16ConditionalBlockENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"* %97, %"struct.angle::pp::DirectiveParser::ConditionalBlock"* nonnull dereferenceable(40) %3) #11
  %98 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %99

99:                                               ; preds = %89, %96
  %100 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %77, %89 ], [ %98, %96 ]
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %99, %104
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5angle2pp15DirectiveParser17parseExpressionIfEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"*, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.angle::pp::MacroExpander", align 8
  %4 = alloca %"class.angle::pp::ExpressionParser", align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.angle::pp::ExpressionParser::ErrorSettings"*
  %8 = alloca i8, align 1
  %9 = bitcast %"class.angle::pp::MacroExpander"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 120, i1 false)
  %10 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %11 = bitcast %"class.angle::pp::Tokenizer"** %10 to %"class.angle::pp::Lexer"**
  %12 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %11, align 8
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  %14 = load %"class.std::__1::map"*, %"class.std::__1::map"** %13, align 8
  %15 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %16 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %15, align 8
  %17 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 10
  call void @_ZN5angle2pp13MacroExpanderC1EPNS0_5LexerEPNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_10shared_ptrINS0_5MacroEEENS4_4lessISB_EENS9_INS4_4pairIKSB_SE_EEEEEEPNS0_11DiagnosticsERKNS0_20PreprocessorSettingsEb(%"class.angle::pp::MacroExpander"* nonnull %3, %"class.angle::pp::Lexer"* %12, %"class.std::__1::map"* %14, %"class.angle::pp::Diagnostics"* %16, %"struct.angle::pp::PreprocessorSettings"* dereferenceable(8) %17, i1 zeroext true) #11
  %18 = bitcast %"class.angle::pp::ExpressionParser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.angle::pp::MacroExpander", %"class.angle::pp::MacroExpander"* %3, i64 0, i32 0
  %20 = bitcast %"class.angle::pp::ExpressionParser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %15, align 8
  call void @_ZN5angle2pp16ExpressionParserC1EPNS0_5LexerEPNS0_11DiagnosticsE(%"class.angle::pp::ExpressionParser"* nonnull %4, %"class.angle::pp::Lexer"* nonnull %19, %"class.angle::pp::Diagnostics"* %21) #11
  %22 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #11
  store i32 0, i32* %5, align 4
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  store i64 -6148915424244269027, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 1, i8* %8, align 1
  %24 = call zeroext i1 @_ZN5angle2pp16ExpressionParser5parseEPNS0_5TokenEPibRKNS1_13ErrorSettingsEPb(%"class.angle::pp::ExpressionParser"* nonnull %4, %"struct.angle::pp::Token"* %1, i32* nonnull %5, i1 zeroext false, %"struct.angle::pp::ExpressionParser::ErrorSettings"* nonnull dereferenceable(8) %7, i8* nonnull %8) #11
  %25 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %27 [
    i32 10, label %39
    i32 0, label %39
  ]

27:                                               ; preds = %2
  %28 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %15, align 8
  %29 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %30 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %28, i32 29, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %29, %"class.std::__1::basic_string"* dereferenceable(24) %30) #11
  %31 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %11, align 8
  %32 = bitcast %"class.angle::pp::Lexer"* %31 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %33

33:                                               ; preds = %35, %27
  %34 = load i32, i32* %25, align 8
  switch i32 %34, label %35 [
    i32 10, label %39
    i32 0, label %39
  ]

35:                                               ; preds = %33
  %36 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %32, align 8
  %37 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %36, i64 2
  %38 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %37, align 8
  call void %38(%"class.angle::pp::Lexer"* %31, %"struct.angle::pp::Token"* %1) #11
  br label %33

39:                                               ; preds = %33, %33, %2, %2
  %40 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  call void @_ZN5angle2pp13MacroExpanderD1Ev(%"class.angle::pp::MacroExpander"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %9) #11
  ret i32 %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5angle2pplsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5TokenE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.angle::pp::Token"* dereferenceable(40)) local_unnamed_addr #5

declare zeroext i1 @_ZNK5angle2pp5Token6iValueEPi(%"struct.angle::pp::Token"*, i32*) local_unnamed_addr #5

declare void @_ZN5angle2pp14PredefineMacroEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10shared_ptrINS0_5MacroEEENS1_4lessIS8_EENS6_INS1_4pairIKS8_SB_EEEEEEPKci(%"class.std::__1::map"*, i8*, i32) local_unnamed_addr #5

declare void @_ZN5angle2pp13MacroExpanderC1EPNS0_5LexerEPNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS4_10shared_ptrINS0_5MacroEEENS4_4lessISB_EENS9_INS4_4pairIKSB_SE_EEEEEEPNS0_11DiagnosticsERKNS0_20PreprocessorSettingsEb(%"class.angle::pp::MacroExpander"*, %"class.angle::pp::Lexer"*, %"class.std::__1::map"*, %"class.angle::pp::Diagnostics"*, %"struct.angle::pp::PreprocessorSettings"* dereferenceable(8), i1 zeroext) unnamed_addr #5

declare void @_ZN5angle2pp13MacroExpander3lexEPNS0_5TokenE(%"class.angle::pp::MacroExpander"*, %"struct.angle::pp::Token"*) unnamed_addr #5

declare void @_ZN5angle2pp16ExpressionParserC1EPNS0_5LexerEPNS0_11DiagnosticsE(%"class.angle::pp::ExpressionParser"*, %"class.angle::pp::Lexer"*, %"class.angle::pp::Diagnostics"*) unnamed_addr #5

declare zeroext i1 @_ZN5angle2pp16ExpressionParser5parseEPNS0_5TokenEPibRKNS1_13ErrorSettingsEPb(%"class.angle::pp::ExpressionParser"*, %"struct.angle::pp::Token"*, i32*, i1 zeroext, %"struct.angle::pp::ExpressionParser::ErrorSettings"* dereferenceable(8), i8*) local_unnamed_addr #5

declare void @_ZN5angle2pp9Tokenizer13setLineNumberEi(%"class.angle::pp::Tokenizer"*, i32) local_unnamed_addr #5

declare void @_ZN5angle2pp9Tokenizer13setFileNumberEi(%"class.angle::pp::Tokenizer"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5angle2pp13MacroExpanderD1Ev(%"class.angle::pp::MacroExpander"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5angle2pp15DirectiveParser20parseExpressionIfdefEPNS0_5TokenE(%"class.angle::pp::DirectiveParser"* nocapture readonly, %"struct.angle::pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 5
  %4 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %3, align 8
  %5 = bitcast %"class.angle::pp::Tokenizer"* %4 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %6 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %6, i64 2
  %8 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %7, align 8
  tail call void %8(%"class.angle::pp::Tokenizer"* %4, %"struct.angle::pp::Token"* %1) #11
  %9 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 258
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %14 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %13, align 8
  %15 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %14, i32 11, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %15, %"class.std::__1::basic_string"* dereferenceable(24) %16) #11
  %17 = bitcast %"class.angle::pp::Tokenizer"** %3 to %"class.angle::pp::Lexer"**
  %18 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %17, align 8
  %19 = bitcast %"class.angle::pp::Lexer"* %18 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %20

20:                                               ; preds = %22, %12
  %21 = load i32, i32* %9, align 8
  switch i32 %21, label %22 [
    i32 10, label %55
    i32 0, label %55
  ]

22:                                               ; preds = %20
  %23 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %19, align 8
  %24 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %23, i64 2
  %25 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %24, align 8
  tail call void %25(%"class.angle::pp::Lexer"* %18, %"struct.angle::pp::Token"* %1) #11
  br label %20

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 6
  %28 = load %"class.std::__1::map"*, %"class.std::__1::map"** %27, align 8
  %29 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %30 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %28, i64 0, i32 0
  %31 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"* %30, %"class.std::__1::basic_string"* dereferenceable(24) %29) #11
  %32 = load %"class.std::__1::map"*, %"class.std::__1::map"** %27, align 8
  %33 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = icmp ne %"class.std::__1::__tree_end_node"* %31, %33
  %35 = zext i1 %34 to i32
  %36 = load %"class.angle::pp::Tokenizer"*, %"class.angle::pp::Tokenizer"** %3, align 8
  %37 = bitcast %"class.angle::pp::Tokenizer"* %36 to void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)***
  %38 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %38, i64 2
  %40 = load void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Tokenizer"*, %"struct.angle::pp::Token"*)** %39, align 8
  tail call void %40(%"class.angle::pp::Tokenizer"* %36, %"struct.angle::pp::Token"* %1) #11
  %41 = load i32, i32* %9, align 8
  switch i32 %41, label %42 [
    i32 10, label %55
    i32 0, label %55
  ]

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.angle::pp::DirectiveParser", %"class.angle::pp::DirectiveParser"* %0, i64 0, i32 7
  %44 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %43, align 8
  %45 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 2
  tail call void @_ZN5angle2pp11Diagnostics6reportENS1_2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.angle::pp::Diagnostics"* %44, i32 29, %"struct.angle::pp::SourceLocation"* dereferenceable(8) %45, %"class.std::__1::basic_string"* dereferenceable(24) %29) #11
  %46 = bitcast %"class.angle::pp::Tokenizer"** %3 to %"class.angle::pp::Lexer"**
  %47 = load %"class.angle::pp::Lexer"*, %"class.angle::pp::Lexer"** %46, align 8
  %48 = bitcast %"class.angle::pp::Lexer"* %47 to void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)***
  br label %49

49:                                               ; preds = %51, %42
  %50 = load i32, i32* %9, align 8
  switch i32 %50, label %51 [
    i32 10, label %55
    i32 0, label %55
  ]

51:                                               ; preds = %49
  %52 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)**, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*** %48, align 8
  %53 = getelementptr inbounds void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %52, i64 2
  %54 = load void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)*, void (%"class.angle::pp::Lexer"*, %"struct.angle::pp::Token"*)** %53, align 8
  tail call void %54(%"class.angle::pp::Lexer"* %47, %"struct.angle::pp::Token"* %1) #11
  br label %49

55:                                               ; preds = %20, %20, %49, %49, %26, %26
  %56 = phi i32 [ %35, %26 ], [ %35, %26 ], [ %35, %49 ], [ %35, %49 ], [ 0, %20 ], [ 0, %20 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5angle2pp5MacroC1Ev(%"struct.angle::pp::Macro"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #11
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >::_Storage"* %2 to %"struct.angle::pp::Macro"*
  tail call void @_ZN5angle2pp5MacroD1Ev(%"struct.angle::pp::Macro"* %3) #11
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN5angle2pp5MacroENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5angle2pp5MacroD1Ev(%"struct.angle::pp::Macro"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.21"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.21"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle2pp5TokenENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.28"*, %"struct.angle::pp::Token"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.angle::pp::Token"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.angle::pp::Token"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.angle::pp::Token"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.angle::pp::Token"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %33, i64 %32
  %36 = ptrtoint %"struct.angle::pp::Token"* %35 to i64
  %37 = bitcast %"struct.angle::pp::Token"* %34 to i8*
  %38 = bitcast %"struct.angle::pp::Token"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #11
  %39 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %33, i64 %9, i32 3
  %40 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #11
  br label %53

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %39, i8* %50, i64 %52) #11
  br label %53

53:                                               ; preds = %45, %48
  %54 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %34, i64 1
  %55 = ptrtoint %"struct.angle::pp::Token"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %57 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %56, align 8
  %58 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %3, align 8
  %59 = icmp eq %"struct.angle::pp::Token"* %58, %57
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = ptrtoint %"struct.angle::pp::Token"* %57 to i64
  br label %77

62:                                               ; preds = %53, %62
  %63 = phi %"struct.angle::pp::Token"* [ %65, %62 ], [ %34, %53 ]
  %64 = phi %"struct.angle::pp::Token"* [ %66, %62 ], [ %58, %53 ]
  %65 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %63, i64 -1
  %66 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %64, i64 -1
  %67 = bitcast %"struct.angle::pp::Token"* %65 to i8*
  %68 = bitcast %"struct.angle::pp::Token"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #11
  %69 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %63, i64 -1, i32 3
  %70 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %64, i64 -1, i32 3
  %71 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %72 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #11
  %73 = icmp eq %"struct.angle::pp::Token"* %66, %57
  br i1 %73, label %74, label %62

74:                                               ; preds = %62
  %75 = load i64, i64* %6, align 8
  %76 = load %"struct.angle::pp::Token"*, %"struct.angle::pp::Token"** %3, align 8
  br label %77

77:                                               ; preds = %60, %74
  %78 = phi %"struct.angle::pp::Token"* [ %57, %60 ], [ %76, %74 ]
  %79 = phi %"struct.angle::pp::Token"* [ %34, %60 ], [ %65, %74 ]
  %80 = phi i64 [ %61, %60 ], [ %75, %74 ]
  %81 = ptrtoint %"struct.angle::pp::Token"* %79 to i64
  store i64 %81, i64* %6, align 8
  store i64 %55, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %82 = inttoptr i64 %80 to %"struct.angle::pp::Token"*
  %83 = icmp eq %"struct.angle::pp::Token"* %78, %82
  br i1 %83, label %97, label %84

84:                                               ; preds = %77, %95
  %85 = phi %"struct.angle::pp::Token"* [ %86, %95 ], [ %78, %77 ]
  %86 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %85, i64 -1
  %87 = getelementptr inbounds %"struct.angle::pp::Token", %"struct.angle::pp::Token"* %85, i64 -1, i32 3
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %92, %84
  %96 = icmp eq %"struct.angle::pp::Token"* %86, %82
  br i1 %96, label %97, label %84

97:                                               ; preds = %95, %77
  %98 = icmp eq i64 %80, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = inttoptr i64 %80 to i8*
  tail call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %97, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISO_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE5eraseENS_21__tree_const_iteratorISD_PNS_11__tree_nodeISD_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #11
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__shared_weak_count"**
  %48 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %47, align 8
  %49 = icmp eq %"class.std::__1::__shared_weak_count"* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 0, i32 1
  %52 = atomicrmw add i64* %51, i64 -1 acq_rel
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 0
  %56 = bitcast %"class.std::__1::__shared_weak_count"* %48 to void (%"class.std::__1::__shared_count"*)***
  %57 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %57, i64 2
  %59 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %58, align 8
  tail call void %59(%"class.std::__1::__shared_count"* %55) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %48) #11
  br label %60

60:                                               ; preds = %54, %50, %38
  %61 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %60, %65
  %69 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #5

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #5

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5angle2pp15DirectiveParser16ConditionalBlockENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.angle::pp::DirectiveParser::ConditionalBlock"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %33, i64 %32
  %36 = ptrtoint %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %35 to i64
  %37 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %34 to i8*
  %43 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %50

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %34, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %47, i64 %49) #11
  br label %50

50:                                               ; preds = %41, %44
  %51 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %33, i64 %9, i32 1
  %52 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %1, i64 0, i32 1
  %53 = bitcast %"struct.angle::pp::SourceLocation"* %51 to i8*
  %54 = bitcast %"struct.angle::pp::SourceLocation"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #11
  %55 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %34, i64 1
  %56 = ptrtoint %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %58 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %57, align 8
  %59 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %3, align 8
  %60 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %59, %58
  br i1 %60, label %61, label %63

61:                                               ; preds = %50
  %62 = ptrtoint %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %58 to i64
  br label %78

63:                                               ; preds = %50, %63
  %64 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %66, %63 ], [ %34, %50 ]
  %65 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %67, %63 ], [ %59, %50 ]
  %66 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %64, i64 -1
  %67 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %65, i64 -1
  %68 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %66 to i8*
  %69 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #11
  %70 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %64, i64 -1, i32 1
  %71 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %65, i64 -1, i32 1
  %72 = bitcast %"struct.angle::pp::SourceLocation"* %70 to i8*
  %73 = bitcast %"struct.angle::pp::SourceLocation"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 12, i1 false) #11
  %74 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %67, %58
  br i1 %74, label %75, label %63

75:                                               ; preds = %63
  %76 = load i64, i64* %6, align 8
  %77 = load %"struct.angle::pp::DirectiveParser::ConditionalBlock"*, %"struct.angle::pp::DirectiveParser::ConditionalBlock"** %3, align 8
  br label %78

78:                                               ; preds = %61, %75
  %79 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %58, %61 ], [ %77, %75 ]
  %80 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %34, %61 ], [ %66, %75 ]
  %81 = phi i64 [ %62, %61 ], [ %76, %75 ]
  %82 = ptrtoint %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %80 to i64
  store i64 %82, i64* %6, align 8
  store i64 %56, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %83 = inttoptr i64 %81 to %"struct.angle::pp::DirectiveParser::ConditionalBlock"*
  %84 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %79, %83
  br i1 %84, label %97, label %85

85:                                               ; preds = %78, %95
  %86 = phi %"struct.angle::pp::DirectiveParser::ConditionalBlock"* [ %87, %95 ], [ %79, %78 ]
  %87 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %86, i64 -1
  %88 = bitcast %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"struct.angle::pp::DirectiveParser::ConditionalBlock", %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %92, %85
  %96 = icmp eq %"struct.angle::pp::DirectiveParser::ConditionalBlock"* %87, %83
  br i1 %96, label %97, label %85

97:                                               ; preds = %95, %78
  %98 = icmp eq i64 %81, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = inttoptr i64 %81 to i8*
  tail call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %97, %99
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_10shared_ptrIN5angle2pp5MacroEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19make_pairIRNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_10shared_ptrIN5angle2pp5MacroEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE16__construct_nodeIJNS_4pairIS7_SC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN5angle2pp5MacroEEEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE16__construct_nodeIJNS_4pairIS7_SC_EEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS5_ISQ_EEEEEEDpOT_"}
