; ModuleID = '../../net/third_party/nss/ssl/cmpcert.cc'
source_filename = "../../net/third_party/nss/ssl/cmpcert.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.10" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %struct.CERTCertificateStr* }
%struct.CERTCertificateStr = type { %struct.PLArenaPool*, i8*, i8*, %struct.CERTSignedDataStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.CERTNameStr, %struct.CERTValidityStr, %struct.CERTNameStr, %struct.CERTSubjectPublicKeyInfoStr, %struct.SECItemStr, %struct.SECItemStr, %struct.CERTCertExtensionStr**, i8*, %struct.NSSTrustDomainStr*, %struct.SECItemStr, i32, i32, i32, i32, i32, i32, i32, %struct.CERTOKDomainNameStr*, i32, i32, i8*, i8*, %struct.NSSCertificateStr*, %struct.CERTCertTrustStr*, i32, %struct.CERTSubjectListStr*, %struct.CERTAuthKeyIDStr*, i32, %union.anon.23, i32, %struct.PK11SlotInfoStr*, i64, i32, %struct.CERTCertDistrustStr* }
%struct.PLArenaPool = type { %struct.PLArena, %struct.PLArena*, i32, i64 }
%struct.PLArena = type { %struct.PLArena*, i64, i64, i64 }
%struct.CERTSignedDataStr = type { %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.SECAlgorithmIDStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTValidityStr = type { %struct.PLArenaPool*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTNameStr = type { %struct.PLArenaPool*, %struct.CERTRDNStr** }
%struct.CERTRDNStr = type { %struct.CERTAVAStr** }
%struct.CERTAVAStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTSubjectPublicKeyInfoStr = type { %struct.PLArenaPool*, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.CERTCertExtensionStr = type { %struct.SECItemStr, %struct.SECItemStr, %struct.SECItemStr }
%struct.NSSTrustDomainStr = type opaque
%struct.SECItemStr = type { i32, i8*, i32 }
%struct.CERTOKDomainNameStr = type { %struct.CERTOKDomainNameStr*, i8* }
%struct.NSSCertificateStr = type opaque
%struct.CERTCertTrustStr = type { i32, i32, i32 }
%struct.CERTSubjectListStr = type { %struct.PLArenaPool*, i32, i8*, %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, i8* }
%struct.CERTSubjectNodeStr = type { %struct.CERTSubjectNodeStr*, %struct.CERTSubjectNodeStr*, %struct.SECItemStr, %struct.SECItemStr }
%struct.CERTAuthKeyIDStr = type { %struct.SECItemStr, %struct.CERTGeneralNameStr*, %struct.SECItemStr, %struct.SECItemStr** }
%struct.CERTGeneralNameStr = type { i32, %union.anon.22, %struct.SECItemStr, %struct.PRCListStr }
%union.anon.22 = type { %struct.OtherNameStr }
%struct.OtherNameStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.PRCListStr = type { %struct.PRCListStr*, %struct.PRCListStr* }
%union.anon.23 = type { i8* }
%struct.PK11SlotInfoStr = type opaque
%struct.CERTCertDistrustStr = type { %struct.SECItemStr, %struct.SECItemStr }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr.19"* }
%"class.net::der::Input" = type { i8*, i64 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.net::CertErrors" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI18CERTCertificateStrN3net19FreeCERTCertificateEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net29MatchClientCertificateIssuersEPNS_15X509CertificateERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEPNS3_INS2_10unique_ptrI18CERTCertificateStrNS_19FreeCERTCertificateEEENS7_ISH_EEEE(%"class.net::X509Certificate"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.17"*) local_unnamed_addr #0 {
  %4 = alloca %"class.net::der::Input", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca %"class.net::der::BitString", align 8
  %9 = alloca %"class.net::der::Input", align 8
  %10 = alloca %"struct.net::ParsedTbsCertificate", align 8
  %11 = alloca %"struct.net::ParseCertificateOptions", align 1
  %12 = alloca %"class.net::der::Input", align 8
  %13 = alloca %"class.net::der::Input", align 8
  %14 = alloca %"class.net::der::Input", align 8
  %15 = alloca %struct.SECItemStr, align 8
  %16 = alloca %"class.std::__1::unique_ptr.19", align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2, i64 0, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.19"* %20, %18
  br i1 %21, label %31, label %22

22:                                               ; preds = %3, %29
  %23 = phi %"class.std::__1::unique_ptr.19"* [ %24, %29 ], [ %20, %3 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %23, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %struct.CERTCertificateStr*, %struct.CERTCertificateStr** %25, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %25, align 8
  %27 = icmp eq %struct.CERTCertificateStr* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  tail call void @CERT_DestroyCertificate(%struct.CERTCertificateStr* nonnull %26) #9
  br label %29

29:                                               ; preds = %28, %22
  %30 = icmp eq %"class.std::__1::unique_ptr.19"* %24, %18
  br i1 %30, label %31, label %22

31:                                               ; preds = %29, %3
  store %"class.std::__1::unique_ptr.19"* %18, %"class.std::__1::unique_ptr.19"** %19, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %36 = icmp eq %"class.std::__1::basic_string"* %33, %35
  br i1 %36, label %140, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.net::der::Input"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  %39 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %12, i64 0, i32 1
  %40 = bitcast %"class.net::der::Input"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %12) #9
  %41 = bitcast %"class.net::der::Input"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #9
  %42 = bitcast %"class.net::der::Input"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %13) #9
  %43 = bitcast %"class.net::der::Input"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #9
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #9
  %44 = bitcast %"class.net::der::Input"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #9
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %7) #9
  %45 = bitcast %"class.net::der::BitString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %8, i64 0, i32 1
  %47 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %8, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false) #9
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %47) #9
  store i8 0, i8* %46, align 8
  %48 = bitcast %"class.net::der::Input"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  %49 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %50 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %49, align 8
  %51 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %50) #9
  %52 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %49, align 8
  %53 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %52) #9
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %9, i8* %51, i64 %53) #9
  %54 = call zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %9, %"class.net::der::Input"* nonnull %6, %"class.net::der::Input"* nonnull %7, %"class.net::der::BitString"* nonnull %8, %"class.net::CertErrors"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  br i1 %54, label %56, label %55

55:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #9
  br label %138

56:                                               ; preds = %37
  %57 = bitcast %"struct.net::ParsedTbsCertificate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %57) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 192, i1 false) #9
  call void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %10) #9
  %58 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #9
  %59 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #9
  store i8 %59, i8* %58, align 1
  %60 = call zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %11, %"struct.net::ParsedTbsCertificate"* nonnull %10, %"class.net::CertErrors"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #9
  br i1 %60, label %61, label %86

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %10, i64 0, i32 3
  %63 = bitcast %"class.net::der::Input"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %63, i64 16, i1 false) #9
  %64 = getelementptr inbounds %"struct.net::ParsedTbsCertificate", %"struct.net::ParsedTbsCertificate"* %10, i64 0, i32 6
  %65 = bitcast %"class.net::der::Input"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %65, i64 16, i1 false) #9
  call void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #9
  %66 = bitcast %"class.std::__1::unique_ptr.19"** %19 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.17"* %2 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 20
  br i1 %72, label %73, label %138

73:                                               ; preds = %61
  %74 = bitcast %"class.net::der::Input"* %14 to i8*
  %75 = bitcast %struct.SECItemStr* %15 to i8*
  %76 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %15, i64 0, i32 2
  %77 = bitcast %"class.net::der::Input"* %12 to i64*
  %78 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %15, i64 0, i32 1
  %79 = bitcast i8** %78 to i64*
  %80 = bitcast %"class.std::__1::unique_ptr.19"* %16 to i8*
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %16, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.19"* %16 to i64*
  %83 = bitcast %"class.net::der::Input"* %4 to i8*
  %84 = bitcast %"class.net::der::Input"* %5 to i8*
  %85 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %87

86:                                               ; preds = %56
  call void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #9
  br label %138

87:                                               ; preds = %73, %132
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %34, align 8
  %90 = icmp eq %"class.std::__1::basic_string"* %88, %89
  br i1 %90, label %97, label %93

91:                                               ; preds = %93
  %92 = icmp eq %"class.std::__1::basic_string"* %96, %89
  br i1 %92, label %97, label %93

93:                                               ; preds = %87, %91
  %94 = phi %"class.std::__1::basic_string"* [ %96, %91 ], [ %88, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #9
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %14, %"class.std::__1::basic_string"* %94) #9
  %95 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %12, %"class.net::der::Input"* nonnull dereferenceable(16) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #9
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 1
  br i1 %95, label %138, label %91

97:                                               ; preds = %91, %87
  %98 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* nonnull dereferenceable(16) %12, %"class.net::der::Input"* nonnull dereferenceable(16) %13) #9
  br i1 %98, label %138, label %99

99:                                               ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 24, i1 false)
  %100 = load i64, i64* %39, align 8
  %101 = trunc i64 %100 to i32
  store i32 %101, i32* %76, align 8
  %102 = load i64, i64* %77, align 8
  store i64 %102, i64* %79, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  store %struct.CERTCertificateStr* inttoptr (i64 -6148914691236517206 to %struct.CERTCertificateStr*), %struct.CERTCertificateStr** %81, align 8
  %103 = call %struct.NSSTrustDomainStr* @CERT_GetDefaultCertDB() #9
  %104 = call %struct.CERTCertificateStr* @CERT_FindCertByName(%struct.NSSTrustDomainStr* %103, %struct.SECItemStr* nonnull %15) #9
  %105 = ptrtoint %struct.CERTCertificateStr* %104 to i64
  store i64 %105, i64* %82, align 8
  %106 = icmp eq %struct.CERTCertificateStr* %104, null
  br i1 %106, label %107, label %108

107:                                              ; preds = %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #9
  br label %138

108:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  %109 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %104, i64 0, i32 5, i32 1
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %104, i64 0, i32 5, i32 2
  %112 = load i32, i32* %111, align 8
  %113 = zext i32 %112 to i64
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %4, i8* %110, i64 %113) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %83, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  %114 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %104, i64 0, i32 6, i32 1
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %struct.CERTCertificateStr, %struct.CERTCertificateStr* %104, i64 0, i32 6, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = zext i32 %117 to i64
  call void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"* nonnull %5, i8* %115, i64 %118) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %84, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  %119 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %19, align 8
  %120 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %85, align 8
  %121 = icmp ult %"class.std::__1::unique_ptr.19"* %119, %120
  br i1 %121, label %122, label %127

122:                                              ; preds = %108
  %123 = load i64, i64* %82, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %81, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.19"* %119 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %119, i64 1
  %126 = ptrtoint %"class.std::__1::unique_ptr.19"* %125 to i64
  store i64 %126, i64* %66, align 8
  br label %128

127:                                              ; preds = %108
  call void @_ZNSt3__16vectorINS_10unique_ptrI18CERTCertificateStrN3net19FreeCERTCertificateEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.17"* %2, %"class.std::__1::unique_ptr.19"* nonnull dereferenceable(8) %16) #9
  br label %128

128:                                              ; preds = %127, %122
  %129 = load %struct.CERTCertificateStr*, %struct.CERTCertificateStr** %81, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %81, align 8
  %130 = icmp eq %struct.CERTCertificateStr* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %128
  call void @CERT_DestroyCertificate(%struct.CERTCertificateStr* nonnull %129) #9
  br label %132

132:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #9
  %133 = load i64, i64* %66, align 8
  %134 = load i64, i64* %68, align 8
  %135 = sub i64 %133, %134
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 20
  br i1 %137, label %87, label %138

138:                                              ; preds = %97, %132, %93, %61, %86, %107, %55
  %139 = phi i1 [ false, %86 ], [ false, %55 ], [ false, %107 ], [ false, %61 ], [ true, %93 ], [ false, %132 ], [ false, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  br label %140

140:                                              ; preds = %31, %138
  %141 = phi i1 [ %139, %138 ], [ true, %31 ]
  ret i1 %141
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #2

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %struct.CERTCertificateStr* @CERT_FindCertByName(%struct.NSSTrustDomainStr*, %struct.SECItemStr*) local_unnamed_addr #2

declare %struct.NSSTrustDomainStr* @CERT_GetDefaultCertDB() local_unnamed_addr #2

declare zeroext i1 @_ZN3net16ParseCertificateERKNS_3der5InputEPS1_S4_PNS0_9BitStringEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.net::der::BitString"*, %"class.net::CertErrors"*) local_unnamed_addr #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare void @_ZN3net3der5InputC1EPKhm(%"class.net::der::Input"*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net20ParsedTbsCertificateC1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #2

declare zeroext i1 @_ZN3net19ParseTbsCertificateERKNS_3der5InputERKNS_23ParseCertificateOptionsEPNS_20ParsedTbsCertificateEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"struct.net::ParsedTbsCertificate"*, %"class.net::CertErrors"*) local_unnamed_addr #2

declare i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net20ParsedTbsCertificateD1Ev(%"struct.net::ParsedTbsCertificate"*) unnamed_addr #3

declare void @CERT_DestroyCertificate(%struct.CERTCertificateStr*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI18CERTCertificateStrN3net19FreeCERTCertificateEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.17"*, %"class.std::__1::unique_ptr.19"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.19"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.19"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.19"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.19"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.19"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.19"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.19"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.19"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.19"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.19"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %struct.CERTCertificateStr** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.19"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.19"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.19"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.19"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.19"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.19"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.19"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.19"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.19"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.19"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.19"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.19"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.19"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.19"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.19"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.19"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.19"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.19"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.19"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.19"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.19"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.19"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.19"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.19"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.19"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.19"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.19"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.19"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.19"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.19"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.19"*
  %138 = icmp eq %"class.std::__1::unique_ptr.19"* %133, %137
  br i1 %138, label %148, label %139

139:                                              ; preds = %132, %146
  %140 = phi %"class.std::__1::unique_ptr.19"* [ %141, %146 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %struct.CERTCertificateStr*, %struct.CERTCertificateStr** %142, align 8
  store %struct.CERTCertificateStr* null, %struct.CERTCertificateStr** %142, align 8
  %144 = icmp eq %struct.CERTCertificateStr* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %139
  tail call void @CERT_DestroyCertificate(%struct.CERTCertificateStr* nonnull %143) #9
  br label %146

146:                                              ; preds = %145, %139
  %147 = icmp eq %"class.std::__1::unique_ptr.19"* %141, %137
  br i1 %147, label %148, label %139

148:                                              ; preds = %146, %132
  %149 = icmp eq i64 %135, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %148, %150
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
