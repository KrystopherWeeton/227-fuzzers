; ModuleID = '../../chrome/browser/ui/tabs/existing_tab_group_sub_menu_model.cc'
source_filename = "../../chrome/browser/ui/tabs/existing_tab_group_sub_menu_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::VectorIcon" = type opaque
%class.ExistingTabGroupSubMenuModel = type { %class.ExistingBaseSubMenuModel.base, [4 x i8] }
%class.ExistingBaseSubMenuModel.base = type <{ %"class.ui::SimpleMenuModel", %"class.ui::SimpleMenuModel::Delegate", %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, %"class.content::WebContents"*, i32 }>
%"class.ui::SimpleMenuModel" = type { %"class.ui::MenuModel", %"class.std::__1::vector", %"class.ui::SimpleMenuModel::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::SimpleMenuModel::Item"*, %"struct.ui::SimpleMenuModel::Item"*, %"class.std::__1::__compressed_pair.14" }
%"struct.ui::SimpleMenuModel::Item" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::ImageModel", %"class.ui::ImageModel", i32, %"class.ui::MenuModel"*, %"class.ui::ButtonMenuItemModel"*, i32, i8, i8, i8, i8, %"class.ui::ElementIdentifier" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.7", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.7" = type { %"class.absl::variant_internal::VariantStateBase.8" }
%"class.absl::variant_internal::VariantStateBase.8" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"class.ui::ButtonMenuItemModel" = type opaque
%"class.ui::ElementIdentifier" = type { i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.ui::SimpleMenuModel::Item"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.ui::SimpleMenuModel::Delegate" = type { %"class.ui::AcceleratorProvider" }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.content::WebContents" = type opaque
%class.TabStripModel = type { %class.TabGroupController, %"class.std::__1::vector.19", %"class.std::__1::unique_ptr.26", %class.TabStripModelDelegate*, i8, [7 x i8], %"class.base::ObserverList", %class.Profile*, i8, %"class.std::__1::unique_ptr.86", %"class.ui::ListSelectionModel", i8, %class.TabSwitchEventLatencyRecorder, %"class.base::RepeatingTimer", %"class.base::TimeTicks", i64, i64, %"class.base::WeakPtrFactory.114" }
%class.TabGroupController = type { i32 (...)** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.TabStripModel::WebContentsData"* }
%"class.TabStripModel::WebContentsData" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.TabGroupModel* }
%class.TabGroupModel = type { %"class.std::__1::map", %class.TabGroupController* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%class.TabStripModelDelegate = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.38", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.40" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.62", i8, i8, i32, %"class.base::ObserverList.68", %"class.std::__1::unique_ptr.80" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.56" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.45", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.45" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList.68" = type <{ %"class.std::__1::vector.69", %"class.base::LinkedList.77", i64, i32, [4 x i8] }>
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.72" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.71 }
%class.scoped_refptr.71 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.77" = type { %"class.base::LinkNode.78" }
%"class.base::LinkNode.78" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.TabStripModelOrderController* }
%class.TabStripModelOrderController = type { %class.TabStripModelObserver, %class.TabStripModel* }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.89" }
%"class.std::__1::__tree.89" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.101" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { i32*, i32*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i32* }
%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.108 }
%union.anon.108 = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.109, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.111" }
%class.scoped_refptr.109 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.110" }>
%"class.base::RefCountedThreadSafe.110" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.113", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.114" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"class.std::__1::__compressed_pair.122" }
%"struct.ExistingBaseSubMenuModel::MenuItemInfo" = type <{ %"class.std::__1::basic_string", %"class.absl::optional.117", i8, [7 x i8] }>
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, %union.anon.121 }
%union.anon.121 = type { %"class.ui::ImageModel" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"*, %"class.std::__1::__compressed_pair.129" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.tab_groups::TabGroupId"* }
%class.ExistingBaseSubMenuModel = type <{ %"class.ui::SimpleMenuModel", %"class.ui::SimpleMenuModel::Delegate", %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, %"class.content::WebContents"*, i32, [4 x i8] }>
%"class.ui::ThemeProvider" = type { i32 (...)** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.TabGroup = type <{ %class.TabGroupController*, %"class.tab_groups::TabGroupId", %"class.std::__1::unique_ptr.134", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.tab_groups::TabGroupVisualData"* }
%"class.tab_groups::TabGroupVisualData" = type <{ %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { %"class.tab_groups::TabGroupId" }
%"struct.base::UserMetricsAction" = type { i8* }
%"class.gfx::FontList" = type opaque
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }

$_ZN28ExistingTabGroupSubMenuModelD0Ev = comdat any

$_ZThn72_N28ExistingTabGroupSubMenuModelD1Ev = comdat any

$_ZThn72_N28ExistingTabGroupSubMenuModelD0Ev = comdat any

$_ZNSt3__16vectorIN24ExistingBaseSubMenuModel12MenuItemInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN10tab_groups10TabGroupIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@_ZTV28ExistingTabGroupSubMenuModel = hidden unnamed_addr constant { [38 x i8*], [15 x i8*] } { [38 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExistingBaseSubMenuModel*)* @_ZN24ExistingBaseSubMenuModelD2Ev to i8*), i8* bitcast (void (%class.ExistingTabGroupSubMenuModel*)* @_ZN28ExistingTabGroupSubMenuModelD0Ev to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*)* @_ZNK2ui15SimpleMenuModel8HasIconsEv to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*)* @_ZNK2ui15SimpleMenuModel12GetItemCountEv to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel9GetTypeAtEi to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel18GetSeparatorTypeAtEi to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14GetCommandIdAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel10GetLabelAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel19GetSecondaryLabelAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14GetMinorTextAtEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14GetMinorIconAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel15IsItemDynamicAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel18MayHaveMnemonicsAtEi to i8*), i8* bitcast (%"class.gfx::FontList"* (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel18GetLabelFontListAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32, %"class.ui::Accelerator"*)* @_ZNK2ui15SimpleMenuModel16GetAcceleratorAtEiPNS_11AcceleratorE to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel15IsItemCheckedAtEi to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel12GetGroupIdAtEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel9GetIconAtEi to i8*), i8* bitcast (%"class.ui::ButtonMenuItemModel"* (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel19GetButtonMenuItemAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel11IsEnabledAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel11IsVisibleAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel11IsAlertedAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14IsNewFeatureAtEi to i8*), i8* bitcast (i8* (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel22GetElementIdentifierAtEi to i8*), i8* bitcast (%"class.ui::MenuModel"* (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel17GetSubmenuModelAtEi to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*, i32)* @_ZN2ui15SimpleMenuModel11ActivatedAtEi to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*, i32, i32)* @_ZN2ui15SimpleMenuModel11ActivatedAtEii to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel12MenuWillShowEv to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel13MenuWillCloseEv to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel16MenuItemsChangedEv to i8*), i8* bitcast (i1 (%class.ExistingBaseSubMenuModel*, i32, %"class.ui::Accelerator"*)* @_ZNK24ExistingBaseSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE to i8*), i8* bitcast (i1 (%class.ExistingBaseSubMenuModel*, i32)* @_ZNK24ExistingBaseSubMenuModel18IsCommandIdCheckedEi to i8*), i8* bitcast (i1 (%class.ExistingBaseSubMenuModel*, i32)* @_ZNK24ExistingBaseSubMenuModel18IsCommandIdEnabledEi to i8*), i8* bitcast (void (%class.ExistingBaseSubMenuModel*, i32, i32)* @_ZN24ExistingBaseSubMenuModel14ExecuteCommandEii to i8*), i8* bitcast (void (%class.ExistingTabGroupSubMenuModel*, i32)* @_ZN28ExistingTabGroupSubMenuModel17ExecuteNewCommandEi to i8*), i8* bitcast (void (%class.ExistingTabGroupSubMenuModel*, i32)* @_ZN28ExistingTabGroupSubMenuModel22ExecuteExistingCommandEi to i8*)], [15 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (i1 (%class.ExistingBaseSubMenuModel*, i32, %"class.ui::Accelerator"*)* @_ZThn72_NK24ExistingBaseSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE to i8*), i8* bitcast (void (%class.ExistingTabGroupSubMenuModel*)* @_ZThn72_N28ExistingTabGroupSubMenuModelD1Ev to i8*), i8* bitcast (void (%class.ExistingTabGroupSubMenuModel*)* @_ZThn72_N28ExistingTabGroupSubMenuModelD0Ev to i8*), i8* bitcast (i1 (%class.ExistingBaseSubMenuModel*, i32)* @_ZThn72_NK24ExistingBaseSubMenuModel18IsCommandIdCheckedEi to i8*), i8* bitcast (i1 (%class.ExistingBaseSubMenuModel*, i32)* @_ZThn72_NK24ExistingBaseSubMenuModel18IsCommandIdEnabledEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdVisibleEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdAlertedEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate25IsItemForCommandIdDynamicEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate20GetLabelForCommandIdEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate19GetIconForCommandIdEi to i8*), i8* bitcast (void (%class.ExistingBaseSubMenuModel*, i32, i32)* @_ZThn72_N24ExistingBaseSubMenuModel14ExecuteCommandEii to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel8Delegate14OnMenuWillShowEPS0_ to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel8Delegate10MenuClosedEPS0_ to i8*)] }, align 8
@kTabGroupIcon = external global %"struct.gfx::VectorIcon", align 1
@.str = private unnamed_addr constant [29 x i8] c"TabContextMenu_NewTabInGroup\00", align 1

@_ZN28ExistingTabGroupSubMenuModelC1EPN2ui15SimpleMenuModel8DelegateEP13TabStripModeli = hidden unnamed_addr alias void (%class.ExistingTabGroupSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32), void (%class.ExistingTabGroupSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32)* @_ZN28ExistingTabGroupSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModeli

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28ExistingTabGroupSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModeli(%class.ExistingTabGroupSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.115", align 8
  %6 = alloca %"class.std::__1::vector.127", align 8
  %7 = alloca %"class.tab_groups::TabGroupId", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.ui::ImageModel", align 8
  %11 = alloca %"struct.ExistingBaseSubMenuModel::MenuItemInfo", align 8
  %12 = alloca %"class.ui::ImageModel", align 8
  %13 = alloca %"class.std::__1::vector.115", align 8
  %14 = bitcast %class.ExistingTabGroupSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModelii(%class.ExistingBaseSubMenuModel* %14, %"class.ui::SimpleMenuModel::Delegate"* %1, %class.TabStripModel* %2, i32 %3, i32 1301) #9
  %15 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [15 x i8*] }, { [38 x i8*], [15 x i8*] }* @_ZTV28ExistingTabGroupSubMenuModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [15 x i8*] }, { [38 x i8*], [15 x i8*] }* @_ZTV28ExistingTabGroupSubMenuModel, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %2, i64 0, i32 7
  %18 = load %class.Profile*, %class.Profile** %17, align 8
  %19 = tail call dereferenceable(8) %"class.ui::ThemeProvider"* @_ZN12ThemeService26GetThemeProviderForProfileEP7Profile(%class.Profile* %18) #9
  %20 = bitcast %"class.std::__1::vector.115"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %5, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #9
  %24 = bitcast %"class.std::__1::vector.127"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  call void @_ZN28ExistingTabGroupSubMenuModel28GetOrderedTabGroupsInSubMenuEv(%"class.std::__1::vector.127"* nonnull sret %6, %class.ExistingTabGroupSubMenuModel* %0)
  %25 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %6, i64 0, i32 0, i32 0
  %26 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %6, i64 0, i32 0, i32 1
  %28 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %27, align 8
  %29 = icmp eq %"class.tab_groups::TabGroupId"* %26, %28
  br i1 %29, label %57, label %30

30:                                               ; preds = %4
  %31 = bitcast %"class.tab_groups::TabGroupId"* %7 to i8*
  %32 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %38 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %39 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %45 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = bitcast %"class.ui::ImageModel"* %10 to i8*
  %49 = bitcast %"class.ui::ThemeProvider"* %19 to i32 (%"class.ui::ThemeProvider"*, i32)***
  %50 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %11 to i8*
  %51 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %22 to i64*
  %52 = bitcast %"class.tab_groups::TabGroupId"* %7 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %135

55:                                               ; preds = %522
  %56 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %25, align 8
  br label %57

57:                                               ; preds = %55, %4
  %58 = phi %"class.tab_groups::TabGroupId"* [ %56, %55 ], [ %26, %4 ]
  %59 = icmp eq %"class.tab_groups::TabGroupId"* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = ptrtoint %"class.tab_groups::TabGroupId"* %58 to i64
  %62 = bitcast %"class.tab_groups::TabGroupId"** %27 to i64*
  store i64 %61, i64* %62, align 8
  %63 = bitcast %"class.tab_groups::TabGroupId"* %58 to i8*
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  %65 = bitcast %"class.std::__1::vector.115"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #9
  %66 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %22 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.115"* %5 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = sdiv exact i64 %70, 88
  %72 = icmp eq i64 %70, 0
  %73 = inttoptr i64 %69 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  %74 = inttoptr i64 %67 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  br i1 %72, label %100, label %75

75:                                               ; preds = %64
  %76 = icmp ugt i64 %71, 209622091746699450
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.115"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %78) #11
  unreachable

79:                                               ; preds = %75
  %80 = call i8* @_Znwm(i64 %70) #10
  %81 = bitcast i8* %80 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  %82 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %13, i64 0, i32 0, i32 1
  %83 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %82 to i8**
  store i8* %80, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector.115"* %13 to i8**
  store i8* %80, i8** %84, align 8
  %85 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %81, i64 %71
  %86 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %85, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %86, align 8
  %87 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %82 to i64*
  %88 = ptrtoint i8* %80 to i64
  %89 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %73, %74
  br i1 %89, label %98, label %90

90:                                               ; preds = %79, %90
  %91 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %94, %90 ], [ %81, %79 ]
  %92 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %93, %90 ], [ %73, %79 ]
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %91, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88) %92) #9
  %93 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %92, i64 1
  %94 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %91, i64 1
  %95 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %93, %74
  br i1 %95, label %96, label %90

96:                                               ; preds = %90
  %97 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %94 to i64
  br label %98

98:                                               ; preds = %96, %79
  %99 = phi i64 [ %88, %79 ], [ %97, %96 ]
  store i64 %99, i64* %87, align 8
  br label %100

100:                                              ; preds = %64, %98
  call void @_ZN24ExistingBaseSubMenuModel5BuildEiNSt3__16vectorINS_12MenuItemInfoENS0_9allocatorIS2_EEEE(%class.ExistingBaseSubMenuModel* %14, i32 8184, %"class.std::__1::vector.115"* nonnull %13) #9
  %101 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %13, i64 0, i32 0, i32 0
  %102 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %101, align 8
  %103 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %102, null
  br i1 %103, label %118, label %104

104:                                              ; preds = %100
  %105 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %102 to i8*
  %106 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %13, i64 0, i32 0, i32 1
  %107 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %106, align 8
  %108 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %107, %102
  br i1 %108, label %116, label %109

109:                                              ; preds = %104, %109
  %110 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %111, %109 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %110, i64 -1
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %111) #9
  %112 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %111, %102
  br i1 %112, label %113, label %109

113:                                              ; preds = %109
  %114 = bitcast %"class.std::__1::vector.115"* %13 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %104
  %117 = phi i8* [ %115, %113 ], [ %105, %104 ]
  store %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %102, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %106, align 8
  call void @_ZdlPv(i8* %117) #10
  br label %118

118:                                              ; preds = %100, %116
  %119 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %21, align 8
  %120 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %119 to i8*
  %123 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %22, align 8
  %124 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %123, %119
  br i1 %124, label %132, label %125

125:                                              ; preds = %121, %125
  %126 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %127, %125 ], [ %123, %121 ]
  %127 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %126, i64 -1
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %127) #9
  %128 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %127, %119
  br i1 %128, label %129, label %125

129:                                              ; preds = %125
  %130 = bitcast %"class.std::__1::vector.115"* %5 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %121
  %133 = phi i8* [ %131, %129 ], [ %122, %121 ]
  store %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %119, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %22, align 8
  call void @_ZdlPv(i8* %133) #10
  br label %134

134:                                              ; preds = %118, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  ret void

135:                                              ; preds = %30, %522
  %136 = phi %"class.tab_groups::TabGroupId"* [ %26, %30 ], [ %523, %522 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 16, i1 false)
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %7, %"class.tab_groups::TabGroupId"* dereferenceable(16) %136) #9
  %137 = load %class.TabGroupModel*, %class.TabGroupModel** %32, align 8
  %138 = call %class.TabGroup* @_ZNK13TabGroupModel11GetTabGroupERKN10tab_groups10TabGroupIdE(%class.TabGroupModel* %137, %"class.tab_groups::TabGroupId"* nonnull dereferenceable(16) %7) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %139 = getelementptr inbounds %class.TabGroup, %class.TabGroup* %138, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  %140 = load %"class.tab_groups::TabGroupVisualData"*, %"class.tab_groups::TabGroupVisualData"** %139, align 8
  %141 = bitcast %"class.tab_groups::TabGroupVisualData"* %140 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %141, i64 0, i32 1, i32 1
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = bitcast %"class.tab_groups::TabGroupVisualData"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %146, i64 24, i1 false) #9
  br label %317

147:                                              ; preds = %135
  %148 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i16*, i16** %148, align 8
  %150 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = icmp ult i64 %151, 11
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = trunc i64 %151 to i8
  store i8 %154, i8* %40, align 1
  br label %169

155:                                              ; preds = %147
  %156 = icmp ugt i64 %151, 9223372036854775791
  br i1 %156, label %157, label %159

157:                                              ; preds = %155
  %158 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %158) #11
  unreachable

159:                                              ; preds = %155
  %160 = add nuw nsw i64 %151, 8
  %161 = and i64 %160, -8
  %162 = icmp slt i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %159
  call void @abort() #11
  unreachable

164:                                              ; preds = %159
  %165 = shl i64 %161, 1
  %166 = call i8* @_Znwm(i64 %165) #10
  %167 = bitcast i8* %166 to i16*
  store i8* %166, i8** %37, align 8
  %168 = or i64 %161, -9223372036854775808
  store i64 %168, i64* %36, align 8
  store i64 %151, i64* %35, align 8
  br label %169

169:                                              ; preds = %164, %153
  %170 = phi i16* [ %38, %153 ], [ %167, %164 ]
  %171 = add nuw nsw i64 %151, 1
  %172 = add i64 %151, 1
  %173 = icmp ult i64 %172, 16
  br i1 %173, label %264, label %174

174:                                              ; preds = %169
  %175 = getelementptr i16, i16* %170, i64 1
  %176 = getelementptr i16, i16* %175, i64 %151
  %177 = getelementptr i16, i16* %149, i64 1
  %178 = getelementptr i16, i16* %177, i64 %151
  %179 = icmp ult i16* %170, %178
  %180 = icmp ult i16* %149, %176
  %181 = and i1 %179, %180
  br i1 %181, label %264, label %182

182:                                              ; preds = %174
  %183 = and i64 %172, -16
  %184 = sub i64 %171, %183
  %185 = getelementptr i16, i16* %149, i64 %183
  %186 = getelementptr i16, i16* %170, i64 %183
  %187 = add i64 %183, -16
  %188 = lshr exact i64 %187, 4
  %189 = add nuw nsw i64 %188, 1
  %190 = and i64 %189, 3
  %191 = icmp ult i64 %187, 48
  br i1 %191, label %243, label %192

192:                                              ; preds = %182
  %193 = sub nsw i64 %189, %190
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i64 [ 0, %192 ], [ %240, %194 ]
  %196 = phi i64 [ %193, %192 ], [ %241, %194 ]
  %197 = getelementptr i16, i16* %149, i64 %195
  %198 = getelementptr i16, i16* %170, i64 %195
  %199 = bitcast i16* %197 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !2
  %201 = getelementptr i16, i16* %197, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !2
  %204 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %204, align 2, !alias.scope !5, !noalias !2
  %205 = getelementptr i16, i16* %198, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %206, align 2, !alias.scope !5, !noalias !2
  %207 = or i64 %195, 16
  %208 = getelementptr i16, i16* %149, i64 %207
  %209 = getelementptr i16, i16* %170, i64 %207
  %210 = bitcast i16* %208 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !2
  %212 = getelementptr i16, i16* %208, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !2
  %215 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %215, align 2, !alias.scope !5, !noalias !2
  %216 = getelementptr i16, i16* %209, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %217, align 2, !alias.scope !5, !noalias !2
  %218 = or i64 %195, 32
  %219 = getelementptr i16, i16* %149, i64 %218
  %220 = getelementptr i16, i16* %170, i64 %218
  %221 = bitcast i16* %219 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !2
  %223 = getelementptr i16, i16* %219, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  %225 = load <8 x i16>, <8 x i16>* %224, align 2, !alias.scope !2
  %226 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %226, align 2, !alias.scope !5, !noalias !2
  %227 = getelementptr i16, i16* %220, i64 8
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %228, align 2, !alias.scope !5, !noalias !2
  %229 = or i64 %195, 48
  %230 = getelementptr i16, i16* %149, i64 %229
  %231 = getelementptr i16, i16* %170, i64 %229
  %232 = bitcast i16* %230 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !2
  %234 = getelementptr i16, i16* %230, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !2
  %237 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %237, align 2, !alias.scope !5, !noalias !2
  %238 = getelementptr i16, i16* %231, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !5, !noalias !2
  %240 = add i64 %195, 64
  %241 = add i64 %196, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %194, !llvm.loop !7

243:                                              ; preds = %194, %182
  %244 = phi i64 [ 0, %182 ], [ %240, %194 ]
  %245 = icmp eq i64 %190, 0
  br i1 %245, label %262, label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %259, %246 ], [ %244, %243 ]
  %248 = phi i64 [ %260, %246 ], [ %190, %243 ]
  %249 = getelementptr i16, i16* %149, i64 %247
  %250 = getelementptr i16, i16* %170, i64 %247
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !2
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !2
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !5, !noalias !2
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !5, !noalias !2
  %259 = add i64 %247, 16
  %260 = add i64 %248, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %246, !llvm.loop !9

262:                                              ; preds = %246, %243
  %263 = icmp eq i64 %172, %183
  br i1 %263, label %317, label %264

264:                                              ; preds = %262, %174, %169
  %265 = phi i64 [ %171, %174 ], [ %171, %169 ], [ %184, %262 ]
  %266 = phi i16* [ %149, %174 ], [ %149, %169 ], [ %185, %262 ]
  %267 = phi i16* [ %170, %174 ], [ %170, %169 ], [ %186, %262 ]
  %268 = add i64 %265, -1
  %269 = and i64 %265, 7
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %282, label %271

271:                                              ; preds = %264, %271
  %272 = phi i64 [ %277, %271 ], [ %265, %264 ]
  %273 = phi i16* [ %279, %271 ], [ %266, %264 ]
  %274 = phi i16* [ %278, %271 ], [ %267, %264 ]
  %275 = phi i64 [ %280, %271 ], [ %269, %264 ]
  %276 = load i16, i16* %273, align 2
  store i16 %276, i16* %274, align 2
  %277 = add i64 %272, -1
  %278 = getelementptr inbounds i16, i16* %274, i64 1
  %279 = getelementptr inbounds i16, i16* %273, i64 1
  %280 = add i64 %275, -1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %271, !llvm.loop !11

282:                                              ; preds = %271, %264
  %283 = phi i64 [ %265, %264 ], [ %277, %271 ]
  %284 = phi i16* [ %266, %264 ], [ %279, %271 ]
  %285 = phi i16* [ %267, %264 ], [ %278, %271 ]
  %286 = icmp ult i64 %268, 7
  br i1 %286, label %317, label %287

287:                                              ; preds = %282, %287
  %288 = phi i64 [ %313, %287 ], [ %283, %282 ]
  %289 = phi i16* [ %315, %287 ], [ %284, %282 ]
  %290 = phi i16* [ %314, %287 ], [ %285, %282 ]
  %291 = load i16, i16* %289, align 2
  store i16 %291, i16* %290, align 2
  %292 = getelementptr inbounds i16, i16* %290, i64 1
  %293 = getelementptr inbounds i16, i16* %289, i64 1
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = getelementptr inbounds i16, i16* %290, i64 2
  %296 = getelementptr inbounds i16, i16* %289, i64 2
  %297 = load i16, i16* %296, align 2
  store i16 %297, i16* %295, align 2
  %298 = getelementptr inbounds i16, i16* %290, i64 3
  %299 = getelementptr inbounds i16, i16* %289, i64 3
  %300 = load i16, i16* %299, align 2
  store i16 %300, i16* %298, align 2
  %301 = getelementptr inbounds i16, i16* %290, i64 4
  %302 = getelementptr inbounds i16, i16* %289, i64 4
  %303 = load i16, i16* %302, align 2
  store i16 %303, i16* %301, align 2
  %304 = getelementptr inbounds i16, i16* %290, i64 5
  %305 = getelementptr inbounds i16, i16* %289, i64 5
  %306 = load i16, i16* %305, align 2
  store i16 %306, i16* %304, align 2
  %307 = getelementptr inbounds i16, i16* %290, i64 6
  %308 = getelementptr inbounds i16, i16* %289, i64 6
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %307, align 2
  %310 = getelementptr inbounds i16, i16* %290, i64 7
  %311 = getelementptr inbounds i16, i16* %289, i64 7
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = add i64 %288, -8
  %314 = getelementptr inbounds i16, i16* %290, i64 8
  %315 = getelementptr inbounds i16, i16* %289, i64 8
  %316 = icmp eq i64 %313, 0
  br i1 %316, label %317, label %287, !llvm.loop !12

317:                                              ; preds = %282, %287, %262, %145
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  %318 = load i8, i8* %40, align 1
  %319 = icmp slt i8 %318, 0
  %320 = load i64, i64* %35, align 8
  %321 = zext i8 %318 to i64
  %322 = select i1 %319, i64 %320, i64 %321
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %317
  call void @_ZNK8TabGroup16GetContentStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %class.TabGroup* %138) #9
  br label %494

325:                                              ; preds = %317
  br i1 %319, label %327, label %326

326:                                              ; preds = %325
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %33, i64 24, i1 false) #9
  br label %494

327:                                              ; preds = %325
  %328 = load i16*, i16** %34, align 8
  %329 = icmp ult i64 %320, 11
  br i1 %329, label %330, label %332

330:                                              ; preds = %327
  %331 = trunc i64 %320 to i8
  store i8 %331, i8* %47, align 1
  br label %346

332:                                              ; preds = %327
  %333 = icmp ugt i64 %320, 9223372036854775791
  br i1 %333, label %334, label %336

334:                                              ; preds = %332
  %335 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %335) #11
  unreachable

336:                                              ; preds = %332
  %337 = add nuw nsw i64 %320, 8
  %338 = and i64 %337, -8
  %339 = icmp slt i64 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %336
  call void @abort() #11
  unreachable

341:                                              ; preds = %336
  %342 = shl i64 %338, 1
  %343 = call i8* @_Znwm(i64 %342) #10
  %344 = bitcast i8* %343 to i16*
  store i8* %343, i8** %44, align 8
  %345 = or i64 %338, -9223372036854775808
  store i64 %345, i64* %43, align 8
  store i64 %320, i64* %42, align 8
  br label %346

346:                                              ; preds = %341, %330
  %347 = phi i16* [ %45, %330 ], [ %344, %341 ]
  %348 = add nuw nsw i64 %320, 1
  %349 = add i64 %320, 1
  %350 = icmp ult i64 %349, 16
  br i1 %350, label %441, label %351

351:                                              ; preds = %346
  %352 = getelementptr i16, i16* %347, i64 1
  %353 = getelementptr i16, i16* %352, i64 %320
  %354 = getelementptr i16, i16* %328, i64 1
  %355 = getelementptr i16, i16* %354, i64 %320
  %356 = icmp ult i16* %347, %355
  %357 = icmp ult i16* %328, %353
  %358 = and i1 %356, %357
  br i1 %358, label %441, label %359

359:                                              ; preds = %351
  %360 = and i64 %349, -16
  %361 = sub i64 %348, %360
  %362 = getelementptr i16, i16* %328, i64 %360
  %363 = getelementptr i16, i16* %347, i64 %360
  %364 = add i64 %360, -16
  %365 = lshr exact i64 %364, 4
  %366 = add nuw nsw i64 %365, 1
  %367 = and i64 %366, 3
  %368 = icmp ult i64 %364, 48
  br i1 %368, label %420, label %369

369:                                              ; preds = %359
  %370 = sub nsw i64 %366, %367
  br label %371

371:                                              ; preds = %371, %369
  %372 = phi i64 [ 0, %369 ], [ %417, %371 ]
  %373 = phi i64 [ %370, %369 ], [ %418, %371 ]
  %374 = getelementptr i16, i16* %328, i64 %372
  %375 = getelementptr i16, i16* %347, i64 %372
  %376 = bitcast i16* %374 to <8 x i16>*
  %377 = load <8 x i16>, <8 x i16>* %376, align 2, !alias.scope !13
  %378 = getelementptr i16, i16* %374, i64 8
  %379 = bitcast i16* %378 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !13
  %381 = bitcast i16* %375 to <8 x i16>*
  store <8 x i16> %377, <8 x i16>* %381, align 2, !alias.scope !16, !noalias !13
  %382 = getelementptr i16, i16* %375, i64 8
  %383 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %383, align 2, !alias.scope !16, !noalias !13
  %384 = or i64 %372, 16
  %385 = getelementptr i16, i16* %328, i64 %384
  %386 = getelementptr i16, i16* %347, i64 %384
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !13
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !13
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !16, !noalias !13
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !16, !noalias !13
  %395 = or i64 %372, 32
  %396 = getelementptr i16, i16* %328, i64 %395
  %397 = getelementptr i16, i16* %347, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !13
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !13
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !16, !noalias !13
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !16, !noalias !13
  %406 = or i64 %372, 48
  %407 = getelementptr i16, i16* %328, i64 %406
  %408 = getelementptr i16, i16* %347, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !13
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !13
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !16, !noalias !13
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !16, !noalias !13
  %417 = add i64 %372, 64
  %418 = add i64 %373, -4
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %420, label %371, !llvm.loop !18

420:                                              ; preds = %371, %359
  %421 = phi i64 [ 0, %359 ], [ %417, %371 ]
  %422 = icmp eq i64 %367, 0
  br i1 %422, label %439, label %423

423:                                              ; preds = %420, %423
  %424 = phi i64 [ %436, %423 ], [ %421, %420 ]
  %425 = phi i64 [ %437, %423 ], [ %367, %420 ]
  %426 = getelementptr i16, i16* %328, i64 %424
  %427 = getelementptr i16, i16* %347, i64 %424
  %428 = bitcast i16* %426 to <8 x i16>*
  %429 = load <8 x i16>, <8 x i16>* %428, align 2, !alias.scope !13
  %430 = getelementptr i16, i16* %426, i64 8
  %431 = bitcast i16* %430 to <8 x i16>*
  %432 = load <8 x i16>, <8 x i16>* %431, align 2, !alias.scope !13
  %433 = bitcast i16* %427 to <8 x i16>*
  store <8 x i16> %429, <8 x i16>* %433, align 2, !alias.scope !16, !noalias !13
  %434 = getelementptr i16, i16* %427, i64 8
  %435 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %432, <8 x i16>* %435, align 2, !alias.scope !16, !noalias !13
  %436 = add i64 %424, 16
  %437 = add i64 %425, -1
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %423, !llvm.loop !19

439:                                              ; preds = %423, %420
  %440 = icmp eq i64 %349, %360
  br i1 %440, label %494, label %441

441:                                              ; preds = %439, %351, %346
  %442 = phi i64 [ %348, %351 ], [ %348, %346 ], [ %361, %439 ]
  %443 = phi i16* [ %328, %351 ], [ %328, %346 ], [ %362, %439 ]
  %444 = phi i16* [ %347, %351 ], [ %347, %346 ], [ %363, %439 ]
  %445 = add i64 %442, -1
  %446 = and i64 %442, 7
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %459, label %448

448:                                              ; preds = %441, %448
  %449 = phi i64 [ %454, %448 ], [ %442, %441 ]
  %450 = phi i16* [ %456, %448 ], [ %443, %441 ]
  %451 = phi i16* [ %455, %448 ], [ %444, %441 ]
  %452 = phi i64 [ %457, %448 ], [ %446, %441 ]
  %453 = load i16, i16* %450, align 2
  store i16 %453, i16* %451, align 2
  %454 = add i64 %449, -1
  %455 = getelementptr inbounds i16, i16* %451, i64 1
  %456 = getelementptr inbounds i16, i16* %450, i64 1
  %457 = add i64 %452, -1
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %459, label %448, !llvm.loop !20

459:                                              ; preds = %448, %441
  %460 = phi i64 [ %442, %441 ], [ %454, %448 ]
  %461 = phi i16* [ %443, %441 ], [ %456, %448 ]
  %462 = phi i16* [ %444, %441 ], [ %455, %448 ]
  %463 = icmp ult i64 %445, 7
  br i1 %463, label %494, label %464

464:                                              ; preds = %459, %464
  %465 = phi i64 [ %490, %464 ], [ %460, %459 ]
  %466 = phi i16* [ %492, %464 ], [ %461, %459 ]
  %467 = phi i16* [ %491, %464 ], [ %462, %459 ]
  %468 = load i16, i16* %466, align 2
  store i16 %468, i16* %467, align 2
  %469 = getelementptr inbounds i16, i16* %467, i64 1
  %470 = getelementptr inbounds i16, i16* %466, i64 1
  %471 = load i16, i16* %470, align 2
  store i16 %471, i16* %469, align 2
  %472 = getelementptr inbounds i16, i16* %467, i64 2
  %473 = getelementptr inbounds i16, i16* %466, i64 2
  %474 = load i16, i16* %473, align 2
  store i16 %474, i16* %472, align 2
  %475 = getelementptr inbounds i16, i16* %467, i64 3
  %476 = getelementptr inbounds i16, i16* %466, i64 3
  %477 = load i16, i16* %476, align 2
  store i16 %477, i16* %475, align 2
  %478 = getelementptr inbounds i16, i16* %467, i64 4
  %479 = getelementptr inbounds i16, i16* %466, i64 4
  %480 = load i16, i16* %479, align 2
  store i16 %480, i16* %478, align 2
  %481 = getelementptr inbounds i16, i16* %467, i64 5
  %482 = getelementptr inbounds i16, i16* %466, i64 5
  %483 = load i16, i16* %482, align 2
  store i16 %483, i16* %481, align 2
  %484 = getelementptr inbounds i16, i16* %467, i64 6
  %485 = getelementptr inbounds i16, i16* %466, i64 6
  %486 = load i16, i16* %485, align 2
  store i16 %486, i16* %484, align 2
  %487 = getelementptr inbounds i16, i16* %467, i64 7
  %488 = getelementptr inbounds i16, i16* %466, i64 7
  %489 = load i16, i16* %488, align 2
  store i16 %489, i16* %487, align 2
  %490 = add i64 %465, -8
  %491 = getelementptr inbounds i16, i16* %467, i64 8
  %492 = getelementptr inbounds i16, i16* %466, i64 8
  %493 = icmp eq i64 %490, 0
  br i1 %493, label %494, label %464, !llvm.loop !21

494:                                              ; preds = %459, %464, %439, %326, %324
  %495 = load %"class.tab_groups::TabGroupVisualData"*, %"class.tab_groups::TabGroupVisualData"** %139, align 8
  %496 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %495, i64 0, i32 1
  %497 = load i32, i32* %496, align 4
  %498 = call i32 @_Z29GetTabGroupContextMenuColorIdN10tab_groups15TabGroupColorIdE(i32 %497) #9
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  %499 = load i32 (%"class.ui::ThemeProvider"*, i32)**, i32 (%"class.ui::ThemeProvider"*, i32)*** %49, align 8
  %500 = getelementptr inbounds i32 (%"class.ui::ThemeProvider"*, i32)*, i32 (%"class.ui::ThemeProvider"*, i32)** %499, i64 3
  %501 = load i32 (%"class.ui::ThemeProvider"*, i32)*, i32 (%"class.ui::ThemeProvider"*, i32)** %500, align 8
  %502 = call i32 %501(%"class.ui::ThemeProvider"* %19, i32 %498) #9
  call void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* nonnull sret %10, %"struct.gfx::VectorIcon"* nonnull @kTabGroupIcon, i32 %502, i32 14, %"struct.gfx::VectorIcon"* null) #9
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %50) #9
  call void @_ZN2ui10ImageModelC1ERKS0_(%"class.ui::ImageModel"* nonnull %12, %"class.ui::ImageModel"* nonnull dereferenceable(48) %10) #9
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN2ui10ImageModelE(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.ui::ImageModel"* nonnull %12) #9
  %503 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %22, align 8
  %504 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %23, align 8
  %505 = icmp ult %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %503, %504
  br i1 %505, label %506, label %509

506:                                              ; preds = %494
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %503, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull dereferenceable(88) %11) #9
  %507 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %503, i64 1
  %508 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %507 to i64
  store i64 %508, i64* %51, align 8
  br label %510

509:                                              ; preds = %494
  call void @_ZNSt3__16vectorIN24ExistingBaseSubMenuModel12MenuItemInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.115"* nonnull %5, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull dereferenceable(88) %11) #9
  br label %510

510:                                              ; preds = %506, %509
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull %11) #9
  call void @_ZN2ui10ImageModelD1Ev(%"class.ui::ImageModel"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %50) #9
  %511 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %22, align 8
  %512 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %511, i64 -1, i32 2
  store i8 0, i8* %512, align 8
  call void @_ZN2ui10ImageModelD1Ev(%"class.ui::ImageModel"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #9
  %513 = load i8, i8* %47, align 1
  %514 = icmp slt i8 %513, 0
  br i1 %514, label %515, label %517

515:                                              ; preds = %510
  %516 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %516) #10
  br label %517

517:                                              ; preds = %510, %515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  %518 = load i8, i8* %40, align 1
  %519 = icmp slt i8 %518, 0
  br i1 %519, label %520, label %522

520:                                              ; preds = %517
  %521 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %521) #10
  br label %522

522:                                              ; preds = %517, %520
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  %523 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %136, i64 1
  %524 = icmp eq %"class.tab_groups::TabGroupId"* %523, %28
  br i1 %524, label %55, label %135
}

declare void @_ZN24ExistingBaseSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModelii(%class.ExistingBaseSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %"class.ui::ThemeProvider"* @_ZN12ThemeService26GetThemeProviderForProfileEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28ExistingTabGroupSubMenuModel28GetOrderedTabGroupsInSubMenuEv(%"class.std::__1::vector.127"* noalias sret, %class.ExistingTabGroupSubMenuModel*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.140", align 8
  %4 = alloca %"class.absl::optional.140", align 8
  %5 = alloca %"class.tab_groups::TabGroupId", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.127"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  store i8 0, i8* %9, align 8
  %10 = bitcast %class.ExistingTabGroupSubMenuModel* %1 to %class.ExistingBaseSubMenuModel*
  %11 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %1, i64 0, i32 0, i32 3
  %12 = load %class.TabStripModel*, %class.TabStripModel** %11, align 8
  %13 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %12, i64 0, i32 1
  %14 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %12, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.std::__1::unique_ptr"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.19"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"class.tab_groups::TabGroupId"** %6 to i64*
  br label %29

28:                                               ; preds = %73, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret void

29:                                               ; preds = %23, %73
  %30 = phi %class.TabStripModel* [ %12, %23 ], [ %75, %73 ]
  %31 = phi i32 [ 0, %23 ], [ %74, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %32 = bitcast %class.TabStripModel* %30 to void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)***
  %33 = load void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)** %33, i64 6
  %35 = load void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)** %34, align 8
  call void %35(%"class.absl::optional.140"* nonnull sret %4, %class.TabStripModel* %30, i32 %31) #9
  %36 = load i8, i8* %24, align 8, !range !22
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %29
  %39 = load i8, i8* %9, align 8, !range !22
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"* %25, %"class.tab_groups::TabGroupId"* dereferenceable(16) %26) #9
  br i1 %42, label %43, label %63

43:                                               ; preds = %38, %41
  %44 = load %class.TabStripModel*, %class.TabStripModel** %11, align 8
  %45 = call i32 @_ZNK24ExistingBaseSubMenuModel15GetContextIndexEv(%class.ExistingBaseSubMenuModel* %10) #9
  %46 = load i8, i8* %24, align 8, !range !22
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

49:                                               ; preds = %43
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %5, %"class.tab_groups::TabGroupId"* dereferenceable(16) %25) #9
  %50 = call zeroext i1 @_ZN28ExistingTabGroupSubMenuModel15ShouldShowGroupEP13TabStripModeliN10tab_groups10TabGroupIdE(%class.TabStripModel* %44, i32 %45, %"class.tab_groups::TabGroupId"* nonnull %5)
  br i1 %50, label %51, label %63

51:                                               ; preds = %49
  %52 = load i8, i8* %24, align 8, !range !22
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

55:                                               ; preds = %51
  %56 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %6, align 8
  %57 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %7, align 8
  %58 = icmp eq %"class.tab_groups::TabGroupId"* %56, %57
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %56, %"class.tab_groups::TabGroupId"* dereferenceable(16) %25) #9
  %60 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %56, i64 1
  %61 = ptrtoint %"class.tab_groups::TabGroupId"* %60 to i64
  store i64 %61, i64* %27, align 8
  br label %63

62:                                               ; preds = %55
  call void @_ZNSt3__16vectorIN10tab_groups10TabGroupIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.127"* %0, %"class.tab_groups::TabGroupId"* dereferenceable(16) %25) #9
  br label %63

63:                                               ; preds = %62, %59, %49, %41
  %64 = load i8, i8* %24, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = load i8, i8* %9, align 8, !range !22
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = call dereferenceable(16) %"class.tab_groups::TabGroupId"* @_ZN10tab_groups10TabGroupIdaSERKS0_(%"class.tab_groups::TabGroupId"* %26, %"class.tab_groups::TabGroupId"* dereferenceable(16) %25) #9
  br label %73

71:                                               ; preds = %66
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %26, %"class.tab_groups::TabGroupId"* dereferenceable(16) %25) #9
  store i8 1, i8* %9, align 8
  br label %73

72:                                               ; preds = %29, %63
  store i8 0, i8* %9, align 8
  br label %73

73:                                               ; preds = %69, %71, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  %74 = add nuw nsw i32 %31, 1
  %75 = load %class.TabStripModel*, %class.TabStripModel** %11, align 8
  %76 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %75, i64 0, i32 1
  %77 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %75, i64 0, i32 1, i32 0, i32 1
  %78 = bitcast %"class.std::__1::unique_ptr"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.19"* %76 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = lshr exact i64 %82, 3
  %84 = trunc i64 %83 to i32
  %85 = icmp slt i32 %74, %84
  br i1 %85, label %29, label %28
}

declare void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

declare %class.TabGroup* @_ZNK13TabGroupModel11GetTabGroupERKN10tab_groups10TabGroupIdE(%class.TabGroupModel*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK8TabGroup16GetContentStringEv(%"class.std::__1::basic_string"* sret, %class.TabGroup*) local_unnamed_addr #1

declare i32 @_Z29GetTabGroupContextMenuColorIdN10tab_groups15TabGroupColorIdE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2ui10ImageModel14FromVectorIconERKN3gfx10VectorIconEjiPS3_(%"class.ui::ImageModel"* sret, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*) local_unnamed_addr #1

declare void @_ZN2ui10ImageModelC1ERKS0_(%"class.ui::ImageModel"*, %"class.ui::ImageModel"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN2ui10ImageModelE(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.ui::ImageModel"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui10ImageModelD1Ev(%"class.ui::ImageModel"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN24ExistingBaseSubMenuModel5BuildEiNSt3__16vectorINS_12MenuItemInfoENS0_9allocatorIS2_EEEE(%class.ExistingBaseSubMenuModel*, i32, %"class.std::__1::vector.115"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN28ExistingTabGroupSubMenuModel15ShouldShowGroupEP13TabStripModeliN10tab_groups10TabGroupIdE(%class.TabStripModel*, i32, %"class.tab_groups::TabGroupId"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.140", align 8
  %5 = alloca %"class.absl::optional.140", align 8
  %6 = tail call zeroext i1 @_ZNK13TabStripModel13IsTabSelectedEi(%class.TabStripModel* %0, i32 %1) #9
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = bitcast %class.TabStripModel* %0 to void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)***
  %10 = load void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)** %10, i64 6
  %12 = load void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)** %11, align 8
  call void %12(%"class.absl::optional.140"* nonnull sret %4, %class.TabStripModel* %0, i32 %1) #9
  %13 = load i8, i8* %8, align 8, !range !22
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  br label %45

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"* %2, %"class.tab_groups::TabGroupId"* dereferenceable(16) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  br i1 %18, label %45, label %44

19:                                               ; preds = %3
  %20 = tail call dereferenceable(32) %"class.ui::ListSelectionModel"* @_ZNK13TabStripModel15selection_modelEv(%class.TabStripModel* %0) #9
  %21 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %22, %24
  br i1 %25, label %44, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %class.TabStripModel* %0 to void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)***
  %29 = getelementptr inbounds %"class.absl::optional.140", %"class.absl::optional.140"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %32

30:                                               ; preds = %41
  %31 = icmp eq i32* %43, %24
  br i1 %31, label %44, label %32

32:                                               ; preds = %26, %30
  %33 = phi i32* [ %22, %26 ], [ %43, %30 ]
  %34 = load i32, i32* %33, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %35 = load void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*** %28, align 8
  %36 = getelementptr inbounds void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)** %35, i64 6
  %37 = load void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.140"*, %class.TabStripModel*, i32)** %36, align 8
  call void %37(%"class.absl::optional.140"* nonnull sret %5, %class.TabStripModel* %0, i32 %34) #9
  %38 = load i8, i8* %27, align 8, !range !22
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  br label %45

41:                                               ; preds = %32
  %42 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"* %2, %"class.tab_groups::TabGroupId"* dereferenceable(16) %29) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %43 = getelementptr inbounds i32, i32* %33, i64 1
  br i1 %42, label %45, label %30

44:                                               ; preds = %30, %19, %16
  br label %45

45:                                               ; preds = %41, %40, %15, %16, %44
  %46 = phi i1 [ false, %44 ], [ true, %16 ], [ true, %15 ], [ true, %40 ], [ true, %41 ]
  ret i1 %46
}

declare i32 @_ZNK24ExistingBaseSubMenuModel15GetContextIndexEv(%class.ExistingBaseSubMenuModel*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN28ExistingTabGroupSubMenuModel17ShouldShowSubmenuEP13TabStripModeli(%class.TabStripModel*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.127", align 8
  %4 = alloca %"class.tab_groups::TabGroupId", align 8
  %5 = alloca %"class.tab_groups::TabGroupId", align 8
  %6 = bitcast %"class.std::__1::vector.127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %class.TabGroupModel*, %class.TabGroupModel** %7, align 8
  call void @_ZNK13TabGroupModel13ListTabGroupsEv(%"class.std::__1::vector.127"* nonnull sret %3, %class.TabGroupModel* %8) #9
  %9 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %3, i64 0, i32 0, i32 1
  %12 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %11, align 8
  %13 = icmp eq %"class.tab_groups::TabGroupId"* %10, %12
  br i1 %13, label %26, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.tab_groups::TabGroupId"* %4 to i8*
  %16 = bitcast %"class.tab_groups::TabGroupId"* %4 to i8*
  br label %19

17:                                               ; preds = %19
  %18 = icmp eq %"class.tab_groups::TabGroupId"* %22, %12
  br i1 %18, label %23, label %19

19:                                               ; preds = %14, %17
  %20 = phi %"class.tab_groups::TabGroupId"* [ %10, %14 ], [ %22, %17 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %4, %"class.tab_groups::TabGroupId"* dereferenceable(16) %20) #9
  call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* nonnull %5, %"class.tab_groups::TabGroupId"* nonnull dereferenceable(16) %4) #9
  %21 = call zeroext i1 @_ZN28ExistingTabGroupSubMenuModel15ShouldShowGroupEP13TabStripModeliN10tab_groups10TabGroupIdE(%class.TabStripModel* %0, i32 %1, %"class.tab_groups::TabGroupId"* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  %22 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %20, i64 1
  br i1 %21, label %23, label %17

23:                                               ; preds = %19, %17
  %24 = phi i32 [ 2, %17 ], [ 1, %19 ]
  %25 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %9, align 8
  br label %26

26:                                               ; preds = %23, %2
  %27 = phi %"class.tab_groups::TabGroupId"* [ %10, %2 ], [ %25, %23 ]
  %28 = phi i32 [ 2, %2 ], [ %24, %23 ]
  %29 = icmp eq %"class.tab_groups::TabGroupId"* %27, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %"class.tab_groups::TabGroupId"* %27 to i64
  %32 = bitcast %"class.tab_groups::TabGroupId"** %11 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.tab_groups::TabGroupId"* %27 to i8*
  call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %26, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %35 = icmp ne i32 %28, 2
  ret i1 %35
}

declare void @_ZNK13TabGroupModel13ListTabGroupsEv(%"class.std::__1::vector.127"* sret, %class.TabGroupModel*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28ExistingTabGroupSubMenuModel17ExecuteNewCommandEi(%class.ExistingTabGroupSubMenuModel* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %0, i64 0, i32 0, i32 2
  %4 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %3, align 8
  %5 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %4 to void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)***
  %6 = load void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)**, void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)*, void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)** %6, i64 10
  %8 = load void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)*, void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)** %7, align 8
  tail call void %8(%"class.ui::SimpleMenuModel::Delegate"* %4, i32 14, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28ExistingTabGroupSubMenuModel22ExecuteExistingCommandEi(%class.ExistingTabGroupSubMenuModel*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::UserMetricsAction", align 8
  %4 = alloca %"class.std::__1::vector.127", align 8
  %5 = alloca %"class.std::__1::vector.127", align 8
  %6 = bitcast %"struct.base::UserMetricsAction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %8 = sext i32 %1 to i64
  %9 = bitcast %"class.std::__1::vector.127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = bitcast %class.ExistingTabGroupSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  %11 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %0, i64 0, i32 0, i32 3
  %12 = load %class.TabStripModel*, %class.TabStripModel** %11, align 8
  %13 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.TabGroupModel*, %class.TabGroupModel** %13, align 8
  call void @_ZNK13TabGroupModel13ListTabGroupsEv(%"class.std::__1::vector.127"* nonnull sret %4, %class.TabGroupModel* %14) #9
  %15 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %4, i64 0, i32 0, i32 1
  %16 = bitcast %"class.tab_groups::TabGroupId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.127"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 4
  %22 = icmp ugt i64 %21, %8
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %2
  store i64 %19, i64* %16, align 8
  %25 = inttoptr i64 %19 to i8*
  call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %2, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  br i1 %22, label %27, label %46

27:                                               ; preds = %26
  %28 = load %class.TabStripModel*, %class.TabStripModel** %11, align 8
  %29 = call i32 @_ZNK24ExistingBaseSubMenuModel15GetContextIndexEv(%class.ExistingBaseSubMenuModel* %10) #9
  %30 = call zeroext i1 @_ZNK13TabStripModel13ContainsIndexEi(%class.TabStripModel* %28, i32 %29) #9
  br i1 %30, label %31, label %46

31:                                               ; preds = %27
  %32 = load %class.TabStripModel*, %class.TabStripModel** %11, align 8
  %33 = call i32 @_ZNK24ExistingBaseSubMenuModel15GetContextIndexEv(%class.ExistingBaseSubMenuModel* %10) #9
  %34 = bitcast %"class.std::__1::vector.127"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  call void @_ZN28ExistingTabGroupSubMenuModel28GetOrderedTabGroupsInSubMenuEv(%"class.std::__1::vector.127"* nonnull sret %5, %class.ExistingTabGroupSubMenuModel* %0)
  %35 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %5, i64 0, i32 0, i32 0
  %36 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %35, align 8
  %37 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %36, i64 %8
  call void @_ZN13TabStripModel32ExecuteAddToExistingGroupCommandEiRKN10tab_groups10TabGroupIdE(%class.TabStripModel* %32, i32 %33, %"class.tab_groups::TabGroupId"* dereferenceable(16) %37) #9
  %38 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %35, align 8
  %39 = icmp eq %"class.tab_groups::TabGroupId"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %31
  %41 = ptrtoint %"class.tab_groups::TabGroupId"* %38 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %5, i64 0, i32 0, i32 1
  %43 = bitcast %"class.tab_groups::TabGroupId"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.tab_groups::TabGroupId"* %38 to i8*
  call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %31, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  br label %46

46:                                               ; preds = %26, %27, %45
  ret void
}

declare void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK13TabStripModel13ContainsIndexEi(%class.TabStripModel*, i32) local_unnamed_addr #1

declare void @_ZN13TabStripModel32ExecuteAddToExistingGroupCommandEiRKN10tab_groups10TabGroupIdE(%class.TabStripModel*, i32, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK13TabStripModel13IsTabSelectedEi(%class.TabStripModel*, i32) local_unnamed_addr #1

declare dereferenceable(32) %"class.ui::ListSelectionModel"* @_ZNK13TabStripModel15selection_modelEv(%class.TabStripModel*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN28ExistingTabGroupSubMenuModelD0Ev(%class.ExistingTabGroupSubMenuModel*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.ExistingTabGroupSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %2) #9
  %3 = bitcast %class.ExistingTabGroupSubMenuModel* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8HasIconsEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel12GetItemCountEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel9GetTypeAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel18GetSeparatorTypeAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel14GetCommandIdAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel10GetLabelAtEi(%"class.std::__1::basic_string"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui9MenuModel19GetSecondaryLabelAtEi(%"class.std::__1::basic_string"* sret, %"class.ui::MenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel14GetMinorTextAtEi(%"class.std::__1::basic_string"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel14GetMinorIconAtEi(%"class.ui::ImageModel"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel15IsItemDynamicAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel18MayHaveMnemonicsAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare %"class.gfx::FontList"* @_ZNK2ui9MenuModel18GetLabelFontListAtEi(%"class.ui::MenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel16GetAcceleratorAtEiPNS_11AcceleratorE(%"class.ui::SimpleMenuModel"*, i32, %"class.ui::Accelerator"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel15IsItemCheckedAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel12GetGroupIdAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel9GetIconAtEi(%"class.ui::ImageModel"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare %"class.ui::ButtonMenuItemModel"* @_ZNK2ui15SimpleMenuModel19GetButtonMenuItemAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel11IsEnabledAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel11IsVisibleAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel11IsAlertedAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel14IsNewFeatureAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i8* @_ZNK2ui15SimpleMenuModel22GetElementIdentifierAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare %"class.ui::MenuModel"* @_ZNK2ui15SimpleMenuModel17GetSubmenuModelAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel11ActivatedAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel11ActivatedAtEii(%"class.ui::SimpleMenuModel"*, i32, i32) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel12MenuWillShowEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel13MenuWillCloseEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel16MenuItemsChangedEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare zeroext i1 @_ZNK24ExistingBaseSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE(%class.ExistingBaseSubMenuModel*, i32, %"class.ui::Accelerator"*) unnamed_addr #1

declare zeroext i1 @_ZNK24ExistingBaseSubMenuModel18IsCommandIdCheckedEi(%class.ExistingBaseSubMenuModel*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK24ExistingBaseSubMenuModel18IsCommandIdEnabledEi(%class.ExistingBaseSubMenuModel*, i32) unnamed_addr #1

declare void @_ZN24ExistingBaseSubMenuModel14ExecuteCommandEii(%class.ExistingBaseSubMenuModel*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK24ExistingBaseSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE(%class.ExistingBaseSubMenuModel*, i32, %"class.ui::Accelerator"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_N28ExistingTabGroupSubMenuModelD1Ev(%class.ExistingTabGroupSubMenuModel*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.14"* %2 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_N28ExistingTabGroupSubMenuModelD0Ev(%class.ExistingTabGroupSubMenuModel*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.ExistingTabGroupSubMenuModel, %class.ExistingTabGroupSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.14"* %2 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %3) #9
  %4 = bitcast %"class.std::__1::__compressed_pair.14"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK24ExistingBaseSubMenuModel18IsCommandIdCheckedEi(%class.ExistingBaseSubMenuModel*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn72_NK24ExistingBaseSubMenuModel18IsCommandIdEnabledEi(%class.ExistingBaseSubMenuModel*, i32) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdVisibleEi(%"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdAlertedEi(%"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8Delegate25IsItemForCommandIdDynamicEi(%"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel8Delegate20GetLabelForCommandIdEi(%"class.std::__1::basic_string"* sret, %"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel8Delegate19GetIconForCommandIdEi(%"class.ui::ImageModel"* sret, %"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N24ExistingBaseSubMenuModel14ExecuteCommandEii(%class.ExistingBaseSubMenuModel*, i32, i32) unnamed_addr #0 align 2

declare void @_ZN2ui15SimpleMenuModel8Delegate14OnMenuWillShowEPS0_(%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel8Delegate10MenuClosedEPS0_(%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare zeroext i1 @_ZNK10tab_groups10TabGroupIdneERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(16) %"class.tab_groups::TabGroupId"* @_ZN10tab_groups10TabGroupIdaSERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN24ExistingBaseSubMenuModel12MenuItemInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.115"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.115"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 209622091746699450
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.115"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 88
  %20 = icmp ult i64 %19, 104811045873349725
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 209622091746699450, %14 ]
  %28 = mul i64 %27, 88
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %35 to i64
  tail call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %34, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88) %1) #9
  %37 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %34, i64 1
  %38 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %39, align 8
  %41 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %3, align 8
  %42 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %47, i64 -1
  tail call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %48, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88) %49) #9
  %50 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  %60 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %62, i64 -1
  tail call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %63) #9
  %64 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10tab_groups10TabGroupIdENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.127"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.tab_groups::TabGroupId"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.127"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.127"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.tab_groups::TabGroupId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.tab_groups::TabGroupId"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.tab_groups::TabGroupId"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %36, i64 %9
  %38 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %36, i64 %35
  %39 = ptrtoint %"class.tab_groups::TabGroupId"* %38 to i64
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %37, %"class.tab_groups::TabGroupId"* dereferenceable(16) %1) #9
  %40 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %37, i64 1
  %41 = ptrtoint %"class.tab_groups::TabGroupId"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.127", %"class.std::__1::vector.127"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %42, align 8
  %44 = load %"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"** %3, align 8
  %45 = icmp eq %"class.tab_groups::TabGroupId"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.tab_groups::TabGroupId"* %43 to i64
  br label %56

48:                                               ; preds = %34, %48
  %49 = phi %"class.tab_groups::TabGroupId"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.tab_groups::TabGroupId"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %49, i64 -1
  %52 = getelementptr inbounds %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupId"* %50, i64 -1
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %51, %"class.tab_groups::TabGroupId"* dereferenceable(16) %52) #9
  %53 = icmp eq %"class.tab_groups::TabGroupId"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %"class.tab_groups::TabGroupId"* [ %37, %46 ], [ %51, %54 ]
  %58 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %59 = ptrtoint %"class.tab_groups::TabGroupId"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %56, %61
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
