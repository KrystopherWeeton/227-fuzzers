; ModuleID = '../../third_party/skia/modules/skshaper/src/SkShaper_primitive.cpp'
source_filename = "../../third_party/skia/modules/skshaper/src/SkShaper_primitive.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.SkPoint = type { float, float }
%"struct.SkShaper::RunHandler::Range" = type { i64, i64 }
%class.SkShaper = type { i32 (...)** }
%class.SkShaperPrimitive = type { %class.SkShaper }
%"class.SkShaper::FontRunIterator" = type { %"class.SkShaper::RunIterator" }
%"class.SkShaper::RunIterator" = type { i32 (...)** }
%"class.SkShaper::BiDiRunIterator" = type { %"class.SkShaper::RunIterator" }
%"class.SkShaper::ScriptRunIterator" = type { %"class.SkShaper::RunIterator" }
%"class.SkShaper::LanguageRunIterator" = type { %"class.SkShaper::RunIterator" }
%"class.SkShaper::RunHandler" = type { i32 (...)** }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.SkShaper::Feature" = type { i32, i32, i64, i64 }
%"struct.SkShaper::RunHandler::RunInfo" = type { %class.SkFont*, i8, %struct.SkPoint, i64, %"struct.SkShaper::RunHandler::Range" }
%"struct.SkShaper::RunHandler::Buffer" = type { i16*, %struct.SkPoint*, %struct.SkPoint*, i32*, %struct.SkPoint }
%class.SkPaint = type <{ %class.sk_sp.25, %class.sk_sp.26, %class.sk_sp.27, %class.sk_sp.28, %class.sk_sp.29, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.25 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.26 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.27 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.28 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.29 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }

$_ZN17SkShaperPrimitiveD0Ev = comdat any

@__const._ZNK17SkShaperPrimitive5shapeEPKcmRK6SkFontbfPN8SkShaper10RunHandlerE.info = private unnamed_addr constant { %class.SkFont*, i8, [3 x i8], %struct.SkPoint, [4 x i8], i64, %"struct.SkShaper::RunHandler::Range" } { %class.SkFont* inttoptr (i64 -6148914691236517206 to %class.SkFont*), i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"struct.SkShaper::RunHandler::Range" { i64 -6148914691236517206, i64 -6148914691236517206 } }, align 8
@_ZTV17SkShaperPrimitive = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkShaper*)* @_ZN8SkShaperD2Ev to i8*), i8* bitcast (void (%class.SkShaperPrimitive*)* @_ZN17SkShaperPrimitiveD0Ev to i8*), i8* bitcast (void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)* @_ZNK17SkShaperPrimitive5shapeEPKcmRK6SkFontbfPN8SkShaper10RunHandlerE to i8*), i8* bitcast (void (%class.SkShaperPrimitive*, i8*, i64, %"class.SkShaper::FontRunIterator"*, %"class.SkShaper::BiDiRunIterator"*, %"class.SkShaper::ScriptRunIterator"*, %"class.SkShaper::LanguageRunIterator"*, float, %"class.SkShaper::RunHandler"*)* @_ZNK17SkShaperPrimitive5shapeEPKcmRN8SkShaper15FontRunIteratorERNS2_15BiDiRunIteratorERNS2_17ScriptRunIteratorERNS2_19LanguageRunIteratorEfPNS2_10RunHandlerE to i8*), i8* bitcast (void (%class.SkShaperPrimitive*, i8*, i64, %"class.SkShaper::FontRunIterator"*, %"class.SkShaper::BiDiRunIterator"*, %"class.SkShaper::ScriptRunIterator"*, %"class.SkShaper::LanguageRunIterator"*, %"struct.SkShaper::Feature"*, i64, float, %"class.SkShaper::RunHandler"*)* @_ZNK17SkShaperPrimitive5shapeEPKcmRN8SkShaper15FontRunIteratorERNS2_15BiDiRunIteratorERNS2_17ScriptRunIteratorERNS2_19LanguageRunIteratorEPKNS2_7FeatureEmfPNS2_10RunHandlerE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkShaper* @_ZN8SkShaper13MakePrimitiveEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #7
  %2 = bitcast i8* %1 to %class.SkShaper*
  tail call void @_ZN8SkShaperC2Ev(%class.SkShaper* nonnull %2) #8
  %3 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV17SkShaperPrimitive, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret %class.SkShaper* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkShaperPrimitive5shapeEPKcmRN8SkShaper15FontRunIteratorERNS2_15BiDiRunIteratorERNS2_17ScriptRunIteratorERNS2_19LanguageRunIteratorEfPNS2_10RunHandlerE(%class.SkShaperPrimitive*, i8*, i64, %"class.SkShaper::FontRunIterator"* dereferenceable(8), %"class.SkShaper::BiDiRunIterator"* dereferenceable(8), %"class.SkShaper::ScriptRunIterator"* nocapture readnone dereferenceable(8), %"class.SkShaper::LanguageRunIterator"* nocapture readnone dereferenceable(8), float, %"class.SkShaper::RunHandler"*) unnamed_addr #0 align 2 {
  %10 = alloca %class.SkFont, align 8
  %11 = bitcast %class.SkFont* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %12, align 8
  %13 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %13, align 8
  %14 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %15, align 8
  %16 = getelementptr inbounds %class.SkFont, %class.SkFont* %10, i64 0, i32 4
  %17 = bitcast i8* %16 to i32*
  store i32 -1431655766, i32* %17, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %10) #8
  %18 = getelementptr inbounds %"class.SkShaper::FontRunIterator", %"class.SkShaper::FontRunIterator"* %3, i64 0, i32 0
  %19 = bitcast %"class.SkShaper::FontRunIterator"* %3 to i1 (%"class.SkShaper::RunIterator"*)***
  %20 = load i1 (%"class.SkShaper::RunIterator"*)**, i1 (%"class.SkShaper::RunIterator"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.SkShaper::RunIterator"*)*, i1 (%"class.SkShaper::RunIterator"*)** %20, i64 4
  %22 = load i1 (%"class.SkShaper::RunIterator"*)*, i1 (%"class.SkShaper::RunIterator"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.SkShaper::RunIterator"* %18) #8
  br i1 %23, label %59, label %24

24:                                               ; preds = %9
  %25 = bitcast %"class.SkShaper::FontRunIterator"* %3 to void (%"class.SkShaper::RunIterator"*)***
  %26 = load void (%"class.SkShaper::RunIterator"*)**, void (%"class.SkShaper::RunIterator"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %26, i64 2
  %28 = load void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %27, align 8
  call void %28(%"class.SkShaper::RunIterator"* %18) #8
  %29 = bitcast %"class.SkShaper::FontRunIterator"* %3 to %class.SkFont* (%"class.SkShaper::FontRunIterator"*)***
  %30 = load %class.SkFont* (%"class.SkShaper::FontRunIterator"*)**, %class.SkFont* (%"class.SkShaper::FontRunIterator"*)*** %29, align 8
  %31 = getelementptr inbounds %class.SkFont* (%"class.SkShaper::FontRunIterator"*)*, %class.SkFont* (%"class.SkShaper::FontRunIterator"*)** %30, i64 5
  %32 = load %class.SkFont* (%"class.SkShaper::FontRunIterator"*)*, %class.SkFont* (%"class.SkShaper::FontRunIterator"*)** %31, align 8
  %33 = call dereferenceable(24) %class.SkFont* %32(%"class.SkShaper::FontRunIterator"* %3) #8
  %34 = icmp eq %class.SkFont* %10, %33
  br i1 %34, label %55, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds %class.SkFont, %class.SkFont* %33, i64 0, i32 0, i32 0
  %37 = load %class.SkTypeface*, %class.SkTypeface** %36, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %39, %35
  %43 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  store %class.SkTypeface* %37, %class.SkTypeface** %12, align 8
  %44 = icmp eq %class.SkTypeface* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkTypeface* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkTypeface* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #8
  br label %55

55:                                               ; preds = %24, %42, %45, %49
  %56 = getelementptr inbounds %class.SkFont, %class.SkFont* %33, i64 0, i32 1
  %57 = bitcast float* %13 to i8*
  %58 = bitcast float* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 15, i1 false) #8
  br label %90

59:                                               ; preds = %9
  %60 = call %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont* nonnull %10) #8
  %61 = icmp eq %class.SkTypeface* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic, !noalias !2
  %65 = atomicrmw add i32* %63, i32 1 monotonic
  br label %66

66:                                               ; preds = %59, %62
  %67 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  store %class.SkTypeface* %60, %class.SkTypeface** %12, align 8
  %68 = icmp eq %class.SkTypeface* %67, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %class.SkTypeface* %67 to %class.SkRefCntBase*
  %75 = bitcast %class.SkTypeface* %67 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8
  call void %78(%class.SkRefCntBase* nonnull %74) #8
  br label %79

79:                                               ; preds = %66, %69, %73
  br i1 %61, label %90, label %80

80:                                               ; preds = %79
  %81 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %60, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.SkTypeface* %60 to %class.SkRefCntBase*
  %86 = bitcast %class.SkTypeface* %60 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #8
  br label %90

90:                                               ; preds = %84, %80, %79, %55
  %91 = getelementptr inbounds %"class.SkShaper::BiDiRunIterator", %"class.SkShaper::BiDiRunIterator"* %4, i64 0, i32 0
  %92 = bitcast %"class.SkShaper::BiDiRunIterator"* %4 to i1 (%"class.SkShaper::RunIterator"*)***
  %93 = load i1 (%"class.SkShaper::RunIterator"*)**, i1 (%"class.SkShaper::RunIterator"*)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.SkShaper::RunIterator"*)*, i1 (%"class.SkShaper::RunIterator"*)** %93, i64 4
  %95 = load i1 (%"class.SkShaper::RunIterator"*)*, i1 (%"class.SkShaper::RunIterator"*)** %94, align 8
  %96 = call zeroext i1 %95(%"class.SkShaper::RunIterator"* %91) #8
  br i1 %96, label %109, label %97

97:                                               ; preds = %90
  %98 = bitcast %"class.SkShaper::BiDiRunIterator"* %4 to void (%"class.SkShaper::RunIterator"*)***
  %99 = load void (%"class.SkShaper::RunIterator"*)**, void (%"class.SkShaper::RunIterator"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %99, i64 2
  %101 = load void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %100, align 8
  call void %101(%"class.SkShaper::RunIterator"* %91) #8
  %102 = bitcast %"class.SkShaper::BiDiRunIterator"* %4 to i8 (%"class.SkShaper::BiDiRunIterator"*)***
  %103 = load i8 (%"class.SkShaper::BiDiRunIterator"*)**, i8 (%"class.SkShaper::BiDiRunIterator"*)*** %102, align 8
  %104 = getelementptr inbounds i8 (%"class.SkShaper::BiDiRunIterator"*)*, i8 (%"class.SkShaper::BiDiRunIterator"*)** %103, i64 5
  %105 = load i8 (%"class.SkShaper::BiDiRunIterator"*)*, i8 (%"class.SkShaper::BiDiRunIterator"*)** %104, align 8
  %106 = call zeroext i8 %105(%"class.SkShaper::BiDiRunIterator"* %4) #8
  %107 = and i8 %106, 1
  %108 = icmp eq i8 %107, 0
  br label %109

109:                                              ; preds = %97, %90
  %110 = phi i1 [ false, %90 ], [ %108, %97 ]
  %111 = bitcast %class.SkShaperPrimitive* %0 to void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)***
  %112 = load void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)**, void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)*, void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)** %112, i64 2
  %114 = load void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)*, void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)** %113, align 8
  call void %114(%class.SkShaperPrimitive* %0, i8* %1, i64 %2, %class.SkFont* nonnull dereferenceable(24) %10, i1 zeroext %110, float %7, %"class.SkShaper::RunHandler"* %8) #8
  %115 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  %116 = icmp eq %class.SkTypeface* %115, null
  br i1 %116, label %127, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %115, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = bitcast %class.SkTypeface* %115 to %class.SkRefCntBase*
  %123 = bitcast %class.SkTypeface* %115 to void (%class.SkRefCntBase*)***
  %124 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %123, align 8
  %125 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, i64 2
  %126 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, align 8
  call void %126(%class.SkRefCntBase* nonnull %122) #8
  br label %127

127:                                              ; preds = %109, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  ret void
}

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #2

declare %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkShaperPrimitive5shapeEPKcmRN8SkShaper15FontRunIteratorERNS2_15BiDiRunIteratorERNS2_17ScriptRunIteratorERNS2_19LanguageRunIteratorEPKNS2_7FeatureEmfPNS2_10RunHandlerE(%class.SkShaperPrimitive*, i8*, i64, %"class.SkShaper::FontRunIterator"* dereferenceable(8), %"class.SkShaper::BiDiRunIterator"* dereferenceable(8), %"class.SkShaper::ScriptRunIterator"* nocapture readnone dereferenceable(8), %"class.SkShaper::LanguageRunIterator"* nocapture readnone dereferenceable(8), %"struct.SkShaper::Feature"* nocapture readnone, i64, float, %"class.SkShaper::RunHandler"*) unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.SkShaper::FontRunIterator", %"class.SkShaper::FontRunIterator"* %3, i64 0, i32 0
  %13 = bitcast %"class.SkShaper::FontRunIterator"* %3 to void (%"class.SkShaper::RunIterator"*)***
  %14 = load void (%"class.SkShaper::RunIterator"*)**, void (%"class.SkShaper::RunIterator"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %14, i64 2
  %16 = load void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %15, align 8
  tail call void %16(%"class.SkShaper::RunIterator"* %12) #8
  %17 = getelementptr inbounds %"class.SkShaper::BiDiRunIterator", %"class.SkShaper::BiDiRunIterator"* %4, i64 0, i32 0
  %18 = bitcast %"class.SkShaper::BiDiRunIterator"* %4 to void (%"class.SkShaper::RunIterator"*)***
  %19 = load void (%"class.SkShaper::RunIterator"*)**, void (%"class.SkShaper::RunIterator"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %19, i64 2
  %21 = load void (%"class.SkShaper::RunIterator"*)*, void (%"class.SkShaper::RunIterator"*)** %20, align 8
  tail call void %21(%"class.SkShaper::RunIterator"* %17) #8
  %22 = bitcast %"class.SkShaper::FontRunIterator"* %3 to %class.SkFont* (%"class.SkShaper::FontRunIterator"*)***
  %23 = load %class.SkFont* (%"class.SkShaper::FontRunIterator"*)**, %class.SkFont* (%"class.SkShaper::FontRunIterator"*)*** %22, align 8
  %24 = getelementptr inbounds %class.SkFont* (%"class.SkShaper::FontRunIterator"*)*, %class.SkFont* (%"class.SkShaper::FontRunIterator"*)** %23, i64 5
  %25 = load %class.SkFont* (%"class.SkShaper::FontRunIterator"*)*, %class.SkFont* (%"class.SkShaper::FontRunIterator"*)** %24, align 8
  %26 = tail call dereferenceable(24) %class.SkFont* %25(%"class.SkShaper::FontRunIterator"* %3) #8
  %27 = bitcast %"class.SkShaper::BiDiRunIterator"* %4 to i8 (%"class.SkShaper::BiDiRunIterator"*)***
  %28 = load i8 (%"class.SkShaper::BiDiRunIterator"*)**, i8 (%"class.SkShaper::BiDiRunIterator"*)*** %27, align 8
  %29 = getelementptr inbounds i8 (%"class.SkShaper::BiDiRunIterator"*)*, i8 (%"class.SkShaper::BiDiRunIterator"*)** %28, i64 5
  %30 = load i8 (%"class.SkShaper::BiDiRunIterator"*)*, i8 (%"class.SkShaper::BiDiRunIterator"*)** %29, align 8
  %31 = tail call zeroext i8 %30(%"class.SkShaper::BiDiRunIterator"* %4) #8
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  %34 = bitcast %class.SkShaperPrimitive* %0 to void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)***
  %35 = load void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)**, void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)*, void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)** %35, i64 2
  %37 = load void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)*, void (%class.SkShaperPrimitive*, i8*, i64, %class.SkFont*, i1, float, %"class.SkShaper::RunHandler"*)** %36, align 8
  tail call void %37(%class.SkShaperPrimitive* %0, i8* %1, i64 %2, %class.SkFont* dereferenceable(24) %26, i1 zeroext %33, float %9, %"class.SkShaper::RunHandler"* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkShaperPrimitive5shapeEPKcmRK6SkFontbfPN8SkShaper10RunHandlerE(%class.SkShaperPrimitive* nocapture readnone, i8*, i64, %class.SkFont* dereferenceable(24), i1 zeroext, float, %"class.SkShaper::RunHandler"*) unnamed_addr #0 align 2 {
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"struct.SkShaper::RunHandler::RunInfo", align 8
  %11 = alloca %"struct.SkShaper::RunHandler::Buffer", align 8
  %12 = alloca i8*, align 8
  %13 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %3, i8* %1, i64 %2, i32 0, i16* null, i32 0) #8
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %185, label %15

15:                                               ; preds = %7
  %16 = sext i32 %13 to i64
  %17 = shl nuw nsw i64 %16, 1
  %18 = tail call i8* @_Znam(i64 %17) #7
  %19 = bitcast i8* %18 to i16*
  %20 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %3, i8* %1, i64 %2, i32 0, i16* nonnull %19, i32 %13) #8
  %21 = shl nuw nsw i64 %16, 2
  %22 = tail call i8* @_Znam(i64 %21) #7
  %23 = bitcast i8* %22 to float*
  tail call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %3, i16* nonnull %19, i32 %13, float* nonnull %23, %struct.SkRect* null, %class.SkPaint* null) #8
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %184, label %25

25:                                               ; preds = %15
  %26 = bitcast i8** %8 to i8*
  %27 = bitcast i8** %9 to i8*
  %28 = bitcast i8** %8 to i64*
  %29 = bitcast i8** %9 to i64*
  %30 = bitcast %"struct.SkShaper::RunHandler::RunInfo"* %10 to i8*
  %31 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 2, i32 1
  %35 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 4, i32 0
  %37 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %10, i64 0, i32 4, i32 1
  %38 = bitcast %"class.SkShaper::RunHandler"* %6 to void (%"class.SkShaper::RunHandler"*)***
  %39 = bitcast %"class.SkShaper::RunHandler"* %6 to void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)***
  %40 = bitcast %"struct.SkShaper::RunHandler::Buffer"* %11 to i8*
  %41 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %11, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %11, i64 0, i32 3
  %43 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %11, i64 0, i32 4, i32 0
  %44 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %11, i64 0, i32 4, i32 1
  %45 = bitcast %"class.SkShaper::RunHandler"* %6 to void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)***
  %46 = bitcast %"struct.SkShaper::RunHandler::Buffer"* %11 to i8**
  %47 = bitcast float* %44 to i32*
  %48 = bitcast i8** %12 to i8*
  %49 = bitcast i8** %12 to i64*
  %50 = bitcast %"struct.SkShaper::RunHandler::Buffer"* %11 to i8*
  br label %51

51:                                               ; preds = %25, %170
  %52 = phi i8* [ %1, %25 ], [ %181, %170 ]
  %53 = phi i64 [ 0, %25 ], [ %180, %170 ]
  %54 = phi i64 [ 0, %25 ], [ %179, %170 ]
  %55 = phi i64 [ %2, %25 ], [ %182, %170 ]
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = getelementptr inbounds float, float* %23, i64 %54
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store i8* %52, i8** %8, align 8
  %58 = icmp sgt i64 %55, 0
  %59 = ptrtoint i8* %52 to i64
  br i1 %58, label %60, label %109

60:                                               ; preds = %51, %77
  %61 = phi float [ %70, %77 ], [ 0.000000e+00, %51 ]
  %62 = phi i1 [ %74, %77 ], [ true, %51 ]
  %63 = phi i8* [ %75, %77 ], [ %52, %51 ]
  %64 = phi i64 [ %67, %77 ], [ 0, %51 ]
  %65 = phi i8* [ %78, %77 ], [ %52, %51 ]
  %66 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** nonnull %8, i8* %56) #8
  %67 = add nuw i64 %64, 1
  %68 = getelementptr inbounds float, float* %57, i64 %64
  %69 = load float, float* %68, align 4
  %70 = fadd float %61, %69
  switch i32 %66, label %71 [
    i32 32, label %73
    i32 5760, label %73
    i32 6158, label %73
    i32 8192, label %73
    i32 8193, label %73
    i32 8194, label %73
    i32 8195, label %73
    i32 8196, label %73
    i32 8197, label %73
    i32 8198, label %73
    i32 8199, label %73
    i32 8200, label %73
    i32 8201, label %73
    i32 8202, label %73
    i32 8203, label %73
    i32 8239, label %73
    i32 8287, label %73
    i32 12288, label %73
  ]

71:                                               ; preds = %60
  %72 = select i1 %62, i8* %65, i8* %63
  br label %73

73:                                               ; preds = %71, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60
  %74 = phi i1 [ false, %71 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ], [ true, %60 ]
  %75 = phi i8* [ %72, %71 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ], [ %63, %60 ]
  %76 = fcmp ogt float %70, %5
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = load i8*, i8** %8, align 8
  %79 = icmp ult i8* %78, %56
  br i1 %79, label %60, label %107

80:                                               ; preds = %73
  br i1 %74, label %81, label %97

81:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %82 = load i64, i64* %28, align 8
  store i64 %82, i64* %29, align 8
  %83 = inttoptr i64 %82 to i8*
  %84 = icmp ugt i8* %56, %83
  br i1 %84, label %85, label %93

85:                                               ; preds = %81, %89
  %86 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** nonnull %9, i8* %56) #8
  switch i32 %86, label %87 [
    i32 32, label %89
    i32 5760, label %89
    i32 6158, label %89
    i32 8192, label %89
    i32 8193, label %89
    i32 8194, label %89
    i32 8195, label %89
    i32 8196, label %89
    i32 8197, label %89
    i32 8198, label %89
    i32 8199, label %89
    i32 8200, label %89
    i32 8201, label %89
    i32 8202, label %89
    i32 8203, label %89
    i32 8239, label %89
    i32 8287, label %89
    i32 12288, label %89
  ]

87:                                               ; preds = %85
  %88 = load i64, i64* %28, align 8
  br label %93

89:                                               ; preds = %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85, %85
  %90 = load i64, i64* %29, align 8
  store i64 %90, i64* %28, align 8
  %91 = inttoptr i64 %90 to i8*
  %92 = icmp ugt i8* %56, %91
  br i1 %92, label %85, label %93

93:                                               ; preds = %89, %87, %81
  %94 = phi i64 [ %82, %81 ], [ %88, %87 ], [ %90, %89 ]
  %95 = ptrtoint i8* %65 to i64
  %96 = sub i64 %94, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %109

97:                                               ; preds = %80
  %98 = icmp eq i8* %75, %52
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  %100 = icmp ugt i8* %65, %52
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = load i64, i64* %28, align 8
  br label %109

103:                                              ; preds = %99
  store i8* %65, i8** %8, align 8
  %104 = ptrtoint i8* %65 to i64
  br label %109

105:                                              ; preds = %97
  store i8* %75, i8** %8, align 8
  %106 = ptrtoint i8* %75 to i64
  br label %109

107:                                              ; preds = %77
  %108 = ptrtoint i8* %78 to i64
  br label %109

109:                                              ; preds = %101, %107, %51, %93, %103, %105
  %110 = phi i64 [ %94, %93 ], [ %104, %103 ], [ %102, %101 ], [ %106, %105 ], [ %59, %51 ], [ %108, %107 ]
  %111 = phi i64 [ %96, %93 ], [ 0, %103 ], [ 0, %101 ], [ 0, %105 ], [ 0, %51 ], [ 0, %107 ]
  %112 = sub i64 %110, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  %113 = sub i64 %112, %111
  %114 = call i32 @_ZN5SkUTF9CountUTF8EPKcm(i8* %52, i64 %113) #8
  %115 = sext i32 %114 to i64
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast ({ %class.SkFont*, i8, [3 x i8], %struct.SkPoint, [4 x i8], i64, %"struct.SkShaper::RunHandler::Range" }* @__const._ZNK17SkShaperPrimitive5shapeEPKcmRK6SkFontbfPN8SkShaper10RunHandlerE.info to i8*), i64 48, i1 false)
  store %class.SkFont* %3, %class.SkFont** %31, align 8
  store i8 0, i8* %32, align 8
  %116 = call float @_ZNK6SkFont11measureTextEPKvm14SkTextEncodingP6SkRectPK7SkPaint(%class.SkFont* %3, i8* %52, i64 %113, i32 0, %struct.SkRect* null, %class.SkPaint* null) #8
  store float %116, float* %33, align 4
  store float 0.000000e+00, float* %34, align 4
  store i64 %115, i64* %35, align 8
  store i64 %53, i64* %36, align 8
  store i64 %113, i64* %37, align 8
  %117 = load void (%"class.SkShaper::RunHandler"*)**, void (%"class.SkShaper::RunHandler"*)*** %38, align 8
  %118 = getelementptr inbounds void (%"class.SkShaper::RunHandler"*)*, void (%"class.SkShaper::RunHandler"*)** %117, i64 2
  %119 = load void (%"class.SkShaper::RunHandler"*)*, void (%"class.SkShaper::RunHandler"*)** %118, align 8
  call void %119(%"class.SkShaper::RunHandler"* %6) #8
  %120 = load void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)**, void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*** %39, align 8
  %121 = getelementptr inbounds void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*, void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)** %120, i64 3
  %122 = load void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*, void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)** %121, align 8
  call void %122(%"class.SkShaper::RunHandler"* %6, %"struct.SkShaper::RunHandler::RunInfo"* nonnull dereferenceable(48) %10) #8
  %123 = load void (%"class.SkShaper::RunHandler"*)**, void (%"class.SkShaper::RunHandler"*)*** %38, align 8
  %124 = getelementptr inbounds void (%"class.SkShaper::RunHandler"*)*, void (%"class.SkShaper::RunHandler"*)** %123, i64 4
  %125 = load void (%"class.SkShaper::RunHandler"*)*, void (%"class.SkShaper::RunHandler"*)** %124, align 8
  call void %125(%"class.SkShaper::RunHandler"* %6) #8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %43, align 8
  store float 0xFFFFFFFFE0000000, float* %44, align 4
  %126 = load void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)**, void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*** %45, align 8
  %127 = getelementptr inbounds void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*, void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)** %126, i64 5
  %128 = load void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*, void (%"struct.SkShaper::RunHandler::Buffer"*, %"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)** %127, align 8
  call void %128(%"struct.SkShaper::RunHandler::Buffer"* nonnull sret %11, %"class.SkShaper::RunHandler"* %6, %"struct.SkShaper::RunHandler::RunInfo"* nonnull dereferenceable(48) %10) #8
  %129 = load i8*, i8** %46, align 8
  %130 = getelementptr inbounds i16, i16* %19, i64 %54
  %131 = bitcast i16* %130 to i8*
  %132 = shl nsw i64 %115, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %129, i8* align 2 %131, i64 %132, i1 false)
  %133 = load i32, i32* %47, align 4
  %134 = icmp eq i32 %114, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %109
  %136 = load float, float* %43, align 8
  br label %140

137:                                              ; preds = %140, %109
  %138 = load i32*, i32** %42, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %170, label %153

140:                                              ; preds = %135, %140
  %141 = phi i64 [ %151, %140 ], [ 0, %135 ]
  %142 = phi float [ %150, %140 ], [ %136, %135 ]
  %143 = load %struct.SkPoint*, %struct.SkPoint** %41, align 8
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %143, i64 %141, i32 0
  store float %142, float* %144, align 4
  %145 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %143, i64 %141, i32 1
  %146 = bitcast float* %145 to i32*
  store i32 %133, i32* %146, align 4
  %147 = add i64 %141, %54
  %148 = getelementptr inbounds float, float* %23, i64 %147
  %149 = load float, float* %148, align 4
  %150 = fadd float %142, %149
  %151 = add nuw i64 %141, 1
  %152 = icmp ult i64 %151, %115
  br i1 %152, label %140, label %137

153:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  store i8* %52, i8** %12, align 8
  br i1 %134, label %159, label %154

154:                                              ; preds = %153
  %155 = sub i64 %53, %59
  %156 = trunc i64 %53 to i32
  store i32 %156, i32* %138, align 4
  %157 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** nonnull %12, i8* %56) #8
  %158 = icmp eq i32 %114, 1
  br i1 %158, label %159, label %160

159:                                              ; preds = %160, %154, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br label %170

160:                                              ; preds = %154, %160
  %161 = phi i64 [ %168, %160 ], [ 1, %154 ]
  %162 = load i64, i64* %49, align 8
  %163 = load i32*, i32** %42, align 8
  %164 = add i64 %155, %162
  %165 = trunc i64 %164 to i32
  %166 = getelementptr inbounds i32, i32* %163, i64 %161
  store i32 %165, i32* %166, align 4
  %167 = call i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8** nonnull %12, i8* %56) #8
  %168 = add nuw i64 %161, 1
  %169 = icmp ult i64 %168, %115
  br i1 %169, label %160, label %159

170:                                              ; preds = %137, %159
  %171 = load void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)**, void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*** %39, align 8
  %172 = getelementptr inbounds void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*, void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)** %171, i64 6
  %173 = load void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)*, void (%"class.SkShaper::RunHandler"*, %"struct.SkShaper::RunHandler::RunInfo"*)** %172, align 8
  call void %173(%"class.SkShaper::RunHandler"* %6, %"struct.SkShaper::RunHandler::RunInfo"* nonnull dereferenceable(48) %10) #8
  %174 = load void (%"class.SkShaper::RunHandler"*)**, void (%"class.SkShaper::RunHandler"*)*** %38, align 8
  %175 = getelementptr inbounds void (%"class.SkShaper::RunHandler"*)*, void (%"class.SkShaper::RunHandler"*)** %174, i64 7
  %176 = load void (%"class.SkShaper::RunHandler"*)*, void (%"class.SkShaper::RunHandler"*)** %175, align 8
  call void %176(%"class.SkShaper::RunHandler"* %6) #8
  %177 = call i32 @_ZN5SkUTF9CountUTF8EPKcm(i8* %52, i64 %112) #8
  %178 = sext i32 %177 to i64
  %179 = add i64 %54, %178
  %180 = add i64 %112, %53
  %181 = getelementptr inbounds i8, i8* %52, i64 %112
  %182 = sub i64 %55, %112
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %51

184:                                              ; preds = %170, %15
  call void @_ZdaPv(i8* nonnull %22) #7
  call void @_ZdaPv(i8* nonnull %18) #7
  br label %185

185:                                              ; preds = %7, %184
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

declare i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont*, i8*, i64, i32, i16*, i32) local_unnamed_addr #2

declare void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont*, i16*, i32, float*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #2

declare i32 @_ZN5SkUTF9CountUTF8EPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN5SkUTF8NextUTF8EPPKcS1_(i8**, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkShaperD2Ev(%class.SkShaper*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkShaperPrimitiveD0Ev(%class.SkShaperPrimitive*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkShaperPrimitive, %class.SkShaperPrimitive* %0, i64 0, i32 0
  tail call void @_ZN8SkShaperD2Ev(%class.SkShaper* %2) #8
  %3 = bitcast %class.SkShaperPrimitive* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

declare float @_ZNK6SkFont11measureTextEPKvm14SkTextEncodingP6SkRectPK7SkPaint(%class.SkFont*, i8*, i64, i32, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8SkShaperC2Ev(%class.SkShaper*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_"}
