; ModuleID = '../../components/password_manager/core/browser/field_info_table.cc'
source_filename = "../../components/password_manager/core/browser/field_info_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.password_manager::FieldInfo" = type { %"class.autofill::FormSignature", %"class.autofill::FieldSignature", i32, %"class.base::Time" }
%"class.autofill::FormSignature" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.autofill::FieldSignature" = type { %"class.util::IdType.0" }
%"class.util::IdType.0" = type { %"class.base::StrongAlias.1" }
%"class.base::StrongAlias.1" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.password_manager::FieldInfoTable" = type { %"class.sql::Database"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::basic_string"* }
%"class.password_manager::SQLTableBuilder" = type { i32, %"class.std::__1::vector.20", %"class.std::__1::vector.27", %"class.std::__1::basic_string" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.password_manager::SQLTableBuilder::Column"*, %"struct.password_manager::SQLTableBuilder::Column"*, %"class.std::__1::__compressed_pair.22" }
%"struct.password_manager::SQLTableBuilder::Column" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.password_manager::SQLTableBuilder::Column"* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.password_manager::SQLTableBuilder::Index"*, %"struct.password_manager::SQLTableBuilder::Index"*, %"class.std::__1::__compressed_pair.29" }
%"struct.password_manager::SQLTableBuilder::Index" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.password_manager::SQLTableBuilder::Index"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sql::Statement" = type <{ %class.scoped_refptr.34, i8, i8, [6 x i8] }>
%class.scoped_refptr.34 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.password_manager::FieldInfo"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN16password_manager12_GLOBAL__N_119kFieldInfoTableNameE = internal constant [11 x i8] c"field_info\00", align 1
@.str = private unnamed_addr constant [22 x i8] c"DROP TABLE field_info\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"../../components/password_manager/core/browser/field_info_table.cc\00", align 1
@.str.2 = private unnamed_addr constant [112 x i8] c"INSERT OR IGNORE INTO field_info (form_signature, field_signature, field_type, create_time) VALUES (?, ?, ?, ?)\00", align 1
@.str.3 = private unnamed_addr constant [66 x i8] c"DELETE FROM field_info WHERE create_time >= ? AND create_time < ?\00", align 1
@.str.4 = private unnamed_addr constant [80 x i8] c"SELECT form_signature, field_signature, field_type, create_time FROM field_info\00", align 1
@.str.5 = private unnamed_addr constant [105 x i8] c"SELECT form_signature, field_signature, field_type, create_time FROM field_info WHERE form_signature = ?\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"form_signature\00", align 8
@.str.7 = private unnamed_addr constant [17 x i8] c"INTEGER NOT NULL\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"field_signature\00", align 8
@.str.9 = private unnamed_addr constant [11 x i8] c"field_type\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"create_time\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"field_info_index\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN16password_managereqERKNS_9FieldInfoES2_(%"struct.password_manager::FieldInfo"* nocapture readonly dereferenceable(24), %"struct.password_manager::FieldInfo"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 3, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %0, i64 0, i32 3, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, %22
  br label %26

26:                                               ; preds = %20, %14, %8, %2
  %27 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16password_manager14FieldInfoTable4InitEPN3sql8DatabaseE(%"class.password_manager::FieldInfoTable"* nocapture, %"class.sql::Database"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %0, i64 0, i32 0
  store %"class.sql::Database"* %1, %"class.sql::Database"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager14FieldInfoTable22CreateTableIfNecessaryEv(%"class.password_manager::FieldInfoTable"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::vector.42", align 8
  %14 = alloca %"class.password_manager::SQLTableBuilder", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %0, i64 0, i32 0
  %17 = load %"class.sql::Database"*, %"class.sql::Database"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN16password_manager12_GLOBAL__N_119kFieldInfoTableNameE, i64 0, i64 0)) #9
  br i1 %18, label %185, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.password_manager::SQLTableBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 80, i1 false)
  %21 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 10, i8* %23, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN16password_manager12_GLOBAL__N_119kFieldInfoTableNameE, i64 0, i64 0), i64 10, i1 false) #9
  %24 = getelementptr inbounds i8, i8* %21, i64 10
  store i8 0, i8* %24, align 2
  call void @_ZN16password_manager15SQLTableBuilderC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #9
  %25 = load i8, i8* %23, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %19, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  %31 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %37 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37)
  %38 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %39 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %40 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %41 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %42 = bitcast %"class.std::__1::vector.42"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %43 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 14, i8* %44, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14, i1 false) #9
  %45 = getelementptr inbounds i8, i8* %31, i64 14
  store i8 0, i8* %45, align 2
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 16, i8* %47, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16, i1 false) #9
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %49 = bitcast i64* %48 to i8*
  store i8 0, i8* %49, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #9
  call void @_ZN16password_manager15SQLTableBuilder20AddColumnToUniqueKeyENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_S7_(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.std::__1::basic_string"* nonnull %2, %"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* nonnull %4) #9
  %50 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %30
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %54, %30
  %58 = load i8, i8* %47, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %60, %57
  %64 = load i8, i8* %44, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %66, %63
  %70 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 15, i8* %71, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15, i1 false) #9
  %72 = getelementptr inbounds i8, i8* %34, i64 15
  store i8 0, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  store i8 16, i8* %74, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16, i1 false) #9
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %76 = bitcast i64* %75 to i8*
  store i8 0, i8* %76, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #9
  call void @_ZN16password_manager15SQLTableBuilder20AddColumnToUniqueKeyENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_S7_(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull %7) #9
  %77 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %81, %69
  %85 = load i8, i8* %74, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #10
  br label %90

90:                                               ; preds = %87, %84
  %91 = load i8, i8* %71, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %93, %90
  %97 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  store i8 10, i8* %98, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10, i1 false) #9
  %99 = getelementptr inbounds i8, i8* %37, i64 10
  store i8 0, i8* %99, align 2
  %100 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 16, i8* %101, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16, i1 false) #9
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %103 = bitcast i64* %102 to i8*
  store i8 0, i8* %103, align 8
  call void @_ZN16password_manager15SQLTableBuilder9AddColumnENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull %9) #9
  %104 = load i8, i8* %101, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #10
  br label %109

109:                                              ; preds = %106, %96
  %110 = load i8, i8* %98, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #10
  br label %115

115:                                              ; preds = %112, %109
  %116 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 11, i8* %117, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i64 11, i1 false) #9
  %118 = getelementptr inbounds i8, i8* %39, i64 11
  store i8 0, i8* %118, align 1
  %119 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  store i8 16, i8* %120, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 16, i1 false) #9
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %122 = bitcast i64* %121 to i8*
  store i8 0, i8* %122, align 8
  call void @_ZN16password_manager15SQLTableBuilder9AddColumnENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* nonnull %11) #9
  %123 = load i8, i8* %120, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #10
  br label %128

128:                                              ; preds = %125, %115
  %129 = load i8, i8* %117, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %160

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #10
  br label %160

134:                                              ; preds = %160
  %135 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  %136 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %166, align 8
  %137 = icmp eq %"class.std::__1::basic_string"* %136, %179
  br i1 %137, label %152, label %138

138:                                              ; preds = %134, %148
  %139 = phi %"class.std::__1::basic_string"* [ %140, %148 ], [ %136, %134 ]
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 -1
  %141 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #10
  br label %148

148:                                              ; preds = %145, %138
  %149 = icmp eq %"class.std::__1::basic_string"* %140, %179
  br i1 %149, label %150, label %138

150:                                              ; preds = %148
  %151 = load i8*, i8** %167, align 8
  br label %152

152:                                              ; preds = %150, %134
  %153 = phi i8* [ %151, %150 ], [ %135, %134 ]
  store %"class.std::__1::basic_string"* %179, %"class.std::__1::basic_string"** %166, align 8
  call void @_ZdlPv(i8* %153) #10
  br label %157

154:                                              ; preds = %157
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  call void @_ZdlPv(i8* %156) #10
  br label %181

157:                                              ; preds = %160, %152
  %158 = load i8, i8* %162, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %154, label %181

160:                                              ; preds = %131, %128
  %161 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  store i8 16, i8* %162, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 16, i1 false) #9
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %164 = bitcast i64* %163 to i8*
  store i8 0, i8* %164, align 8
  %165 = call i8* @_Znwm(i64 48) #10
  %166 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %13, i64 0, i32 0, i32 1
  %167 = bitcast %"class.std::__1::vector.42"* %13 to i8**
  store i8* %165, i8** %167, align 8
  %168 = getelementptr inbounds i8, i8* %165, i64 48
  %169 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %170 = bitcast %"class.std::__1::basic_string"** %169 to i8**
  store i8* %168, i8** %170, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %165, i8* nonnull align 8 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14, i1 false)
  %171 = getelementptr inbounds i8, i8* %165, i64 14
  store i8 0, i8* %171, align 2
  %172 = getelementptr inbounds i8, i8* %165, i64 23
  store i8 14, i8* %172, align 1
  %173 = getelementptr inbounds i8, i8* %165, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* nonnull align 8 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 15, i1 false)
  %174 = getelementptr inbounds i8, i8* %165, i64 39
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds i8, i8* %165, i64 47
  store i8 15, i8* %175, align 1
  %176 = bitcast %"class.std::__1::basic_string"** %166 to i64*
  %177 = ptrtoint i8* %168 to i64
  store i64 %177, i64* %176, align 8
  call void @_ZN16password_manager15SQLTableBuilder8AddIndexENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_6vectorIS7_NS5_IS7_EEEE(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::vector.42"* nonnull %13) #9
  %178 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %13, i64 0, i32 0, i32 0
  %179 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %178, align 8
  %180 = icmp eq %"class.std::__1::basic_string"* %179, null
  br i1 %180, label %157, label %134

181:                                              ; preds = %154, %157
  %182 = call i32 @_ZN16password_manager15SQLTableBuilder11SealVersionEv(%"class.password_manager::SQLTableBuilder"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %183 = load %"class.sql::Database"*, %"class.sql::Database"** %16, align 8
  %184 = call zeroext i1 @_ZNK16password_manager15SQLTableBuilder11CreateTableEPN3sql8DatabaseE(%"class.password_manager::SQLTableBuilder"* nonnull %14, %"class.sql::Database"* %183) #9
  call void @_ZN16password_manager15SQLTableBuilderD1Ev(%"class.password_manager::SQLTableBuilder"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #9
  br label %185

185:                                              ; preds = %1, %181
  %186 = phi i1 [ %184, %181 ], [ true, %1 ]
  ret i1 %186
}

declare zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16password_manager15SQLTableBuilderC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.password_manager::SQLTableBuilder"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK16password_manager15SQLTableBuilder11CreateTableEPN3sql8DatabaseE(%"class.password_manager::SQLTableBuilder"*, %"class.sql::Database"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16password_manager15SQLTableBuilderD1Ev(%"class.password_manager::SQLTableBuilder"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager14FieldInfoTable17DropTableIfExistsEv(%"class.password_manager::FieldInfoTable"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %0, i64 0, i32 0
  %3 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN16password_manager12_GLOBAL__N_119kFieldInfoTableNameE, i64 0, i64 0)) #9
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.sql::Database"*, %"class.sql::Database"** %2, align 8
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ %7, %5 ], [ false, %1 ]
  ret i1 %9
}

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager14FieldInfoTable6AddRowERKNS_9FieldInfoE(%"class.password_manager::FieldInfoTable"* nocapture readonly, %"struct.password_manager::FieldInfo"* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %0, i64 0, i32 0
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i64 105, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.2, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #9
  %9 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %10) #9
  %12 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %14) #9
  %16 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %3, i32 2, i32 %17) #9
  %19 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %1, i64 0, i32 3
  %20 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* %19) #9
  %21 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 3, i64 %20) #9
  %22 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #9
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret i1 %22
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #4

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #4

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #4

declare i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager14FieldInfoTable16RemoveRowsByTimeEN4base4TimeES2_(%"class.password_manager::FieldInfoTable"* nocapture readonly, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  %9 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %0, i64 0, i32 0
  %11 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load %"class.sql::Database"*, %"class.sql::Database"** %10, align 8
  %13 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i64 127, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %13) #9
  %14 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %4) #9
  %15 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 0, i64 %14) #9
  %16 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %5) #9
  %17 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 1, i64 %16) #9
  %18 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %6) #9
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14FieldInfoTable10GetAllRowsEv(%"class.std::__1::vector.35"* noalias sret, %"class.password_manager::FieldInfoTable"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %1, i64 0, i32 0
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i64 141, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #9
  call fastcc void @_ZN16password_manager12_GLOBAL__N_120StatementToFieldInfoEPN3sql9StatementE(%"class.std::__1::vector.35"* sret %0, %"class.sql::Statement"* nonnull %3)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN16password_manager12_GLOBAL__N_120StatementToFieldInfoEPN3sql9StatementE(%"class.std::__1::vector.35"* noalias sret, %"class.sql::Statement"*) unnamed_addr #3 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.35"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = tail call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %1) #9
  br i1 %6, label %7, label %88

7:                                                ; preds = %2
  %8 = bitcast %"struct.password_manager::FieldInfo"** %3 to i64*
  %9 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %10 = bitcast %"struct.password_manager::FieldInfo"** %4 to i64*
  br label %11

11:                                               ; preds = %84, %7
  %12 = phi i64 [ %87, %84 ], [ 0, %7 ]
  %13 = phi %"struct.password_manager::FieldInfo"* [ %86, %84 ], [ null, %7 ]
  %14 = phi %"struct.password_manager::FieldInfo"* [ %85, %84 ], [ null, %7 ]
  %15 = icmp ult %"struct.password_manager::FieldInfo"* %14, %13
  %16 = ptrtoint %"struct.password_manager::FieldInfo"* %13 to i64
  br i1 %15, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %14, i64 0, i32 2
  %19 = bitcast %"struct.password_manager::FieldInfo"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #9
  store i32 1, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %14, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %14, i64 1
  %22 = ptrtoint %"struct.password_manager::FieldInfo"* %21 to i64
  store i64 %22, i64* %8, align 8
  br label %69

23:                                               ; preds = %11
  %24 = ptrtoint %"struct.password_manager::FieldInfo"* %14 to i64
  %25 = load i64, i64* %9, align 8
  %26 = sub i64 %24, %25
  %27 = sdiv exact i64 %26, 24
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 768614336404564650
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #11
  unreachable

32:                                               ; preds = %23
  %33 = sub i64 %16, %25
  %34 = sdiv exact i64 %33, 24
  %35 = icmp ult i64 %34, 384307168202282325
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = shl nsw i64 %34, 1
  %38 = icmp ult i64 %37, %28
  %39 = select i1 %38, i64 %28, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %36, %32
  %42 = phi i64 [ %39, %36 ], [ 768614336404564650, %32 ]
  %43 = mul i64 %42, 24
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"struct.password_manager::FieldInfo"*
  br label %46

46:                                               ; preds = %41, %36
  %47 = phi i64 [ %42, %41 ], [ 0, %36 ]
  %48 = phi %"struct.password_manager::FieldInfo"* [ %45, %41 ], [ null, %36 ]
  %49 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %48, i64 %27
  %50 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %48, i64 %47
  %51 = ptrtoint %"struct.password_manager::FieldInfo"* %50 to i64
  %52 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %48, i64 %27, i32 2
  %53 = bitcast %"struct.password_manager::FieldInfo"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #9
  store i32 1, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %48, i64 %27, i32 3, i32 0, i32 0
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %49, i64 1
  %56 = ptrtoint %"struct.password_manager::FieldInfo"* %55 to i64
  %57 = sub i64 %12, %25
  %58 = sdiv exact i64 %57, -24
  %59 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %49, i64 %58
  %60 = ptrtoint %"struct.password_manager::FieldInfo"* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %46
  %63 = bitcast %"struct.password_manager::FieldInfo"* %59 to i8*
  %64 = inttoptr i64 %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %57, i1 false) #9
  br label %65

65:                                               ; preds = %62, %46
  store i64 %60, i64* %9, align 8
  store i64 %56, i64* %8, align 8
  store i64 %51, i64* %10, align 8
  %66 = icmp eq i64 %25, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %25 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %17, %65, %67
  %70 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %1, i32 0) #9
  %71 = load %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"** %3, align 8
  %72 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %71, i64 -1, i32 0, i32 0, i32 0, i32 0
  store i64 %70, i64* %72, align 8
  %73 = tail call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %1, i32 1) #9
  %74 = load %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"** %3, align 8
  %75 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %74, i64 -1, i32 1, i32 0, i32 0, i32 0
  store i32 %73, i32* %75, align 8
  %76 = tail call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %1, i32 2) #9
  %77 = load %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"** %3, align 8
  %78 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %77, i64 -1, i32 2
  store i32 %76, i32* %78, align 4
  %79 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %1, i32 3) #9
  %80 = tail call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %79) #9
  %81 = load %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"** %3, align 8
  %82 = getelementptr inbounds %"struct.password_manager::FieldInfo", %"struct.password_manager::FieldInfo"* %81, i64 -1, i32 3, i32 0, i32 0
  store i64 %80, i64* %82, align 8
  %83 = tail call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %1) #9
  br i1 %83, label %84, label %88

84:                                               ; preds = %69
  %85 = load %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"** %3, align 8
  %86 = load %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"** %4, align 8
  %87 = ptrtoint %"struct.password_manager::FieldInfo"* %85 to i64
  br label %11

88:                                               ; preds = %69, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14FieldInfoTable26GetAllRowsForFormSignatureEm(%"class.std::__1::vector.35"* noalias sret, %"class.password_manager::FieldInfoTable"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.password_manager::FieldInfoTable", %"class.password_manager::FieldInfoTable"* %1, i64 0, i32 0
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i64 155, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.5, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #9
  %10 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %2) #9
  call fastcc void @_ZN16password_manager12_GLOBAL__N_120StatementToFieldInfoEPN3sql9StatementE(%"class.std::__1::vector.35"* sret %0, %"class.sql::Statement"* nonnull %4)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

declare void @_ZN16password_manager15SQLTableBuilder20AddColumnToUniqueKeyENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_S7_(%"class.password_manager::SQLTableBuilder"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare void @_ZN16password_manager15SQLTableBuilder9AddColumnENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_(%"class.password_manager::SQLTableBuilder"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare void @_ZN16password_manager15SQLTableBuilder8AddIndexENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_6vectorIS7_NS5_IS7_EEEE(%"class.password_manager::SQLTableBuilder"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.42"*) local_unnamed_addr #4

declare i32 @_ZN16password_manager15SQLTableBuilder11SealVersionEv(%"class.password_manager::SQLTableBuilder"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #4

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #4

declare i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"*, i32) local_unnamed_addr #4

declare i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
