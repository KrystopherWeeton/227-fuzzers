; ModuleID = '../../cc/layers/recording_source.cc'
source_filename = "../../cc/layers/recording_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::RecordingSource" = type { i32 (...)**, %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i8, i32, i32, %class.scoped_refptr, float, %"class.cc::InvalidationRegion" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.69", %"class.std::__1::vector.76", %"class.std::__1::vector.83", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.9", %"class.base::flat_map.23", i8, i8, [6 x i8], %"class.cc::RTree.33", %"class.std::__1::vector.61" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.18" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.11", i32, i32 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.13" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.23" = type { %"class.base::internal::flat_tree.24" }
%"class.base::internal::flat_tree.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type { i32, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.cc::RTree.33" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.53", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.48", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.44, %class.sk_sp.45, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.46 }
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.44 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.45 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.34, i32, i32 }
%class.sk_sp.34 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.46 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.47", [4 x i8] }>
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.std::__1::pair.63"*, %"struct.std::__1::pair.63"*, %"class.std::__1::__compressed_pair.64" }
%"struct.std::__1::pair.63" = type opaque
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::pair.63"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { i64*, i64*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { i64* }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.85" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.cc::InvalidationRegion" = type { %"class.cc::Region", %"class.std::__1::vector.69" }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.91", [4 x i8], i64, %class.scoped_refptr, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.92", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.94", i64, i64 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.103" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }

$_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

@_ZTVN2cc15RecordingSourceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RecordingSource"*)* @_ZN2cc15RecordingSourceD2Ev to i8*), i8* bitcast (void (%"class.cc::RecordingSource"*)* @_ZN2cc15RecordingSourceD0Ev to i8*), i8* bitcast (%"class.cc::RasterSource"* (%"class.cc::RecordingSource"*)* @_ZNK2cc15RecordingSource18CreateRasterSourceEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [45 x i8] c"RecordingSource::FinishDisplayItemListUpdate\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"RecordingSource::DetermineIfSolidColor\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"opcount\00", align 1

@_ZN2cc15RecordingSourceC1Ev = hidden unnamed_addr alias void (%"class.cc::RecordingSource"*), void (%"class.cc::RecordingSource"*)* @_ZN2cc15RecordingSourceC2Ev
@_ZN2cc15RecordingSourceD1Ev = hidden unnamed_addr alias void (%"class.cc::RecordingSource"*), void (%"class.cc::RecordingSource"*)* @_ZN2cc15RecordingSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSourceC2Ev(%"class.cc::RecordingSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc15RecordingSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 9
  %6 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 30, i1 false)
  %7 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store float 1.000000e+00, float* %5, align 8
  %8 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 10
  tail call void @_ZN2cc18InvalidationRegionC1Ev(%"class.cc::InvalidationRegion"* %8) #10
  ret void
}

declare void @_ZN2cc18InvalidationRegionC1Ev(%"class.cc::InvalidationRegion"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSourceD2Ev(%"class.cc::RecordingSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc15RecordingSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 10
  tail call void @_ZN2cc18InvalidationRegionD1Ev(%"class.cc::InvalidationRegion"* %3) #10
  %4 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 8, i32 0
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = icmp eq %"class.cc::DisplayItemList"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %5) #10
  %12 = bitcast %"class.cc::DisplayItemList"* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc18InvalidationRegionD1Ev(%"class.cc::InvalidationRegion"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSourceD0Ev(%"class.cc::RecordingSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc15RecordingSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 10
  tail call void @_ZN2cc18InvalidationRegionD1Ev(%"class.cc::InvalidationRegion"* %3) #10
  %4 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 8, i32 0
  %5 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %4, align 8
  %6 = icmp eq %"class.cc::DisplayItemList"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %5) #10
  %12 = bitcast %"class.cc::DisplayItemList"* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = bitcast %"class.cc::RecordingSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSource32UpdateInvalidationForNewViewportERKN3gfx4RectES4_PNS_6RegionE(%"class.cc::RecordingSource"* nocapture readnone, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.cc::Region"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::Region", align 8
  %6 = alloca %"class.cc::Region", align 8
  %7 = bitcast %"class.cc::Region"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = bitcast %"class.cc::Region"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* nonnull %5, %"class.gfx::Rect"* dereferenceable(16) %2) #10
  call void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"* nonnull %5, %"class.gfx::Rect"* dereferenceable(16) %1) #10
  call void @_ZN2cc6Region5UnionERKS0_(%"class.cc::Region"* %3, %"class.cc::Region"* nonnull dereferenceable(24) %5) #10
  %9 = bitcast %"class.cc::Region"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = bitcast %"class.cc::Region"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %1) #10
  call void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %2) #10
  call void @_ZN2cc6Region5UnionERKS0_(%"class.cc::Region"* %3, %"class.cc::Region"* nonnull dereferenceable(24) %6) #10
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2cc6Region5UnionERKS0_(%"class.cc::Region"*, %"class.cc::Region"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc6RegionD1Ev(%"class.cc::Region"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSource27FinishDisplayItemListUpdateEv(%"class.cc::RecordingSource"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %6 ]
  call void @_ZN2cc15RecordingSource21DetermineIfSolidColorEv(%"class.cc::RecordingSource"* %0)
  %16 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 8, i32 0
  %17 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %16, align 8
  call void @_ZNK2cc15DisplayItemList17EmitTraceSnapshotEv(%"class.cc::DisplayItemList"* %17) #10
  %18 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %16, align 8
  call void @_ZN2cc15DisplayItemList33GenerateDiscardableImagesMetadataEv(%"class.cc::DisplayItemList"* %18) #10
  %19 = icmp eq i8* %15, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = load i8, i8* %15, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #10
  br label %24

24:                                               ; preds = %12, %20, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSource21DetermineIfSolidColorEv(%"class.cc::RecordingSource"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 6
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 8, i32 0
  %8 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %8, i64 0, i32 4, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %8, i64 0, i32 4, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  %14 = icmp ugt i64 %13, 10
  br i1 %14, label %95, label %15

15:                                               ; preds = %1
  %16 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %17 = and i8 %16, 25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19, !prof !2

19:                                               ; preds = %15
  %20 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  store i64 %13, i64* %2, align 8
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64* nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %22 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %7, align 8
  br label %23

23:                                               ; preds = %15, %19
  %24 = phi %"class.cc::DisplayItemList"* [ %8, %15 ], [ %22, %19 ]
  %25 = phi i8* [ null, %15 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %19 ]
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %15 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), %19 ]
  %27 = phi i64 [ -6148914691236517206, %15 ], [ %21, %19 ]
  %28 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 2
  %30 = bitcast %"class.gfx::Size"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 9
  %33 = load float, float* %32, align 8
  %34 = fcmp oeq float %33, 1.000000e+00
  br i1 %34, label %81, label %35

35:                                               ; preds = %23
  %36 = fmul float %33, 0.000000e+00
  %37 = call float @llvm.round.f32(float %36) #10
  %38 = fptosi float %37 to i32
  %39 = trunc i64 %31 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = sitofp i32 %39 to float
  %43 = fmul float %33, %42
  %44 = call float @llvm.round.f32(float %43) #10
  %45 = fptosi float %44 to i32
  br label %46

46:                                               ; preds = %41, %35
  %47 = phi i32 [ %45, %41 ], [ %38, %35 ]
  %48 = lshr i64 %31, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = sitofp i32 %49 to float
  %53 = fmul float %33, %52
  %54 = call float @llvm.round.f32(float %53) #10
  %55 = fptosi float %54 to i32
  br label %56

56:                                               ; preds = %51, %46
  %57 = phi i32 [ %55, %51 ], [ %38, %46 ]
  %58 = sub nsw i32 %47, %38
  %59 = sub nsw i32 %57, %38
  %60 = icmp sgt i32 %38, 0
  %61 = icmp sgt i32 %58, 0
  %62 = and i1 %60, %61
  %63 = sub nuw nsw i32 2147483647, %38
  %64 = icmp ult i32 %63, %58
  %65 = and i1 %64, %62
  %66 = select i1 %65, i32 %63, i32 %58
  %67 = icmp sgt i32 %59, 0
  %68 = and i1 %60, %67
  %69 = icmp ult i32 %63, %59
  %70 = and i1 %69, %68
  %71 = select i1 %70, i32 %63, i32 %59
  %72 = icmp sgt i32 %66, 0
  %73 = select i1 %72, i32 %66, i32 0
  %74 = zext i32 %73 to i64
  %75 = icmp sgt i32 %71, 0
  %76 = select i1 %75, i32 %71, i32 0
  %77 = zext i32 %76 to i64
  %78 = shl nuw nsw i64 %77, 32
  %79 = or i64 %78, %74
  %80 = zext i32 %38 to i64
  br label %81

81:                                               ; preds = %23, %56
  %82 = phi i64 [ %80, %56 ], [ 0, %23 ]
  %83 = phi i64 [ %79, %56 ], [ %31, %23 ]
  %84 = shl nuw i64 %82, 32
  %85 = or i64 %84, %82
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %83, i64* %87, align 8
  %88 = call zeroext i1 @_ZN2cc15DisplayItemList21GetColorIfSolidInRectERKN3gfx4RectEPji(%"class.cc::DisplayItemList"* %24, %"class.gfx::Rect"* nonnull dereferenceable(16) %4, i32* %6, i32 10) #10
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %5, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  %90 = icmp eq i8* %25, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %81
  %92 = load i8, i8* %25, align 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %26, i64 %27) #10
  br label %95

95:                                               ; preds = %94, %91, %81, %1
  ret void
}

declare void @_ZNK2cc15DisplayItemList17EmitTraceSnapshotEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1

declare void @_ZN2cc15DisplayItemList33GenerateDiscardableImagesMetadataEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSource19SetNeedsDisplayRectERKN3gfx4RectE(%"class.cc::RecordingSource"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %29, label %12

12:                                               ; preds = %8
  %13 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %14 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 10
  %15 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %21 = bitcast %"class.gfx::Size"* %17 to i64*
  %22 = bitcast %"class.gfx::Size"* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = call { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16) %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #10
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %26 = extractvalue { i64, i64 } %24, 0
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %28 = extractvalue { i64, i64 } %24, 1
  store i64 %28, i64* %27, align 8
  call void @_ZN2cc18InvalidationRegion5UnionERKN3gfx4RectE(%"class.cc::InvalidationRegion"* %14, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  br label %29

29:                                               ; preds = %2, %12, %8
  ret void
}

declare void @_ZN2cc18InvalidationRegion5UnionERKN3gfx4RectE(%"class.cc::InvalidationRegion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx14IntersectRectsERKNS_4RectES2_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc15RecordingSource27UpdateAndExpandInvalidationEPNS_6RegionERKN3gfx4SizeERKNS3_4RectE(%"class.cc::RecordingSource"*, %"class.cc::Region"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::Region", align 8
  %6 = alloca %"class.cc::Region", align 8
  %7 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 2, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %13, %4
  %20 = bitcast %"class.gfx::Size"* %2 to i64*
  %21 = bitcast %"class.gfx::Size"* %7 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  br label %23

23:                                               ; preds = %13, %19
  %24 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 10
  tail call void @_ZN2cc18InvalidationRegion4SwapEPNS_6RegionE(%"class.cc::InvalidationRegion"* %24, %"class.cc::Region"* %1) #10
  tail call void @_ZN2cc18InvalidationRegion5ClearEv(%"class.cc::InvalidationRegion"* %24) #10
  %25 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %25, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %49

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 1, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 1, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 1, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %43, %23, %37, %31
  %50 = bitcast %"class.cc::Region"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false) #10
  call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* nonnull %5, %"class.gfx::Rect"* dereferenceable(16) %3) #10
  call void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"* nonnull %5, %"class.gfx::Rect"* dereferenceable(16) %25) #10
  call void @_ZN2cc6Region5UnionERKS0_(%"class.cc::Region"* %1, %"class.cc::Region"* nonnull dereferenceable(24) %5) #10
  %51 = bitcast %"class.cc::Region"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false) #10
  call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %25) #10
  call void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %3) #10
  call void @_ZN2cc6Region5UnionERKS0_(%"class.cc::Region"* %1, %"class.cc::Region"* nonnull dereferenceable(24) %6) #10
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #10
  call void @_ZN2cc6RegionD1Ev(%"class.cc::Region"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  %52 = bitcast %"class.gfx::Rect"* %25 to i8*
  %53 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 4 %53, i64 16, i1 false)
  br label %56

54:                                               ; preds = %43
  %55 = tail call zeroext i1 @_ZNK2cc6Region10IntersectsERKN3gfx4RectE(%"class.cc::Region"* %1, %"class.gfx::Rect"* dereferenceable(16) %25) #10
  br i1 %55, label %56, label %59

56:                                               ; preds = %49, %54
  %57 = call zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"* %1) #10
  %58 = xor i1 %57, true
  br label %59

59:                                               ; preds = %56, %54
  %60 = phi i1 [ false, %54 ], [ %58, %56 ]
  ret i1 %60
}

declare void @_ZN2cc18InvalidationRegion4SwapEPNS_6RegionE(%"class.cc::InvalidationRegion"*, %"class.cc::Region"*) local_unnamed_addr #1

declare void @_ZN2cc18InvalidationRegion5ClearEv(%"class.cc::InvalidationRegion"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc6Region10IntersectsERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc6Region7IsEmptyEv(%"class.cc::Region"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSource21UpdateDisplayItemListERK13scoped_refptrINS_15DisplayItemListEEf(%"class.cc::RecordingSource"*, %class.scoped_refptr* nocapture readonly dereferenceable(8), float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 9
  store float %2, float* %4, align 8
  %5 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %9 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %8, align 8
  %10 = icmp eq %"class.cc::DisplayItemList"* %7, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %3
  %12 = icmp eq %"class.cc::DisplayItemList"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %6, align 8
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi %"class.cc::DisplayItemList"* [ %7, %11 ], [ %16, %13 ]
  %19 = ptrtoint %"class.cc::DisplayItemList"* %9 to i64
  %20 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = icmp eq %"class.cc::DisplayItemList"* %18, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %18) #10
  %27 = bitcast %"class.cc::DisplayItemList"* %18 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %17, %22, %26
  tail call void @_ZN2cc15RecordingSource27FinishDisplayItemListUpdateEv(%"class.cc::RecordingSource"* %0)
  br label %29

29:                                               ; preds = %3, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc15RecordingSource7GetSizeEv(%"class.cc::RecordingSource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15RecordingSource14SetEmptyBoundsEv(%"class.cc::RecordingSource"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 1
  %6 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 8
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %10 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %9, align 8
  store i64 0, i64* %8, align 8
  %11 = icmp eq %"class.cc::DisplayItemList"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"* nonnull %10) #10
  %17 = bitcast %"class.cc::DisplayItemList"* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %1, %12, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc15RecordingSource28SetSlowdownRasterScaleFactorEi(%"class.cc::RecordingSource"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc15RecordingSource18SetBackgroundColorEj(%"class.cc::RecordingSource"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 7
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc15RecordingSource16SetRequiresClearEb(%"class.cc::RecordingSource"* nocapture, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.cc::RecordingSource", %"class.cc::RecordingSource"* %0, i64 0, i32 4
  store i8 %3, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::RasterSource"* @_ZNK2cc15RecordingSource18CreateRasterSourceEv(%"class.cc::RecordingSource"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #11
  %3 = bitcast i8* %2 to %"class.cc::RasterSource"*
  tail call void @_ZN2cc12RasterSourceC1EPKNS_15RecordingSourceE(%"class.cc::RasterSource"* nonnull %3, %"class.cc::RecordingSource"* %0) #10
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  ret %"class.cc::RasterSource"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2cc12RasterSourceC1EPKNS_15RecordingSourceE(%"class.cc::RasterSource"*, %"class.cc::RecordingSource"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventImEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i64* dereferenceable(8)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %22 = load i8, i8* %16, align 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %58, label %24

24:                                               ; preds = %9, %53
  %25 = phi i64 [ %54, %53 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %40

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %31 = bitcast %"union.base::trace_event::TraceValue"* %30 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %32 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %31, align 8
  %33 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %32, null
  br i1 %33, label %53, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %32 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %36 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %36, i64 1
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, align 8
  call void %38(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %32) #10
  %39 = load i8, i8* %26, align 1
  br label %40

40:                                               ; preds = %34, %24
  %41 = phi i8 [ %27, %24 ], [ %39, %34 ]
  %42 = icmp eq i8 %41, 9
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %25
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.protozero::HeapBuffered"**
  %46 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %45, align 8
  %47 = icmp eq %"class.protozero::HeapBuffered"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %49) #10
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %46, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %51) #10
  %52 = bitcast %"class.protozero::HeapBuffered"* %46 to i8*
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %48, %43, %40, %29
  %54 = add nuw nsw i64 %25, 1
  %55 = load i8, i8* %16, align 8
  %56 = zext i8 %55 to i64
  %57 = icmp ult i64 %54, %56
  br i1 %57, label %24, label %58

58:                                               ; preds = %53, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %21
}

declare zeroext i1 @_ZN2cc15DisplayItemList21GetColorIfSolidInRectERKN3gfx4RectEPji(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16), i32*, i32) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #9

; Function Attrs: nounwind
declare void @_ZN2cc15DisplayItemListD1Ev(%"class.cc::DisplayItemList"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
