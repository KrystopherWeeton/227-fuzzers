; ModuleID = '../../ui/accessibility/platform/ax_platform_node_delegate_base.cc'
source_filename = "../../ui/accessibility/platform/ax_platform_node_delegate_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [264 x i8] }
%"class.base::NoDestructor.65" = type { [248 x i8] }
%"class.base::NoDestructor.138" = type { [16 x i8] }
%"class.ui::AXPlatformNodeDelegateBase" = type { %"class.ui::AXPlatformNodeDelegate" }
%"class.ui::AXPlatformNodeDelegate" = type { i32 (...)** }
%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase" = type { %"class.ui::AXPlatformNodeDelegate::ChildIterator", i32, %"class.ui::AXPlatformNodeDelegateBase"* }
%"class.ui::AXPlatformNodeDelegate::ChildIterator" = type { i32 (...)** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.9", %"class.std::__1::vector.17", %"class.std::__1::vector.25", %"class.std::__1::vector.33", %"class.std::__1::vector.41", %"class.std::__1::vector.49", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair.3"*, %"struct.std::__1::pair.3"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair.3" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair.3"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair.11" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair.11"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair.19"*, %"struct.std::__1::pair.19"*, %"class.std::__1::__compressed_pair.20" }
%"struct.std::__1::pair.19" = type opaque
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::pair.19"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair.35" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair.35"* }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.43" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.61 }
%union.anon.61 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.43"* }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i32*, i32*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.70 }
%struct.anon.70 = type { %"struct.std::__1::__padding.71", i8 }
%"struct.std::__1::__padding.71" = type { [1 x i8] }
%struct._AtkObject = type { %struct._GObject, i8*, i8*, %struct._AtkObject*, i32, %struct._AtkRelationSet*, i32 }
%struct._GObject = type { %struct._GTypeInstance, i32, %struct._GData* }
%struct._GTypeInstance = type { %struct._GTypeClass* }
%struct._GTypeClass = type { i64 }
%struct._GData = type opaque
%struct._AtkRelationSet = type { %struct._GObject, %struct._GPtrArray* }
%struct._GPtrArray = type { i8**, i32 }
%"class.ui::AXPlatformNode" = type <{ i32 (...)**, i8, [7 x i8] }>
%"struct.ui::AXNode::OwnerTree::Selection" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.ui::AXPosition" = type { i32 (...)**, i32, %"class.ui::AXTreeID", i32, i32, i32, i32, %"class.std::__1::basic_string.66" }
%"class.ui::AXNodePosition" = type { %"class.ui::AXPosition" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.ui::AXActionData" = type { i32, %"class.ui::AXTreeID", %"class.std::__1::basic_string", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.std::__1::basic_string", i32, i32, i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.187" }
%"struct.std::__1::pair.187" = type { i32, %"class.std::__1::vector.41" }
%"class.std::__1::set.118" = type { %"class.std::__1::__tree.119" }
%"class.std::__1::__tree.119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__tree_node.198" = type { %"class.std::__1::__tree_node_base.base", %"class.ui::AXPlatformNode"* }
%"class.std::__1::__tree_node.199" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.ui::AXPlatformNode"**, %"class.ui::AXPlatformNode"**, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.ui::AXPlatformNode"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %struct._AtkObject**, %struct._AtkObject**, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %struct._AtkObject** }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector.146", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.162" }
%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.ui::AXNode"** }
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map.153", %"class.std::__1::basic_string.66" }
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"class.ui::AXTreeManagerMap" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.168", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { float }
%"class.ui::AXTreeManager" = type { i32 (...)** }

$_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateNullPositionEv = comdat any

$_ZN2ui22AXPlatformNodeDelegate13ChildIteratorD2Ev = comdat any

$_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseD0Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE13MaxTextOffsetEv = comdat any

$_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE32IsEmptyObjectReplacedByCharacterEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE6assignIPS8_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_ = comdat any

$_ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EaSERKS7_ = comdat any

@_ZTVN2ui26AXPlatformNodeDelegateBaseE = hidden unnamed_addr constant { [100 x i8*] } { [100 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev to i8*), i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBaseD0Ev to i8*), i8* bitcast (%"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7GetDataEv to i8*), i8* bitcast (%"struct.ui::AXTreeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12GetInnerTextEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase18GetValueForControlEv to i8*), i8* bitcast (void (%"struct.ui::AXNode::OwnerTree::Selection"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase21GetUnignoredSelectionEv to i8*), i8* bitcast (%"class.ui::AXPosition"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase20CreateTextPositionAtEi to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase11GetNSWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase23GetNativeViewAccessibleEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase9GetParentEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase16GetIndexInParentEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase13GetChildCountEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase12ChildAtIndexEi to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase14HasModalDialogEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase13GetFirstChildEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase12GetLastChildEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase14GetNextSiblingEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase18GetPreviousSiblingEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase29IsDescendantOfAtomicTextFieldEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase9IsIgnoredEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20IsInvisibleOrIgnoredEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase9IsFocusedEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase23IsToplevelBrowserWindowEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase25GetLowestPlatformAncestorEv to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTextFieldAncestorEv to i8*), i8* bitcast (%"class.ui::AXPlatformNodeDelegate::ChildIterator"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase13ChildrenBeginEv to i8*), i8* bitcast (%"class.ui::AXPlatformNodeDelegate::ChildIterator"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase11ChildrenEndEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7GetNameEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12GetHypertextEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32)* @_ZN2ui26AXPlatformNodeDelegateBase21SetHypertextSelectionEii to i8*), i8* bitcast (void (%"class.std::__1::map"*, %"class.ui::AXPlatformNodeDelegateBase"*, %"class.std::__1::vector.41"*)* @_ZNK2ui26AXPlatformNodeDelegateBase23ComputeTextAttributeMapERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase26GetInheritedFontFamilyNameEv to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase13GetBoundsRectENS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase26GetClippedScreenBoundsRectEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase27GetHypertextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast ({ i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32, i32*)* @_ZNK2ui26AXPlatformNodeDelegateBase27GetInnerTextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase11HitTestSyncEii to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase8GetFocusEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11IsOffscreenEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11IsMinimizedEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase6IsTextEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12IsWebContentEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase26HasVisibleCaretOrSelectionEv to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase13GetFromNodeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, %"class.ui::AXTreeID"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase22GetFromTreeIDAndNodeIDERKNS_8AXTreeIDEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase24GetTargetNodeForRelationEN2ax5mojom12IntAttributeE to i8*), i8* bitcast (void (%"class.std::__1::vector.130"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase25GetTargetNodesForRelationEN2ax5mojom16IntListAttributeE to i8*), i8* bitcast (void (%"class.std::__1::set.118"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom12IntAttributeE to i8*), i8* bitcast (void (%"class.std::__1::set.118"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom16IntListAttributeE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetAuthorUniqueIdEv to i8*), i8* bitcast (%"class.ui::AXUniqueId"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase16FindTextBoundaryEN2ax5mojom12TextBoundaryEiNS2_13MoveDirectionENS2_12TextAffinityE to i8*), i8* bitcast (void (%"class.std::__1::vector.139"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetUIADescendantsEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetLanguageEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase7IsTableEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableColCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableRowCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaColCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaRowCountEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellCountEv to i8*), i8* bitcast (i16 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase32GetTableHasColumnOrRowHeaderNodeEv to i8*), i8* bitcast (void (%"class.std::__1::vector.49"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetColHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.49"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetColHeaderNodeIdsEi to i8*), i8* bitcast (void (%"class.std::__1::vector.49"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.49"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEi to i8*), i8* bitcast (%"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase15GetTableCaptionEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase10IsTableRowEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableRowRowIndexEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19IsTableCellOrHeaderEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellColIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellRowIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellColSpanEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellRowSpanEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaColIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaRowIndexEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase9GetCellIdEii to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase13CellIndexToIdEi to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase25IsCellOrHeaderOfARIATableEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase24IsCellOrHeaderOfARIAGridEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase16IsOrderedSetItemEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase12IsOrderedSetEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase11GetPosInSetEv to i8*), i8* bitcast (i64 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase10GetSetSizeEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase8GetColorEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase18GetBackgroundColorEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase36GetTargetForNativeAccessibilityEventEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)* @_ZN2ui26AXPlatformNodeDelegateBase26AccessibilityPerformActionERKNS_12AXActionDataE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase44GetLocalizedRoleDescriptionForUnlabeledImageEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZNK2ui26AXPlatformNodeDelegateBase42GetLocalizedStringForImageAnnotationStatusEN2ax5mojom21ImageAnnotationStatusE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase33GetLocalizedStringForLandmarkTypeEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase36GetLocalizedStringForRoleDescriptionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegateBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase38GetStyleNameAttributeAsLocalizedStringEv to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase34ShouldIgnoreHoveredStateForTestingEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)* @_ZN2ui26AXPlatformNodeDelegateBase21SubtreeToStringHelperEm to i8*)] }, align 8
@_ZZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data = internal global i64 0, align 8
@_ZZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data = internal global %"class.base::NoDestructor.65" zeroinitializer, align 8
@_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data = internal global i64 0, align 8
@_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)* @_ZN2ui22AXPlatformNodeDelegate13ChildIteratorD2Ev to i8*), i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseD0Ev to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, %"class.ui::AXPlatformNodeDelegate::ChildIterator"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseeqERKNS_22AXPlatformNodeDelegate13ChildIteratorE to i8*), i8* bitcast (i1 (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, %"class.ui::AXPlatformNodeDelegate::ChildIterator"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseneERKNS_22AXPlatformNodeDelegate13ChildIteratorE to i8*), i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseppEv to i8*), i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseppEi to i8*), i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBasemmEv to i8*), i8* bitcast (void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBasemmEi to i8*), i8* bitcast (%struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBase23GetNativeViewAccessibleEv to i8*), i8* bitcast (i32 (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBase16GetIndexInParentEv to i8*), i8* bitcast (%"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBasedeEv to i8*), i8* bitcast (%"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseptEv to i8*)] }, align 8
@_ZZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id = internal global %"class.base::NoDestructor.138" zeroinitializer, align 8
@_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id = internal global i64 0, align 8
@_ZN2ui29g_ax_embedded_object_behaviorE = external local_unnamed_addr global i32, align 4

@_ZN2ui26AXPlatformNodeDelegateBaseC1Ev = hidden unnamed_addr alias void (%"class.ui::AXPlatformNodeDelegateBase"*), void (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBaseC2Ev
@_ZN2ui26AXPlatformNodeDelegateBaseD1Ev = hidden unnamed_addr alias void (%"class.ui::AXPlatformNodeDelegateBase"*), void (%"class.ui::AXPlatformNodeDelegateBase"*)* @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev
@_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseC1EPS0_i = hidden unnamed_addr alias void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32), void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, %"class.ui::AXPlatformNodeDelegateBase"*, i32)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseC2EPS0_i
@_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseC1ERKS1_ = hidden unnamed_addr alias void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*), void (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*, %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)* @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseC2ERKS1_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui26AXPlatformNodeDelegateBaseC2Ev(%"class.ui::AXPlatformNodeDelegateBase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNodeDelegateBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [100 x i8*] }, { [100 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBaseD2Ev(%"class.ui::AXPlatformNodeDelegateBase"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBaseD0Ev(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(264) %"struct.ui::AXNodeData"* @_ZNK2ui26AXPlatformNodeDelegateBase7GetDataEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"* bitcast (%"class.base::NoDestructor"* @_ZZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data to %"struct.ui::AXNodeData"*)) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data) #15
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"struct.ui::AXNodeData"* bitcast (%"class.base::NoDestructor"* @_ZZNK2ui26AXPlatformNodeDelegateBase7GetDataEvE10empty_data to %"struct.ui::AXNodeData"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(248) %"struct.ui::AXTreeData"* @_ZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"* bitcast (%"class.base::NoDestructor.65"* @_ZZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data to %"struct.ui::AXTreeData"*)) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data) #15
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"struct.ui::AXTreeData"* bitcast (%"class.base::NoDestructor.65"* @_ZZNK2ui26AXPlatformNodeDelegateBase11GetTreeDataEvE10empty_data to %"struct.ui::AXTreeData"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase12GetInnerTextEv(%"class.std::__1::basic_string.66"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string.66", align 8
  %4 = alloca %"class.std::__1::basic_string.66", align 8
  %5 = alloca %"class.std::__1::basic_string.66", align 8
  %6 = bitcast %"class.std::__1::basic_string.66"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %9 = bitcast %"class.std::__1::basic_string.66"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %8, align 8
  %11 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, i64 2
  %12 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %11, align 8
  %13 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %12(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  call void @_ZNK2ui10AXNodeData20GetString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string.66"* nonnull sret %3, %"struct.ui::AXNodeData"* %13, i32 29) #15
  %14 = bitcast %"class.std::__1::basic_string.66"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %7, align 8
  %19 = zext i8 %16 to i64
  %20 = select i1 %17, i64 %18, i64 %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %6, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #15
  br label %284

24:                                               ; preds = %2
  %25 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %26 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %26, i64 22
  %28 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %27, align 8
  %29 = call zeroext i1 %28(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  br i1 %29, label %30, label %40

30:                                               ; preds = %24
  %31 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %25, align 8
  %32 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %31, i64 23
  %33 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %8, align 8
  %37 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %36, i64 2
  %38 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %37, align 8
  %39 = call dereferenceable(264) %"struct.ui::AXNodeData"* %38(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  call void @_ZNK2ui10AXNodeData20GetString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string.66"* sret %0, %"struct.ui::AXNodeData"* %39, i32 21) #15
  br label %284

40:                                               ; preds = %30, %24
  %41 = bitcast %"class.std::__1::basic_string.66"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #15
  %42 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #15
  %45 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %46 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %46, i64 12
  %48 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %47, align 8
  %49 = call i32 %48(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %40
  %52 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %53 = bitcast %"class.std::__1::basic_string.66"* %5 to i8*
  %54 = bitcast %"class.std::__1::basic_string.66"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string.66"* %5 to i16*
  %59 = bitcast %"class.std::__1::basic_string.66"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = bitcast %"class.std::__1::basic_string.66"* %4 to i16*
  %62 = bitcast %"class.std::__1::basic_string.66"* %5 to i8**
  br label %65

63:                                               ; preds = %277, %40
  %64 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %41, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #15
  br label %284

65:                                               ; preds = %51, %277
  %66 = phi i32 [ 0, %51 ], [ %278, %277 ]
  %67 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %52, align 8
  %68 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %67, i64 13
  %69 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %68, align 8
  %70 = call %struct._AtkObject* %69(%"class.ui::AXPlatformNodeDelegateBase"* %1, i32 %66) #15
  %71 = call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %70) #15
  %72 = icmp eq %"class.ui::AXPlatformNode"* %71, null
  br i1 %72, label %277, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.ui::AXPlatformNode"* %71 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %75 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %74, align 8
  %76 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %75, i64 3
  %77 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %76, align 8
  %78 = call %"class.ui::AXPlatformNodeDelegate"* %77(%"class.ui::AXPlatformNode"* nonnull %71) #15
  %79 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %78, null
  br i1 %79, label %277, label %80

80:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  %81 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %74, align 8
  %82 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %81, i64 3
  %83 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %82, align 8
  %84 = call %"class.ui::AXPlatformNodeDelegate"* %83(%"class.ui::AXPlatformNode"* nonnull %71) #15
  %85 = bitcast %"class.ui::AXPlatformNodeDelegate"* %84 to void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)***
  %86 = load void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)**, void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)*, void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)** %86, i64 4
  %88 = load void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)*, void (%"class.std::__1::basic_string.66"*, %"class.ui::AXPlatformNodeDelegate"*)** %87, align 8
  call void %88(%"class.std::__1::basic_string.66"* nonnull sret %5, %"class.ui::AXPlatformNodeDelegate"* %84) #15
  %89 = load i8, i8* %55, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i16*, i16** %56, align 8
  %92 = load i64, i64* %57, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i16* %91, i16* %58
  %95 = select i1 %90, i64 %92, i64 %93
  %96 = load i8, i8* %60, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %80
  %99 = load i64, i64* %44, align 8
  %100 = and i64 %99, 9223372036854775807
  %101 = add nsw i64 %100, -1
  %102 = load i64, i64* %43, align 8
  br label %105

103:                                              ; preds = %80
  %104 = zext i8 %96 to i64
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i64 [ %101, %98 ], [ 10, %103 ]
  %107 = phi i64 [ %102, %98 ], [ %104, %103 ]
  %108 = sub i64 %106, %107
  %109 = icmp ult i64 %108, %95
  br i1 %109, label %268, label %110

110:                                              ; preds = %105
  %111 = icmp eq i64 %95, 0
  br i1 %111, label %271, label %112

112:                                              ; preds = %110
  %113 = load i16*, i16** %42, align 8
  %114 = select i1 %97, i16* %113, i16* %61
  %115 = getelementptr inbounds i16, i16* %114, i64 %107
  %116 = icmp ult i64 %95, 16
  br i1 %116, label %206, label %117

117:                                              ; preds = %112
  %118 = add i64 %95, %107
  %119 = getelementptr i16, i16* %114, i64 %118
  %120 = getelementptr i16, i16* %94, i64 %95
  %121 = icmp ult i16* %115, %120
  %122 = icmp ult i16* %94, %119
  %123 = and i1 %121, %122
  br i1 %123, label %206, label %124

124:                                              ; preds = %117
  %125 = and i64 %95, -16
  %126 = sub i64 %95, %125
  %127 = getelementptr i16, i16* %94, i64 %125
  %128 = getelementptr i16, i16* %115, i64 %125
  %129 = add i64 %125, -16
  %130 = lshr exact i64 %129, 4
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 3
  %133 = icmp ult i64 %129, 48
  br i1 %133, label %185, label %134

134:                                              ; preds = %124
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %182, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %183, %136 ]
  %139 = getelementptr i16, i16* %94, i64 %137
  %140 = getelementptr i16, i16* %115, i64 %137
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !3
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !3
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !6, !noalias !3
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !6, !noalias !3
  %149 = or i64 %137, 16
  %150 = getelementptr i16, i16* %94, i64 %149
  %151 = getelementptr i16, i16* %115, i64 %149
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !3
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !3
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !6, !noalias !3
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !6, !noalias !3
  %160 = or i64 %137, 32
  %161 = getelementptr i16, i16* %94, i64 %160
  %162 = getelementptr i16, i16* %115, i64 %160
  %163 = bitcast i16* %161 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !3
  %165 = getelementptr i16, i16* %161, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !3
  %168 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !6, !noalias !3
  %169 = getelementptr i16, i16* %162, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %170, align 2, !alias.scope !6, !noalias !3
  %171 = or i64 %137, 48
  %172 = getelementptr i16, i16* %94, i64 %171
  %173 = getelementptr i16, i16* %115, i64 %171
  %174 = bitcast i16* %172 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !3
  %176 = getelementptr i16, i16* %172, i64 8
  %177 = bitcast i16* %176 to <8 x i16>*
  %178 = load <8 x i16>, <8 x i16>* %177, align 2, !alias.scope !3
  %179 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %179, align 2, !alias.scope !6, !noalias !3
  %180 = getelementptr i16, i16* %173, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %181, align 2, !alias.scope !6, !noalias !3
  %182 = add i64 %137, 64
  %183 = add i64 %138, -4
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %136, !llvm.loop !8

185:                                              ; preds = %136, %124
  %186 = phi i64 [ 0, %124 ], [ %182, %136 ]
  %187 = icmp eq i64 %132, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %201, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %202, %188 ], [ %132, %185 ]
  %191 = getelementptr i16, i16* %94, i64 %189
  %192 = getelementptr i16, i16* %115, i64 %189
  %193 = bitcast i16* %191 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !3
  %195 = getelementptr i16, i16* %191, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2, !alias.scope !3
  %198 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %198, align 2, !alias.scope !6, !noalias !3
  %199 = getelementptr i16, i16* %192, i64 8
  %200 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %200, align 2, !alias.scope !6, !noalias !3
  %201 = add i64 %189, 16
  %202 = add i64 %190, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %188, !llvm.loop !10

204:                                              ; preds = %188, %185
  %205 = icmp eq i64 %95, %125
  br i1 %205, label %259, label %206

206:                                              ; preds = %204, %117, %112
  %207 = phi i64 [ %95, %117 ], [ %95, %112 ], [ %126, %204 ]
  %208 = phi i16* [ %94, %117 ], [ %94, %112 ], [ %127, %204 ]
  %209 = phi i16* [ %115, %117 ], [ %115, %112 ], [ %128, %204 ]
  %210 = add i64 %207, -1
  %211 = and i64 %207, 7
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %224, label %213

213:                                              ; preds = %206, %213
  %214 = phi i64 [ %219, %213 ], [ %207, %206 ]
  %215 = phi i16* [ %221, %213 ], [ %208, %206 ]
  %216 = phi i16* [ %220, %213 ], [ %209, %206 ]
  %217 = phi i64 [ %222, %213 ], [ %211, %206 ]
  %218 = load i16, i16* %215, align 2
  store i16 %218, i16* %216, align 2
  %219 = add i64 %214, -1
  %220 = getelementptr inbounds i16, i16* %216, i64 1
  %221 = getelementptr inbounds i16, i16* %215, i64 1
  %222 = add i64 %217, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %213, !llvm.loop !12

224:                                              ; preds = %213, %206
  %225 = phi i64 [ %207, %206 ], [ %219, %213 ]
  %226 = phi i16* [ %208, %206 ], [ %221, %213 ]
  %227 = phi i16* [ %209, %206 ], [ %220, %213 ]
  %228 = icmp ult i64 %210, 7
  br i1 %228, label %259, label %229

229:                                              ; preds = %224, %229
  %230 = phi i64 [ %255, %229 ], [ %225, %224 ]
  %231 = phi i16* [ %257, %229 ], [ %226, %224 ]
  %232 = phi i16* [ %256, %229 ], [ %227, %224 ]
  %233 = load i16, i16* %231, align 2
  store i16 %233, i16* %232, align 2
  %234 = getelementptr inbounds i16, i16* %232, i64 1
  %235 = getelementptr inbounds i16, i16* %231, i64 1
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 2
  %237 = getelementptr inbounds i16, i16* %232, i64 2
  %238 = getelementptr inbounds i16, i16* %231, i64 2
  %239 = load i16, i16* %238, align 2
  store i16 %239, i16* %237, align 2
  %240 = getelementptr inbounds i16, i16* %232, i64 3
  %241 = getelementptr inbounds i16, i16* %231, i64 3
  %242 = load i16, i16* %241, align 2
  store i16 %242, i16* %240, align 2
  %243 = getelementptr inbounds i16, i16* %232, i64 4
  %244 = getelementptr inbounds i16, i16* %231, i64 4
  %245 = load i16, i16* %244, align 2
  store i16 %245, i16* %243, align 2
  %246 = getelementptr inbounds i16, i16* %232, i64 5
  %247 = getelementptr inbounds i16, i16* %231, i64 5
  %248 = load i16, i16* %247, align 2
  store i16 %248, i16* %246, align 2
  %249 = getelementptr inbounds i16, i16* %232, i64 6
  %250 = getelementptr inbounds i16, i16* %231, i64 6
  %251 = load i16, i16* %250, align 2
  store i16 %251, i16* %249, align 2
  %252 = getelementptr inbounds i16, i16* %232, i64 7
  %253 = getelementptr inbounds i16, i16* %231, i64 7
  %254 = load i16, i16* %253, align 2
  store i16 %254, i16* %252, align 2
  %255 = add i64 %230, -8
  %256 = getelementptr inbounds i16, i16* %232, i64 8
  %257 = getelementptr inbounds i16, i16* %231, i64 8
  %258 = icmp eq i64 %255, 0
  br i1 %258, label %259, label %229, !llvm.loop !13

259:                                              ; preds = %224, %229, %204
  %260 = add i64 %107, %95
  %261 = load i8, i8* %60, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %259
  store i64 %260, i64* %43, align 8
  br label %266

264:                                              ; preds = %259
  %265 = trunc i64 %260 to i8
  store i8 %265, i8* %60, align 1
  br label %266

266:                                              ; preds = %264, %263
  %267 = getelementptr inbounds i16, i16* %114, i64 %260
  store i16 0, i16* %267, align 2
  br label %271

268:                                              ; preds = %105
  %269 = add i64 %107, %95
  %270 = sub i64 %269, %106
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.66"* nonnull %4, i64 %106, i64 %270, i64 %107, i64 %107, i64 0, i64 %95, i16* %94) #15
  br label %271

271:                                              ; preds = %110, %266, %268
  %272 = load i8, i8* %55, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %271
  %275 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %275) #14
  br label %276

276:                                              ; preds = %271, %274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15
  br label %277

277:                                              ; preds = %65, %73, %276
  %278 = add nuw nsw i32 %66, 1
  %279 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %45, align 8
  %280 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %279, i64 12
  %281 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %280, align 8
  %282 = call i32 %281(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %283 = icmp slt i32 %278, %282
  br i1 %283, label %65, label %63

284:                                              ; preds = %63, %35, %22
  %285 = load i8, i8* %15, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %284
  %288 = bitcast %"class.std::__1::basic_string.66"* %3 to i8**
  %289 = load i8*, i8** %288, align 8
  call void @_ZdlPv(i8* %289) #14
  br label %290

290:                                              ; preds = %284, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK2ui10AXNodeData20GetString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string.66"* sret, %"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

declare %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase18GetValueForControlEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string.66", align 8
  %4 = alloca float, align 4
  %5 = alloca %"class.std::__1::basic_string.66", align 8
  %6 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %7 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %6, align 8
  %8 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %7, i64 2
  %9 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %8, align 8
  %10 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %9(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %11 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN2ui9IsControlEN2ax5mojom4RoleE(i32 %12) #15
  br i1 %13, label %22, label %14

14:                                               ; preds = %2
  %15 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %6, align 8
  %16 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %15, i64 2
  %17 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %16, align 8
  %18 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %17(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %19 = tail call zeroext i1 @_ZNK2ui10AXNodeData21IsRangeValueSupportedEv(%"struct.ui::AXNodeData"* %18) #15
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #15
  br label %63

22:                                               ; preds = %14, %2
  %23 = bitcast %"class.std::__1::basic_string.66"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = bitcast %"class.std::__1::basic_string.66"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %6, align 8
  %26 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %25, i64 2
  %27 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %26, align 8
  %28 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %27(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  call void @_ZNK2ui10AXNodeData20GetString16AttributeEN2ax5mojom15StringAttributeE(%"class.std::__1::basic_string.66"* nonnull sret %3, %"struct.ui::AXNodeData"* %28, i32 29) #15
  %29 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #15
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %30 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %6, align 8
  %31 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %30, i64 2
  %32 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %31, align 8
  %33 = call dereferenceable(264) %"struct.ui::AXNodeData"* %32(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %34 = call zeroext i1 @_ZNK2ui10AXNodeData21IsRangeValueSupportedEv(%"struct.ui::AXNodeData"* %33) #15
  br i1 %34, label %35, label %61

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string.66"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i64, i64* %36, align 8
  %42 = zext i8 %39 to i64
  %43 = select i1 %40, i64 %41, i64 %42
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %35
  %46 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %6, align 8
  %47 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %46, i64 2
  %48 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %47, align 8
  %49 = call dereferenceable(264) %"struct.ui::AXNodeData"* %48(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %50 = call zeroext i1 @_ZNK2ui10AXNodeData17GetFloatAttributeEN2ax5mojom14FloatAttributeEPf(%"struct.ui::AXNodeData"* %49, i32 1, float* nonnull %4) #15
  br i1 %50, label %51, label %61

51:                                               ; preds = %45
  %52 = bitcast %"class.std::__1::basic_string.66"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #15
  %53 = load float, float* %4, align 4
  %54 = fpext float %53 to double
  call void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string.66"* nonnull sret %5, double %54) #15
  %55 = load i8, i8* %38, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string.66"* %3 to i8**
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %57, %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %52, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #15
  br label %61

61:                                               ; preds = %35, %45, %60, %22
  %62 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %23, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  br label %63

63:                                               ; preds = %61, %20
  ret void
}

declare zeroext i1 @_ZN2ui9IsControlEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

declare zeroext i1 @_ZNK2ui10AXNodeData21IsRangeValueSupportedEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2ui10AXNodeData17GetFloatAttributeEN2ax5mojom14FloatAttributeEPf(%"struct.ui::AXNodeData"*, i32, float*) local_unnamed_addr #6

declare void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string.66"* sret, double) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase21GetUnignoredSelectionEv(%"struct.ui::AXNode::OwnerTree::Selection"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXNode::OwnerTree::Selection", %"struct.ui::AXNode::OwnerTree::Selection"* %0, i64 0, i32 0
  store i8 1, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.ui::AXNode::OwnerTree::Selection", %"struct.ui::AXNode::OwnerTree::Selection"* %0, i64 0, i32 1
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 1, i32 0>, <4 x i32>* %5, align 4
  %6 = getelementptr inbounds %"struct.ui::AXNode::OwnerTree::Selection", %"struct.ui::AXNode::OwnerTree::Selection"* %0, i64 0, i32 5
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.ui::AXNode::OwnerTree::Selection", %"struct.ui::AXNode::OwnerTree::Selection"* %0, i64 0, i32 6
  store i32 0, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPosition"* @_ZNK2ui26AXPlatformNodeDelegateBase20CreateTextPositionAtEi(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %3 = tail call %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateNullPositionEv()
  ret %"class.ui::AXPosition"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXPosition"* @_ZN2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE18CreateNullPositionEv() local_unnamed_addr #2 comdat align 2 {
  %1 = alloca %"class.ui::AXTreeID", align 8
  %2 = tail call i8* @_Znwm(i64 88) #14
  %3 = bitcast i8* %2 to %"class.ui::AXNodePosition"*
  tail call void @_ZN2ui14AXNodePositionC1Ev(%"class.ui::AXNodePosition"* nonnull %3) #15
  %4 = bitcast i8* %2 to %"class.ui::AXPosition"*
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #15
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %1, %"class.ui::AXTreeID"* dereferenceable(32) %5) #15
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to %"class.ui::AXTreeID"*
  %10 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %9, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %1) #15
  %11 = getelementptr inbounds i8, i8* %2, i64 48
  %12 = bitcast i8* %11 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %12, align 8
  %13 = call zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv(%"class.ui::AXPosition"* nonnull %4) #15
  br i1 %13, label %18, label %14

14:                                               ; preds = %0
  store i32 0, i32* %7, align 8
  %15 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #15
  %16 = call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %9, %"class.ui::AXTreeID"* dereferenceable(32) %15) #15
  %17 = bitcast i8* %11 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 -1, i32 1>, <4 x i32>* %17, align 8
  br label %18

18:                                               ; preds = %0, %14
  ret %"class.ui::AXPosition"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase11GetNSWindowEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase23GetNativeViewAccessibleEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase9GetParentEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2ui26AXPlatformNodeDelegateBase13GetChildCountEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase12ChildAtIndexEi(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase14HasModalDialogEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase13GetFirstChildEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 12
  %5 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call i32 %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %10 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %9, align 8
  %11 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %10, i64 13
  %12 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %11, align 8
  %13 = tail call %struct._AtkObject* %12(%"class.ui::AXPlatformNodeDelegateBase"* %0, i32 0) #15
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi %struct._AtkObject* [ %13, %8 ], [ null, %1 ]
  ret %struct._AtkObject* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase12GetLastChildEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 12
  %5 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call i32 %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %1
  %9 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %10 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %9, i64 12
  %11 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, align 8
  %12 = tail call i32 %11(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %13 = add nsw i32 %12, -1
  %14 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %15 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %14, align 8
  %16 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %15, i64 13
  %17 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %16, align 8
  %18 = tail call %struct._AtkObject* %17(%"class.ui::AXPlatformNodeDelegateBase"* %0, i32 %13) #15
  br label %19

19:                                               ; preds = %1, %8
  %20 = phi %struct._AtkObject* [ %18, %8 ], [ null, %1 ]
  ret %struct._AtkObject* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase14GetNextSiblingEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 10
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = icmp eq %"class.ui::AXPlatformNode"* %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, i64 3
  %13 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, align 8
  %14 = tail call %"class.ui::AXPlatformNodeDelegate"* %13(%"class.ui::AXPlatformNode"* nonnull %7) #15
  %15 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %18 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %18, i64 11
  %20 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %19, align 8
  %21 = tail call i32 %20(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %43

23:                                               ; preds = %16
  %24 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %17, align 8
  %25 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %24, i64 11
  %26 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %25, align 8
  %27 = tail call i32 %26(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %28 = add nsw i32 %27, 1
  %29 = icmp sgt i32 %27, -2
  br i1 %29, label %30, label %43

30:                                               ; preds = %23
  %31 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to i32 (%"class.ui::AXPlatformNodeDelegate"*)***
  %32 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)**, i32 (%"class.ui::AXPlatformNodeDelegate"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %32, i64 12
  %34 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %33, align 8
  %35 = tail call i32 %34(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #15
  %36 = icmp slt i32 %28, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %30
  %38 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)***
  %39 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*** %38, align 8
  %40 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)** %39, i64 13
  %41 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)** %40, align 8
  %42 = tail call %struct._AtkObject* %41(%"class.ui::AXPlatformNodeDelegate"* nonnull %14, i32 %28) #15
  br label %43

43:                                               ; preds = %23, %30, %1, %16, %9, %37
  %44 = phi %struct._AtkObject* [ %42, %37 ], [ null, %9 ], [ null, %16 ], [ null, %1 ], [ null, %30 ], [ null, %23 ]
  ret %struct._AtkObject* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNodeDelegate"* @_ZN2ui26AXPlatformNodeDelegateBase17GetParentDelegateEv(%"class.ui::AXPlatformNodeDelegateBase"*) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 10
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = icmp eq %"class.ui::AXPlatformNode"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, i64 3
  %13 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, align 8
  %14 = tail call %"class.ui::AXPlatformNodeDelegate"* %13(%"class.ui::AXPlatformNode"* nonnull %7) #15
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi %"class.ui::AXPlatformNodeDelegate"* [ %14, %9 ], [ null, %1 ]
  ret %"class.ui::AXPlatformNodeDelegate"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZN2ui26AXPlatformNodeDelegateBase18GetPreviousSiblingEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 10
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = icmp eq %"class.ui::AXPlatformNode"* %7, null
  br i1 %8, label %43, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, i64 3
  %13 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, align 8
  %14 = tail call %"class.ui::AXPlatformNodeDelegate"* %13(%"class.ui::AXPlatformNode"* nonnull %7) #15
  %15 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %18 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %18, i64 11
  %20 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %19, align 8
  %21 = tail call i32 %20(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %23, label %43

23:                                               ; preds = %16
  %24 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %17, align 8
  %25 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %24, i64 11
  %26 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %25, align 8
  %27 = tail call i32 %26(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %28 = add nsw i32 %27, -1
  %29 = icmp sgt i32 %27, 0
  br i1 %29, label %30, label %43

30:                                               ; preds = %23
  %31 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to i32 (%"class.ui::AXPlatformNodeDelegate"*)***
  %32 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)**, i32 (%"class.ui::AXPlatformNodeDelegate"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %32, i64 12
  %34 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %33, align 8
  %35 = tail call i32 %34(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #15
  %36 = icmp sgt i32 %27, %35
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)***
  %39 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*** %38, align 8
  %40 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)** %39, i64 13
  %41 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)** %40, align 8
  %42 = tail call %struct._AtkObject* %41(%"class.ui::AXPlatformNodeDelegate"* nonnull %14, i32 %28) #15
  br label %43

43:                                               ; preds = %23, %30, %1, %16, %9, %37
  %44 = phi %struct._AtkObject* [ %42, %37 ], [ null, %9 ], [ null, %16 ], [ null, %1 ], [ null, %30 ], [ null, %23 ]
  ret %struct._AtkObject* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase13IsChildOfLeafEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 10
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = icmp eq %"class.ui::AXPlatformNode"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, i64 3
  %13 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, align 8
  %14 = tail call %"class.ui::AXPlatformNodeDelegate"* %13(%"class.ui::AXPlatformNode"* nonnull %7) #15
  %15 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to i1 (%"class.ui::AXPlatformNodeDelegate"*)***
  %18 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %18, i64 22
  %20 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #15
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)**, i1 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %24 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %23, i64 19
  %25 = load i1 (%"class.ui::AXPlatformNodeDelegate"*)*, i1 (%"class.ui::AXPlatformNodeDelegate"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #15
  br label %27

27:                                               ; preds = %1, %16, %9, %22
  %28 = phi i1 [ %26, %22 ], [ false, %9 ], [ true, %16 ], [ false, %1 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsLeafEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 12
  %5 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call i32 %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = icmp eq i32 %6, 0
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase9IsFocusedEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase9IsIgnoredEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %12 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %11, i64 2
  %13 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %12, align 8
  %14 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %13(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %15 = tail call zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %14, i32 9) #15
  br label %16

16:                                               ; preds = %10, %1
  %17 = phi i1 [ true, %1 ], [ %15, %10 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK2ui10AXNodeData8HasStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase20IsInvisibleOrIgnoredEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 21
  %5 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %9 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %8, align 8
  %10 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %9, i64 2
  %11 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, align 8
  %12 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %11(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %13 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsInvisibleEv(%"struct.ui::AXNodeData"* %12) #15
  br label %14

14:                                               ; preds = %7, %1
  %15 = phi i1 [ true, %1 ], [ %13, %7 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK2ui10AXNodeData11IsInvisibleEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase23IsToplevelBrowserWindowEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase29IsDescendantOfAtomicTextFieldEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = icmp eq %"class.ui::AXPlatformNodeDelegateBase"* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1, %19
  %4 = phi %"class.ui::AXPlatformNodeDelegateBase"* [ %25, %19 ], [ %0, %1 ]
  %5 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %4 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %6 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %6, i64 2
  %8 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %7, align 8
  %9 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %8(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %4) #15
  %10 = tail call zeroext i1 @_ZNK2ui10AXNodeData17IsAtomicTextFieldEv(%"struct.ui::AXNodeData"* %9) #15
  br i1 %10, label %27, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %4 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %13 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %12, align 8
  %14 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %13, i64 10
  %15 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %14, align 8
  %16 = tail call %struct._AtkObject* %15(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %4) #15
  %17 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %16) #15
  %18 = icmp eq %"class.ui::AXPlatformNode"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.ui::AXPlatformNode"* %17 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %21 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %21, i64 3
  %23 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %22, align 8
  %24 = tail call %"class.ui::AXPlatformNodeDelegate"* %23(%"class.ui::AXPlatformNode"* nonnull %17) #15
  %25 = bitcast %"class.ui::AXPlatformNodeDelegate"* %24 to %"class.ui::AXPlatformNodeDelegateBase"*
  %26 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %24, null
  br i1 %26, label %27, label %3

27:                                               ; preds = %11, %3, %19, %1
  %28 = phi i1 [ false, %1 ], [ false, %11 ], [ false, %19 ], [ true, %3 ]
  ret i1 %28
}

declare zeroext i1 @_ZNK2ui10AXNodeData17IsAtomicTextFieldEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase25GetLowestPlatformAncestorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 21
  %5 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  br i1 %6, label %7, label %22

7:                                                ; preds = %1
  %8 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %9 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %8, align 8
  %10 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %9, i64 10
  %11 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, align 8
  %12 = tail call %struct._AtkObject* %11(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %13 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %12) #15
  %14 = icmp eq %"class.ui::AXPlatformNode"* %13, null
  br i1 %14, label %64, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.ui::AXPlatformNode"* %13 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %17 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %17, i64 3
  %19 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %18, align 8
  %20 = tail call %"class.ui::AXPlatformNodeDelegate"* %19(%"class.ui::AXPlatformNode"* nonnull %13) #15
  %21 = bitcast %"class.ui::AXPlatformNodeDelegate"* %20 to %"class.ui::AXPlatformNodeDelegateBase"*
  br label %22

22:                                               ; preds = %15, %1
  %23 = phi %"class.ui::AXPlatformNodeDelegateBase"* [ %0, %1 ], [ %21, %15 ]
  %24 = icmp eq %"class.ui::AXPlatformNodeDelegateBase"* %23, null
  br i1 %24, label %64, label %27

25:                                               ; preds = %27, %43
  %26 = icmp eq %"class.ui::AXPlatformNodeDelegateBase"* %35, null
  br i1 %26, label %57, label %51

27:                                               ; preds = %22, %43
  %28 = phi %"class.ui::AXPlatformNodeDelegateBase"* [ %49, %43 ], [ %23, %22 ]
  %29 = phi %"class.ui::AXPlatformNodeDelegateBase"* [ %35, %43 ], [ %23, %22 ]
  %30 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %28 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %31 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %31, i64 22
  %33 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %28) #15
  %35 = select i1 %34, %"class.ui::AXPlatformNodeDelegateBase"* %28, %"class.ui::AXPlatformNodeDelegateBase"* %29
  %36 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %28 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %37 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %36, align 8
  %38 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %37, i64 10
  %39 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %38, align 8
  %40 = tail call %struct._AtkObject* %39(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %28) #15
  %41 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %40) #15
  %42 = icmp eq %"class.ui::AXPlatformNode"* %41, null
  br i1 %42, label %25, label %43

43:                                               ; preds = %27
  %44 = bitcast %"class.ui::AXPlatformNode"* %41 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %45 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %45, i64 3
  %47 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %46, align 8
  %48 = tail call %"class.ui::AXPlatformNodeDelegate"* %47(%"class.ui::AXPlatformNode"* nonnull %41) #15
  %49 = bitcast %"class.ui::AXPlatformNodeDelegate"* %48 to %"class.ui::AXPlatformNodeDelegateBase"*
  %50 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %48, null
  br i1 %50, label %25, label %27

51:                                               ; preds = %25
  %52 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %35 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %53 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %52, align 8
  %54 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %53, i64 9
  %55 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %54, align 8
  %56 = tail call %struct._AtkObject* %55(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %35) #15
  br label %70

57:                                               ; preds = %25
  br i1 %24, label %64, label %58

58:                                               ; preds = %57
  %59 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %23 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %60 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %59, align 8
  %61 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %60, i64 9
  %62 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %61, align 8
  %63 = tail call %struct._AtkObject* %62(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %23) #15
  br label %70

64:                                               ; preds = %22, %7, %57
  %65 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %66 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %65, align 8
  %67 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %66, i64 9
  %68 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %67, align 8
  %69 = tail call %struct._AtkObject* %68(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  br label %70

70:                                               ; preds = %64, %58, %51
  %71 = phi %struct._AtkObject* [ %56, %51 ], [ %63, %58 ], [ %69, %64 ]
  ret %struct._AtkObject* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase20GetTextFieldAncestorEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = icmp eq %"class.ui::AXPlatformNodeDelegateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1, %19
  %4 = phi %"class.ui::AXPlatformNodeDelegateBase"* [ %25, %19 ], [ %0, %1 ]
  %5 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %4 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %6 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %6, i64 2
  %8 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %7, align 8
  %9 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %8(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %4) #15
  %10 = tail call zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"* %9) #15
  %11 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %4 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %12 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %11, align 8
  br i1 %10, label %27, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %12, i64 10
  %15 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %14, align 8
  %16 = tail call %struct._AtkObject* %15(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %4) #15
  %17 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %16) #15
  %18 = icmp eq %"class.ui::AXPlatformNode"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.ui::AXPlatformNode"* %17 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %21 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %21, i64 3
  %23 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %22, align 8
  %24 = tail call %"class.ui::AXPlatformNodeDelegate"* %23(%"class.ui::AXPlatformNode"* nonnull %17) #15
  %25 = bitcast %"class.ui::AXPlatformNodeDelegate"* %24 to %"class.ui::AXPlatformNodeDelegateBase"*
  %26 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %24, null
  br i1 %26, label %31, label %3

27:                                               ; preds = %3
  %28 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %12, i64 9
  %29 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %28, align 8
  %30 = tail call %struct._AtkObject* %29(%"class.ui::AXPlatformNodeDelegateBase"* nonnull %4) #15
  br label %31

31:                                               ; preds = %13, %19, %1, %27
  %32 = phi %struct._AtkObject* [ %30, %27 ], [ null, %1 ], [ null, %19 ], [ null, %13 ]
  ret %struct._AtkObject* %32
}

declare zeroext i1 @_ZNK2ui10AXNodeData11IsTextFieldEv(%"struct.ui::AXNodeData"*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseC2EPS0_i(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture, %"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 2
  store %"class.ui::AXPlatformNodeDelegateBase"* %1, %"class.ui::AXPlatformNodeDelegateBase"** %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseC2ERKS1_(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture, %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture readonly dereferenceable(24)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %1, i64 0, i32 2
  %9 = bitcast %"class.ui::AXPlatformNodeDelegateBase"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.ui::AXPlatformNodeDelegateBase"** %7 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseeqERKNS_22AXPlatformNodeDelegate13ChildIteratorE(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture readonly, %"class.ui::AXPlatformNodeDelegate::ChildIterator"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNodeDelegate::ChildIterator"* %1 to i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)***
  %4 = load i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)**, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)** %4, i64 9
  %6 = load i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)** %5, align 8
  %7 = tail call i32 %6(%"class.ui::AXPlatformNodeDelegate::ChildIterator"* %1) #15
  %8 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseneERKNS_22AXPlatformNodeDelegate13ChildIteratorE(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture readonly, %"class.ui::AXPlatformNodeDelegate::ChildIterator"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNodeDelegate::ChildIterator"* %1 to i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)***
  %4 = load i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)**, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)** %4, i64 9
  %6 = load i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)** %5, align 8
  %7 = tail call i32 %6(%"class.ui::AXPlatformNodeDelegate::ChildIterator"* %1) #15
  %8 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %7, %9
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseppEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseppEi(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture, i32) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBasemmEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBasemmEi(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture, i32) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBase23GetNativeViewAccessibleEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 2
  %5 = load %"class.ui::AXPlatformNodeDelegateBase"*, %"class.ui::AXPlatformNodeDelegateBase"** %4, align 8
  %6 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %5 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %7 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %7, i64 12
  %9 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %8, align 8
  %10 = tail call i32 %9(%"class.ui::AXPlatformNodeDelegateBase"* %5) #15
  %11 = icmp slt i32 %3, %10
  br i1 %11, label %12, label %20

12:                                               ; preds = %1
  %13 = load %"class.ui::AXPlatformNodeDelegateBase"*, %"class.ui::AXPlatformNodeDelegateBase"** %4, align 8
  %14 = load i32, i32* %2, align 8
  %15 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %13 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %16 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %15, align 8
  %17 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %16, i64 13
  %18 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %17, align 8
  %19 = tail call %struct._AtkObject* %18(%"class.ui::AXPlatformNodeDelegateBase"* %13, i32 %14) #15
  br label %20

20:                                               ; preds = %1, %12
  %21 = phi %struct._AtkObject* [ %19, %12 ], [ null, %1 ]
  ret %struct._AtkObject* %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBase16GetIndexInParentEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.ui::AXPlatformNodeDelegate"* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBasedeEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** %3, i64 8
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %9 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %9, i64 3
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %10, align 8
  %12 = tail call %"class.ui::AXPlatformNodeDelegate"* %11(%"class.ui::AXPlatformNode"* %7) #15
  ret %"class.ui::AXPlatformNodeDelegate"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNodeDelegate"* @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseptEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** %3, i64 8
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = icmp eq %"class.ui::AXPlatformNode"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, i64 3
  %13 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, align 8
  %14 = tail call %"class.ui::AXPlatformNodeDelegate"* %13(%"class.ui::AXPlatformNode"* nonnull %7) #15
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi %"class.ui::AXPlatformNodeDelegate"* [ %14, %9 ], [ null, %1 ]
  ret %"class.ui::AXPlatformNodeDelegate"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNodeDelegate::ChildIterator"* @_ZN2ui26AXPlatformNodeDelegateBase13ChildrenBeginEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.ui::AXPlatformNodeDelegateBase"* %0 to i64
  %3 = tail call i8* @_Znwm(i64 24) #14
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to i64*
  store i64 %2, i64* %8, align 8
  %9 = bitcast i8* %3 to %"class.ui::AXPlatformNodeDelegate::ChildIterator"*
  ret %"class.ui::AXPlatformNodeDelegate::ChildIterator"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNodeDelegate::ChildIterator"* @_ZN2ui26AXPlatformNodeDelegateBase11ChildrenEndEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = ptrtoint %"class.ui::AXPlatformNodeDelegateBase"* %0 to i64
  %3 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %4 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, i64 12
  %6 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %5, align 8
  %7 = tail call i32 %6(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %8 = tail call i8* @_Znwm(i64 24) #14
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %7, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %2, i64* %13, align 8
  %14 = bitcast i8* %8 to %"class.ui::AXPlatformNodeDelegate::ChildIterator"*
  ret %"class.ui::AXPlatformNodeDelegate::ChildIterator"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase7GetNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %4 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, i64 2
  %6 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %5, align 8
  %7 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %6(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* %7, i32 21) #15
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #15
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %18, i64 %20) #15
  br label %21

21:                                               ; preds = %13, %16
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase12GetHypertextEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase21SetHypertextSelectionEii(%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32) unnamed_addr #2 align 2 {
  %4 = alloca %"struct.ui::AXActionData", align 8
  %5 = bitcast %"struct.ui::AXActionData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 168, i1 false)
  call void @_ZN2ui12AXActionDataC1Ev(%"struct.ui::AXActionData"* nonnull %4) #15
  %6 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %4, i64 0, i32 0
  store i32 28, i32* %6, align 8
  %7 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %8 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %7, align 8
  %9 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %8, i64 2
  %10 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %9, align 8
  %11 = call dereferenceable(264) %"struct.ui::AXNodeData"* %10(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %12 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %4, i64 0, i32 8
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %4, i64 0, i32 6
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %4, i64 0, i32 7
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.ui::AXActionData", %"struct.ui::AXActionData"* %4, i64 0, i32 9
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)***
  %19 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)** %19, i64 90
  %21 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*, %"struct.ui::AXActionData"*)** %20, align 8
  %22 = call zeroext i1 %21(%"class.ui::AXPlatformNodeDelegateBase"* %0, %"struct.ui::AXActionData"* nonnull dereferenceable(168) %4) #15
  call void @_ZN2ui12AXActionDataD1Ev(%"struct.ui::AXActionData"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %5) #15
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN2ui12AXActionDataC1Ev(%"struct.ui::AXActionData"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2ui12AXActionDataD1Ev(%"struct.ui::AXActionData"*) unnamed_addr #9

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase13GetBoundsRectENS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32, i32, i32* nocapture readnone) unnamed_addr #10 align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase27GetHypertextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32, i32, i32, i32, i32* nocapture readnone) unnamed_addr #10 align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase27GetInnerTextRangeBoundsRectEiiNS_18AXCoordinateSystemENS_18AXClippingBehaviorEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32, i32, i32, i32, i32* nocapture readnone) unnamed_addr #10 align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase26GetClippedScreenBoundsRectEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32*) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)***
  %4 = load { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)**, { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)*** %3, align 8
  %5 = getelementptr inbounds { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)*, { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)** %4, i64 35
  %6 = load { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)*, { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)** %5, align 8
  %7 = tail call { i64, i64 } %6(%"class.ui::AXPlatformNodeDelegateBase"* %0, i32 1, i32 1, i32* %1) #15
  ret { i64, i64 } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2ui26AXPlatformNodeDelegateBase28GetUnclippedScreenBoundsRectEPNS_17AXOffscreenResultE(%"class.ui::AXPlatformNodeDelegateBase"*, i32*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)***
  %4 = load { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)**, { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)*** %3, align 8
  %5 = getelementptr inbounds { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)*, { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)** %4, i64 35
  %6 = load { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)*, { i64, i64 } (%"class.ui::AXPlatformNodeDelegateBase"*, i32, i32, i32*)** %5, align 8
  %7 = tail call { i64, i64 } %6(%"class.ui::AXPlatformNodeDelegateBase"* %0, i32 1, i32 0, i32* %1) #15
  ret { i64, i64 } %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase11HitTestSyncEii(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32, i32) unnamed_addr #1 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %struct._AtkObject* @_ZNK2ui26AXPlatformNodeDelegateBase8GetFocusEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %struct._AtkObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::AXPlatformNode"* @_ZN2ui26AXPlatformNodeDelegateBase13GetFromNodeIDEi(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret %"class.ui::AXPlatformNode"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::AXPlatformNode"* @_ZN2ui26AXPlatformNodeDelegateBase22GetFromTreeIDAndNodeIDERKNS_8AXTreeIDEi(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, %"class.ui::AXTreeID"* nocapture readnone dereferenceable(32), i32) unnamed_addr #1 align 2 {
  ret %"class.ui::AXPlatformNode"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui26AXPlatformNodeDelegateBase16GetIndexInParentEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 10
  %5 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call %struct._AtkObject* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %6) #15
  %8 = icmp eq %"class.ui::AXPlatformNode"* %7, null
  br i1 %8, label %48, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::AXPlatformNode"* %7 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %11 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %11, i64 3
  %13 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %12, align 8
  %14 = tail call %"class.ui::AXPlatformNodeDelegate"* %13(%"class.ui::AXPlatformNode"* nonnull %7) #15
  %15 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %14, null
  br i1 %15, label %48, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to i32 (%"class.ui::AXPlatformNodeDelegate"*)***
  %18 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)**, i32 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %18, i64 12
  %20 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %19, align 8
  %21 = tail call i32 %20(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #15
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %48

23:                                               ; preds = %16
  %24 = bitcast %"class.ui::AXPlatformNodeDelegate"* %14 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)***
  %25 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNodeDelegateBase"* %0, i64 0, i32 0
  br label %26

26:                                               ; preds = %23, %41
  %27 = phi i32 [ 0, %23 ], [ %42, %41 ]
  %28 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*** %24, align 8
  %29 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)** %28, i64 13
  %30 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegate"*, i32)** %29, align 8
  %31 = tail call %struct._AtkObject* %30(%"class.ui::AXPlatformNodeDelegate"* nonnull %14, i32 %27) #15
  %32 = tail call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %31) #15
  %33 = icmp eq %"class.ui::AXPlatformNode"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %26
  %35 = bitcast %"class.ui::AXPlatformNode"* %32 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %36 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %36, i64 3
  %38 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %37, align 8
  %39 = tail call %"class.ui::AXPlatformNodeDelegate"* %38(%"class.ui::AXPlatformNode"* nonnull %32) #15
  %40 = icmp eq %"class.ui::AXPlatformNodeDelegate"* %39, %25
  br i1 %40, label %48, label %41

41:                                               ; preds = %34, %26
  %42 = add nuw nsw i32 %27, 1
  %43 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)**, i32 (%"class.ui::AXPlatformNodeDelegate"*)*** %17, align 8
  %44 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %43, i64 12
  %45 = load i32 (%"class.ui::AXPlatformNodeDelegate"*)*, i32 (%"class.ui::AXPlatformNodeDelegate"*)** %44, align 8
  %46 = tail call i32 %45(%"class.ui::AXPlatformNodeDelegate"* nonnull %14) #15
  %47 = icmp slt i32 %42, %46
  br i1 %47, label %26, label %48

48:                                               ; preds = %34, %41, %16, %9, %1
  %49 = phi i32 [ -1, %1 ], [ -1, %9 ], [ -1, %16 ], [ %27, %34 ], [ -1, %41 ]
  ret i32 %49
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui26AXPlatformNodeDelegateBase36GetTargetForNativeAccessibilityEventEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase7IsTableEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32 %8) #15
  ret i1 %9
}

declare zeroext i1 @_ZN2ui11IsTableLikeEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableRowCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 16) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

declare i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase16GetTableColCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 17) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaColCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #15
  store i32 -1431655766, i32* %2, align 4
  %4 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %5, i64 2
  %7 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %6, align 8
  %8 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %7(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %9 = call zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"* %8, i32 10, i32* nonnull %2) #15
  %10 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #15
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i1 %9 to i64
  %14 = or i64 %12, %13
  ret i64 %14
}

declare zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"*, i32, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableAriaRowCountEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #15
  store i32 -1431655766, i32* %2, align 4
  %4 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %5, i64 2
  %7 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %6, align 8
  %8 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %7(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %9 = call zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"* %8, i32 13, i32* nonnull %2) #15
  %10 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #15
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i1 %9 to i64
  %14 = or i64 %12, %13
  ret i64 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellCountEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i16 @_ZNK2ui26AXPlatformNodeDelegateBase32GetTableHasColumnOrRowHeaderNodeEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i16 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase19GetColHeaderNodeIdsEv(%"class.std::__1::vector.49"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::vector.49"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase19GetColHeaderNodeIdsEi(%"class.std::__1::vector.49"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.std::__1::vector.49"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEv(%"class.std::__1::vector.49"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::vector.49"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase19GetRowHeaderNodeIdsEi(%"class.std::__1::vector.49"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.std::__1::vector.49"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.ui::AXPlatformNode"* @_ZNK2ui26AXPlatformNodeDelegateBase15GetTableCaptionEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.ui::AXPlatformNode"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase10IsTableRowEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32 %8) #15
  ret i1 %9
}

declare zeroext i1 @_ZN2ui10IsTableRowEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableRowRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 19) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase19IsTableCellOrHeaderEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32 %8) #15
  ret i1 %9
}

declare zeroext i1 @_ZN2ui19IsCellOrTableHeaderEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellColIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 23) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase20GetTableCellRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 25) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellColSpanEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 24) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase19GetTableCellRowSpanEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 26) #15
  %8 = zext i32 %7 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaColIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 11) #15
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %10 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %9, i64 2
  %11 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, align 8
  %12 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %11(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %13 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %12, i32 11) #15
  %14 = zext i32 %13 to i64
  %15 = shl nuw i64 %14, 32
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i64 [ 1, %8 ], [ 0, %1 ]
  %18 = phi i64 [ %15, %8 ], [ 0, %1 ]
  %19 = or i64 %18, %17
  ret i64 %19
}

declare zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase24GetTableCellAriaRowIndexEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = tail call zeroext i1 @_ZNK2ui10AXNodeData15HasIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %6, i32 14) #15
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %10 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %9, i64 2
  %11 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, align 8
  %12 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %11(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %13 = tail call i32 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeE(%"struct.ui::AXNodeData"* %12, i32 14) #15
  %14 = zext i32 %13 to i64
  %15 = shl nuw i64 %14, 32
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i64 [ 1, %8 ], [ 0, %1 ]
  %18 = phi i64 [ %15, %8 ], [ 0, %1 ]
  %19 = or i64 %18, %17
  ret i64 %19
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase9GetCellIdEii(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32, i32) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase17GetTableCellIndexEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase13CellIndexToIdEi(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase25IsCellOrHeaderOfARIATableEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase24IsCellOrHeaderOfARIAGridEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase16IsOrderedSetItemEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase12IsOrderedSetEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase11GetPosInSetEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase10GetSetSizeEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2ui26AXPlatformNodeDelegateBase8GetColorEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 -16777216
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2ui26AXPlatformNodeDelegateBase18GetBackgroundColorEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase26AccessibilityPerformActionERKNS_12AXActionDataE(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, %"struct.ui::AXActionData"* nocapture readnone dereferenceable(168)) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase42GetLocalizedStringForImageAnnotationStatusEN2ax5mojom21ImageAnnotationStatusE(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase44GetLocalizedRoleDescriptionForUnlabeledImageEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase33GetLocalizedStringForLandmarkTypeEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase36GetLocalizedStringForRoleDescriptionEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase38GetStyleNameAttributeAsLocalizedStringEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase23ComputeTextAttributeMapERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE(%"class.std::__1::map"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, %"class.std::__1::vector.41"* readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %4, align 8
  %9 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %27

12:                                               ; preds = %3
  %13 = tail call i8* @_Znwm(i64 64) #14, !noalias !14
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 8, !noalias !14
  %16 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15, !noalias !14
  %17 = bitcast i8* %13 to %"class.std::__1::__tree_node"*
  %18 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %19 = getelementptr inbounds i8, i8* %13, i64 16
  %20 = bitcast i8* %19 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %20, align 8
  %21 = bitcast %"class.std::__1::__tree_end_node"* %7 to i8**
  store i8* %13, i8** %21, align 8
  %22 = bitcast i8* %13 to %"class.std::__1::__tree_node_base"*
  %23 = ptrtoint i8* %13 to i64
  %24 = bitcast %"class.std::__1::map"* %0 to i64*
  store i64 %23, i64* %24, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %22, %"class.std::__1::__tree_node_base"* nonnull %18) #15
  %25 = load i64, i64* %6, align 8
  %26 = add i64 %25, 1
  store i64 %26, i64* %6, align 8
  br label %27

27:                                               ; preds = %3, %12
  %28 = phi %"class.std::__1::__tree_node"* [ %10, %3 ], [ %17, %12 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 1, i32 0, i32 1
  %30 = icmp eq %"class.std::__1::vector.41"* %29, %2
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 0
  %33 = load %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 1
  %35 = load %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"** %34, align 8
  tail call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE6assignIPS8_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_(%"class.std::__1::vector.41"* %29, %"struct.std::__1::pair.43"* %33, %"struct.std::__1::pair.43"* %35) #15
  br label %36

36:                                               ; preds = %27, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase26GetInheritedFontFamilyNameEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2ui26AXPlatformNodeDelegateBase34ShouldIgnoreHoveredStateForTestingEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase11IsOffscreenEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase11IsMinimizedEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase6IsTextEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 2
  %5 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %7 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32 %8) #15
  ret i1 %9
}

declare zeroext i1 @_ZN2ui6IsTextEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase12IsWebContentEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui26AXPlatformNodeDelegateBase26HasVisibleCaretOrSelectionEv(%"class.ui::AXPlatformNodeDelegateBase"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to i1 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %3 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %3, i64 20
  %5 = load i1 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i1 (%"class.ui::AXPlatformNodeDelegateBase"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::AXPlatformNode"* @_ZN2ui26AXPlatformNodeDelegateBase24GetTargetNodeForRelationEN2ax5mojom12IntAttributeE(%"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store i32 -1431655766, i32* %3, align 4
  %5 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %6 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %6, i64 2
  %8 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %7, align 8
  %9 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %8(%"class.ui::AXPlatformNodeDelegateBase"* %0) #15
  %10 = call zeroext i1 @_ZNK2ui10AXNodeData15GetIntAttributeEN2ax5mojom12IntAttributeEPi(%"struct.ui::AXNodeData"* %9, i32 %1, i32* nonnull %3) #15
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %0 to %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %14 = load %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %13, align 8
  %15 = getelementptr inbounds %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %14, i64 46
  %16 = load %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %15, align 8
  %17 = call %"class.ui::AXPlatformNode"* %16(%"class.ui::AXPlatformNodeDelegateBase"* %0, i32 %12) #15
  br label %18

18:                                               ; preds = %2, %11
  %19 = phi %"class.ui::AXPlatformNode"* [ %17, %11 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret %"class.ui::AXPlatformNode"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase18GetNodesForNodeIdsERKNSt3__13setIiNS1_4lessIiEENS1_9allocatorIiEEEE(%"class.std::__1::set.118"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"*, %"class.std::__1::set"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %15 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.198"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %17 = bitcast %"class.std::__1::set.118"* %0 to i64*
  br label %19

18:                                               ; preds = %113, %3
  ret void

19:                                               ; preds = %13, %113
  %20 = phi %"class.std::__1::__tree_end_node"* [ %10, %13 ], [ %114, %113 ]
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.199"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.199", %"class.std::__1::__tree_node.199"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %14, align 8
  %25 = getelementptr inbounds %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %24, i64 46
  %26 = load %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %25, align 8
  %27 = tail call %"class.ui::AXPlatformNode"* %26(%"class.ui::AXPlatformNodeDelegateBase"* %1, i32 %23) #15
  %28 = ptrtoint %"class.ui::AXPlatformNode"* %27 to i64
  %29 = icmp eq %"class.ui::AXPlatformNode"* %27, null
  br i1 %29, label %85, label %30

30:                                               ; preds = %19
  %31 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %15, align 8
  %32 = icmp eq %"class.std::__1::__tree_node.198"* %31, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %30, %55
  %34 = phi %"class.std::__1::__tree_node.198"* [ %58, %55 ], [ %31, %30 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %57, %55 ], [ %5, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %34, i64 0, i32 1
  %37 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %36, align 8
  %38 = icmp ult %"class.ui::AXPlatformNode"* %27, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %34, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %55

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %34, i64 0, i32 0, i32 0
  br label %59

45:                                               ; preds = %33
  %46 = icmp ult %"class.ui::AXPlatformNode"* %37, %27
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %34, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %34, i64 0, i32 0, i32 0
  br label %59

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.std::__1::__tree_node.198", %"class.std::__1::__tree_node.198"* %34, i64 0, i32 0, i32 0
  br label %59

55:                                               ; preds = %47, %39
  %56 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %49, %47 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %48, %47 ]
  %58 = bitcast %"class.std::__1::__tree_node_base"* %56 to %"class.std::__1::__tree_node.198"*
  br label %33

59:                                               ; preds = %30, %53, %51, %43
  %60 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %52, %51 ], [ %54, %53 ], [ %7, %30 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %40, %43 ], [ %48, %51 ], [ %35, %53 ], [ %16, %30 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node.198"**
  %63 = load %"class.std::__1::__tree_node.198"*, %"class.std::__1::__tree_node.198"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node.198"* %63, null
  br i1 %64, label %65, label %85

65:                                               ; preds = %59
  %66 = tail call i8* @_Znwm(i64 40) #14, !noalias !17
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  %68 = bitcast i8* %67 to i64*
  store i64 %28, i64* %68, align 8, !noalias !17
  %69 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %70 = getelementptr inbounds i8, i8* %66, i64 16
  %71 = bitcast i8* %70 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %71, align 8
  %72 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %72, align 8
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %65
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  store i64 %78, i64* %17, align 8
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %80

80:                                               ; preds = %77, %65
  %81 = phi %"class.std::__1::__tree_node_base"* [ %69, %65 ], [ %79, %77 ]
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %81) #15
  %83 = load i64, i64* %6, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %6, align 8
  br label %85

85:                                               ; preds = %80, %59, %19
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 1, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %97

89:                                               ; preds = %85
  %90 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 2
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::__tree_end_node"**
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, %90
  br i1 %96, label %113, label %104

97:                                               ; preds = %85, %97
  %98 = phi %"class.std::__1::__tree_node_base"* [ %100, %97 ], [ %87, %85 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %97

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0
  br label %113

104:                                              ; preds = %89, %104
  %105 = phi %"class.std::__1::__tree_end_node"** [ %108, %104 ], [ %92, %89 ]
  %106 = bitcast %"class.std::__1::__tree_end_node"** %105 to %"class.std::__1::__tree_node_base"**
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 2
  %109 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, %107
  br i1 %112, label %113, label %104

113:                                              ; preds = %104, %89, %102
  %114 = phi %"class.std::__1::__tree_end_node"* [ %103, %102 ], [ %93, %89 ], [ %109, %104 ]
  %115 = icmp eq %"class.std::__1::__tree_end_node"* %114, %11
  br i1 %115, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase25GetTargetNodesForRelationEN2ax5mojom16IntListAttributeE(%"class.std::__1::vector.130"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"*, i32) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::vector.49", align 8
  %5 = alloca %"class.std::__1::vector.130", align 16
  %6 = bitcast %"class.std::__1::vector.49"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #15
  %9 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %10 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*** %9, align 8
  %11 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %10, i64 2
  %12 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegateBase"*)** %11, align 8
  %13 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %12(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %14 = call zeroext i1 @_ZNK2ui10AXNodeData19GetIntListAttributeEN2ax5mojom16IntListAttributeEPNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %13, i32 %2, %"class.std::__1::vector.49"* nonnull %4) #15
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::vector.130"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  br label %118

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::vector.130"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 24, i1 false) #15
  %22 = load i32*, i32** %7, align 8
  %23 = load i32*, i32** %8, align 8
  %24 = icmp eq i32* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)***
  %27 = bitcast %"class.ui::AXPlatformNode"*** %20 to i64*
  %28 = bitcast %"class.std::__1::vector.130"* %5 to i64*
  %29 = bitcast %"class.ui::AXPlatformNode"*** %21 to i64*
  br label %40

30:                                               ; preds = %115
  %31 = bitcast %"class.std::__1::vector.130"* %5 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 16
  %33 = load i64, i64* %29, align 16
  br label %34

34:                                               ; preds = %30, %17
  %35 = phi i64 [ %33, %30 ], [ 0, %17 ]
  %36 = phi <2 x i64> [ %32, %30 ], [ zeroinitializer, %17 ]
  %37 = bitcast %"class.std::__1::vector.130"* %0 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.ui::AXPlatformNode"*** %38 to i64*
  store i64 %35, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  br label %118

40:                                               ; preds = %25, %115
  %41 = phi i32* [ %22, %25 ], [ %116, %115 ]
  %42 = load i32, i32* %41, align 4
  %43 = load %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)**, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*** %26, align 8
  %44 = getelementptr inbounds %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %43, i64 46
  %45 = load %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)*, %"class.ui::AXPlatformNode"* (%"class.ui::AXPlatformNodeDelegateBase"*, i32)** %44, align 8
  %46 = call %"class.ui::AXPlatformNode"* %45(%"class.ui::AXPlatformNodeDelegateBase"* %1, i32 %42) #15
  %47 = ptrtoint %"class.ui::AXPlatformNode"* %46 to i64
  %48 = icmp eq %"class.ui::AXPlatformNode"* %46, null
  br i1 %48, label %115, label %49

49:                                               ; preds = %40
  %50 = load %"class.ui::AXPlatformNode"**, %"class.ui::AXPlatformNode"*** %19, align 16
  %51 = load %"class.ui::AXPlatformNode"**, %"class.ui::AXPlatformNode"*** %20, align 8
  %52 = icmp eq %"class.ui::AXPlatformNode"** %50, %51
  %53 = ptrtoint %"class.ui::AXPlatformNode"** %50 to i64
  %54 = ptrtoint %"class.ui::AXPlatformNode"** %51 to i64
  br i1 %52, label %62, label %55

55:                                               ; preds = %49, %59
  %56 = phi %"class.ui::AXPlatformNode"** [ %60, %59 ], [ %50, %49 ]
  %57 = load %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %56, align 8
  %58 = icmp eq %"class.ui::AXPlatformNode"* %57, %46
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %56, i64 1
  %61 = icmp eq %"class.ui::AXPlatformNode"** %60, %51
  br i1 %61, label %65, label %55

62:                                               ; preds = %55, %49
  %63 = phi %"class.ui::AXPlatformNode"** [ %50, %49 ], [ %56, %55 ]
  %64 = icmp eq %"class.ui::AXPlatformNode"** %63, %51
  br i1 %64, label %65, label %115

65:                                               ; preds = %59, %62
  %66 = load %"class.ui::AXPlatformNode"**, %"class.ui::AXPlatformNode"*** %21, align 16
  %67 = icmp eq %"class.ui::AXPlatformNode"** %51, %66
  %68 = ptrtoint %"class.ui::AXPlatformNode"** %66 to i64
  br i1 %67, label %73, label %69

69:                                               ; preds = %65
  %70 = bitcast %"class.ui::AXPlatformNode"** %51 to i64*
  store i64 %47, i64* %70, align 8
  %71 = getelementptr inbounds %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %51, i64 1
  %72 = ptrtoint %"class.ui::AXPlatformNode"** %71 to i64
  store i64 %72, i64* %27, align 8
  br label %115

73:                                               ; preds = %65
  %74 = sub i64 %54, %53
  %75 = ashr exact i64 %74, 3
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 2305843009213693951
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = bitcast %"class.std::__1::vector.130"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %79) #16
  unreachable

80:                                               ; preds = %73
  %81 = sub i64 %68, %53
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 1152921504606846975
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = ashr exact i64 %81, 2
  %86 = icmp ult i64 %85, %76
  %87 = select i1 %86, i64 %76, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 2305843009213693951
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  call void @abort() #16
  unreachable

92:                                               ; preds = %89, %80
  %93 = phi i64 [ %87, %89 ], [ 2305843009213693951, %80 ]
  %94 = shl i64 %93, 3
  %95 = call i8* @_Znwm(i64 %94) #14
  %96 = bitcast i8* %95 to %"class.ui::AXPlatformNode"**
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi i8* [ %95, %92 ], [ null, %84 ]
  %100 = phi %"class.ui::AXPlatformNode"** [ %96, %92 ], [ null, %84 ]
  %101 = getelementptr inbounds %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %100, i64 %75
  %102 = getelementptr inbounds %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %100, i64 %98
  %103 = ptrtoint %"class.ui::AXPlatformNode"** %102 to i64
  %104 = bitcast %"class.ui::AXPlatformNode"** %101 to i64*
  store i64 %47, i64* %104, align 8
  %105 = getelementptr inbounds %"class.ui::AXPlatformNode"*, %"class.ui::AXPlatformNode"** %101, i64 1
  %106 = ptrtoint %"class.ui::AXPlatformNode"** %105 to i64
  %107 = ptrtoint %"class.ui::AXPlatformNode"** %100 to i64
  %108 = icmp sgt i64 %74, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %97
  %110 = bitcast %"class.ui::AXPlatformNode"** %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %110, i64 %74, i1 false) #15
  br label %111

111:                                              ; preds = %109, %97
  store i64 %107, i64* %28, align 16
  store i64 %106, i64* %27, align 8
  store i64 %103, i64* %29, align 16
  %112 = icmp eq %"class.ui::AXPlatformNode"** %50, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = bitcast %"class.ui::AXPlatformNode"** %50 to i8*
  call void @_ZdlPv(i8* %114) #14
  br label %115

115:                                              ; preds = %113, %111, %69, %40, %62
  %116 = getelementptr inbounds i32, i32* %41, i64 1
  %117 = icmp eq i32* %116, %23
  br i1 %117, label %30, label %40

118:                                              ; preds = %34, %15
  %119 = load i32*, i32** %7, align 8
  %120 = icmp eq i32* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %118
  %122 = ptrtoint i32* %119 to i64
  %123 = bitcast i32** %8 to i64*
  store i64 %122, i64* %123, align 8
  %124 = bitcast i32* %119 to i8*
  call void @_ZdlPv(i8* %124) #14
  br label %125

125:                                              ; preds = %118, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret void
}

declare zeroext i1 @_ZNK2ui10AXNodeData19GetIntListAttributeEN2ax5mojom16IntListAttributeEPNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.49"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom12IntAttributeE(%"class.std::__1::set.118"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase19GetReverseRelationsEN2ax5mojom16IntListAttributeE(%"class.std::__1::set.118"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set.118", %"class.std::__1::set.118"* %0, i64 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase17GetAuthorUniqueIdEv(%"class.std::__1::basic_string.66"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.ui::AXUniqueId"* @_ZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEv(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN2ui10AXUniqueIdC1Ev(%"class.ui::AXUniqueId"* bitcast (%"class.base::NoDestructor.138"* @_ZZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id to %"class.ui::AXUniqueId"*)) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id) #15
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"class.ui::AXUniqueId"* bitcast (%"class.base::NoDestructor.138"* @_ZZNK2ui26AXPlatformNodeDelegateBase11GetUniqueIdEvE15dummy_unique_id to %"class.ui::AXUniqueId"*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2ui26AXPlatformNodeDelegateBase16FindTextBoundaryEN2ax5mojom12TextBoundaryEiNS2_13MoveDirectionENS2_12TextAffinityE(%"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone, i32, i32, i32, i32) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase17GetUIADescendantsEv(%"class.std::__1::vector.139"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::vector.139"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui26AXPlatformNodeDelegateBase11GetLanguageEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.ui::AXPlatformNodeDelegateBase"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26AXPlatformNodeDelegateBase21SubtreeToStringHelperEm(%"class.std::__1::basic_string"* noalias sret, %"class.ui::AXPlatformNodeDelegateBase"*, i64) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", align 8
  %6 = alloca %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = shl i64 %2, 1
  %12 = icmp ugt i64 %11, -17
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 24, i1 false)
  br i1 %12, label %14, label %16

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %15) #16
  unreachable

16:                                               ; preds = %3
  %17 = icmp ult i64 %11, 23
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %11, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #14
  store i8* %21, i8** %8, align 8
  %22 = or i64 %20, -9223372036854775808
  store i64 %22, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  br label %29

23:                                               ; preds = %16
  %24 = trunc i64 %11 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = icmp eq i64 %11, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23, %18
  %30 = phi i8* [ %21, %18 ], [ %27, %23 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %30, i8 43, i64 %11, i1 false) #15
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i8* [ %27, %23 ], [ %30, %29 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 %11
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase", %"class.ui::AXPlatformNodeDelegateBase"* %1, i64 0, i32 0
  %36 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)***
  %37 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)**, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*** %36, align 8, !noalias !20
  %38 = getelementptr inbounds %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %37, i64 2
  %39 = load %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)*, %"struct.ui::AXNodeData"* (%"class.ui::AXPlatformNodeDelegate"*)** %38, align 8, !noalias !20
  %40 = tail call dereferenceable(264) %"struct.ui::AXNodeData"* %39(%"class.ui::AXPlatformNodeDelegate"* %35) #15, !noalias !20
  %41 = bitcast %"struct.ui::AXNodeData"* %40 to void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)***
  %42 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)**, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*** %41, align 8, !noalias !20
  %43 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %42, i64 2
  %44 = load void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)*, void (%"class.std::__1::basic_string"*, %"struct.ui::AXNodeData"*)** %43, align 8, !noalias !20
  call void %44(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.ui::AXNodeData"* %40) #15
  %45 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %47 to i64
  %54 = select i1 %48, i8* %50, i8* %34
  %55 = select i1 %48, i64 %52, i64 %53
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %54, i64 %55) #15
  %57 = load i8, i8* %46, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %31
  %60 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %31, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 10) #15
  %62 = ptrtoint %"class.ui::AXPlatformNodeDelegateBase"* %1 to i64
  %63 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 16, i1 false)
  %64 = bitcast %"class.ui::AXPlatformNodeDelegateBase"* %1 to i32 (%"class.ui::AXPlatformNodeDelegateBase"*)***
  %65 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)**, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %65, i64 12
  %67 = load i32 (%"class.ui::AXPlatformNodeDelegateBase"*)*, i32 (%"class.ui::AXPlatformNodeDelegateBase"*)** %66, align 8
  %68 = call i32 %67(%"class.ui::AXPlatformNodeDelegateBase"* %1) #15
  %69 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %5, i64 0, i32 1
  store i32 %68, i32* %70, align 8
  %71 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %5, i64 0, i32 2
  store %"class.ui::AXPlatformNodeDelegateBase"* %1, %"class.ui::AXPlatformNodeDelegateBase"** %71, align 8
  %72 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false)
  %73 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %6, i64 0, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %6, i64 0, i32 2
  %76 = bitcast %"class.ui::AXPlatformNodeDelegateBase"** %75 to i64*
  store i64 %62, i64* %76, align 8
  %77 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase", %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %5, i64 0, i32 0
  %78 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %5 to i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)***
  %79 = call i32 @_ZNK2ui26AXPlatformNodeDelegateBase17ChildIteratorBase16GetIndexInParentEv(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nonnull %5) #15
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %61
  %82 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %6 to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)***
  %83 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %84 = add i64 %2, 1
  %85 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %90

89:                                               ; preds = %118, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #15
  ret void

90:                                               ; preds = %127, %81
  %91 = phi %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** [ %128, %127 ], [ bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseE, i64 0, inrange i32 0, i64 2) to %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)**), %81 ]
  %92 = getelementptr inbounds %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** %91, i64 8
  %93 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)** %92, align 8
  %94 = call %struct._AtkObject* %93(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* nonnull %6) #15
  %95 = call %"class.ui::AXPlatformNode"* @_ZN2ui14AXPlatformNode24FromNativeViewAccessibleEP10_AtkObject(%struct._AtkObject* %94) #15
  %96 = bitcast %"class.ui::AXPlatformNode"* %95 to %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)***
  %97 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)**, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*** %96, align 8
  %98 = getelementptr inbounds %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %97, i64 3
  %99 = load %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)*, %"class.ui::AXPlatformNodeDelegate"* (%"class.ui::AXPlatformNode"*)** %98, align 8
  %100 = call %"class.ui::AXPlatformNodeDelegate"* %99(%"class.ui::AXPlatformNode"* %95) #15
  %101 = bitcast %"class.ui::AXPlatformNodeDelegate"* %100 to %"class.ui::AXPlatformNodeDelegateBase"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #15
  %102 = bitcast %"class.ui::AXPlatformNodeDelegate"* %100 to void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)***
  %103 = load void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)**, void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)*, void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)** %103, i64 97
  %105 = load void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)*, void (%"class.std::__1::basic_string"*, %"class.ui::AXPlatformNodeDelegateBase"*, i64)** %104, align 8
  call void %105(%"class.std::__1::basic_string"* nonnull sret %7, %"class.ui::AXPlatformNodeDelegateBase"* %101, i64 %84) #15
  %106 = load i8, i8* %86, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i8*, i8** %87, align 8
  %109 = load i64, i64* %88, align 8
  %110 = zext i8 %106 to i64
  %111 = select i1 %107, i8* %108, i8* %83
  %112 = select i1 %107, i64 %109, i64 %110
  %113 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %111, i64 %112) #15
  %114 = load i8, i8* %86, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %90
  %117 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %90, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #15
  %119 = load i32, i32* %74, align 8
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %74, align 8
  %121 = load i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)**, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*** %78, align 8
  %122 = getelementptr inbounds i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)** %121, i64 9
  %123 = load i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)*, i32 (%"class.ui::AXPlatformNodeDelegate::ChildIterator"*)** %122, align 8
  %124 = call i32 %123(%"class.ui::AXPlatformNodeDelegate::ChildIterator"* nonnull %77) #15
  %125 = load i32, i32* %74, align 8
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %89, label %127

127:                                              ; preds = %118
  %128 = load %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)**, %struct._AtkObject* (%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*)*** %82, align 8
  br label %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui22AXPlatformNodeDelegate13ChildIteratorD2Ev(%"class.ui::AXPlatformNodeDelegate::ChildIterator"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui26AXPlatformNodeDelegateBase17ChildIteratorBaseD0Ev(%"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.ui::AXPlatformNodeDelegateBase::ChildIteratorBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare void @_ZN2ui10AXNodeDataC1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #6

declare void @_ZN2ui10AXTreeDataC1Ev(%"struct.ui::AXTreeData"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.66"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #2 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.66"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #16
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.66"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.66"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #16
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !23
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !23
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !26, !noalias !23
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !26, !noalias !23
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !23
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !23
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !26, !noalias !23
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !26, !noalias !23
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !23
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !23
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !26, !noalias !23
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !26, !noalias !23
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !23
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !23
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !26, !noalias !23
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !26, !noalias !23
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !28

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !23
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !23
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !26, !noalias !23
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !26, !noalias !23
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !29

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !30

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !31

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !32

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !33

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !34

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !36
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !36
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !39, !noalias !36
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !39, !noalias !36
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !36
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !36
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !39, !noalias !36
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !39, !noalias !36
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !36
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !36
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !39, !noalias !36
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !39, !noalias !36
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !36
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !36
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !39, !noalias !36
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !39, !noalias !36
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !41

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !36
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !36
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !39, !noalias !36
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !39, !noalias !36
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !42

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !43

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !44

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.66"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZN2ui14AXNodePositionC1Ev(%"class.ui::AXNodePosition"*) unnamed_addr #6

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() local_unnamed_addr #6

declare void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) unnamed_addr #6

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE7IsValidEv(%"class.ui::AXPosition"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %55 [
    i32 0, label %4
    i32 1, label %24
    i32 2, label %43
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 2
  %6 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #15
  %7 = tail call zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"* %5, %"class.ui::AXTreeID"* dereferenceable(32) %6) #15
  br i1 %7, label %8, label %56

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %56

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -2
  br i1 %15, label %16, label %56

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %56

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br label %56

24:                                               ; preds = %1
  %25 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %26 = icmp eq %"class.ui::AXNode"* %25, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %56, label %31

31:                                               ; preds = %27
  %32 = icmp sgt i32 %29, -1
  br i1 %32, label %33, label %56

33:                                               ; preds = %31
  %34 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %35 = icmp eq %"class.ui::AXNode"* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %38 = tail call i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"* %37) #15
  %39 = trunc i64 %38 to i32
  br label %40

40:                                               ; preds = %33, %36
  %41 = phi i32 [ %39, %36 ], [ 0, %33 ]
  %42 = icmp sle i32 %29, %41
  br label %56

43:                                               ; preds = %1
  %44 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %45 = icmp eq %"class.ui::AXNode"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 5
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = icmp sgt i32 %48, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = tail call i32 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE13MaxTextOffsetEv(%"class.ui::AXPosition"* %0)
  %54 = icmp sle i32 %48, %53
  br label %56

55:                                               ; preds = %1
  unreachable

56:                                               ; preds = %46, %52, %50, %43, %31, %40, %27, %24, %4, %8, %12, %16, %20
  %57 = phi i1 [ false, %16 ], [ false, %12 ], [ false, %8 ], [ false, %4 ], [ %23, %20 ], [ false, %24 ], [ true, %27 ], [ false, %31 ], [ %42, %40 ], [ false, %43 ], [ true, %46 ], [ false, %50 ], [ %54, %52 ]
  ret i1 %57
}

declare zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.ui::AXTreeID", align 8
  %3 = alloca %"class.ui::AXTreeID", align 8
  %4 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 2
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #15
  %6 = tail call zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"* %4, %"class.ui::AXTreeID"* dereferenceable(32) %5) #15
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = tail call dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() #15
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %2, %"class.ui::AXTreeID"* dereferenceable(32) %4) #15
  %13 = call %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"* %12, %"class.ui::AXTreeID"* nonnull %2) #15
  %14 = icmp eq %"class.ui::AXTreeManager"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %3, %"class.ui::AXTreeID"* dereferenceable(32) %4) #15
  %16 = load i32, i32* %8, align 8
  %17 = bitcast %"class.ui::AXTreeManager"* %13 to %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)***
  %18 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)**, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)*** %17, align 8
  %19 = load %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)*, %"class.ui::AXNode"* (%"class.ui::AXTreeManager"*, %"class.ui::AXTreeID"*, i32)** %18, align 8
  %20 = call %"class.ui::AXNode"* %19(%"class.ui::AXTreeManager"* nonnull %13, %"class.ui::AXTreeID"* nonnull %3, i32 %16) #15
  br label %21

21:                                               ; preds = %15, %11, %1, %7
  %22 = phi %"class.ui::AXNode"* [ null, %7 ], [ null, %1 ], [ %20, %15 ], [ null, %11 ]
  ret %"class.ui::AXNode"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE13MaxTextOffsetEv(%"class.ui::AXPosition"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string.66", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string.66", align 8
  %5 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %10 = icmp eq %"class.ui::AXNode"* %9, null
  br i1 %10, label %67, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE32IsEmptyObjectReplacedByCharacterEv(%"class.ui::AXPosition"* %0)
  br i1 %12, label %67, label %13

13:                                               ; preds = %11
  %14 = load i32, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %50

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::basic_string.66"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #15
  %19 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  call void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.ui::AXNode"* %19) #15
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %18
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i64 %28, i64 %29
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.66"* nonnull sret %2, i8* %26, i64 %30) #15
  %31 = bitcast %"class.std::__1::basic_string.66"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %16
  %36 = zext i8 %33 to i32
  br label %43

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = bitcast %"class.std::__1::basic_string.66"* %2 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %35, %37
  %44 = phi i32 [ %36, %35 ], [ %40, %37 ]
  %45 = load i8, i8* %21, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  br label %67

50:                                               ; preds = %13
  %51 = bitcast %"class.std::__1::basic_string.66"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  %52 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  call void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string.66"* nonnull sret %4, %"class.ui::AXNode"* %52) #15
  %53 = bitcast %"class.std::__1::basic_string.66"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %50
  %58 = zext i8 %55 to i32
  br label %65

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.std::__1::basic_string.66", %"class.std::__1::basic_string.66"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = bitcast %"class.std::__1::basic_string.66"* %4 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %57, %59
  %66 = phi i32 [ %58, %57 ], [ %62, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  br label %67

67:                                               ; preds = %1, %11, %8, %65, %49
  %68 = phi i32 [ %44, %49 ], [ %66, %65 ], [ -1, %8 ], [ 1, %11 ], [ -1, %1 ]
  ret i32 %68
}

declare dereferenceable(40) %"class.ui::AXTreeManagerMap"* @_ZN2ui16AXTreeManagerMap11GetInstanceEv() local_unnamed_addr #6

declare %"class.ui::AXTreeManager"* @_ZN2ui16AXTreeManagerMap10GetManagerENS_8AXTreeIDE(%"class.ui::AXTreeManagerMap"*, %"class.ui::AXTreeID"*) local_unnamed_addr #6

declare i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE32IsEmptyObjectReplacedByCharacterEv(%"class.ui::AXPosition"*) local_unnamed_addr #2 comdat align 2 {
  %2 = load i32, i32* @_ZN2ui29g_ax_embedded_object_behaviorE, align 4
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %94, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ui::AXPosition", %"class.ui::AXPosition"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %94, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %10 = icmp eq %"class.ui::AXNode"* %9, null
  br i1 %10, label %94, label %11

11:                                               ; preds = %8
  %12 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %13 = tail call zeroext i1 @_ZNK2ui6AXNode30IsCollapsedMenuListPopUpButtonEv(%"class.ui::AXNode"* %12) #15
  br i1 %13, label %94, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %16 = icmp eq %"class.ui::AXNode"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  %18 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %19 = tail call i64 @_ZNK2ui6AXNode42GetUnignoredChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"* %18) #15
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %24 = tail call zeroext i1 @_ZNK2ui6AXNode11IsEmptyLeafEv(%"class.ui::AXNode"* %23) #15
  br i1 %24, label %25, label %94

25:                                               ; preds = %14, %17, %22
  %26 = load i32, i32* %5, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %55, label %28

28:                                               ; preds = %25
  %29 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %30 = icmp eq %"class.ui::AXNode"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %33 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %32, i64 0, i32 7, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 81
  br i1 %35, label %47, label %36

36:                                               ; preds = %28, %31
  %37 = load i32, i32* %5, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %36
  %40 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %41 = icmp eq %"class.ui::AXNode"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %44 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %43, i64 0, i32 7, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 137
  br i1 %46, label %47, label %55

47:                                               ; preds = %42, %31
  %48 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %49 = icmp eq %"class.ui::AXNode"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %52 = tail call i64 @_ZNK2ui6AXNode33GetChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"* %51) #15
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %94, label %55

55:                                               ; preds = %25, %47, %36, %39, %50, %42
  %56 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0)
  %57 = tail call zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"* %56) #15
  br i1 %57, label %94, label %58

58:                                               ; preds = %55
  %59 = load i32, i32* %5, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %58
  %62 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %63 = icmp eq %"class.ui::AXNode"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %66 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %65, i64 0, i32 7, i32 2
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %58, %61, %64
  %69 = phi i32 [ %67, %64 ], [ 182, %61 ], [ 182, %58 ]
  %70 = tail call zeroext i1 @_ZN2ui18IsPlatformDocumentEN2ax5mojom4RoleE(i32 %69) #15
  br i1 %70, label %94, label %71

71:                                               ; preds = %68
  %72 = load i32, i32* %5, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %90, label %74

74:                                               ; preds = %71
  %75 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %76 = icmp eq %"class.ui::AXNode"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %79 = tail call zeroext i1 @_ZNK2ui6AXNode6IsTextEv(%"class.ui::AXNode"* %78) #15
  br i1 %79, label %94, label %80

80:                                               ; preds = %74, %77
  %81 = load i32, i32* %5, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %80
  %84 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %85 = icmp eq %"class.ui::AXNode"* %84, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = tail call %"class.ui::AXNode"* @_ZNK2ui10AXPositionINS_14AXNodePositionENS_6AXNodeEE9GetAnchorEv(%"class.ui::AXPosition"* %0) #15
  %88 = getelementptr inbounds %"class.ui::AXNode", %"class.ui::AXNode"* %87, i64 0, i32 7, i32 2
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %71, %80, %83, %86
  %91 = phi i32 [ %89, %86 ], [ 182, %83 ], [ 182, %80 ], [ 182, %71 ]
  %92 = tail call zeroext i1 @_ZN2ui8IsIframeEN2ax5mojom4RoleE(i32 %91) #15
  %93 = xor i1 %92, true
  br label %94

94:                                               ; preds = %4, %55, %68, %77, %90, %50, %22, %11, %1, %8
  %95 = phi i1 [ false, %8 ], [ false, %1 ], [ true, %11 ], [ false, %22 ], [ false, %50 ], [ false, %77 ], [ false, %68 ], [ false, %55 ], [ %93, %90 ], [ false, %4 ]
  ret i1 %95
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.66"* sret, i8*, i64) local_unnamed_addr #6

declare void @_ZNK2ui6AXNode12GetInnerTextEv(%"class.std::__1::basic_string"* sret, %"class.ui::AXNode"*) local_unnamed_addr #6

declare void @_ZNK2ui6AXNode12GetHypertextEv(%"class.std::__1::basic_string.66"* sret, %"class.ui::AXNode"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2ui6AXNode30IsCollapsedMenuListPopUpButtonEv(%"class.ui::AXNode"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2ui6AXNode11IsEmptyLeafEv(%"class.ui::AXNode"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2ui6AXNode9IsIgnoredEv(%"class.ui::AXNode"*) local_unnamed_addr #6

declare zeroext i1 @_ZN2ui18IsPlatformDocumentEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

declare zeroext i1 @_ZN2ui8IsIframeEN2ax5mojom4RoleE(i32) local_unnamed_addr #6

declare i64 @_ZNK2ui6AXNode42GetUnignoredChildCountCrossingTreeBoundaryEv(%"class.ui::AXNode"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2ui6AXNode6IsTextEv(%"class.ui::AXNode"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !45
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !45
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !45
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE6assignIPS8_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_(%"class.std::__1::vector.41"*, %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair.43"* %2 to i64
  %5 = ptrtoint %"struct.std::__1::pair.43"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair.43"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.41"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.43"*
  br i1 %15, label %105, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.43"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair.43"* %24, %"struct.std::__1::pair.43"* %2
  %26 = icmp eq %"struct.std::__1::pair.43"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.std::__1::pair.43"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.std::__1::pair.43"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(48) %"struct.std::__1::pair.43"* @_ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EaSERKS7_(%"struct.std::__1::pair.43"* %28, %"struct.std::__1::pair.43"* dereferenceable(48) %29) #15
  %31 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %29, i64 1
  %32 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %28, i64 1
  %33 = icmp eq %"struct.std::__1::pair.43"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.std::__1::pair.43"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %80

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.std::__1::pair.43"* %25, %2
  br i1 %38, label %78, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.std::__1::pair.43"*
  br label %41

41:                                               ; preds = %72, %39
  %42 = phi %"struct.std::__1::pair.43"* [ %74, %72 ], [ %40, %39 ]
  %43 = phi %"struct.std::__1::pair.43"* [ %73, %72 ], [ %24, %39 ]
  %44 = bitcast %"struct.std::__1::pair.43"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"struct.std::__1::pair.43"* %42 to i8*
  %50 = bitcast %"struct.std::__1::pair.43"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #15
  br label %57

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %42, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %52, i8* %54, i64 %56) #15
  br label %57

57:                                               ; preds = %51, %48
  %58 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %42, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %43, i64 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #15
  br label %72

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %58, i8* %69, i64 %71) #15
  br label %72

72:                                               ; preds = %67, %64
  %73 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %43, i64 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %42, i64 1
  %75 = icmp eq %"struct.std::__1::pair.43"* %73, %2
  br i1 %75, label %76, label %41

76:                                               ; preds = %72
  %77 = ptrtoint %"struct.std::__1::pair.43"* %74 to i64
  br label %78

78:                                               ; preds = %36, %76
  %79 = phi i64 [ %37, %36 ], [ %77, %76 ]
  store i64 %79, i64* %19, align 8
  br label %202

80:                                               ; preds = %34
  %81 = load %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"** %18, align 8
  %82 = icmp eq %"struct.std::__1::pair.43"* %81, %35
  br i1 %82, label %104, label %83

83:                                               ; preds = %80, %102
  %84 = phi %"struct.std::__1::pair.43"* [ %85, %102 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %84, i64 -1
  %86 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %84, i64 -1, i32 1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %91, %83
  %95 = bitcast %"struct.std::__1::pair.43"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %99, %94
  %103 = icmp eq %"struct.std::__1::pair.43"* %85, %35
  br i1 %103, label %104, label %83

104:                                              ; preds = %102, %80
  store %"struct.std::__1::pair.43"* %35, %"struct.std::__1::pair.43"** %18, align 8
  br label %202

105:                                              ; preds = %3
  %106 = icmp eq i64 %12, 0
  br i1 %106, label %139, label %107

107:                                              ; preds = %105
  %108 = inttoptr i64 %12 to i8*
  %109 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %110 = load %"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"** %109, align 8
  %111 = icmp eq %"struct.std::__1::pair.43"* %110, %16
  br i1 %111, label %136, label %112

112:                                              ; preds = %107, %131
  %113 = phi %"struct.std::__1::pair.43"* [ %114, %131 ], [ %110, %107 ]
  %114 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %113, i64 -1
  %115 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %113, i64 -1, i32 1
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %120, %112
  %124 = bitcast %"struct.std::__1::pair.43"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZdlPv(i8* %130) #14
  br label %131

131:                                              ; preds = %128, %123
  %132 = icmp eq %"struct.std::__1::pair.43"* %114, %16
  br i1 %132, label %133, label %112

133:                                              ; preds = %131
  %134 = bitcast %"class.std::__1::vector.41"* %0 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %133, %107
  %137 = phi i8* [ %135, %133 ], [ %108, %107 ]
  store %"struct.std::__1::pair.43"* %16, %"struct.std::__1::pair.43"** %109, align 8
  tail call void @_ZdlPv(i8* %137) #14
  %138 = bitcast %"class.std::__1::vector.41"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 24, i1 false) #15
  br label %139

139:                                              ; preds = %105, %136
  %140 = phi i64 [ %10, %105 ], [ 0, %136 ]
  %141 = icmp ugt i64 %7, 384307168202282325
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #16
  unreachable

144:                                              ; preds = %139
  %145 = sdiv exact i64 %140, 48
  %146 = icmp ult i64 %145, 192153584101141162
  br i1 %146, label %147, label %151

147:                                              ; preds = %144
  %148 = shl nsw i64 %145, 1
  %149 = icmp ult i64 %148, %7
  %150 = select i1 %149, i64 %7, i64 %148
  br label %151

151:                                              ; preds = %147, %144
  %152 = phi i64 [ %150, %147 ], [ 384307168202282325, %144 ]
  %153 = mul i64 %152, 48
  %154 = tail call i8* @_Znwm(i64 %153) #14
  %155 = bitcast i8* %154 to %"struct.std::__1::pair.43"*
  %156 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %157 = bitcast %"struct.std::__1::pair.43"** %156 to i8**
  store i8* %154, i8** %157, align 8
  %158 = bitcast %"class.std::__1::vector.41"* %0 to i8**
  store i8* %154, i8** %158, align 8
  %159 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %155, i64 %152
  store %"struct.std::__1::pair.43"* %159, %"struct.std::__1::pair.43"** %8, align 8
  %160 = bitcast %"struct.std::__1::pair.43"** %156 to i64*
  %161 = ptrtoint i8* %154 to i64
  %162 = icmp eq %"struct.std::__1::pair.43"* %1, %2
  br i1 %162, label %200, label %163

163:                                              ; preds = %151, %194
  %164 = phi %"struct.std::__1::pair.43"* [ %196, %194 ], [ %155, %151 ]
  %165 = phi %"struct.std::__1::pair.43"* [ %195, %194 ], [ %1, %151 ]
  %166 = bitcast %"struct.std::__1::pair.43"* %165 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %163
  %171 = bitcast %"struct.std::__1::pair.43"* %164 to i8*
  %172 = bitcast %"struct.std::__1::pair.43"* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 24, i1 false) #15
  br label %179

173:                                              ; preds = %163
  %174 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %164, i64 0, i32 0
  %175 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %174, i8* %176, i64 %178) #15
  br label %179

179:                                              ; preds = %173, %170
  %180 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %164, i64 0, i32 1
  %181 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %165, i64 0, i32 1
  %182 = bitcast %"class.std::__1::basic_string"* %181 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %189, label %186

186:                                              ; preds = %179
  %187 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %188 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 24, i1 false) #15
  br label %194

189:                                              ; preds = %179
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %165, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %193 = load i64, i64* %192, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %180, i8* %191, i64 %193) #15
  br label %194

194:                                              ; preds = %189, %186
  %195 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %165, i64 1
  %196 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %164, i64 1
  %197 = icmp eq %"struct.std::__1::pair.43"* %195, %2
  br i1 %197, label %198, label %163

198:                                              ; preds = %194
  %199 = ptrtoint %"struct.std::__1::pair.43"* %196 to i64
  br label %200

200:                                              ; preds = %151, %198
  %201 = phi i64 [ %161, %151 ], [ %199, %198 ]
  store i64 %201, i64* %160, align 8
  br label %202

202:                                              ; preds = %78, %104, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"struct.std::__1::pair.43"* @_ZNSt3__14pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EaSERKS7_(%"struct.std::__1::pair.43"*, %"struct.std::__1::pair.43"* dereferenceable(48)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %0, i64 0, i32 0
  %4 = icmp eq %"struct.std::__1::pair.43"* %0, %1
  br i1 %4, label %65, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.std::__1::pair.43"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"struct.std::__1::pair.43"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"struct.std::__1::pair.43"* %0 to i8*
  %17 = bitcast %"struct.std::__1::pair.43"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #15
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #15
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::pair.43"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #15
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %0, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #15
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %36, i8* %51, i64 %53) #15
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.43", %"struct.std::__1::pair.43"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %36, i8* %62, i64 %63) #15
  br label %65

65:                                               ; preds = %2, %46, %49, %55
  ret %"struct.std::__1::pair.43"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare void @_ZN2ui10AXUniqueIdC1Ev(%"class.ui::AXUniqueId"*) unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_EENS7_ISA_EEEEEENS_19__map_value_compareIiSD_NS_4lessIiEELb1EEENS7_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSO_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS7_ISV_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIiNS_6vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES9_EENS7_ISA_EEEEEENS_19__map_value_compareIiSD_NS_4lessIiEELb1EEENS7_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSO_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINS7_ISV_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeIPN2ui14AXPlatformNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeIPN2ui14AXPlatformNodeENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN2ui22AXPlatformNodeDelegate8ToStringEv: argument 0"}
!22 = distinct !{!22, !"_ZN2ui22AXPlatformNodeDelegate8ToStringEv"}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = distinct !{!32, !9}
!33 = distinct !{!33, !11}
!34 = distinct !{!34, !35, !9}
!35 = !{!"llvm.loop.unroll.runtime.disable"}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !11}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{i8 0, i8 2}
