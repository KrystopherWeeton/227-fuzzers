; ModuleID = '../../cc/layers/layer_list_iterator.cc'
source_filename = "../../cc/layers/layer_list_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::LayerListIterator" = type { i32 (...)**, %"class.cc::Layer"*, %"class.std::__1::vector.67" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { i64*, i64*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.41" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr = type { %"class.cc::Layer"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.26", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.32" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.21" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.14", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.13, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.13 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::unique_ptr.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr.34"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.50", %"class.std::__1::vector.50", %"class.std::__1::vector.57" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i8**, i8**, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8** }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.59" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.cc::LayerListReverseIterator" = type { %"class.cc::LayerListIterator" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@_ZTVN2cc17LayerListIteratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorD2Ev to i8*), i8* bitcast (void (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorD0Ev to i8*), i8* bitcast (%"class.cc::LayerListIterator"* (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorppEv to i8*)] }, align 8
@_ZTVN2cc24LayerListReverseIteratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorD2Ev to i8*), i8* bitcast (void (%"class.cc::LayerListReverseIterator"*)* @_ZN2cc24LayerListReverseIteratorD0Ev to i8*), i8* bitcast (%"class.cc::LayerListIterator"* (%"class.cc::LayerListReverseIterator"*)* @_ZN2cc24LayerListReverseIteratorppEv to i8*)] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"../../cc/layers/layer_list_iterator.cc\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"current_layer_->parent()\00", align 1

@_ZN2cc17LayerListIteratorC1EPNS_5LayerE = hidden unnamed_addr alias void (%"class.cc::LayerListIterator"*, %"class.cc::Layer"*), void (%"class.cc::LayerListIterator"*, %"class.cc::Layer"*)* @_ZN2cc17LayerListIteratorC2EPNS_5LayerE
@_ZN2cc17LayerListIteratorC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::LayerListIterator"*, %"class.cc::LayerListIterator"*), void (%"class.cc::LayerListIterator"*, %"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorC2ERKS0_
@_ZN2cc17LayerListIteratorD1Ev = hidden unnamed_addr alias void (%"class.cc::LayerListIterator"*), void (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorD2Ev
@_ZN2cc24LayerListReverseIteratorC1EPNS_5LayerE = hidden unnamed_addr alias void (%"class.cc::LayerListReverseIterator"*, %"class.cc::Layer"*), void (%"class.cc::LayerListReverseIterator"*, %"class.cc::Layer"*)* @_ZN2cc24LayerListReverseIteratorC2EPNS_5LayerE
@_ZN2cc24LayerListReverseIteratorD2Ev = hidden unnamed_addr alias void (%"class.cc::LayerListReverseIterator"*), bitcast (void (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorD2Ev to void (%"class.cc::LayerListReverseIterator"*)*)
@_ZN2cc24LayerListReverseIteratorD1Ev = hidden unnamed_addr alias void (%"class.cc::LayerListReverseIterator"*), bitcast (void (%"class.cc::LayerListIterator"*)* @_ZN2cc17LayerListIteratorD2Ev to void (%"class.cc::LayerListReverseIterator"*)*)

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerListIteratorC2EPNS_5LayerE(%"class.cc::LayerListIterator"*, %"class.cc::Layer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc17LayerListIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 1
  store %"class.cc::Layer"* %1, %"class.cc::Layer"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.67"* %5 to i64*
  %10 = bitcast i64** %6 to i64*
  %11 = tail call i8* @_Znwm(i64 8) #8
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = ptrtoint i8* %13 to i64
  store i64 0, i64* %12, align 8
  %15 = ptrtoint i8* %11 to i64
  store i64 %15, i64* %9, align 8
  store i64 %14, i64* %8, align 8
  store i64 %14, i64* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerListIteratorC2ERKS0_(%"class.cc::LayerListIterator"*, %"class.cc::LayerListIterator"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc17LayerListIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %1, i64 0, i32 1
  %6 = bitcast %"class.cc::Layer"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.cc::Layer"** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector.67"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i64** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.67"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %47, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %18, 2305843009213693951
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.67"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #10
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #8
  %26 = bitcast i8* %25 to i64*
  %27 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = bitcast i64** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector.67"* %9 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds i64, i64* %26, i64 %18
  %31 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64* %30, i64** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %10, i64 0, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = load i64, i64* %13, align 8
  %35 = bitcast i64** %27 to i64*
  %36 = ptrtoint i8* %25 to i64
  %37 = ptrtoint i64* %33 to i64
  %38 = sub i64 %34, %37
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %24
  %41 = lshr exact i64 %38, 3
  %42 = bitcast i64* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %42, i64 %38, i1 false) #9
  %43 = getelementptr inbounds i64, i64* %26, i64 %41
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %40, %24
  %46 = phi i64 [ %44, %40 ], [ %36, %24 ]
  store i64 %46, i64* %35, align 8
  br label %47

47:                                               ; preds = %2, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerListIteratorD2Ev(%"class.cc::LayerListIterator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc17LayerListIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17LayerListIteratorD0Ev(%"class.cc::LayerListIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc17LayerListIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.cc::LayerListIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"* returned) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 1
  %3 = load %"class.cc::Layer"*, %"class.cc::Layer"** %2, align 8
  %4 = icmp eq %"class.cc::Layer"* %3, null
  br i1 %4, label %119, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %3, i64 0, i32 5, i32 0, i32 0, i32 1
  %9 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %10 = icmp eq %class.scoped_refptr* %7, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %3, i64 0, i32 3
  %13 = load %"class.cc::Layer"*, %"class.cc::Layer"** %12, align 8
  %14 = icmp eq %"class.cc::Layer"* %13, null
  br i1 %14, label %118, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = load i64*, i64** %16, align 8
  br label %89

18:                                               ; preds = %5
  %19 = bitcast %class.scoped_refptr* %7 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.cc::Layer"** %2 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = icmp ult i64* %24, %26
  %28 = ptrtoint i64* %26 to i64
  br i1 %27, label %29, label %33

29:                                               ; preds = %18
  store i64 0, i64* %24, align 8
  %30 = getelementptr inbounds i64, i64* %24, i64 1
  %31 = ptrtoint i64* %30 to i64
  %32 = bitcast i64** %23 to i64*
  store i64 %31, i64* %32, align 8
  br label %119

33:                                               ; preds = %18
  %34 = ptrtoint i64* %24 to i64
  %35 = bitcast i64** %23 to i64*
  %36 = bitcast %"class.std::__1::vector.67"* %22 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 2305843009213693951
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::vector.67"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #10
  unreachable

44:                                               ; preds = %33
  %45 = bitcast i64** %25 to i64*
  %46 = sub i64 %28, %37
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 1152921504606846975
  br i1 %48, label %49, label %57

49:                                               ; preds = %44
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %40
  %52 = select i1 %51, i64 %40, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @abort() #10
  unreachable

57:                                               ; preds = %54, %44
  %58 = phi i64 [ %52, %54 ], [ 2305843009213693951, %44 ]
  %59 = shl i64 %58, 3
  %60 = tail call i8* @_Znwm(i64 %59) #8
  %61 = bitcast i8* %60 to i64*
  br label %62

62:                                               ; preds = %57, %49
  %63 = phi i64 [ %58, %57 ], [ 0, %49 ]
  %64 = phi i64* [ %61, %57 ], [ null, %49 ]
  %65 = getelementptr inbounds i64, i64* %64, i64 %39
  %66 = getelementptr inbounds i64, i64* %64, i64 %63
  %67 = ptrtoint i64* %66 to i64
  store i64 0, i64* %65, align 8
  %68 = getelementptr inbounds i64, i64* %65, i64 1
  %69 = ptrtoint i64* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %22, i64 0, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %35, align 8
  %73 = ptrtoint i64* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds i64, i64* %65, i64 %76
  %78 = ptrtoint i64* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %62
  %81 = bitcast i64* %77 to i8*
  %82 = bitcast i64* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #9
  %83 = load i64*, i64** %70, align 8
  br label %84

84:                                               ; preds = %80, %62
  %85 = phi i64* [ %71, %62 ], [ %83, %80 ]
  store i64 %78, i64* %36, align 8
  store i64 %69, i64* %35, align 8
  store i64 %67, i64* %45, align 8
  %86 = icmp eq i64* %85, null
  br i1 %86, label %119, label %87

87:                                               ; preds = %84
  %88 = bitcast i64* %85 to i8*
  tail call void @_ZdlPv(i8* %88) #8
  br label %119

89:                                               ; preds = %15, %114
  %90 = phi i64* [ %17, %15 ], [ %92, %114 ]
  %91 = phi %"class.cc::Layer"* [ %13, %15 ], [ %116, %114 ]
  %92 = getelementptr inbounds i64, i64* %90, i64 -1
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  %95 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %91, i64 0, i32 5, i32 0
  %96 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %91, i64 0, i32 5, i32 0, i32 0, i32 1
  %97 = bitcast %class.scoped_refptr** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector"* %95 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %98, %100
  %102 = ashr exact i64 %101, 3
  %103 = icmp ult i64 %94, %102
  br i1 %103, label %104, label %114

104:                                              ; preds = %89
  store i64 %94, i64* %92, align 8
  %105 = load i64*, i64** %16, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 -1
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %95, i64 0, i32 0, i32 0
  %109 = load %class.scoped_refptr*, %class.scoped_refptr** %108, align 8
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %109, i64 %107, i32 0
  %111 = bitcast %"class.cc::Layer"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.cc::Layer"** %2 to i64*
  store i64 %112, i64* %113, align 8
  br label %119

114:                                              ; preds = %89
  store i64* %92, i64** %16, align 8
  %115 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %91, i64 0, i32 3
  %116 = load %"class.cc::Layer"*, %"class.cc::Layer"** %115, align 8
  %117 = icmp eq %"class.cc::Layer"* %116, null
  br i1 %117, label %118, label %89

118:                                              ; preds = %114, %11
  store %"class.cc::Layer"* null, %"class.cc::Layer"** %2, align 8
  br label %119

119:                                              ; preds = %87, %84, %29, %104, %1, %118
  ret %"class.cc::LayerListIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24LayerListReverseIteratorC2EPNS_5LayerE(%"class.cc::LayerListReverseIterator"*, %"class.cc::Layer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 1
  store %"class.cc::Layer"* %1, %"class.cc::Layer"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.67"* %5 to i64*
  %10 = bitcast i64** %6 to i64*
  %11 = tail call i8* @_Znwm(i64 8) #8
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = ptrtoint i8* %13 to i64
  store i64 0, i64* %12, align 8
  %15 = ptrtoint i8* %11 to i64
  store i64 %15, i64* %9, align 8
  store i64 %14, i64* %8, align 8
  store i64 %14, i64* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc24LayerListReverseIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN2cc24LayerListReverseIterator27DescendToRightmostInSubtreeEv(%"class.cc::LayerListReverseIterator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24LayerListReverseIterator27DescendToRightmostInSubtreeEv(%"class.cc::LayerListReverseIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.cc::Layer"*, %"class.cc::Layer"** %2, align 8
  %4 = icmp eq %"class.cc::Layer"* %3, null
  br i1 %4, label %92, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::Layer"** %2 to i64*
  %7 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i64** %8 to i64*
  %11 = bitcast %"class.std::__1::vector.67"* %7 to i64*
  %12 = bitcast i64** %9 to i64*
  %13 = getelementptr inbounds %"class.std::__1::vector.67", %"class.std::__1::vector.67"* %7, i64 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %5, %89
  %15 = phi %"class.cc::Layer"* [ %3, %5 ], [ %90, %89 ]
  %16 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %18 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %15, i64 0, i32 5, i32 0, i32 0, i32 1
  %19 = load %class.scoped_refptr*, %class.scoped_refptr** %18, align 8
  %20 = icmp eq %class.scoped_refptr* %17, %19
  br i1 %20, label %92, label %21

21:                                               ; preds = %14
  %22 = ptrtoint %class.scoped_refptr* %17 to i64
  %23 = ptrtoint %class.scoped_refptr* %19 to i64
  %24 = sub i64 %23, %22
  %25 = ashr exact i64 %24, 3
  %26 = add nsw i64 %25, -1
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 %26, i32 0
  %28 = bitcast %"class.cc::Layer"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %6, align 8
  %30 = load i64*, i64** %8, align 8
  %31 = load i64*, i64** %9, align 8
  %32 = icmp eq i64* %30, %31
  %33 = ptrtoint i64* %31 to i64
  br i1 %32, label %37, label %34

34:                                               ; preds = %21
  store i64 %26, i64* %30, align 8
  %35 = getelementptr inbounds i64, i64* %30, i64 1
  %36 = ptrtoint i64* %35 to i64
  store i64 %36, i64* %10, align 8
  br label %89

37:                                               ; preds = %21
  %38 = ptrtoint i64* %30 to i64
  %39 = load i64, i64* %11, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 2305843009213693951
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector.67"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #10
  unreachable

46:                                               ; preds = %37
  %47 = sub i64 %33, %39
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %48, 1152921504606846975
  br i1 %49, label %50, label %58

50:                                               ; preds = %46
  %51 = ashr exact i64 %47, 2
  %52 = icmp ult i64 %51, %42
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #10
  unreachable

58:                                               ; preds = %55, %46
  %59 = phi i64 [ %53, %55 ], [ 2305843009213693951, %46 ]
  %60 = shl i64 %59, 3
  %61 = tail call i8* @_Znwm(i64 %60) #8
  %62 = bitcast i8* %61 to i64*
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi i64* [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds i64, i64* %65, i64 %41
  %67 = getelementptr inbounds i64, i64* %65, i64 %64
  %68 = ptrtoint i64* %67 to i64
  store i64 %26, i64* %66, align 8
  %69 = getelementptr inbounds i64, i64* %66, i64 1
  %70 = ptrtoint i64* %69 to i64
  %71 = load i64*, i64** %13, align 8
  %72 = load i64, i64* %10, align 8
  %73 = ptrtoint i64* %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds i64, i64* %66, i64 %76
  %78 = ptrtoint i64* %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %63
  %81 = bitcast i64* %77 to i8*
  %82 = bitcast i64* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #9
  %83 = load i64*, i64** %13, align 8
  br label %84

84:                                               ; preds = %80, %63
  %85 = phi i64* [ %71, %63 ], [ %83, %80 ]
  store i64 %78, i64* %11, align 8
  store i64 %70, i64* %10, align 8
  store i64 %68, i64* %12, align 8
  %86 = icmp eq i64* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast i64* %85 to i8*
  tail call void @_ZdlPv(i8* %88) #8
  br label %89

89:                                               ; preds = %34, %84, %87
  %90 = load %"class.cc::Layer"*, %"class.cc::Layer"** %2, align 8
  %91 = icmp eq %"class.cc::Layer"* %90, null
  br i1 %91, label %92, label %14

92:                                               ; preds = %14, %89, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24LayerListReverseIteratorD0Ev(%"class.cc::LayerListReverseIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc17LayerListIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.cc::LayerListReverseIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc24LayerListReverseIteratorppEv(%"class.cc::LayerListReverseIterator"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.cc::Layer"*, %"class.cc::Layer"** %4, align 8
  %6 = icmp eq %"class.cc::Layer"* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.cc::LayerListReverseIterator", %"class.cc::LayerListReverseIterator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 -1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %7
  store i64* %10, i64** %8, align 8
  %14 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %5, i64 0, i32 3
  %15 = bitcast %"class.cc::Layer"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.cc::Layer"** %4 to i64*
  store i64 %16, i64* %17, align 8
  br label %45

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %5, i64 0, i32 3
  %20 = load %"class.cc::Layer"*, %"class.cc::Layer"** %19, align 8
  %21 = icmp eq %"class.cc::Layer"* %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %25 = load i64*, i64** %8, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 -1
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %18, %22
  %29 = phi i64 [ %11, %18 ], [ %27, %22 ]
  %30 = phi i64* [ %9, %18 ], [ %25, %22 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 -1
  %32 = add i64 %29, -1
  store i64 %32, i64* %31, align 8
  %33 = load %"class.cc::Layer"*, %"class.cc::Layer"** %4, align 8
  %34 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %33, i64 0, i32 3
  %35 = load %"class.cc::Layer"*, %"class.cc::Layer"** %34, align 8
  %36 = load i64*, i64** %8, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 -1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.cc::Layer", %"class.cc::Layer"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  %40 = load %class.scoped_refptr*, %class.scoped_refptr** %39, align 8
  %41 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %40, i64 %38, i32 0
  %42 = bitcast %"class.cc::Layer"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.cc::Layer"** %4 to i64*
  store i64 %43, i64* %44, align 8
  call void @_ZN2cc24LayerListReverseIterator27DescendToRightmostInSubtreeEv(%"class.cc::LayerListReverseIterator"* %0)
  br label %45

45:                                               ; preds = %1, %28, %13
  ret %"class.cc::LayerListIterator"* %3
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
