; ModuleID = '../../content/public/common/drop_data.cc'
source_filename = "../../content/public/common/drop_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::DropData::Metadata" = type { i32, %"class.std::__1::basic_string", %"class.base::FilePath", %class.GURL }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.1" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"struct.content::DropData" = type { i32, i8, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::vector", %"class.std::__1::vector.18", %"class.std::__1::basic_string", %"class.std::__1::vector.25", %"class.absl::optional", %"class.absl::optional", %class.GURL, %"class.std::__1::basic_string.1", %class.GURL, %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::unordered_map" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::FileInfo"*, %"struct.ui::FileInfo"*, %"class.std::__1::__compressed_pair.13" }
%"struct.ui::FileInfo" = type { %"class.base::FilePath", %"class.base::FilePath" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.ui::FileInfo"* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"*, %"class.std::__1::__compressed_pair.27" }
%"struct.content::DropData::FileSystemFileInfo" = type { %class.GURL, i64, %"class.std::__1::basic_string.1" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.content::DropData::FileSystemFileInfo"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"class.base::FilePath" }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorIN7content8DropData18FileSystemFileInfoENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__14pairIKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES6_EC2ERKS8_ = comdat any

$_ZNSt3__16vectorIN7content8DropData18FileSystemFileInfoENS_9allocatorIS3_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [7 x i8] c"image/\00", align 1

@_ZN7content8DropData8MetadataC1Ev = hidden unnamed_addr alias void (%"struct.content::DropData::Metadata"*), void (%"struct.content::DropData::Metadata"*)* @_ZN7content8DropData8MetadataC2Ev
@_ZN7content8DropData8MetadataC1ERKS1_ = hidden unnamed_addr alias void (%"struct.content::DropData::Metadata"*, %"struct.content::DropData::Metadata"*), void (%"struct.content::DropData::Metadata"*, %"struct.content::DropData::Metadata"*)* @_ZN7content8DropData8MetadataC2ERKS1_
@_ZN7content8DropData8MetadataD1Ev = hidden unnamed_addr alias void (%"struct.content::DropData::Metadata"*), void (%"struct.content::DropData::Metadata"*)* @_ZN7content8DropData8MetadataD2Ev
@_ZN7content8DropDataC1Ev = hidden unnamed_addr alias void (%"struct.content::DropData"*), void (%"struct.content::DropData"*)* @_ZN7content8DropDataC2Ev
@_ZN7content8DropDataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::DropData"*, %"struct.content::DropData"*), void (%"struct.content::DropData"*, %"struct.content::DropData"*)* @_ZN7content8DropDataC2ERKS0_
@_ZN7content8DropDataD1Ev = hidden unnamed_addr alias void (%"struct.content::DropData"*), void (%"struct.content::DropData"*)* @_ZN7content8DropDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData8MetadataC2Ev(%"struct.content::DropData::Metadata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %4) #10
  %5 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #10
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData8Metadata17CreateForMimeTypeERKNS0_4KindERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"struct.content::DropData::Metadata"* noalias sret, i32* nocapture readonly dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.content::DropData::Metadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 176, i1 false)
  %5 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %7) #10
  %8 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %8) #10
  %9 = load i32, i32* %1, align 4
  %10 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 0
  store i32 %9, i32* %10, align 8
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !2
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !2
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !5, !noalias !2
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !5, !noalias !2
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !2
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !2
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !5, !noalias !2
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !5, !noalias !2
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !2
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !5, !noalias !2
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !2
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !7

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !2
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !5, !noalias !2
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !9

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !11

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !12

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !13
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !13
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !16, !noalias !13
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !16, !noalias !13
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !13
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !13
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !16, !noalias !13
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !16, !noalias !13
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !13
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !13
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !16, !noalias !13
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !16, !noalias !13
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !13
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !13
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !16, !noalias !13
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !16, !noalias !13
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !18

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !13
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !13
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !16, !noalias !13
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !16, !noalias !13
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !19

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !20

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !21

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !22
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !22
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !25, !noalias !22
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !25, !noalias !22
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !22
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !22
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !25, !noalias !22
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !25, !noalias !22
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !22
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !22
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !25, !noalias !22
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !25, !noalias !22
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !22
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !22
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !25, !noalias !22
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !25, !noalias !22
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !27

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !22
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !22
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !25, !noalias !22
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !25, !noalias !22
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !28

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !29

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !30

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData8Metadata17CreateForFilePathERKN4base8FilePathE(%"struct.content::DropData::Metadata"* noalias sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::DropData::Metadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 176, i1 false)
  %4 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %6) #10
  %7 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %7) #10
  %8 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 0
  store i32 1, i32* %8, align 8
  %9 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"* %6, %"class.base::FilePath"* dereferenceable(24) %1) #10
  ret void
}

declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData8Metadata22CreateForFileSystemUrlERK4GURL(%"struct.content::DropData::Metadata"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::DropData::Metadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 176, i1 false)
  %4 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %6) #10
  %7 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %7) #10
  %8 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 0
  store i32 2, i32* %8, align 8
  %9 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %7, %class.GURL* dereferenceable(120) %1) #10
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData8MetadataC2ERKS1_(%"struct.content::DropData::Metadata"*, %"struct.content::DropData::Metadata"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #10
  br label %190

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #11
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #11
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #12
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = sub i64 %45, %56
  %58 = getelementptr i16, i16* %17, i64 %56
  %59 = getelementptr i16, i16* %44, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %17, i64 %68
  %71 = getelementptr i16, i16* %44, i64 %68
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !31
  %74 = getelementptr i16, i16* %70, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !31
  %77 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !34, !noalias !31
  %78 = getelementptr i16, i16* %71, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !34, !noalias !31
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %17, i64 %80
  %82 = getelementptr i16, i16* %44, i64 %80
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !31
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !31
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !34, !noalias !31
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !34, !noalias !31
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %17, i64 %91
  %93 = getelementptr i16, i16* %44, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !31
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !31
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !34, !noalias !31
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !34, !noalias !31
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %17, i64 %102
  %104 = getelementptr i16, i16* %44, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !31
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !31
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !34, !noalias !31
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !34, !noalias !31
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !36

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %17, i64 %120
  %123 = getelementptr i16, i16* %44, i64 %120
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !31
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !31
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !34, !noalias !31
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !34, !noalias !31
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !37

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %57, %135 ]
  %139 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %59, %135 ]
  %141 = add i64 %138, -1
  %142 = and i64 %138, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i64 [ %150, %144 ], [ %138, %137 ]
  %146 = phi i16* [ %152, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %151, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %146, align 2
  store i16 %149, i16* %147, align 2
  %150 = add i64 %145, -1
  %151 = getelementptr inbounds i16, i16* %147, i64 1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !38

155:                                              ; preds = %144, %137
  %156 = phi i64 [ %138, %137 ], [ %150, %144 ]
  %157 = phi i16* [ %139, %137 ], [ %152, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %151, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %186, %160 ], [ %156, %155 ]
  %162 = phi i16* [ %188, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %187, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %163, i64 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %163, i64 3
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %163, i64 4
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %163, i64 5
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %163, i64 6
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %163, i64 7
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %161, -8
  %187 = getelementptr inbounds i16, i16* %163, i64 8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !39

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 2
  %192 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %1, i64 0, i32 2
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %191, %"class.base::FilePath"* dereferenceable(24) %192) #10
  %193 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 3
  %194 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %1, i64 0, i32 3
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %193, %class.GURL* dereferenceable(120) %194) #10
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData8MetadataD2Ev(%"struct.content::DropData::Metadata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %2) #10
  %3 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %3) #10
  %4 = getelementptr inbounds %"struct.content::DropData::Metadata", %"struct.content::DropData::Metadata"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropDataC2Ev(%"struct.content::DropData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 0
  store i32 -2, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #10
  %5 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  store i32 1, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.32* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  %12 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 12
  %13 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 97, i1 false)
  %14 = bitcast %union.anon.32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false)
  tail call void @_ZN4GURLC1Ev(%class.GURL* %12) #10
  %15 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 13
  %16 = bitcast %"class.std::__1::basic_string.1"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 14
  tail call void @_ZN4GURLC1Ev(%class.GURL* %17) #10
  %18 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 15
  %19 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 17, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.49"* %19 to i32*
  %21 = bitcast %"class.std::__1::basic_string.1"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 80, i1 false)
  store i32 1065353216, i32* %20, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropDataC2ERKS0_(%"struct.content::DropData"*, %"struct.content::DropData"* dereferenceable(696)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::DropData"* %0 to i8*
  %4 = bitcast %"struct.content::DropData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 5, i1 false)
  %5 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %6) #10
  %7 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 3
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #10
  br label %191

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #11
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #11
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #12
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %18, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %18, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !40
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !40
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !43, !noalias !40
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !43, !noalias !40
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %18, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !40
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !40
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !43, !noalias !40
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !43, !noalias !40
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %18, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !40
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !40
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !43, !noalias !40
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !43, !noalias !40
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %18, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !40
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !40
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !43, !noalias !40
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !43, !noalias !40
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !45

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %18, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !40
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !40
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !43, !noalias !40
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !43, !noalias !40
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !46

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !47

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !48

191:                                              ; preds = %156, %161, %136, %13
  %192 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 4
  %193 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 4
  %194 = bitcast %"class.std::__1::basic_string"* %193 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %194, i64 0, i32 1, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %191
  %199 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  %200 = bitcast %"class.std::__1::basic_string"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 24, i1 false) #10
  br label %376

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = icmp ult i64 %205, 11
  br i1 %206, label %207, label %212

207:                                              ; preds = %201
  %208 = bitcast %"class.std::__1::basic_string"* %192 to i16*
  %209 = trunc i64 %205 to i8
  %210 = bitcast %"class.std::__1::basic_string"* %192 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %210, i64 0, i32 1, i32 1
  store i8 %209, i8* %211, align 1
  br label %229

212:                                              ; preds = %201
  %213 = icmp ugt i64 %205, 9223372036854775791
  br i1 %213, label %214, label %216

214:                                              ; preds = %212
  %215 = bitcast %"class.std::__1::basic_string"* %192 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %215) #11
  unreachable

216:                                              ; preds = %212
  %217 = add nuw nsw i64 %205, 8
  %218 = and i64 %217, -8
  %219 = icmp slt i64 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %216
  tail call void @abort() #11
  unreachable

221:                                              ; preds = %216
  %222 = shl i64 %218, 1
  %223 = tail call i8* @_Znwm(i64 %222) #12
  %224 = bitcast i8* %223 to i16*
  %225 = bitcast %"class.std::__1::basic_string"* %192 to i8**
  store i8* %223, i8** %225, align 8
  %226 = or i64 %218, -9223372036854775808
  %227 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %205, i64* %228, align 8
  br label %229

229:                                              ; preds = %221, %207
  %230 = phi i16* [ %208, %207 ], [ %224, %221 ]
  %231 = add nuw nsw i64 %205, 1
  %232 = add i64 %205, 1
  %233 = icmp ult i64 %232, 16
  br i1 %233, label %323, label %234

234:                                              ; preds = %229
  %235 = add i64 %205, 1
  %236 = getelementptr i16, i16* %230, i64 %235
  %237 = getelementptr i16, i16* %203, i64 %235
  %238 = icmp ult i16* %230, %237
  %239 = icmp ult i16* %203, %236
  %240 = and i1 %238, %239
  br i1 %240, label %323, label %241

241:                                              ; preds = %234
  %242 = and i64 %232, -16
  %243 = sub i64 %231, %242
  %244 = getelementptr i16, i16* %203, i64 %242
  %245 = getelementptr i16, i16* %230, i64 %242
  %246 = add i64 %242, -16
  %247 = lshr exact i64 %246, 4
  %248 = add nuw nsw i64 %247, 1
  %249 = and i64 %248, 3
  %250 = icmp ult i64 %246, 48
  br i1 %250, label %302, label %251

251:                                              ; preds = %241
  %252 = sub nsw i64 %248, %249
  br label %253

253:                                              ; preds = %253, %251
  %254 = phi i64 [ 0, %251 ], [ %299, %253 ]
  %255 = phi i64 [ %252, %251 ], [ %300, %253 ]
  %256 = getelementptr i16, i16* %203, i64 %254
  %257 = getelementptr i16, i16* %230, i64 %254
  %258 = bitcast i16* %256 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !49
  %260 = getelementptr i16, i16* %256, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !49
  %263 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %263, align 2, !alias.scope !52, !noalias !49
  %264 = getelementptr i16, i16* %257, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %265, align 2, !alias.scope !52, !noalias !49
  %266 = or i64 %254, 16
  %267 = getelementptr i16, i16* %203, i64 %266
  %268 = getelementptr i16, i16* %230, i64 %266
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !49
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !49
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !52, !noalias !49
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !52, !noalias !49
  %277 = or i64 %254, 32
  %278 = getelementptr i16, i16* %203, i64 %277
  %279 = getelementptr i16, i16* %230, i64 %277
  %280 = bitcast i16* %278 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !49
  %282 = getelementptr i16, i16* %278, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !49
  %285 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %285, align 2, !alias.scope !52, !noalias !49
  %286 = getelementptr i16, i16* %279, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %287, align 2, !alias.scope !52, !noalias !49
  %288 = or i64 %254, 48
  %289 = getelementptr i16, i16* %203, i64 %288
  %290 = getelementptr i16, i16* %230, i64 %288
  %291 = bitcast i16* %289 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !49
  %293 = getelementptr i16, i16* %289, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !49
  %296 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %296, align 2, !alias.scope !52, !noalias !49
  %297 = getelementptr i16, i16* %290, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %298, align 2, !alias.scope !52, !noalias !49
  %299 = add i64 %254, 64
  %300 = add i64 %255, -4
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %253, !llvm.loop !54

302:                                              ; preds = %253, %241
  %303 = phi i64 [ 0, %241 ], [ %299, %253 ]
  %304 = icmp eq i64 %249, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %302, %305
  %306 = phi i64 [ %318, %305 ], [ %303, %302 ]
  %307 = phi i64 [ %319, %305 ], [ %249, %302 ]
  %308 = getelementptr i16, i16* %203, i64 %306
  %309 = getelementptr i16, i16* %230, i64 %306
  %310 = bitcast i16* %308 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !49
  %312 = getelementptr i16, i16* %308, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  %314 = load <8 x i16>, <8 x i16>* %313, align 2, !alias.scope !49
  %315 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %315, align 2, !alias.scope !52, !noalias !49
  %316 = getelementptr i16, i16* %309, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %314, <8 x i16>* %317, align 2, !alias.scope !52, !noalias !49
  %318 = add i64 %306, 16
  %319 = add i64 %307, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %305, !llvm.loop !55

321:                                              ; preds = %305, %302
  %322 = icmp eq i64 %232, %242
  br i1 %322, label %376, label %323

323:                                              ; preds = %321, %234, %229
  %324 = phi i64 [ %231, %234 ], [ %231, %229 ], [ %243, %321 ]
  %325 = phi i16* [ %203, %234 ], [ %203, %229 ], [ %244, %321 ]
  %326 = phi i16* [ %230, %234 ], [ %230, %229 ], [ %245, %321 ]
  %327 = add i64 %324, -1
  %328 = and i64 %324, 7
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %341, label %330

330:                                              ; preds = %323, %330
  %331 = phi i64 [ %336, %330 ], [ %324, %323 ]
  %332 = phi i16* [ %338, %330 ], [ %325, %323 ]
  %333 = phi i16* [ %337, %330 ], [ %326, %323 ]
  %334 = phi i64 [ %339, %330 ], [ %328, %323 ]
  %335 = load i16, i16* %332, align 2
  store i16 %335, i16* %333, align 2
  %336 = add i64 %331, -1
  %337 = getelementptr inbounds i16, i16* %333, i64 1
  %338 = getelementptr inbounds i16, i16* %332, i64 1
  %339 = add i64 %334, -1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %330, !llvm.loop !56

341:                                              ; preds = %330, %323
  %342 = phi i64 [ %324, %323 ], [ %336, %330 ]
  %343 = phi i16* [ %325, %323 ], [ %338, %330 ]
  %344 = phi i16* [ %326, %323 ], [ %337, %330 ]
  %345 = icmp ult i64 %327, 7
  br i1 %345, label %376, label %346

346:                                              ; preds = %341, %346
  %347 = phi i64 [ %372, %346 ], [ %342, %341 ]
  %348 = phi i16* [ %374, %346 ], [ %343, %341 ]
  %349 = phi i16* [ %373, %346 ], [ %344, %341 ]
  %350 = load i16, i16* %348, align 2
  store i16 %350, i16* %349, align 2
  %351 = getelementptr inbounds i16, i16* %349, i64 1
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %349, i64 2
  %355 = getelementptr inbounds i16, i16* %348, i64 2
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %349, i64 3
  %358 = getelementptr inbounds i16, i16* %348, i64 3
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %349, i64 4
  %361 = getelementptr inbounds i16, i16* %348, i64 4
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %349, i64 5
  %364 = getelementptr inbounds i16, i16* %348, i64 5
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %349, i64 6
  %367 = getelementptr inbounds i16, i16* %348, i64 6
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %349, i64 7
  %370 = getelementptr inbounds i16, i16* %348, i64 7
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = add i64 %347, -8
  %373 = getelementptr inbounds i16, i16* %349, i64 8
  %374 = getelementptr inbounds i16, i16* %348, i64 8
  %375 = icmp eq i64 %372, 0
  br i1 %375, label %376, label %346, !llvm.loop !57

376:                                              ; preds = %341, %346, %321, %198
  %377 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 5
  %378 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 5
  %379 = load i32, i32* %378, align 8
  store i32 %379, i32* %377, align 8
  %380 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 6
  %381 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 6
  %382 = bitcast %"class.std::__1::vector"* %380 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %382, i8 0, i64 24, i1 false) #10
  %383 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 6, i32 0, i32 1
  %384 = bitcast %"struct.ui::FileInfo"** %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = bitcast %"class.std::__1::vector"* %381 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = sub i64 %385, %387
  %389 = sdiv exact i64 %388, 48
  %390 = icmp eq i64 %388, 0
  br i1 %390, label %423, label %391

391:                                              ; preds = %376
  %392 = icmp ugt i64 %389, 384307168202282325
  br i1 %392, label %393, label %395

393:                                              ; preds = %391
  %394 = bitcast %"class.std::__1::vector"* %380 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %394) #11
  unreachable

395:                                              ; preds = %391
  %396 = tail call i8* @_Znwm(i64 %388) #12
  %397 = bitcast i8* %396 to %"struct.ui::FileInfo"*
  %398 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 6, i32 0, i32 1
  %399 = bitcast %"struct.ui::FileInfo"** %398 to i8**
  store i8* %396, i8** %399, align 8
  %400 = bitcast %"class.std::__1::vector"* %380 to i8**
  store i8* %396, i8** %400, align 8
  %401 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %397, i64 %389
  %402 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.ui::FileInfo"* %401, %"struct.ui::FileInfo"** %402, align 8
  %403 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %381, i64 0, i32 0, i32 0
  %404 = load %"struct.ui::FileInfo"*, %"struct.ui::FileInfo"** %403, align 8
  %405 = load %"struct.ui::FileInfo"*, %"struct.ui::FileInfo"** %383, align 8
  %406 = bitcast %"struct.ui::FileInfo"** %398 to i64*
  %407 = ptrtoint i8* %396 to i64
  %408 = icmp eq %"struct.ui::FileInfo"* %404, %405
  br i1 %408, label %421, label %409

409:                                              ; preds = %395, %409
  %410 = phi %"struct.ui::FileInfo"* [ %417, %409 ], [ %397, %395 ]
  %411 = phi %"struct.ui::FileInfo"* [ %416, %409 ], [ %404, %395 ]
  %412 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %410, i64 0, i32 0
  %413 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %411, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %412, %"class.base::FilePath"* dereferenceable(24) %413) #10
  %414 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %410, i64 0, i32 1
  %415 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %411, i64 0, i32 1
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %414, %"class.base::FilePath"* dereferenceable(24) %415) #10
  %416 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %411, i64 1
  %417 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %410, i64 1
  %418 = icmp eq %"struct.ui::FileInfo"* %416, %405
  br i1 %418, label %419, label %409

419:                                              ; preds = %409
  %420 = ptrtoint %"struct.ui::FileInfo"* %417 to i64
  br label %421

421:                                              ; preds = %419, %395
  %422 = phi i64 [ %407, %395 ], [ %420, %419 ]
  store i64 %422, i64* %406, align 8
  br label %423

423:                                              ; preds = %376, %421
  %424 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 7
  %425 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 7
  %426 = bitcast %"class.std::__1::vector.18"* %424 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %426, i8 0, i64 24, i1 false) #10
  %427 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 7, i32 0, i32 1
  %428 = bitcast %"class.std::__1::basic_string"** %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.std::__1::vector.18"* %425 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = sub i64 %429, %431
  %433 = sdiv exact i64 %432, 24
  %434 = icmp eq i64 %432, 0
  br i1 %434, label %649, label %435

435:                                              ; preds = %423
  %436 = icmp ugt i64 %433, 768614336404564650
  br i1 %436, label %437, label %439

437:                                              ; preds = %435
  %438 = bitcast %"class.std::__1::vector.18"* %424 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %438) #11
  unreachable

439:                                              ; preds = %435
  %440 = tail call i8* @_Znwm(i64 %432) #12
  %441 = bitcast i8* %440 to %"class.std::__1::basic_string"*
  %442 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 7, i32 0, i32 1
  %443 = bitcast %"class.std::__1::basic_string"** %442 to i8**
  store i8* %440, i8** %443, align 8
  %444 = bitcast %"class.std::__1::vector.18"* %424 to i8**
  store i8* %440, i8** %444, align 8
  %445 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %441, i64 %433
  %446 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %445, %"class.std::__1::basic_string"** %446, align 8
  %447 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %425, i64 0, i32 0, i32 0
  %448 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %447, align 8
  %449 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %427, align 8
  %450 = bitcast %"class.std::__1::basic_string"** %442 to i64*
  %451 = ptrtoint i8* %440 to i64
  %452 = icmp eq %"class.std::__1::basic_string"* %448, %449
  br i1 %452, label %647, label %453

453:                                              ; preds = %439
  %454 = bitcast i8* %440 to %"class.std::__1::basic_string"*
  br label %455

455:                                              ; preds = %641, %453
  %456 = phi %"class.std::__1::basic_string"* [ %643, %641 ], [ %454, %453 ]
  %457 = phi %"class.std::__1::basic_string"* [ %642, %641 ], [ %448, %453 ]
  %458 = bitcast %"class.std::__1::basic_string"* %457 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %459 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %458, i64 0, i32 1, i32 1
  %460 = load i8, i8* %459, align 1
  %461 = icmp slt i8 %460, 0
  br i1 %461, label %465, label %462

462:                                              ; preds = %455
  %463 = bitcast %"class.std::__1::basic_string"* %456 to i8*
  %464 = bitcast %"class.std::__1::basic_string"* %457 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %463, i8* align 8 %464, i64 24, i1 false) #10
  br label %641

465:                                              ; preds = %455
  %466 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %457, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i16*, i16** %466, align 8
  %468 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %457, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %469 = load i64, i64* %468, align 8
  %470 = icmp ult i64 %469, 11
  br i1 %470, label %471, label %476

471:                                              ; preds = %465
  %472 = bitcast %"class.std::__1::basic_string"* %456 to i16*
  %473 = trunc i64 %469 to i8
  %474 = bitcast %"class.std::__1::basic_string"* %456 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %475 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %474, i64 0, i32 1, i32 1
  store i8 %473, i8* %475, align 1
  br label %493

476:                                              ; preds = %465
  %477 = icmp ugt i64 %469, 9223372036854775791
  br i1 %477, label %478, label %480

478:                                              ; preds = %476
  %479 = bitcast %"class.std::__1::basic_string"* %456 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %479) #11
  unreachable

480:                                              ; preds = %476
  %481 = add nuw nsw i64 %469, 8
  %482 = and i64 %481, -8
  %483 = icmp slt i64 %482, 0
  br i1 %483, label %484, label %485

484:                                              ; preds = %480
  tail call void @abort() #11
  unreachable

485:                                              ; preds = %480
  %486 = shl i64 %482, 1
  %487 = tail call i8* @_Znwm(i64 %486) #12
  %488 = bitcast i8* %487 to i16*
  %489 = bitcast %"class.std::__1::basic_string"* %456 to i8**
  store i8* %487, i8** %489, align 8
  %490 = or i64 %482, -9223372036854775808
  %491 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %456, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %490, i64* %491, align 8
  %492 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %456, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %469, i64* %492, align 8
  br label %493

493:                                              ; preds = %485, %471
  %494 = phi i16* [ %472, %471 ], [ %488, %485 ]
  %495 = add nuw nsw i64 %469, 1
  %496 = add i64 %469, 1
  %497 = icmp ult i64 %496, 16
  br i1 %497, label %588, label %498

498:                                              ; preds = %493
  %499 = getelementptr i16, i16* %494, i64 1
  %500 = getelementptr i16, i16* %499, i64 %469
  %501 = getelementptr i16, i16* %467, i64 1
  %502 = getelementptr i16, i16* %501, i64 %469
  %503 = icmp ult i16* %494, %502
  %504 = icmp ult i16* %467, %500
  %505 = and i1 %503, %504
  br i1 %505, label %588, label %506

506:                                              ; preds = %498
  %507 = and i64 %496, -16
  %508 = sub i64 %495, %507
  %509 = getelementptr i16, i16* %467, i64 %507
  %510 = getelementptr i16, i16* %494, i64 %507
  %511 = add i64 %507, -16
  %512 = lshr exact i64 %511, 4
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 3
  %515 = icmp ult i64 %511, 48
  br i1 %515, label %567, label %516

516:                                              ; preds = %506
  %517 = sub nsw i64 %513, %514
  br label %518

518:                                              ; preds = %518, %516
  %519 = phi i64 [ 0, %516 ], [ %564, %518 ]
  %520 = phi i64 [ %517, %516 ], [ %565, %518 ]
  %521 = getelementptr i16, i16* %467, i64 %519
  %522 = getelementptr i16, i16* %494, i64 %519
  %523 = bitcast i16* %521 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !58
  %525 = getelementptr i16, i16* %521, i64 8
  %526 = bitcast i16* %525 to <8 x i16>*
  %527 = load <8 x i16>, <8 x i16>* %526, align 2, !alias.scope !58
  %528 = bitcast i16* %522 to <8 x i16>*
  store <8 x i16> %524, <8 x i16>* %528, align 2, !alias.scope !61, !noalias !58
  %529 = getelementptr i16, i16* %522, i64 8
  %530 = bitcast i16* %529 to <8 x i16>*
  store <8 x i16> %527, <8 x i16>* %530, align 2, !alias.scope !61, !noalias !58
  %531 = or i64 %519, 16
  %532 = getelementptr i16, i16* %467, i64 %531
  %533 = getelementptr i16, i16* %494, i64 %531
  %534 = bitcast i16* %532 to <8 x i16>*
  %535 = load <8 x i16>, <8 x i16>* %534, align 2, !alias.scope !58
  %536 = getelementptr i16, i16* %532, i64 8
  %537 = bitcast i16* %536 to <8 x i16>*
  %538 = load <8 x i16>, <8 x i16>* %537, align 2, !alias.scope !58
  %539 = bitcast i16* %533 to <8 x i16>*
  store <8 x i16> %535, <8 x i16>* %539, align 2, !alias.scope !61, !noalias !58
  %540 = getelementptr i16, i16* %533, i64 8
  %541 = bitcast i16* %540 to <8 x i16>*
  store <8 x i16> %538, <8 x i16>* %541, align 2, !alias.scope !61, !noalias !58
  %542 = or i64 %519, 32
  %543 = getelementptr i16, i16* %467, i64 %542
  %544 = getelementptr i16, i16* %494, i64 %542
  %545 = bitcast i16* %543 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !58
  %547 = getelementptr i16, i16* %543, i64 8
  %548 = bitcast i16* %547 to <8 x i16>*
  %549 = load <8 x i16>, <8 x i16>* %548, align 2, !alias.scope !58
  %550 = bitcast i16* %544 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %550, align 2, !alias.scope !61, !noalias !58
  %551 = getelementptr i16, i16* %544, i64 8
  %552 = bitcast i16* %551 to <8 x i16>*
  store <8 x i16> %549, <8 x i16>* %552, align 2, !alias.scope !61, !noalias !58
  %553 = or i64 %519, 48
  %554 = getelementptr i16, i16* %467, i64 %553
  %555 = getelementptr i16, i16* %494, i64 %553
  %556 = bitcast i16* %554 to <8 x i16>*
  %557 = load <8 x i16>, <8 x i16>* %556, align 2, !alias.scope !58
  %558 = getelementptr i16, i16* %554, i64 8
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !58
  %561 = bitcast i16* %555 to <8 x i16>*
  store <8 x i16> %557, <8 x i16>* %561, align 2, !alias.scope !61, !noalias !58
  %562 = getelementptr i16, i16* %555, i64 8
  %563 = bitcast i16* %562 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %563, align 2, !alias.scope !61, !noalias !58
  %564 = add i64 %519, 64
  %565 = add i64 %520, -4
  %566 = icmp eq i64 %565, 0
  br i1 %566, label %567, label %518, !llvm.loop !63

567:                                              ; preds = %518, %506
  %568 = phi i64 [ 0, %506 ], [ %564, %518 ]
  %569 = icmp eq i64 %514, 0
  br i1 %569, label %586, label %570

570:                                              ; preds = %567, %570
  %571 = phi i64 [ %583, %570 ], [ %568, %567 ]
  %572 = phi i64 [ %584, %570 ], [ %514, %567 ]
  %573 = getelementptr i16, i16* %467, i64 %571
  %574 = getelementptr i16, i16* %494, i64 %571
  %575 = bitcast i16* %573 to <8 x i16>*
  %576 = load <8 x i16>, <8 x i16>* %575, align 2, !alias.scope !58
  %577 = getelementptr i16, i16* %573, i64 8
  %578 = bitcast i16* %577 to <8 x i16>*
  %579 = load <8 x i16>, <8 x i16>* %578, align 2, !alias.scope !58
  %580 = bitcast i16* %574 to <8 x i16>*
  store <8 x i16> %576, <8 x i16>* %580, align 2, !alias.scope !61, !noalias !58
  %581 = getelementptr i16, i16* %574, i64 8
  %582 = bitcast i16* %581 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %582, align 2, !alias.scope !61, !noalias !58
  %583 = add i64 %571, 16
  %584 = add i64 %572, -1
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %570, !llvm.loop !64

586:                                              ; preds = %570, %567
  %587 = icmp eq i64 %496, %507
  br i1 %587, label %641, label %588

588:                                              ; preds = %586, %498, %493
  %589 = phi i64 [ %495, %498 ], [ %495, %493 ], [ %508, %586 ]
  %590 = phi i16* [ %467, %498 ], [ %467, %493 ], [ %509, %586 ]
  %591 = phi i16* [ %494, %498 ], [ %494, %493 ], [ %510, %586 ]
  %592 = add i64 %589, -1
  %593 = and i64 %589, 7
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %606, label %595

595:                                              ; preds = %588, %595
  %596 = phi i64 [ %601, %595 ], [ %589, %588 ]
  %597 = phi i16* [ %603, %595 ], [ %590, %588 ]
  %598 = phi i16* [ %602, %595 ], [ %591, %588 ]
  %599 = phi i64 [ %604, %595 ], [ %593, %588 ]
  %600 = load i16, i16* %597, align 2
  store i16 %600, i16* %598, align 2
  %601 = add i64 %596, -1
  %602 = getelementptr inbounds i16, i16* %598, i64 1
  %603 = getelementptr inbounds i16, i16* %597, i64 1
  %604 = add i64 %599, -1
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %606, label %595, !llvm.loop !65

606:                                              ; preds = %595, %588
  %607 = phi i64 [ %589, %588 ], [ %601, %595 ]
  %608 = phi i16* [ %590, %588 ], [ %603, %595 ]
  %609 = phi i16* [ %591, %588 ], [ %602, %595 ]
  %610 = icmp ult i64 %592, 7
  br i1 %610, label %641, label %611

611:                                              ; preds = %606, %611
  %612 = phi i64 [ %637, %611 ], [ %607, %606 ]
  %613 = phi i16* [ %639, %611 ], [ %608, %606 ]
  %614 = phi i16* [ %638, %611 ], [ %609, %606 ]
  %615 = load i16, i16* %613, align 2
  store i16 %615, i16* %614, align 2
  %616 = getelementptr inbounds i16, i16* %614, i64 1
  %617 = getelementptr inbounds i16, i16* %613, i64 1
  %618 = load i16, i16* %617, align 2
  store i16 %618, i16* %616, align 2
  %619 = getelementptr inbounds i16, i16* %614, i64 2
  %620 = getelementptr inbounds i16, i16* %613, i64 2
  %621 = load i16, i16* %620, align 2
  store i16 %621, i16* %619, align 2
  %622 = getelementptr inbounds i16, i16* %614, i64 3
  %623 = getelementptr inbounds i16, i16* %613, i64 3
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %614, i64 4
  %626 = getelementptr inbounds i16, i16* %613, i64 4
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %614, i64 5
  %629 = getelementptr inbounds i16, i16* %613, i64 5
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %614, i64 6
  %632 = getelementptr inbounds i16, i16* %613, i64 6
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %614, i64 7
  %635 = getelementptr inbounds i16, i16* %613, i64 7
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = add i64 %612, -8
  %638 = getelementptr inbounds i16, i16* %614, i64 8
  %639 = getelementptr inbounds i16, i16* %613, i64 8
  %640 = icmp eq i64 %637, 0
  br i1 %640, label %641, label %611, !llvm.loop !66

641:                                              ; preds = %606, %611, %586, %462
  %642 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %457, i64 1
  %643 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %456, i64 1
  %644 = icmp eq %"class.std::__1::basic_string"* %642, %449
  br i1 %644, label %645, label %455

645:                                              ; preds = %641
  %646 = ptrtoint %"class.std::__1::basic_string"* %643 to i64
  br label %647

647:                                              ; preds = %439, %645
  %648 = phi i64 [ %451, %439 ], [ %646, %645 ]
  store i64 %648, i64* %450, align 8
  br label %649

649:                                              ; preds = %423, %647
  %650 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 8
  %651 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 8
  %652 = bitcast %"class.std::__1::basic_string"* %651 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %653 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %652, i64 0, i32 1, i32 1
  %654 = load i8, i8* %653, align 1
  %655 = icmp slt i8 %654, 0
  br i1 %655, label %659, label %656

656:                                              ; preds = %649
  %657 = bitcast %"class.std::__1::basic_string"* %650 to i8*
  %658 = bitcast %"class.std::__1::basic_string"* %651 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %657, i8* align 8 %658, i64 24, i1 false) #10
  br label %834

659:                                              ; preds = %649
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %651, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i16*, i16** %660, align 8
  %662 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %663 = load i64, i64* %662, align 8
  %664 = icmp ult i64 %663, 11
  br i1 %664, label %665, label %670

665:                                              ; preds = %659
  %666 = bitcast %"class.std::__1::basic_string"* %650 to i16*
  %667 = trunc i64 %663 to i8
  %668 = bitcast %"class.std::__1::basic_string"* %650 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %669 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %668, i64 0, i32 1, i32 1
  store i8 %667, i8* %669, align 1
  br label %687

670:                                              ; preds = %659
  %671 = icmp ugt i64 %663, 9223372036854775791
  br i1 %671, label %672, label %674

672:                                              ; preds = %670
  %673 = bitcast %"class.std::__1::basic_string"* %650 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %673) #11
  unreachable

674:                                              ; preds = %670
  %675 = add nuw nsw i64 %663, 8
  %676 = and i64 %675, -8
  %677 = icmp slt i64 %676, 0
  br i1 %677, label %678, label %679

678:                                              ; preds = %674
  tail call void @abort() #11
  unreachable

679:                                              ; preds = %674
  %680 = shl i64 %676, 1
  %681 = tail call i8* @_Znwm(i64 %680) #12
  %682 = bitcast i8* %681 to i16*
  %683 = bitcast %"class.std::__1::basic_string"* %650 to i8**
  store i8* %681, i8** %683, align 8
  %684 = or i64 %676, -9223372036854775808
  %685 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %684, i64* %685, align 8
  %686 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %663, i64* %686, align 8
  br label %687

687:                                              ; preds = %679, %665
  %688 = phi i16* [ %666, %665 ], [ %682, %679 ]
  %689 = add nuw nsw i64 %663, 1
  %690 = add i64 %663, 1
  %691 = icmp ult i64 %690, 16
  br i1 %691, label %781, label %692

692:                                              ; preds = %687
  %693 = add i64 %663, 1
  %694 = getelementptr i16, i16* %688, i64 %693
  %695 = getelementptr i16, i16* %661, i64 %693
  %696 = icmp ult i16* %688, %695
  %697 = icmp ult i16* %661, %694
  %698 = and i1 %696, %697
  br i1 %698, label %781, label %699

699:                                              ; preds = %692
  %700 = and i64 %690, -16
  %701 = sub i64 %689, %700
  %702 = getelementptr i16, i16* %661, i64 %700
  %703 = getelementptr i16, i16* %688, i64 %700
  %704 = add i64 %700, -16
  %705 = lshr exact i64 %704, 4
  %706 = add nuw nsw i64 %705, 1
  %707 = and i64 %706, 3
  %708 = icmp ult i64 %704, 48
  br i1 %708, label %760, label %709

709:                                              ; preds = %699
  %710 = sub nsw i64 %706, %707
  br label %711

711:                                              ; preds = %711, %709
  %712 = phi i64 [ 0, %709 ], [ %757, %711 ]
  %713 = phi i64 [ %710, %709 ], [ %758, %711 ]
  %714 = getelementptr i16, i16* %661, i64 %712
  %715 = getelementptr i16, i16* %688, i64 %712
  %716 = bitcast i16* %714 to <8 x i16>*
  %717 = load <8 x i16>, <8 x i16>* %716, align 2, !alias.scope !67
  %718 = getelementptr i16, i16* %714, i64 8
  %719 = bitcast i16* %718 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !67
  %721 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %717, <8 x i16>* %721, align 2, !alias.scope !70, !noalias !67
  %722 = getelementptr i16, i16* %715, i64 8
  %723 = bitcast i16* %722 to <8 x i16>*
  store <8 x i16> %720, <8 x i16>* %723, align 2, !alias.scope !70, !noalias !67
  %724 = or i64 %712, 16
  %725 = getelementptr i16, i16* %661, i64 %724
  %726 = getelementptr i16, i16* %688, i64 %724
  %727 = bitcast i16* %725 to <8 x i16>*
  %728 = load <8 x i16>, <8 x i16>* %727, align 2, !alias.scope !67
  %729 = getelementptr i16, i16* %725, i64 8
  %730 = bitcast i16* %729 to <8 x i16>*
  %731 = load <8 x i16>, <8 x i16>* %730, align 2, !alias.scope !67
  %732 = bitcast i16* %726 to <8 x i16>*
  store <8 x i16> %728, <8 x i16>* %732, align 2, !alias.scope !70, !noalias !67
  %733 = getelementptr i16, i16* %726, i64 8
  %734 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %731, <8 x i16>* %734, align 2, !alias.scope !70, !noalias !67
  %735 = or i64 %712, 32
  %736 = getelementptr i16, i16* %661, i64 %735
  %737 = getelementptr i16, i16* %688, i64 %735
  %738 = bitcast i16* %736 to <8 x i16>*
  %739 = load <8 x i16>, <8 x i16>* %738, align 2, !alias.scope !67
  %740 = getelementptr i16, i16* %736, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !67
  %743 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %739, <8 x i16>* %743, align 2, !alias.scope !70, !noalias !67
  %744 = getelementptr i16, i16* %737, i64 8
  %745 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %742, <8 x i16>* %745, align 2, !alias.scope !70, !noalias !67
  %746 = or i64 %712, 48
  %747 = getelementptr i16, i16* %661, i64 %746
  %748 = getelementptr i16, i16* %688, i64 %746
  %749 = bitcast i16* %747 to <8 x i16>*
  %750 = load <8 x i16>, <8 x i16>* %749, align 2, !alias.scope !67
  %751 = getelementptr i16, i16* %747, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  %753 = load <8 x i16>, <8 x i16>* %752, align 2, !alias.scope !67
  %754 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %750, <8 x i16>* %754, align 2, !alias.scope !70, !noalias !67
  %755 = getelementptr i16, i16* %748, i64 8
  %756 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %753, <8 x i16>* %756, align 2, !alias.scope !70, !noalias !67
  %757 = add i64 %712, 64
  %758 = add i64 %713, -4
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %760, label %711, !llvm.loop !72

760:                                              ; preds = %711, %699
  %761 = phi i64 [ 0, %699 ], [ %757, %711 ]
  %762 = icmp eq i64 %707, 0
  br i1 %762, label %779, label %763

763:                                              ; preds = %760, %763
  %764 = phi i64 [ %776, %763 ], [ %761, %760 ]
  %765 = phi i64 [ %777, %763 ], [ %707, %760 ]
  %766 = getelementptr i16, i16* %661, i64 %764
  %767 = getelementptr i16, i16* %688, i64 %764
  %768 = bitcast i16* %766 to <8 x i16>*
  %769 = load <8 x i16>, <8 x i16>* %768, align 2, !alias.scope !67
  %770 = getelementptr i16, i16* %766, i64 8
  %771 = bitcast i16* %770 to <8 x i16>*
  %772 = load <8 x i16>, <8 x i16>* %771, align 2, !alias.scope !67
  %773 = bitcast i16* %767 to <8 x i16>*
  store <8 x i16> %769, <8 x i16>* %773, align 2, !alias.scope !70, !noalias !67
  %774 = getelementptr i16, i16* %767, i64 8
  %775 = bitcast i16* %774 to <8 x i16>*
  store <8 x i16> %772, <8 x i16>* %775, align 2, !alias.scope !70, !noalias !67
  %776 = add i64 %764, 16
  %777 = add i64 %765, -1
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %779, label %763, !llvm.loop !73

779:                                              ; preds = %763, %760
  %780 = icmp eq i64 %690, %700
  br i1 %780, label %834, label %781

781:                                              ; preds = %779, %692, %687
  %782 = phi i64 [ %689, %692 ], [ %689, %687 ], [ %701, %779 ]
  %783 = phi i16* [ %661, %692 ], [ %661, %687 ], [ %702, %779 ]
  %784 = phi i16* [ %688, %692 ], [ %688, %687 ], [ %703, %779 ]
  %785 = add i64 %782, -1
  %786 = and i64 %782, 7
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %799, label %788

788:                                              ; preds = %781, %788
  %789 = phi i64 [ %794, %788 ], [ %782, %781 ]
  %790 = phi i16* [ %796, %788 ], [ %783, %781 ]
  %791 = phi i16* [ %795, %788 ], [ %784, %781 ]
  %792 = phi i64 [ %797, %788 ], [ %786, %781 ]
  %793 = load i16, i16* %790, align 2
  store i16 %793, i16* %791, align 2
  %794 = add i64 %789, -1
  %795 = getelementptr inbounds i16, i16* %791, i64 1
  %796 = getelementptr inbounds i16, i16* %790, i64 1
  %797 = add i64 %792, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %788, !llvm.loop !74

799:                                              ; preds = %788, %781
  %800 = phi i64 [ %782, %781 ], [ %794, %788 ]
  %801 = phi i16* [ %783, %781 ], [ %796, %788 ]
  %802 = phi i16* [ %784, %781 ], [ %795, %788 ]
  %803 = icmp ult i64 %785, 7
  br i1 %803, label %834, label %804

804:                                              ; preds = %799, %804
  %805 = phi i64 [ %830, %804 ], [ %800, %799 ]
  %806 = phi i16* [ %832, %804 ], [ %801, %799 ]
  %807 = phi i16* [ %831, %804 ], [ %802, %799 ]
  %808 = load i16, i16* %806, align 2
  store i16 %808, i16* %807, align 2
  %809 = getelementptr inbounds i16, i16* %807, i64 1
  %810 = getelementptr inbounds i16, i16* %806, i64 1
  %811 = load i16, i16* %810, align 2
  store i16 %811, i16* %809, align 2
  %812 = getelementptr inbounds i16, i16* %807, i64 2
  %813 = getelementptr inbounds i16, i16* %806, i64 2
  %814 = load i16, i16* %813, align 2
  store i16 %814, i16* %812, align 2
  %815 = getelementptr inbounds i16, i16* %807, i64 3
  %816 = getelementptr inbounds i16, i16* %806, i64 3
  %817 = load i16, i16* %816, align 2
  store i16 %817, i16* %815, align 2
  %818 = getelementptr inbounds i16, i16* %807, i64 4
  %819 = getelementptr inbounds i16, i16* %806, i64 4
  %820 = load i16, i16* %819, align 2
  store i16 %820, i16* %818, align 2
  %821 = getelementptr inbounds i16, i16* %807, i64 5
  %822 = getelementptr inbounds i16, i16* %806, i64 5
  %823 = load i16, i16* %822, align 2
  store i16 %823, i16* %821, align 2
  %824 = getelementptr inbounds i16, i16* %807, i64 6
  %825 = getelementptr inbounds i16, i16* %806, i64 6
  %826 = load i16, i16* %825, align 2
  store i16 %826, i16* %824, align 2
  %827 = getelementptr inbounds i16, i16* %807, i64 7
  %828 = getelementptr inbounds i16, i16* %806, i64 7
  %829 = load i16, i16* %828, align 2
  store i16 %829, i16* %827, align 2
  %830 = add i64 %805, -8
  %831 = getelementptr inbounds i16, i16* %807, i64 8
  %832 = getelementptr inbounds i16, i16* %806, i64 8
  %833 = icmp eq i64 %830, 0
  br i1 %833, label %834, label %804, !llvm.loop !75

834:                                              ; preds = %799, %804, %779, %656
  %835 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 9
  %836 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 9
  tail call void @_ZNSt3__16vectorIN7content8DropData18FileSystemFileInfoENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.25"* %835, %"class.std::__1::vector.25"* dereferenceable(24) %836)
  %837 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %838 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %837, i8 0, i64 32, i1 false) #10
  %839 = load i8, i8* %838, align 8, !range !76
  %840 = icmp eq i8 %839, 0
  br i1 %840, label %1027, label %841

841:                                              ; preds = %834
  %842 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %843 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %844 = bitcast %"class.std::__1::basic_string"* %842 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %845 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %844, i64 0, i32 1, i32 1
  %846 = load i8, i8* %845, align 1
  %847 = icmp slt i8 %846, 0
  br i1 %847, label %851, label %848

848:                                              ; preds = %841
  %849 = bitcast %"class.std::__1::basic_string"* %843 to i8*
  %850 = bitcast %"class.std::__1::basic_string"* %842 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %849, i8* align 8 %850, i64 24, i1 false) #10
  br label %1026

851:                                              ; preds = %841
  %852 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %842, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load i16*, i16** %852, align 8
  %854 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %855 = load i64, i64* %854, align 8
  %856 = icmp ult i64 %855, 11
  br i1 %856, label %857, label %862

857:                                              ; preds = %851
  %858 = bitcast %"class.std::__1::basic_string"* %843 to i16*
  %859 = trunc i64 %855 to i8
  %860 = bitcast %"class.std::__1::basic_string"* %843 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %861 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %860, i64 0, i32 1, i32 1
  store i8 %859, i8* %861, align 1
  br label %879

862:                                              ; preds = %851
  %863 = icmp ugt i64 %855, 9223372036854775791
  br i1 %863, label %864, label %866

864:                                              ; preds = %862
  %865 = bitcast %"class.std::__1::basic_string"* %843 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %865) #11
  unreachable

866:                                              ; preds = %862
  %867 = add nuw nsw i64 %855, 8
  %868 = and i64 %867, -8
  %869 = icmp slt i64 %868, 0
  br i1 %869, label %870, label %871

870:                                              ; preds = %866
  tail call void @abort() #11
  unreachable

871:                                              ; preds = %866
  %872 = shl i64 %868, 1
  %873 = tail call i8* @_Znwm(i64 %872) #12
  %874 = bitcast i8* %873 to i16*
  %875 = bitcast %"class.std::__1::basic_string"* %843 to i8**
  store i8* %873, i8** %875, align 8
  %876 = or i64 %868, -9223372036854775808
  %877 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %876, i64* %877, align 8
  %878 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %855, i64* %878, align 8
  br label %879

879:                                              ; preds = %871, %857
  %880 = phi i16* [ %858, %857 ], [ %874, %871 ]
  %881 = add nuw nsw i64 %855, 1
  %882 = add i64 %855, 1
  %883 = icmp ult i64 %882, 16
  br i1 %883, label %973, label %884

884:                                              ; preds = %879
  %885 = add i64 %855, 1
  %886 = getelementptr i16, i16* %880, i64 %885
  %887 = getelementptr i16, i16* %853, i64 %885
  %888 = icmp ult i16* %880, %887
  %889 = icmp ult i16* %853, %886
  %890 = and i1 %888, %889
  br i1 %890, label %973, label %891

891:                                              ; preds = %884
  %892 = and i64 %882, -16
  %893 = sub i64 %881, %892
  %894 = getelementptr i16, i16* %853, i64 %892
  %895 = getelementptr i16, i16* %880, i64 %892
  %896 = add i64 %892, -16
  %897 = lshr exact i64 %896, 4
  %898 = add nuw nsw i64 %897, 1
  %899 = and i64 %898, 3
  %900 = icmp ult i64 %896, 48
  br i1 %900, label %952, label %901

901:                                              ; preds = %891
  %902 = sub nsw i64 %898, %899
  br label %903

903:                                              ; preds = %903, %901
  %904 = phi i64 [ 0, %901 ], [ %949, %903 ]
  %905 = phi i64 [ %902, %901 ], [ %950, %903 ]
  %906 = getelementptr i16, i16* %853, i64 %904
  %907 = getelementptr i16, i16* %880, i64 %904
  %908 = bitcast i16* %906 to <8 x i16>*
  %909 = load <8 x i16>, <8 x i16>* %908, align 2, !alias.scope !77
  %910 = getelementptr i16, i16* %906, i64 8
  %911 = bitcast i16* %910 to <8 x i16>*
  %912 = load <8 x i16>, <8 x i16>* %911, align 2, !alias.scope !77
  %913 = bitcast i16* %907 to <8 x i16>*
  store <8 x i16> %909, <8 x i16>* %913, align 2, !alias.scope !80, !noalias !77
  %914 = getelementptr i16, i16* %907, i64 8
  %915 = bitcast i16* %914 to <8 x i16>*
  store <8 x i16> %912, <8 x i16>* %915, align 2, !alias.scope !80, !noalias !77
  %916 = or i64 %904, 16
  %917 = getelementptr i16, i16* %853, i64 %916
  %918 = getelementptr i16, i16* %880, i64 %916
  %919 = bitcast i16* %917 to <8 x i16>*
  %920 = load <8 x i16>, <8 x i16>* %919, align 2, !alias.scope !77
  %921 = getelementptr i16, i16* %917, i64 8
  %922 = bitcast i16* %921 to <8 x i16>*
  %923 = load <8 x i16>, <8 x i16>* %922, align 2, !alias.scope !77
  %924 = bitcast i16* %918 to <8 x i16>*
  store <8 x i16> %920, <8 x i16>* %924, align 2, !alias.scope !80, !noalias !77
  %925 = getelementptr i16, i16* %918, i64 8
  %926 = bitcast i16* %925 to <8 x i16>*
  store <8 x i16> %923, <8 x i16>* %926, align 2, !alias.scope !80, !noalias !77
  %927 = or i64 %904, 32
  %928 = getelementptr i16, i16* %853, i64 %927
  %929 = getelementptr i16, i16* %880, i64 %927
  %930 = bitcast i16* %928 to <8 x i16>*
  %931 = load <8 x i16>, <8 x i16>* %930, align 2, !alias.scope !77
  %932 = getelementptr i16, i16* %928, i64 8
  %933 = bitcast i16* %932 to <8 x i16>*
  %934 = load <8 x i16>, <8 x i16>* %933, align 2, !alias.scope !77
  %935 = bitcast i16* %929 to <8 x i16>*
  store <8 x i16> %931, <8 x i16>* %935, align 2, !alias.scope !80, !noalias !77
  %936 = getelementptr i16, i16* %929, i64 8
  %937 = bitcast i16* %936 to <8 x i16>*
  store <8 x i16> %934, <8 x i16>* %937, align 2, !alias.scope !80, !noalias !77
  %938 = or i64 %904, 48
  %939 = getelementptr i16, i16* %853, i64 %938
  %940 = getelementptr i16, i16* %880, i64 %938
  %941 = bitcast i16* %939 to <8 x i16>*
  %942 = load <8 x i16>, <8 x i16>* %941, align 2, !alias.scope !77
  %943 = getelementptr i16, i16* %939, i64 8
  %944 = bitcast i16* %943 to <8 x i16>*
  %945 = load <8 x i16>, <8 x i16>* %944, align 2, !alias.scope !77
  %946 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %942, <8 x i16>* %946, align 2, !alias.scope !80, !noalias !77
  %947 = getelementptr i16, i16* %940, i64 8
  %948 = bitcast i16* %947 to <8 x i16>*
  store <8 x i16> %945, <8 x i16>* %948, align 2, !alias.scope !80, !noalias !77
  %949 = add i64 %904, 64
  %950 = add i64 %905, -4
  %951 = icmp eq i64 %950, 0
  br i1 %951, label %952, label %903, !llvm.loop !82

952:                                              ; preds = %903, %891
  %953 = phi i64 [ 0, %891 ], [ %949, %903 ]
  %954 = icmp eq i64 %899, 0
  br i1 %954, label %971, label %955

955:                                              ; preds = %952, %955
  %956 = phi i64 [ %968, %955 ], [ %953, %952 ]
  %957 = phi i64 [ %969, %955 ], [ %899, %952 ]
  %958 = getelementptr i16, i16* %853, i64 %956
  %959 = getelementptr i16, i16* %880, i64 %956
  %960 = bitcast i16* %958 to <8 x i16>*
  %961 = load <8 x i16>, <8 x i16>* %960, align 2, !alias.scope !77
  %962 = getelementptr i16, i16* %958, i64 8
  %963 = bitcast i16* %962 to <8 x i16>*
  %964 = load <8 x i16>, <8 x i16>* %963, align 2, !alias.scope !77
  %965 = bitcast i16* %959 to <8 x i16>*
  store <8 x i16> %961, <8 x i16>* %965, align 2, !alias.scope !80, !noalias !77
  %966 = getelementptr i16, i16* %959, i64 8
  %967 = bitcast i16* %966 to <8 x i16>*
  store <8 x i16> %964, <8 x i16>* %967, align 2, !alias.scope !80, !noalias !77
  %968 = add i64 %956, 16
  %969 = add i64 %957, -1
  %970 = icmp eq i64 %969, 0
  br i1 %970, label %971, label %955, !llvm.loop !83

971:                                              ; preds = %955, %952
  %972 = icmp eq i64 %882, %892
  br i1 %972, label %1026, label %973

973:                                              ; preds = %971, %884, %879
  %974 = phi i64 [ %881, %884 ], [ %881, %879 ], [ %893, %971 ]
  %975 = phi i16* [ %853, %884 ], [ %853, %879 ], [ %894, %971 ]
  %976 = phi i16* [ %880, %884 ], [ %880, %879 ], [ %895, %971 ]
  %977 = add i64 %974, -1
  %978 = and i64 %974, 7
  %979 = icmp eq i64 %978, 0
  br i1 %979, label %991, label %980

980:                                              ; preds = %973, %980
  %981 = phi i64 [ %986, %980 ], [ %974, %973 ]
  %982 = phi i16* [ %988, %980 ], [ %975, %973 ]
  %983 = phi i16* [ %987, %980 ], [ %976, %973 ]
  %984 = phi i64 [ %989, %980 ], [ %978, %973 ]
  %985 = load i16, i16* %982, align 2
  store i16 %985, i16* %983, align 2
  %986 = add i64 %981, -1
  %987 = getelementptr inbounds i16, i16* %983, i64 1
  %988 = getelementptr inbounds i16, i16* %982, i64 1
  %989 = add i64 %984, -1
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %980, !llvm.loop !84

991:                                              ; preds = %980, %973
  %992 = phi i64 [ %974, %973 ], [ %986, %980 ]
  %993 = phi i16* [ %975, %973 ], [ %988, %980 ]
  %994 = phi i16* [ %976, %973 ], [ %987, %980 ]
  %995 = icmp ult i64 %977, 7
  br i1 %995, label %1026, label %996

996:                                              ; preds = %991, %996
  %997 = phi i64 [ %1022, %996 ], [ %992, %991 ]
  %998 = phi i16* [ %1024, %996 ], [ %993, %991 ]
  %999 = phi i16* [ %1023, %996 ], [ %994, %991 ]
  %1000 = load i16, i16* %998, align 2
  store i16 %1000, i16* %999, align 2
  %1001 = getelementptr inbounds i16, i16* %999, i64 1
  %1002 = getelementptr inbounds i16, i16* %998, i64 1
  %1003 = load i16, i16* %1002, align 2
  store i16 %1003, i16* %1001, align 2
  %1004 = getelementptr inbounds i16, i16* %999, i64 2
  %1005 = getelementptr inbounds i16, i16* %998, i64 2
  %1006 = load i16, i16* %1005, align 2
  store i16 %1006, i16* %1004, align 2
  %1007 = getelementptr inbounds i16, i16* %999, i64 3
  %1008 = getelementptr inbounds i16, i16* %998, i64 3
  %1009 = load i16, i16* %1008, align 2
  store i16 %1009, i16* %1007, align 2
  %1010 = getelementptr inbounds i16, i16* %999, i64 4
  %1011 = getelementptr inbounds i16, i16* %998, i64 4
  %1012 = load i16, i16* %1011, align 2
  store i16 %1012, i16* %1010, align 2
  %1013 = getelementptr inbounds i16, i16* %999, i64 5
  %1014 = getelementptr inbounds i16, i16* %998, i64 5
  %1015 = load i16, i16* %1014, align 2
  store i16 %1015, i16* %1013, align 2
  %1016 = getelementptr inbounds i16, i16* %999, i64 6
  %1017 = getelementptr inbounds i16, i16* %998, i64 6
  %1018 = load i16, i16* %1017, align 2
  store i16 %1018, i16* %1016, align 2
  %1019 = getelementptr inbounds i16, i16* %999, i64 7
  %1020 = getelementptr inbounds i16, i16* %998, i64 7
  %1021 = load i16, i16* %1020, align 2
  store i16 %1021, i16* %1019, align 2
  %1022 = add i64 %997, -8
  %1023 = getelementptr inbounds i16, i16* %999, i64 8
  %1024 = getelementptr inbounds i16, i16* %998, i64 8
  %1025 = icmp eq i64 %1022, 0
  br i1 %1025, label %1026, label %996, !llvm.loop !85

1026:                                             ; preds = %991, %996, %971, %848
  store i8 1, i8* %837, align 8
  br label %1027

1027:                                             ; preds = %834, %1026
  %1028 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %1029 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1028, i8 0, i64 32, i1 false) #10
  %1030 = load i8, i8* %1029, align 8, !range !76
  %1031 = icmp eq i8 %1030, 0
  br i1 %1031, label %1218, label %1032

1032:                                             ; preds = %1027
  %1033 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %1034 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %1035 = bitcast %"class.std::__1::basic_string"* %1033 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1036 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1035, i64 0, i32 1, i32 1
  %1037 = load i8, i8* %1036, align 1
  %1038 = icmp slt i8 %1037, 0
  br i1 %1038, label %1042, label %1039

1039:                                             ; preds = %1032
  %1040 = bitcast %"class.std::__1::basic_string"* %1034 to i8*
  %1041 = bitcast %"class.std::__1::basic_string"* %1033 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1040, i8* align 8 %1041, i64 24, i1 false) #10
  br label %1217

1042:                                             ; preds = %1032
  %1043 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1033, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1044 = load i16*, i16** %1043, align 8
  %1045 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1046 = load i64, i64* %1045, align 8
  %1047 = icmp ult i64 %1046, 11
  br i1 %1047, label %1048, label %1053

1048:                                             ; preds = %1042
  %1049 = bitcast %"class.std::__1::basic_string"* %1034 to i16*
  %1050 = trunc i64 %1046 to i8
  %1051 = bitcast %"class.std::__1::basic_string"* %1034 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1052 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1051, i64 0, i32 1, i32 1
  store i8 %1050, i8* %1052, align 1
  br label %1070

1053:                                             ; preds = %1042
  %1054 = icmp ugt i64 %1046, 9223372036854775791
  br i1 %1054, label %1055, label %1057

1055:                                             ; preds = %1053
  %1056 = bitcast %"class.std::__1::basic_string"* %1034 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %1056) #11
  unreachable

1057:                                             ; preds = %1053
  %1058 = add nuw nsw i64 %1046, 8
  %1059 = and i64 %1058, -8
  %1060 = icmp slt i64 %1059, 0
  br i1 %1060, label %1061, label %1062

1061:                                             ; preds = %1057
  tail call void @abort() #11
  unreachable

1062:                                             ; preds = %1057
  %1063 = shl i64 %1059, 1
  %1064 = tail call i8* @_Znwm(i64 %1063) #12
  %1065 = bitcast i8* %1064 to i16*
  %1066 = bitcast %"class.std::__1::basic_string"* %1034 to i8**
  store i8* %1064, i8** %1066, align 8
  %1067 = or i64 %1059, -9223372036854775808
  %1068 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1067, i64* %1068, align 8
  %1069 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1046, i64* %1069, align 8
  br label %1070

1070:                                             ; preds = %1062, %1048
  %1071 = phi i16* [ %1049, %1048 ], [ %1065, %1062 ]
  %1072 = add nuw nsw i64 %1046, 1
  %1073 = add i64 %1046, 1
  %1074 = icmp ult i64 %1073, 16
  br i1 %1074, label %1164, label %1075

1075:                                             ; preds = %1070
  %1076 = add i64 %1046, 1
  %1077 = getelementptr i16, i16* %1071, i64 %1076
  %1078 = getelementptr i16, i16* %1044, i64 %1076
  %1079 = icmp ult i16* %1071, %1078
  %1080 = icmp ult i16* %1044, %1077
  %1081 = and i1 %1079, %1080
  br i1 %1081, label %1164, label %1082

1082:                                             ; preds = %1075
  %1083 = and i64 %1073, -16
  %1084 = sub i64 %1072, %1083
  %1085 = getelementptr i16, i16* %1044, i64 %1083
  %1086 = getelementptr i16, i16* %1071, i64 %1083
  %1087 = add i64 %1083, -16
  %1088 = lshr exact i64 %1087, 4
  %1089 = add nuw nsw i64 %1088, 1
  %1090 = and i64 %1089, 3
  %1091 = icmp ult i64 %1087, 48
  br i1 %1091, label %1143, label %1092

1092:                                             ; preds = %1082
  %1093 = sub nsw i64 %1089, %1090
  br label %1094

1094:                                             ; preds = %1094, %1092
  %1095 = phi i64 [ 0, %1092 ], [ %1140, %1094 ]
  %1096 = phi i64 [ %1093, %1092 ], [ %1141, %1094 ]
  %1097 = getelementptr i16, i16* %1044, i64 %1095
  %1098 = getelementptr i16, i16* %1071, i64 %1095
  %1099 = bitcast i16* %1097 to <8 x i16>*
  %1100 = load <8 x i16>, <8 x i16>* %1099, align 2, !alias.scope !86
  %1101 = getelementptr i16, i16* %1097, i64 8
  %1102 = bitcast i16* %1101 to <8 x i16>*
  %1103 = load <8 x i16>, <8 x i16>* %1102, align 2, !alias.scope !86
  %1104 = bitcast i16* %1098 to <8 x i16>*
  store <8 x i16> %1100, <8 x i16>* %1104, align 2, !alias.scope !89, !noalias !86
  %1105 = getelementptr i16, i16* %1098, i64 8
  %1106 = bitcast i16* %1105 to <8 x i16>*
  store <8 x i16> %1103, <8 x i16>* %1106, align 2, !alias.scope !89, !noalias !86
  %1107 = or i64 %1095, 16
  %1108 = getelementptr i16, i16* %1044, i64 %1107
  %1109 = getelementptr i16, i16* %1071, i64 %1107
  %1110 = bitcast i16* %1108 to <8 x i16>*
  %1111 = load <8 x i16>, <8 x i16>* %1110, align 2, !alias.scope !86
  %1112 = getelementptr i16, i16* %1108, i64 8
  %1113 = bitcast i16* %1112 to <8 x i16>*
  %1114 = load <8 x i16>, <8 x i16>* %1113, align 2, !alias.scope !86
  %1115 = bitcast i16* %1109 to <8 x i16>*
  store <8 x i16> %1111, <8 x i16>* %1115, align 2, !alias.scope !89, !noalias !86
  %1116 = getelementptr i16, i16* %1109, i64 8
  %1117 = bitcast i16* %1116 to <8 x i16>*
  store <8 x i16> %1114, <8 x i16>* %1117, align 2, !alias.scope !89, !noalias !86
  %1118 = or i64 %1095, 32
  %1119 = getelementptr i16, i16* %1044, i64 %1118
  %1120 = getelementptr i16, i16* %1071, i64 %1118
  %1121 = bitcast i16* %1119 to <8 x i16>*
  %1122 = load <8 x i16>, <8 x i16>* %1121, align 2, !alias.scope !86
  %1123 = getelementptr i16, i16* %1119, i64 8
  %1124 = bitcast i16* %1123 to <8 x i16>*
  %1125 = load <8 x i16>, <8 x i16>* %1124, align 2, !alias.scope !86
  %1126 = bitcast i16* %1120 to <8 x i16>*
  store <8 x i16> %1122, <8 x i16>* %1126, align 2, !alias.scope !89, !noalias !86
  %1127 = getelementptr i16, i16* %1120, i64 8
  %1128 = bitcast i16* %1127 to <8 x i16>*
  store <8 x i16> %1125, <8 x i16>* %1128, align 2, !alias.scope !89, !noalias !86
  %1129 = or i64 %1095, 48
  %1130 = getelementptr i16, i16* %1044, i64 %1129
  %1131 = getelementptr i16, i16* %1071, i64 %1129
  %1132 = bitcast i16* %1130 to <8 x i16>*
  %1133 = load <8 x i16>, <8 x i16>* %1132, align 2, !alias.scope !86
  %1134 = getelementptr i16, i16* %1130, i64 8
  %1135 = bitcast i16* %1134 to <8 x i16>*
  %1136 = load <8 x i16>, <8 x i16>* %1135, align 2, !alias.scope !86
  %1137 = bitcast i16* %1131 to <8 x i16>*
  store <8 x i16> %1133, <8 x i16>* %1137, align 2, !alias.scope !89, !noalias !86
  %1138 = getelementptr i16, i16* %1131, i64 8
  %1139 = bitcast i16* %1138 to <8 x i16>*
  store <8 x i16> %1136, <8 x i16>* %1139, align 2, !alias.scope !89, !noalias !86
  %1140 = add i64 %1095, 64
  %1141 = add i64 %1096, -4
  %1142 = icmp eq i64 %1141, 0
  br i1 %1142, label %1143, label %1094, !llvm.loop !91

1143:                                             ; preds = %1094, %1082
  %1144 = phi i64 [ 0, %1082 ], [ %1140, %1094 ]
  %1145 = icmp eq i64 %1090, 0
  br i1 %1145, label %1162, label %1146

1146:                                             ; preds = %1143, %1146
  %1147 = phi i64 [ %1159, %1146 ], [ %1144, %1143 ]
  %1148 = phi i64 [ %1160, %1146 ], [ %1090, %1143 ]
  %1149 = getelementptr i16, i16* %1044, i64 %1147
  %1150 = getelementptr i16, i16* %1071, i64 %1147
  %1151 = bitcast i16* %1149 to <8 x i16>*
  %1152 = load <8 x i16>, <8 x i16>* %1151, align 2, !alias.scope !86
  %1153 = getelementptr i16, i16* %1149, i64 8
  %1154 = bitcast i16* %1153 to <8 x i16>*
  %1155 = load <8 x i16>, <8 x i16>* %1154, align 2, !alias.scope !86
  %1156 = bitcast i16* %1150 to <8 x i16>*
  store <8 x i16> %1152, <8 x i16>* %1156, align 2, !alias.scope !89, !noalias !86
  %1157 = getelementptr i16, i16* %1150, i64 8
  %1158 = bitcast i16* %1157 to <8 x i16>*
  store <8 x i16> %1155, <8 x i16>* %1158, align 2, !alias.scope !89, !noalias !86
  %1159 = add i64 %1147, 16
  %1160 = add i64 %1148, -1
  %1161 = icmp eq i64 %1160, 0
  br i1 %1161, label %1162, label %1146, !llvm.loop !92

1162:                                             ; preds = %1146, %1143
  %1163 = icmp eq i64 %1073, %1083
  br i1 %1163, label %1217, label %1164

1164:                                             ; preds = %1162, %1075, %1070
  %1165 = phi i64 [ %1072, %1075 ], [ %1072, %1070 ], [ %1084, %1162 ]
  %1166 = phi i16* [ %1044, %1075 ], [ %1044, %1070 ], [ %1085, %1162 ]
  %1167 = phi i16* [ %1071, %1075 ], [ %1071, %1070 ], [ %1086, %1162 ]
  %1168 = add i64 %1165, -1
  %1169 = and i64 %1165, 7
  %1170 = icmp eq i64 %1169, 0
  br i1 %1170, label %1182, label %1171

1171:                                             ; preds = %1164, %1171
  %1172 = phi i64 [ %1177, %1171 ], [ %1165, %1164 ]
  %1173 = phi i16* [ %1179, %1171 ], [ %1166, %1164 ]
  %1174 = phi i16* [ %1178, %1171 ], [ %1167, %1164 ]
  %1175 = phi i64 [ %1180, %1171 ], [ %1169, %1164 ]
  %1176 = load i16, i16* %1173, align 2
  store i16 %1176, i16* %1174, align 2
  %1177 = add i64 %1172, -1
  %1178 = getelementptr inbounds i16, i16* %1174, i64 1
  %1179 = getelementptr inbounds i16, i16* %1173, i64 1
  %1180 = add i64 %1175, -1
  %1181 = icmp eq i64 %1180, 0
  br i1 %1181, label %1182, label %1171, !llvm.loop !93

1182:                                             ; preds = %1171, %1164
  %1183 = phi i64 [ %1165, %1164 ], [ %1177, %1171 ]
  %1184 = phi i16* [ %1166, %1164 ], [ %1179, %1171 ]
  %1185 = phi i16* [ %1167, %1164 ], [ %1178, %1171 ]
  %1186 = icmp ult i64 %1168, 7
  br i1 %1186, label %1217, label %1187

1187:                                             ; preds = %1182, %1187
  %1188 = phi i64 [ %1213, %1187 ], [ %1183, %1182 ]
  %1189 = phi i16* [ %1215, %1187 ], [ %1184, %1182 ]
  %1190 = phi i16* [ %1214, %1187 ], [ %1185, %1182 ]
  %1191 = load i16, i16* %1189, align 2
  store i16 %1191, i16* %1190, align 2
  %1192 = getelementptr inbounds i16, i16* %1190, i64 1
  %1193 = getelementptr inbounds i16, i16* %1189, i64 1
  %1194 = load i16, i16* %1193, align 2
  store i16 %1194, i16* %1192, align 2
  %1195 = getelementptr inbounds i16, i16* %1190, i64 2
  %1196 = getelementptr inbounds i16, i16* %1189, i64 2
  %1197 = load i16, i16* %1196, align 2
  store i16 %1197, i16* %1195, align 2
  %1198 = getelementptr inbounds i16, i16* %1190, i64 3
  %1199 = getelementptr inbounds i16, i16* %1189, i64 3
  %1200 = load i16, i16* %1199, align 2
  store i16 %1200, i16* %1198, align 2
  %1201 = getelementptr inbounds i16, i16* %1190, i64 4
  %1202 = getelementptr inbounds i16, i16* %1189, i64 4
  %1203 = load i16, i16* %1202, align 2
  store i16 %1203, i16* %1201, align 2
  %1204 = getelementptr inbounds i16, i16* %1190, i64 5
  %1205 = getelementptr inbounds i16, i16* %1189, i64 5
  %1206 = load i16, i16* %1205, align 2
  store i16 %1206, i16* %1204, align 2
  %1207 = getelementptr inbounds i16, i16* %1190, i64 6
  %1208 = getelementptr inbounds i16, i16* %1189, i64 6
  %1209 = load i16, i16* %1208, align 2
  store i16 %1209, i16* %1207, align 2
  %1210 = getelementptr inbounds i16, i16* %1190, i64 7
  %1211 = getelementptr inbounds i16, i16* %1189, i64 7
  %1212 = load i16, i16* %1211, align 2
  store i16 %1212, i16* %1210, align 2
  %1213 = add i64 %1188, -8
  %1214 = getelementptr inbounds i16, i16* %1190, i64 8
  %1215 = getelementptr inbounds i16, i16* %1189, i64 8
  %1216 = icmp eq i64 %1213, 0
  br i1 %1216, label %1217, label %1187, !llvm.loop !94

1217:                                             ; preds = %1182, %1187, %1162, %1039
  store i8 1, i8* %1028, align 8
  br label %1218

1218:                                             ; preds = %1027, %1217
  %1219 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 12
  %1220 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 12
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %1219, %class.GURL* dereferenceable(120) %1220) #10
  %1221 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 13
  %1222 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 13
  %1223 = bitcast %"class.std::__1::basic_string.1"* %1222 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1223, i64 0, i32 1, i32 0
  %1225 = load i8, i8* %1224, align 1
  %1226 = icmp slt i8 %1225, 0
  br i1 %1226, label %1230, label %1227

1227:                                             ; preds = %1218
  %1228 = bitcast %"class.std::__1::basic_string.1"* %1221 to i8*
  %1229 = bitcast %"class.std::__1::basic_string.1"* %1222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1228, i8* align 8 %1229, i64 24, i1 false) #10
  br label %1235

1230:                                             ; preds = %1218
  %1231 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1222, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1232 = load i8*, i8** %1231, align 8
  %1233 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1234 = load i64, i64* %1233, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %1221, i8* %1232, i64 %1234) #10
  br label %1235

1235:                                             ; preds = %1227, %1230
  %1236 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 14
  %1237 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 14
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %1236, %class.GURL* dereferenceable(120) %1237) #10
  %1238 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 15
  %1239 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 15
  %1240 = bitcast %"class.std::__1::basic_string.1"* %1239 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1240, i64 0, i32 1, i32 0
  %1242 = load i8, i8* %1241, align 1
  %1243 = icmp slt i8 %1242, 0
  br i1 %1243, label %1247, label %1244

1244:                                             ; preds = %1235
  %1245 = bitcast %"class.std::__1::basic_string.1"* %1238 to i8*
  %1246 = bitcast %"class.std::__1::basic_string.1"* %1239 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1245, i8* align 8 %1246, i64 24, i1 false) #10
  br label %1252

1247:                                             ; preds = %1235
  %1248 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1239, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1249 = load i8*, i8** %1248, align 8
  %1250 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1251 = load i64, i64* %1250, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %1238, i8* %1249, i64 %1251) #10
  br label %1252

1252:                                             ; preds = %1244, %1247
  %1253 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 16
  %1254 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 16
  %1255 = bitcast %"class.std::__1::basic_string.1"* %1254 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1256 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1255, i64 0, i32 1, i32 0
  %1257 = load i8, i8* %1256, align 1
  %1258 = icmp slt i8 %1257, 0
  br i1 %1258, label %1262, label %1259

1259:                                             ; preds = %1252
  %1260 = bitcast %"class.std::__1::basic_string.1"* %1253 to i8*
  %1261 = bitcast %"class.std::__1::basic_string.1"* %1254 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1260, i8* align 8 %1261, i64 24, i1 false) #10
  br label %1267

1262:                                             ; preds = %1252
  %1263 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1264 = load i8*, i8** %1263, align 8
  %1265 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1266 = load i64, i64* %1265, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %1253, i8* %1264, i64 %1266) #10
  br label %1267

1267:                                             ; preds = %1259, %1262
  %1268 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 17
  %1269 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1268, i64 0, i32 0
  %1270 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 17, i32 0, i32 3
  %1271 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 17, i32 0, i32 3
  %1272 = bitcast %"class.std::__1::__compressed_pair.49"* %1271 to i32*
  %1273 = bitcast %"class.std::__1::__compressed_pair.49"* %1270 to i32*
  %1274 = bitcast %"class.std::__1::unordered_map"* %1268 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1274, i8 0, i64 32, i1 false) #10
  %1275 = load i32, i32* %1272, align 8
  store i32 %1275, i32* %1273, align 8
  %1276 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1277 = load i64, i64* %1276, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %1269, i64 %1277) #10
  %1278 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %1279 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %1278, align 8
  %1280 = icmp eq %"struct.std::__1::__hash_node_base"* %1279, null
  br i1 %1280, label %1292, label %1281

1281:                                             ; preds = %1267
  %1282 = ptrtoint %"struct.std::__1::__hash_node_base"* %1279 to i64
  br label %1283

1283:                                             ; preds = %1283, %1281
  %1284 = phi i64 [ %1282, %1281 ], [ %1290, %1283 ]
  %1285 = inttoptr i64 %1284 to %"struct.std::__1::__hash_node"*
  %1286 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1285, i64 0, i32 2, i32 0
  %1287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1286, i64 0, i32 0
  %1288 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %1269, %"class.std::__1::basic_string"* dereferenceable(24) %1287, %"struct.std::__1::pair"* dereferenceable(48) %1286) #10
  %1289 = inttoptr i64 %1284 to i64*
  %1290 = load i64, i64* %1289, align 8
  %1291 = icmp eq i64 %1290, 0
  br i1 %1291, label %1292, label %1283

1292:                                             ; preds = %1283, %1267
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content8DropData18FileSystemFileInfoENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.25"*, %"class.std::__1::vector.25"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.25"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 152
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %62, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 121360158379668102
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #12
  %18 = bitcast i8* %17 to %"struct.content::DropData::FileSystemFileInfo"*
  %19 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.25"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.content::DropData::FileSystemFileInfo"* %22, %"struct.content::DropData::FileSystemFileInfo"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %24, align 8
  %26 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %4, align 8
  %27 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %25, %26
  br i1 %29, label %60, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.content::DropData::FileSystemFileInfo"*
  br label %32

32:                                               ; preds = %54, %30
  %33 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %56, %54 ], [ %31, %30 ]
  %34 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %55, %54 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %33, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %35, %class.GURL* dereferenceable(120) %36) #10
  %37 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %33, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %33, i64 0, i32 2
  %41 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string.1"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %32
  %47 = bitcast %"class.std::__1::basic_string.1"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_string.1"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #10
  br label %54

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %40, i8* %51, i64 %53) #10
  br label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 1
  %56 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %33, i64 1
  %57 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %55, %26
  br i1 %57, label %58, label %32

58:                                               ; preds = %54
  %59 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %56 to i64
  br label %60

60:                                               ; preds = %16, %58
  %61 = phi i64 [ %28, %16 ], [ %59, %58 ]
  store i64 %61, i64* %27, align 8
  br label %62

62:                                               ; preds = %2, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropDataD2Ev(%"struct.content::DropData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 2
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %6, i64 5
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %5
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %15, %5
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %9 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %23, %18
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %30, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 16
  %37 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %35, %41
  %45 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 15
  %46 = bitcast %"class.std::__1::basic_string.1"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %44, %50
  %54 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 14
  tail call void @_ZN4GURLD1Ev(%class.GURL* %54) #10
  %55 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 13
  %56 = bitcast %"class.std::__1::basic_string.1"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %53, %60
  %64 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 12
  tail call void @_ZN4GURLD1Ev(%class.GURL* %64) #10
  %65 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !76
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = bitcast %"class.std::__1::basic_string"* %69 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %74, %68
  store i8 0, i8* %65, align 8
  br label %78

78:                                               ; preds = %63, %77
  %79 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !76
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::basic_string"* %83 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %88, %82
  store i8 0, i8* %79, align 8
  br label %92

92:                                               ; preds = %78, %91
  %93 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 9
  %94 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %93, i64 0, i32 0, i32 0
  %95 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %94, align 8
  %96 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %95, null
  br i1 %96, label %121, label %97

97:                                               ; preds = %92
  %98 = bitcast %"struct.content::DropData::FileSystemFileInfo"* %95 to i8*
  %99 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 9, i32 0, i32 1
  %100 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %99, align 8
  %101 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %100, %95
  br i1 %101, label %119, label %102

102:                                              ; preds = %97, %113
  %103 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %104, %113 ], [ %100, %97 ]
  %104 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %103, i64 -1
  %105 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %103, i64 -1, i32 2
  %106 = bitcast %"class.std::__1::basic_string.1"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  tail call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %110, %102
  %114 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %104, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %114) #10
  %115 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %104, %95
  br i1 %115, label %116, label %102

116:                                              ; preds = %113
  %117 = bitcast %"class.std::__1::vector.25"* %93 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %97
  %120 = phi i8* [ %118, %116 ], [ %98, %97 ]
  store %"struct.content::DropData::FileSystemFileInfo"* %95, %"struct.content::DropData::FileSystemFileInfo"** %99, align 8
  tail call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %92, %119
  %122 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 8
  %123 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %123, i64 0, i32 1, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = bitcast %"class.std::__1::basic_string"* %122 to i8**
  %129 = load i8*, i8** %128, align 8
  tail call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %121, %127
  %131 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 7
  %132 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %132, align 8
  %134 = icmp eq %"class.std::__1::basic_string"* %133, null
  br i1 %134, label %157, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  %137 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 7, i32 0, i32 1
  %138 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %137, align 8
  %139 = icmp eq %"class.std::__1::basic_string"* %138, %133
  br i1 %139, label %155, label %140

140:                                              ; preds = %135, %150
  %141 = phi %"class.std::__1::basic_string"* [ %142, %150 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 -1
  %143 = bitcast %"class.std::__1::basic_string"* %142 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %143, i64 0, i32 1, i32 1
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::basic_string"* %142 to i8**
  %149 = load i8*, i8** %148, align 8
  tail call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %147, %140
  %151 = icmp eq %"class.std::__1::basic_string"* %142, %133
  br i1 %151, label %152, label %140

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::vector.18"* %131 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  store %"class.std::__1::basic_string"* %133, %"class.std::__1::basic_string"** %137, align 8
  tail call void @_ZdlPv(i8* %156) #12
  br label %157

157:                                              ; preds = %130, %155
  %158 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 6
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %158, i64 0, i32 0, i32 0
  %160 = load %"struct.ui::FileInfo"*, %"struct.ui::FileInfo"** %159, align 8
  %161 = icmp eq %"struct.ui::FileInfo"* %160, null
  br i1 %161, label %176, label %162

162:                                              ; preds = %157
  %163 = bitcast %"struct.ui::FileInfo"* %160 to i8*
  %164 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 6, i32 0, i32 1
  %165 = load %"struct.ui::FileInfo"*, %"struct.ui::FileInfo"** %164, align 8
  %166 = icmp eq %"struct.ui::FileInfo"* %165, %160
  br i1 %166, label %174, label %167

167:                                              ; preds = %162, %167
  %168 = phi %"struct.ui::FileInfo"* [ %169, %167 ], [ %165, %162 ]
  %169 = getelementptr inbounds %"struct.ui::FileInfo", %"struct.ui::FileInfo"* %168, i64 -1
  tail call void @_ZN2ui8FileInfoD1Ev(%"struct.ui::FileInfo"* %169) #10
  %170 = icmp eq %"struct.ui::FileInfo"* %169, %160
  br i1 %170, label %171, label %167

171:                                              ; preds = %167
  %172 = bitcast %"class.std::__1::vector"* %158 to i8**
  %173 = load i8*, i8** %172, align 8
  br label %174

174:                                              ; preds = %171, %162
  %175 = phi i8* [ %173, %171 ], [ %163, %162 ]
  store %"struct.ui::FileInfo"* %160, %"struct.ui::FileInfo"** %164, align 8
  tail call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %157, %174
  %177 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 4
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %178, i64 0, i32 1, i32 1
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %176
  %183 = bitcast %"class.std::__1::basic_string"* %177 to i8**
  %184 = load i8*, i8** %183, align 8
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %176, %182
  %186 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 3
  %187 = bitcast %"class.std::__1::basic_string"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %187, i64 0, i32 1, i32 1
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %185
  %192 = bitcast %"class.std::__1::basic_string"* %186 to i8**
  %193 = load i8*, i8** %192, align 8
  tail call void @_ZdlPv(i8* %193) #12
  br label %194

194:                                              ; preds = %185, %191
  %195 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %195) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content8DropData35GetSafeFilenameForImageFileContentsEv(%"class.absl::optional.52"* noalias sret, %"struct.content::DropData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = alloca %"class.base::FilePath", align 8
  %10 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 14
  %12 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 16
  %13 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  %14 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #10
  %15 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %16 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #10
  %17 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10
  call void @_ZN3net16GenerateFileNameERK4GURLRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_SB_SB_(%"class.base::FilePath"* nonnull sret %3, %class.GURL* dereferenceable(120) %11, %"class.std::__1::basic_string.1"* dereferenceable(24) %12, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7) #10
  %18 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %26 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %25, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %34 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  %42 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %50 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #10
  %51 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #10
  %52 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 15
  %53 = call zeroext i1 @_ZN3net33GetWellKnownMimeTypeFromExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string.1"* dereferenceable(24) %52, %"class.std::__1::basic_string.1"* nonnull %8) #10
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %84

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = load i8*, i8** %51, align 8
  %63 = select i1 %61, i8* %62, i8* %50
  %64 = load i64, i64* %57, align 8
  %65 = zext i8 %60 to i64
  %66 = select i1 %61, i64 %64, i64 %65
  %67 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %63, i64 %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i32 1) #10
  br i1 %67, label %68, label %84

68:                                               ; preds = %56
  %69 = bitcast %"class.base::FilePath"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #10
  %70 = bitcast %"class.std::__1::basic_string.1"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string.1"* %52 to i8*
  %77 = select i1 %73, i8* %75, i8* %76
  %78 = getelementptr inbounds %"struct.content::DropData", %"struct.content::DropData"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %72 to i64
  %81 = select i1 %73, i64 %79, i64 %80
  call void @_ZNK4base8FilePath16ReplaceExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %9, %"class.base::FilePath"* nonnull %3, i8* %77, i64 %81) #10
  %82 = getelementptr inbounds %"class.absl::optional.52", %"class.absl::optional.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %82, align 8
  %83 = getelementptr inbounds %"class.absl::optional.52", %"class.absl::optional.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %83, %"class.base::FilePath"* nonnull dereferenceable(24) %9) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #10
  br label %89

84:                                               ; preds = %54, %56
  %85 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %55, %54 ], [ %58, %56 ]
  %86 = getelementptr inbounds %"class.absl::optional.52", %"class.absl::optional.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.absl::optional.52", %"class.absl::optional.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %88 = bitcast %union.anon.56* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #10
  br label %89

89:                                               ; preds = %84, %68
  %90 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %85, %84 ], [ %58, %68 ]
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %89, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net16GenerateFileNameERK4GURLRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_SB_SB_(%"class.base::FilePath"* sret, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN3net33GetWellKnownMimeTypeFromExtensionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

declare void @_ZNK4base8FilePath16ReplaceExtensionENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content8DropData18FileSystemFileInfo28WriteFileSystemFilesToPickleERKNSt3__16vectorIS1_NS2_9allocatorIS1_EEEEPN4base6PickleE(%"class.std::__1::vector.25"* nocapture readonly dereferenceable(24), %"class.base::Pickle"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 152
  %14 = trunc i64 %13 to i32
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  store i32 %14, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %17 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %16, align 8
  %18 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %7, align 8
  %19 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %17, %18
  br i1 %19, label %28, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %24 = bitcast i64* %4 to i8*
  %25 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  br label %29

28:                                               ; preds = %29, %2
  ret void

29:                                               ; preds = %20, %29
  %30 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %17, %20 ], [ %60, %29 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %31 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %30, i64 0, i32 0
  %32 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL* %31) #10
  %33 = bitcast %"class.std::__1::basic_string.1"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string.1"* %32 to i8*
  %40 = select i1 %36, i8* %38, i8* %39
  store i8* %40, i8** %22, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %35 to i64
  %44 = select i1 %36, i64 %42, i64 %43
  store i64 %44, i64* %23, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  %45 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %30, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store i64 %46, i64* %4, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  %47 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %30, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_string.1"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string.1"* %47 to i8*
  %55 = select i1 %51, i8* %53, i8* %54
  store i8* %55, i8** %26, align 8
  %56 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %50 to i64
  %59 = select i1 %51, i64 %57, i64 %58
  store i64 %59, i64* %27, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  %60 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %30, i64 1
  %61 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %60, %18
  br i1 %61, label %28, label %29
}

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content8DropData18FileSystemFileInfo29ReadFileSystemFilesFromPickleERKN4base6PickleEPNSt3__16vectorIS1_NS6_9allocatorIS1_EEEE(%"class.base::Pickle"* dereferenceable(40), %"class.std::__1::vector.25"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::PickleIterator", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %class.GURL, align 8
  %9 = bitcast %"class.base::PickleIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = bitcast %"class.base::PickleIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %3, %"class.base::Pickle"* dereferenceable(40) %0) #10
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  store i32 0, i32* %4, align 4
  %12 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %3, i32* nonnull %4) #10
  br i1 %12, label %13, label %134

13:                                               ; preds = %2
  %14 = load i32, i32* %4, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 1
  %17 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.25"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 152
  %23 = icmp ult i64 %22, %15
  %24 = inttoptr i64 %20 to %"struct.content::DropData::FileSystemFileInfo"*
  %25 = inttoptr i64 %18 to %"struct.content::DropData::FileSystemFileInfo"*
  br i1 %23, label %26, label %28

26:                                               ; preds = %13
  %27 = sub nsw i64 %15, %22
  call void @_ZNSt3__16vectorIN7content8DropData18FileSystemFileInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.25"* %1, i64 %27) #10
  br label %48

28:                                               ; preds = %13
  %29 = icmp ugt i64 %22, %15
  br i1 %29, label %30, label %48

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %24, i64 %15
  %32 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %31, %25
  br i1 %32, label %47, label %33

33:                                               ; preds = %30, %44
  %34 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %35, %44 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 -1
  %36 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %34, i64 -1, i32 2
  %37 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %41, %33
  %45 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %35, i64 0, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %45) #10
  %46 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %35, %31
  br i1 %46, label %47, label %33

47:                                               ; preds = %44, %30
  store %"struct.content::DropData::FileSystemFileInfo"* %31, %"struct.content::DropData::FileSystemFileInfo"** %16, align 8
  br label %48

48:                                               ; preds = %26, %28, %47
  %49 = load i32, i32* %4, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %134, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  %53 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast i64* %6 to i8*
  %56 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %57 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %class.GURL* %8 to i8*
  %60 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 0, i32 1
  %63 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  br label %70

66:                                               ; preds = %131
  %67 = load i32, i32* %4, align 4
  %68 = zext i32 %67 to i64
  %69 = icmp ult i64 %133, %68
  br i1 %69, label %70, label %134

70:                                               ; preds = %51, %66
  %71 = phi i64 [ 0, %51 ], [ %133, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  store i64 0, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #10
  %72 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %3, %"class.std::__1::basic_string.1"* nonnull %5) #10
  br i1 %72, label %73, label %120

73:                                               ; preds = %70
  %74 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* nonnull %3, i64* nonnull %6) #10
  br i1 %74, label %75, label %120

75:                                               ; preds = %73
  %76 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %3, %"class.std::__1::basic_string.1"* nonnull %7) #10
  br i1 %76, label %77, label %120

77:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 120, i1 false)
  %78 = load i8, i8* %61, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i8*, i8** %53, align 8
  %81 = select i1 %79, i8* %80, i8* %52
  %82 = load i64, i64* %54, align 8
  %83 = zext i8 %78 to i64
  %84 = select i1 %79, i64 %82, i64 %83
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %8, i8* %81, i64 %84) #10
  %85 = load i8, i8* %62, align 8, !range !76
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %118, label %87

87:                                               ; preds = %77
  %88 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %63, align 8
  %89 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %88, i64 %71, i32 0
  %90 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %89, %class.GURL* nonnull dereferenceable(120) %8) #10
  %91 = load i64, i64* %6, align 8
  %92 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %63, align 8
  %93 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %92, i64 %71, i32 1
  store i64 %91, i64* %93, align 8
  %94 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %63, align 8
  %95 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %94, i64 %71, i32 2
  %96 = icmp eq %"class.std::__1::basic_string.1"* %95, %7
  br i1 %96, label %118, label %97

97:                                               ; preds = %87
  %98 = bitcast %"class.std::__1::basic_string.1"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = load i8, i8* %65, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %101, label %111, label %104

104:                                              ; preds = %97
  br i1 %103, label %107, label %105

105:                                              ; preds = %104
  %106 = bitcast %"class.std::__1::basic_string.1"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %56, i64 24, i1 false) #10
  br label %118

107:                                              ; preds = %104
  %108 = load i8*, i8** %57, align 8
  %109 = load i64, i64* %58, align 8
  %110 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %95, i8* %108, i64 %109) #10
  br label %118

111:                                              ; preds = %97
  %112 = load i8*, i8** %57, align 8
  %113 = load i64, i64* %58, align 8
  %114 = zext i8 %102 to i64
  %115 = select i1 %103, i8* %112, i8* %56
  %116 = select i1 %103, i64 %113, i64 %114
  %117 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %95, i8* %115, i64 %116) #10
  br label %118

118:                                              ; preds = %77, %111, %107, %105, %87
  %119 = phi i32 [ 1, %77 ], [ 0, %87 ], [ 0, %105 ], [ 0, %107 ], [ 0, %111 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %59) #10
  br label %120

120:                                              ; preds = %70, %73, %75, %118
  %121 = phi i32 [ %119, %118 ], [ 1, %75 ], [ 1, %73 ], [ 1, %70 ]
  %122 = load i8, i8* %65, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %120
  %125 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %120, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %127 = load i8, i8* %61, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %126, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %132 = icmp eq i32 %121, 0
  %133 = add nuw nsw i64 %71, 1
  br i1 %132, label %66, label %134

134:                                              ; preds = %66, %131, %48, %2
  %135 = phi i1 [ false, %2 ], [ true, %48 ], [ true, %66 ], [ false, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret i1 %135
}

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string.1"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"*, i64*) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #1

declare void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !95
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !95
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !98, !noalias !95
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !98, !noalias !95
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !95
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !95
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !98, !noalias !95
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !98, !noalias !95
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !95
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !95
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !98, !noalias !95
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !98, !noalias !95
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !95
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !95
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !98, !noalias !95
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !98, !noalias !95
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !100

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !95
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !95
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !98, !noalias !95
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !98, !noalias !95
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !101

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !102

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !103

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !104

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !105

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !106

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !108
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !108
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !111, !noalias !108
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !111, !noalias !108
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !108
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !108
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !111, !noalias !108
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !111, !noalias !108
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !108
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !108
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !111, !noalias !108
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !111, !noalias !108
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !108
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !108
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !111, !noalias !108
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !111, !noalias !108
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !113

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !108
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !108
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !111, !noalias !108
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !111, !noalias !108
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !114

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !115

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !116

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2ui8FileInfoD1Ev(%"struct.ui::FileInfo"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !117
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !117
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !117
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %177, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !118

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %185, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !117
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %185, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %171
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %175, %171 ]
  %81 = phi i64 [ %71, %77 ], [ %173, %171 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %172, %171 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %157, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = icmp eq i64 %114, 0
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16**
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i16*
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %171

119:                                              ; preds = %104, %153
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %155, %153 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %153 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %123, i64 0, i32 1, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %157

133:                                              ; preds = %119
  br i1 %115, label %153, label %134

134:                                              ; preds = %133
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i16**
  %136 = load i16*, i16** %135, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i16*
  %138 = select i1 %126, i16* %136, i16* %137
  %139 = load i16*, i16** %116, align 8
  %140 = select i1 %109, i16* %139, i16* %117
  br label %141

141:                                              ; preds = %148, %134
  %142 = phi i64 [ %149, %148 ], [ %114, %134 ]
  %143 = phi i16* [ %151, %148 ], [ %138, %134 ]
  %144 = phi i16* [ %150, %148 ], [ %140, %134 ]
  %145 = load i16, i16* %144, align 2
  %146 = load i16, i16* %143, align 2
  %147 = icmp eq i16 %146, %145
  br i1 %147, label %148, label %157

148:                                              ; preds = %141
  %149 = add i64 %142, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %143, i64 1
  %152 = icmp eq i64 %149, 0
  br i1 %152, label %153, label %141

153:                                              ; preds = %148, %133
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, align 8
  %156 = icmp eq %"struct.std::__1::__hash_node_base"* %155, null
  br i1 %156, label %157, label %119

157:                                              ; preds = %153, %119, %141, %100
  %158 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %141 ], [ %120, %153 ], [ %121, %119 ]
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %160, i64* %161, align 8
  %162 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, i64 %93
  %164 = bitcast %"struct.std::__1::__hash_node_base"** %163 to i64**
  %165 = load i64*, i64** %164, align 8
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %159, align 8
  %167 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %167, i64 %93
  %169 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %169, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %170, align 8
  br label %171

171:                                              ; preds = %92, %157, %118
  %172 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %157 ], [ %80, %92 ]
  %173 = phi i64 [ %93, %118 ], [ %81, %157 ], [ %81, %92 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %172, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base"* %175, null
  br i1 %176, label %185, label %79

177:                                              ; preds = %2
  %178 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %178, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"** %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = bitcast %"struct.std::__1::__hash_node_base"** %179 to i8*
  tail call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %177, %181
  %184 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %184, align 8
  br label %185

185:                                              ; preds = %171, %70, %35, %183
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_4pairIKS7_S7_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::pair"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i16* %10, i16* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #10
  %18 = bitcast i16* %15 to i8*
  %19 = shl nuw i64 %16, 1
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %18, i64 %19) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #10
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %105, label %24

24:                                               ; preds = %3
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #10, !range !117
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %105, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %105, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %6, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %11, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i16*, i16** %9, align 8
  %53 = select i1 %48, i16* %52, i16* %13
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %101
  %56 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %103, %101 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %105

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %101

83:                                               ; preds = %71
  br i1 %54, label %191, label %84

84:                                               ; preds = %83
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i16**
  %86 = load i16*, i16** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i16*
  %88 = select i1 %76, i16* %86, i16* %87
  br label %89

89:                                               ; preds = %96, %84
  %90 = phi i64 [ %97, %96 ], [ %51, %84 ]
  %91 = phi i16* [ %99, %96 ], [ %53, %84 ]
  %92 = phi i16* [ %98, %96 ], [ %88, %84 ]
  %93 = load i16, i16* %92, align 2
  %94 = load i16, i16* %91, align 2
  %95 = icmp eq i16 %94, %93
  br i1 %95, label %96, label %101

96:                                               ; preds = %89
  %97 = add i64 %90, -1
  %98 = getelementptr inbounds i16, i16* %92, i64 1
  %99 = getelementptr inbounds i16, i16* %91, i64 1
  %100 = icmp eq i64 %97, 0
  br i1 %100, label %191, label %89

101:                                              ; preds = %89, %71
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base"* %103, null
  br i1 %104, label %105, label %55

105:                                              ; preds = %68, %101, %41, %34, %3
  %106 = phi i64 [ %35, %34 ], [ -6148914691236517206, %3 ], [ %35, %41 ], [ %35, %101 ], [ %35, %68 ]
  %107 = call i8* @_Znwm(i64 64) #12, !noalias !119
  %108 = getelementptr inbounds i8, i8* %107, i64 16
  %109 = bitcast i8* %108 to %"struct.std::__1::pair"*
  call void @_ZNSt3__14pairIKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES6_EC2ERKS8_(%"struct.std::__1::pair"* %109, %"struct.std::__1::pair"* dereferenceable(48) %2) #10, !noalias !119
  %110 = getelementptr inbounds i8, i8* %107, i64 8
  %111 = bitcast i8* %110 to i64*
  store i64 %20, i64* %111, align 8, !noalias !119
  %112 = bitcast i8* %107 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %112, align 8, !noalias !119
  %113 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 1
  %116 = uitofp i64 %115 to float
  %117 = uitofp i64 %22 to float
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %119 = load float, float* %118, align 4
  %120 = fmul float %119, %117
  %121 = fcmp olt float %120, %116
  %122 = or i1 %23, %121
  br i1 %122, label %123, label %146

123:                                              ; preds = %105
  %124 = shl i64 %22, 1
  %125 = icmp ult i64 %22, 3
  %126 = call i64 @llvm.ctpop.i64(i64 %22) #10, !range !117
  %127 = icmp ugt i64 %126, 1
  %128 = or i1 %125, %127
  %129 = zext i1 %128 to i64
  %130 = or i64 %124, %129
  %131 = fdiv float %116, %119
  %132 = call float @llvm.ceil.f32(float %131) #10
  %133 = fptoui float %132 to i64
  %134 = icmp ult i64 %130, %133
  %135 = select i1 %134, i64 %133, i64 %130
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %135)
  %136 = load i64, i64* %21, align 8
  %137 = call i64 @llvm.ctpop.i64(i64 %136) #10, !range !117
  %138 = icmp ugt i64 %137, 1
  br i1 %138, label %142, label %139

139:                                              ; preds = %123
  %140 = add i64 %136, -1
  %141 = and i64 %140, %20
  br label %146

142:                                              ; preds = %123
  %143 = icmp ult i64 %20, %136
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = urem i64 %20, %136
  br label %146

146:                                              ; preds = %144, %142, %139, %105
  %147 = phi i64 [ %22, %105 ], [ %136, %139 ], [ %136, %142 ], [ %136, %144 ]
  %148 = phi i64 [ %106, %105 ], [ %141, %139 ], [ %20, %142 ], [ %145, %144 ]
  %149 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, i64 %148
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %154, label %180

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast i8* %107 to i64*
  store i64 %157, i64* %158, align 8
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i8**
  store i8* %107, i8** %159, align 8
  store %"struct.std::__1::__hash_node_base"* %155, %"struct.std::__1::__hash_node_base"** %151, align 8
  %160 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base"* %160, null
  br i1 %161, label %187, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %160, i64 1
  %164 = bitcast %"struct.std::__1::__hash_node_base"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = call i64 @llvm.ctpop.i64(i64 %147) #10, !range !117
  %167 = icmp ugt i64 %166, 1
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = add i64 %147, -1
  %170 = and i64 %165, %169
  br label %175

171:                                              ; preds = %162
  %172 = icmp ult i64 %165, %147
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = urem i64 %165, %147
  br label %175

175:                                              ; preds = %168, %171, %173
  %176 = phi i64 [ %170, %168 ], [ %174, %173 ], [ %165, %171 ]
  %177 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %149, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, i64 %176
  %179 = bitcast %"struct.std::__1::__hash_node_base"** %178 to i8**
  br label %185

180:                                              ; preds = %146
  %181 = bitcast %"struct.std::__1::__hash_node_base"* %152 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast i8* %107 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"struct.std::__1::__hash_node_base"* %152 to i8**
  br label %185

185:                                              ; preds = %175, %180
  %186 = phi i8** [ %184, %180 ], [ %179, %175 ]
  store i8* %107, i8** %186, align 8
  br label %187

187:                                              ; preds = %185, %154
  %188 = bitcast i8* %107 to %"struct.std::__1::__hash_node_base"*
  %189 = load i64, i64* %113, align 8
  %190 = add i64 %189, 1
  store i64 %190, i64* %113, align 8
  br label %191

191:                                              ; preds = %83, %96, %187
  %192 = phi i8 [ 1, %187 ], [ 0, %96 ], [ 0, %83 ]
  %193 = phi %"struct.std::__1::__hash_node_base"* [ %188, %187 ], [ %56, %96 ], [ %56, %83 ]
  %194 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %193, 0
  %195 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %194, i8 %192, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %195
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #9 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14pairIKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES6_EC2ERKS8_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.std::__1::pair"* %0 to i8*
  %9 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.std::__1::pair"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.std::__1::pair"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.std::__1::pair"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #11
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.std::__1::pair"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !122
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !122
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !125, !noalias !122
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !125, !noalias !122
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !122
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !122
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !125, !noalias !122
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !125, !noalias !122
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !122
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !122
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !125, !noalias !122
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !125, !noalias !122
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !122
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !122
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !125, !noalias !122
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !125, !noalias !122
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !127

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !122
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !122
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !125, !noalias !122
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !125, !noalias !122
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !128

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !129

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !130

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #10
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #11
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #11
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #12
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !131
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !131
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !134, !noalias !131
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !134, !noalias !131
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !131
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !131
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !134, !noalias !131
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !134, !noalias !131
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !131
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !131
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !134, !noalias !131
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !134, !noalias !131
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !131
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !131
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !134, !noalias !131
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !134, !noalias !131
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !136

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !131
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !131
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !134, !noalias !131
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !134, !noalias !131
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !137

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !138

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !139

370:                                              ; preds = %335, %340, %315, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content8DropData18FileSystemFileInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.25"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.content::DropData::FileSystemFileInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 152
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.content::DropData::FileSystemFileInfo"*
  %14 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %26, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %14 to i64
  br label %26

18:                                               ; preds = %12, %18
  %19 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %24, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.content::DropData::FileSystemFileInfo"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 152, i1 false) #10
  %21 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %19, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %21) #10
  %22 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %19, i64 0, i32 1
  %23 = bitcast i64* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #10
  %24 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %19, i64 1
  %25 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %24, %14
  br i1 %25, label %16, label %18

26:                                               ; preds = %12, %16
  %27 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %120

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 152
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 121360158379668102
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #11
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 152
  %40 = icmp ult i64 %39, 60680079189834051
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 121360158379668102, %37 ]
  %48 = mul i64 %47, 152
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.content::DropData::FileSystemFileInfo"*
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %53, i64 %32
  %55 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %54 to i64
  %56 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %53, i64 %52
  %57 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %54, i64 %1
  br label %58

58:                                               ; preds = %51, %58
  %59 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %65, %58 ], [ %54, %51 ]
  %60 = phi i64 [ %66, %58 ], [ %55, %51 ]
  %61 = inttoptr i64 %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 152, i1 false) #10
  %62 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %59, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %62) #10
  %63 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %59, i64 0, i32 1
  %64 = bitcast i64* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 32, i1 false) #10
  %65 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %59, i64 1
  %66 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %65 to i64
  %67 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %57, %65
  br i1 %67, label %68, label %58

68:                                               ; preds = %58
  %69 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %56 to i64
  %70 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %57 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %71, align 8
  %73 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %6, align 8
  %74 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %72 to i64
  br label %96

77:                                               ; preds = %68, %77
  %78 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %90, %77 ], [ %54, %68 ]
  %79 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %80, %77 ], [ %73, %68 ]
  %80 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %78, i64 -1, i32 0
  %82 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %80, i64 0, i32 0
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %81, %class.GURL* dereferenceable(120) %82) #10
  %83 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %78, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %79, i64 -1, i32 1
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %83, align 8
  %86 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %78, i64 -1, i32 2
  %87 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %79, i64 -1, i32 2
  %88 = bitcast %"class.std::__1::basic_string.1"* %86 to i8*
  %89 = bitcast %"class.std::__1::basic_string.1"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #10
  %90 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %78, i64 -1
  %91 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %80, %72
  br i1 %91, label %92, label %77

92:                                               ; preds = %77
  %93 = ptrtoint %"struct.content::DropData::FileSystemFileInfo"* %90 to i64
  %94 = load i64, i64* %29, align 8
  %95 = load %"struct.content::DropData::FileSystemFileInfo"*, %"struct.content::DropData::FileSystemFileInfo"** %6, align 8
  br label %96

96:                                               ; preds = %75, %92
  %97 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %72, %75 ], [ %95, %92 ]
  %98 = phi i64 [ %55, %75 ], [ %93, %92 ]
  %99 = phi i64 [ %76, %75 ], [ %94, %92 ]
  store i64 %98, i64* %29, align 8
  store i64 %70, i64* %7, align 8
  store i64 %69, i64* %4, align 8
  %100 = inttoptr i64 %99 to %"struct.content::DropData::FileSystemFileInfo"*
  %101 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %97, %100
  br i1 %101, label %116, label %102

102:                                              ; preds = %96, %113
  %103 = phi %"struct.content::DropData::FileSystemFileInfo"* [ %104, %113 ], [ %97, %96 ]
  %104 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %103, i64 -1
  %105 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %103, i64 -1, i32 2
  %106 = bitcast %"class.std::__1::basic_string.1"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  tail call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %110, %102
  %114 = getelementptr inbounds %"struct.content::DropData::FileSystemFileInfo", %"struct.content::DropData::FileSystemFileInfo"* %104, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %114) #10
  %115 = icmp eq %"struct.content::DropData::FileSystemFileInfo"* %104, %100
  br i1 %115, label %116, label %102

116:                                              ; preds = %113, %96
  %117 = icmp eq i64 %99, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %118, %116, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !8}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !8}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !8}
!64 = distinct !{!64, !10}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !8}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !8}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !8}
!76 = !{i8 0, i8 2}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !8}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !8}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !8}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !10}
!94 = distinct !{!94, !8}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !8}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !10}
!103 = distinct !{!103, !8}
!104 = distinct !{!104, !8}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !107, !8}
!107 = !{!"llvm.loop.unroll.runtime.disable"}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !8}
!114 = distinct !{!114, !10}
!115 = distinct !{!115, !10}
!116 = distinct !{!116, !8}
!117 = !{i64 0, i64 65}
!118 = distinct !{!118, !10}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_EENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_4pairIKS7_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISS_EEEEEEmOT_DpOT0_"}
!122 = !{!123}
!123 = distinct !{!123, !124}
!124 = distinct !{!124, !"LVerDomain"}
!125 = !{!126}
!126 = distinct !{!126, !124}
!127 = distinct !{!127, !8}
!128 = distinct !{!128, !10}
!129 = distinct !{!129, !10}
!130 = distinct !{!130, !8}
!131 = !{!132}
!132 = distinct !{!132, !133}
!133 = distinct !{!133, !"LVerDomain"}
!134 = !{!135}
!135 = distinct !{!135, !133}
!136 = distinct !{!136, !8}
!137 = distinct !{!137, !10}
!138 = distinct !{!138, !10}
!139 = distinct !{!139, !8}
