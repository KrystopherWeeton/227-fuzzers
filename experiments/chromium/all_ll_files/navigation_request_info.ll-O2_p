; ModuleID = '../../content/browser/renderer_host/navigation_request_info.cc'
source_filename = "../../content/browser/renderer_host/navigation_request_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::NavigationRequestInfo" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr.50", %"class.net::IsolationInfo", i8, i8, i32, i8, i8, %"class.std::__1::unique_ptr.159", %"class.base::UnguessableToken", %"class.base::UnguessableToken", i8, %"class.net::HttpRequestHeaders", %"class.mojo::StructPtr.172", %"class.absl::optional.179" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::mojom::CommonNavigationParams"* }
%"class.content::mojom::CommonNavigationParams" = type { %class.GURL, %"class.absl::optional", %"class.mojo::StructPtr.13", i32, i32, %"struct.blink::NavigationDownloadPolicy", i8, %class.GURL, %class.GURL, i32, %"class.base::TimeTicks", %"class.std::__1::basic_string", %class.scoped_refptr, %"class.mojo::InlinedStructPtr", i8, i8, i8, i32, %"class.std::__1::vector.40", %"class.std::__1::basic_string", i8, %"class.base::TimeTicks" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.8" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.mojo::StructPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::mojom::Referrer"* }
%"class.blink::mojom::Referrer" = type <{ %class.GURL, i32, [4 x i8] }>
%"struct.blink::NavigationDownloadPolicy" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset", i8, [7 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GURL* }
%class.scoped_refptr = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.35" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.21" }
%"union.absl::variant_internal::DestructibleUnionImpl.21" = type { %"union.absl::variant_internal::DestructibleUnionImpl.29" }
%"union.absl::variant_internal::DestructibleUnionImpl.29" = type { %"union.absl::variant_internal::DestructibleUnionImpl.30" }
%"union.absl::variant_internal::DestructibleUnionImpl.30" = type { %"union.absl::variant_internal::DestructibleUnionImpl.32" }
%"union.absl::variant_internal::DestructibleUnionImpl.32" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.33" }
%"class.base::time_internal::TimeBase.33" = type { i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.network::DataElement"* }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::SourceLocation", i32, [4 x i8] }>
%"class.network::mojom::SourceLocation" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i32*, i32*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.mojo::StructPtr.50" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.content::mojom::BeginNavigationParams"* }
%"class.content::mojom::BeginNavigationParams" = type { %"class.absl::optional.54", %"class.std::__1::basic_string", i32, i8, i32, i32, i32, i8, i8, %class.GURL, %"class.std::__1::basic_string", %class.GURL, %"class.absl::optional.60", %"class.mojo::StructPtr.96", %"class.absl::optional.122", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.absl::optional.132" }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.util::TokenType" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.59" }
%"class.base::StrongAlias.59" = type { %"class.base::UnguessableToken" }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant.65" }
%"class.absl::variant.65" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial.66" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial.66" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial.67" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial.67" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial.68" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial.68" = type { %"class.absl::variant_internal::VariantStateBase.69" }
%"class.absl::variant_internal::VariantStateBase.69" = type { %"union.absl::variant_internal::DestructibleUnionImpl.70", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl.70" = type { %"union.absl::variant_internal::DestructibleUnionImpl.71" }
%"union.absl::variant_internal::DestructibleUnionImpl.71" = type { %"union.absl::variant_internal::DestructibleUnionImpl.72" }
%"union.absl::variant_internal::DestructibleUnionImpl.72" = type { %"union.absl::variant_internal::DestructibleUnionImpl.73" }
%"union.absl::variant_internal::DestructibleUnionImpl.73" = type { %"union.absl::variant_internal::DestructibleUnionImpl.74" }
%"union.absl::variant_internal::DestructibleUnionImpl.74" = type { %"class.std::__1::basic_string" }
%"class.mojo::StructPtr.96" = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.network::mojom::TrustTokenParams"* }
%"class.network::mojom::TrustTokenParams" = type { i32, i32, i32, i8, %"class.std::__1::vector.100", %"class.std::__1::vector.107", %"class.absl::optional.114" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.url::Origin"* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.122" = type { %"class.absl::optional_internal::optional_data.123" }
%"class.absl::optional_internal::optional_data.123" = type { %"class.absl::optional_internal::optional_data_base.124" }
%"class.absl::optional_internal::optional_data_base.124" = type { %"class.absl::optional_internal::optional_data_dtor_base.125" }
%"class.absl::optional_internal::optional_data_dtor_base.125" = type { i8, %union.anon.126 }
%union.anon.126 = type { %"struct.blink::Impression" }
%"struct.blink::Impression" = type { %"class.url::Origin", %"class.absl::optional", i64, %"class.absl::optional.127", i64 }
%"class.absl::optional.127" = type { %"class.absl::optional_internal::optional_data.128" }
%"class.absl::optional_internal::optional_data.128" = type { %"class.absl::optional_internal::optional_data_base.129" }
%"class.absl::optional_internal::optional_data_base.129" = type { %"class.absl::optional_internal::optional_data_dtor_base.130" }
%"class.absl::optional_internal::optional_data_dtor_base.130" = type { i8, %union.anon.131 }
%union.anon.131 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, [7 x i8], %union.anon.136 }
%union.anon.136 = type { %"struct.network::ResourceRequest::WebBundleTokenParams" }
%"struct.network::ResourceRequest::WebBundleTokenParams" = type <{ %class.GURL, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.137", i32, [4 x i8] }>
%"class.mojo::PendingRemote.137" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional", %"class.absl::optional", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.146" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.141", %"class.absl::optional.141" }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { i64 }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.network::PendingSharedURLLoaderFactory"* }
%"class.network::PendingSharedURLLoaderFactory" = type { i32 (...)** }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.165" }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.167" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.mojo::StructPtr.172" = type { %"class.std::__1::unique_ptr.173" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.network::mojom::ClientSecurityState"* }
%"class.network::mojom::ClientSecurityState" = type <{ %"struct.network::CrossOriginEmbedderPolicy", i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.114", i32, %"class.absl::optional.114" }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"class.std::__1::vector.184" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { i32*, i32*, %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7content21NavigationRequestInfoC1EN4mojo9StructPtrINS_5mojom22CommonNavigationParamsEEENS2_INS3_21BeginNavigationParamsEEERKN3net13IsolationInfoEbbibbNSt3__110unique_ptrIN7network29PendingSharedURLLoaderFactoryENSC_14default_deleteISF_EEEERKN4base16UnguessableTokenESM_bNS8_18HttpRequestHeadersENS2_INSE_5mojom19ClientSecurityStateEEERKN4absl8optionalINSC_6vectorINS8_12SourceStream10SourceTypeENSC_9allocatorISV_EEEEEE = hidden unnamed_addr alias void (%"struct.content::NavigationRequestInfo"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.50"*, %"class.net::IsolationInfo"*, i1, i1, i32, i1, i1, i64, %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"*, i1, %"class.net::HttpRequestHeaders"*, %"class.mojo::StructPtr.172"*, %"class.absl::optional.179"*), void (%"struct.content::NavigationRequestInfo"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.50"*, %"class.net::IsolationInfo"*, i1, i1, i32, i1, i1, i64, %"class.base::UnguessableToken"*, %"class.base::UnguessableToken"*, i1, %"class.net::HttpRequestHeaders"*, %"class.mojo::StructPtr.172"*, %"class.absl::optional.179"*)* @_ZN7content21NavigationRequestInfoC2EN4mojo9StructPtrINS_5mojom22CommonNavigationParamsEEENS2_INS3_21BeginNavigationParamsEEERKN3net13IsolationInfoEbbibbNSt3__110unique_ptrIN7network29PendingSharedURLLoaderFactoryENSC_14default_deleteISF_EEEERKN4base16UnguessableTokenESM_bNS8_18HttpRequestHeadersENS2_INSE_5mojom19ClientSecurityStateEEERKN4absl8optionalINSC_6vectorINS8_12SourceStream10SourceTypeENSC_9allocatorISV_EEEEEE
@_ZN7content21NavigationRequestInfoD1Ev = hidden unnamed_addr alias void (%"struct.content::NavigationRequestInfo"*), void (%"struct.content::NavigationRequestInfo"*)* @_ZN7content21NavigationRequestInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21NavigationRequestInfoC2EN4mojo9StructPtrINS_5mojom22CommonNavigationParamsEEENS2_INS3_21BeginNavigationParamsEEERKN3net13IsolationInfoEbbibbNSt3__110unique_ptrIN7network29PendingSharedURLLoaderFactoryENSC_14default_deleteISF_EEEERKN4base16UnguessableTokenESM_bNS8_18HttpRequestHeadersENS2_INSE_5mojom19ClientSecurityStateEEERKN4absl8optionalINSC_6vectorINS8_12SourceStream10SourceTypeENSC_9allocatorISV_EEEEEE(%"struct.content::NavigationRequestInfo"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.50"* nocapture, %"class.net::IsolationInfo"* dereferenceable(496), i1 zeroext, i1 zeroext, i32, i1 zeroext, i1 zeroext, i64, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16), %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16), i1 zeroext, %"class.net::HttpRequestHeaders"*, %"class.mojo::StructPtr.172"* nocapture, %"class.absl::optional.179"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %17 = zext i1 %4 to i8
  %18 = zext i1 %5 to i8
  %19 = zext i1 %7 to i8
  %20 = zext i1 %8 to i8
  %21 = zext i1 %12 to i8
  %22 = bitcast %"struct.content::NavigationRequestInfo"* %0 to i64*
  %23 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.content::mojom::CommonNavigationParams"* null, %"class.content::mojom::CommonNavigationParams"** %23, align 8
  %24 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  store i64 0, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 1
  %27 = bitcast %"class.mojo::StructPtr.50"* %26 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.content::mojom::BeginNavigationParams"* null, %"class.content::mojom::BeginNavigationParams"** %28, align 8
  %29 = bitcast %"class.mojo::StructPtr.50"* %2 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 0, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 2
  tail call void @_ZN3net13IsolationInfoC1ERKS0_(%"class.net::IsolationInfo"* %31, %"class.net::IsolationInfo"* dereferenceable(496) %3) #7
  %32 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 3
  store i8 %17, i8* %32, align 8
  %33 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 4
  store i8 %18, i8* %33, align 1
  %34 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 5
  store i32 %6, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 6
  store i8 %19, i8* %35, align 8
  %36 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 7
  store i8 %20, i8* %36, align 1
  %37 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 8
  %38 = bitcast %"class.std::__1::unique_ptr.159"* %37 to i64*
  store i64 %9, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 9
  %40 = bitcast %"class.base::UnguessableToken"* %39 to i8*
  %41 = bitcast %"class.base::UnguessableToken"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false)
  %42 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 10
  %43 = bitcast %"class.base::UnguessableToken"* %42 to i8*
  %44 = bitcast %"class.base::UnguessableToken"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 11
  store i8 %21, i8* %45, align 8
  %46 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 12
  tail call void @_ZN3net18HttpRequestHeadersC1EOS0_(%"class.net::HttpRequestHeaders"* %46, %"class.net::HttpRequestHeaders"* dereferenceable(24) %13) #7
  %47 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 13
  %48 = bitcast %"class.mojo::StructPtr.172"* %47 to i64*
  %49 = getelementptr inbounds %"class.mojo::StructPtr.172", %"class.mojo::StructPtr.172"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::ClientSecurityState"* null, %"class.network::mojom::ClientSecurityState"** %49, align 8
  %50 = bitcast %"class.mojo::StructPtr.172"* %14 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %48, align 8
  store i64 0, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #7
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %96, label %56

56:                                               ; preds = %16
  %57 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = bitcast %"class.std::__1::vector.184"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #7
  %60 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %61 = bitcast i32** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.184"* %57 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 2
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %95, label %68

68:                                               ; preds = %56
  %69 = icmp ugt i64 %66, 4611686018427387903
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::vector.184"* %58 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #8
  unreachable

72:                                               ; preds = %68
  %73 = tail call i8* @_Znwm(i64 %65) #9
  %74 = bitcast i8* %73 to i32*
  %75 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %76 = bitcast i32** %75 to i8**
  store i8* %73, i8** %76, align 8
  %77 = bitcast %"class.std::__1::vector.184"* %58 to i8**
  store i8* %73, i8** %77, align 8
  %78 = getelementptr inbounds i32, i32* %74, i64 %66
  %79 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %78, i32** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.184", %"class.std::__1::vector.184"* %57, i64 0, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = load i64, i64* %61, align 8
  %83 = bitcast i32** %75 to i64*
  %84 = ptrtoint i8* %73 to i64
  %85 = ptrtoint i32* %81 to i64
  %86 = sub i64 %82, %85
  %87 = icmp sgt i64 %86, 0
  br i1 %87, label %88, label %93

88:                                               ; preds = %72
  %89 = lshr exact i64 %86, 2
  %90 = bitcast i32* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* align 4 %90, i64 %86, i1 false) #7
  %91 = getelementptr inbounds i32, i32* %74, i64 %89
  %92 = ptrtoint i32* %91 to i64
  br label %93

93:                                               ; preds = %88, %72
  %94 = phi i64 [ %92, %88 ], [ %84, %72 ]
  store i64 %94, i64* %83, align 8
  br label %95

95:                                               ; preds = %93, %56
  store i8 1, i8* %52, align 8
  br label %96

96:                                               ; preds = %95, %16
  ret void
}

declare void @_ZN3net13IsolationInfoC1ERKS0_(%"class.net::IsolationInfo"*, %"class.net::IsolationInfo"* dereferenceable(496)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net18HttpRequestHeadersC1EOS0_(%"class.net::HttpRequestHeaders"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21NavigationRequestInfoD2Ev(%"struct.content::NavigationRequestInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i32* %7 to i64
  %11 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.network::mojom::ClientSecurityState"*, %"class.network::mojom::ClientSecurityState"** %16, align 8
  store %"class.network::mojom::ClientSecurityState"* null, %"class.network::mojom::ClientSecurityState"** %16, align 8
  %18 = icmp eq %"class.network::mojom::ClientSecurityState"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  tail call void @_ZN7network5mojom19ClientSecurityStateD1Ev(%"class.network::mojom::ClientSecurityState"* nonnull %17) #7
  %20 = bitcast %"class.network::mojom::ClientSecurityState"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 12
  tail call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* %22) #7
  %23 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %24 = load %"class.network::PendingSharedURLLoaderFactory"*, %"class.network::PendingSharedURLLoaderFactory"** %23, align 8
  store %"class.network::PendingSharedURLLoaderFactory"* null, %"class.network::PendingSharedURLLoaderFactory"** %23, align 8
  %25 = icmp eq %"class.network::PendingSharedURLLoaderFactory"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.network::PendingSharedURLLoaderFactory"* %24 to void (%"class.network::PendingSharedURLLoaderFactory"*)***
  %28 = load void (%"class.network::PendingSharedURLLoaderFactory"*)**, void (%"class.network::PendingSharedURLLoaderFactory"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.network::PendingSharedURLLoaderFactory"*)*, void (%"class.network::PendingSharedURLLoaderFactory"*)** %28, i64 1
  %30 = load void (%"class.network::PendingSharedURLLoaderFactory"*)*, void (%"class.network::PendingSharedURLLoaderFactory"*)** %29, align 8
  tail call void %30(%"class.network::PendingSharedURLLoaderFactory"* nonnull %24) #7
  br label %31

31:                                               ; preds = %21, %26
  %32 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 2
  tail call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* %32) #7
  %33 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.content::mojom::BeginNavigationParams"*, %"class.content::mojom::BeginNavigationParams"** %33, align 8
  store %"class.content::mojom::BeginNavigationParams"* null, %"class.content::mojom::BeginNavigationParams"** %33, align 8
  %35 = icmp eq %"class.content::mojom::BeginNavigationParams"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  tail call void @_ZN7content5mojom21BeginNavigationParamsD1Ev(%"class.content::mojom::BeginNavigationParams"* nonnull %34) #7
  %37 = getelementptr inbounds %"class.content::mojom::BeginNavigationParams", %"class.content::mojom::BeginNavigationParams"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %31, %36
  %39 = getelementptr inbounds %"struct.content::NavigationRequestInfo", %"struct.content::NavigationRequestInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.content::mojom::CommonNavigationParams"*, %"class.content::mojom::CommonNavigationParams"** %39, align 8
  store %"class.content::mojom::CommonNavigationParams"* null, %"class.content::mojom::CommonNavigationParams"** %39, align 8
  %41 = icmp eq %"class.content::mojom::CommonNavigationParams"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @_ZN7content5mojom22CommonNavigationParamsD1Ev(%"class.content::mojom::CommonNavigationParams"* nonnull %40) #7
  %43 = bitcast %"class.content::mojom::CommonNavigationParams"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %38, %42
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7network5mojom19ClientSecurityStateD1Ev(%"class.network::mojom::ClientSecurityState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content5mojom21BeginNavigationParamsD1Ev(%"class.content::mojom::BeginNavigationParams"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content5mojom22CommonNavigationParamsD1Ev(%"class.content::mojom::CommonNavigationParams"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
