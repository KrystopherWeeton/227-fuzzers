; ModuleID = '../../v8/src/compiler/frame.cc'
source_filename = "../../v8/src/compiler/frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::Frame" = type { i32, i32, i32, %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"* }
%"class.v8::internal::AlignedSlotAllocator" = type { i32, i32, i32, i32 }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.v8::internal::compiler::FrameAccessState" = type <{ %"class.v8::internal::compiler::Frame"*, i8, [3 x i8], i32, i8, [7 x i8] }>

@_ZN2v88internal26FLAG_turbo_sp_frame_accessE = external local_unnamed_addr global i8, align 1

@_ZN2v88internal8compiler5FrameC1Ei = hidden unnamed_addr alias void (%"class.v8::internal::compiler::Frame"*, i32), void (%"class.v8::internal::compiler::Frame"*, i32)* @_ZN2v88internal8compiler5FrameC2Ei

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler5FrameC2Ei(%"class.v8::internal::compiler::Frame"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 3
  %6 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 -1>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 3, i32 3
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 4
  %10 = bitcast %"class.v8::internal::BitVector"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  %11 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"* %5, i32 %1) #5
  ret void
}

declare i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler5Frame10AlignFrameEi(%"class.v8::internal::compiler::Frame"*, i32) local_unnamed_addr #0 align 2 {
  %3 = add nsw i32 %1, 7
  %4 = sdiv i32 %3, 8
  %5 = add nsw i32 %4, -1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, %5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = add i32 %7, %4
  %12 = sub i32 %11, %8
  store i32 %12, i32* %6, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 3, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, %5
  %17 = sub i32 %4, %16
  %18 = icmp eq i32 %16, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 3
  %21 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator5AlignEi(%"class.v8::internal::AlignedSlotAllocator"* %20, i32 %4) #5
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = add nsw i32 %17, %23
  store i32 %26, i32* %22, align 4
  br label %27

27:                                               ; preds = %19, %13, %25
  ret void
}

declare i32 @_ZN2v88internal20AlignedSlotAllocator5AlignEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16FrameAccessState12MarkHasFrameEb(%"class.v8::internal::compiler::FrameAccessState"* nocapture, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 4
  store i8 %3, i8* %4, align 8
  %5 = load i8, i8* @_ZN2v88internal26FLAG_turbo_sp_frame_accessE, align 1
  %6 = icmp eq i8 %5, 0
  %7 = and i1 %6, %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 1
  %9 = zext i1 %7 to i8
  store i8 %9, i8* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16FrameAccessState23SetFrameAccessToDefaultEv(%"class.v8::internal::compiler::FrameAccessState"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  %5 = load i8, i8* @_ZN2v88internal26FLAG_turbo_sp_frame_accessE, align 1
  %6 = icmp eq i8 %5, 0
  %7 = and i1 %4, %6
  %8 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 1
  %9 = zext i1 %7 to i8
  store i8 %9, i8* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler16FrameAccessState14GetFrameOffsetEi(%"class.v8::internal::compiler::FrameAccessState"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = shl i32 %1, 3
  %4 = sub i32 8, %3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %29

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %14, i64 0, i32 3, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %16, -2
  %20 = add i32 %19, %18
  br label %21

21:                                               ; preds = %8, %12
  %22 = phi i32 [ %20, %12 ], [ -1, %8 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::FrameAccessState", %"class.v8::internal::compiler::FrameAccessState"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, %22
  %26 = shl i32 %25, 3
  %27 = add nsw i32 %26, %4
  %28 = or i32 %27, 1
  br label %29

29:                                               ; preds = %2, %21
  %30 = phi i32 [ %28, %21 ], [ %4, %2 ]
  ret i32 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
