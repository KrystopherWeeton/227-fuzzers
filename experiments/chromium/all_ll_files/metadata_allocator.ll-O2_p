; ModuleID = '../../base/allocator/partition_allocator/starscan/metadata_allocator.cc'
source_filename = "../../base/allocator/partition_allocator/starscan/metadata_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [5408 x i8] }
%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [4 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { %"class.base::internal::SpinningMutex" }
%"class.base::internal::SpinningMutex" = type { %"struct.std::__1::atomic" }
%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i64 }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(5408) %"struct.base::PartitionRoot"* @_ZN4base8internal23PCScanMetadataAllocatorEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 0), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 2), align 2
  store i8 1, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 3), align 1
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 8) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 16), i8 0, i64 5120, i1 false) #4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5176), align 8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5392) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5400) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5184), i8 0, i64 202, i1 false) #4
  tail call void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*), i40 16777216) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal39ReinitPCScanMetadataAllocatorForTestingEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 0), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 2), align 2
  store i8 1, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 3), align 1
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 8) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 16), i8 0, i64 5120, i1 false) #4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5176), align 8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5392) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5400) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5184), i8 0, i64 202, i1 false) #4
  tail call void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*), i40 16777216) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  br label %7

7:                                                ; preds = %0, %3, %6
  tail call void @_ZN4base13PartitionRootILb1EE11PurgeMemoryEi(%"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*), i32 3) #4
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14, !prof !2

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 0), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 2), align 2
  store i8 1, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 3), align 1
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 8) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 16), i8 0, i64 5120, i1 false) #4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5176), align 8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5392) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5400) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5184), i8 0, i64 202, i1 false) #4
  tail call void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*), i40 16777216) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  br label %14

14:                                               ; preds = %7, %10, %13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 0), i8 0, i64 5408, i1 false)
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21, !prof !2

17:                                               ; preds = %14
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 0), align 8
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 1), align 1
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 2), align 2
  store i8 1, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 3), align 1
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 8) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 16), i8 0, i64 5120, i1 false) #4
  store i8 0, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5176), align 8
  store i64 0, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5392) to i64*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5400) to i32*), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator, i64 0, i32 0, i64 5184), i8 0, i64 202, i1 false) #4
  tail call void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*), i40 16777216) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal23PCScanMetadataAllocatorEvE9allocator) #4
  br label %21

21:                                               ; preds = %14, %17, %20
  tail call void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal23PCScanMetadataAllocatorEvE9allocator to %"struct.base::PartitionRoot"*), i40 16777216) #4
  ret void
}

declare void @_ZN4base13PartitionRootILb1EE11PurgeMemoryEi(%"struct.base::PartitionRoot"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"*, i40) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
