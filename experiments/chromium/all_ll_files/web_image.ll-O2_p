; ModuleID = '../../third_party/blink/renderer/core/exported/web_image.cc'
source_filename = "../../third_party/blink/renderer/core/exported/web_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.blink::WebData" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.35", %"class.WTF::Vector.40" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { i8*, i32, i32 }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.std::__1::unique_ptr.43"*, i32, i32 }
%"class.std::__1::unique_ptr.43" = type opaque
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.8", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.12", %class.sk_sp.0, i8, %"class.std::__1::unique_ptr.25" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.16" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.15, [8 x i8] }
%struct.anon.15 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i8* }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.267" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.261 }
%class.scoped_refptr.261 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.262" }
%"struct.std::__1::atomic.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__atomic_base.264" }
%"struct.std::__1::__atomic_base.264" = type { %"struct.std::__1::__cxx_atomic_impl.265" }
%"struct.std::__1::__cxx_atomic_impl.265" = type { %"struct.std::__1::__cxx_atomic_base_impl.266" }
%"struct.std::__1::__cxx_atomic_base_impl.266" = type { i32 }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::KURL"* }
%"class.cc::PaintImage" = type { %class.sk_sp.273, %class.sk_sp.274, %"class.gfx::Rect", i32, %class.sk_sp.279, %class.sk_sp.287, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.273, %class.scoped_refptr.288 }
%class.sk_sp.274 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.275", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.279 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.280" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.282" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.287 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.273 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.288 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.289", [4 x i8] }>
%"class.base::RefCountedThreadSafe.289" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::SVGImage" = type { %"class.blink::Image", %"class.blink::Persistent", %"class.blink::Persistent.238", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.blink::LayoutSize", i8, i32, %"class.blink::Persistent.252" }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.47", i8, %class.scoped_refptr.34, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.230" }
%"class.WTF::ThreadSafeRefCounted.47" = type { %"class.base::RefCountedThreadSafe.48" }
%"class.base::RefCountedThreadSafe.48" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.34 = type { %"class.WTF::SharedBuffer"* }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.49", i32, [4 x i8], %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.185", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.226", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.165", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.85" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.145", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.159", [4 x i8] }>
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147", %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { i64 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { float }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.168", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.177" }
%"class.WTF::Vector.177" = type { %"class.WTF::VectorBuffer.178" }
%"class.WTF::VectorBuffer.178" = type { %"class.WTF::VectorBufferBase.179" }
%"class.WTF::VectorBufferBase.179" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.193" }
%"class.WTF::VectorBuffer.193" = type { %"class.WTF::VectorBufferBase.194" }
%"class.WTF::VectorBufferBase.194" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.207" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.103"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.254" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.225 }
%class.scoped_refptr.225 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.236" }
%"class.blink::PersistentBase.236" = type { %"class.blink::SVGImageChromeClient"*, %"class.blink::PersistentNodePtr.237" }
%"class.blink::SVGImageChromeClient" = type opaque
%"class.blink::PersistentNodePtr.237" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.238" = type { %"class.blink::PersistentBase.239" }
%"class.blink::PersistentBase.239" = type { %"class.blink::Page"*, %"class.blink::PersistentNodePtr.237" }
%"class.blink::Page" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::scheduler::WebAgentGroupScheduler"* }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Persistent.252" = type { %"class.blink::PersistentBase.253" }
%"class.blink::PersistentBase.253" = type { %"class.blink::SVGImage::SVGImageLocalFrameClient"*, %"class.blink::PersistentNodePtr.237" }
%"class.blink::SVGImage::SVGImageLocalFrameClient" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::WebVector" = type { %"class.std::__1::vector.290" }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %class.SkBitmap* }
%"class.blink::WebVector.297" = type { %"class.std::__1::vector.298" }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"*, %"class.std::__1::__compressed_pair.300" }
%"struct.blink::WebImage::AnimationFrame" = type { %class.SkBitmap, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.blink::WebImage::AnimationFrame"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJS1_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

@_ZTVN5blink20SVGImageForContainerE = external unnamed_addr constant { [42 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8WebImage8FromDataERKNS_7WebDataERKN3gfx4SizeE(%class.SkBitmap* noalias sret, %"class.blink::WebData"* dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ColorBehavior", align 4
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.SkISize*
  %7 = tail call %"class.WTF::SharedBuffer"* @_ZNK5blink7WebDatacv13scoped_refptrIN3WTF12SharedBufferEEEv(%"class.blink::WebData"* %1) #11
  %8 = bitcast %"class.blink::ColorBehavior"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %4, i64 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i64 0, i64* %5, align 8
  %11 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %7) #11
  %12 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %11, i1 zeroext true, i32 0, i32 0, %"class.blink::ColorBehavior"* nonnull dereferenceable(4) %4, %struct.SkISize* nonnull dereferenceable(8) %6, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  %13 = icmp eq %"class.blink::ImageDecoder"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* nonnull %12) #11
  br i1 %15, label %17, label %16

16:                                               ; preds = %3, %14
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #11
  br label %70

17:                                               ; preds = %14
  %18 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* nonnull %12) #11
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %59, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::ImageDecoder"* %12 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %22 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %23 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  br label %24

24:                                               ; preds = %51, %20
  %25 = phi i64 [ 0, %20 ], [ %57, %51 ]
  %26 = phi i32 [ 0, %20 ], [ %56, %51 ]
  %27 = phi i64 [ 0, %20 ], [ %55, %51 ]
  %28 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %21, align 8
  %29 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %28, i64 14
  %30 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %29, align 8
  %31 = call i64 %30(%"class.blink::ImageDecoder"* nonnull %12, i64 %25) #11
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %31, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %32, 0
  %36 = select i1 %35, i32 %32, i32 0
  %37 = load i32, i32* %22, align 4
  %38 = icmp eq i32 %37, %36
  br i1 %38, label %41, label %39

39:                                               ; preds = %24
  %40 = load i32, i32* %23, align 4
  br label %46

41:                                               ; preds = %24
  %42 = icmp sgt i32 %34, 0
  %43 = select i1 %42, i32 %34, i32 0
  %44 = load i32, i32* %23, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %59, label %46

46:                                               ; preds = %39, %41
  %47 = phi i32 [ %40, %39 ], [ %44, %41 ]
  %48 = mul nsw i32 %34, %32
  %49 = mul nsw i32 %47, %37
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp eq i64 %25, 0
  %53 = icmp slt i32 %48, %26
  %54 = or i1 %52, %53
  %55 = select i1 %54, i64 %25, i64 %27
  %56 = select i1 %54, i32 %48, i32 %26
  %57 = add nuw i64 %25, 1
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %59, label %24

59:                                               ; preds = %41, %46, %51, %17
  %60 = phi i64 [ 0, %17 ], [ %27, %46 ], [ %25, %41 ], [ %55, %51 ]
  %61 = call %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"* nonnull %12, i64 %60) #11
  %62 = icmp eq %"class.blink::ImageFrame"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %12, i64 0, i32 15
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %63, %59
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #11
  br label %70

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %61, i64 0, i32 0
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %69) #11
  br label %70

70:                                               ; preds = %67, %68, %16
  br i1 %13, label %76, label %71

71:                                               ; preds = %70
  %72 = bitcast %"class.blink::ImageDecoder"* %12 to void (%"class.blink::ImageDecoder"*)***
  %73 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %73, i64 1
  %75 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %74, align 8
  call void %75(%"class.blink::ImageDecoder"* nonnull %12) #11
  br label %76

76:                                               ; preds = %70, %71
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::SharedBuffer"* @_ZNK5blink7WebDatacv13scoped_refptrIN3WTF12SharedBufferEEEv(%"class.blink::WebData"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

declare %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8WebImage9DecodeSVGERKNS_7WebDataERKN3gfx4SizeE(%class.SkBitmap* noalias sret, %"class.blink::WebData"* dereferenceable(8), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::FloatSize", align 4
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.cc::PaintImage", align 8
  %7 = alloca %class.sk_sp.273, align 8
  %8 = tail call noalias i8* @malloc(i64 136) #11
  %9 = bitcast i8* %8 to %"class.blink::SVGImage"*
  tail call void @_ZN5blink8SVGImageC1EPNS_13ImageObserverEb(%"class.blink::SVGImage"* %9, %"class.blink::ImageObserver"* null, i1 zeroext false) #11
  %10 = bitcast i8* %8 to %"class.blink::Image"*
  %11 = tail call %"class.WTF::SharedBuffer"* @_ZNK5blink7WebDatacv13scoped_refptrIN3WTF12SharedBufferEEEv(%"class.blink::WebData"* %1) #11
  %12 = tail call i32 @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::Image"* %10, %"class.WTF::SharedBuffer"* %11, i1 zeroext true) #11
  %13 = bitcast %class.SkBitmap* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 56, i1 false)
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #11
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %96, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %18, i32 0
  %23 = insertelement <2 x float> %22, float %21, i32 1
  %24 = icmp slt i32 %17, 1
  %25 = icmp slt i32 %20, 1
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %15
  %28 = bitcast %"class.blink::FloatSize"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 0
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %30, align 4
  %31 = call <2 x float> @_ZNK5blink8SVGImage18ConcreteObjectSizeERKNS_9FloatSizeE(%"class.blink::SVGImage"* %9, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %32

32:                                               ; preds = %15, %27
  %33 = phi <2 x float> [ %31, %27 ], [ %23, %15 ]
  %34 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %34) #11
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #11
  %35 = extractelement <2 x float> %33, i32 0
  %36 = extractelement <2 x float> %33, i32 1
  %37 = call noalias i8* @malloc(i64 192) #11
  %38 = bitcast i8* %37 to %"class.blink::Image"*
  call void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"* %38, %"class.blink::ImageObserver"* null, i1 zeroext false) #11
  %39 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*] }, { [42 x i8*] }* @_ZTVN5blink20SVGImageForContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 56
  %41 = bitcast i8* %40 to i8**
  store i8* %8, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %37, i64 64
  %43 = bitcast i8* %42 to float*
  store float %35, float* %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 68
  %45 = bitcast i8* %44 to float*
  store float %36, float* %45, align 4
  %46 = getelementptr inbounds i8, i8* %37, i64 72
  %47 = bitcast i8* %46 to float*
  store float 1.000000e+00, float* %47, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 80
  %49 = bitcast i8* %48 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %49, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %34) #11
  %50 = bitcast %"class.cc::PaintImage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 104, i1 false)
  %51 = bitcast i8* %37 to void (%"class.cc::PaintImage"*, %"class.blink::Image"*)***
  %52 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)**, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %52, i64 30
  %54 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %53, align 8
  call void %54(%"class.cc::PaintImage"* nonnull sret %6, %"class.blink::Image"* %38) #11
  %55 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %6, i64 0, i32 15, i32 0
  %56 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %55, align 8
  %57 = icmp eq %"class.cc::PaintWorkletInput"* %56, null
  br i1 %57, label %58, label %66

58:                                               ; preds = %32
  %59 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %6, i64 0, i32 14, i32 0
  %60 = load %class.SkImage*, %class.SkImage** %59, align 8
  %61 = icmp eq %class.SkImage* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %6, i64 0, i32 5, i32 0
  %64 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %63, align 8
  %65 = icmp eq %"class.cc::TextureBacking"* %64, null
  br i1 %65, label %84, label %66

66:                                               ; preds = %62, %32, %58
  %67 = bitcast %class.sk_sp.273* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.273* nonnull sret %7, %"class.cc::PaintImage"* nonnull %6) #11
  %68 = getelementptr inbounds %class.sk_sp.273, %class.sk_sp.273* %7, i64 0, i32 0
  %69 = load %class.SkImage*, %class.SkImage** %68, align 8
  %70 = call zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage* %69, %class.SkBitmap* %0, i32 0) #11
  %71 = load %class.SkImage*, %class.SkImage** %68, align 8
  %72 = icmp eq %class.SkImage* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %class.SkImage, %class.SkImage* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %class.SkImage* %71 to %class.SkRefCntBase*
  %79 = bitcast %class.SkImage* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #11
  br label %83

83:                                               ; preds = %66, %73, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  br label %84

84:                                               ; preds = %62, %83
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %50) #11
  %85 = icmp eq i8* %37, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds i8, i8* %37, i64 8
  %88 = bitcast i8* %87 to i32*
  %89 = atomicrmw sub i32* %88, i32 1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %96

91:                                               ; preds = %86
  %92 = bitcast i8* %37 to void (%"class.blink::Image"*)***
  %93 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %93, i64 1
  %95 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %94, align 8
  call void %95(%"class.blink::Image"* nonnull %38) #11
  br label %96

96:                                               ; preds = %91, %86, %84, %3
  %97 = icmp eq i8* %8, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds i8, i8* %8, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = atomicrmw sub i32* %100, i32 1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %108

103:                                              ; preds = %98
  %104 = bitcast i8* %8 to void (%"class.blink::Image"*)***
  %105 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %105, i64 1
  %107 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %106, align 8
  call void %107(%"class.blink::Image"* nonnull %10) #11
  br label %108

108:                                              ; preds = %96, %98, %103
  ret void
}

declare i32 @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1 zeroext) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare <2 x float> @_ZNK5blink8SVGImage18ConcreteObjectSizeERKNS_9FloatSizeE(%"class.blink::SVGImage"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.273* sret, %"class.cc::PaintImage"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage*, %class.SkBitmap*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8WebImage14FramesFromDataERKNS_7WebDataE(%"class.blink::WebVector"* noalias nocapture sret, %"class.blink::WebData"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ColorBehavior", align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.SkISize*
  %6 = alloca %"class.blink::WebVector", align 16
  %7 = alloca %class.SkBitmap, align 8
  %8 = tail call %"class.WTF::SharedBuffer"* @_ZNK5blink7WebDatacv13scoped_refptrIN3WTF12SharedBufferEEEv(%"class.blink::WebData"* %1) #11
  %9 = bitcast %"class.blink::ColorBehavior"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %3, i64 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  store i64 0, i64* %4, align 8
  %12 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %8) #11
  %13 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %12, i1 zeroext true, i32 0, i32 0, %"class.blink::ColorBehavior"* nonnull dereferenceable(4) %3, %struct.SkISize* nonnull dereferenceable(8) %5, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  %14 = icmp eq %"class.blink::ImageDecoder"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* nonnull %13) #11
  br i1 %16, label %19, label %17

17:                                               ; preds = %2, %15
  %18 = bitcast %"class.blink::WebVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  br label %88

19:                                               ; preds = %15
  %20 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* nonnull %13) #11
  %21 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 0, i64 24, i1 false) #11
  %24 = icmp ult i64 %20, 8
  %25 = select i1 %24, i64 %20, i64 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = bitcast %class.SkBitmap** %22 to i64*
  %29 = bitcast %class.SkBitmap** %23 to i64*
  br label %41

30:                                               ; preds = %19
  %31 = bitcast %"class.blink::ImageDecoder"* %13 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %32 = bitcast %class.SkBitmap* %7 to i8*
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0
  %35 = bitcast %class.SkBitmap** %22 to i64*
  br label %49

36:                                               ; preds = %83
  %37 = bitcast %"class.blink::WebVector"* %6 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 16
  %39 = bitcast %class.SkBitmap** %23 to i64*
  %40 = load i64, i64* %39, align 16
  br label %41

41:                                               ; preds = %36, %27
  %42 = phi i64* [ %29, %27 ], [ %39, %36 ]
  %43 = phi i64* [ %28, %27 ], [ %35, %36 ]
  %44 = phi i64 [ 0, %27 ], [ %40, %36 ]
  %45 = phi <2 x i64> [ zeroinitializer, %27 ], [ %38, %36 ]
  %46 = bitcast %"class.blink::WebVector"* %0 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  store i64 0, i64* %43, align 8
  %47 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %class.SkBitmap** %47 to i64*
  store i64 %44, i64* %48, align 8
  store i64 0, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %88

49:                                               ; preds = %30, %83
  %50 = phi i64 [ 0, %30 ], [ %86, %83 ]
  %51 = phi i32 [ 0, %30 ], [ %85, %83 ]
  %52 = phi i32 [ 0, %30 ], [ %84, %83 ]
  %53 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %31, align 8
  %54 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %53, i64 14
  %55 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %54, align 8
  %56 = call i64 %55(%"class.blink::ImageDecoder"* nonnull %13, i64 %50) #11
  %57 = trunc i64 %56 to i32
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %51, %57
  %61 = icmp eq i32 %52, %59
  %62 = and i1 %60, %61
  br i1 %62, label %83, label %63

63:                                               ; preds = %49
  %64 = call %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"* nonnull %13, i64 %50) #11
  %65 = icmp eq %"class.blink::ImageFrame"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 56, i1 false)
  %67 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %64, i64 0, i32 0
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %7, %class.SkBitmap* dereferenceable(56) %67) #11
  %68 = load %class.SkPixelRef*, %class.SkPixelRef** %33, align 8
  %69 = icmp eq %class.SkPixelRef* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %64, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 3
  br i1 %73, label %74, label %82

74:                                               ; preds = %70
  %75 = load %class.SkBitmap*, %class.SkBitmap** %22, align 8
  %76 = load %class.SkBitmap*, %class.SkBitmap** %23, align 16
  %77 = icmp ult %class.SkBitmap* %75, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %75, %class.SkBitmap* nonnull dereferenceable(56) %7) #11
  %79 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %75, i64 1
  %80 = ptrtoint %class.SkBitmap* %79 to i64
  store i64 %80, i64* %35, align 8
  br label %82

81:                                               ; preds = %74
  call void @_ZNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJS1_EEEvDpOT_(%"class.std::__1::vector.290"* nonnull %34, %class.SkBitmap* nonnull dereferenceable(56) %7) #11
  br label %82

82:                                               ; preds = %81, %78, %70, %66
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %32) #11
  br label %83

83:                                               ; preds = %49, %82, %63
  %84 = phi i32 [ %59, %63 ], [ %59, %82 ], [ %52, %49 ]
  %85 = phi i32 [ %57, %63 ], [ %57, %82 ], [ %51, %49 ]
  %86 = add nuw i64 %50, 1
  %87 = icmp ult i64 %86, %25
  br i1 %87, label %49, label %36

88:                                               ; preds = %41, %17
  br i1 %14, label %94, label %89

89:                                               ; preds = %88
  %90 = bitcast %"class.blink::ImageDecoder"* %13 to void (%"class.blink::ImageDecoder"*)***
  %91 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %91, i64 1
  %93 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %92, align 8
  call void %93(%"class.blink::ImageDecoder"* nonnull %13) #11
  br label %94

94:                                               ; preds = %88, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8WebImage17AnimationFromDataERKNS_7WebDataE(%"class.blink::WebVector.297"* noalias nocapture sret, %"class.blink::WebData"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ColorBehavior", align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.SkISize*
  %6 = alloca %"class.blink::WebVector.297", align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %"struct.blink::WebImage::AnimationFrame", align 8
  %9 = tail call %"class.WTF::SharedBuffer"* @_ZNK5blink7WebDatacv13scoped_refptrIN3WTF12SharedBufferEEEv(%"class.blink::WebData"* %1) #11
  %10 = bitcast %"class.blink::ColorBehavior"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %3, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  store i64 0, i64* %4, align 8
  %13 = tail call %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"* %9) #11
  %14 = call %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"* %13, i1 zeroext true, i32 0, i32 0, %"class.blink::ColorBehavior"* nonnull dereferenceable(4) %3, %struct.SkISize* nonnull dereferenceable(8) %5, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  %15 = icmp eq %"class.blink::ImageDecoder"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* nonnull %14) #11
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* nonnull %14) #11
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %2, %18, %16
  %22 = bitcast %"class.blink::WebVector.297"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false)
  br label %138

23:                                               ; preds = %18
  %24 = call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* nonnull %14) #11
  %25 = bitcast %"class.blink::ImageDecoder"* %14 to i64 (%"class.blink::ImageDecoder"*, i64)***
  %26 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %26, i64 14
  %28 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %27, align 8
  %29 = call i64 %28(%"class.blink::ImageDecoder"* nonnull %14, i64 0) #11
  %30 = bitcast %"class.blink::WebVector.297"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %6, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %6, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #11
  %34 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %6, i64 0, i32 0
  call void @_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.298"* nonnull %34, i64 %24) #11
  %35 = icmp eq i64 %24, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %23
  %37 = bitcast %"struct.blink::WebImage::AnimationFrame"** %32 to i64*
  br label %124

38:                                               ; preds = %23
  %39 = bitcast %class.SkBitmap* %7 to i8*
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 0, i32 0
  %41 = bitcast %"struct.blink::WebImage::AnimationFrame"* %8 to i8*
  %42 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %8, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %8, i64 0, i32 1, i32 0
  %44 = bitcast %"struct.blink::WebImage::AnimationFrame"** %32 to i64*
  br label %45

45:                                               ; preds = %121, %38
  %46 = phi i64 [ 0, %38 ], [ %122, %121 ]
  %47 = phi i64 [ %29, %38 ], [ %97, %121 ]
  %48 = lshr i64 %47, 32
  %49 = trunc i64 %48 to i32
  %50 = trunc i64 %47 to i32
  %51 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %25, align 8
  %52 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %51, i64 14
  %53 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %52, align 8
  %54 = call i64 %53(%"class.blink::ImageDecoder"* nonnull %14, i64 %46) #11
  %55 = trunc i64 %54 to i32
  %56 = lshr i64 %54, 32
  %57 = trunc i64 %56 to i32
  %58 = icmp ne i32 %50, %55
  %59 = icmp ne i32 %49, %57
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %93

61:                                               ; preds = %45
  %62 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %31, align 8
  %63 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %32, align 8
  %64 = icmp ne %"struct.blink::WebImage::AnimationFrame"* %62, %63
  %65 = zext i1 %64 to i64
  %66 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %63 to i64
  %67 = bitcast %"class.blink::WebVector.297"* %6 to i64*
  %68 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %62 to i64
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 6
  %71 = icmp ult i64 %70, %65
  br i1 %71, label %72, label %75

72:                                               ; preds = %61
  %73 = sub nsw i64 %65, %70
  call void @_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.298"* nonnull %34, i64 %73) #11
  %74 = load i64, i64* %44, align 8
  br label %87

75:                                               ; preds = %61
  %76 = icmp ugt i64 %70, %65
  br i1 %76, label %77, label %87

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %62, i64 %65
  %79 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %78, %63
  br i1 %79, label %85, label %80

80:                                               ; preds = %77, %80
  %81 = phi %"struct.blink::WebImage::AnimationFrame"* [ %82, %80 ], [ %63, %77 ]
  %82 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %81, i64 -1
  %83 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %82, i64 0, i32 0
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %83) #11
  %84 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %82, %78
  br i1 %84, label %85, label %80

85:                                               ; preds = %80, %77
  store %"struct.blink::WebImage::AnimationFrame"* %78, %"struct.blink::WebImage::AnimationFrame"** %32, align 8
  %86 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %78 to i64
  br label %87

87:                                               ; preds = %72, %75, %85
  %88 = phi i64 [ %74, %72 ], [ %66, %75 ], [ %86, %85 ]
  %89 = bitcast %"class.blink::WebVector.297"* %0 to i64*
  %90 = load i64, i64* %67, align 8
  store i64 %90, i64* %89, align 8
  store i64 0, i64* %67, align 8
  %91 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %0, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast %"struct.blink::WebImage::AnimationFrame"** %91 to i64*
  store i64 %88, i64* %92, align 8
  br label %132

93:                                               ; preds = %45
  %94 = load i64 (%"class.blink::ImageDecoder"*, i64)**, i64 (%"class.blink::ImageDecoder"*, i64)*** %25, align 8
  %95 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %94, i64 14
  %96 = load i64 (%"class.blink::ImageDecoder"*, i64)*, i64 (%"class.blink::ImageDecoder"*, i64)** %95, align 8
  %97 = call i64 %96(%"class.blink::ImageDecoder"* nonnull %14, i64 %46) #11
  %98 = call %"class.blink::ImageFrame"* @_ZN5blink12ImageDecoder24DecodeFrameBufferAtIndexEm(%"class.blink::ImageDecoder"* nonnull %14, i64 %46) #11
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %99 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %98, i64 0, i32 0
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %7, %class.SkBitmap* dereferenceable(56) %99) #11
  %100 = load %class.SkPixelRef*, %class.SkPixelRef** %40, align 8
  %101 = icmp eq %class.SkPixelRef* %100, null
  br i1 %101, label %121, label %102

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %98, i64 0, i32 5
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 3
  br i1 %105, label %106, label %121

106:                                              ; preds = %102
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %7) #11
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 64, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %42) #11
  store i64 0, i64* %43, align 8
  %107 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %42, %class.SkBitmap* nonnull dereferenceable(56) %7) #11
  %108 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %98, i64 0, i32 6, i32 0
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %43, align 8
  %110 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %32, align 8
  %111 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %33, align 8
  %112 = icmp ult %"struct.blink::WebImage::AnimationFrame"* %110, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %110, i64 0, i32 0
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %114, %class.SkBitmap* nonnull dereferenceable(56) %42) #11
  %115 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %110, i64 0, i32 1, i32 0
  %116 = load i64, i64* %43, align 8
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %110, i64 1
  %118 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %117 to i64
  store i64 %118, i64* %44, align 8
  br label %120

119:                                              ; preds = %106
  call void @_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.298"* nonnull %34, %"struct.blink::WebImage::AnimationFrame"* nonnull dereferenceable(64) %8) #11
  br label %120

120:                                              ; preds = %113, %119
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %41) #11
  br label %121

121:                                              ; preds = %93, %102, %120
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #11
  %122 = add nuw i64 %46, 1
  %123 = icmp eq i64 %122, %24
  br i1 %123, label %124, label %45

124:                                              ; preds = %121, %36
  %125 = phi i64* [ %37, %36 ], [ %44, %121 ]
  %126 = bitcast %"class.blink::WebVector.297"* %0 to i64*
  %127 = bitcast %"class.blink::WebVector.297"* %6 to i64*
  %128 = load i64, i64* %127, align 8
  store i64 %128, i64* %126, align 8
  store i64 0, i64* %127, align 8
  %129 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %0, i64 0, i32 0, i32 0, i32 1
  %130 = bitcast %"struct.blink::WebImage::AnimationFrame"** %129 to i64*
  %131 = load i64, i64* %125, align 8
  store i64 %131, i64* %130, align 8
  br label %132

132:                                              ; preds = %124, %87
  %133 = phi i64* [ %125, %124 ], [ %44, %87 ]
  store i64 0, i64* %133, align 8
  %134 = getelementptr inbounds %"class.blink::WebVector.297", %"class.blink::WebVector.297"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast %"struct.blink::WebImage::AnimationFrame"** %134 to i64*
  %136 = bitcast %"struct.blink::WebImage::AnimationFrame"** %33 to i64*
  %137 = load i64, i64* %136, align 8
  store i64 %137, i64* %135, align 8
  store i64 0, i64* %136, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %138

138:                                              ; preds = %132, %21
  br i1 %15, label %144, label %139

139:                                              ; preds = %138
  %140 = bitcast %"class.blink::ImageDecoder"* %14 to void (%"class.blink::ImageDecoder"*)***
  %141 = load void (%"class.blink::ImageDecoder"*)**, void (%"class.blink::ImageDecoder"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %141, i64 1
  %143 = load void (%"class.blink::ImageDecoder"*)*, void (%"class.blink::ImageDecoder"*)** %142, align 8
  call void %143(%"class.blink::ImageDecoder"* nonnull %14) #11
  br label %144

144:                                              ; preds = %138, %139
  ret void
}

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare %"class.blink::ImageDecoder"* @_ZN5blink12ImageDecoder6CreateE13scoped_refptrINS_13SegmentReaderEEbNS0_11AlphaOptionENS0_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorERK7SkISizeNS0_15AnimationOptionE(%"class.blink::SegmentReader"*, i1 zeroext, i32, i32, %"class.blink::ColorBehavior"* dereferenceable(4), %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #2

declare %"class.blink::SegmentReader"* @_ZN5blink13SegmentReader22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink8SVGImageC1EPNS_13ImageObserverEb(%"class.blink::SVGImage"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJS1_EEEvDpOT_(%"class.std::__1::vector.290"*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.SkBitmap** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.290"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.290"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.SkBitmap** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %class.SkBitmap*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %class.SkBitmap* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %33, i64 %9
  %35 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %33, i64 %32
  %36 = ptrtoint %class.SkBitmap* %35 to i64
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %34, %class.SkBitmap* dereferenceable(56) %1) #11
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %34, i64 1
  %38 = ptrtoint %class.SkBitmap* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %0, i64 0, i32 0, i32 0
  %40 = load %class.SkBitmap*, %class.SkBitmap** %39, align 8
  %41 = load %class.SkBitmap*, %class.SkBitmap** %3, align 8
  %42 = icmp eq %class.SkBitmap* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %class.SkBitmap* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %class.SkBitmap* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %class.SkBitmap* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %46, i64 -1
  %49 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %47, i64 -1
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %48, %class.SkBitmap* dereferenceable(56) %49) #11
  %50 = icmp eq %class.SkBitmap* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %class.SkBitmap*, %class.SkBitmap** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %class.SkBitmap* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %class.SkBitmap* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %class.SkBitmap* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %class.SkBitmap*
  %60 = icmp eq %class.SkBitmap* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %class.SkBitmap* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %62, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %63) #11
  %64 = icmp eq %class.SkBitmap* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.298"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.blink::WebImage::AnimationFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.298"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.blink::WebImage::AnimationFrame"*
  br i1 %10, label %12, label %61

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.blink::WebImage::AnimationFrame"** %13 to i64*
  %15 = icmp ugt i64 %1, 288230376151711743
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 6
  %21 = shl i64 %1, 6
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"struct.blink::WebImage::AnimationFrame"*
  %24 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %23, i64 %20
  %25 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %24 to i64
  %26 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %23, i64 %1
  %27 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.blink::WebImage::AnimationFrame"*
  %29 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %28, %11
  br i1 %29, label %46, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.blink::WebImage::AnimationFrame"* [ %39, %30 ], [ %24, %17 ]
  %32 = phi %"struct.blink::WebImage::AnimationFrame"* [ %33, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %32, i64 -1
  %34 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %33, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %34, %class.SkBitmap* dereferenceable(56) %35) #11
  %36 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %32, i64 -1, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %31, i64 -1, i32 1, i32 0
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %31, i64 -1
  %40 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %33, %11
  br i1 %40, label %41, label %30

41:                                               ; preds = %30
  %42 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %39 to i64
  %43 = load i64, i64* %6, align 8
  %44 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %13, align 8
  %45 = inttoptr i64 %43 to %"struct.blink::WebImage::AnimationFrame"*
  br label %46

46:                                               ; preds = %17, %41
  %47 = phi %"struct.blink::WebImage::AnimationFrame"* [ %45, %41 ], [ %28, %17 ]
  %48 = phi %"struct.blink::WebImage::AnimationFrame"* [ %44, %41 ], [ %11, %17 ]
  %49 = phi i64 [ %42, %41 ], [ %25, %17 ]
  %50 = phi i64 [ %43, %41 ], [ %18, %17 ]
  store i64 %49, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %51 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %48, %47
  br i1 %51, label %57, label %52

52:                                               ; preds = %46, %52
  %53 = phi %"struct.blink::WebImage::AnimationFrame"* [ %54, %52 ], [ %48, %46 ]
  %54 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %54, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %55) #11
  %56 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %54, %47
  br i1 %56, label %57, label %52

57:                                               ; preds = %52, %46
  %58 = icmp eq i64 %50, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = inttoptr i64 %50 to i8*
  tail call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %59, %57, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.298"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.blink::WebImage::AnimationFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.blink::WebImage::AnimationFrame"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 6
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.blink::WebImage::AnimationFrame"*
  %14 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %25, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %14 to i64
  br label %25

18:                                               ; preds = %12, %18
  %19 = phi %"struct.blink::WebImage::AnimationFrame"* [ %23, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.blink::WebImage::AnimationFrame"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 64, i1 false) #11
  %21 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %19, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %21) #11
  %22 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %19, i64 0, i32 1, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %19, i64 1
  %24 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %23, %14
  br i1 %24, label %16, label %18

25:                                               ; preds = %12, %16
  %26 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %26, i64* %7, align 8
  br label %108

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::vector.298"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %8, %29
  %31 = ashr exact i64 %30, 6
  %32 = add i64 %31, %1
  %33 = icmp ugt i64 %32, 288230376151711743
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.298"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %5, %29
  %38 = ashr exact i64 %37, 6
  %39 = icmp ult i64 %38, 144115188075855871
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = ashr exact i64 %37, 5
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 288230376151711743
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #12
  unreachable

48:                                               ; preds = %36, %45
  %49 = phi i64 [ %43, %45 ], [ 288230376151711743, %36 ]
  %50 = shl i64 %49, 6
  %51 = tail call i8* @_Znwm(i64 %50) #13
  %52 = bitcast i8* %51 to %"struct.blink::WebImage::AnimationFrame"*
  br label %53

53:                                               ; preds = %40, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"struct.blink::WebImage::AnimationFrame"* [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %55, i64 %31
  %57 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %56 to i64
  %58 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"struct.blink::WebImage::AnimationFrame"* [ %66, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %67, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 64, i1 false) #11
  %64 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %61, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %64) #11
  %65 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %61, i64 0, i32 1, i32 0
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %61, i64 1
  %67 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %66 to i64
  %68 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %59, %66
  br i1 %68, label %69, label %60

69:                                               ; preds = %60
  %70 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %58 to i64
  %71 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %59 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 0
  %73 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %72, align 8
  %74 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %6, align 8
  %75 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %74, %73
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %73 to i64
  br label %93

78:                                               ; preds = %69, %78
  %79 = phi %"struct.blink::WebImage::AnimationFrame"* [ %87, %78 ], [ %56, %69 ]
  %80 = phi %"struct.blink::WebImage::AnimationFrame"* [ %81, %78 ], [ %74, %69 ]
  %81 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %80, i64 -1
  %82 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %79, i64 -1, i32 0
  %83 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %81, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %82, %class.SkBitmap* dereferenceable(56) %83) #11
  %84 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %80, i64 -1, i32 1, i32 0
  %85 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %79, i64 -1, i32 1, i32 0
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %79, i64 -1
  %88 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %81, %73
  br i1 %88, label %89, label %78

89:                                               ; preds = %78
  %90 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %87 to i64
  %91 = load i64, i64* %28, align 8
  %92 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %6, align 8
  br label %93

93:                                               ; preds = %76, %89
  %94 = phi %"struct.blink::WebImage::AnimationFrame"* [ %73, %76 ], [ %92, %89 ]
  %95 = phi i64 [ %57, %76 ], [ %90, %89 ]
  %96 = phi i64 [ %77, %76 ], [ %91, %89 ]
  store i64 %95, i64* %28, align 8
  store i64 %71, i64* %7, align 8
  store i64 %70, i64* %4, align 8
  %97 = inttoptr i64 %96 to %"struct.blink::WebImage::AnimationFrame"*
  %98 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %94, %97
  br i1 %98, label %104, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.blink::WebImage::AnimationFrame"* [ %101, %99 ], [ %94, %93 ]
  %101 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %100, i64 -1
  %102 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %101, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %102) #11
  %103 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %101, %97
  br i1 %103, label %104, label %99

104:                                              ; preds = %99, %93
  %105 = icmp eq i64 %96, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %106, %104, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink8WebImage14AnimationFrameENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.298"*, %"struct.blink::WebImage::AnimationFrame"* dereferenceable(64)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::WebImage::AnimationFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.298"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.298"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::WebImage::AnimationFrame"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.blink::WebImage::AnimationFrame"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.blink::WebImage::AnimationFrame"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %36, i64 %35
  %39 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %38 to i64
  %40 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %1, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %40, %class.SkBitmap* dereferenceable(56) %41) #11
  %42 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %1, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %36, i64 %9, i32 1, i32 0
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %37, i64 1
  %46 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %0, i64 0, i32 0, i32 0
  %48 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %47, align 8
  %49 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %3, align 8
  %50 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %34
  %52 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %48 to i64
  br label %67

53:                                               ; preds = %34, %53
  %54 = phi %"struct.blink::WebImage::AnimationFrame"* [ %62, %53 ], [ %37, %34 ]
  %55 = phi %"struct.blink::WebImage::AnimationFrame"* [ %56, %53 ], [ %49, %34 ]
  %56 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %55, i64 -1
  %57 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %54, i64 -1, i32 0
  %58 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %56, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %57, %class.SkBitmap* dereferenceable(56) %58) #11
  %59 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %55, i64 -1, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %54, i64 -1, i32 1, i32 0
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %54, i64 -1
  %63 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %56, %48
  br i1 %63, label %64, label %53

64:                                               ; preds = %53
  %65 = load i64, i64* %6, align 8
  %66 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %3, align 8
  br label %67

67:                                               ; preds = %51, %64
  %68 = phi %"struct.blink::WebImage::AnimationFrame"* [ %48, %51 ], [ %66, %64 ]
  %69 = phi %"struct.blink::WebImage::AnimationFrame"* [ %37, %51 ], [ %62, %64 ]
  %70 = phi i64 [ %52, %51 ], [ %65, %64 ]
  %71 = ptrtoint %"struct.blink::WebImage::AnimationFrame"* %69 to i64
  store i64 %71, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %72 = inttoptr i64 %70 to %"struct.blink::WebImage::AnimationFrame"*
  %73 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %68, %72
  br i1 %73, label %79, label %74

74:                                               ; preds = %67, %74
  %75 = phi %"struct.blink::WebImage::AnimationFrame"* [ %76, %74 ], [ %68, %67 ]
  %76 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %75, i64 -1
  %77 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %76, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %77) #11
  %78 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %76, %72
  br i1 %78, label %79, label %74

79:                                               ; preds = %74, %67
  %80 = icmp eq i64 %70, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %70 to i8*
  tail call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %79, %81
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
