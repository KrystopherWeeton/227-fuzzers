; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGGeometryEffect.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGGeometryEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.24, %class.sk_sp.25, %class.sk_sp.26, %class.sk_sp.27, %class.sk_sp.28, %struct.SkRGBA4f, float, float, %union.anon.29, [4 x i8] }>
%class.sk_sp.24 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.25 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.26 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.27 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.28 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.29 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.sksg::GeometryEffect" = type { %"class.sksg::GeometryNode.base", %class.sk_sp, %class.SkPath }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp = type { %"class.sksg::GeometryNode"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.SkPath = type <{ %class.sk_sp.1, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.1 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.sksg::GeometryTransform" = type { %"class.sksg::GeometryEffect", %class.sk_sp.30 }
%class.sk_sp.30 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp.14 = type { %"class.sksg::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.15, [384 x i64], %class.sk_sp.16, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.18" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.15 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.16 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.sksg::InvalidationController" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%"class.sksg::TrimEffect" = type <{ %"class.sksg::GeometryEffect", float, float, i32, [4 x i8] }>
%class.SkStrokeRec = type { float, float, float, i32 }
%"class.sksg::DashEffect" = type <{ %"class.sksg::GeometryEffect", %"class.std::__1::vector.31", float, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [128 x i8] }
%class.SkTArray = type { float*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.sksg::RoundEffect" = type <{ %"class.sksg::GeometryEffect", float, [4 x i8] }>
%"class.sksg::OffsetEffect" = type <{ %"class.sksg::GeometryEffect", float, float, i8, [7 x i8] }>

$_ZN4sksg10TrimEffectD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4sksg10DashEffectD2Ev = comdat any

$_ZN4sksg10DashEffectD0Ev = comdat any

$_ZN4sksg11RoundEffectD0Ev = comdat any

$_ZN4sksg12OffsetEffectD0Ev = comdat any

$_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

@_ZTVN4sksg14GeometryEffectE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4sksg17GeometryTransformE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GeometryTransform"*)* @_ZN4sksg17GeometryTransformD2Ev to i8*), i8* bitcast (void (%"class.sksg::GeometryTransform"*)* @_ZN4sksg17GeometryTransformD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryTransform"*, %class.sk_sp*)* @_ZN4sksg17GeometryTransform18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE to i8*)] }, align 8
@__const._ZN4sksg12OffsetEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.24 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.25 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.26 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.27 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.28 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.29 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN4sksg10TrimEffectE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::TrimEffect"*)* @_ZN4sksg10TrimEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::TrimEffect"*, %class.sk_sp*)* @_ZN4sksg10TrimEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE to i8*)] }, align 8
@_ZTVN4sksg10DashEffectE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::DashEffect"*)* @_ZN4sksg10DashEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::DashEffect"*)* @_ZN4sksg10DashEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::DashEffect"*, %class.sk_sp*)* @_ZN4sksg10DashEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE to i8*)] }, align 8
@_ZTVN4sksg11RoundEffectE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::RoundEffect"*)* @_ZN4sksg11RoundEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::RoundEffect"*, %class.sk_sp*)* @_ZN4sksg11RoundEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE to i8*)] }, align 8
@_ZTVN4sksg12OffsetEffectE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::OffsetEffect"*)* @_ZN4sksg12OffsetEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1)* @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::GeometryEffect"*, %struct.SkPoint*)* @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::GeometryEffect"*)* @_ZNK4sksg14GeometryEffect8onAsPathEv to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::OffsetEffect"*, %class.sk_sp*)* @_ZN4sksg12OffsetEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE to i8*)] }, align 8

@_ZN4sksg14GeometryEffectD1Ev = hidden unnamed_addr alias void (%"class.sksg::GeometryEffect"*), void (%"class.sksg::GeometryEffect"*)* @_ZN4sksg14GeometryEffectD2Ev
@_ZN4sksg17GeometryTransformC1E5sk_spINS_12GeometryNodeEES1_INS_9TransformEE = hidden unnamed_addr alias void (%"class.sksg::GeometryTransform"*, %class.sk_sp*, %class.sk_sp.30*), void (%"class.sksg::GeometryTransform"*, %class.sk_sp*, %class.sk_sp.30*)* @_ZN4sksg17GeometryTransformC2E5sk_spINS_12GeometryNodeEES1_INS_9TransformEE
@_ZN4sksg17GeometryTransformD1Ev = hidden unnamed_addr alias void (%"class.sksg::GeometryTransform"*), void (%"class.sksg::GeometryTransform"*)* @_ZN4sksg17GeometryTransformD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg14GeometryEffectC2E5sk_spINS_12GeometryNodeEE(%"class.sksg::GeometryEffect"*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.14, align 8
  %4 = bitcast %"class.sksg::GeometryEffect"* %0 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* %4) #11
  %5 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %7, align 8
  %10 = bitcast %class.sk_sp* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 2
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %11) #11
  %12 = bitcast %"class.sksg::GeometryEffect"* %0 to %"class.sksg::Node"*
  %13 = bitcast %class.sk_sp.14* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %15 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %14, align 8
  %16 = icmp eq %"class.sksg::GeometryNode"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %2, %17
  %21 = bitcast %class.sk_sp.14* %3 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %15, %"class.sksg::GeometryNode"** %21, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %12, %class.sk_sp.14* nonnull dereferenceable(8) %3) #11
  %22 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %3, i64 0, i32 0
  %23 = load %"class.sksg::Node"*, %"class.sksg::Node"** %22, align 8
  %24 = icmp eq %"class.sksg::Node"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %"class.sksg::Node"* %23 to %class.SkRefCntBase*
  %31 = bitcast %"class.sksg::Node"* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #11
  br label %35

35:                                               ; preds = %20, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

declare void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"*) unnamed_addr #1

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.14* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.14* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4sksg14GeometryEffectD0Ev(%"class.sksg::GeometryEffect"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg14GeometryEffect6onClipEP8SkCanvasb(%"class.sksg::GeometryEffect"*, %class.SkCanvas*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 2
  tail call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %1, %class.SkPath* dereferenceable(16) %4, i32 1, i1 zeroext %2) #11
  ret void
}

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg14GeometryEffect6onDrawEP8SkCanvasRK7SkPaint(%"class.sksg::GeometryEffect"*, %class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 2
  tail call void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas* %1, %class.SkPath* dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2) #11
  ret void
}

declare void @_ZN8SkCanvas8drawPathERK6SkPathRK7SkPaint(%class.SkCanvas*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4sksg14GeometryEffect10onContainsERK7SkPoint(%"class.sksg::GeometryEffect"*, %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = tail call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* %3, float %5, float %7) #11
  ret i1 %8
}

declare zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg14GeometryEffect8onAsPathEv(%class.SkPath* noalias sret, %"class.sksg::GeometryEffect"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %1, i64 0, i32 2
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %0, %class.SkPath* dereferenceable(16) %3) #11
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg14GeometryEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::GeometryEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 1
  %6 = bitcast %class.sk_sp* %5 to %"class.sksg::Node"**
  %7 = load %"class.sksg::Node"*, %"class.sksg::Node"** %6, align 8
  %8 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %7, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #11
  %9 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = bitcast %"class.sksg::GeometryEffect"* %0 to void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)***
  %11 = load void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)**, void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)*, void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)** %11, i64 8
  %13 = load void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)*, void (%class.SkPath*, %"class.sksg::GeometryEffect"*, %class.sk_sp*)** %12, align 8
  call void %13(%class.SkPath* nonnull sret %4, %"class.sksg::GeometryEffect"* %0, %class.sk_sp* dereferenceable(8) %5) #11
  %14 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 2
  %15 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %14, %class.SkPath* nonnull dereferenceable(16) %4) #11
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @_ZN6SkPath11shrinkToFitEv(%class.SkPath* %14) #11
  %16 = call { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* %14) #11
  ret { <2 x float>, <2 x float> } %16
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10TrimEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE(%class.SkPath* noalias sret, %"class.sksg::TrimEffect"* nocapture readonly, %class.sk_sp* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.24, align 8
  %5 = alloca %class.SkStrokeRec, align 4
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %7 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  tail call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret %0, %"class.sksg::GeometryNode"* %8) #11
  %9 = bitcast %class.sk_sp.24* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %4, i64 0, i32 0
  store %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*), %class.SkPathEffect** %10, align 8
  %11 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 8
  %13 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %1, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  call void @_ZN16SkTrimPathEffect4MakeEffNS_4ModeE(%class.sk_sp.24* nonnull sret %4, float %12, float %14, i32 %16) #11
  %17 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %18 = icmp eq %class.SkPathEffect* %17, null
  br i1 %18, label %39, label %19

19:                                               ; preds = %3
  %20 = bitcast %class.SkStrokeRec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %21, align 4
  %22 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %22, align 4
  %23 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %23, align 4
  %24 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 3
  store i32 -1431655766, i32* %24, align 4
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* nonnull %5, i32 0) #11
  %25 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %26 = call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* %25, %class.SkPath* %0, %class.SkPath* dereferenceable(16) %0, %class.SkStrokeRec* nonnull %5, %struct.SkRect* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  %27 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %28 = icmp eq %class.SkPathEffect* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkPathEffect* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkPathEffect* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  call void %38(%class.SkRefCntBase* nonnull %34) #11
  br label %39

39:                                               ; preds = %3, %19, %29, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret void
}

declare void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret, %"class.sksg::GeometryNode"*) local_unnamed_addr #1

declare void @_ZN16SkTrimPathEffect4MakeEffNS_4ModeE(%class.sk_sp.24* sret, float, float, i32) local_unnamed_addr #1

declare void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg17GeometryTransformC2E5sk_spINS_12GeometryNodeEES1_INS_9TransformEE(%"class.sksg::GeometryTransform"*, %class.sk_sp* nocapture, %class.sk_sp.30* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.14, align 8
  %5 = alloca %class.sk_sp.14, align 8
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.sksg::GeometryNode"* null, %"class.sksg::GeometryNode"** %6, align 8
  %9 = bitcast %"class.sksg::GeometryTransform"* %0 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* %9) #11
  %10 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %class.sk_sp* %11 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %13) #11
  %14 = bitcast %"class.sksg::GeometryTransform"* %0 to %"class.sksg::Node"*
  %15 = bitcast %class.sk_sp.14* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %17 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %16, align 8
  %18 = icmp eq %"class.sksg::GeometryNode"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %19, %3
  %23 = bitcast %class.sk_sp.14* %4 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %17, %"class.sksg::GeometryNode"** %23, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %14, %class.sk_sp.14* nonnull dereferenceable(8) %4) #11
  %24 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %4, i64 0, i32 0
  %25 = load %"class.sksg::Node"*, %"class.sksg::Node"** %24, align 8
  %26 = icmp eq %"class.sksg::Node"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %"class.sksg::Node"* %25 to %class.SkRefCntBase*
  %33 = bitcast %"class.sksg::Node"* %25 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8
  call void %36(%class.SkRefCntBase* nonnull %32) #11
  br label %37

37:                                               ; preds = %31, %27, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg17GeometryTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %38 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %class.sk_sp.30, %class.sk_sp.30* %2, i64 0, i32 0
  %40 = bitcast %class.sk_sp.30* %2 to i64*
  %41 = load i64, i64* %40, align 8
  store %"class.sksg::Transform"* null, %"class.sksg::Transform"** %39, align 8
  %42 = bitcast %class.sk_sp.30* %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = bitcast %class.sk_sp.14* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = inttoptr i64 %41 to %"class.sksg::Transform"*
  %45 = icmp eq i64 %41, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.sksg::Transform", %"class.sksg::Transform"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  br label %49

49:                                               ; preds = %37, %46
  %50 = bitcast %class.sk_sp.14* %5 to %"class.sksg::Transform"**
  store %"class.sksg::Transform"* %44, %"class.sksg::Transform"** %50, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %14, %class.sk_sp.14* nonnull dereferenceable(8) %5) #11
  %51 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %5, i64 0, i32 0
  %52 = load %"class.sksg::Node"*, %"class.sksg::Node"** %51, align 8
  %53 = icmp eq %"class.sksg::Node"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.sksg::Node"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.sksg::Node"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #11
  br label %64

64:                                               ; preds = %49, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg17GeometryTransformD2Ev(%"class.sksg::GeometryTransform"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = alloca %class.sk_sp.14, align 8
  %4 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg17GeometryTransformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.sksg::GeometryTransform"* %0 to %"class.sksg::Node"*
  %6 = bitcast %class.sk_sp.14* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.sksg::Transform"*, %"class.sksg::Transform"** %7, align 8
  %9 = icmp eq %"class.sksg::Transform"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.sksg::Transform", %"class.sksg::Transform"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %1, %10
  %14 = bitcast %class.sk_sp.14* %3 to %"class.sksg::Transform"**
  store %"class.sksg::Transform"* %8, %"class.sksg::Transform"** %14, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %5, %class.sk_sp.14* nonnull dereferenceable(8) %3) #11
  %15 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %3, i64 0, i32 0
  %16 = load %"class.sksg::Node"*, %"class.sksg::Node"** %15, align 8
  %17 = icmp eq %"class.sksg::Node"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %"class.sksg::Node"* %16 to %class.SkRefCntBase*
  %24 = bitcast %"class.sksg::Node"* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #11
  br label %28

28:                                               ; preds = %13, %18, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %29 = load %"class.sksg::Transform"*, %"class.sksg::Transform"** %7, align 8
  %30 = icmp eq %"class.sksg::Transform"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.sksg::Transform", %"class.sksg::Transform"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::Transform"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::Transform"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %41

41:                                               ; preds = %28, %31, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %42 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 0, i32 1, i32 0
  %44 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %43, align 8
  %45 = icmp eq %"class.sksg::GeometryNode"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  br label %49

49:                                               ; preds = %46, %41
  %50 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %44, %"class.sksg::GeometryNode"** %50, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %5, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %51 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %52 = load %"class.sksg::Node"*, %"class.sksg::Node"** %51, align 8
  %53 = icmp eq %"class.sksg::Node"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.sksg::Node"* %52 to %class.SkRefCntBase*
  %60 = bitcast %"class.sksg::Node"* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #11
  br label %64

64:                                               ; preds = %58, %54, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %65 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %0, i64 0, i32 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %65) #11
  %66 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %43, align 8
  %67 = icmp eq %"class.sksg::GeometryNode"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %"class.sksg::GeometryNode"* %66 to %class.SkRefCntBase*
  %74 = bitcast %"class.sksg::GeometryNode"* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #11
  br label %78

78:                                               ; preds = %64, %68, %72
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg17GeometryTransformD0Ev(%"class.sksg::GeometryTransform"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4sksg17GeometryTransformD2Ev(%"class.sksg::GeometryTransform"* %0) #11
  %2 = bitcast %"class.sksg::GeometryTransform"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg17GeometryTransform18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE(%class.SkPath* noalias sret, %"class.sksg::GeometryTransform"* nocapture readonly, %class.sk_sp* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 4
  %5 = getelementptr inbounds %"class.sksg::GeometryTransform", %"class.sksg::GeometryTransform"* %1, i64 0, i32 1, i32 0
  %6 = bitcast %"class.sksg::Transform"** %5 to %"class.sksg::Node"**
  %7 = load %"class.sksg::Node"*, %"class.sksg::Node"** %6, align 8
  %8 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %9 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %7, %"class.sksg::InvalidationController"* null, %class.SkMatrix* dereferenceable(40) %8) #11
  %10 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -1, i64 36, i1 false)
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  store i32 -1431655766, i32* %11, align 4
  %12 = load %"class.sksg::Transform"*, %"class.sksg::Transform"** %5, align 8, !noalias !2
  %13 = bitcast %"class.sksg::Transform"* %12 to void (%class.SkMatrix*, %"class.sksg::Transform"*)***
  %14 = load void (%class.SkMatrix*, %"class.sksg::Transform"*)**, void (%class.SkMatrix*, %"class.sksg::Transform"*)*** %13, align 8, !noalias !2
  %15 = getelementptr inbounds void (%class.SkMatrix*, %"class.sksg::Transform"*)*, void (%class.SkMatrix*, %"class.sksg::Transform"*)** %14, i64 5
  %16 = load void (%class.SkMatrix*, %"class.sksg::Transform"*)*, void (%class.SkMatrix*, %"class.sksg::Transform"*)** %15, align 8, !noalias !2
  call void %16(%class.SkMatrix* nonnull sret %4, %"class.sksg::Transform"* %12) #11
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %18 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %17, align 8
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret %0, %"class.sksg::GeometryNode"* %19) #11
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %0, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkPath* %0, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10DashEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE(%class.SkPath* noalias sret, %"class.sksg::DashEffect"* nocapture readonly, %class.sk_sp* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %class.sk_sp.24, align 8
  %6 = alloca %"class.std::__1::vector.31", align 8
  %7 = alloca %class.SkStrokeRec, align 4
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %9 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %8, align 8
  tail call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret %0, %"class.sksg::GeometryNode"* %10) #11
  %11 = bitcast %class.sk_sp.24* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %5, i64 0, i32 0
  store %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*), %class.SkPathEffect** %12, align 8
  %13 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %1, i64 0, i32 1
  %14 = bitcast %"class.std::__1::vector.31"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #11
  %15 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %1, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast float** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.31"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 2
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 1
  br label %53

25:                                               ; preds = %3
  %26 = icmp ugt i64 %21, 4611686018427387903
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.31"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %28) #12
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %20) #13
  %31 = bitcast i8* %30 to float*
  %32 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 1
  %33 = bitcast float** %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast %"class.std::__1::vector.31"* %6 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds float, float* %31, i64 %21
  %36 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %35, float** %36, align 8
  %37 = bitcast float** %32 to i64*
  %38 = ptrtoint i8* %30 to i64
  %39 = icmp sgt i64 %20, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %29
  %41 = lshr exact i64 %20, 2
  %42 = inttoptr i64 %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %42, i64 %20, i1 false) #11
  %43 = getelementptr inbounds float, float* %31, i64 %41
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %29, %40
  %46 = phi i64 [ %44, %40 ], [ %38, %29 ]
  store i64 %46, i64* %37, align 8
  %47 = inttoptr i64 %46 to float*
  %48 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %1, i64 0, i32 2
  %49 = load float, float* %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %6, i64 0, i32 0, i32 1
  %52 = icmp eq float* %31, %47
  br i1 %52, label %53, label %57

53:                                               ; preds = %23, %45
  %54 = phi float** [ %24, %23 ], [ %51, %45 ]
  %55 = phi float* [ null, %23 ], [ %31, %45 ]
  %56 = phi i8* [ null, %23 ], [ %30, %45 ]
  store %class.SkPathEffect* null, %class.SkPathEffect** %12, align 8, !alias.scope !5
  br label %120

57:                                               ; preds = %45
  %58 = ptrtoint i8* %30 to i64
  %59 = bitcast float** %51 to i64*
  %60 = sub i64 %46, %58
  %61 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %61) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 128, i1 false) #11, !noalias !5
  %62 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 128
  %63 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 136
  %64 = bitcast i8* %63 to i64*
  %65 = bitcast i8* %62 to i8**
  store i8* %61, i8** %65, align 8, !noalias !5
  store i64 274877906944, i64* %64, align 8, !noalias !5
  %66 = and i64 %60, 4
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %57
  %69 = lshr exact i64 %60, 2
  %70 = trunc i64 %69 to i32
  br label %109

71:                                               ; preds = %57
  %72 = lshr exact i64 %60, 1
  %73 = bitcast i8* %62 to %class.SkTArray*
  %74 = trunc i64 %72 to i32
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  call void @_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %73, i32 %74, i32 1) #11
  %77 = load i64, i64* %64, align 8, !noalias !5
  %78 = add i64 %77, %60
  %79 = and i64 %78, 4294967294
  %80 = and i64 %77, -4294967295
  %81 = or i64 %79, %80
  store i64 %81, i64* %64, align 8, !noalias !5
  br label %87

82:                                               ; preds = %71
  %83 = icmp slt i32 %74, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %82
  %85 = and i64 %60, 4294967294
  %86 = or i64 %85, 274877906944
  store i64 %86, i64* %64, align 8, !noalias !5
  call void @_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %73, i32 0, i32 2) #11
  br label %87

87:                                               ; preds = %84, %82, %76
  %88 = bitcast i8* %62 to float**
  %89 = load float*, float** %88, align 8, !noalias !5
  %90 = load float*, float** %50, align 8, !noalias !5
  %91 = load i64, i64* %59, align 8, !noalias !5
  %92 = ptrtoint float* %90 to i64
  %93 = sub i64 %91, %92
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %109, label %95

95:                                               ; preds = %87
  %96 = bitcast float* %89 to i8*
  %97 = bitcast float* %90 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %97, i64 %93, i1 false) #11
  %98 = load float*, float** %50, align 8, !noalias !5
  %99 = load i64, i64* %59, align 8, !noalias !5
  %100 = ptrtoint float* %98 to i64
  %101 = sub i64 %99, %100
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %95
  %104 = load float*, float** %88, align 8, !noalias !5
  %105 = ashr exact i64 %101, 2
  %106 = getelementptr inbounds float, float* %104, i64 %105
  %107 = bitcast float* %106 to i8*
  %108 = bitcast float* %98 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %108, i64 %101, i1 false) #11
  br label %109

109:                                              ; preds = %103, %95, %87, %68
  %110 = phi i32 [ %70, %68 ], [ %74, %103 ], [ %74, %95 ], [ %74, %87 ]
  %111 = phi float* [ %31, %68 ], [ %89, %103 ], [ %89, %95 ], [ %89, %87 ]
  call void @_ZN16SkDashPathEffect4MakeEPKfif(%class.sk_sp.24* nonnull sret %5, float* %111, i32 %110, float %49) #11
  %112 = load i64, i64* %64, align 8, !noalias !5
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = load i8*, i8** %65, align 8, !noalias !5
  call void @_Z7sk_freePv(i8* %116) #11
  br label %117

117:                                              ; preds = %115, %109
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %61) #11, !noalias !5
  %118 = load float*, float** %50, align 8
  %119 = bitcast float* %118 to i8*
  br label %120

120:                                              ; preds = %53, %117
  %121 = phi float** [ %54, %53 ], [ %51, %117 ]
  %122 = phi i8* [ %56, %53 ], [ %119, %117 ]
  %123 = phi float* [ %55, %53 ], [ %118, %117 ]
  %124 = icmp eq float* %123, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %120
  %126 = ptrtoint float* %123 to i64
  %127 = bitcast float** %121 to i64*
  store i64 %126, i64* %127, align 8
  call void @_ZdlPv(i8* %122) #13
  br label %128

128:                                              ; preds = %120, %125
  %129 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %130 = icmp eq %class.SkPathEffect* %129, null
  br i1 %130, label %151, label %131

131:                                              ; preds = %128
  %132 = bitcast %class.SkStrokeRec* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #11
  %133 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %7, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %133, align 4
  %134 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %134, align 4
  %135 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %7, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %135, align 4
  %136 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %7, i64 0, i32 3
  store i32 -1431655766, i32* %136, align 4
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* nonnull %7, i32 0) #11
  %137 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %138 = call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* %137, %class.SkPath* %0, %class.SkPath* dereferenceable(16) %0, %class.SkStrokeRec* nonnull %7, %struct.SkRect* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #11
  %139 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %140 = icmp eq %class.SkPathEffect* %139, null
  br i1 %140, label %151, label %141

141:                                              ; preds = %131
  %142 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %139, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %151

145:                                              ; preds = %141
  %146 = bitcast %class.SkPathEffect* %139 to %class.SkRefCntBase*
  %147 = bitcast %class.SkPathEffect* %139 to void (%class.SkRefCntBase*)***
  %148 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %147, align 8
  %149 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %148, i64 2
  %150 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, align 8
  call void %150(%class.SkRefCntBase* nonnull %146) #11
  br label %151

151:                                              ; preds = %128, %131, %141, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg11RoundEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE(%class.SkPath* noalias sret, %"class.sksg::RoundEffect"* nocapture readonly, %class.sk_sp* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.24, align 8
  %5 = alloca %class.SkStrokeRec, align 4
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %7 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  tail call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret %0, %"class.sksg::GeometryNode"* %8) #11
  %9 = bitcast %class.sk_sp.24* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.sk_sp.24, %class.sk_sp.24* %4, i64 0, i32 0
  store %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*), %class.SkPathEffect** %10, align 8
  %11 = getelementptr inbounds %"class.sksg::RoundEffect", %"class.sksg::RoundEffect"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 8
  call void @_ZN18SkCornerPathEffect4MakeEf(%class.sk_sp.24* nonnull sret %4, float %12) #11
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %3
  %16 = bitcast %class.SkStrokeRec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %18 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %18, align 4
  %19 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %19, align 4
  %20 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %5, i64 0, i32 3
  store i32 -1431655766, i32* %20, align 4
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* nonnull %5, i32 0) #11
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %22 = call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* %21, %class.SkPath* %0, %class.SkPath* dereferenceable(16) %0, %class.SkStrokeRec* nonnull %5, %struct.SkRect* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  %23 = load %class.SkPathEffect*, %class.SkPathEffect** %10, align 8
  %24 = icmp eq %class.SkPathEffect* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkPathEffect* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkPathEffect* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #11
  br label %35

35:                                               ; preds = %3, %15, %25, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret void
}

declare void @_ZN18SkCornerPathEffect4MakeEf(%class.sk_sp.24* sret, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg12OffsetEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE(%class.SkPath* noalias sret, %"class.sksg::OffsetEffect"* nocapture readonly, %class.sk_sp* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = alloca %class.SkPath, align 8
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %7 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  tail call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret %0, %"class.sksg::GeometryNode"* %8) #11
  %9 = getelementptr inbounds %"class.sksg::OffsetEffect", %"class.sksg::OffsetEffect"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 8
  %11 = tail call float @llvm.fabs.f32(float %10) #11
  %12 = fcmp ugt float %11, 0x3F30000000000000
  br i1 %12, label %13, label %29

13:                                               ; preds = %3
  %14 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%class.SkPaint* @__const._ZN4sksg12OffsetEffect18onRevalidateEffectERK5sk_spINS_12GeometryNodeEE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #11
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %4, i8 zeroext 1) #11
  %15 = load float, float* %9, align 8
  %16 = call float @llvm.fabs.f32(float %15) #11
  %17 = fmul float %16, 2.000000e+00
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %4, float %17) #11
  %18 = getelementptr inbounds %"class.sksg::OffsetEffect", %"class.sksg::OffsetEffect"* %1, i64 0, i32 2
  %19 = load float, float* %18, align 4
  call void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint* nonnull %4, float %19) #11
  %20 = getelementptr inbounds %"class.sksg::OffsetEffect", %"class.sksg::OffsetEffect"* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 8
  call void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint* nonnull %4, i8 zeroext %21) #11
  %22 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %5) #11
  %24 = call zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint* nonnull %4, %class.SkPath* dereferenceable(16) %0, %class.SkPath* nonnull %5, %struct.SkRect* null, float 1.000000e+00) #11
  %25 = load float, float* %9, align 8
  %26 = fcmp ogt float %25, 0.000000e+00
  %27 = select i1 %26, i32 2, i32 0
  %28 = call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16) %0, %class.SkPath* nonnull dereferenceable(16) %5, i32 %27, %class.SkPath* %0) #11
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #11
  br label %29

29:                                               ; preds = %3, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #1

declare void @_ZN7SkPaint14setStrokeMiterEf(%class.SkPaint*, float) local_unnamed_addr #1

declare void @_ZN7SkPaint13setStrokeJoinENS_4JoinE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint*, %class.SkPath* dereferenceable(16), %class.SkPath*, %struct.SkRect*, float) local_unnamed_addr #1

declare zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10TrimEffectD0Ev(%"class.sksg::TrimEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::TrimEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %8 = icmp eq %"class.sksg::GeometryNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %7, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %14 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #11
  br label %27

27:                                               ; preds = %21, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %28 = getelementptr inbounds %"class.sksg::TrimEffect", %"class.sksg::TrimEffect"* %0, i64 0, i32 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %28) #11
  %29 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %30 = icmp eq %"class.sksg::GeometryNode"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::GeometryNode"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::GeometryNode"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %41

41:                                               ; preds = %27, %31, %35
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %4) #11
  %42 = bitcast %"class.sksg::TrimEffect"* %0 to i8*
  call void @_ZdlPv(i8* %42) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10DashEffectD2Ev(%"class.sksg::DashEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg10DashEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load float*, float** %4, align 8
  %6 = icmp eq float* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint float* %5 to i64
  %9 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast float** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %1, %7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %13 = bitcast %"class.sksg::DashEffect"* %0 to %"class.sksg::Node"*
  %14 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 0, i32 1, i32 0
  %16 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %15, align 8
  %17 = icmp eq %"class.sksg::GeometryNode"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %18, %12
  %22 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %16, %"class.sksg::GeometryNode"** %22, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %13, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %23 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %24 = load %"class.sksg::Node"*, %"class.sksg::Node"** %23, align 8
  %25 = icmp eq %"class.sksg::Node"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %"class.sksg::Node"* %24 to %class.SkRefCntBase*
  %32 = bitcast %"class.sksg::Node"* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #11
  br label %36

36:                                               ; preds = %30, %26, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %37 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %37) #11
  %38 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %15, align 8
  %39 = icmp eq %"class.sksg::GeometryNode"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %"class.sksg::GeometryNode"* %38 to %class.SkRefCntBase*
  %46 = bitcast %"class.sksg::GeometryNode"* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8
  call void %49(%class.SkRefCntBase* nonnull %45) #11
  br label %50

50:                                               ; preds = %36, %40, %44
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %13) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10DashEffectD0Ev(%"class.sksg::DashEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg10DashEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load float*, float** %4, align 8
  %6 = icmp eq float* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint float* %5 to i64
  %9 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast float** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %7, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %13 = bitcast %"class.sksg::DashEffect"* %0 to %"class.sksg::Node"*
  %14 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 0, i32 1, i32 0
  %16 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %15, align 8
  %17 = icmp eq %"class.sksg::GeometryNode"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %18, %12
  %22 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %16, %"class.sksg::GeometryNode"** %22, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %13, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %23 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %24 = load %"class.sksg::Node"*, %"class.sksg::Node"** %23, align 8
  %25 = icmp eq %"class.sksg::Node"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %"class.sksg::Node"* %24 to %class.SkRefCntBase*
  %32 = bitcast %"class.sksg::Node"* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #11
  br label %36

36:                                               ; preds = %30, %26, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %37 = getelementptr inbounds %"class.sksg::DashEffect", %"class.sksg::DashEffect"* %0, i64 0, i32 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %37) #11
  %38 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %15, align 8
  %39 = icmp eq %"class.sksg::GeometryNode"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %"class.sksg::GeometryNode"* %38 to %class.SkRefCntBase*
  %46 = bitcast %"class.sksg::GeometryNode"* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8
  call void %49(%class.SkRefCntBase* nonnull %45) #11
  br label %50

50:                                               ; preds = %36, %40, %44
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %13) #11
  %51 = bitcast %"class.sksg::DashEffect"* %0 to i8*
  call void @_ZdlPv(i8* %51) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg14GeometryEffectD2Ev(%"class.sksg::GeometryEffect"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::GeometryEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %8 = icmp eq %"class.sksg::GeometryNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %7, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %14 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #11
  br label %27

27:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %28 = getelementptr inbounds %"class.sksg::GeometryEffect", %"class.sksg::GeometryEffect"* %0, i64 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %28) #11
  %29 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %30 = icmp eq %"class.sksg::GeometryNode"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::GeometryNode"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::GeometryNode"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %41

41:                                               ; preds = %27, %31, %35
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %4) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg11RoundEffectD0Ev(%"class.sksg::RoundEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = getelementptr inbounds %"class.sksg::RoundEffect", %"class.sksg::RoundEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::RoundEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.sksg::RoundEffect", %"class.sksg::RoundEffect"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %8 = icmp eq %"class.sksg::GeometryNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %7, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %14 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #11
  br label %27

27:                                               ; preds = %21, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %28 = getelementptr inbounds %"class.sksg::RoundEffect", %"class.sksg::RoundEffect"* %0, i64 0, i32 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %28) #11
  %29 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %30 = icmp eq %"class.sksg::GeometryNode"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::GeometryNode"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::GeometryNode"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %41

41:                                               ; preds = %27, %31, %35
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %4) #11
  %42 = bitcast %"class.sksg::RoundEffect"* %0 to i8*
  call void @_ZdlPv(i8* %42) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg12OffsetEffectD0Ev(%"class.sksg::OffsetEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %class.sk_sp.14, align 8
  %3 = getelementptr inbounds %"class.sksg::OffsetEffect", %"class.sksg::OffsetEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN4sksg14GeometryEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::OffsetEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.14* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.sksg::OffsetEffect", %"class.sksg::OffsetEffect"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %8 = icmp eq %"class.sksg::GeometryNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %class.sk_sp.14* %2 to %"class.sksg::GeometryNode"**
  store %"class.sksg::GeometryNode"* %7, %"class.sksg::GeometryNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.14* nonnull dereferenceable(8) %2) #11
  %14 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #11
  br label %27

27:                                               ; preds = %21, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %28 = getelementptr inbounds %"class.sksg::OffsetEffect", %"class.sksg::OffsetEffect"* %0, i64 0, i32 0, i32 2
  call void @_ZN6SkPathD1Ev(%class.SkPath* %28) #11
  %29 = load %"class.sksg::GeometryNode"*, %"class.sksg::GeometryNode"** %6, align 8
  %30 = icmp eq %"class.sksg::GeometryNode"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sksg::GeometryNode", %"class.sksg::GeometryNode"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %"class.sksg::GeometryNode"* %29 to %class.SkRefCntBase*
  %37 = bitcast %"class.sksg::GeometryNode"* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %41

41:                                               ; preds = %27, %31, %35
  call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %4) #11
  %42 = bitcast %"class.sksg::OffsetEffect"* %0 to i8*
  call void @_ZdlPv(i8* %42) #13
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN6SkPath11shrinkToFitEv(%class.SkPath*) local_unnamed_addr #1

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #1

declare void @_ZN16SkDashPathEffect4MakeEPKfif(%class.sk_sp.24* sret, float*, i32, float) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIfLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #11
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 1
  %47 = and i64 %46, 8589934588
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #11
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #11
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4sksg13TransformPriv2AsI8SkMatrixNSt3__19enable_ifILb1EvEEEET_RK5sk_spINS_9TransformEE: argument 0"}
!4 = distinct !{!4, !"_ZN4sksg13TransformPriv2AsI8SkMatrixNSt3__19enable_ifILb1EvEEEET_RK5sk_spINS_9TransformEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4sksg12_GLOBAL__N_19make_dashENSt3__16vectorIfNS1_9allocatorIfEEEEf: argument 0"}
!7 = distinct !{!7, !"_ZN4sksg12_GLOBAL__N_19make_dashENSt3__16vectorIfNS1_9allocatorIfEEEEf"}
