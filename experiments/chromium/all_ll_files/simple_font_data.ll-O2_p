; ModuleID = '../../third_party/blink/renderer/platform/fonts/simple_font_data.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/simple_font_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.12, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.10, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.12 = type { %"class.blink::CustomFontData"* }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.13", [4 x i8] }>
%"class.WTF::RefCounted.13" = type { %"class.base::RefCounted.14" }
%"class.base::RefCounted.14" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontMetricsOverride" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.22, %class.scoped_refptr.25, %class.scoped_refptr.35, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.41 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.21 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.16" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%class.scoped_refptr.21 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.42", [4 x i8] }>
%"class.WTF::RefCounted.42" = type { %"class.base::RefCounted.43" }
%"class.base::RefCounted.43" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.22 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.23", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.25 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.26", %"class.WTF::RefCounted.33", [4 x i8] }>
%"class.blink::FontSettings.26" = type { %"class.WTF::Vector.27" }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.blink::FontTagValuePair.30"*, i32, i32 }
%"class.blink::FontTagValuePair.30" = type { i32, float }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.35 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.36", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.38, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.38 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.39", [4 x i8] }>
%"class.WTF::RefCounted.39" = type { %"class.base::RefCounted.40" }
%"class.base::RefCounted.40" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.41 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47", [512 x i8] }
%"class.WTF::VectorBufferBase.47" = type { i16*, i32, i32 }
%"class.WTF::Vector.50" = type { %"class.WTF::VectorBuffer.51" }
%"class.WTF::VectorBuffer.51" = type { %"class.WTF::VectorBufferBase.52", [4096 x i8] }
%"class.WTF::VectorBufferBase.52" = type { %struct.SkRect*, i32, i32 }

$_ZN5blink14SimpleFontDataD2Ev = comdat any

$_ZN5blink14SimpleFontDataD0Ev = comdat any

$_ZNK5blink14SimpleFontData12IsCustomFontEv = comdat any

$_ZNK5blink14SimpleFontData9IsLoadingEv = comdat any

$_ZNK5blink14SimpleFontData17IsLoadingFallbackEv = comdat any

$_ZNK5blink14SimpleFontData17ShouldSkipDrawingEv = comdat any

$_ZN5blink14CustomFontDataD2Ev = comdat any

$_ZN5blink14CustomFontDataD0Ev = comdat any

$_ZNK5blink14CustomFontData17BeginLoadIfNeededEv = comdat any

$_ZNK5blink14CustomFontData9IsLoadingEv = comdat any

$_ZNK5blink14CustomFontData17IsLoadingFallbackEv = comdat any

$_ZNK5blink14CustomFontData17ShouldSkipDrawingEv = comdat any

$_ZN5blink14CustomFontData19ClearFontFaceSourceEv = comdat any

$_ZTVN5blink14CustomFontDataE = comdat any

@_ZTVN5blink14SimpleFontDataE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SimpleFontData"*)* @_ZN5blink14SimpleFontDataD2Ev to i8*), i8* bitcast (void (%"class.blink::SimpleFontData"*)* @_ZN5blink14SimpleFontDataD0Ev to i8*), i8* bitcast (%"class.blink::SimpleFontData"* (%"class.blink::SimpleFontData"*, i32)* @_ZNK5blink14SimpleFontData20FontDataForCharacterEi to i8*), i8* bitcast (i1 (%"class.blink::SimpleFontData"*)* @_ZNK5blink14SimpleFontData12IsCustomFontEv to i8*), i8* bitcast (i1 (%"class.blink::SimpleFontData"*)* @_ZNK5blink14SimpleFontData9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::SimpleFontData"*)* @_ZNK5blink14SimpleFontData17IsLoadingFallbackEv to i8*), i8* bitcast (i1 (%"class.blink::SimpleFontData"*)* @_ZNK5blink14SimpleFontData11IsSegmentedEv to i8*), i8* bitcast (i1 (%"class.blink::SimpleFontData"*)* @_ZNK5blink14SimpleFontData17ShouldSkipDrawingEv to i8*)] }, align 8
@.str = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/platform/fonts/simple_font_data.cc\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"typeface\00", align 1
@_ZTVN5blink14CustomFontDataE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZN5blink14CustomFontDataD2Ev to i8*), i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZN5blink14CustomFontDataD0Ev to i8*), i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData17BeginLoadIfNeededEv to i8*), i8* bitcast (i1 (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData9IsLoadingEv to i8*), i8* bitcast (i1 (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData17IsLoadingFallbackEv to i8*), i8* bitcast (i1 (%"class.blink::CustomFontData"*)* @_ZNK5blink14CustomFontData17ShouldSkipDrawingEv to i8*), i8* bitcast (void (%"class.blink::CustomFontData"*)* @_ZN5blink14CustomFontData19ClearFontFaceSourceEv to i8*)] }, comdat, align 8

@_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE = hidden unnamed_addr alias void (%"class.blink::SimpleFontData"*, %"class.blink::FontPlatformData"*, %"class.blink::CustomFontData"*, i1, %"struct.blink::FontMetricsOverride"*), void (%"class.blink::SimpleFontData"*, %"class.blink::FontPlatformData"*, %"class.blink::CustomFontData"*, i1, %"struct.blink::FontMetricsOverride"*)* @_ZN5blink14SimpleFontDataC2ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SimpleFontDataC2ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, %"class.blink::FontPlatformData"* dereferenceable(72), %"class.blink::CustomFontData"*, i1 zeroext, %"struct.blink::FontMetricsOverride"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.blink::CustomFontData"* %2 to i64
  %7 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14SimpleFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 0
  store i32 1000, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 9
  %13 = bitcast float* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 25, i1 false) #9
  %14 = bitcast i32* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 10, i1 false) #9
  %15 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 2
  store float -1.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 3
  store float -1.000000e+00, float* %16, align 8
  %17 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  tail call void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"* %17, %"class.blink::FontPlatformData"* dereferenceable(72) %1) #9
  %18 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  tail call void @_ZN6SkFontC1Ev(%class.SkFont* %18) #9
  %19 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 10
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11
  %22 = bitcast %class.scoped_refptr.12* %21 to i64*
  store i64 %6, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 12
  %24 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink14SimpleFontData12PlatformInitEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %0, i1 zeroext %3, %"struct.blink::FontMetricsOverride"* dereferenceable(24) %4)
  tail call void @_ZN5blink14SimpleFontData17PlatformGlyphInitEv(%"class.blink::SimpleFontData"* %0)
  ret void
}

declare void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SimpleFontData12PlatformInitEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, i1 zeroext, %"struct.blink::FontMetricsOverride"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %struct.SkFontMetrics, align 4
  %6 = alloca %class.SkFont, align 8
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %11 = load float, float* %10, align 8
  %12 = fcmp une float %11, 0.000000e+00
  br i1 %12, label %23, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 0
  store i32 1000, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 1
  %16 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 9
  %17 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %18, align 4
  %19 = bitcast float* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 20, i1 false) #9
  %20 = bitcast i32* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 9, i1 false) #9
  %21 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %21, align 8
  %22 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %22, align 4
  br label %197

23:                                               ; preds = %3
  %24 = bitcast %struct.SkFontMetrics* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %24) #9
  %25 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 0
  store i32 -1431655766, i32* %25, align 4
  %26 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 1
  %27 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 5
  %28 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 6
  %29 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 8
  %30 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 9
  %31 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 10
  %32 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 12
  %33 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %5, i64 0, i32 13
  %34 = bitcast %class.SkFont* %6 to i8*
  %35 = bitcast float* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 -1, i64 60, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %6) #9
  %36 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  %37 = getelementptr inbounds %class.SkFont, %class.SkFont* %6, i64 0, i32 0, i32 0
  %38 = bitcast %class.SkFont* %6 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %37, align 8
  %40 = getelementptr inbounds %class.SkFont, %class.SkFont* %36, i64 0, i32 0, i32 0
  %41 = load %class.SkTypeface*, %class.SkTypeface** %40, align 8
  %42 = bitcast %class.SkFont* %36 to i64*
  store i64 %39, i64* %42, align 8
  %43 = icmp eq %class.SkTypeface* %41, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %23
  %45 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkTypeface* %41 to %class.SkRefCntBase*
  %50 = bitcast %class.SkTypeface* %41 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #9
  br label %54

54:                                               ; preds = %23, %44, %48
  %55 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6, i32 1
  %56 = getelementptr inbounds %class.SkFont, %class.SkFont* %6, i64 0, i32 1
  %57 = bitcast float* %55 to i8*
  %58 = bitcast float* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 15, i1 false) #9
  %59 = load %class.SkTypeface*, %class.SkTypeface** %37, align 8
  %60 = icmp eq %class.SkTypeface* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %59, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %class.SkTypeface* %59 to %class.SkRefCntBase*
  %67 = bitcast %class.SkTypeface* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  call void %70(%class.SkRefCntBase* nonnull %66) #9
  br label %71

71:                                               ; preds = %54, %61, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  call void @_ZNK5blink16FontPlatformData11SetupSkFontEP6SkFontfPKNS_15FontDescriptionE(%"class.blink::FontPlatformData"* %9, %class.SkFont* %36, float 1.000000e+00, %"class.blink::FontDescription"* null) #9
  %72 = call float @_ZNK6SkFont10getMetricsEP13SkFontMetrics(%class.SkFont* %36, %struct.SkFontMetrics* nonnull %5) #9
  %73 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #9
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %74 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #9
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %75 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 12
  %76 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 13
  %77 = bitcast %"struct.blink::FontMetricsOverride"* %2 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %2, i64 0, i32 1
  %80 = bitcast %"class.absl::optional"* %79 to i64*
  %81 = load i64, i64* %80, align 4
  call void @_ZN5blink11FontMetrics22AscentDescentWithHacksERfS1_RjS2_RKNS_16FontPlatformDataERK6SkFontbN4absl8optionalIfEESB_(float* nonnull dereferenceable(4) %7, float* nonnull dereferenceable(4) %8, i32* dereferenceable(4) %75, i32* dereferenceable(4) %76, %"class.blink::FontPlatformData"* dereferenceable(72) %9, %class.SkFont* dereferenceable(24) %36, i1 zeroext %1, i64 %78, i64 %81) #9
  %82 = load float, float* %7, align 4
  %83 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 1
  store float %82, float* %83, align 4
  %84 = call i64 @lroundf(float %82) #9
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 9
  store i32 %85, i32* %86, align 4
  %87 = load float, float* %8, align 4
  %88 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 2
  store float %87, float* %88, align 4
  %89 = call i64 @lroundf(float %87) #9
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 10
  store i32 %90, i32* %91, align 4
  %92 = load i32, i32* %25, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %71
  %96 = bitcast float* %33 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast i8* %98 to i64*
  %100 = zext i32 %97 to i64
  %101 = shl nuw i64 %100, 32
  %102 = or i64 %101, 1
  store i64 %102, i64* %99, align 4
  br label %103

103:                                              ; preds = %71, %95
  %104 = and i32 %92, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %103
  %107 = bitcast float* %32 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast i8* %109 to i64*
  %111 = zext i32 %108 to i64
  %112 = shl nuw i64 %111, 32
  %113 = or i64 %112, 1
  store i64 %113, i64* %110, align 4
  br label %114

114:                                              ; preds = %103, %106
  %115 = load float, float* %31, align 4
  %116 = fcmp une float %115, 0.000000e+00
  br i1 %116, label %122, label %117

117:                                              ; preds = %114
  %118 = load float, float* %7, align 4
  %119 = fpext float %118 to double
  %120 = fmul double %119, 5.600000e-01
  %121 = fptrunc double %120 to float
  br label %122

122:                                              ; preds = %114, %117
  %123 = phi float [ %121, %117 ], [ %115, %114 ]
  %124 = phi i8 [ 0, %117 ], [ 1, %114 ]
  %125 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 5
  store float %123, float* %125, align 4
  %126 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 11
  store i8 %124, i8* %126, align 4
  %127 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 4, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = load float, float* %131, align 4
  %133 = load float, float* %10, align 8
  %134 = fmul float %132, %133
  br label %137

135:                                              ; preds = %122
  %136 = load float, float* %27, align 4
  br label %137

137:                                              ; preds = %135, %130
  %138 = phi float [ %134, %130 ], [ %136, %135 ]
  %139 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 3
  store float %138, float* %139, align 4
  %140 = load float, float* %7, align 4
  %141 = call i64 @lroundf(float %140) #9
  %142 = load float, float* %8, align 4
  %143 = call i64 @lroundf(float %142) #9
  %144 = add nsw i64 %143, %141
  %145 = call i64 @lroundf(float %138) #9
  %146 = add nsw i64 %144, %145
  %147 = sitofp i64 %146 to float
  %148 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 4
  store float %147, float* %148, align 4
  %149 = load float, float* %30, align 4
  %150 = load float, float* %29, align 4
  %151 = fsub float %149, %150
  %152 = fadd float %151, 5.000000e-01
  %153 = call float @llvm.floor.f32(float %152)
  %154 = fcmp olt float %153, 0x41DFFFFFE0000000
  %155 = select i1 %154, float %153, float 0x41DFFFFFE0000000
  %156 = fcmp ogt float %155, 0xC1DFFFFFE0000000
  %157 = select i1 %156, float %155, float 0xC1DFFFFFE0000000
  %158 = fptosi float %157 to i32
  %159 = sitofp i32 %158 to float
  %160 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 2
  store float %159, float* %160, align 4
  %161 = load float, float* %28, align 4
  %162 = fcmp une float %161, 0.000000e+00
  br i1 %162, label %163, label %173

163:                                              ; preds = %137
  %164 = fadd float %161, 5.000000e-01
  %165 = call float @llvm.floor.f32(float %164)
  %166 = fcmp olt float %165, 0x41DFFFFFE0000000
  %167 = select i1 %166, float %165, float 0x41DFFFFFE0000000
  %168 = fcmp ogt float %167, 0xC1DFFFFFE0000000
  %169 = select i1 %168, float %167, float 0xC1DFFFFFE0000000
  %170 = fptosi float %169 to i32
  %171 = sitofp i32 %170 to float
  %172 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 3
  store float %171, float* %172, align 8
  br label %190

173:                                              ; preds = %137
  %174 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 3
  store float %123, float* %174, align 8
  %175 = call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %9) #9
  %176 = icmp eq %class.SkTypeface* %175, null
  br i1 %176, label %177, label %180

177:                                              ; preds = %173
  %178 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #9
  %179 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #9
  br label %180

180:                                              ; preds = %173, %177
  %181 = call zeroext i16 @_ZNK10SkTypeface14unicharToGlyphEi(%class.SkTypeface* %175, i32 120) #9
  %182 = icmp eq i16 %181, 0
  br i1 %182, label %190, label %183

183:                                              ; preds = %180
  %184 = load float, float* %10, align 8
  %185 = fcmp une float %184, 0.000000e+00
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = call float @_ZN5blink22SkFontGetWidthForGlyphERK6SkFontt(%class.SkFont* dereferenceable(24) %36, i16 zeroext %181) #9
  br label %188

188:                                              ; preds = %183, %186
  %189 = phi float [ %187, %186 ], [ 0.000000e+00, %183 ]
  store float %189, float* %174, align 8
  br label %190

190:                                              ; preds = %188, %180, %163
  %191 = load %class.SkTypeface*, %class.SkTypeface** %40, align 8
  %192 = call i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface* %191) #9
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 0
  store i32 %192, i32* %195, align 4
  br label %196

196:                                              ; preds = %190, %194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %24) #9
  br label %197

197:                                              ; preds = %196, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SimpleFontData17PlatformGlyphInitEv(%"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  %5 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %4) #9
  %6 = tail call i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface* %5) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 7
  store i16 0, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 8
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 9
  store i16 0, i16* %11, align 8
  br label %47

12:                                               ; preds = %1
  %13 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %4) #9
  %14 = icmp eq %class.SkTypeface* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #9
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %18

18:                                               ; preds = %12, %15
  %19 = call zeroext i16 @_ZNK10SkTypeface14unicharToGlyphEi(%class.SkTypeface* %13, i32 32) #9
  %20 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 7
  store i16 %19, i16* %20, align 8
  %21 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %22 = load float, float* %21, align 8
  %23 = fcmp une float %22, 0.000000e+00
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  %26 = call float @_ZN5blink22SkFontGetWidthForGlyphERK6SkFontt(%class.SkFont* dereferenceable(24) %25, i16 zeroext %19) #9
  br label %27

27:                                               ; preds = %18, %24
  %28 = phi float [ %26, %24 ], [ 0.000000e+00, %18 ]
  %29 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 8
  store float %28, float* %29, align 4
  %30 = call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %4) #9
  %31 = icmp eq %class.SkTypeface* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #9
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %35

35:                                               ; preds = %27, %32
  %36 = call zeroext i16 @_ZNK10SkTypeface14unicharToGlyphEi(%class.SkTypeface* %30, i32 48) #9
  %37 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 9
  store i16 %36, i16* %37, align 8
  %38 = load float, float* %21, align 8
  %39 = fcmp une float %38, 0.000000e+00
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  %42 = call float @_ZN5blink22SkFontGetWidthForGlyphERK6SkFontt(%class.SkFont* dereferenceable(24) %41, i16 zeroext %36) #9
  br label %43

43:                                               ; preds = %35, %40
  %44 = phi float [ %42, %40 ], [ 0.000000e+00, %35 ]
  %45 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 6
  store float %44, float* %45, align 4
  %46 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 12
  store i8 1, i8* %46, align 1
  br label %47

47:                                               ; preds = %43, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink16FontPlatformData11SetupSkFontEP6SkFontfPKNS_15FontDescriptionE(%"class.blink::FontPlatformData"*, %class.SkFont*, float, %"class.blink::FontDescription"*) local_unnamed_addr #1

declare float @_ZNK6SkFont10getMetricsEP13SkFontMetrics(%class.SkFont*, %struct.SkFontMetrics*) local_unnamed_addr #1

declare void @_ZN5blink11FontMetrics22AscentDescentWithHacksERfS1_RjS2_RKNS_16FontPlatformDataERK6SkFontbN4absl8optionalIfEESB_(float* dereferenceable(4), float* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.blink::FontPlatformData"* dereferenceable(72), %class.SkFont* dereferenceable(24), i1 zeroext, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare i64 @lroundf(float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK5blink14SimpleFontData17GlyphForCharacterEi(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  %5 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %4) #9
  %6 = icmp eq %class.SkTypeface* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 209, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #9
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %10

10:                                               ; preds = %2, %7
  %11 = call zeroext i16 @_ZNK10SkTypeface14unicharToGlyphEi(%class.SkTypeface* %5, i32 %1) #9
  ret i16 %11
}

declare i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface*) local_unnamed_addr #1

declare %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #1

declare i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20FontDataForCharacterEi(%"class.blink::SimpleFontData"* readnone returned, i32) unnamed_addr #5 align 2 {
  ret %"class.blink::SimpleFontData"* %0
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i16 @_ZNK10SkTypeface14unicharToGlyphEi(%class.SkTypeface*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SimpleFontData11IsSegmentedEv(%"class.blink::SimpleFontData"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData17SmallCapsFontDataERKNS_15FontDescriptionE(%"class.blink::SimpleFontData"*, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %4, align 8
  %6 = icmp eq %"struct.blink::SimpleFontData::DerivedFontData"* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call noalias i8* @malloc(i64 16) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #9
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast i8* %8 to %"struct.blink::SimpleFontData::DerivedFontData"*
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi %"struct.blink::SimpleFontData::DerivedFontData"* [ %5, %2 ], [ %11, %7 ]
  %14 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %14, align 8
  %16 = icmp eq %"class.blink::SimpleFontData"* %15, null
  br i1 %16, label %17, label %38

17:                                               ; preds = %12
  %18 = tail call %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20CreateScaledFontDataERKNS_15FontDescriptionEf(%"class.blink::SimpleFontData"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, float 0x3FE6666660000000)
  %19 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %4, align 8
  %20 = ptrtoint %"class.blink::SimpleFontData"* %18 to i64
  %21 = bitcast %"struct.blink::SimpleFontData::DerivedFontData"* %19 to i64*
  %22 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %19, i64 0, i32 0, i32 0
  %23 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %22, align 8
  store i64 %20, i64* %21, align 8
  %24 = icmp eq %"class.blink::SimpleFontData"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %23, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #9
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 -2
  %33 = bitcast %"class.base::RefCounted"* %32 to %"class.blink::FontData"*
  %34 = bitcast %"class.base::RefCounted"* %32 to void (%"class.blink::FontData"*)***
  %35 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %35, i64 1
  %37 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %36, align 8
  tail call void %37(%"class.blink::FontData"* nonnull %33) #9
  br label %38

38:                                               ; preds = %12, %31, %25, %17
  %39 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %4, align 8
  %40 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %40, align 8
  %42 = icmp eq %"class.blink::SimpleFontData"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %41, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  br label %45

45:                                               ; preds = %38, %43
  ret %"class.blink::SimpleFontData"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20CreateScaledFontDataERKNS_15FontDescriptionEf(%"class.blink::SimpleFontData"*, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80), float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::FontMetricsOverride", align 4
  %5 = alloca %"class.blink::FontPlatformData", align 8
  %6 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  %7 = load float, float* %6, align 4
  %8 = fmul float %7, %2
  %9 = tail call i64 @lroundf(float %8) #9
  %10 = sitofp i64 %9 to float
  %11 = bitcast %"class.blink::FontPlatformData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  call void @_ZN5blink16FontPlatformDataC1ERKS0_f(%"class.blink::FontPlatformData"* nonnull %5, %"class.blink::FontPlatformData"* dereferenceable(72) %12, float %10) #9
  %13 = bitcast %"class.blink::SimpleFontData"* %0 to i1 (%"class.blink::SimpleFontData"*)***
  %14 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %14, i64 3
  %16 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %15, align 8
  %17 = call zeroext i1 %16(%"class.blink::SimpleFontData"* %0) #9
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = call noalias i8* @malloc(i64 16) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #9
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  %22 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14CustomFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = ptrtoint i8* %19 to i64
  br label %24

24:                                               ; preds = %3, %18
  %25 = phi i64 [ %23, %18 ], [ 0, %3 ]
  %26 = call noalias i8* @malloc(i64 224) #9
  %27 = bitcast i8* %26 to %"class.blink::SimpleFontData"*
  %28 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  %30 = bitcast i8* %29 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 0, i64 24, i1 false) #9
  store i32 1, i32* %30, align 4
  %31 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14SimpleFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 12
  %33 = bitcast i8* %32 to i32*
  store i32 1000, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %26, i64 16
  %35 = getelementptr inbounds i8, i8* %26, i64 48
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds i8, i8* %26, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 25, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 10, i1 false) #9
  %37 = getelementptr inbounds i8, i8* %26, i64 68
  %38 = bitcast i8* %37 to float*
  store float -1.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds i8, i8* %26, i64 72
  %40 = bitcast i8* %39 to float*
  store float -1.000000e+00, float* %40, align 8
  %41 = getelementptr inbounds i8, i8* %26, i64 80
  %42 = bitcast i8* %41 to %"class.blink::FontPlatformData"*
  call void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"* %42, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %5) #9
  %43 = getelementptr inbounds i8, i8* %26, i64 152
  %44 = bitcast i8* %43 to %class.SkFont*
  call void @_ZN6SkFontC1Ev(%class.SkFont* %44) #9
  %45 = getelementptr inbounds i8, i8* %26, i64 192
  %46 = bitcast i8* %45 to i64*
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %26, i64 200
  %48 = bitcast i8* %47 to i64*
  store i64 %25, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %26, i64 208
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #9
  call void @_ZN5blink14SimpleFontData12PlatformInitEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %27, i1 zeroext false, %"struct.blink::FontMetricsOverride"* nonnull dereferenceable(24) %4) #9
  call void @_ZN5blink14SimpleFontData17PlatformGlyphInitEv(%"class.blink::SimpleFontData"* %27) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #9
  ret %"class.blink::SimpleFontData"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20EmphasisMarkFontDataERKNS_15FontDescriptionE(%"class.blink::SimpleFontData"*, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %4, align 8
  %6 = icmp eq %"struct.blink::SimpleFontData::DerivedFontData"* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = tail call noalias i8* @malloc(i64 16) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #9
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast i8* %8 to %"struct.blink::SimpleFontData::DerivedFontData"*
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi %"struct.blink::SimpleFontData::DerivedFontData"* [ %5, %2 ], [ %11, %7 ]
  %14 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %13, i64 0, i32 1, i32 0
  %15 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %14, align 8
  %16 = icmp eq %"class.blink::SimpleFontData"* %15, null
  br i1 %16, label %17, label %39

17:                                               ; preds = %12
  %18 = tail call %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20CreateScaledFontDataERKNS_15FontDescriptionEf(%"class.blink::SimpleFontData"* %0, %"class.blink::FontDescription"* dereferenceable(80) %1, float 5.000000e-01)
  %19 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %4, align 8
  %20 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %19, i64 0, i32 1
  %21 = ptrtoint %"class.blink::SimpleFontData"* %18 to i64
  %22 = bitcast %class.scoped_refptr.10* %20 to i64*
  %23 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %20, i64 0, i32 0
  %24 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %23, align 8
  store i64 %21, i64* %22, align 8
  %25 = icmp eq %"class.blink::SimpleFontData"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %24, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #9
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -2
  %34 = bitcast %"class.base::RefCounted"* %33 to %"class.blink::FontData"*
  %35 = bitcast %"class.base::RefCounted"* %33 to void (%"class.blink::FontData"*)***
  %36 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %36, i64 1
  %38 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %37, align 8
  tail call void %38(%"class.blink::FontData"* nonnull %34) #9
  br label %39

39:                                               ; preds = %12, %32, %26, %17
  %40 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %4, align 8
  %41 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %40, i64 0, i32 1, i32 0
  %42 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %41, align 8
  %43 = icmp eq %"class.blink::SimpleFontData"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %42, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %45) #9
  br label %46

46:                                               ; preds = %39, %44
  ret %"class.blink::SimpleFontData"* %42
}

declare void @_ZN5blink16FontPlatformDataC1ERKS0_f(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72), float) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData25MetricsOverriddenFontDataERKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, %"struct.blink::FontMetricsOverride"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 224) #9
  %4 = bitcast i8* %3 to %"class.blink::SimpleFontData"*
  %5 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11, i32 0
  %7 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %6, align 8
  %8 = icmp eq %"class.blink::CustomFontData"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CustomFontData", %"class.blink::CustomFontData"* %7, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #9
  br label %11

11:                                               ; preds = %2, %9
  %12 = ptrtoint %"class.blink::CustomFontData"* %7 to i64
  %13 = getelementptr inbounds i8, i8* %3, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14SimpleFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %3, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 1000, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %3, i64 16
  %19 = getelementptr inbounds i8, i8* %3, i64 48
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %3, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 25, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 10, i1 false) #9
  %21 = getelementptr inbounds i8, i8* %3, i64 68
  %22 = bitcast i8* %21 to float*
  store float -1.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds i8, i8* %3, i64 72
  %24 = bitcast i8* %23 to float*
  store float -1.000000e+00, float* %24, align 8
  %25 = getelementptr inbounds i8, i8* %3, i64 80
  %26 = bitcast i8* %25 to %"class.blink::FontPlatformData"*
  tail call void @_ZN5blink16FontPlatformDataC1ERKS0_(%"class.blink::FontPlatformData"* %26, %"class.blink::FontPlatformData"* dereferenceable(72) %5) #9
  %27 = getelementptr inbounds i8, i8* %3, i64 152
  %28 = bitcast i8* %27 to %class.SkFont*
  tail call void @_ZN6SkFontC1Ev(%class.SkFont* %28) #9
  %29 = getelementptr inbounds i8, i8* %3, i64 192
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %3, i64 200
  %32 = bitcast i8* %31 to i64*
  store i64 %12, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %3, i64 208
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #9
  tail call void @_ZN5blink14SimpleFontData12PlatformInitEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %4, i1 zeroext false, %"struct.blink::FontMetricsOverride"* dereferenceable(24) %1) #9
  tail call void @_ZN5blink14SimpleFontData17PlatformGlyphInitEv(%"class.blink::SimpleFontData"* %4) #9
  ret %"class.blink::SimpleFontData"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %16

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %6 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %5, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZNK5blink14SimpleFontData37ComputeNormalizedTypoAscentAndDescentEv(%"class.blink::SimpleFontData"* %0)
  br label %10

10:                                               ; preds = %4, %9
  %11 = bitcast %"struct.blink::FontHeight"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  br label %51

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %18 = load float, float* %17, align 8
  %19 = fmul float %18, 6.400000e+01
  %20 = tail call float @llvm.round.f32(float %19) #9
  %21 = fcmp ult float %20, 0xC1E0000000000000
  %22 = fcmp ugt float %20, 0x41DFFFFFE0000000
  %23 = fcmp ogt float %20, 0xC1E0000000000000
  %24 = select i1 %23, float %20, float 0xC1E0000000000000
  %25 = fptosi float %24 to i32
  %26 = select i1 %21, i32 0, i32 2147483647
  %27 = select i1 %22, i32 %26, i32 %25
  %28 = sdiv i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = tail call i1 @llvm.is.constant.i64(i64 %29) #9
  br i1 %30, label %37, label %31

31:                                               ; preds = %16
  %32 = icmp slt i32 %27, -1
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = add nsw i64 %29, 2147483648
  %35 = icmp ult i64 %34, 4294967296
  %36 = select i1 %35, i32 %28, i32 %33, !prof !3
  br label %37

37:                                               ; preds = %16, %31
  %38 = phi i32 [ %36, %31 ], [ %28, %16 ]
  %39 = icmp sgt i32 %38, -1
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %27, i32 %38) #9
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !4
  br i1 %30, label %51, label %45

45:                                               ; preds = %37
  %46 = icmp slt i32 %27, -1
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = add nsw i64 %29, 2147483648
  %49 = icmp ult i64 %48, 4294967296
  %50 = select i1 %49, i32 %28, i32 %47, !prof !3
  br label %51

51:                                               ; preds = %37, %45, %10
  %52 = phi i32 [ %13, %10 ], [ %44, %45 ], [ %44, %37 ]
  %53 = phi i32 [ %15, %10 ], [ %50, %45 ], [ %28, %37 ]
  %54 = zext i32 %53 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %52 to i64
  %57 = or i64 %55, %56
  ret i64 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SimpleFontData37ComputeNormalizedTypoAscentAndDescentEv(%"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [2 x i16], align 2
  %3 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  %4 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* %3) #9
  %5 = bitcast [2 x i16]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #9
  %6 = getelementptr inbounds [2 x i16], [2 x i16]* %2, i64 0, i64 0
  store i16 -21846, i16* %6, align 2
  %7 = getelementptr inbounds [2 x i16], [2 x i16]* %2, i64 0, i64 1
  store i16 -21846, i16* %7, align 2
  %8 = call i64 @_ZNK10SkTypeface12getTableDataEjmmPv(%class.SkTypeface* %4, i32 1330851634, i64 68, i64 4, i8* nonnull %5) #9
  %9 = icmp eq i64 %8, 4
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = load i16, i16* %6, align 2
  %12 = call i16 @llvm.bswap.i16(i16 %11) #9
  %13 = load i16, i16* %7, align 2
  %14 = call i16 @llvm.bswap.i16(i16 %13) #9
  %15 = zext i16 %14 to i32
  %16 = zext i16 %12 to i32
  %17 = shl nuw i32 %15, 16
  %18 = sub i32 0, %17
  br label %19

19:                                               ; preds = %1, %10
  %20 = phi i32 [ %16, %10 ], [ 0, %1 ]
  %21 = phi i32 [ %18, %10 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #9
  %22 = or i32 %21, %20
  %23 = trunc i32 %22 to i16
  %24 = icmp sgt i16 %23, 0
  br i1 %24, label %25, label %48

25:                                               ; preds = %19
  %26 = lshr i32 %21, 16
  %27 = trunc i32 %26 to i16
  %28 = sitofp i16 %23 to float
  %29 = sitofp i16 %27 to float
  %30 = fadd float %28, %29
  %31 = fcmp ole float %30, 0.000000e+00
  %32 = fcmp olt float %30, %28
  %33 = or i1 %32, %31
  br i1 %33, label %48, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %36 = load float, float* %35, align 8
  %37 = fmul float %36, %28
  %38 = fdiv float %37, %30
  %39 = fmul float %38, 6.400000e+01
  %40 = call float @llvm.round.f32(float %39) #9
  %41 = fcmp ult float %40, 0xC1E0000000000000
  %42 = fcmp ugt float %40, 0x41DFFFFFE0000000
  %43 = fcmp ogt float %40, 0xC1E0000000000000
  %44 = select i1 %43, float %40, float 0xC1E0000000000000
  %45 = fptosi float %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  br label %73

48:                                               ; preds = %25, %19
  %49 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 1
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 2
  %52 = load float, float* %51, align 4
  %53 = fadd float %50, %52
  %54 = fcmp ole float %53, 0.000000e+00
  %55 = fcmp olt float %50, 0.000000e+00
  %56 = or i1 %55, %54
  %57 = fcmp olt float %53, %50
  %58 = or i1 %57, %56
  br i1 %58, label %97, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %61 = load float, float* %60, align 8
  %62 = fmul float %50, %61
  %63 = fdiv float %62, %53
  %64 = fmul float %63, 6.400000e+01
  %65 = call float @llvm.round.f32(float %64) #9
  %66 = fcmp ult float %65, 0xC1E0000000000000
  %67 = fcmp ugt float %65, 0x41DFFFFFE0000000
  %68 = fcmp ogt float %65, 0xC1E0000000000000
  %69 = select i1 %68, float %65, float 0xC1E0000000000000
  %70 = fptosi float %69 to i32
  %71 = select i1 %66, i32 0, i32 2147483647
  %72 = select i1 %67, i32 %71, i32 %70
  br label %73

73:                                               ; preds = %34, %59
  %74 = phi float [ %36, %34 ], [ %61, %59 ]
  %75 = phi i32 [ %47, %34 ], [ %72, %59 ]
  %76 = fmul float %74, 6.400000e+01
  %77 = call float @llvm.round.f32(float %76) #9
  %78 = fcmp ult float %77, 0xC1E0000000000000
  %79 = fcmp ugt float %77, 0x41DFFFFFE0000000
  %80 = fcmp ogt float %77, 0xC1E0000000000000
  %81 = select i1 %80, float %77, float 0xC1E0000000000000
  %82 = fptosi float %81 to i32
  %83 = select i1 %78, i32 0, i32 2147483647
  %84 = select i1 %79, i32 %83, i32 %82
  %85 = icmp sgt i32 %75, -1
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %84, i32 %75) #9
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89
  %91 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %92 = bitcast %"struct.blink::FontHeight"* %91 to i64*
  %93 = zext i32 %90 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %75 to i64
  %96 = or i64 %94, %95
  store i64 %96, i64* %92, align 8
  br label %97

97:                                               ; preds = %73, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14SimpleFontData20NormalizedTypoAscentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %6 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %5, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZNK5blink14SimpleFontData37ComputeNormalizedTypoAscentAndDescentEv(%"class.blink::SimpleFontData"* %0) #9
  br label %10

10:                                               ; preds = %9, %4
  %11 = bitcast %"struct.blink::FontHeight"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  ret i32 %13

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %16 = load float, float* %15, align 8
  %17 = fmul float %16, 6.400000e+01
  %18 = tail call float @llvm.round.f32(float %17) #9
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  %26 = sdiv i32 %25, 2
  %27 = sext i32 %26 to i64
  %28 = tail call i1 @llvm.is.constant.i64(i64 %27) #9
  br i1 %28, label %35, label %29

29:                                               ; preds = %14
  %30 = icmp slt i32 %25, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = add nsw i64 %27, 2147483648
  %33 = icmp ult i64 %32, 4294967296
  %34 = select i1 %33, i32 %26, i32 %31, !prof !3
  br label %35

35:                                               ; preds = %29, %14
  %36 = phi i32 [ %34, %29 ], [ %26, %14 ]
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %36) #9
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !4
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14SimpleFontData21NormalizedTypoDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %6 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %5, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZNK5blink14SimpleFontData37ComputeNormalizedTypoAscentAndDescentEv(%"class.blink::SimpleFontData"* %0) #9
  br label %10

10:                                               ; preds = %9, %4
  %11 = bitcast %"struct.blink::FontHeight"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %17 = load float, float* %16, align 8
  %18 = fmul float %17, 6.400000e+01
  %19 = tail call float @llvm.round.f32(float %18) #9
  %20 = fcmp ult float %19, 0xC1E0000000000000
  %21 = fcmp ugt float %19, 0x41DFFFFFE0000000
  %22 = fcmp ogt float %19, 0xC1E0000000000000
  %23 = select i1 %22, float %19, float 0xC1E0000000000000
  %24 = fptosi float %23 to i32
  %25 = select i1 %20, i32 0, i32 2147483647
  %26 = select i1 %21, i32 %25, i32 %24
  %27 = sdiv i32 %26, 2
  %28 = sext i32 %27 to i64
  %29 = tail call i1 @llvm.is.constant.i64(i64 %28) #9
  br i1 %29, label %36, label %30

30:                                               ; preds = %15
  %31 = icmp slt i32 %26, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = add nsw i64 %28, 2147483648
  %34 = icmp ult i64 %33, 4294967296
  %35 = select i1 %34, i32 %27, i32 %32, !prof !3
  br label %36

36:                                               ; preds = %10, %15, %30
  %37 = phi i32 [ %14, %10 ], [ %35, %30 ], [ %27, %15 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SimpleFontData36TrySetNormalizedTypoAscentAndDescentEff(%"class.blink::SimpleFontData"* nocapture, float, float) local_unnamed_addr #0 align 2 {
  %4 = fadd float %1, %2
  %5 = fcmp ole float %4, 0.000000e+00
  %6 = fcmp olt float %1, 0.000000e+00
  %7 = or i1 %6, %5
  %8 = fcmp olt float %4, %1
  %9 = or i1 %8, %7
  br i1 %9, label %45, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %12 = load float, float* %11, align 8
  %13 = fmul float %12, %1
  %14 = fdiv float %13, %4
  %15 = fmul float %14, 6.400000e+01
  %16 = tail call float @llvm.round.f32(float %15) #9
  %17 = fcmp ult float %16, 0xC1E0000000000000
  %18 = fcmp ugt float %16, 0x41DFFFFFE0000000
  %19 = fcmp ogt float %16, 0xC1E0000000000000
  %20 = select i1 %19, float %16, float 0xC1E0000000000000
  %21 = fptosi float %20 to i32
  %22 = select i1 %17, i32 0, i32 2147483647
  %23 = select i1 %18, i32 %22, i32 %21
  %24 = fmul float %12, 6.400000e+01
  %25 = tail call float @llvm.round.f32(float %24) #9
  %26 = fcmp ult float %25, 0xC1E0000000000000
  %27 = fcmp ugt float %25, 0x41DFFFFFE0000000
  %28 = fcmp ogt float %25, 0xC1E0000000000000
  %29 = select i1 %28, float %25, float 0xC1E0000000000000
  %30 = fptosi float %29 to i32
  %31 = select i1 %26, i32 0, i32 2147483647
  %32 = select i1 %27, i32 %31, i32 %30
  %33 = icmp sgt i32 %23, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %23) #9
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !4
  %39 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %40 = bitcast %"struct.blink::FontHeight"* %39 to i64*
  %41 = zext i32 %38 to i64
  %42 = shl nuw i64 %41, 32
  %43 = zext i32 %23 to i64
  %44 = or i64 %42, %43
  store i64 %44, i64* %40, align 8
  br label %45

45:                                               ; preds = %3, %10
  %46 = phi i1 [ true, %10 ], [ false, %3 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14SimpleFontData16VerticalPositionENS_24FontVerticalPositionTypeENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %128 [
    i32 0, label %4
    i32 1, label %21
    i32 2, label %41
    i32 3, label %82
  ]

4:                                                ; preds = %3
  %5 = icmp eq i32 %2, 0
  %6 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 9
  %7 = load i32, i32* %6, align 4
  br i1 %5, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %7
  %12 = sdiv i32 %11, 2
  %13 = sub nsw i32 %11, %12
  br label %14

14:                                               ; preds = %4, %8
  %15 = phi i32 [ %13, %8 ], [ %7, %4 ]
  %16 = icmp sgt i32 %15, 33554431
  br i1 %16, label %128, label %17

17:                                               ; preds = %14
  %18 = icmp slt i32 %15, -33554432
  %19 = shl i32 %15, 6
  %20 = select i1 %18, i32 -2147483648, i32 %19
  ret i32 %20

21:                                               ; preds = %3
  %22 = icmp eq i32 %2, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 10
  %25 = load i32, i32* %24, align 4
  br label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 1, i32 10
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %28
  %32 = sdiv i32 %31, 2
  br label %33

33:                                               ; preds = %23, %26
  %34 = phi i32 [ %25, %23 ], [ %32, %26 ]
  %35 = icmp slt i32 %34, -33554431
  br i1 %35, label %128, label %36

36:                                               ; preds = %33
  %37 = icmp sgt i32 %34, 33554432
  %38 = shl i32 %34, 6
  %39 = sub i32 0, %38
  %40 = select i1 %37, i32 -2147483648, i32 %39
  br label %128

41:                                               ; preds = %3
  %42 = icmp eq i32 %2, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %45 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %44, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  tail call void @_ZNK5blink14SimpleFontData37ComputeNormalizedTypoAscentAndDescentEv(%"class.blink::SimpleFontData"* %0) #9
  br label %49

49:                                               ; preds = %48, %43
  %50 = bitcast %"struct.blink::FontHeight"* %44 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  br label %128

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %55 = load float, float* %54, align 8
  %56 = fmul float %55, 6.400000e+01
  %57 = tail call float @llvm.round.f32(float %56) #9
  %58 = fcmp ult float %57, 0xC1E0000000000000
  %59 = fcmp ugt float %57, 0x41DFFFFFE0000000
  %60 = fcmp ogt float %57, 0xC1E0000000000000
  %61 = select i1 %60, float %57, float 0xC1E0000000000000
  %62 = fptosi float %61 to i32
  %63 = select i1 %58, i32 0, i32 2147483647
  %64 = select i1 %59, i32 %63, i32 %62
  %65 = sdiv i32 %64, 2
  %66 = sext i32 %65 to i64
  %67 = tail call i1 @llvm.is.constant.i64(i64 %66) #9
  br i1 %67, label %74, label %68

68:                                               ; preds = %53
  %69 = icmp slt i32 %64, -1
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = add nsw i64 %66, 2147483648
  %72 = icmp ult i64 %71, 4294967296
  %73 = select i1 %72, i32 %65, i32 %70, !prof !3
  br label %74

74:                                               ; preds = %68, %53
  %75 = phi i32 [ %73, %68 ], [ %65, %53 ]
  %76 = icmp sgt i32 %75, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %64, i32 %75) #9
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !4
  br label %128

82:                                               ; preds = %3
  %83 = icmp eq i32 %2, 0
  br i1 %83, label %84, label %95

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 14
  %86 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %85, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %84
  tail call void @_ZNK5blink14SimpleFontData37ComputeNormalizedTypoAscentAndDescentEv(%"class.blink::SimpleFontData"* %0) #9
  br label %90

90:                                               ; preds = %89, %84
  %91 = bitcast %"struct.blink::FontHeight"* %85 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = lshr i64 %92, 32
  %94 = trunc i64 %93 to i32
  br label %116

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %97 = load float, float* %96, align 8
  %98 = fmul float %97, 6.400000e+01
  %99 = tail call float @llvm.round.f32(float %98) #9
  %100 = fcmp ult float %99, 0xC1E0000000000000
  %101 = fcmp ugt float %99, 0x41DFFFFFE0000000
  %102 = fcmp ogt float %99, 0xC1E0000000000000
  %103 = select i1 %102, float %99, float 0xC1E0000000000000
  %104 = fptosi float %103 to i32
  %105 = select i1 %100, i32 0, i32 2147483647
  %106 = select i1 %101, i32 %105, i32 %104
  %107 = sdiv i32 %106, 2
  %108 = sext i32 %107 to i64
  %109 = tail call i1 @llvm.is.constant.i64(i64 %108) #9
  br i1 %109, label %116, label %110

110:                                              ; preds = %95
  %111 = icmp slt i32 %106, -1
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = add nsw i64 %108, 2147483648
  %114 = icmp ult i64 %113, 4294967296
  %115 = select i1 %114, i32 %107, i32 %112, !prof !3
  br label %116

116:                                              ; preds = %90, %95, %110
  %117 = phi i32 [ %94, %90 ], [ %115, %110 ], [ %107, %95 ]
  %118 = tail call i1 @llvm.is.constant.i32(i32 %117) #9
  br i1 %118, label %119, label %123

119:                                              ; preds = %116
  %120 = sub i32 0, %117
  %121 = icmp eq i32 %120, -2147483648
  %122 = select i1 %121, i32 2147483647, i32 %120
  br label %128

123:                                              ; preds = %116
  %124 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %117) #9
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 2147483647, i32 %126
  br label %128

128:                                              ; preds = %36, %3, %123, %119, %49, %74, %33, %14
  %129 = phi i32 [ 2147483647, %14 ], [ 2147483647, %33 ], [ %52, %49 ], [ %81, %74 ], [ %122, %119 ], [ %127, %123 ], [ 0, %3 ], [ %40, %36 ]
  ret i32 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink14SimpleFontData22PlatformBoundsForGlyphEt(%"class.blink::SimpleFontData"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 8
  %4 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %5 = load float, float* %4, align 8
  %6 = fcmp une float %5, 0.000000e+00
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  %11 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -1, i64 16, i1 false)
  call void @_ZN5blink23SkFontGetBoundsForGlyphERK6SkFonttP6SkRect(%class.SkFont* dereferenceable(24) %10, i16 zeroext %1, %struct.SkRect* nonnull %3) #9
  %12 = bitcast %struct.SkRect* %3 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 8
  %14 = bitcast float* %9 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 8
  %16 = fsub <2 x float> %15, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br label %17

17:                                               ; preds = %2, %7
  %18 = phi <2 x float> [ %16, %7 ], [ zeroinitializer, %2 ]
  %19 = phi <2 x float> [ %13, %7 ], [ zeroinitializer, %2 ]
  %20 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %21 = insertvalue { <2 x float>, <2 x float> } %20, <2 x float> %18, 1
  ret { <2 x float>, <2 x float> } %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink23SkFontGetBoundsForGlyphERK6SkFonttP6SkRect(%class.SkFont* dereferenceable(24), i16 zeroext, %struct.SkRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SimpleFontData15BoundsForGlyphsERKN3WTF6VectorItLj256ENS1_18PartitionAllocatorEEEPNS2_I6SkRectLj256ES3_EE(%"class.blink::SimpleFontData"*, %"class.WTF::Vector.45"* dereferenceable(528), %"class.WTF::Vector.50"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %5 = load float, float* %4, align 8
  %6 = fcmp une float %5, 0.000000e+00
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %struct.SkRect*, %struct.SkRect** %9, align 8
  tail call void @_ZN5blink24SkFontGetBoundsForGlyphsERK6SkFontRKN3WTF6VectorItLj256ENS3_18PartitionAllocatorEEEP6SkRect(%class.SkFont* dereferenceable(24) %8, %"class.WTF::Vector.45"* dereferenceable(528) %1, %struct.SkRect* %10) #9
  br label %11

11:                                               ; preds = %3, %7
  ret void
}

declare void @_ZN5blink24SkFontGetBoundsForGlyphsERK6SkFontRKN3WTF6VectorItLj256ENS3_18PartitionAllocatorEEEP6SkRect(%class.SkFont* dereferenceable(24), %"class.WTF::Vector.45"* dereferenceable(528), %struct.SkRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink14SimpleFontData21PlatformWidthForGlyphEt(%"class.blink::SimpleFontData"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5, i32 2
  %4 = load float, float* %3, align 8
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6
  %8 = tail call float @_ZN5blink22SkFontGetWidthForGlyphERK6SkFontt(%class.SkFont* dereferenceable(24) %7, i16 zeroext %1) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi float [ %8, %6 ], [ 0.000000e+00, %2 ]
  ret float %10
}

declare float @_ZN5blink22SkFontGetWidthForGlyphERK6SkFontt(%class.SkFont* dereferenceable(24), i16 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SimpleFontDataD2Ev(%"class.blink::SimpleFontData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14SimpleFontDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11, i32 0
  %4 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %3, align 8
  %5 = icmp eq %"class.blink::CustomFontData"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CustomFontData", %"class.blink::CustomFontData"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.14", %"class.base::RefCounted.14"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.14"* %13 to %"class.blink::CustomFontData"*
  %15 = bitcast %"class.base::RefCounted.14"* %13 to void (%"class.blink::CustomFontData"*)***
  %16 = load void (%"class.blink::CustomFontData"*)**, void (%"class.blink::CustomFontData"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %16, i64 1
  %18 = load void (%"class.blink::CustomFontData"*)*, void (%"class.blink::CustomFontData"*)** %17, align 8
  tail call void %18(%"class.blink::CustomFontData"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::SimpleFontData::DerivedFontData"*, %"struct.blink::SimpleFontData::DerivedFontData"** %20, align 8
  store %"struct.blink::SimpleFontData::DerivedFontData"* null, %"struct.blink::SimpleFontData::DerivedFontData"** %20, align 8
  %22 = icmp eq %"struct.blink::SimpleFontData::DerivedFontData"* %21, null
  br i1 %22, label %59, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %21, i64 0, i32 1, i32 0
  %25 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %24, align 8
  %26 = icmp eq %"class.blink::SimpleFontData"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #9
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 -2
  %35 = bitcast %"class.base::RefCounted"* %34 to %"class.blink::FontData"*
  %36 = bitcast %"class.base::RefCounted"* %34 to void (%"class.blink::FontData"*)***
  %37 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %37, i64 1
  %39 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %38, align 8
  tail call void %39(%"class.blink::FontData"* nonnull %35) #9
  br label %40

40:                                               ; preds = %33, %27, %23
  %41 = getelementptr inbounds %"struct.blink::SimpleFontData::DerivedFontData", %"struct.blink::SimpleFontData::DerivedFontData"* %21, i64 0, i32 0, i32 0
  %42 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %41, align 8
  %43 = icmp eq %"class.blink::SimpleFontData"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %42, i64 0, i32 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %45, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #9
  %47 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %45, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %45, i64 -2
  %52 = bitcast %"class.base::RefCounted"* %51 to %"class.blink::FontData"*
  %53 = bitcast %"class.base::RefCounted"* %51 to void (%"class.blink::FontData"*)***
  %54 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %54, i64 1
  %56 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %55, align 8
  tail call void %56(%"class.blink::FontData"* nonnull %52) #9
  br label %57

57:                                               ; preds = %50, %44, %40
  %58 = bitcast %"struct.blink::SimpleFontData::DerivedFontData"* %21 to i8*
  tail call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %19, %57
  %60 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 6, i32 0, i32 0
  %61 = load %class.SkTypeface*, %class.SkTypeface** %60, align 8
  %62 = icmp eq %class.SkTypeface* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %61, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %class.SkTypeface* %61 to %class.SkRefCntBase*
  %69 = bitcast %class.SkTypeface* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  tail call void %72(%class.SkRefCntBase* nonnull %68) #9
  br label %73

73:                                               ; preds = %59, %63, %67
  %74 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 5
  tail call void @_ZN5blink16FontPlatformDataD1Ev(%"class.blink::FontPlatformData"* %74) #9
  %75 = bitcast %"class.blink::SimpleFontData"* %0 to %"class.blink::FontData"*
  tail call void @_ZN5blink8FontDataD2Ev(%"class.blink::FontData"* %75) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SimpleFontDataD0Ev(%"class.blink::SimpleFontData"*) unnamed_addr #6 comdat align 2 {
  tail call void @_ZN5blink14SimpleFontDataD2Ev(%"class.blink::SimpleFontData"* %0) #9
  %2 = bitcast %"class.blink::SimpleFontData"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SimpleFontData12IsCustomFontEv(%"class.blink::SimpleFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11, i32 0
  %3 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %2, align 8
  %4 = icmp ne %"class.blink::CustomFontData"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SimpleFontData9IsLoadingEv(%"class.blink::SimpleFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11, i32 0
  %3 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %2, align 8
  %4 = icmp eq %"class.blink::CustomFontData"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CustomFontData"* %3 to i1 (%"class.blink::CustomFontData"*)***
  %7 = load i1 (%"class.blink::CustomFontData"*)**, i1 (%"class.blink::CustomFontData"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::CustomFontData"*)*, i1 (%"class.blink::CustomFontData"*)** %7, i64 3
  %9 = load i1 (%"class.blink::CustomFontData"*)*, i1 (%"class.blink::CustomFontData"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::CustomFontData"* nonnull %3) #9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SimpleFontData17IsLoadingFallbackEv(%"class.blink::SimpleFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11, i32 0
  %3 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %2, align 8
  %4 = icmp eq %"class.blink::CustomFontData"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CustomFontData"* %3 to i1 (%"class.blink::CustomFontData"*)***
  %7 = load i1 (%"class.blink::CustomFontData"*)**, i1 (%"class.blink::CustomFontData"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::CustomFontData"*)*, i1 (%"class.blink::CustomFontData"*)** %7, i64 4
  %9 = load i1 (%"class.blink::CustomFontData"*)*, i1 (%"class.blink::CustomFontData"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::CustomFontData"* nonnull %3) #9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SimpleFontData17ShouldSkipDrawingEv(%"class.blink::SimpleFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %0, i64 0, i32 11, i32 0
  %3 = load %"class.blink::CustomFontData"*, %"class.blink::CustomFontData"** %2, align 8
  %4 = icmp eq %"class.blink::CustomFontData"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CustomFontData"* %3 to i1 (%"class.blink::CustomFontData"*)***
  %7 = load i1 (%"class.blink::CustomFontData"*)**, i1 (%"class.blink::CustomFontData"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::CustomFontData"*)*, i1 (%"class.blink::CustomFontData"*)** %7, i64 5
  %9 = load i1 (%"class.blink::CustomFontData"*)*, i1 (%"class.blink::CustomFontData"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::CustomFontData"* nonnull %3) #9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CustomFontDataD2Ev(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CustomFontDataD0Ev(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::CustomFontData"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14CustomFontData17BeginLoadIfNeededEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14CustomFontData9IsLoadingEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14CustomFontData17IsLoadingFallbackEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14CustomFontData17ShouldSkipDrawingEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CustomFontData19ClearFontFaceSourceEv(%"class.blink::CustomFontData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

declare i64 @_ZNK10SkTypeface12getTableDataEjmmPv(%class.SkTypeface*, i32, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #4

; Function Attrs: nounwind
declare void @_ZN5blink8FontDataD2Ev(%"class.blink::FontData"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
