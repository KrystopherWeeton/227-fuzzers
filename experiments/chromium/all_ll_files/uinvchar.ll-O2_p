; ModuleID = '../../third_party/icu/source/common/uinvchar.cpp'
source_filename = "../../third_party/icu/source/common/uinvchar.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@_ZL14invariantChars = internal unnamed_addr constant [4 x i32] [i32 -1025, i32 -27, i32 -2013265922, i32 -2013265922], align 16
@.str = private unnamed_addr constant [79 x i8] c"uprv_ebcdicFromAscii() string[%d] contains a variant character in position %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [77 x i8] c"uprv_copyFromAscii() string[%d] contains a variant character in position %d\0A\00", align 1
@_ZL15asciiFromEbcdic = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\00\09\00\7F\00\00\00\0B\0C\0D\0E\0F\10\11\12\13\00\0A\08\00\18\19\00\00\1C\1D\1E\1F\00\00\00\00\00\0A\17\1B\00\00\00\00\00\05\06\07\00\00\16\00\00\00\00\04\00\00\00\00\14\15\00\1A \00\00\00\00\00\00\00\00\00\00.<(+|&\00\00\00\00\00\00\00\00\00!$*);^-/\00\00\00\00\00\00\00\00\00,%_>?\00\00\00\00\00\00\00\00\00`:#@'=\22\00abcdefghi\00\00\00\00\00\00\00jklmnopqr\00\00\00\00\00\00\00~stuvwxyz\00\00\00[\00\00^\00\00\00\00\00\00\00\00\00[]\00]\00\00{ABCDEFGHI\00\00\00\00\00\00}JKLMNOPQR\00\00\00\00\00\00\5C\00STUVWXYZ\00\00\00\00\00\000123456789\00\00\00\00\00\00", align 16
@.str.2 = private unnamed_addr constant [79 x i8] c"uprv_asciiFromEbcdic() string[%d] contains a variant character in position %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [73 x i8] c"uprv_copyEbcdic() string[%] contains a variant character in position %d\0A\00", align 1
@_ZZ22uprv_isEbcdicAtSign_69E13ebcdicAtSigns = internal constant [11 x i8] c"|Df\80\AC\AE\AF\B5\EC\EF\00", align 1
@_ZL24lowercaseAsciiFromEbcdic = internal unnamed_addr constant [256 x i8] c"\00\01\02\03\00\09\00\7F\00\00\00\0B\0C\0D\0E\0F\10\11\12\13\00\0A\08\00\18\19\00\00\1C\1D\1E\1F\00\00\00\00\00\0A\17\1B\00\00\00\00\00\05\06\07\00\00\16\00\00\00\00\04\00\00\00\00\14\15\00\1A \00\00\00\00\00\00\00\00\00\00.<(+|&\00\00\00\00\00\00\00\00\00!$*);^-/\00\00\00\00\00\00\00\00\00,%_>?\00\00\00\00\00\00\00\00\00`:#@'=\22\00abcdefghi\00\00\00\00\00\00\00jklmnopqr\00\00\00\00\00\00\00~stuvwxyz\00\00\00[\00\00^\00\00\00\00\00\00\00\00\00[]\00]\00\00{abcdefghi\00\00\00\00\00\00}jklmnopqr\00\00\00\00\00\00|\00stuvwxyz\00\00\00\00\00\000123456789\00\00\00\00\00\00", align 16
@_ZL15ebcdicFromAscii = internal unnamed_addr constant <{ [128 x i8], [128 x i8] }> <{ [128 x i8] c"\00\01\02\037-./\16\05\00\0B\0C\0D\0E\0F\10\11\12\13<=2&\18\19?'\1C\1D\1E\1F@\00\7F\00\00lP}M]\5CNk`Ka\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9z^L~no\00\C1\C2\C3\C4\C5\C6\C7\C8\C9\D1\D2\D3\D4\D5\D6\D7\D8\D9\E2\E3\E4\E5\E6\E7\E8\E9\00\00\00\00m\00\81\82\83\84\85\86\87\88\89\91\92\93\94\95\96\97\98\99\A2\A3\A4\A5\A6\A7\A8\A9\00\00\00\00\07", [128 x i8] zeroinitializer }>, align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @u_charsToUChars_69(i8* nocapture readonly, i16* nocapture, i32) local_unnamed_addr #0 {
  %4 = bitcast i16* %1 to i8*
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %97

6:                                                ; preds = %3
  %7 = add nsw i32 %2, -1
  %8 = zext i32 %7 to i64
  %9 = add nuw nsw i64 %8, 1
  %10 = icmp ult i64 %9, 16
  br i1 %10, label %83, label %11

11:                                               ; preds = %6
  %12 = add nsw i32 %2, -1
  %13 = zext i32 %12 to i64
  %14 = add nuw nsw i64 %13, 1
  %15 = getelementptr i16, i16* %1, i64 %14
  %16 = bitcast i16* %15 to i8*
  %17 = getelementptr i8, i8* %0, i64 %14
  %18 = icmp ugt i8* %17, %4
  %19 = icmp ugt i8* %16, %0
  %20 = and i1 %18, %19
  br i1 %20, label %83, label %21

21:                                               ; preds = %11
  %22 = and i64 %9, 8589934576
  %23 = trunc i64 %22 to i32
  %24 = sub i32 %2, %23
  %25 = getelementptr i16, i16* %1, i64 %22
  %26 = getelementptr i8, i8* %0, i64 %22
  %27 = add nsw i64 %22, -16
  %28 = lshr exact i64 %27, 4
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %27, 0
  br i1 %31, label %65, label %32

32:                                               ; preds = %21
  %33 = sub nuw nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %62, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %63, %34 ]
  %37 = getelementptr i16, i16* %1, i64 %35
  %38 = getelementptr i8, i8* %0, i64 %35
  %39 = bitcast i8* %38 to <8 x i8>*
  %40 = load <8 x i8>, <8 x i8>* %39, align 1, !alias.scope !2
  %41 = getelementptr i8, i8* %38, i64 8
  %42 = bitcast i8* %41 to <8 x i8>*
  %43 = load <8 x i8>, <8 x i8>* %42, align 1, !alias.scope !2
  %44 = zext <8 x i8> %40 to <8 x i16>
  %45 = zext <8 x i8> %43 to <8 x i16>
  %46 = bitcast i16* %37 to <8 x i16>*
  store <8 x i16> %44, <8 x i16>* %46, align 2, !alias.scope !5, !noalias !2
  %47 = getelementptr i16, i16* %37, i64 8
  %48 = bitcast i16* %47 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %48, align 2, !alias.scope !5, !noalias !2
  %49 = or i64 %35, 16
  %50 = getelementptr i16, i16* %1, i64 %49
  %51 = getelementptr i8, i8* %0, i64 %49
  %52 = bitcast i8* %51 to <8 x i8>*
  %53 = load <8 x i8>, <8 x i8>* %52, align 1, !alias.scope !2
  %54 = getelementptr i8, i8* %51, i64 8
  %55 = bitcast i8* %54 to <8 x i8>*
  %56 = load <8 x i8>, <8 x i8>* %55, align 1, !alias.scope !2
  %57 = zext <8 x i8> %53 to <8 x i16>
  %58 = zext <8 x i8> %56 to <8 x i16>
  %59 = bitcast i16* %50 to <8 x i16>*
  store <8 x i16> %57, <8 x i16>* %59, align 2, !alias.scope !5, !noalias !2
  %60 = getelementptr i16, i16* %50, i64 8
  %61 = bitcast i16* %60 to <8 x i16>*
  store <8 x i16> %58, <8 x i16>* %61, align 2, !alias.scope !5, !noalias !2
  %62 = add i64 %35, 32
  %63 = add i64 %36, -2
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %34, !llvm.loop !7

65:                                               ; preds = %34, %21
  %66 = phi i64 [ 0, %21 ], [ %62, %34 ]
  %67 = icmp eq i64 %30, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr i16, i16* %1, i64 %66
  %70 = getelementptr i8, i8* %0, i64 %66
  %71 = bitcast i8* %70 to <8 x i8>*
  %72 = load <8 x i8>, <8 x i8>* %71, align 1, !alias.scope !2
  %73 = getelementptr i8, i8* %70, i64 8
  %74 = bitcast i8* %73 to <8 x i8>*
  %75 = load <8 x i8>, <8 x i8>* %74, align 1, !alias.scope !2
  %76 = zext <8 x i8> %72 to <8 x i16>
  %77 = zext <8 x i8> %75 to <8 x i16>
  %78 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = getelementptr i16, i16* %69, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !5, !noalias !2
  br label %81

81:                                               ; preds = %65, %68
  %82 = icmp eq i64 %9, %22
  br i1 %82, label %97, label %83

83:                                               ; preds = %81, %11, %6
  %84 = phi i32 [ %2, %11 ], [ %2, %6 ], [ %24, %81 ]
  %85 = phi i16* [ %1, %11 ], [ %1, %6 ], [ %25, %81 ]
  %86 = phi i8* [ %0, %11 ], [ %0, %6 ], [ %26, %81 ]
  br label %87

87:                                               ; preds = %83, %87
  %88 = phi i32 [ %95, %87 ], [ %84, %83 ]
  %89 = phi i16* [ %94, %87 ], [ %85, %83 ]
  %90 = phi i8* [ %91, %87 ], [ %86, %83 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  %92 = load i8, i8* %90, align 1
  %93 = zext i8 %92 to i16
  %94 = getelementptr inbounds i16, i16* %89, i64 1
  store i16 %93, i16* %89, align 2
  %95 = add nsw i32 %88, -1
  %96 = icmp sgt i32 %95, 0
  br i1 %96, label %87, label %97, !llvm.loop !9

97:                                               ; preds = %87, %81, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @u_UCharsToChars_69(i16* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %29

5:                                                ; preds = %3, %23
  %6 = phi i32 [ %27, %23 ], [ %2, %3 ]
  %7 = phi i8* [ %26, %23 ], [ %1, %3 ]
  %8 = phi i16* [ %9, %23 ], [ %0, %3 ]
  %9 = getelementptr inbounds i16, i16* %8, i64 1
  %10 = load i16, i16* %8, align 2
  %11 = zext i16 %10 to i32
  %12 = icmp ult i16 %10, 128
  br i1 %12, label %13, label %22

13:                                               ; preds = %5
  %14 = lshr i32 %11, 5
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %11, 31
  %19 = shl i32 1, %18
  %20 = and i32 %17, %19
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %13, %5
  br label %23

23:                                               ; preds = %13, %22
  %24 = phi i16 [ %10, %13 ], [ 0, %22 ]
  %25 = trunc i16 %24 to i8
  %26 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 %25, i8* %7, align 1
  %27 = add nsw i32 %6, -1
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %5, label %29

29:                                               ; preds = %23, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @uprv_isInvariantString_69(i8* nocapture readonly, i32) local_unnamed_addr #1 {
  br label %3

3:                                                ; preds = %18, %2
  %4 = phi i8* [ %0, %2 ], [ %19, %18 ]
  %5 = phi i32 [ %1, %2 ], [ %20, %18 ]
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8, i8* %4, i64 1
  %9 = load i8, i8* %4, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %36, label %21

11:                                               ; preds = %3
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %11
  %14 = add nsw i32 %5, -1
  %15 = getelementptr inbounds i8, i8* %4, i64 1
  %16 = load i8, i8* %4, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13, %27
  %19 = phi i8* [ %22, %27 ], [ %15, %13 ]
  %20 = phi i32 [ %23, %27 ], [ %14, %13 ]
  br label %3

21:                                               ; preds = %13, %7
  %22 = phi i8* [ %8, %7 ], [ %15, %13 ]
  %23 = phi i32 [ %5, %7 ], [ %14, %13 ]
  %24 = phi i8 [ %9, %7 ], [ %16, %13 ]
  %25 = zext i8 %24 to i32
  %26 = icmp sgt i8 %24, -1
  br i1 %26, label %27, label %36

27:                                               ; preds = %21
  %28 = lshr i32 %25, 5
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %25, 31
  %33 = shl i32 1, %32
  %34 = and i32 %31, %33
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %18

36:                                               ; preds = %7, %11, %21, %27
  %37 = phi i8 [ 0, %27 ], [ 0, %21 ], [ 1, %11 ], [ 1, %7 ]
  ret i8 %37
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @uprv_isInvariantUString_69(i16* nocapture readonly, i32) local_unnamed_addr #1 {
  br label %3

3:                                                ; preds = %20, %2
  %4 = phi i16* [ %0, %2 ], [ %21, %20 ]
  %5 = phi i32 [ %1, %2 ], [ %16, %20 ]
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = load i16, i16* %4, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %30, label %15

10:                                               ; preds = %3
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %10
  %13 = add nsw i32 %5, -1
  %14 = load i16, i16* %4, align 2
  br label %15

15:                                               ; preds = %7, %12
  %16 = phi i32 [ %5, %7 ], [ %13, %12 ]
  %17 = phi i16 [ %8, %7 ], [ %14, %12 ]
  %18 = zext i16 %17 to i32
  %19 = icmp ult i16 %17, 128
  br i1 %19, label %20, label %30

20:                                               ; preds = %15
  %21 = getelementptr inbounds i16, i16* %4, i64 1
  %22 = lshr i32 %18, 5
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %18, 31
  %27 = shl i32 1, %26
  %28 = and i32 %25, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %3

30:                                               ; preds = %7, %10, %15, %20
  %31 = phi i8 [ 0, %20 ], [ 0, %15 ], [ 1, %10 ], [ 1, %7 ]
  ret i8 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_ebcdicFromAscii_69(%struct.UDataSwapper*, i8* readonly, i32, i8*, i32*) local_unnamed_addr #2 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %48, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %48

10:                                               ; preds = %7
  %11 = icmp eq %struct.UDataSwapper* %0, null
  %12 = icmp eq i8* %1, null
  %13 = or i1 %11, %12
  %14 = icmp slt i32 %2, 0
  %15 = or i1 %13, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = icmp sgt i32 %2, 0
  %18 = icmp eq i8* %3, null
  %19 = and i1 %17, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  br i1 %17, label %22, label %48

21:                                               ; preds = %16, %10
  store i32 1, i32* %4, align 4
  br label %48

22:                                               ; preds = %20, %41
  %23 = phi i32 [ %46, %41 ], [ %2, %20 ]
  %24 = phi i8* [ %45, %41 ], [ %3, %20 ]
  %25 = phi i8* [ %26, %41 ], [ %1, %20 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = load i8, i8* %25, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp sgt i8 %27, -1
  br i1 %29, label %30, label %39

30:                                               ; preds = %22
  %31 = lshr i32 %28, 5
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %28, 31
  %36 = shl i32 1, %35
  %37 = and i32 %34, %36
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %30, %22
  %40 = sub nsw i32 %2, %23
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 %2, i32 %40) #10
  store i32 10, i32* %4, align 4
  br label %48

41:                                               ; preds = %30
  %42 = zext i8 %27 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @_ZL15ebcdicFromAscii to [256 x i8]*), i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 %44, i8* %24, align 1
  %46 = add nsw i32 %23, -1
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %22, label %48

48:                                               ; preds = %41, %20, %5, %7, %39, %21
  %49 = phi i32 [ 0, %21 ], [ 0, %39 ], [ 0, %7 ], [ 0, %5 ], [ 0, %20 ], [ %2, %41 ]
  ret i32 %49
}

declare void @udata_printError_69(%struct.UDataSwapper*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_copyAscii_69(%struct.UDataSwapper*, i8* readonly, i32, i8*, i32*) local_unnamed_addr #2 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %49, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %49

10:                                               ; preds = %7
  %11 = icmp eq %struct.UDataSwapper* %0, null
  %12 = icmp eq i8* %1, null
  %13 = or i1 %11, %12
  %14 = icmp slt i32 %2, 0
  %15 = or i1 %13, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = icmp sgt i32 %2, 0
  %18 = icmp eq i8* %3, null
  %19 = and i1 %17, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  br i1 %17, label %22, label %49

21:                                               ; preds = %16, %10
  store i32 1, i32* %4, align 4
  br label %49

22:                                               ; preds = %20, %40
  %23 = phi i32 [ %41, %40 ], [ %2, %20 ]
  %24 = phi i8* [ %25, %40 ], [ %1, %20 ]
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = load i8, i8* %24, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp sgt i8 %26, -1
  br i1 %28, label %29, label %38

29:                                               ; preds = %22
  %30 = lshr i32 %27, 5
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %27, 31
  %35 = shl i32 1, %34
  %36 = and i32 %33, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %29, %22
  %39 = sub nsw i32 %2, %23
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1, i64 0, i64 0), i32 %2, i32 %39) #10
  store i32 10, i32* %4, align 4
  br label %49

40:                                               ; preds = %29
  %41 = add nsw i32 %23, -1
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %22, label %43

43:                                               ; preds = %40
  %44 = xor i1 %17, true
  %45 = icmp eq i8* %1, %3
  %46 = or i1 %45, %44
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = sext i32 %2 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %1, i64 %48, i1 false)
  br label %49

49:                                               ; preds = %20, %47, %43, %5, %7, %38, %21
  %50 = phi i32 [ 0, %21 ], [ 0, %38 ], [ 0, %7 ], [ 0, %5 ], [ %2, %43 ], [ %2, %47 ], [ 0, %20 ]
  ret i32 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_asciiFromEbcdic_69(%struct.UDataSwapper*, i8* readonly, i32, i8*, i32*) local_unnamed_addr #2 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %51, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %51

10:                                               ; preds = %7
  %11 = icmp eq %struct.UDataSwapper* %0, null
  %12 = icmp eq i8* %1, null
  %13 = or i1 %11, %12
  %14 = icmp slt i32 %2, 0
  %15 = or i1 %13, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = icmp sgt i32 %2, 0
  %18 = icmp eq i8* %3, null
  %19 = and i1 %17, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  br i1 %17, label %22, label %51

21:                                               ; preds = %16, %10
  store i32 1, i32* %4, align 4
  br label %51

22:                                               ; preds = %20, %46
  %23 = phi i32 [ %49, %46 ], [ %2, %20 ]
  %24 = phi i8* [ %48, %46 ], [ %3, %20 ]
  %25 = phi i8* [ %26, %46 ], [ %1, %20 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = load i8, i8* %25, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %22
  %30 = zext i8 %27 to i64
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp eq i8 %32, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %29
  %36 = lshr i32 %33, 5
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %33, 31
  %41 = shl i32 1, %40
  %42 = and i32 %39, %41
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %35, %29
  %45 = sub nsw i32 %2, %23
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.2, i64 0, i64 0), i32 %2, i32 %45) #10
  store i32 10, i32* %4, align 4
  br label %51

46:                                               ; preds = %35, %22
  %47 = phi i8 [ %32, %35 ], [ 0, %22 ]
  %48 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 %47, i8* %24, align 1
  %49 = add nsw i32 %23, -1
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %22, label %51

51:                                               ; preds = %46, %20, %5, %7, %44, %21
  %52 = phi i32 [ 0, %21 ], [ 0, %44 ], [ 0, %7 ], [ 0, %5 ], [ 0, %20 ], [ %2, %46 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_copyEbcdic_69(%struct.UDataSwapper*, i8* readonly, i32, i8*, i32*) local_unnamed_addr #2 {
  %6 = icmp eq i32* %4, null
  br i1 %6, label %54, label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %54

10:                                               ; preds = %7
  %11 = icmp eq %struct.UDataSwapper* %0, null
  %12 = icmp eq i8* %1, null
  %13 = or i1 %11, %12
  %14 = icmp slt i32 %2, 0
  %15 = or i1 %13, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = icmp sgt i32 %2, 0
  %18 = icmp eq i8* %3, null
  %19 = and i1 %17, %18
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  br i1 %17, label %22, label %54

21:                                               ; preds = %16, %10
  store i32 1, i32* %4, align 4
  br label %54

22:                                               ; preds = %20, %45
  %23 = phi i32 [ %46, %45 ], [ %2, %20 ]
  %24 = phi i8* [ %25, %45 ], [ %1, %20 ]
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  %26 = load i8, i8* %24, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %45, label %28

28:                                               ; preds = %22
  %29 = zext i8 %26 to i64
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp eq i8 %31, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %28
  %35 = lshr i32 %32, 5
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %32, 31
  %40 = shl i32 1, %39
  %41 = and i32 %38, %40
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %34, %28
  %44 = sub nsw i32 %2, %23
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 %2, i32 %44) #10
  store i32 10, i32* %4, align 4
  br label %54

45:                                               ; preds = %34, %22
  %46 = add nsw i32 %23, -1
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %22, label %48

48:                                               ; preds = %45
  %49 = xor i1 %17, true
  %50 = icmp eq i8* %1, %3
  %51 = or i1 %50, %49
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = sext i32 %2 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %1, i64 %53, i1 false)
  br label %54

54:                                               ; preds = %20, %52, %48, %5, %7, %43, %21
  %55 = phi i32 [ 0, %21 ], [ 0, %43 ], [ 0, %7 ], [ 0, %5 ], [ %2, %48 ], [ %2, %52 ], [ 0, %20 ]
  ret i32 %55
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden signext i8 @uprv_isEbcdicAtSign_69(i8 signext) local_unnamed_addr #5 {
  %2 = icmp eq i8 %0, 0
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = sext i8 %0 to i32
  %5 = tail call i8* @memchr(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZZ22uprv_isEbcdicAtSign_69E13ebcdicAtSigns, i64 0, i64 0), i32 %4, i64 11)
  %6 = icmp ne i8* %5, null
  %7 = zext i1 %6 to i8
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i8 [ 0, %1 ], [ %7, %3 ]
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_compareInvAscii_69(%struct.UDataSwapper* nocapture readnone, i8* readonly, i32, i16*, i32) local_unnamed_addr #2 {
  %6 = icmp eq i8* %1, null
  %7 = icmp slt i32 %2, -1
  %8 = or i1 %6, %7
  %9 = icmp eq i16* %3, null
  %10 = or i1 %8, %9
  %11 = icmp slt i32 %4, -1
  %12 = or i1 %10, %11
  br i1 %12, label %71, label %13

13:                                               ; preds = %5
  %14 = icmp slt i32 %2, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = tail call i64 @strlen(i8* nonnull %1) #11
  %17 = trunc i64 %16 to i32
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi i32 [ %17, %15 ], [ %2, %13 ]
  %20 = icmp slt i32 %4, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = tail call i32 @u_strlen_69(i16* nonnull %3) #10
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i32 [ %22, %21 ], [ %4, %18 ]
  %25 = icmp slt i32 %19, %24
  %26 = select i1 %25, i32 %19, i32 %24
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %30, label %69

28:                                               ; preds = %64
  %29 = icmp sgt i32 %68, 0
  br i1 %29, label %30, label %69

30:                                               ; preds = %23, %28
  %31 = phi i32 [ %68, %28 ], [ %26, %23 ]
  %32 = phi i16* [ %50, %28 ], [ %3, %23 ]
  %33 = phi i8* [ %34, %28 ], [ %1, %23 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i8, i8* %33, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp sgt i8 %35, -1
  br i1 %37, label %38, label %47

38:                                               ; preds = %30
  %39 = lshr i32 %36, 5
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %36, 31
  %44 = shl i32 1, %43
  %45 = and i32 %42, %44
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %38, %30
  br label %48

48:                                               ; preds = %38, %47
  %49 = phi i32 [ -1, %47 ], [ %36, %38 ]
  %50 = getelementptr inbounds i16, i16* %32, i64 1
  %51 = load i16, i16* %32, align 2
  %52 = zext i16 %51 to i32
  %53 = icmp ult i16 %51, 128
  br i1 %53, label %54, label %63

54:                                               ; preds = %48
  %55 = lshr i32 %52, 5
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %52, 31
  %60 = shl i32 1, %59
  %61 = and i32 %58, %60
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %54, %48
  br label %64

64:                                               ; preds = %54, %63
  %65 = phi i32 [ %52, %54 ], [ -2, %63 ]
  %66 = sub nsw i32 %49, %65
  %67 = icmp eq i32 %66, 0
  %68 = add nsw i32 %31, -1
  br i1 %67, label %28, label %71

69:                                               ; preds = %28, %23
  %70 = sub nsw i32 %19, %24
  br label %71

71:                                               ; preds = %64, %5, %69
  %72 = phi i32 [ %70, %69 ], [ 0, %5 ], [ %66, %64 ]
  ret i32 %72
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i32 @u_strlen_69(i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uprv_compareInvEbcdic_69(%struct.UDataSwapper* nocapture readnone, i8* readonly, i32, i16*, i32) local_unnamed_addr #2 {
  %6 = icmp eq i8* %1, null
  %7 = icmp slt i32 %2, -1
  %8 = or i1 %6, %7
  %9 = icmp eq i16* %3, null
  %10 = or i1 %8, %9
  %11 = icmp slt i32 %4, -1
  %12 = or i1 %10, %11
  br i1 %12, label %76, label %13

13:                                               ; preds = %5
  %14 = icmp slt i32 %2, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = tail call i64 @strlen(i8* nonnull %1) #11
  %17 = trunc i64 %16 to i32
  br label %18

18:                                               ; preds = %15, %13
  %19 = phi i32 [ %17, %15 ], [ %2, %13 ]
  %20 = icmp slt i32 %4, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = tail call i32 @u_strlen_69(i16* nonnull %3) #10
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i32 [ %22, %21 ], [ %4, %18 ]
  %25 = icmp slt i32 %19, %24
  %26 = select i1 %25, i32 %19, i32 %24
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %30, label %74

28:                                               ; preds = %69
  %29 = icmp sgt i32 %73, 0
  br i1 %29, label %30, label %74

30:                                               ; preds = %23, %28
  %31 = phi i32 [ %73, %28 ], [ %26, %23 ]
  %32 = phi i16* [ %55, %28 ], [ %3, %23 ]
  %33 = phi i8* [ %34, %28 ], [ %1, %23 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 1
  %35 = load i8, i8* %33, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %30
  %38 = zext i8 %35 to i64
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i8 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %37
  %44 = lshr i32 %41, 5
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %41, 31
  %49 = shl i32 1, %48
  %50 = and i32 %47, %49
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %43, %37
  br label %53

53:                                               ; preds = %30, %43, %52
  %54 = phi i32 [ %41, %43 ], [ -1, %52 ], [ 0, %30 ]
  %55 = getelementptr inbounds i16, i16* %32, i64 1
  %56 = load i16, i16* %32, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp ult i16 %56, 128
  br i1 %58, label %59, label %68

59:                                               ; preds = %53
  %60 = lshr i32 %57, 5
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %57, 31
  %65 = shl i32 1, %64
  %66 = and i32 %63, %65
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %59, %53
  br label %69

69:                                               ; preds = %59, %68
  %70 = phi i32 [ %57, %59 ], [ -2, %68 ]
  %71 = sub nsw i32 %54, %70
  %72 = icmp eq i32 %71, 0
  %73 = add nsw i32 %31, -1
  br i1 %72, label %28, label %76

74:                                               ; preds = %28, %23
  %75 = sub nsw i32 %19, %24
  br label %76

76:                                               ; preds = %69, %5, %74
  %77 = phi i32 [ %75, %74 ], [ 0, %5 ], [ %71, %69 ]
  ret i32 %77
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @uprv_compareInvEbcdicAsAscii_69(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 {
  %3 = load i8, i8* %0, align 1
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %3, %4
  %6 = icmp eq i8 %3, 0
  br i1 %5, label %53, label %7

7:                                                ; preds = %57, %2
  %8 = phi i8 [ %3, %2 ], [ %60, %57 ]
  %9 = phi i8 [ %4, %2 ], [ %61, %57 ]
  %10 = phi i1 [ %6, %2 ], [ %63, %57 ]
  br i1 %10, label %29, label %11

11:                                               ; preds = %7
  %12 = zext i8 %8 to i64
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %11
  %18 = lshr i32 %15, 5
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %15, 31
  %23 = shl i32 1, %22
  %24 = and i32 %21, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %17, %11
  %27 = zext i8 %8 to i32
  %28 = sub nsw i32 0, %27
  br label %29

29:                                               ; preds = %17, %7, %26
  %30 = phi i32 [ %15, %17 ], [ %28, %26 ], [ 0, %7 ]
  %31 = icmp eq i8 %9, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %29
  %33 = zext i8 %9 to i64
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = icmp eq i8 %35, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %32
  %39 = lshr i32 %36, 5
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL14invariantChars, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %36, 31
  %44 = shl i32 1, %43
  %45 = and i32 %42, %44
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %38, %32
  %48 = zext i8 %9 to i32
  %49 = sub nsw i32 0, %48
  br label %50

50:                                               ; preds = %38, %29, %47
  %51 = phi i32 [ %36, %38 ], [ %49, %47 ], [ 0, %29 ]
  %52 = sub nsw i32 %30, %51
  br label %64

53:                                               ; preds = %2, %57
  %54 = phi i1 [ %63, %57 ], [ %6, %2 ]
  %55 = phi i8* [ %59, %57 ], [ %1, %2 ]
  %56 = phi i8* [ %58, %57 ], [ %0, %2 ]
  br i1 %54, label %64, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, i8* %56, i64 1
  %59 = getelementptr inbounds i8, i8* %55, i64 1
  %60 = load i8, i8* %58, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  %63 = icmp eq i8 %60, 0
  br i1 %62, label %53, label %7

64:                                               ; preds = %53, %50
  %65 = phi i32 [ %52, %50 ], [ 0, %53 ]
  ret i32 %65
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @uprv_ebcdicToAscii_69(i8 signext) local_unnamed_addr #7 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %2
  %4 = load i8, i8* %3, align 1
  ret i8 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @uprv_ebcdicToLowercaseAscii_69(i8 signext) local_unnamed_addr #7 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL24lowercaseAsciiFromEbcdic, i64 0, i64 %2
  %4 = load i8, i8* %3, align 1
  ret i8 %4
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @uprv_aestrncpy_69(i8* returned, i8* nocapture readonly, i32) local_unnamed_addr #8 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* %1) #11
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, 1
  br label %9

9:                                                ; preds = %5, %3
  %10 = phi i32 [ %8, %5 ], [ %2, %3 ]
  %11 = load i8, i8* %1, align 1
  %12 = icmp ne i8 %11, 0
  %13 = icmp sgt i32 %10, 0
  %14 = and i1 %13, %12
  br i1 %14, label %21, label %15

15:                                               ; preds = %21, %9
  %16 = phi i8* [ %0, %9 ], [ %30, %21 ]
  %17 = phi i32 [ %10, %9 ], [ %31, %21 ]
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 %20, i1 false)
  br label %36

21:                                               ; preds = %9, %21
  %22 = phi i8 [ %32, %21 ], [ %11, %9 ]
  %23 = phi i32 [ %31, %21 ], [ %10, %9 ]
  %24 = phi i8* [ %26, %21 ], [ %1, %9 ]
  %25 = phi i8* [ %30, %21 ], [ %0, %9 ]
  %26 = getelementptr inbounds i8, i8* %24, i64 1
  %27 = zext i8 %22 to i64
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL15asciiFromEbcdic, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %29, i8* %25, align 1
  %31 = add nsw i32 %23, -1
  %32 = load i8, i8* %26, align 1
  %33 = icmp ne i8 %32, 0
  %34 = icmp sgt i32 %31, 0
  %35 = and i1 %34, %33
  br i1 %35, label %21, label %15

36:                                               ; preds = %19, %15
  ret i8* %0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @uprv_eastrncpy_69(i8* returned, i8* nocapture readonly, i32) local_unnamed_addr #8 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* %1) #11
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, 1
  br label %9

9:                                                ; preds = %5, %3
  %10 = phi i32 [ %8, %5 ], [ %2, %3 ]
  %11 = load i8, i8* %1, align 1
  %12 = icmp ne i8 %11, 0
  %13 = icmp sgt i32 %10, 0
  %14 = and i1 %13, %12
  br i1 %14, label %21, label %15

15:                                               ; preds = %21, %9
  %16 = phi i8* [ %0, %9 ], [ %32, %21 ]
  %17 = phi i32 [ %10, %9 ], [ %33, %21 ]
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %38

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 %20, i1 false)
  br label %38

21:                                               ; preds = %9, %21
  %22 = phi i8 [ %34, %21 ], [ %11, %9 ]
  %23 = phi i32 [ %33, %21 ], [ %10, %9 ]
  %24 = phi i8* [ %26, %21 ], [ %1, %9 ]
  %25 = phi i8* [ %32, %21 ], [ %0, %9 ]
  %26 = getelementptr inbounds i8, i8* %24, i64 1
  %27 = zext i8 %22 to i64
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @_ZL15ebcdicFromAscii to [256 x i8]*), i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i8 111, i8 %29
  %32 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %31, i8* %25, align 1
  %33 = add nsw i32 %23, -1
  %34 = load i8, i8* %26, align 1
  %35 = icmp ne i8 %34, 0
  %36 = icmp sgt i32 %33, 0
  %37 = and i1 %36, %35
  br i1 %37, label %21, label %15

38:                                               ; preds = %19, %15
  ret i8* %0
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
