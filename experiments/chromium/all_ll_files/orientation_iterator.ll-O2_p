; ModuleID = '../../third_party/blink/renderer/platform/fonts/orientation_iterator.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/orientation_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::OrientationIterator" = type <{ %"class.std::__1::unique_ptr", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::UTF16TextIterator"* }
%"class.blink::UTF16TextIterator" = type <{ i16*, i16*, i32, i32, i32, [4 x i8] }>

@_ZN5blink19OrientationIteratorC1EPKDsjNS_15FontOrientationE = hidden unnamed_addr alias void (%"class.blink::OrientationIterator"*, i16*, i32, i32), void (%"class.blink::OrientationIterator"*, i16*, i32, i32)* @_ZN5blink19OrientationIteratorC2EPKDsjNS_15FontOrientationE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OrientationIteratorC2EPKDsjNS_15FontOrientationE(%"class.blink::OrientationIterator"* nocapture, i16*, i32, i32) unnamed_addr #0 align 2 {
  %5 = tail call noalias i8* @malloc(i64 32) #4
  %6 = bitcast i8* %5 to %"class.blink::UTF16TextIterator"*
  tail call void @_ZN5blink17UTF16TextIteratorC1EPKDsi(%"class.blink::UTF16TextIterator"* %6, i16* %1, i32 %2) #4
  %7 = bitcast %"class.blink::OrientationIterator"* %0 to i8**
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %0, i64 0, i32 2
  %10 = icmp eq i32 %2, 0
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19OrientationIterator7ConsumeEPjPNS0_17RenderOrientationE(%"class.blink::OrientationIterator"* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %70

8:                                                ; preds = %3
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #4
  store i32 -1431655766, i32* %4, align 4
  %10 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %11, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %65

17:                                               ; preds = %8, %47
  %18 = phi %"class.blink::UTF16TextIterator"* [ %59, %47 ], [ %11, %8 ]
  %19 = phi i32 [ %48, %47 ], [ 2, %8 ]
  %20 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %18, i64 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  store i32 %23, i32* %4, align 4
  %24 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %18, i64 0, i32 4
  store i32 1, i32* %24, align 8
  %25 = and i32 %23, 63488
  %26 = icmp eq i32 %25, 55296
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = call zeroext i1 @_ZN5blink17UTF16TextIterator20ConsumeSurrogatePairERi(%"class.blink::UTF16TextIterator"* %18, i32* nonnull dereferenceable(4) %4) #4
  br i1 %28, label %29, label %65

29:                                               ; preds = %17, %27
  %30 = icmp eq i32 %19, 2
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %4, align 4
  %33 = call signext i8 @u_hasBinaryProperty_69(i32 %32, i32 11) #4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %31, %29
  %36 = load i32, i32* %4, align 4
  %37 = call zeroext i1 @_ZN5blink9Character24IsUprightInMixedVerticalEi(i32 %36) #4
  %38 = xor i1 %37, true
  %39 = zext i1 %38 to i32
  %40 = icmp ne i32 %19, %39
  %41 = icmp ne i32 %19, 2
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %47

43:                                               ; preds = %35
  %44 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %10, align 8
  %45 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %1, align 4
  store i32 %19, i32* %2, align 4
  br label %69

47:                                               ; preds = %31, %35
  %48 = phi i32 [ %19, %31 ], [ %39, %35 ]
  %49 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %10, align 8
  %50 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %49, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %49, i64 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds i16, i16* %53, i64 %54
  store i16* %55, i16** %52, align 8
  %56 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %49, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, %51
  store i32 %58, i32* %56, align 8
  %59 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %10, align 8
  %60 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %59, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %59, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %61, %63
  br i1 %64, label %17, label %65

65:                                               ; preds = %27, %47, %8
  %66 = phi i32 [ 2, %8 ], [ %48, %47 ], [ %19, %27 ]
  %67 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %0, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %1, align 4
  store i32 %66, i32* %2, align 4
  store i8 1, i8* %5, align 4
  br label %69

69:                                               ; preds = %43, %65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #4
  br label %70

70:                                               ; preds = %3, %69
  %71 = phi i1 [ true, %69 ], [ false, %3 ]
  ret i1 %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink9Character24IsUprightInMixedVerticalEi(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN5blink17UTF16TextIterator20ConsumeSurrogatePairERi(%"class.blink::UTF16TextIterator"*, i32* dereferenceable(4)) local_unnamed_addr #2

declare signext i8 @u_hasBinaryProperty_69(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink17UTF16TextIteratorC1EPKDsi(%"class.blink::UTF16TextIterator"*, i16*, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
