; ModuleID = '../../courgette/disassembler.cc'
source_filename = "../../courgette/disassembler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.courgette::Disassembler::RvaVisitor_Abs32" = type { %"class.courgette::VectorRvaVisitor", %"class.courgette::AddressTranslator"* }
%"class.courgette::VectorRvaVisitor" = type { %"class.courgette::RvaVisitor", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.courgette::RvaVisitor" = type { i32 (...)** }
%"class.std::__1::__wrap_iter" = type { i32* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.courgette::AddressTranslator" = type { i32 (...)** }
%"class.courgette::Disassembler::RvaVisitor_Rel32" = type { %"class.courgette::VectorRvaVisitor", %"class.courgette::AddressTranslator"* }
%"class.courgette::Disassembler" = type { %"class.courgette::AddressTranslator", i8*, i64, i8*, i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.courgette::AssemblyProgram" = type { i32, i64, %"class.courgette::LabelManager", %"class.courgette::LabelManager", %"class.std::__1::vector.15", %"class.std::__1::vector.15" }
%"class.courgette::LabelManager" = type { %"class.std::__1::vector.8" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.courgette::Label"*, %"class.courgette::Label"*, %"class.std::__1::__compressed_pair.10" }
%"class.courgette::Label" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.courgette::Label"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.courgette::Label"**, %"class.courgette::Label"**, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.courgette::Label"** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.courgette::EncodedProgram" = type { i64, %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer.24", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer.28", %"class.courgette::NoThrowBuffer.32", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer", %"class.courgette::NoThrowBuffer" }
%"class.courgette::NoThrowBuffer.24" = type <{ i32*, i64, i64, %"class.courgette::MemoryAllocator.25", [7 x i8] }>
%"class.courgette::MemoryAllocator.25" = type { i8 }
%"class.courgette::NoThrowBuffer.28" = type <{ i64*, i64, i64, %"class.courgette::MemoryAllocator.29", [7 x i8] }>
%"class.courgette::MemoryAllocator.29" = type { i8 }
%"class.courgette::NoThrowBuffer.32" = type <{ i8*, i64, i64, %"class.courgette::MemoryAllocator.33", [7 x i8] }>
%"class.courgette::MemoryAllocator.33" = type { i8 }
%"class.courgette::NoThrowBuffer" = type <{ i32*, i64, i64, %"class.courgette::MemoryAllocator", [7 x i8] }>
%"class.courgette::MemoryAllocator" = type { i8 }

$_ZN9courgette10RvaVisitorD2Ev = comdat any

$_ZN9courgette12Disassembler16RvaVisitor_Abs32D0Ev = comdat any

$_ZNK9courgette16VectorRvaVisitorIjE9RemainingEv = comdat any

$_ZN9courgette16VectorRvaVisitorIjE4NextEv = comdat any

$_ZN9courgette12Disassembler16RvaVisitor_Rel32D0Ev = comdat any

$_ZN9courgette16VectorRvaVisitorIjED0Ev = comdat any

$_ZTVN9courgette16VectorRvaVisitorIjEE = comdat any

@_ZTVN9courgette12Disassembler16RvaVisitor_Abs32E = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::RvaVisitor"*)* @_ZN9courgette10RvaVisitorD2Ev to i8*), i8* bitcast (void (%"class.courgette::Disassembler::RvaVisitor_Abs32"*)* @_ZN9courgette12Disassembler16RvaVisitor_Abs32D0Ev to i8*), i8* bitcast (i64 (%"class.courgette::VectorRvaVisitor"*)* @_ZNK9courgette16VectorRvaVisitorIjE9RemainingEv to i8*), i8* bitcast (i32 (%"class.courgette::Disassembler::RvaVisitor_Abs32"*)* @_ZNK9courgette12Disassembler16RvaVisitor_Abs323GetEv to i8*), i8* bitcast (void (%"class.courgette::VectorRvaVisitor"*)* @_ZN9courgette16VectorRvaVisitorIjE4NextEv to i8*)] }, align 8
@_ZTVN9courgette12Disassembler16RvaVisitor_Rel32E = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::RvaVisitor"*)* @_ZN9courgette10RvaVisitorD2Ev to i8*), i8* bitcast (void (%"class.courgette::Disassembler::RvaVisitor_Rel32"*)* @_ZN9courgette12Disassembler16RvaVisitor_Rel32D0Ev to i8*), i8* bitcast (i64 (%"class.courgette::VectorRvaVisitor"*)* @_ZNK9courgette16VectorRvaVisitorIjE9RemainingEv to i8*), i8* bitcast (i32 (%"class.courgette::Disassembler::RvaVisitor_Rel32"*)* @_ZNK9courgette12Disassembler16RvaVisitor_Rel323GetEv to i8*), i8* bitcast (void (%"class.courgette::VectorRvaVisitor"*)* @_ZN9courgette16VectorRvaVisitorIjE4NextEv to i8*)] }, align 8
@_ZTVN9courgette12DisassemblerE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i64)* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i32)* @_ZNK9courgette12Disassembler12RVAToPointerEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.courgette::Disassembler"*)* @_ZN9courgette12DisassemblerD2Ev to i8*), i8* bitcast (void (%"class.courgette::Disassembler"*)* @_ZN9courgette12DisassemblerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [14 x i8] c"uninitialized\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"file_offset <= static_cast<FileOffset>(end_ - start_)\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"../../courgette/disassembler.cc\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"reduced_length <= length_\00", align 1
@_ZTVN9courgette16VectorRvaVisitorIjEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::RvaVisitor"*)* @_ZN9courgette10RvaVisitorD2Ev to i8*), i8* bitcast (void (%"class.courgette::VectorRvaVisitor"*)* @_ZN9courgette16VectorRvaVisitorIjED0Ev to i8*), i8* bitcast (i64 (%"class.courgette::VectorRvaVisitor"*)* @_ZNK9courgette16VectorRvaVisitorIjE9RemainingEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.courgette::VectorRvaVisitor"*)* @_ZN9courgette16VectorRvaVisitorIjE4NextEv to i8*)] }, comdat, align 8

@_ZN9courgette12Disassembler16RvaVisitor_Abs32C1ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE = hidden unnamed_addr alias void (%"class.courgette::Disassembler::RvaVisitor_Abs32"*, %"class.std::__1::vector"*, %"class.courgette::AddressTranslator"*), void (%"class.courgette::Disassembler::RvaVisitor_Abs32"*, %"class.std::__1::vector"*, %"class.courgette::AddressTranslator"*)* @_ZN9courgette12Disassembler16RvaVisitor_Abs32C2ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE
@_ZN9courgette12Disassembler16RvaVisitor_Rel32C1ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE = hidden unnamed_addr alias void (%"class.courgette::Disassembler::RvaVisitor_Rel32"*, %"class.std::__1::vector"*, %"class.courgette::AddressTranslator"*), void (%"class.courgette::Disassembler::RvaVisitor_Rel32"*, %"class.std::__1::vector"*, %"class.courgette::AddressTranslator"*)* @_ZN9courgette12Disassembler16RvaVisitor_Rel32C2ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE
@_ZN9courgette12DisassemblerD1Ev = hidden unnamed_addr alias void (%"class.courgette::Disassembler"*), void (%"class.courgette::Disassembler"*)* @_ZN9courgette12DisassemblerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9courgette12Disassembler16RvaVisitor_Abs32C2ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE(%"class.courgette::Disassembler::RvaVisitor_Abs32"* nocapture, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.courgette::AddressTranslator"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Abs32", %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN9courgette16VectorRvaVisitorIjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.std::__1::vector"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Abs32", %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0, i64 0, i32 0, i32 1, i32 0
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Abs32", %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0, i64 0, i32 0, i32 2, i32 0
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN9courgette12Disassembler16RvaVisitor_Abs32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %14 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Abs32", %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0, i64 0, i32 1
  store %"class.courgette::AddressTranslator"* %2, %"class.courgette::AddressTranslator"** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9courgette12Disassembler16RvaVisitor_Abs323GetEv(%"class.courgette::Disassembler::RvaVisitor_Abs32"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Abs32", %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0, i64 0, i32 1
  %3 = load %"class.courgette::AddressTranslator"*, %"class.courgette::AddressTranslator"** %2, align 8
  %4 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Abs32", %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0, i64 0, i32 0, i32 1, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"class.courgette::AddressTranslator"* %3 to i8* (%"class.courgette::AddressTranslator"*, i32)***
  %8 = load i8* (%"class.courgette::AddressTranslator"*, i32)**, i8* (%"class.courgette::AddressTranslator"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.courgette::AddressTranslator"*, i32)*, i8* (%"class.courgette::AddressTranslator"*, i32)** %8, i64 3
  %10 = load i8* (%"class.courgette::AddressTranslator"*, i32)*, i8* (%"class.courgette::AddressTranslator"*, i32)** %9, align 8
  %11 = tail call i8* %10(%"class.courgette::AddressTranslator"* %3, i32 %6) #11
  %12 = bitcast %"class.courgette::AddressTranslator"* %3 to i32 (%"class.courgette::AddressTranslator"*, i8*)***
  %13 = load i32 (%"class.courgette::AddressTranslator"*, i8*)**, i32 (%"class.courgette::AddressTranslator"*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.courgette::AddressTranslator"*, i8*)*, i32 (%"class.courgette::AddressTranslator"*, i8*)** %13, i64 4
  %15 = load i32 (%"class.courgette::AddressTranslator"*, i8*)*, i32 (%"class.courgette::AddressTranslator"*, i8*)** %14, align 8
  %16 = tail call i32 %15(%"class.courgette::AddressTranslator"* %3, i8* %11) #11
  ret i32 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9courgette12Disassembler16RvaVisitor_Rel32C2ERKNSt3__16vectorIjNS2_9allocatorIjEEEERKNS_17AddressTranslatorE(%"class.courgette::Disassembler::RvaVisitor_Rel32"* nocapture, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.courgette::AddressTranslator"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Rel32", %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN9courgette16VectorRvaVisitorIjEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.std::__1::vector"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Rel32", %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0, i64 0, i32 0, i32 1, i32 0
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Rel32", %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0, i64 0, i32 0, i32 2, i32 0
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN9courgette12Disassembler16RvaVisitor_Rel32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %14 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Rel32", %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0, i64 0, i32 1
  store %"class.courgette::AddressTranslator"* %2, %"class.courgette::AddressTranslator"** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9courgette12Disassembler16RvaVisitor_Rel323GetEv(%"class.courgette::Disassembler::RvaVisitor_Rel32"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Rel32", %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 4
  %6 = getelementptr inbounds %"class.courgette::Disassembler::RvaVisitor_Rel32", %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0, i64 0, i32 1
  %7 = load %"class.courgette::AddressTranslator"*, %"class.courgette::AddressTranslator"** %6, align 8
  %8 = bitcast %"class.courgette::AddressTranslator"* %7 to i8* (%"class.courgette::AddressTranslator"*, i32)***
  %9 = load i8* (%"class.courgette::AddressTranslator"*, i32)**, i8* (%"class.courgette::AddressTranslator"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i8* (%"class.courgette::AddressTranslator"*, i32)*, i8* (%"class.courgette::AddressTranslator"*, i32)** %9, i64 3
  %11 = load i8* (%"class.courgette::AddressTranslator"*, i32)*, i8* (%"class.courgette::AddressTranslator"*, i32)** %10, align 8
  %12 = tail call i8* %11(%"class.courgette::AddressTranslator"* %7, i32 %4) #11
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %5, %14
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9courgette12DisassemblerC2EPKhm(%"class.courgette::Disassembler"* nocapture, i8*, i64) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN9courgette12DisassemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8** %5, align 8
  %6 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 3
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 2
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 %2
  %9 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 4
  store i8* %8, i8** %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9courgette12DisassemblerD0Ev(%"class.courgette::Disassembler"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm(%"class.courgette::Disassembler"* nocapture readonly, i64) unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 4
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 3
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ult i64 %14, %1
  br i1 %16, label %18, label %17

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %7, align 8
  br label %27

18:                                               ; preds = %2
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %14) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i8* %19, i8* %20) #11
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %7, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %4) #11
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %28 = load i8*, i8** %11, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %1
  ret i8* %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK9courgette12Disassembler12RVAToPointerEj(%"class.courgette::Disassembler"*, i32) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.courgette::Disassembler"* %0 to i64 (%"class.courgette::Disassembler"*, i32)***
  %4 = load i64 (%"class.courgette::Disassembler"*, i32)**, i64 (%"class.courgette::Disassembler"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.courgette::Disassembler"*, i32)*, i64 (%"class.courgette::Disassembler"*, i32)** %4, i64 1
  %6 = load i64 (%"class.courgette::Disassembler"*, i32)*, i64 (%"class.courgette::Disassembler"*, i32)** %5, align 8
  %7 = tail call i64 %6(%"class.courgette::Disassembler"* %0, i32 %1) #11
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.courgette::Disassembler"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %11 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %10, align 8
  %12 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %11, i64 2
  %13 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %12, align 8
  %14 = tail call i8* %13(%"class.courgette::Disassembler"* %0, i64 %7) #11
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i8* [ %14, %9 ], [ null, %2 ]
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.courgette::AssemblyProgram"* @_ZN9courgette12Disassembler13CreateProgramEb(%"class.courgette::Disassembler"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %68

7:                                                ; preds = %2
  %8 = bitcast %"class.courgette::Disassembler"* %0 to i1 (%"class.courgette::Disassembler"*)***
  %9 = load i1 (%"class.courgette::Disassembler"*)**, i1 (%"class.courgette::Disassembler"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %9, i64 9
  %11 = load i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.courgette::Disassembler"* %0) #11
  br i1 %12, label %13, label %68

13:                                               ; preds = %7
  %14 = load i1 (%"class.courgette::Disassembler"*)**, i1 (%"class.courgette::Disassembler"*)*** %8, align 8
  %15 = getelementptr inbounds i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %14, i64 10
  %16 = load i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.courgette::Disassembler"* %0) #11
  br i1 %17, label %18, label %68

18:                                               ; preds = %13
  %19 = bitcast %"class.courgette::Disassembler"* %0 to i32 (%"class.courgette::Disassembler"*)***
  %20 = load i32 (%"class.courgette::Disassembler"*)**, i32 (%"class.courgette::Disassembler"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.courgette::Disassembler"*)*, i32 (%"class.courgette::Disassembler"*)** %20, i64 7
  %22 = load i32 (%"class.courgette::Disassembler"*)*, i32 (%"class.courgette::Disassembler"*)** %21, align 8
  %23 = tail call i32 %22(%"class.courgette::Disassembler"* %0) #11
  %24 = bitcast %"class.courgette::Disassembler"* %0 to i64 (%"class.courgette::Disassembler"*)***
  %25 = load i64 (%"class.courgette::Disassembler"*)**, i64 (%"class.courgette::Disassembler"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.courgette::Disassembler"*)*, i64 (%"class.courgette::Disassembler"*)** %25, i64 8
  %27 = load i64 (%"class.courgette::Disassembler"*)*, i64 (%"class.courgette::Disassembler"*)** %26, align 8
  %28 = tail call i64 %27(%"class.courgette::Disassembler"* %0) #11
  %29 = tail call i8* @_Znwm(i64 112) #13
  %30 = bitcast i8* %29 to %"class.courgette::AssemblyProgram"*
  tail call void @_ZN9courgette15AssemblyProgramC1ENS_14ExecutableTypeEm(%"class.courgette::AssemblyProgram"* nonnull %30, i32 %23, i64 %28) #11
  %31 = ptrtoint i8* %29 to i64
  %32 = bitcast %"class.courgette::Disassembler"* %0 to %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)***
  %33 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)**, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %33, i64 11
  %35 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %34, align 8
  %36 = tail call %"class.courgette::RvaVisitor"* %35(%"class.courgette::Disassembler"* %0) #11
  %37 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)**, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*** %32, align 8
  %38 = getelementptr inbounds %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %37, i64 12
  %39 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %38, align 8
  %40 = tail call %"class.courgette::RvaVisitor"* %39(%"class.courgette::Disassembler"* %0) #11
  tail call void @_ZN9courgette15AssemblyProgram16PrecomputeLabelsEPNS_10RvaVisitorES2_(%"class.courgette::AssemblyProgram"* nonnull %30, %"class.courgette::RvaVisitor"* %36, %"class.courgette::RvaVisitor"* %40) #11
  %41 = icmp eq %"class.courgette::RvaVisitor"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %18
  %43 = bitcast %"class.courgette::RvaVisitor"* %40 to void (%"class.courgette::RvaVisitor"*)***
  %44 = load void (%"class.courgette::RvaVisitor"*)**, void (%"class.courgette::RvaVisitor"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %44, i64 1
  %46 = load void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %45, align 8
  tail call void %46(%"class.courgette::RvaVisitor"* nonnull %40) #11
  br label %47

47:                                               ; preds = %42, %18
  %48 = icmp eq %"class.courgette::RvaVisitor"* %36, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = bitcast %"class.courgette::RvaVisitor"* %36 to void (%"class.courgette::RvaVisitor"*)***
  %51 = load void (%"class.courgette::RvaVisitor"*)**, void (%"class.courgette::RvaVisitor"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %51, i64 1
  %53 = load void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %52, align 8
  tail call void %53(%"class.courgette::RvaVisitor"* nonnull %36) #11
  br label %54

54:                                               ; preds = %47, %49
  %55 = bitcast %"class.courgette::Disassembler"* %0 to void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)***
  %56 = load void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)**, void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*, void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)** %56, i64 13
  %58 = load void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*, void (%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)** %57, align 8
  tail call void %58(%"class.courgette::Disassembler"* %0, %"class.courgette::AssemblyProgram"* nonnull %30) #11
  tail call void @_ZN9courgette15AssemblyProgram20DefaultAssignIndexesEv(%"class.courgette::AssemblyProgram"* nonnull %30) #11
  br i1 %1, label %59, label %68

59:                                               ; preds = %54
  %60 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = bitcast %"class.courgette::Disassembler"* %0 to void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)***
  %62 = load void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)**, void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*, void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)** %62, i64 15
  %64 = load void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*, void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)** %63, align 8
  call void %64(%"class.base::RepeatingCallback"* nonnull sret %3, %"class.courgette::Disassembler"* %0, %"class.courgette::AssemblyProgram"* nonnull %30) #11
  %65 = call zeroext i1 @_ZN9courgette15AssemblyProgram14AnnotateLabelsERKN4base17RepeatingCallbackIFbPNS_19InstructionReceptorEEEE(%"class.courgette::AssemblyProgram"* nonnull %30, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %3) #11
  %66 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br i1 %65, label %68, label %67

67:                                               ; preds = %59
  call void @_ZN9courgette15AssemblyProgramD1Ev(%"class.courgette::AssemblyProgram"* nonnull %30) #11
  call void @_ZdlPv(i8* nonnull %29) #13
  br label %68

68:                                               ; preds = %59, %54, %67, %2, %7, %13
  %69 = phi i64 [ 0, %13 ], [ 0, %7 ], [ 0, %2 ], [ 0, %67 ], [ %31, %54 ], [ %31, %59 ]
  %70 = inttoptr i64 %69 to %"class.courgette::AssemblyProgram"*
  ret %"class.courgette::AssemblyProgram"* %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12Disassembler16PrecomputeLabelsEPNS_15AssemblyProgramE(%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.courgette::Disassembler"* %0 to %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)***
  %4 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)**, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %4, i64 11
  %6 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %5, align 8
  %7 = tail call %"class.courgette::RvaVisitor"* %6(%"class.courgette::Disassembler"* %0) #11
  %8 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)**, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*** %3, align 8
  %9 = getelementptr inbounds %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %8, i64 12
  %10 = load %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)*, %"class.courgette::RvaVisitor"* (%"class.courgette::Disassembler"*)** %9, align 8
  %11 = tail call %"class.courgette::RvaVisitor"* %10(%"class.courgette::Disassembler"* %0) #11
  tail call void @_ZN9courgette15AssemblyProgram16PrecomputeLabelsEPNS_10RvaVisitorES2_(%"class.courgette::AssemblyProgram"* %1, %"class.courgette::RvaVisitor"* %7, %"class.courgette::RvaVisitor"* %11) #11
  %12 = icmp eq %"class.courgette::RvaVisitor"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.courgette::RvaVisitor"* %11 to void (%"class.courgette::RvaVisitor"*)***
  %15 = load void (%"class.courgette::RvaVisitor"*)**, void (%"class.courgette::RvaVisitor"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %15, i64 1
  %17 = load void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %16, align 8
  tail call void %17(%"class.courgette::RvaVisitor"* nonnull %11) #11
  br label %18

18:                                               ; preds = %2, %13
  %19 = icmp eq %"class.courgette::RvaVisitor"* %7, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.courgette::RvaVisitor"* %7 to void (%"class.courgette::RvaVisitor"*)***
  %22 = load void (%"class.courgette::RvaVisitor"*)**, void (%"class.courgette::RvaVisitor"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %22, i64 1
  %24 = load void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %23, align 8
  tail call void %24(%"class.courgette::RvaVisitor"* nonnull %7) #11
  br label %25

25:                                               ; preds = %18, %20
  ret void
}

declare void @_ZN9courgette15AssemblyProgram20DefaultAssignIndexesEv(%"class.courgette::AssemblyProgram"*) local_unnamed_addr #7

declare zeroext i1 @_ZN9courgette15AssemblyProgram14AnnotateLabelsERKN4base17RepeatingCallbackIFbPNS_19InstructionReceptorEEEE(%"class.courgette::AssemblyProgram"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9courgette12Disassembler20DisassembleAndEncodeEPNS_15AssemblyProgramEPNS_14EncodedProgramE(%"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*, %"class.courgette::EncodedProgram"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = tail call zeroext i1 @_ZNK9courgette15AssemblyProgram21PrepareEncodedProgramEPNS_14EncodedProgramE(%"class.courgette::AssemblyProgram"* %1, %"class.courgette::EncodedProgram"* %2) #11
  %6 = getelementptr inbounds %"class.courgette::AssemblyProgram", %"class.courgette::AssemblyProgram"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.base::RepeatingCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = bitcast %"class.courgette::Disassembler"* %0 to void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)***
  %10 = load void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)**, void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*, void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)** %10, i64 15
  %12 = load void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)*, void (%"class.base::RepeatingCallback"*, %"class.courgette::Disassembler"*, %"class.courgette::AssemblyProgram"*)** %11, align 8
  call void %12(%"class.base::RepeatingCallback"* nonnull sret %4, %"class.courgette::Disassembler"* %0, %"class.courgette::AssemblyProgram"* %1) #11
  %13 = call zeroext i1 @_ZN9courgette14EncodedProgram20GenerateInstructionsENS_14ExecutableTypeERKN4base17RepeatingCallbackIFbPNS_19InstructionReceptorEEEE(%"class.courgette::EncodedProgram"* %2, i32 %7, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %4) #11
  %14 = select i1 %13, i32 1, i32 25
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret i32 %14
}

declare zeroext i1 @_ZNK9courgette15AssemblyProgram21PrepareEncodedProgramEPNS_14EncodedProgramE(%"class.courgette::AssemblyProgram"*, %"class.courgette::EncodedProgram"*) local_unnamed_addr #7

declare zeroext i1 @_ZN9courgette14EncodedProgram20GenerateInstructionsENS_14ExecutableTypeERKN4base17RepeatingCallbackIFbPNS_19InstructionReceptorEEEE(%"class.courgette::EncodedProgram"*, i32, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN9courgette12Disassembler4GoodEv(%"class.courgette::Disassembler"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 1
  store i8* null, i8** %2, align 8
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN9courgette12Disassembler3BadEPKc(%"class.courgette::Disassembler"* nocapture, i8*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 1
  store i8* %1, i8** %3, align 8
  ret i1 false
}

declare void @_ZN9courgette15AssemblyProgram16PrecomputeLabelsEPNS_10RvaVisitorES2_(%"class.courgette::AssemblyProgram"*, %"class.courgette::RvaVisitor"*, %"class.courgette::RvaVisitor"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12Disassembler12ReduceLengthEm(%"class.courgette::Disassembler"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 103, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  store i64 %1, i64* %8, align 8
  %23 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %1
  %26 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %0, i64 0, i32 4
  store i8* %25, i8** %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette10RvaVisitorD2Ev(%"class.courgette::RvaVisitor"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette12Disassembler16RvaVisitor_Abs32D0Ev(%"class.courgette::Disassembler::RvaVisitor_Abs32"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.courgette::Disassembler::RvaVisitor_Abs32"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK9courgette16VectorRvaVisitorIjE9RemainingEv(%"class.courgette::VectorRvaVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::VectorRvaVisitor", %"class.courgette::VectorRvaVisitor"* %0, i64 0, i32 1, i32 0
  %3 = bitcast i32** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.courgette::VectorRvaVisitor", %"class.courgette::VectorRvaVisitor"* %0, i64 0, i32 2, i32 0
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %4
  %9 = ashr exact i64 %8, 2
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette16VectorRvaVisitorIjE4NextEv(%"class.courgette::VectorRvaVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::VectorRvaVisitor", %"class.courgette::VectorRvaVisitor"* %0, i64 0, i32 1, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds i32, i32* %3, i64 1
  store i32* %4, i32** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette12Disassembler16RvaVisitor_Rel32D0Ev(%"class.courgette::Disassembler::RvaVisitor_Rel32"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.courgette::Disassembler::RvaVisitor_Rel32"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #7

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette16VectorRvaVisitorIjED0Ev(%"class.courgette::VectorRvaVisitor"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN9courgette15AssemblyProgramD1Ev(%"class.courgette::AssemblyProgram"*) unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN9courgette15AssemblyProgramC1ENS_14ExecutableTypeEm(%"class.courgette::AssemblyProgram"*, i32, i64) unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nounwind }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
