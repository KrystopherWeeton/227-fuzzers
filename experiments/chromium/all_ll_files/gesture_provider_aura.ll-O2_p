; ModuleID = '../../ui/events/gestures/gesture_provider_aura.cc'
source_filename = "../../ui/events/gestures/gesture_provider_aura.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::GestureProviderAura" = type { %"class.ui::GestureProviderClient", %"class.ui::GestureProviderAuraClient"*, %"class.ui::MotionEventAura", %"class.ui::FilteredGestureProvider", i8, %"class.std::__1::vector.38", %"class.ui::GestureConsumer"* }
%"class.ui::GestureProviderClient" = type { i32 (...)** }
%"class.ui::MotionEventAura" = type { %"class.ui::MotionEventGeneric" }
%"class.ui::MotionEventGeneric" = type { %"class.ui::MotionEvent", i32, %"class.base::TimeTicks", i32, i32, i32, i32, %"class.base::StackVector", %"class.std::__1::vector.1" }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<ui::PointerProperties, 5>::Source" = type { [300 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<ui::PointerProperties, 5>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::PointerProperties"*, %"struct.ui::PointerProperties"*, %"class.std::__1::__compressed_pair" }
%"struct.ui::PointerProperties" = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::PointerProperties"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.base::StackAllocator" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.ui::MotionEvent"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.ui::FilteredGestureProvider" = type { %"class.ui::TouchDispositionGestureFilterClient", %"class.ui::GestureProviderClient", %"class.ui::GestureProviderClient"*, %"class.std::__1::unique_ptr.11", %"class.ui::TouchDispositionGestureFilter", i8, i8, [6 x i8], %"class.ui::GestureEventDataPacket" }
%"class.ui::TouchDispositionGestureFilterClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.ui::GestureProvider"* }
%"class.ui::GestureProvider" = type <{ %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr", %"class.ui::GestureTouchUMAHistogram", i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.ui::GestureProvider::GestureListenerImpl"* }
%"class.ui::GestureProvider::GestureListenerImpl" = type opaque
%"class.ui::GestureTouchUMAHistogram" = type <{ i32, %"class.gfx::Point", float, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.ui::TouchDispositionGestureFilter" = type { %"class.ui::TouchDispositionGestureFilterClient"*, %"class.std::__1::queue", %"class.ui::TouchDispositionGestureFilter::GestureHandlingState", i32, i32, i8, i8, i8, i8 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::queue.23"*, i64 }
%"class.std::__1::queue.23" = type opaque
%"class.ui::TouchDispositionGestureFilter::GestureHandlingState" = type { i8, i8, %"struct.ui::BitSet32", %"struct.ui::BitSet32" }
%"struct.ui::BitSet32" = type { i32 }
%"class.ui::GestureEventDataPacket" = type <{ %"class.base::TimeTicks", %"class.base::StackVector.24", %"class.gfx::PointF", %"class.gfx::PointF", i32, i32, i32, [4 x i8] }>
%"class.base::StackVector.24" = type { %"class.base::StackContainer.25" }
%"class.base::StackContainer.25" = type { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source", %"class.base::StackAllocator.26", %"class.std::__1::vector.29" }
%"struct.base::StackAllocator<ui::GestureEventData, 5>::Source" = type { [440 x i8], i8, [7 x i8] }
%"class.base::StackAllocator.26" = type { %"struct.base::StackAllocator<ui::GestureEventData, 5>::Source"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.ui::GestureEventData"*, %"struct.ui::GestureEventData"*, %"class.std::__1::__compressed_pair.35" }
%"struct.ui::GestureEventData" = type { %"struct.ui::GestureEventDetails", i32, i32, %"class.base::TimeTicks", float, float, float, float, i32, i32 }
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.ui::GestureEventData"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::StackAllocator.26" }
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.ui::GestureEvent"* }
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.50" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.base::flat_map.53"* }
%"class.base::flat_map.53" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::unique_ptr.40"* }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::GestureProviderAuraClient" = type { i32 (...)** }
%"struct.ui::GestureProvider::Config" = type <{ %"class.display::Display", %"struct.ui::GestureDetector::Config", %"struct.ui::ScaleGestureDetector::Config", i8, i8, [2 x i8], float, float, [4 x i8] }>
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.65" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"struct.ui::GestureDetector::Config" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", float, float, float, float, i8, [3 x i8], float, float, i8, [3 x i8], float, [4 x i8], %"class.base::TimeDelta", i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"struct.ui::ScaleGestureDetector::Config" = type <{ float, float, float, i8, [3 x i8] }>
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIN2ui12GestureEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN2ui19GestureProviderAuraE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::GestureProviderAura"*)* @_ZN2ui19GestureProviderAuraD2Ev to i8*), i8* bitcast (void (%"class.ui::GestureProviderAura"*)* @_ZN2ui19GestureProviderAuraD0Ev to i8*), i8* bitcast (void (%"class.ui::GestureProviderAura"*, %"struct.ui::GestureEventData"*)* @_ZN2ui19GestureProviderAura14OnGestureEventERKNS_16GestureEventDataE to i8*), i8* bitcast (i1 (%"class.ui::GestureProviderAura"*)* @_ZNK2ui19GestureProviderAura30RequiresDoubleTapGestureEventsEv to i8*)] }, align 8

@_ZN2ui19GestureProviderAuraC1EPNS_15GestureConsumerEPNS_25GestureProviderAuraClientE = hidden unnamed_addr alias void (%"class.ui::GestureProviderAura"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureProviderAuraClient"*), void (%"class.ui::GestureProviderAura"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureProviderAuraClient"*)* @_ZN2ui19GestureProviderAuraC2EPNS_15GestureConsumerEPNS_25GestureProviderAuraClientE
@_ZN2ui19GestureProviderAuraD1Ev = hidden unnamed_addr alias void (%"class.ui::GestureProviderAura"*), void (%"class.ui::GestureProviderAura"*)* @_ZN2ui19GestureProviderAuraD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAuraC2EPNS_15GestureConsumerEPNS_25GestureProviderAuraClientE(%"class.ui::GestureProviderAura"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureProviderAuraClient"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ui::GestureProvider::Config", align 8
  %5 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui19GestureProviderAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 1
  store %"class.ui::GestureProviderAuraClient"* %2, %"class.ui::GestureProviderAuraClient"** %7, align 8
  %8 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 2
  tail call void @_ZN2ui15MotionEventAuraC1Ev(%"class.ui::MotionEventAura"* %8) #9
  %9 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  %10 = bitcast %"struct.ui::GestureProvider::Config"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 696, i8* nonnull %10) #9
  call void @_ZN2ui24GetGestureProviderConfigENS_25GestureProviderConfigTypeE(%"struct.ui::GestureProvider::Config"* nonnull sret %4, i32 0) #9
  call void @_ZN2ui23FilteredGestureProviderC1ERKNS_15GestureProvider6ConfigEPNS_21GestureProviderClientE(%"class.ui::FilteredGestureProvider"* %9, %"struct.ui::GestureProvider::Config"* nonnull dereferenceable(696) %4, %"class.ui::GestureProviderClient"* %5) #9
  call void @_ZN2ui15GestureProvider6ConfigD1Ev(%"struct.ui::GestureProvider::Config"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 696, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::vector.38"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  %14 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 6
  store %"class.ui::GestureConsumer"* %1, %"class.ui::GestureConsumer"** %14, align 8
  call void @_ZN2ui23FilteredGestureProvider37SetDoubleTapSupportForPlatformEnabledEb(%"class.ui::FilteredGestureProvider"* %9, i1 zeroext false) #9
  ret void
}

declare void @_ZN2ui15MotionEventAuraC1Ev(%"class.ui::MotionEventAura"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2ui24GetGestureProviderConfigENS_25GestureProviderConfigTypeE(%"struct.ui::GestureProvider::Config"* sret, i32) local_unnamed_addr #1

declare void @_ZN2ui23FilteredGestureProviderC1ERKNS_15GestureProvider6ConfigEPNS_21GestureProviderClientE(%"class.ui::FilteredGestureProvider"*, %"struct.ui::GestureProvider::Config"* dereferenceable(696), %"class.ui::GestureProviderClient"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui15GestureProvider6ConfigD1Ev(%"struct.ui::GestureProvider::Config"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2ui23FilteredGestureProvider37SetDoubleTapSupportForPlatformEnabledEb(%"class.ui::FilteredGestureProvider"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAuraD2Ev(%"class.ui::GestureProviderAura"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui19GestureProviderAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.40"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.40"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.40"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.40"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %15, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %15, align 8
  %17 = icmp eq %"class.ui::GestureEvent"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.ui::GestureEvent"* %16 to void (%"class.ui::GestureEvent"*)***
  %20 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %20, i64 1
  %22 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %21, align 8
  tail call void %22(%"class.ui::GestureEvent"* nonnull %16) #9
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.40"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.38"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.40"* %5, %"class.std::__1::unique_ptr.40"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  tail call void @_ZN2ui23FilteredGestureProviderD1Ev(%"class.ui::FilteredGestureProvider"* %31) #9
  %32 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 2
  tail call void @_ZN2ui15MotionEventAuraD1Ev(%"class.ui::MotionEventAura"* %32) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui23FilteredGestureProviderD1Ev(%"class.ui::FilteredGestureProvider"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui15MotionEventAuraD1Ev(%"class.ui::MotionEventAura"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAuraD0Ev(%"class.ui::GestureProviderAura"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui19GestureProviderAuraE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.40"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.40"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.40"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.40"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %15, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %15, align 8
  %17 = icmp eq %"class.ui::GestureEvent"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.ui::GestureEvent"* %16 to void (%"class.ui::GestureEvent"*)***
  %20 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %20, i64 1
  %22 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %21, align 8
  tail call void %22(%"class.ui::GestureEvent"* nonnull %16) #9
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.40"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.38"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.40"* %5, %"class.std::__1::unique_ptr.40"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  tail call void @_ZN2ui23FilteredGestureProviderD1Ev(%"class.ui::FilteredGestureProvider"* %31) #9
  %32 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 2
  tail call void @_ZN2ui15MotionEventAuraD1Ev(%"class.ui::MotionEventAura"* %32) #9
  %33 = bitcast %"class.ui::GestureProviderAura"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui19GestureProviderAura12OnTouchEventEPNS_10TouchEventE(%"class.ui::GestureProviderAura"*, %"class.ui::TouchEvent"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZN2ui15MotionEventAura7OnTouchERKNS_10TouchEventE(%"class.ui::MotionEventAura"* %3, %"class.ui::TouchEvent"* dereferenceable(216) %1) #9
  br i1 %4, label %5, label %16

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %3, i64 0, i32 0, i32 0
  %8 = tail call i16 @_ZN2ui23FilteredGestureProvider12OnTouchEventERKNS_11MotionEventE(%"class.ui::FilteredGestureProvider"* %6, %"class.ui::MotionEvent"* dereferenceable(8) %7) #9
  tail call void @_ZN2ui15MotionEventAura25CleanupRemovedTouchPointsERKNS_10TouchEventE(%"class.ui::MotionEventAura"* %3, %"class.ui::TouchEvent"* dereferenceable(216) %1) #9
  %9 = and i16 %8, 1
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = lshr i16 %8, 8
  %13 = trunc i16 %12 to i8
  %14 = and i8 %13, 1
  %15 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 2
  store i8 %14, i8* %15, align 4
  br label %16

16:                                               ; preds = %11, %5, %2
  %17 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %5 ]
  ret i1 %17
}

declare zeroext i1 @_ZN2ui15MotionEventAura7OnTouchERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* dereferenceable(216)) local_unnamed_addr #1

declare i16 @_ZN2ui23FilteredGestureProvider12OnTouchEventERKNS_11MotionEventE(%"class.ui::FilteredGestureProvider"*, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2ui15MotionEventAura25CleanupRemovedTouchPointsERKNS_10TouchEventE(%"class.ui::MotionEventAura"*, %"class.ui::TouchEvent"* dereferenceable(216)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAura15OnTouchEventAckEjbb(%"class.ui::GestureProviderAura"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 1, !range !2
  store i8 1, i8* %5, align 1
  %7 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  tail call void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"* %7, i32 %1, i1 zeroext %2, i1 zeroext %3) #9
  %8 = icmp eq i8* %5, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  store i8 %6, i8* %5, align 1
  br label %10

10:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAura25ResetGestureHandlingStateEv(%"class.ui::GestureProviderAura"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  tail call void @_ZN2ui23FilteredGestureProvider25ResetGestureHandlingStateEv(%"class.ui::FilteredGestureProvider"* %2) #9
  ret void
}

declare void @_ZN2ui23FilteredGestureProvider25ResetGestureHandlingStateEv(%"class.ui::FilteredGestureProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAura24SendSynthesizedEndEventsEv(%"class.ui::GestureProviderAura"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  tail call void @_ZN2ui23FilteredGestureProvider24SendSynthesizedEndEventsEv(%"class.ui::FilteredGestureProvider"* %2) #9
  ret void
}

declare void @_ZN2ui23FilteredGestureProvider24SendSynthesizedEndEventsEv(%"class.ui::FilteredGestureProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAura14OnGestureEventERKNS_16GestureEventDataE(%"class.ui::GestureProviderAura"*, %"struct.ui::GestureEventData"* dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.40", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.40"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i8* @_Znwm(i64 216) #10
  %7 = bitcast i8* %6 to %"class.ui::GestureEvent"*
  %8 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 4
  %9 = load float, float* %8, align 8
  %10 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 5
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 3, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.ui::GestureEventData", %"struct.ui::GestureEventData"* %1, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  tail call void @_ZN2ui12GestureEventC1EffiN4base9TimeTicksERKNS_19GestureEventDetailsEj(%"class.ui::GestureEvent"* nonnull %7, float %9, float %11, i32 %13, i64 %15, %"struct.ui::GestureEventDetails"* dereferenceable(48) %16, i32 %18) #9
  %19 = ptrtoint i8* %6 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.40"* %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 4
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %2
  %25 = bitcast i8* %6 to %"class.ui::GestureEvent"*
  %26 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 1
  %27 = load %"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureProviderAuraClient"** %26, align 8
  %28 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 6
  %29 = load %"class.ui::GestureConsumer"*, %"class.ui::GestureConsumer"** %28, align 8
  %30 = bitcast %"class.ui::GestureProviderAuraClient"* %27 to void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)***
  %31 = load void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)**, void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)*, void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)** %31, i64 2
  %33 = load void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)*, void (%"class.ui::GestureProviderAuraClient"*, %"class.ui::GestureConsumer"*, %"class.ui::GestureEvent"*)** %32, align 8
  tail call void %33(%"class.ui::GestureProviderAuraClient"* %27, %"class.ui::GestureConsumer"* %29, %"class.ui::GestureEvent"* nonnull %25) #9
  br label %47

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %35, align 8
  %37 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %37, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr.40"* %36, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %5, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %36 to i64*
  store i64 %19, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 1
  %43 = ptrtoint %"class.std::__1::unique_ptr.40"* %42 to i64
  %44 = bitcast %"class.std::__1::unique_ptr.40"** %35 to i64*
  store i64 %43, i64* %44, align 8
  br label %47

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 5
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2ui12GestureEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %46, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %3) #9
  br label %47

47:                                               ; preds = %45, %40, %24
  %48 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %5, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %5, align 8
  %49 = icmp eq %"class.ui::GestureEvent"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.ui::GestureEvent"* %48 to void (%"class.ui::GestureEvent"*)***
  %52 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %52, i64 1
  %54 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %53, align 8
  call void %54(%"class.ui::GestureEvent"* nonnull %48) #9
  br label %55

55:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN2ui12GestureEventC1EffiN4base9TimeTicksERKNS_19GestureEventDetailsEj(%"class.ui::GestureEvent"*, float, float, i32, i64, %"struct.ui::GestureEventDetails"* dereferenceable(48), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui19GestureProviderAura30RequiresDoubleTapGestureEventsEv(%"class.ui::GestureProviderAura"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 6
  %3 = load %"class.ui::GestureConsumer"*, %"class.ui::GestureConsumer"** %2, align 8
  %4 = bitcast %"class.ui::GestureConsumer"* %3 to i1 (%"class.ui::GestureConsumer"*)***
  %5 = load i1 (%"class.ui::GestureConsumer"*)**, i1 (%"class.ui::GestureConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.ui::GestureConsumer"*)*, i1 (%"class.ui::GestureConsumer"*)** %5, i64 2
  %7 = load i1 (%"class.ui::GestureConsumer"*)*, i1 (%"class.ui::GestureConsumer"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.ui::GestureConsumer"* %3) #9
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAura26GetAndResetPendingGesturesEv(%"class.std::__1::vector.38"* noalias nocapture sret, %"class.ui::GestureProviderAura"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %1, i64 0, i32 5
  %5 = bitcast %"class.std::__1::vector.38"* %4 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = bitcast %"class.std::__1::vector.38"* %0 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 8
  %8 = bitcast %"class.std::__1::vector.38"* %4 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %11 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  store i64 0, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19GestureProviderAura12OnTouchEnterEiff(%"class.ui::GestureProviderAura"*, i32, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gfx::Point", align 4
  %6 = alloca %"struct.ui::PointerDetails", align 4
  %7 = bitcast %"class.gfx::Point"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %5, i64 0, i32 1
  store i32 0, i32* %9, align 4
  %10 = tail call i64 @_ZN2ui15EventTimeForNowEv() #9
  %11 = bitcast %"struct.ui::PointerDetails"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %11) #9
  call void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"* nonnull %6, i32 3, i32 %1) #9
  %12 = call i8* @_Znwm(i64 216) #10
  %13 = bitcast i8* %12 to %"class.ui::TouchEvent"*
  call void @_ZN2ui10TouchEventC1ENS_9EventTypeERKN3gfx5PointEN4base9TimeTicksERKNS_14PointerDetailsEi(%"class.ui::TouchEvent"* nonnull %13, i32 12, %"class.gfx::Point"* nonnull dereferenceable(8) %5, i64 %10, %"struct.ui::PointerDetails"* nonnull dereferenceable(44) %6, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %14 = getelementptr inbounds i8, i8* %12, i64 144
  %15 = bitcast i8* %14 to float*
  store float %2, float* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 148
  %17 = bitcast i8* %16 to float*
  store float %3, float* %17, align 4
  %18 = getelementptr inbounds i8, i8* %12, i64 152
  %19 = bitcast i8* %18 to float*
  store float %2, float* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 156
  %21 = bitcast i8* %20 to float*
  store float %3, float* %21, align 4
  %22 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 2
  %23 = call zeroext i1 @_ZN2ui15MotionEventAura7OnTouchERKNS_10TouchEventE(%"class.ui::MotionEventAura"* %22, %"class.ui::TouchEvent"* nonnull dereferenceable(216) %13) #9
  br i1 %23, label %24, label %35

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.ui::MotionEventAura", %"class.ui::MotionEventAura"* %22, i64 0, i32 0, i32 0
  %27 = call i16 @_ZN2ui23FilteredGestureProvider12OnTouchEventERKNS_11MotionEventE(%"class.ui::FilteredGestureProvider"* %25, %"class.ui::MotionEvent"* dereferenceable(8) %26) #9
  call void @_ZN2ui15MotionEventAura25CleanupRemovedTouchPointsERKNS_10TouchEventE(%"class.ui::MotionEventAura"* %22, %"class.ui::TouchEvent"* nonnull dereferenceable(216) %13) #9
  %28 = and i16 %27, 1
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = lshr i16 %27, 8
  %32 = trunc i16 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds i8, i8* %12, i64 164
  store i8 %33, i8* %34, align 4
  br label %35

35:                                               ; preds = %4, %24, %30
  %36 = getelementptr inbounds i8, i8* %12, i64 160
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !2
  store i8 1, i8* %39, align 1
  %41 = getelementptr inbounds %"class.ui::GestureProviderAura", %"class.ui::GestureProviderAura"* %0, i64 0, i32 3
  call void @_ZN2ui23FilteredGestureProvider15OnTouchEventAckEjbb(%"class.ui::FilteredGestureProvider"* %41, i32 %38, i1 zeroext true, i1 zeroext false) #9
  store i8 %40, i8* %39, align 1
  %42 = bitcast i8* %12 to void (%"class.ui::TouchEvent"*)***
  %43 = load void (%"class.ui::TouchEvent"*)**, void (%"class.ui::TouchEvent"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.ui::TouchEvent"*)*, void (%"class.ui::TouchEvent"*)** %43, i64 1
  %45 = load void (%"class.ui::TouchEvent"*)*, void (%"class.ui::TouchEvent"*)** %44, align 8
  call void %45(%"class.ui::TouchEvent"* nonnull %13) #9
  ret void
}

declare i64 @_ZN2ui15EventTimeForNowEv() local_unnamed_addr #1

declare void @_ZN2ui14PointerDetailsC1ENS_16EventPointerTypeEi(%"struct.ui::PointerDetails"*, i32, i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2ui12GestureEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.40"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.40"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.40"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.ui::GestureEvent"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.40"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.40"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.40"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.40"*
  %138 = icmp eq %"class.std::__1::unique_ptr.40"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.ui::GestureEvent"*, %"class.ui::GestureEvent"** %142, align 8
  store %"class.ui::GestureEvent"* null, %"class.ui::GestureEvent"** %142, align 8
  %144 = icmp eq %"class.ui::GestureEvent"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.ui::GestureEvent"* %143 to void (%"class.ui::GestureEvent"*)***
  %147 = load void (%"class.ui::GestureEvent"*)**, void (%"class.ui::GestureEvent"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %147, i64 1
  %149 = load void (%"class.ui::GestureEvent"*)*, void (%"class.ui::GestureEvent"*)** %148, align 8
  tail call void %149(%"class.ui::GestureEvent"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZN2ui10TouchEventC1ENS_9EventTypeERKN3gfx5PointEN4base9TimeTicksERKNS_14PointerDetailsEi(%"class.ui::TouchEvent"*, i32, %"class.gfx::Point"* dereferenceable(8), i64, %"struct.ui::PointerDetails"* dereferenceable(44), i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
