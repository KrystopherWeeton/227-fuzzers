; ModuleID = '../../v8/src/compiler/backend/jump-threading.cc'
source_filename = "../../v8/src/compiler/backend/jump-threading.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.617"*, %"class.v8::internal::ZoneVector.617"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.644", %"class.v8::internal::ZoneVector.653", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.685", %"class.v8::internal::ZoneVector.698", i32, %"class.v8::internal::ZoneVector.705", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.16", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.337", %"class.std::__1::unique_ptr.338", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.344", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.404", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.411", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.421", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.432", %"struct.std::__1::atomic.61", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.466", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.486"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.493", i32, i8, i8, i32, i32, %"class.std::__1::vector.499", %"class.std::__1::vector.499", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.506", i64, %"class.std::__1::unordered_map.507", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.210", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.69", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.566", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.572", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.606", %"class.std::__1::vector.610", %"class.std::__1::vector.610", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.11", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.44", %"class.std::__1::vector.48", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.70", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.74", %"class.std::__1::vector.74", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::shared_ptr.171", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.172", %"class.std::__1::unique_ptr.198", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.204", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.217", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.246", %"class.std::__1::unordered_map.272", %"class.std::__1::unordered_map.246", %"class.std::__1::unordered_map.296", %"class.std::__1::vector.324", i8, %"class.std::__1::unique_ptr.331", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.22", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.36", [4 x i8] }>
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24", %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.39", %"struct.std::__1::atomic.39", %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i32 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.61", %"struct.std::__1::atomic.65", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.69" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.171" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.172" = type { %"class.std::__1::__hash_table.173" }
%"class.std::__1::__hash_table.173" = type <{ %"class.std::__1::unique_ptr.174", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.192", [4 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base.177"** }
%"struct.std::__1::__hash_node_base.177" = type { %"struct.std::__1::__hash_node_base.177"* }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::__bucket_list_deallocator.179" }
%"class.std::__1::__bucket_list_deallocator.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.std::__1::__hash_node_base.177" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.210", %"class.std::__1::vector.210" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.223" }
%"class.std::__1::__hash_table.223" = type <{ %"class.std::__1::unique_ptr.224", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.241", [4 x i8] }>
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base.227"** }
%"struct.std::__1::__hash_node_base.227" = type { %"struct.std::__1::__hash_node_base.227"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::__bucket_list_deallocator.229" }
%"class.std::__1::__bucket_list_deallocator.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.227" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.272" = type { %"class.std::__1::__hash_table.273" }
%"class.std::__1::__hash_table.273" = type <{ %"class.std::__1::unique_ptr.274", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276", %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.277"** }
%"struct.std::__1::__hash_node_base.277" = type { %"struct.std::__1::__hash_node_base.277"* }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.std::__1::__bucket_list_deallocator.279" }
%"class.std::__1::__bucket_list_deallocator.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::__hash_node_base.277" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.246" = type { %"class.std::__1::__hash_table.247" }
%"class.std::__1::__hash_table.247" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.266", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base.251"** }
%"struct.std::__1::__hash_node_base.251" = type { %"struct.std::__1::__hash_node_base.251"* }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::__bucket_list_deallocator.253" }
%"class.std::__1::__bucket_list_deallocator.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node_base.251" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.296" = type { %"class.std::__1::__hash_table.297" }
%"class.std::__1::__hash_table.297" = type <{ %"class.std::__1::unique_ptr.298", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.318", [4 x i8] }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300", %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::__hash_node_base.301"** }
%"struct.std::__1::__hash_node_base.301" = type { %"struct.std::__1::__hash_node_base.301"* }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.std::__1::__bucket_list_deallocator.303" }
%"class.std::__1::__bucket_list_deallocator.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base.301" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.326" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.210" }
%"class.std::__1::shared_ptr.337" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.344" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type opaque
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.377", %"class.std::__1::unique_ptr.384" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.345", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.364", %"class.v8::internal::Handle.376", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.359" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.347", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.347" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.354" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.349" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.348", %union.anon }
%"class.v8::internal::Handle.348" = type { %"class.v8::internal::HandleBase" }
%union.anon = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.358 }
%union.anon.358 = type { i8 }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.364" = type { %"class.std::__1::__deque_base.365" }
%"class.std::__1::__deque_base.365" = type { %"struct.std::__1::__split_buffer.366", i64, %"class.std::__1::__compressed_pair.372" }
%"struct.std::__1::__split_buffer.366" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.367" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::Handle.376" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.377" = type { %"class.std::__1::__vector_base.378" }
%"class.std::__1::__vector_base.378" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.379" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.390", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.396", %"class.v8::internal::DetachableVector.397", %"class.v8::internal::DetachableVector.396", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.397" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.396" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.398" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { i32*, i32*, %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__cxx_atomic_impl.413" }
%"struct.std::__1::__cxx_atomic_impl.413" = type { %"struct.std::__1::__cxx_atomic_base_impl.414" }
%"struct.std::__1::__cxx_atomic_base_impl.414" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__cxx_atomic_impl.423" }
%"struct.std::__1::__cxx_atomic_impl.423" = type { %"struct.std::__1::__cxx_atomic_base_impl.424" }
%"struct.std::__1::__cxx_atomic_base_impl.424" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.428 }
%union.anon.428 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.432" = type { %"class.std::__1::__hash_table.433" }
%"class.std::__1::__hash_table.433" = type <{ %"class.std::__1::unique_ptr.434", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.452", [4 x i8] }>
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436", %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"struct.std::__1::__hash_node_base.437"** }
%"struct.std::__1::__hash_node_base.437" = type { %"struct.std::__1::__hash_node_base.437"* }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.std::__1::__bucket_list_deallocator.439" }
%"class.std::__1::__bucket_list_deallocator.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base.437" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.458", %"class.v8::internal::Handle.464", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.465", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.464" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.465" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type opaque
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.472" }
%"class.std::__1::deque.472" = type { %"class.std::__1::__deque_base.473" }
%"class.std::__1::__deque_base.473" = type { %"struct.std::__1::__split_buffer.474", i64, %"class.std::__1::__compressed_pair.481" }
%"struct.std::__1::__split_buffer.474" = type { %"struct.std::__1::pair.475"**, %"struct.std::__1::pair.475"**, %"struct.std::__1::pair.475"**, %"class.std::__1::__compressed_pair.476" }
%"struct.std::__1::pair.475" = type opaque
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.std::__1::pair.475"** }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { %"class.v8::internal::Handle.348"*, %"class.v8::internal::Handle.348"*, %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::internal::Handle.348"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.416", i32, %"class.v8::Local.15" }
%"class.v8::Local.416" = type { %"class.v8::Promise"* }
%"class.v8::Local.15" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type opaque
%"class.std::__1::vector.499" = type { %"class.std::__1::__vector_base.500" }
%"class.std::__1::__vector_base.500" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.506" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.529", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.69" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.535", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.564", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.535" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.560, %union.anon.562, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.560 = type { i64 }
%union.anon.562 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.564" = type { %"class.v8::PersistentBase.565" }
%"class.v8::PersistentBase.565" = type { %"class.v8::Context"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.536", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.536" = type { %"class.std::__1::__hash_table.537" }
%"class.std::__1::__hash_table.537" = type <{ %"class.std::__1::unique_ptr.538", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.556", [4 x i8] }>
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540", %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.541"** }
%"struct.std::__1::__hash_node_base.541" = type { %"struct.std::__1::__hash_node_base.541"* }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.std::__1::__bucket_list_deallocator.543" }
%"class.std::__1::__bucket_list_deallocator.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.541" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.417", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.417" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.580" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.606" = type { %"struct.std::__1::__atomic_base.607" }
%"struct.std::__1::__atomic_base.607" = type { %"struct.std::__1::__cxx_atomic_impl.608" }
%"struct.std::__1::__cxx_atomic_impl.608" = type { %"struct.std::__1::__cxx_atomic_base_impl.609" }
%"struct.std::__1::__cxx_atomic_base_impl.609" = type { %"class.std::__1::vector.610"* }
%"class.std::__1::vector.610" = type { %"class.std::__1::__vector_base.611" }
%"class.std::__1::__vector_base.611" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.612" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ZoneVector.617" = type { %"class.std::__1::vector.618" }
%"class.std::__1::vector.618" = type { %"class.std::__1::__vector_base.619" }
%"class.std::__1::__vector_base.619" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634", %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::ZoneAllocator.636" }
%"class.v8::internal::ZoneAllocator.636" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.v8::internal::ZoneAllocator.640" }
%"class.v8::internal::ZoneAllocator.640" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.644" = type { %"class.std::__1::__tree.645" }
%"class.std::__1::__tree.645" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.v8::internal::ZoneAllocator.648" }
%"class.v8::internal::ZoneAllocator.648" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.v8::internal::ZoneVector.653" = type { %"class.std::__1::vector.654" }
%"class.std::__1::vector.654" = type { %"class.std::__1::__vector_base.655" }
%"class.std::__1::__vector_base.655" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.656" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657", %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.v8::internal::ZoneAllocator.659" }
%"class.v8::internal::ZoneAllocator.659" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.660" }
%"class.std::__1::deque.660" = type { %"class.std::__1::__deque_base.661" }
%"class.std::__1::__deque_base.661" = type { %"struct.std::__1::__split_buffer.662", i64, %"class.std::__1::__compressed_pair.681" }
%"struct.std::__1::__split_buffer.662" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.677" }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.663" }
%"class.v8::internal::ZoneVector.663" = type { %"class.std::__1::vector.664" }
%"class.std::__1::vector.664" = type { %"class.std::__1::__vector_base.665" }
%"class.std::__1::__vector_base.665" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.666" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667", %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::ZoneAllocator.669" }
%"class.v8::internal::ZoneAllocator.669" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.670", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.670" = type { %"class.std::__1::vector.671" }
%"class.std::__1::vector.671" = type { %"class.std::__1::__vector_base.672" }
%"class.std::__1::__vector_base.672" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674", %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::ZoneAllocator.676" }
%"class.v8::internal::ZoneAllocator.676" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678", %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.680", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.680" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::RecyclingZoneAllocator.683" }
%"class.v8::internal::RecyclingZoneAllocator.683" = type { %"class.v8::internal::ZoneAllocator.684", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.684" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.685" = type { %"class.std::__1::deque.686" }
%"class.std::__1::deque.686" = type { %"class.std::__1::__deque_base.687" }
%"class.std::__1::__deque_base.687" = type { %"struct.std::__1::__split_buffer.688", i64, %"class.std::__1::__compressed_pair.694" }
%"struct.std::__1::__split_buffer.688" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690", %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::RecyclingZoneAllocator.692" }
%"class.v8::internal::RecyclingZoneAllocator.692" = type { %"class.v8::internal::ZoneAllocator.693", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.693" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::RecyclingZoneAllocator.696" }
%"class.v8::internal::RecyclingZoneAllocator.696" = type { %"class.v8::internal::ZoneAllocator.697", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.697" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.698" = type { %"class.std::__1::vector.699" }
%"class.std::__1::vector.699" = type { %"class.std::__1::__vector_base.700" }
%"class.std::__1::__vector_base.700" = type { i8*, i8*, %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.702" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::ZoneAllocator.704" }
%"class.v8::internal::ZoneAllocator.704" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.705" = type { %"class.std::__1::vector.706" }
%"class.std::__1::vector.706" = type { %"class.std::__1::__vector_base.707" }
%"class.std::__1::__vector_base.707" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.723" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.708", %"class.v8::internal::ZoneVector.716" }
%"class.v8::internal::ZoneVector.708" = type { %"class.std::__1::vector.709" }
%"class.std::__1::vector.709" = type { %"class.std::__1::__vector_base.710" }
%"class.std::__1::__vector_base.710" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.712" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.711 }
%"class.v8::internal::MachineType" = type { i8, i8 }
%union.anon.711 = type { i64 }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713", %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::ZoneAllocator.715" }
%"class.v8::internal::ZoneAllocator.715" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.716" = type { %"class.std::__1::vector.717" }
%"class.std::__1::vector.717" = type { %"class.std::__1::__vector_base.718" }
%"class.std::__1::__vector_base.718" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720", %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::ZoneAllocator.722" }
%"class.v8::internal::ZoneAllocator.722" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.376", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724", %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::ZoneAllocator.726" }
%"class.v8::internal::ZoneAllocator.726" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.620", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.620" = type { %"class.std::__1::vector.621" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.629" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.623" }
%"class.v8::internal::ZoneVector.623" = type { %"class.std::__1::vector.624" }
%"class.std::__1::vector.624" = type { %"class.std::__1::__vector_base.625" }
%"class.std::__1::__vector_base.625" = type { i32*, i32*, %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8::internal::ZoneAllocator.628" }
%"class.v8::internal::ZoneAllocator.628" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630", %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.v8::internal::ZoneAllocator.632" }
%"class.v8::internal::ZoneAllocator.632" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque.727" = type { %"class.std::__1::deque.728" }
%"class.std::__1::deque.728" = type { %"class.std::__1::__deque_base.729" }
%"class.std::__1::__deque_base.729" = type { %"struct.std::__1::__split_buffer.730", i64, %"class.std::__1::__compressed_pair.736" }
%"struct.std::__1::__split_buffer.730" = type { %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.v8::internal::compiler::RpoNumber"** }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.v8::internal::RecyclingZoneAllocator.734" }
%"class.v8::internal::RecyclingZoneAllocator.734" = type { %"class.v8::internal::ZoneAllocator.735", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.735" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::RecyclingZoneAllocator.738" }
%"class.v8::internal::RecyclingZoneAllocator.738" = type { %"class.v8::internal::ZoneAllocator", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque.727" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::ZoneAllocator.752" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.739" = type { %"class.std::__1::vector.740" }
%"class.std::__1::vector.740" = type { i64*, i64, %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.27", %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::ZoneAllocator.743" }
%"class.v8::internal::ZoneAllocator.743" = type { %"class.v8::internal::Zone"* }
%"struct.std::__1::__split_buffer.745" = type { %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"**, %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.732", %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::RecyclingZoneAllocator.734"* }

$_ZNSt3__16vectorIN2v88internal8compiler9RpoNumberENS2_13ZoneAllocatorIS4_EEE6assignEmRKS4_ = comdat any

$_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

@_ZN2v88internal19FLAG_trace_turbo_jtE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [13 x i8] c"jt [%d] B%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"  parallel move\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"  flags\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"  nop\0A\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"  jmp\0A\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"  ret\0A\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.7 = private unnamed_addr constant [70 x i8] c"block->must_construct_frame() implies block->must_deconstruct_frame()\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"  other\0A\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"B%d \00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"-> B%d\0A\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZN2v88internal13FLAG_turbo_jtE = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"jt-fw nop @%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"  xx %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"  fw %d -> %d (recurse)\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"  fw %d -> %d (cycle)\0A\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"  fw %d -> %d (forward)\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler13JumpThreading17ComputeForwardingEPNS0_4ZoneEPNS0_10ZoneVectorINS1_9RpoNumberEEEPNS1_19InstructionSequenceEb(%"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::compiler::InstructionSequence"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::RpoNumber", align 4
  %6 = alloca %"class.v8::internal::ZoneDeque.727", align 8
  %7 = alloca %"class.v8::internal::ZoneStack", align 8
  %8 = bitcast %"class.v8::internal::ZoneStack"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #5
  %9 = bitcast %"class.v8::internal::ZoneDeque.727"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #5
  %10 = ptrtoint %"class.v8::internal::Zone"* %0 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #5
  %11 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.733"* %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #5
  %15 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.737"* %15 to i64*
  store i64 %10, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.731"* %18 to i8*
  %21 = bitcast %"class.std::__1::__compressed_pair.731"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 32, i1 false) #5
  %22 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0, i32 2
  %26 = bitcast %"class.std::__1::__compressed_pair.736"* %24 to i8*
  %27 = bitcast %"class.std::__1::__compressed_pair.736"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #5
  %28 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #5
  %29 = getelementptr inbounds %"class.v8::internal::ZoneDeque.727", %"class.v8::internal::ZoneDeque.727"* %6, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.729"* nonnull %29) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #5
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 2
  %31 = bitcast %"class.v8::internal::ZoneVector.617"** %30 to %"class.std::__1::vector.618"**
  %32 = load %"class.std::__1::vector.618"*, %"class.std::__1::vector.618"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.618", %"class.std::__1::vector.618"* %32, i64 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.618"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = shl i64 %38, 29
  %40 = ashr i64 %39, 32
  %41 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0
  %42 = bitcast %"class.v8::internal::compiler::RpoNumber"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #5
  %43 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %5, i64 0, i32 0
  store i32 -1, i32* %43, align 4
  call void @_ZNSt3__16vectorIN2v88internal8compiler9RpoNumberENS2_13ZoneAllocatorIS4_EEE6assignEmRKS4_(%"class.std::__1::vector"* %41, i64 %40, %"class.v8::internal::compiler::RpoNumber"* nonnull dereferenceable(4) %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #5
  %44 = load %"class.v8::internal::ZoneVector.617"*, %"class.v8::internal::ZoneVector.617"** %30, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.617", %"class.v8::internal::ZoneVector.617"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.617", %"class.v8::internal::ZoneVector.617"* %44, i64 0, i32 0, i32 0, i32 1
  %48 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %47, align 8
  %49 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %46, %48
  br i1 %49, label %63, label %50

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %53 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %52 to i64*
  %54 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %54 to i64*
  %56 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 8, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %61 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %60 to i64*
  %62 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %60 to %"class.v8::internal::compiler::RpoNumber"**
  br label %79

63:                                               ; preds = %484, %4
  %64 = phi i8 [ 0, %4 ], [ %487, %484 ]
  %65 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %524, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.v8::internal::compiler::RpoNumber"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = lshr exact i64 %73, 2
  %75 = trunc i64 %74 to i32
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %524

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %492

79:                                               ; preds = %50, %484
  %80 = phi i32 [ undef, %50 ], [ %489, %484 ]
  %81 = phi i32 [ undef, %50 ], [ %488, %484 ]
  %82 = phi i8 [ 0, %50 ], [ %487, %484 ]
  %83 = phi i32 [ -1, %50 ], [ %486, %484 ]
  %84 = phi i32 [ -1, %50 ], [ %485, %484 ]
  %85 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %46, %50 ], [ %490, %484 ]
  %86 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %86, i64 0, i32 4, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %90, i64 %89, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %132

94:                                               ; preds = %79
  %95 = load i64, i64* %53, align 8
  %96 = load i64, i64* %55, align 8
  %97 = sub i64 %95, %96
  %98 = icmp eq i64 %97, 0
  %99 = shl i64 %97, 7
  %100 = add i64 %99, -1
  %101 = select i1 %98, i64 0, i64 %100
  %102 = load i64, i64* %22, align 8
  %103 = load i64, i64* %56, align 8
  %104 = add i64 %103, %102
  %105 = icmp eq i64 %101, %104
  %106 = inttoptr i64 %96 to %"class.v8::internal::compiler::RpoNumber"**
  %107 = inttoptr i64 %95 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %105, label %108, label %114

108:                                              ; preds = %94
  call void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.728"* nonnull %57) #5
  %109 = load i64, i64* %56, align 8
  %110 = load i64, i64* %22, align 8
  %111 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %54, align 8
  %112 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %52, align 8
  %113 = add i64 %110, %109
  br label %114

114:                                              ; preds = %108, %94
  %115 = phi i64 [ %113, %108 ], [ %104, %94 ]
  %116 = phi %"class.v8::internal::compiler::RpoNumber"** [ %112, %108 ], [ %107, %94 ]
  %117 = phi %"class.v8::internal::compiler::RpoNumber"** [ %111, %108 ], [ %106, %94 ]
  %118 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %116, %117
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = lshr i64 %115, 10
  %121 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %117, i64 %120
  %122 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, align 8
  %123 = and i64 %115, 1023
  %124 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %122, i64 %123
  br label %125

125:                                              ; preds = %119, %114
  %126 = phi %"class.v8::internal::compiler::RpoNumber"* [ %124, %119 ], [ null, %114 ]
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %126, i64 0, i32 0
  store i32 %88, i32* %127, align 4
  %128 = load i64, i64* %56, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %56, align 8
  %130 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %130, i64 %89, i32 0
  store i32 -2, i32* %131, align 4
  br label %132

132:                                              ; preds = %79, %125
  %133 = load i64, i64* %56, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %484, label %135

135:                                              ; preds = %132, %480
  %136 = phi i64 [ %482, %480 ], [ %133, %132 ]
  %137 = phi i32 [ %352, %480 ], [ %80, %132 ]
  %138 = phi i32 [ %351, %480 ], [ %81, %132 ]
  %139 = phi i8 [ %481, %480 ], [ %82, %132 ]
  %140 = phi i32 [ %349, %480 ], [ %83, %132 ]
  %141 = phi i32 [ %348, %480 ], [ %84, %132 ]
  %142 = load i64, i64* %22, align 8
  %143 = add i64 %136, -1
  %144 = add i64 %143, %142
  %145 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %54, align 8
  %146 = lshr i64 %144, 10
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %145, i64 %146
  %148 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %147, align 8
  %149 = and i64 %144, 1023
  %150 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %148, i64 %149, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = load %"class.std::__1::vector.618"*, %"class.std::__1::vector.618"** %31, align 8
  %153 = sext i32 %151 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.618", %"class.std::__1::vector.618"* %152, i64 0, i32 0, i32 1
  %155 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::vector.618"* %152 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = ashr exact i64 %159, 3
  %161 = icmp ugt i64 %160, %153
  br i1 %161, label %164, label %162

162:                                              ; preds = %135
  %163 = bitcast %"class.std::__1::vector.618"* %152 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %163) #6
  unreachable

164:                                              ; preds = %135
  %165 = inttoptr i64 %158 to %"class.v8::internal::compiler::InstructionBlock"**
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %165, i64 %153
  %167 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %166, align 8
  %168 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %174, label %170

170:                                              ; preds = %164
  %171 = trunc i64 %136 to i32
  %172 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 4, i32 0
  %173 = load i32, i32* %172, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 %171, i32 %173) #5
  br label %174

174:                                              ; preds = %164, %170
  %175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 4, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 1, i32 0
  %178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 1, i32 0, i32 0, i32 1
  %179 = bitcast %"class.v8::internal::compiler::RpoNumber"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.std::__1::vector"* %177 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %180, %182
  %184 = icmp eq i64 %183, 4
  br i1 %184, label %185, label %226

185:                                              ; preds = %174
  %186 = inttoptr i64 %182 to %"class.v8::internal::compiler::RpoNumber"*
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = load %"class.std::__1::vector.618"*, %"class.std::__1::vector.618"** %31, align 8
  %190 = sext i32 %188 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.618", %"class.std::__1::vector.618"* %189, i64 0, i32 0, i32 1
  %192 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.std::__1::vector.618"* %189 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = ashr exact i64 %196, 3
  %198 = icmp ugt i64 %197, %190
  br i1 %198, label %201, label %199

199:                                              ; preds = %185
  %200 = bitcast %"class.std::__1::vector.618"* %189 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %200) #6
  unreachable

201:                                              ; preds = %185
  %202 = inttoptr i64 %195 to %"class.v8::internal::compiler::InstructionBlock"**
  %203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %202, i64 %190
  %204 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %204, i64 0, i32 8
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %204, i64 0, i32 9
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %206, %208
  br i1 %209, label %226, label %210

210:                                              ; preds = %201
  %211 = add nsw i32 %208, -1
  %212 = sext i32 %211 to i64
  %213 = load i64, i64* %58, align 8
  %214 = add i64 %213, %212
  %215 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %59, align 8
  %216 = lshr i64 %214, 9
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %215, i64 %216
  %218 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %217, align 8
  %219 = and i64 %214, 511
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %218, i64 %219
  %221 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %221, i64 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = and i32 %223, 114688
  %225 = icmp eq i32 %224, 32768
  br i1 %225, label %347, label %226

226:                                              ; preds = %201, %174, %210
  %227 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 8
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 9
  %230 = load i32, i32* %229, align 8
  %231 = icmp slt i32 %228, %230
  br i1 %231, label %232, label %333

232:                                              ; preds = %226
  %233 = sext i32 %228 to i64
  br label %234

234:                                              ; preds = %232, %326
  %235 = phi i64 [ %233, %232 ], [ %327, %326 ]
  %236 = load i64, i64* %58, align 8
  %237 = add i64 %236, %235
  %238 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %59, align 8
  %239 = lshr i64 %237, 9
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %238, i64 %239
  %241 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %240, align 8
  %242 = and i64 %237, 511
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %241, i64 %242
  %244 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %243, align 8
  %245 = call zeroext i1 @_ZNK2v88internal8compiler11Instruction17AreMovesRedundantEv(%"class.v8::internal::compiler::Instruction"* %244) #5
  br i1 %245, label %250, label %246

246:                                              ; preds = %234
  %247 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %347, label %249

249:                                              ; preds = %246
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #5
  br label %347

250:                                              ; preds = %234
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %244, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = and i32 %252, 114688
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %259, label %255

255:                                              ; preds = %250
  %256 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %347, label %258

258:                                              ; preds = %255
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %347

259:                                              ; preds = %250
  %260 = and i32 %252, 511
  switch i32 %260, label %280 [
    i32 15, label %261
    i32 12, label %265
  ]

261:                                              ; preds = %259
  %262 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %326, label %264

264:                                              ; preds = %261
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #5
  br label %326

265:                                              ; preds = %259
  %266 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %269

269:                                              ; preds = %265, %268
  br i1 %3, label %278, label %270

270:                                              ; preds = %269
  %271 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 16
  %272 = load i8, i8* %271, align 2, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %347

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 15
  %276 = load i8, i8* %275, align 1, !range !2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %278, label %347

278:                                              ; preds = %274, %269
  %279 = call i32 @_ZN2v88internal8compiler19InstructionSequence8InputRpoEPNS1_11InstructionEm(%"class.v8::internal::compiler::InstructionSequence"* %2, %"class.v8::internal::compiler::Instruction"* %244, i64 0) #5
  br label %347

280:                                              ; preds = %259
  %281 = icmp eq i32 %260, 21
  %282 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %283 = icmp ne i8 %282, 0
  br i1 %281, label %284, label %324

284:                                              ; preds = %280
  br i1 %283, label %285, label %286

285:                                              ; preds = %284
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %286

286:                                              ; preds = %284, %285
  %287 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 15
  %288 = load i8, i8* %287, align 1, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %295, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 16
  %292 = load i8, i8* %291, align 2, !range !2
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %294, label %295, !prof !3

294:                                              ; preds = %290
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0)) #6
  unreachable

295:                                              ; preds = %290, %286
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %244, i64 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = and i32 %297, 255
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %244, i64 0, i32 5, i64 %299, i32 0
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, 7
  %303 = icmp eq i64 %302, 3
  br i1 %303, label %304, label %347

304:                                              ; preds = %295
  %305 = lshr i64 %301, 32
  %306 = trunc i64 %305 to i32
  %307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %167, i64 0, i32 16
  %308 = load i8, i8* %307, align 2, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %317, label %310

310:                                              ; preds = %304
  %311 = icmp eq i32 %140, -1
  br i1 %311, label %312, label %314

312:                                              ; preds = %310
  %313 = load i32, i32* %175, align 4
  br label %347

314:                                              ; preds = %310
  %315 = icmp eq i32 %137, %306
  br i1 %315, label %316, label %347

316:                                              ; preds = %314
  store i8 0, i8* %307, align 2
  br label %347

317:                                              ; preds = %304
  %318 = icmp eq i32 %141, -1
  br i1 %318, label %319, label %321

319:                                              ; preds = %317
  %320 = load i32, i32* %175, align 4
  br label %347

321:                                              ; preds = %317
  %322 = icmp eq i32 %138, %306
  %323 = select i1 %322, i32 %141, i32 %176
  br label %347

324:                                              ; preds = %280
  br i1 %283, label %325, label %347

325:                                              ; preds = %324
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #5
  br label %347

326:                                              ; preds = %261, %264
  %327 = add nsw i64 %235, 1
  %328 = load i32, i32* %229, align 8
  %329 = sext i32 %328 to i64
  %330 = icmp slt i64 %327, %329
  br i1 %330, label %234, label %331

331:                                              ; preds = %326
  %332 = load i32, i32* %175, align 4
  br label %333

333:                                              ; preds = %331, %226
  %334 = phi i32 [ %332, %331 ], [ %176, %226 ]
  %335 = add nsw i32 %334, 1
  %336 = load %"class.std::__1::vector.618"*, %"class.std::__1::vector.618"** %31, align 8
  %337 = getelementptr inbounds %"class.std::__1::vector.618", %"class.std::__1::vector.618"* %336, i64 0, i32 0, i32 1
  %338 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.std::__1::vector.618"* %336 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = sub i64 %339, %341
  %343 = lshr exact i64 %342, 3
  %344 = trunc i64 %343 to i32
  %345 = icmp slt i32 %335, %344
  %346 = select i1 %345, i32 %335, i32 %176
  br label %347

347:                                              ; preds = %274, %270, %333, %321, %324, %325, %295, %319, %312, %316, %314, %278, %258, %255, %249, %246, %210
  %348 = phi i32 [ %141, %210 ], [ %141, %249 ], [ %141, %246 ], [ %141, %258 ], [ %141, %255 ], [ %141, %324 ], [ %141, %325 ], [ %141, %295 ], [ %320, %319 ], [ %141, %314 ], [ %141, %316 ], [ %141, %312 ], [ %141, %274 ], [ %141, %270 ], [ %141, %278 ], [ %141, %321 ], [ %141, %333 ]
  %349 = phi i32 [ %140, %210 ], [ %140, %249 ], [ %140, %246 ], [ %140, %258 ], [ %140, %255 ], [ %140, %324 ], [ %140, %325 ], [ %140, %295 ], [ %140, %319 ], [ %140, %314 ], [ %140, %316 ], [ %313, %312 ], [ %140, %274 ], [ %140, %270 ], [ %140, %278 ], [ %140, %321 ], [ %140, %333 ]
  %350 = phi i32 [ %176, %210 ], [ %176, %249 ], [ %176, %246 ], [ %176, %258 ], [ %176, %255 ], [ %176, %324 ], [ %176, %325 ], [ %176, %295 ], [ %176, %319 ], [ %176, %314 ], [ %140, %316 ], [ %176, %312 ], [ %176, %274 ], [ %176, %270 ], [ %279, %278 ], [ %323, %321 ], [ %346, %333 ]
  %351 = phi i32 [ %138, %210 ], [ %138, %249 ], [ %138, %246 ], [ %138, %258 ], [ %138, %255 ], [ %138, %324 ], [ %138, %325 ], [ %138, %295 ], [ %306, %319 ], [ %138, %314 ], [ %138, %316 ], [ %138, %312 ], [ %138, %274 ], [ %138, %270 ], [ %138, %278 ], [ %138, %321 ], [ %138, %333 ]
  %352 = phi i32 [ %137, %210 ], [ %137, %249 ], [ %137, %246 ], [ %137, %258 ], [ %137, %255 ], [ %137, %324 ], [ %137, %325 ], [ %137, %295 ], [ %137, %319 ], [ %137, %314 ], [ %137, %316 ], [ %306, %312 ], [ %137, %274 ], [ %137, %270 ], [ %137, %278 ], [ %137, %321 ], [ %137, %333 ]
  %353 = load i64, i64* %56, align 8
  %354 = load i64, i64* %22, align 8
  %355 = add i64 %353, -1
  %356 = add i64 %355, %354
  %357 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %54, align 8
  %358 = lshr i64 %356, 10
  %359 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %357, i64 %358
  %360 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %359, align 8
  %361 = and i64 %356, 1023
  %362 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %360, i64 %361, i32 0
  %363 = load i32, i32* %362, align 4
  %364 = sext i32 %350 to i64
  %365 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  %366 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %365, i64 %364, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %363, %350
  %369 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %357 to i64
  br i1 %368, label %370, label %378

370:                                              ; preds = %347
  %371 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %375, label %373

373:                                              ; preds = %370
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i32 %350) #5
  %374 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  br label %375

375:                                              ; preds = %373, %370
  %376 = phi %"class.v8::internal::compiler::RpoNumber"* [ %365, %370 ], [ %374, %373 ]
  %377 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %376, i64 %364, i32 0
  br label %443

378:                                              ; preds = %347
  %379 = icmp eq i32 %367, -1
  br i1 %379, label %380, label %425

380:                                              ; preds = %378
  %381 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %387, label %383

383:                                              ; preds = %380
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i32 %363, i32 %350) #5
  %384 = load i64, i64* %22, align 8
  %385 = load i64, i64* %56, align 8
  %386 = load i64, i64* %55, align 8
  br label %387

387:                                              ; preds = %383, %380
  %388 = phi i64 [ %369, %380 ], [ %386, %383 ]
  %389 = phi i64 [ %353, %380 ], [ %385, %383 ]
  %390 = phi i64 [ %354, %380 ], [ %384, %383 ]
  %391 = load i64, i64* %53, align 8
  %392 = sub i64 %391, %388
  %393 = icmp eq i64 %392, 0
  %394 = shl i64 %392, 7
  %395 = add i64 %394, -1
  %396 = select i1 %393, i64 0, i64 %395
  %397 = add i64 %390, %389
  %398 = icmp eq i64 %396, %397
  %399 = inttoptr i64 %388 to %"class.v8::internal::compiler::RpoNumber"**
  %400 = inttoptr i64 %391 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %398, label %401, label %407

401:                                              ; preds = %387
  call void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.728"* nonnull %57) #5
  %402 = load i64, i64* %56, align 8
  %403 = load i64, i64* %22, align 8
  %404 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %54, align 8
  %405 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %52, align 8
  %406 = add i64 %403, %402
  br label %407

407:                                              ; preds = %401, %387
  %408 = phi i64 [ %406, %401 ], [ %397, %387 ]
  %409 = phi %"class.v8::internal::compiler::RpoNumber"** [ %405, %401 ], [ %400, %387 ]
  %410 = phi %"class.v8::internal::compiler::RpoNumber"** [ %404, %401 ], [ %399, %387 ]
  %411 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %409, %410
  br i1 %411, label %418, label %412

412:                                              ; preds = %407
  %413 = lshr i64 %408, 10
  %414 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %410, i64 %413
  %415 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %414, align 8
  %416 = and i64 %408, 1023
  %417 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %415, i64 %416
  br label %418

418:                                              ; preds = %412, %407
  %419 = phi %"class.v8::internal::compiler::RpoNumber"* [ %417, %412 ], [ null, %407 ]
  %420 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %419, i64 0, i32 0
  store i32 %350, i32* %420, align 4
  %421 = load i64, i64* %56, align 8
  %422 = add i64 %421, 1
  store i64 %422, i64* %56, align 8
  %423 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  %424 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %423, i64 %364, i32 0
  store i32 -2, i32* %424, align 4
  br label %480

425:                                              ; preds = %378
  %426 = icmp eq i32 %367, -2
  %427 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %428 = icmp ne i8 %427, 0
  br i1 %426, label %429, label %436

429:                                              ; preds = %425
  br i1 %428, label %430, label %432

430:                                              ; preds = %429
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i32 %363, i32 %350) #5
  %431 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  br label %432

432:                                              ; preds = %430, %429
  %433 = phi %"class.v8::internal::compiler::RpoNumber"* [ %431, %430 ], [ %365, %429 ]
  %434 = sext i32 %363 to i64
  %435 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %433, i64 %434, i32 0
  br label %443

436:                                              ; preds = %425
  br i1 %428, label %437, label %439

437:                                              ; preds = %436
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i32 %363, i32 %350) #5
  %438 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %51, align 8
  br label %439

439:                                              ; preds = %437, %436
  %440 = phi %"class.v8::internal::compiler::RpoNumber"* [ %438, %437 ], [ %365, %436 ]
  %441 = sext i32 %363 to i64
  %442 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %440, i64 %441, i32 0
  br label %443

443:                                              ; preds = %439, %432, %375
  %444 = phi i32* [ %442, %439 ], [ %435, %432 ], [ %377, %375 ]
  %445 = phi i32 [ %367, %439 ], [ %350, %432 ], [ %350, %375 ]
  %446 = phi i8 [ 1, %439 ], [ 1, %432 ], [ %139, %375 ]
  store i32 %445, i32* %444, align 4
  %447 = load i64, i64* %56, align 8
  %448 = load i64, i64* %22, align 8
  %449 = add i64 %447, -1
  store i64 %449, i64* %56, align 8
  %450 = load i64, i64* %53, align 8
  %451 = load i64, i64* %55, align 8
  %452 = sub i64 %450, %451
  %453 = icmp eq i64 %452, 0
  %454 = shl i64 %452, 7
  %455 = add i64 %454, -1
  %456 = select i1 %453, i64 0, i64 %455
  %457 = sub i64 1, %447
  %458 = sub i64 %457, %448
  %459 = add i64 %458, %456
  %460 = icmp ult i64 %459, 2048
  %461 = inttoptr i64 %450 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %460, label %480, label %462

462:                                              ; preds = %443
  %463 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %461, i64 -1
  %464 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %463, align 8
  %465 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %60, align 8
  %466 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %465, null
  br i1 %466, label %471, label %467

467:                                              ; preds = %462
  %468 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %465, i64 0, i32 1
  %469 = load i64, i64* %468, align 8
  %470 = icmp ugt i64 %469, 1024
  br i1 %470, label %477, label %471

471:                                              ; preds = %467, %462
  %472 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %464, i64 2
  %473 = bitcast %"class.v8::internal::compiler::RpoNumber"* %472 to i64*
  store i64 1024, i64* %473, align 8
  %474 = load i64, i64* %61, align 8
  %475 = bitcast %"class.v8::internal::compiler::RpoNumber"* %464 to i64*
  store i64 %474, i64* %475, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %464, %"class.v8::internal::compiler::RpoNumber"** %62, align 8
  %476 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %52, align 8
  br label %477

477:                                              ; preds = %471, %467
  %478 = phi %"class.v8::internal::compiler::RpoNumber"** [ %461, %467 ], [ %476, %471 ]
  %479 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %478, i64 -1
  store %"class.v8::internal::compiler::RpoNumber"** %479, %"class.v8::internal::compiler::RpoNumber"*** %52, align 8
  br label %480

480:                                              ; preds = %418, %443, %477
  %481 = phi i8 [ %446, %443 ], [ %446, %477 ], [ %139, %418 ]
  %482 = load i64, i64* %56, align 8
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %484, label %135

484:                                              ; preds = %480, %132
  %485 = phi i32 [ %84, %132 ], [ %348, %480 ]
  %486 = phi i32 [ %83, %132 ], [ %349, %480 ]
  %487 = phi i8 [ %82, %132 ], [ %481, %480 ]
  %488 = phi i32 [ %81, %132 ], [ %351, %480 ]
  %489 = phi i32 [ %80, %132 ], [ %352, %480 ]
  %490 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %85, i64 1
  %491 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %490, %48
  br i1 %491, label %63, label %79

492:                                              ; preds = %522, %77
  %493 = phi i64 [ %72, %77 ], [ %517, %522 ]
  %494 = phi i8 [ 1, %77 ], [ %523, %522 ]
  %495 = phi i64 [ 0, %77 ], [ %515, %522 ]
  %496 = inttoptr i64 %493 to %"class.v8::internal::compiler::RpoNumber"*
  %497 = icmp eq i8 %494, 0
  br i1 %497, label %502, label %498

498:                                              ; preds = %492
  %499 = trunc i64 %495 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 %499) #5
  %500 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %78, align 8
  %501 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  br label %502

502:                                              ; preds = %492, %498
  %503 = phi i8 [ 0, %492 ], [ %501, %498 ]
  %504 = phi %"class.v8::internal::compiler::RpoNumber"* [ %496, %492 ], [ %500, %498 ]
  %505 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %504, i64 %495, i32 0
  %506 = load i32, i32* %505, align 4
  %507 = zext i32 %506 to i64
  %508 = icmp eq i64 %495, %507
  %509 = icmp ne i8 %503, 0
  br i1 %508, label %512, label %510

510:                                              ; preds = %502
  br i1 %509, label %511, label %514

511:                                              ; preds = %510
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %506) #5
  br label %514

512:                                              ; preds = %502
  br i1 %509, label %513, label %514

513:                                              ; preds = %512
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #5
  br label %514

514:                                              ; preds = %512, %513, %510, %511
  %515 = add nuw nsw i64 %495, 1
  %516 = load i64, i64* %69, align 8
  %517 = load i64, i64* %71, align 8
  %518 = sub i64 %516, %517
  %519 = shl i64 %518, 30
  %520 = ashr i64 %519, 32
  %521 = icmp slt i64 %515, %520
  br i1 %521, label %522, label %524

522:                                              ; preds = %514
  %523 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  br label %492

524:                                              ; preds = %514, %67, %63
  %525 = icmp ne i8 %64, 0
  %526 = getelementptr inbounds %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneStack"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.729"* nonnull %526) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #5
  ret i1 %525
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2v88internal8compiler11Instruction17AreMovesRedundantEv(%"class.v8::internal::compiler::Instruction"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal8compiler19InstructionSequence8InputRpoEPNS1_11InstructionEm(%"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::Instruction"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13JumpThreading15ApplyForwardingEPNS0_4ZoneERKNS0_10ZoneVectorINS1_9RpoNumberEEEPNS1_19InstructionSequenceE(%"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector"* nocapture readonly dereferenceable(32), %"class.v8::internal::compiler::InstructionSequence"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.v8::internal::ZoneAllocator.752", align 8
  %6 = alloca %"class.v8::internal::ZoneVector.739", align 8
  %7 = load i8, i8* @_ZN2v88internal13FLAG_turbo_jtE, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %262, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.v8::internal::ZoneVector.739"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.v8::internal::compiler::RpoNumber"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = shl i64 %16, 30
  %18 = ashr exact i64 %17, 32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 0, i8* %4, align 1
  %19 = getelementptr inbounds %"class.v8::internal::ZoneVector.739", %"class.v8::internal::ZoneVector.739"* %6, i64 0, i32 0
  %20 = bitcast %"class.v8::internal::ZoneAllocator.752"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  %21 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.752", %"class.v8::internal::ZoneAllocator.752"* %5, i64 0, i32 0
  store %"class.v8::internal::Zone"* %0, %"class.v8::internal::Zone"** %21, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.740"* nonnull %19, i64 %18, i8* nonnull dereferenceable(1) %4, %"class.v8::internal::ZoneAllocator.752"* nonnull dereferenceable(8) %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 2
  %23 = load %"class.v8::internal::ZoneVector.617"*, %"class.v8::internal::ZoneVector.617"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ZoneVector.617", %"class.v8::internal::ZoneVector.617"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ZoneVector.617", %"class.v8::internal::ZoneVector.617"* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %26, align 8
  %28 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %25, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::ZoneVector.739", %"class.v8::internal::ZoneVector.739"* %6, i64 0, i32 0, i32 0
  %32 = bitcast %"class.v8::internal::ZoneVector.617"** %22 to %"class.std::__1::vector.618"**
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 8, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  br label %45

35:                                               ; preds = %109, %9
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 7, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 7, i32 0, i32 0, i32 1
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %39, %41
  br i1 %42, label %173, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  br label %194

45:                                               ; preds = %29, %109
  %46 = phi i1 [ true, %29 ], [ %112, %109 ]
  %47 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %25, %29 ], [ %113, %109 ]
  %48 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %48, i64 0, i32 4, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %30, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %52, i64 %51, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp ne i32 %54, %50
  %56 = xor i1 %46, true
  %57 = and i1 %55, %56
  %58 = load i64*, i64** %31, align 8
  %59 = lshr i64 %51, 6
  %60 = getelementptr inbounds i64, i64* %58, i64 %59
  %61 = and i64 %51, 63
  %62 = shl i64 1, %61
  br i1 %57, label %63, label %66

63:                                               ; preds = %45
  %64 = load i64, i64* %60, align 8
  %65 = or i64 %64, %62
  br label %70

66:                                               ; preds = %45
  %67 = xor i64 %62, -1
  %68 = load i64, i64* %60, align 8
  %69 = and i64 %68, %67
  br label %70

70:                                               ; preds = %63, %66
  %71 = phi i64 [ %69, %66 ], [ %65, %63 ]
  store i64 %71, i64* %60, align 8
  %72 = icmp eq i32 %54, %50
  br i1 %72, label %101, label %73

73:                                               ; preds = %70
  %74 = load %"class.std::__1::vector.618"*, %"class.std::__1::vector.618"** %32, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.618", %"class.std::__1::vector.618"* %74, i64 0, i32 0, i32 1
  %76 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.std::__1::vector.618"* %74 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = ashr exact i64 %80, 3
  %82 = icmp ugt i64 %81, %51
  br i1 %82, label %85, label %83

83:                                               ; preds = %73
  %84 = bitcast %"class.std::__1::vector.618"* %74 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %84) #6
  unreachable

85:                                               ; preds = %73
  %86 = inttoptr i64 %79 to %"class.v8::internal::compiler::InstructionBlock"**
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %86, i64 %51
  %88 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %88, i64 0, i32 11
  %90 = load i8, i8* %89, align 1, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %85
  %93 = sext i32 %54 to i64
  %94 = icmp ugt i64 %81, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"class.std::__1::vector.618"* %74 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %96) #6
  unreachable

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %86, i64 %93
  %99 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %99, i64 0, i32 11
  store i8 1, i8* %100, align 1
  br label %101

101:                                              ; preds = %85, %70, %97
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %48, i64 0, i32 8
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %48, i64 0, i32 9
  %105 = load i32, i32* %104, align 8
  %106 = icmp slt i32 %103, %105
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  %108 = sext i32 %103 to i64
  br label %115

109:                                              ; preds = %167, %101
  %110 = phi i8 [ 1, %101 ], [ %169, %167 ]
  %111 = and i8 %110, 1
  %112 = icmp ne i8 %111, 0
  %113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %47, i64 1
  %114 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %113, %27
  br i1 %114, label %35, label %45

115:                                              ; preds = %107, %167
  %116 = phi i32 [ %105, %107 ], [ %168, %167 ]
  %117 = phi i64 [ %108, %107 ], [ %170, %167 ]
  %118 = phi i8 [ 1, %107 ], [ %169, %167 ]
  %119 = load i64, i64* %33, align 8
  %120 = add i64 %119, %117
  %121 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %34, align 8
  %122 = lshr i64 %120, 9
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %121, i64 %122
  %124 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %123, align 8
  %125 = and i64 %120, 511
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %124, i64 %125
  %127 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = lshr i32 %129, 14
  %131 = and i32 %130, 7
  %132 = add nsw i32 %131, -1
  %133 = icmp ult i32 %132, 2
  br i1 %133, label %167, label %134

134:                                              ; preds = %115
  %135 = and i32 %129, 511
  switch i32 %135, label %167 [
    i32 12, label %136
    i32 21, label %136
  ]

136:                                              ; preds = %134, %134
  %137 = load i64*, i64** %31, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 %59
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %62
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %167, label %142

142:                                              ; preds = %136
  %143 = load i8, i8* @_ZN2v88internal19FLAG_trace_turbo_jtE, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = trunc i64 %117 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i32 %146) #5
  br label %147

147:                                              ; preds = %142, %145
  store i32 15, i32* %128, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %127, i64 0, i32 1
  store i32 0, i32* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %127, i64 0, i32 3
  store %"class.v8::internal::compiler::ReferenceMap"* null, %"class.v8::internal::compiler::ReferenceMap"** %149, align 8
  %150 = load %"class.std::__1::vector.618"*, %"class.std::__1::vector.618"** %32, align 8
  %151 = getelementptr inbounds %"class.std::__1::vector.618", %"class.std::__1::vector.618"* %150, i64 0, i32 0, i32 1
  %152 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.std::__1::vector.618"* %150 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %153, %155
  %157 = ashr exact i64 %156, 3
  %158 = icmp ugt i64 %157, %51
  br i1 %158, label %161, label %159

159:                                              ; preds = %147
  %160 = bitcast %"class.std::__1::vector.618"* %150 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %160) #6
  unreachable

161:                                              ; preds = %147
  %162 = inttoptr i64 %155 to %"class.v8::internal::compiler::InstructionBlock"**
  %163 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %162, i64 %51
  %164 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %164, i64 0, i32 11
  store i8 0, i8* %165, align 1
  %166 = load i32, i32* %104, align 8
  br label %167

167:                                              ; preds = %136, %134, %161, %115
  %168 = phi i32 [ %116, %115 ], [ %166, %161 ], [ %116, %136 ], [ %116, %134 ]
  %169 = phi i8 [ 0, %115 ], [ 0, %161 ], [ 0, %136 ], [ %118, %134 ]
  %170 = add nsw i64 %117, 1
  %171 = sext i32 %168 to i64
  %172 = icmp slt i64 %170, %171
  br i1 %172, label %115, label %109

173:                                              ; preds = %211, %35
  %174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %2, i64 0, i32 3
  %175 = load %"class.v8::internal::ZoneVector.617"*, %"class.v8::internal::ZoneVector.617"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::ZoneVector.617", %"class.v8::internal::ZoneVector.617"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::ZoneVector.617", %"class.v8::internal::ZoneVector.617"* %175, i64 0, i32 0, i32 0, i32 1
  %179 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %178, align 8
  %180 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %177, %179
  br i1 %180, label %225, label %181

181:                                              ; preds = %173
  %182 = ptrtoint %"class.v8::internal::compiler::InstructionBlock"** %177 to i64
  %183 = getelementptr inbounds %"class.v8::internal::ZoneVector.739", %"class.v8::internal::ZoneVector.739"* %6, i64 0, i32 0, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = getelementptr %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %179, i64 -1
  %186 = ptrtoint %"class.v8::internal::compiler::InstructionBlock"** %185 to i64
  %187 = sub i64 %186, %182
  %188 = lshr i64 %187, 3
  %189 = add nuw nsw i64 %188, 1
  %190 = and i64 %189, 1
  %191 = icmp eq i64 %188, 0
  br i1 %191, label %218, label %192

192:                                              ; preds = %181
  %193 = sub nuw nsw i64 %189, %190
  br label %226

194:                                              ; preds = %43, %211
  %195 = phi i64 [ %41, %43 ], [ %212, %211 ]
  %196 = phi i64 [ %39, %43 ], [ %213, %211 ]
  %197 = phi i64 [ 0, %43 ], [ %214, %211 ]
  %198 = inttoptr i64 %195 to %"class.v8::internal::compiler::RpoNumber"*
  %199 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %198, i64 %197, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp sgt i32 %200, -1
  br i1 %201, label %202, label %211

202:                                              ; preds = %194
  %203 = sext i32 %200 to i64
  %204 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %44, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %204, i64 %203, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, %200
  br i1 %207, label %211, label %208

208:                                              ; preds = %202
  store i32 %206, i32* %199, align 4
  %209 = load i64, i64* %38, align 8
  %210 = load i64, i64* %40, align 8
  br label %211

211:                                              ; preds = %202, %208, %194
  %212 = phi i64 [ %195, %202 ], [ %210, %208 ], [ %195, %194 ]
  %213 = phi i64 [ %196, %202 ], [ %209, %208 ], [ %196, %194 ]
  %214 = add nuw i64 %197, 1
  %215 = sub i64 %213, %212
  %216 = ashr exact i64 %215, 2
  %217 = icmp ult i64 %214, %216
  br i1 %217, label %194, label %173

218:                                              ; preds = %226, %181
  %219 = phi i32 [ 0, %181 ], [ %258, %226 ]
  %220 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %177, %181 ], [ %259, %226 ]
  %221 = icmp eq i64 %190, 0
  br i1 %221, label %225, label %222

222:                                              ; preds = %218
  %223 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %220, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %223, i64 0, i32 3, i32 0
  store i32 %219, i32* %224, align 8
  br label %225

225:                                              ; preds = %222, %218, %173
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #5
  br label %262

226:                                              ; preds = %226, %192
  %227 = phi i32 [ 0, %192 ], [ %258, %226 ]
  %228 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %177, %192 ], [ %259, %226 ]
  %229 = phi i64 [ %193, %192 ], [ %260, %226 ]
  %230 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %228, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %230, i64 0, i32 3, i32 0
  store i32 %227, i32* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %230, i64 0, i32 4, i32 0
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = lshr i64 %234, 6
  %236 = getelementptr inbounds i64, i64* %184, i64 %235
  %237 = and i64 %234, 63
  %238 = shl i64 1, %237
  %239 = load i64, i64* %236, align 8
  %240 = and i64 %238, %239
  %241 = icmp eq i64 %240, 0
  %242 = zext i1 %241 to i32
  %243 = add nuw nsw i32 %227, %242
  %244 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %228, i64 1
  %245 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %244, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %245, i64 0, i32 3, i32 0
  store i32 %243, i32* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %245, i64 0, i32 4, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = sext i32 %248 to i64
  %250 = lshr i64 %249, 6
  %251 = getelementptr inbounds i64, i64* %184, i64 %250
  %252 = and i64 %249, 63
  %253 = shl i64 1, %252
  %254 = load i64, i64* %251, align 8
  %255 = and i64 %253, %254
  %256 = icmp eq i64 %255, 0
  %257 = zext i1 %256 to i32
  %258 = add nuw nsw i32 %243, %257
  %259 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %228, i64 2
  %260 = add i64 %229, -2
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %218, label %226

262:                                              ; preds = %3, %225
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler9RpoNumberENS2_13ZoneAllocatorIS4_EEE6assignEmRKS4_(%"class.std::__1::vector"*, i64, %"class.v8::internal::compiler::RpoNumber"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"class.v8::internal::compiler::RpoNumber"*
  %13 = inttoptr i64 %8 to i8*
  br i1 %11, label %255, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::compiler::RpoNumber"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %8
  %19 = ashr exact i64 %18, 2
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %21 = icmp ult i64 %19, %1
  %22 = select i1 %21, i64 %19, i64 %1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %127, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %2, i64 0, i32 0
  %26 = icmp ult i64 %22, 8
  br i1 %26, label %85, label %27

27:                                               ; preds = %24
  %28 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 %22
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"* %2 to i8*
  %30 = getelementptr i8, i8* %29, i64 1
  %31 = icmp ugt i8* %30, %13
  %32 = icmp ugt %"class.v8::internal::compiler::RpoNumber"* %28, %2
  %33 = and i1 %31, %32
  br i1 %33, label %85, label %34

34:                                               ; preds = %27
  %35 = and i64 %22, -8
  %36 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 %35
  %37 = sub i64 %22, %35
  %38 = add i64 %35, -8
  %39 = lshr exact i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %38, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %34
  %44 = sub nuw nsw i64 %40, %41
  %45 = load i32, i32* %25, align 4, !alias.scope !4
  %46 = insertelement <4 x i32> undef, i32 %45, i32 0
  %47 = shufflevector <4 x i32> %46, <4 x i32> undef, <4 x i32> zeroinitializer
  %48 = insertelement <4 x i32> undef, i32 %45, i32 0
  %49 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> zeroinitializer
  %50 = load i32, i32* %25, align 4, !alias.scope !4
  %51 = insertelement <4 x i32> undef, i32 %50, i32 0
  %52 = shufflevector <4 x i32> %51, <4 x i32> undef, <4 x i32> zeroinitializer
  %53 = insertelement <4 x i32> undef, i32 %50, i32 0
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %55

55:                                               ; preds = %55, %43
  %56 = phi i64 [ 0, %43 ], [ %67, %55 ]
  %57 = phi i64 [ %44, %43 ], [ %68, %55 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 %56, i32 0
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %59, align 4, !alias.scope !7, !noalias !4
  %60 = getelementptr i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %49, <4 x i32>* %61, align 4, !alias.scope !7, !noalias !4
  %62 = or i64 %56, 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 %62, i32 0
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %64, align 4, !alias.scope !7, !noalias !4
  %65 = getelementptr i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %54, <4 x i32>* %66, align 4, !alias.scope !7, !noalias !4
  %67 = add i64 %56, 16
  %68 = add i64 %57, -2
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %55, !llvm.loop !9

70:                                               ; preds = %55, %34
  %71 = phi i64 [ 0, %34 ], [ %67, %55 ]
  %72 = icmp eq i64 %41, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 %71, i32 0
  %75 = load i32, i32* %25, align 4, !alias.scope !4
  %76 = insertelement <4 x i32> undef, i32 %75, i32 0
  %77 = shufflevector <4 x i32> %76, <4 x i32> undef, <4 x i32> zeroinitializer
  %78 = insertelement <4 x i32> undef, i32 %75, i32 0
  %79 = shufflevector <4 x i32> %78, <4 x i32> undef, <4 x i32> zeroinitializer
  %80 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> %77, <4 x i32>* %80, align 4, !alias.scope !7, !noalias !4
  %81 = getelementptr i32, i32* %74, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> %79, <4 x i32>* %82, align 4, !alias.scope !7, !noalias !4
  br label %83

83:                                               ; preds = %70, %73
  %84 = icmp eq i64 %22, %35
  br i1 %84, label %127, label %85

85:                                               ; preds = %83, %27, %24
  %86 = phi %"class.v8::internal::compiler::RpoNumber"* [ %12, %27 ], [ %12, %24 ], [ %36, %83 ]
  %87 = phi i64 [ %22, %27 ], [ %22, %24 ], [ %37, %83 ]
  %88 = add i64 %87, -1
  %89 = and i64 %87, 7
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %101, label %91

91:                                               ; preds = %85, %91
  %92 = phi %"class.v8::internal::compiler::RpoNumber"* [ %97, %91 ], [ %86, %85 ]
  %93 = phi i64 [ %98, %91 ], [ %87, %85 ]
  %94 = phi i64 [ %99, %91 ], [ %89, %85 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %92, i64 0, i32 0
  %96 = load i32, i32* %25, align 4
  store i32 %96, i32* %95, align 4
  %97 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %92, i64 1
  %98 = add i64 %93, -1
  %99 = add i64 %94, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %91, !llvm.loop !11

101:                                              ; preds = %91, %85
  %102 = phi %"class.v8::internal::compiler::RpoNumber"* [ %86, %85 ], [ %97, %91 ]
  %103 = phi i64 [ %87, %85 ], [ %98, %91 ]
  %104 = icmp ult i64 %88, 7
  br i1 %104, label %127, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"class.v8::internal::compiler::RpoNumber"* [ %124, %105 ], [ %102, %101 ]
  %107 = phi i64 [ %125, %105 ], [ %103, %101 ]
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 0, i32 0
  %109 = load i32, i32* %25, align 4
  store i32 %109, i32* %108, align 4
  %110 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 1, i32 0
  %111 = load i32, i32* %25, align 4
  store i32 %111, i32* %110, align 4
  %112 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 2, i32 0
  %113 = load i32, i32* %25, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 3, i32 0
  %115 = load i32, i32* %25, align 4
  store i32 %115, i32* %114, align 4
  %116 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 4, i32 0
  %117 = load i32, i32* %25, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 5, i32 0
  %119 = load i32, i32* %25, align 4
  store i32 %119, i32* %118, align 4
  %120 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 6, i32 0
  %121 = load i32, i32* %25, align 4
  store i32 %121, i32* %120, align 4
  %122 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 7, i32 0
  %123 = load i32, i32* %25, align 4
  store i32 %123, i32* %122, align 4
  %124 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %106, i64 8
  %125 = add i64 %107, -8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %105, !llvm.loop !13

127:                                              ; preds = %101, %105, %83, %14
  br i1 %21, label %128, label %252

128:                                              ; preds = %127
  %129 = sub i64 %1, %19
  %130 = load i64, i64* %16, align 8
  %131 = inttoptr i64 %130 to %"class.v8::internal::compiler::RpoNumber"*
  %132 = inttoptr i64 %130 to i8*
  %133 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %129
  %134 = icmp eq i64 %129, 0
  br i1 %134, label %250, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %2, i64 0, i32 0
  %137 = shl i64 %1, 2
  %138 = add i64 %137, -4
  %139 = sub i64 %138, %18
  %140 = lshr i64 %139, 2
  %141 = add nuw nsw i64 %140, 1
  %142 = icmp ult i64 %141, 8
  br i1 %142, label %143, label %166

143:                                              ; preds = %226, %166, %135
  %144 = phi %"class.v8::internal::compiler::RpoNumber"* [ %131, %166 ], [ %131, %135 ], [ %180, %226 ]
  %145 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %144 to i64
  %146 = xor i64 %19, -1
  %147 = add i64 %146, %1
  %148 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %147, i32 0
  %149 = ptrtoint i32* %148 to i64
  %150 = sub i64 %149, %145
  %151 = lshr i64 %150, 2
  %152 = add nuw nsw i64 %151, 1
  %153 = and i64 %152, 7
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %143, %155
  %156 = phi %"class.v8::internal::compiler::RpoNumber"* [ %160, %155 ], [ %144, %143 ]
  %157 = phi i64 [ %161, %155 ], [ %153, %143 ]
  %158 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %156, i64 0, i32 0
  %159 = load i32, i32* %136, align 4
  store i32 %159, i32* %158, align 4
  %160 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %156, i64 1
  %161 = add i64 %157, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %155, !llvm.loop !14

163:                                              ; preds = %155, %143
  %164 = phi %"class.v8::internal::compiler::RpoNumber"* [ %144, %143 ], [ %160, %155 ]
  %165 = icmp ult i64 %150, 28
  br i1 %165, label %228, label %230

166:                                              ; preds = %135
  %167 = shl i64 %1, 2
  %168 = add i64 %167, -4
  %169 = sub i64 %168, %18
  %170 = lshr i64 %169, 2
  %171 = add nuw nsw i64 %170, 1
  %172 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %171
  %173 = bitcast %"class.v8::internal::compiler::RpoNumber"* %2 to i8*
  %174 = getelementptr i8, i8* %173, i64 1
  %175 = icmp ugt i8* %174, %132
  %176 = icmp ugt %"class.v8::internal::compiler::RpoNumber"* %172, %2
  %177 = and i1 %175, %176
  br i1 %177, label %143, label %178

178:                                              ; preds = %166
  %179 = and i64 %141, 9223372036854775800
  %180 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %179
  %181 = add nsw i64 %179, -8
  %182 = lshr exact i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 1
  %185 = icmp eq i64 %181, 0
  br i1 %185, label %213, label %186

186:                                              ; preds = %178
  %187 = sub nuw nsw i64 %183, %184
  %188 = load i32, i32* %136, align 4, !alias.scope !15
  %189 = insertelement <4 x i32> undef, i32 %188, i32 0
  %190 = shufflevector <4 x i32> %189, <4 x i32> undef, <4 x i32> zeroinitializer
  %191 = insertelement <4 x i32> undef, i32 %188, i32 0
  %192 = shufflevector <4 x i32> %191, <4 x i32> undef, <4 x i32> zeroinitializer
  %193 = load i32, i32* %136, align 4, !alias.scope !15
  %194 = insertelement <4 x i32> undef, i32 %193, i32 0
  %195 = shufflevector <4 x i32> %194, <4 x i32> undef, <4 x i32> zeroinitializer
  %196 = insertelement <4 x i32> undef, i32 %193, i32 0
  %197 = shufflevector <4 x i32> %196, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %198

198:                                              ; preds = %198, %186
  %199 = phi i64 [ 0, %186 ], [ %210, %198 ]
  %200 = phi i64 [ %187, %186 ], [ %211, %198 ]
  %201 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %199, i32 0
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %190, <4 x i32>* %202, align 4, !alias.scope !18, !noalias !15
  %203 = getelementptr i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %192, <4 x i32>* %204, align 4, !alias.scope !18, !noalias !15
  %205 = or i64 %199, 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %205, i32 0
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %195, <4 x i32>* %207, align 4, !alias.scope !18, !noalias !15
  %208 = getelementptr i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %197, <4 x i32>* %209, align 4, !alias.scope !18, !noalias !15
  %210 = add i64 %199, 16
  %211 = add i64 %200, -2
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %198, !llvm.loop !20

213:                                              ; preds = %198, %178
  %214 = phi i64 [ 0, %178 ], [ %210, %198 ]
  %215 = icmp eq i64 %184, 0
  br i1 %215, label %226, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %131, i64 %214, i32 0
  %218 = load i32, i32* %136, align 4, !alias.scope !15
  %219 = insertelement <4 x i32> undef, i32 %218, i32 0
  %220 = shufflevector <4 x i32> %219, <4 x i32> undef, <4 x i32> zeroinitializer
  %221 = insertelement <4 x i32> undef, i32 %218, i32 0
  %222 = shufflevector <4 x i32> %221, <4 x i32> undef, <4 x i32> zeroinitializer
  %223 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %220, <4 x i32>* %223, align 4, !alias.scope !18, !noalias !15
  %224 = getelementptr i32, i32* %217, i64 4
  %225 = bitcast i32* %224 to <4 x i32>*
  store <4 x i32> %222, <4 x i32>* %225, align 4, !alias.scope !18, !noalias !15
  br label %226

226:                                              ; preds = %213, %216
  %227 = icmp eq i64 %141, %179
  br i1 %227, label %228, label %143

228:                                              ; preds = %163, %230, %226
  %229 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %133 to i64
  br label %250

230:                                              ; preds = %163, %230
  %231 = phi %"class.v8::internal::compiler::RpoNumber"* [ %248, %230 ], [ %164, %163 ]
  %232 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 0, i32 0
  %233 = load i32, i32* %136, align 4
  store i32 %233, i32* %232, align 4
  %234 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 1, i32 0
  %235 = load i32, i32* %136, align 4
  store i32 %235, i32* %234, align 4
  %236 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 2, i32 0
  %237 = load i32, i32* %136, align 4
  store i32 %237, i32* %236, align 4
  %238 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 3, i32 0
  %239 = load i32, i32* %136, align 4
  store i32 %239, i32* %238, align 4
  %240 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 4, i32 0
  %241 = load i32, i32* %136, align 4
  store i32 %241, i32* %240, align 4
  %242 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 5, i32 0
  %243 = load i32, i32* %136, align 4
  store i32 %243, i32* %242, align 4
  %244 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 6, i32 0
  %245 = load i32, i32* %136, align 4
  store i32 %245, i32* %244, align 4
  %246 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 7, i32 0
  %247 = load i32, i32* %136, align 4
  store i32 %247, i32* %246, align 4
  %248 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %231, i64 8
  %249 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %248, %133
  br i1 %249, label %228, label %230, !llvm.loop !21

250:                                              ; preds = %128, %228
  %251 = phi i64 [ %229, %228 ], [ %130, %128 ]
  store i64 %251, i64* %16, align 8
  br label %411

252:                                              ; preds = %127
  %253 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %20, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %253, i64 %1
  store %"class.v8::internal::compiler::RpoNumber"* %254, %"class.v8::internal::compiler::RpoNumber"** %15, align 8
  br label %411

255:                                              ; preds = %3
  %256 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %257 = icmp eq i64 %8, 0
  br i1 %257, label %260, label %258

258:                                              ; preds = %255
  %259 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 24, i1 false) #5
  br label %260

260:                                              ; preds = %255, %258
  %261 = phi i64 [ %6, %255 ], [ 0, %258 ]
  %262 = icmp ugt i64 %1, 536870911
  br i1 %262, label %263, label %265

263:                                              ; preds = %260
  %264 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %264) #6
  unreachable

265:                                              ; preds = %260
  %266 = ashr exact i64 %261, 2
  %267 = icmp ult i64 %266, 268435455
  br i1 %267, label %268, label %275

268:                                              ; preds = %265
  %269 = ashr exact i64 %261, 1
  %270 = icmp ult i64 %269, %1
  br i1 %270, label %275, label %271

271:                                              ; preds = %268
  %272 = icmp ugt i64 %269, 536870911
  br i1 %272, label %273, label %275

273:                                              ; preds = %271
  %274 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %274) #6
  unreachable

275:                                              ; preds = %268, %265, %271
  %276 = phi i64 [ %269, %271 ], [ 536870911, %265 ], [ %1, %268 ]
  %277 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %278 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %277, align 8
  %279 = shl i64 %276, 2
  %280 = add nuw nsw i64 %279, 7
  %281 = and i64 %280, -8
  %282 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %278, i64 0, i32 2
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %278, i64 0, i32 3
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %285, %283
  %287 = icmp ugt i64 %281, %286
  br i1 %287, label %288, label %290, !prof !3

288:                                              ; preds = %275
  %289 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %278, i64 %281) #5
  br label %292

290:                                              ; preds = %275
  %291 = add i64 %281, %283
  store i64 %291, i64* %282, align 8
  br label %292

292:                                              ; preds = %290, %288
  %293 = phi i64 [ %289, %288 ], [ %283, %290 ]
  %294 = inttoptr i64 %293 to %"class.v8::internal::compiler::RpoNumber"*
  %295 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::RpoNumber"* %294, %"class.v8::internal::compiler::RpoNumber"** %295, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %294, %"class.v8::internal::compiler::RpoNumber"** %256, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %276
  store %"class.v8::internal::compiler::RpoNumber"* %296, %"class.v8::internal::compiler::RpoNumber"** %4, align 8
  %297 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %1
  %298 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %2, i64 0, i32 0
  %299 = shl nsw i64 %1, 2
  %300 = add i64 %299, -4
  %301 = lshr exact i64 %300, 2
  %302 = add nuw nsw i64 %301, 1
  %303 = icmp ult i64 %302, 8
  br i1 %303, label %366, label %304

304:                                              ; preds = %292
  %305 = inttoptr i64 %293 to i8*
  %306 = shl nsw i64 %1, 2
  %307 = add i64 %306, -4
  %308 = lshr exact i64 %307, 2
  %309 = add nuw nsw i64 %308, 1
  %310 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %309
  %311 = bitcast %"class.v8::internal::compiler::RpoNumber"* %2 to i8*
  %312 = getelementptr i8, i8* %311, i64 1
  %313 = icmp ugt i8* %312, %305
  %314 = icmp ugt %"class.v8::internal::compiler::RpoNumber"* %310, %2
  %315 = and i1 %313, %314
  br i1 %315, label %366, label %316

316:                                              ; preds = %304
  %317 = and i64 %302, 9223372036854775800
  %318 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %317
  %319 = add nsw i64 %317, -8
  %320 = lshr exact i64 %319, 3
  %321 = add nuw nsw i64 %320, 1
  %322 = and i64 %321, 1
  %323 = icmp eq i64 %319, 0
  br i1 %323, label %351, label %324

324:                                              ; preds = %316
  %325 = sub nuw nsw i64 %321, %322
  %326 = load i32, i32* %298, align 4, !alias.scope !22
  %327 = insertelement <4 x i32> undef, i32 %326, i32 0
  %328 = shufflevector <4 x i32> %327, <4 x i32> undef, <4 x i32> zeroinitializer
  %329 = insertelement <4 x i32> undef, i32 %326, i32 0
  %330 = shufflevector <4 x i32> %329, <4 x i32> undef, <4 x i32> zeroinitializer
  %331 = load i32, i32* %298, align 4, !alias.scope !22
  %332 = insertelement <4 x i32> undef, i32 %331, i32 0
  %333 = shufflevector <4 x i32> %332, <4 x i32> undef, <4 x i32> zeroinitializer
  %334 = insertelement <4 x i32> undef, i32 %331, i32 0
  %335 = shufflevector <4 x i32> %334, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %336

336:                                              ; preds = %336, %324
  %337 = phi i64 [ 0, %324 ], [ %348, %336 ]
  %338 = phi i64 [ %325, %324 ], [ %349, %336 ]
  %339 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %337, i32 0
  %340 = bitcast i32* %339 to <4 x i32>*
  store <4 x i32> %328, <4 x i32>* %340, align 4, !alias.scope !25, !noalias !22
  %341 = getelementptr i32, i32* %339, i64 4
  %342 = bitcast i32* %341 to <4 x i32>*
  store <4 x i32> %330, <4 x i32>* %342, align 4, !alias.scope !25, !noalias !22
  %343 = or i64 %337, 8
  %344 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %343, i32 0
  %345 = bitcast i32* %344 to <4 x i32>*
  store <4 x i32> %333, <4 x i32>* %345, align 4, !alias.scope !25, !noalias !22
  %346 = getelementptr i32, i32* %344, i64 4
  %347 = bitcast i32* %346 to <4 x i32>*
  store <4 x i32> %335, <4 x i32>* %347, align 4, !alias.scope !25, !noalias !22
  %348 = add i64 %337, 16
  %349 = add i64 %338, -2
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %351, label %336, !llvm.loop !27

351:                                              ; preds = %336, %316
  %352 = phi i64 [ 0, %316 ], [ %348, %336 ]
  %353 = icmp eq i64 %322, 0
  br i1 %353, label %364, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %352, i32 0
  %356 = load i32, i32* %298, align 4, !alias.scope !22
  %357 = insertelement <4 x i32> undef, i32 %356, i32 0
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> zeroinitializer
  %359 = insertelement <4 x i32> undef, i32 %356, i32 0
  %360 = shufflevector <4 x i32> %359, <4 x i32> undef, <4 x i32> zeroinitializer
  %361 = bitcast i32* %355 to <4 x i32>*
  store <4 x i32> %358, <4 x i32>* %361, align 4, !alias.scope !25, !noalias !22
  %362 = getelementptr i32, i32* %355, i64 4
  %363 = bitcast i32* %362 to <4 x i32>*
  store <4 x i32> %360, <4 x i32>* %363, align 4, !alias.scope !25, !noalias !22
  br label %364

364:                                              ; preds = %351, %354
  %365 = icmp eq i64 %302, %317
  br i1 %365, label %408, label %366

366:                                              ; preds = %364, %304, %292
  %367 = phi %"class.v8::internal::compiler::RpoNumber"* [ %294, %304 ], [ %294, %292 ], [ %318, %364 ]
  %368 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %367 to i64
  %369 = add i64 %1, -1
  %370 = getelementptr %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %294, i64 %369, i32 0
  %371 = ptrtoint i32* %370 to i64
  %372 = sub i64 %371, %368
  %373 = lshr i64 %372, 2
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 7
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %366, %377
  %378 = phi %"class.v8::internal::compiler::RpoNumber"* [ %382, %377 ], [ %367, %366 ]
  %379 = phi i64 [ %383, %377 ], [ %375, %366 ]
  %380 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %378, i64 0, i32 0
  %381 = load i32, i32* %298, align 4
  store i32 %381, i32* %380, align 4
  %382 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %378, i64 1
  %383 = add i64 %379, -1
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %377, !llvm.loop !28

385:                                              ; preds = %377, %366
  %386 = phi %"class.v8::internal::compiler::RpoNumber"* [ %367, %366 ], [ %382, %377 ]
  %387 = icmp ult i64 %372, 28
  br i1 %387, label %408, label %388

388:                                              ; preds = %385, %388
  %389 = phi %"class.v8::internal::compiler::RpoNumber"* [ %406, %388 ], [ %386, %385 ]
  %390 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 0, i32 0
  %391 = load i32, i32* %298, align 4
  store i32 %391, i32* %390, align 4
  %392 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 1, i32 0
  %393 = load i32, i32* %298, align 4
  store i32 %393, i32* %392, align 4
  %394 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 2, i32 0
  %395 = load i32, i32* %298, align 4
  store i32 %395, i32* %394, align 4
  %396 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 3, i32 0
  %397 = load i32, i32* %298, align 4
  store i32 %397, i32* %396, align 4
  %398 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 4, i32 0
  %399 = load i32, i32* %298, align 4
  store i32 %399, i32* %398, align 4
  %400 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 5, i32 0
  %401 = load i32, i32* %298, align 4
  store i32 %401, i32* %400, align 4
  %402 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 6, i32 0
  %403 = load i32, i32* %298, align 4
  store i32 %403, i32* %402, align 4
  %404 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 7, i32 0
  %405 = load i32, i32* %298, align 4
  store i32 %405, i32* %404, align 4
  %406 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %389, i64 8
  %407 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %406, %297
  br i1 %407, label %408, label %388, !llvm.loop !29

408:                                              ; preds = %385, %388, %364
  %409 = bitcast %"class.v8::internal::compiler::RpoNumber"** %295 to i64*
  %410 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %297 to i64
  store i64 %410, i64* %409, align 8
  br label %411

411:                                              ; preds = %250, %252, %408
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.728"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %3 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %4 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %5 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.745", align 16
  %7 = alloca %"class.v8::internal::compiler::RpoNumber"*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 1023
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -1024
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::RpoNumber"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::RpoNumber"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::RpoNumber"** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %17, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %21, %"class.v8::internal::compiler::RpoNumber"*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.730"* %15, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.728"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::RpoNumber"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 1024
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45 to %"class.v8::internal::compiler::RpoNumber"*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.738", %"class.v8::internal::RecyclingZoneAllocator.738"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !3

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #5
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::RpoNumber"*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::RpoNumber"* [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::RpoNumber"* %73, %"class.v8::internal::compiler::RpoNumber"** %3, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.730"* %23, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #5
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #5
  %76 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 1024
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77 to %"class.v8::internal::compiler::RpoNumber"*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.738", %"class.v8::internal::RecyclingZoneAllocator.738"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !3

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #5
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::RpoNumber"*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::RpoNumber"* [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::RpoNumber"* %105, %"class.v8::internal::compiler::RpoNumber"** %4, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.730"* %23, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #5
  %106 = bitcast %"class.v8::internal::compiler::RpoNumber"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #5
  %107 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::RpoNumber"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::RpoNumber"** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %107, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %111, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.730"* %23, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #5
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.745"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #5
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::RpoNumber"** null, %"class.v8::internal::compiler::RpoNumber"*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.734"* %117, %"class.v8::internal::RecyclingZoneAllocator.734"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121 to %"class.v8::internal::compiler::RpoNumber"**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.734", %"class.v8::internal::RecyclingZoneAllocator.734"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !3

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #5
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::RpoNumber"**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::RpoNumber"** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::RpoNumber"** %150, %"class.v8::internal::compiler::RpoNumber"*** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::RpoNumber"** %152, %"class.v8::internal::compiler::RpoNumber"*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::RpoNumber"** %152, %"class.v8::internal::compiler::RpoNumber"*** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %150, i64 %116
  store %"class.v8::internal::compiler::RpoNumber"** %155, %"class.v8::internal::compiler::RpoNumber"*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.728", %"class.std::__1::deque.728"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 1024
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157 to %"class.v8::internal::compiler::RpoNumber"*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.738", %"class.v8::internal::RecyclingZoneAllocator.738"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !3

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #5
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::RpoNumber"*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::RpoNumber"* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::RpoNumber"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #5
  store %"class.v8::internal::compiler::RpoNumber"* %185, %"class.v8::internal::compiler::RpoNumber"** %7, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.745"* nonnull %6, %"class.v8::internal::compiler::RpoNumber"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #5
  %187 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %24, align 8
  %188 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::RpoNumber"** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.745"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.745"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.728"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::RpoNumber"**
  %210 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::RpoNumber"**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %209, i64 %217
  store %"class.v8::internal::compiler::RpoNumber"** %218, %"class.v8::internal::compiler::RpoNumber"*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.734"*, %"class.v8::internal::RecyclingZoneAllocator.734"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.734", %"class.v8::internal::RecyclingZoneAllocator.734"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::RpoNumber"** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %227 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %211, %"class.v8::internal::compiler::RpoNumber"*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #5
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::RpoNumber"** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.745"* nonnull %6, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.730"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::RpoNumber"** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %24, i64 %26
  store %"class.v8::internal::compiler::RpoNumber"** %34, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %33, i64 %23
  store %"class.v8::internal::compiler::RpoNumber"** %35, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::RpoNumber"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.730"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to %"class.v8::internal::compiler::RpoNumber"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !3

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::RpoNumber"**
  %75 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::RpoNumber"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::RpoNumber"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::RpoNumber"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !30

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::RpoNumber"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::RpoNumber"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::RpoNumber"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::RpoNumber"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::RpoNumber"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::RpoNumber"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::RpoNumber"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::RpoNumber"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::RpoNumber"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::RpoNumber"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::RpoNumber"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::RpoNumber"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::RpoNumber"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::RpoNumber"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::RpoNumber"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::RpoNumber"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::RpoNumber"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::RpoNumber"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::RpoNumber"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %172, %"class.v8::internal::compiler::RpoNumber"*** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %199, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %200, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.730"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::RpoNumber"** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %24, i64 %26
  store %"class.v8::internal::compiler::RpoNumber"** %34, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %33, i64 %23
  store %"class.v8::internal::compiler::RpoNumber"** %35, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::RpoNumber"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.730"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to %"class.v8::internal::compiler::RpoNumber"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !3

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #5
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::RpoNumber"**
  %75 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::RpoNumber"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::RpoNumber"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::RpoNumber"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::RpoNumber"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !31

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::RpoNumber"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::RpoNumber"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::RpoNumber"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::RpoNumber"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::RpoNumber"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::RpoNumber"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::RpoNumber"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::RpoNumber"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::RpoNumber"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::RpoNumber"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::RpoNumber"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::RpoNumber"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::RpoNumber"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::RpoNumber"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::RpoNumber"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::RpoNumber"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::RpoNumber"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::RpoNumber"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::RpoNumber"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %45 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %172, %"class.v8::internal::compiler::RpoNumber"*** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %199, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %200, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.730"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::RpoNumber"** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::RpoNumber"** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::RpoNumber"** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::RpoNumber"** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::RpoNumber"** %36, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %35, i64 %22
  store %"class.v8::internal::compiler::RpoNumber"** %37, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.730"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47 to %"class.v8::internal::compiler::RpoNumber"**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.730", %"struct.std::__1::__split_buffer.730"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !3

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::RpoNumber"**
  %76 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::RpoNumber"** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::RpoNumber"** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::RpoNumber"** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::RpoNumber"** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !32

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::RpoNumber"** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::RpoNumber"** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::RpoNumber"** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::RpoNumber"** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::RpoNumber"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::RpoNumber"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::RpoNumber"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::RpoNumber"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::RpoNumber"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::RpoNumber"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::RpoNumber"** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::RpoNumber"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::RpoNumber"** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::RpoNumber"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::RpoNumber"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::RpoNumber"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::RpoNumber"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::RpoNumber"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::RpoNumber"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::RpoNumber"**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::RpoNumber"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %46 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %173, %"class.v8::internal::compiler::RpoNumber"*** %192, align 8
  %193 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::RpoNumber"** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::RpoNumber"** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %200, i64 -1
  store %"class.v8::internal::compiler::RpoNumber"** %201, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.745"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::RpoNumber"** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::RpoNumber"** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::RpoNumber"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, i64 %26
  store %"class.v8::internal::compiler::RpoNumber"** %34, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %33, i64 %22
  store %"class.v8::internal::compiler::RpoNumber"** %35, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::RpoNumber"** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.745"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.734"*, %"class.v8::internal::RecyclingZoneAllocator.734"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.734", %"class.v8::internal::RecyclingZoneAllocator.734"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48 to %"class.v8::internal::compiler::RpoNumber"**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.734", %"class.v8::internal::RecyclingZoneAllocator.734"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !3

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #5
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::RpoNumber"**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::RpoNumber"** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %81 to i64
  %83 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::RpoNumber"** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::RpoNumber"** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::RpoNumber"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !33

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::RpoNumber"** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::RpoNumber"** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::RpoNumber"** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::RpoNumber"** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::RpoNumber"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::RpoNumber"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::RpoNumber"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::RpoNumber"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::RpoNumber"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::RpoNumber"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::RpoNumber"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::RpoNumber"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::RpoNumber"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::RpoNumber"** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::RpoNumber"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::RpoNumber"** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::RpoNumber"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::RpoNumber"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::RpoNumber"**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::RpoNumber"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %47 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %170, %"class.v8::internal::compiler::RpoNumber"*** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %197, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %198, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler9RpoNumberERNS2_22RecyclingZoneAllocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.745"*, %"class.v8::internal::compiler::RpoNumber"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::RpoNumber"** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::RpoNumber"** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::RpoNumber"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::RpoNumber"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::RpoNumber"** %36, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %35, i64 %22
  store %"class.v8::internal::compiler::RpoNumber"** %37, %"class.v8::internal::compiler::RpoNumber"*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.745"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.745", %"struct.std::__1::__split_buffer.745"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.734"*, %"class.v8::internal::RecyclingZoneAllocator.734"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.734", %"class.v8::internal::RecyclingZoneAllocator.734"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49 to %"class.v8::internal::compiler::RpoNumber"**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.734", %"class.v8::internal::RecyclingZoneAllocator.734"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !3

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #5
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::RpoNumber"**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::RpoNumber"** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %82 to i64
  %84 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::RpoNumber"** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::RpoNumber"** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::RpoNumber"** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !34

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::RpoNumber"** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::RpoNumber"** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::RpoNumber"** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::RpoNumber"** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::RpoNumber"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::RpoNumber"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::RpoNumber"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::RpoNumber"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::RpoNumber"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::RpoNumber"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::RpoNumber"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::RpoNumber"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::RpoNumber"** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::RpoNumber"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::RpoNumber"** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::RpoNumber"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::RpoNumber"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::RpoNumber"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::RpoNumber"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::RpoNumber"**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::RpoNumber"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %48 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %171, %"class.v8::internal::compiler::RpoNumber"*** %190, align 8
  %191 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::RpoNumber"** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::RpoNumber"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::RpoNumber"** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %198, i64 -1
  store %"class.v8::internal::compiler::RpoNumber"** %199, %"class.v8::internal::compiler::RpoNumber"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN2v88internal8compiler9RpoNumberENS2_22RecyclingZoneAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.729"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %35 to %"class.v8::internal::compiler::RpoNumber"**
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::RpoNumber"* [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::RpoNumber"** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::RpoNumber"** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::RpoNumber"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::RpoNumber"** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::RpoNumber"*
  %56 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::RpoNumber"** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 1024
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %63, i64 2
  %71 = bitcast %"class.v8::internal::compiler::RpoNumber"* %70 to i64*
  store i64 1024, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::RpoNumber"* %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %63, %"class.v8::internal::compiler::RpoNumber"** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::RpoNumber"* %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::RpoNumber"**
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::RpoNumber"** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::RpoNumber"** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::RpoNumber"** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %82, i64 1
  store %"class.v8::internal::compiler::RpoNumber"** %84, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::RpoNumber"** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::RpoNumber"** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 1024, %95 ], [ 512, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %101 to %"class.v8::internal::compiler::RpoNumber"**
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 1024
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %111, i64 2
  %119 = bitcast %"class.v8::internal::compiler::RpoNumber"* %118 to i64*
  store i64 1024, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::RpoNumber"* %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %111, %"class.v8::internal::compiler::RpoNumber"** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::RpoNumber"* %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::RpoNumber"** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::RpoNumber"** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 1024
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %133, i64 2
  %141 = bitcast %"class.v8::internal::compiler::RpoNumber"* %140 to i64*
  store i64 1024, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::RpoNumber"* %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %133, %"class.v8::internal::compiler::RpoNumber"** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::RpoNumber"* %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %132, i64 1
  %148 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %2, align 8
  %152 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::RpoNumber"** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::RpoNumber"** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %154, i64 %163
  store %"class.v8::internal::compiler::RpoNumber"** %164, %"class.v8::internal::compiler::RpoNumber"*** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::RpoNumber"**, %"class.v8::internal::compiler::RpoNumber"*** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::RpoNumber"** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::RpoNumber"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.729", %"class.std::__1::__deque_base.729"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::RpoNumber"** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::RpoNumber"** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber *>::FreeBlock"** %178 to %"class.v8::internal::compiler::RpoNumber"***
  store %"class.v8::internal::compiler::RpoNumber"** %167, %"class.v8::internal::compiler::RpoNumber"*** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 1024
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %148, i64 2
  %199 = bitcast %"class.v8::internal::compiler::RpoNumber"* %198 to i64*
  store i64 1024, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::RpoNumber"* %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::RpoNumber"* %148, %"class.v8::internal::compiler::RpoNumber"** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::RpoNumber"* %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::RpoNumber>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::RpoNumber"** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.740"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.752"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.740", %"class.std::__1::vector.740"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.740", %"class.std::__1::vector.740"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.752"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.740"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.740", %"class.std::__1::vector.740"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.740", %"class.std::__1::vector.740"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.742"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.740"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #6
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #5
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.740"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !35
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #5
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #5
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !12}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !12}
!32 = distinct !{!32, !12}
!33 = distinct !{!33, !12}
!34 = distinct !{!34, !12}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
