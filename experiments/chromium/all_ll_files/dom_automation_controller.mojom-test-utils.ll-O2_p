; ModuleID = 'gen/content/common/dom_automation_controller.mojom-test-utils.cc'
source_filename = "gen/content/common/dom_automation_controller.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::mojom::DomAutomationControllerHostAsyncWaiter" = type { %"class.content::mojom::DomAutomationControllerHost"* }
%"class.content::mojom::DomAutomationControllerHost" = type { i32 (...)** }
%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting" = type { %"class.content::mojom::DomAutomationControllerHost" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN7content5mojom27DomAutomationControllerHostD2Ev = comdat any

$_ZN7content5mojom48DomAutomationControllerHostInterceptorForTestingD0Ev = comdat any

@_ZTVN7content5mojom48DomAutomationControllerHostInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::mojom::DomAutomationControllerHost"*)* @_ZN7content5mojom27DomAutomationControllerHostD2Ev to i8*), i8* bitcast (void (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)* @_ZN7content5mojom48DomAutomationControllerHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*, %"class.std::__1::basic_string"*)* @_ZN7content5mojom48DomAutomationControllerHostInterceptorForTesting20DomOperationResponseERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7content5mojom38DomAutomationControllerHostAsyncWaiterC1EPNS0_27DomAutomationControllerHostE = hidden unnamed_addr alias void (%"class.content::mojom::DomAutomationControllerHostAsyncWaiter"*, %"class.content::mojom::DomAutomationControllerHost"*), void (%"class.content::mojom::DomAutomationControllerHostAsyncWaiter"*, %"class.content::mojom::DomAutomationControllerHost"*)* @_ZN7content5mojom38DomAutomationControllerHostAsyncWaiterC2EPNS0_27DomAutomationControllerHostE
@_ZN7content5mojom38DomAutomationControllerHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.content::mojom::DomAutomationControllerHostAsyncWaiter"*), void (%"class.content::mojom::DomAutomationControllerHostAsyncWaiter"*)* @_ZN7content5mojom38DomAutomationControllerHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom48DomAutomationControllerHostInterceptorForTesting20DomOperationResponseERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"* %0 to %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)***
  %4 = load %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)**, %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)*, %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)*, %"class.content::mojom::DomAutomationControllerHost"* (%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.content::mojom::DomAutomationControllerHost"* %6(%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.content::mojom::DomAutomationControllerHost"* %7 to void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)***
  %9 = load void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)**, void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)*, void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)** %9, i64 2
  %11 = load void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)*, void (%"class.content::mojom::DomAutomationControllerHost"*, %"class.std::__1::basic_string"*)** %10, align 8
  tail call void %11(%"class.content::mojom::DomAutomationControllerHost"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content5mojom38DomAutomationControllerHostAsyncWaiterC2EPNS0_27DomAutomationControllerHostE(%"class.content::mojom::DomAutomationControllerHostAsyncWaiter"* nocapture, %"class.content::mojom::DomAutomationControllerHost"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.content::mojom::DomAutomationControllerHostAsyncWaiter", %"class.content::mojom::DomAutomationControllerHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.content::mojom::DomAutomationControllerHost"* %1, %"class.content::mojom::DomAutomationControllerHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content5mojom38DomAutomationControllerHostAsyncWaiterD2Ev(%"class.content::mojom::DomAutomationControllerHostAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom27DomAutomationControllerHostD2Ev(%"class.content::mojom::DomAutomationControllerHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom48DomAutomationControllerHostInterceptorForTestingD0Ev(%"class.content::mojom::DomAutomationControllerHostInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
