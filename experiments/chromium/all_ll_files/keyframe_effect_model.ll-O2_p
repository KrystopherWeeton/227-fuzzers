; ModuleID = '../../third_party/blink/renderer/core/animation/keyframe_effect_model.cc'
source_filename = "../../third_party/blink/renderer/core/animation/keyframe_effect_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.358", i32, [4 x i8], %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.494", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.510", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.528", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.535", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.416", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.474", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.394" = type { %"struct.std::__1::__atomic_base.395" }
%"struct.std::__1::__atomic_base.395" = type { %"struct.std::__1::__atomic_base.396" }
%"struct.std::__1::__atomic_base.396" = type { %"struct.std::__1::__cxx_atomic_impl.397" }
%"struct.std::__1::__cxx_atomic_impl.397" = type { %"struct.std::__1::__cxx_atomic_base_impl.398" }
%"struct.std::__1::__cxx_atomic_base_impl.398" = type { i64 }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::Worklist.405"* }
%"class.blink::Worklist.405" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::Worklist.412"* }
%"class.blink::Worklist.412" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::Worklist.419"* }
%"class.blink::Worklist.419" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::Worklist.426"* }
%"class.blink::Worklist.426" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::Worklist.433"* }
%"class.blink::Worklist.433" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::Worklist.440"* }
%"class.blink::Worklist.440" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::Worklist.447"* }
%"class.blink::Worklist.447" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.394" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.454", %"class.std::__1::__compressed_pair.461", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.468", [4 x i8] }>
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456", %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { i64 }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { float }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.477", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.486" }
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.488" }
%"class.WTF::VectorBufferBase.488" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.516" }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.405"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.412"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.419"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.426"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.433"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.783" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.534 }
%class.scoped_refptr.534 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.535" = type { %"struct.std::__1::__atomic_base.536" }
%"struct.std::__1::__atomic_base.536" = type { %"struct.std::__1::__cxx_atomic_impl.537" }
%"struct.std::__1::__cxx_atomic_impl.537" = type { %"struct.std::__1::__cxx_atomic_base_impl.538" }
%"struct.std::__1::__cxx_atomic_base_impl.538" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector", %"class.blink::Member.10", %"class.blink::Member.38", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional", %"class.absl::optional.4", %class.scoped_refptr }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, %union.anon.8 }
%union.anon.8 = type { i32 }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::PropertyHandle", %"class.blink::Member.23" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.15, %"class.WTF::AtomicString" }
%union.anon.15 = type { %"class.blink::CSSProperty"* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.27" }
%"class.blink::HeapVector.27" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::Member.33"*, i32, i32 }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.42" }
%"class.blink::HeapVector.42" = type { %"class.WTF::Vector.45" }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"class.blink::Member.48"*, i32, i32 }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.170", %class.scoped_refptr, double, double, double, double }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::AnimationTimeDelta" = type { double }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::HeapVector.50" = type { %"class.WTF::Vector.53" }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.blink::Member.56"*, i32, i32 }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StringKeyframe"* }
%"class.blink::StringKeyframe" = type <{ %"class.blink::Keyframe", %"class.blink::HeapHashMap.63", %"class.blink::Member.70", %"class.blink::Member.70", %"class.WTF::HashMap.88", i8, i8, i8, [5 x i8] }>
%"class.blink::HeapHashMap.63" = type { %"class.WTF::HashMap.66" }
%"class.WTF::HashMap.66" = type { %"class.WTF::HashTable.67" }
%"class.WTF::HashTable.67" = type <{ %"struct.WTF::KeyValuePair.69"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.69" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.74", %"class.blink::HeapVector.76", i8, [7 x i8] }>
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.70" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.129", i32, i8, [3 x i8], %"class.blink::HeapVector.131", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.139", %"class.blink::Member.141", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.150", %"class.blink::Member.156", %"class.blink::Member.158", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.96" }
%"class.blink::HeapHashMap.96" = type { %"class.WTF::HashMap.99" }
%"class.WTF::HashMap.99" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"struct.WTF::KeyValuePair.102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.102" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.108" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"class.blink::WeakMember.107"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.107" = type opaque
%"class.blink::Supplementable.108" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.109" }
%"class.blink::HeapHashMap.109" = type { %"class.WTF::HashMap.112" }
%"class.WTF::HashMap.112" = type { %"class.WTF::HashTable.113" }
%"class.WTF::HashTable.113" = type <{ %"struct.WTF::KeyValuePair.115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.115" = type { i8*, %"class.blink::Member.1249" }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1251" }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.116, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118", %"class.blink::Member.124", i32, [4 x i8], %"class.WTF::HashSet.125", i32, i32 }
%class.scoped_refptr.116 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.95" }
%"class.WTF::HashSet.125" = type { %"class.WTF::HashTable.126" }
%"class.WTF::HashTable.126" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.131" = type { %"class.WTF::Vector.134" }
%"class.WTF::Vector.134" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"class.blink::Member.137"*, i32, i32 }
%"class.blink::Member.137" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.143", i32, i32 }
%"class.blink::HeapHashMap.143" = type { %"class.WTF::HashMap.146" }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.149" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::HeapVector.76" = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81", [96 x i8] }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.82" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"struct.WTF::KeyValuePair.92"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.92" = type { %"class.blink::QualifiedName"*, %"class.WTF::String" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { double*, i32, i32 }
%"class.WTF::HashSet.160" = type { %"class.WTF::HashTable.161" }
%"class.WTF::HashTable.161" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.164" = type { %"class.WTF::Vector.167" }
%"class.WTF::Vector.167" = type { %"class.WTF::VectorBuffer.168" }
%"class.WTF::VectorBuffer.168" = type { %"class.WTF::VectorBufferBase.169" }
%"class.WTF::VectorBufferBase.169" = type { %"class.blink::Member.170"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.819 }
%union.anon.819 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.183" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.175", %"class.blink::Member.175" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.175", %"class.blink::Member.177", %"class.blink::Member.175", %"class.blink::Member.175", %"class.blink::Member.179" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.199", %"class.blink::Member.201", %"class.blink::Member.177", %"class.blink::Member.203", %"class.blink::Member.203", %"class.blink::Member.227", %"class.blink::Member.229", %"class.blink::Member.231", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.236", %"class.blink::HeapVector.238" }
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.299", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.307", %"class.WTF::Vector.307", i8, i32, %"class.blink::Member.314", %"class.blink::Member.124", %"class.blink::Member.316", %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.322", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.330", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.336", %"class.blink::Member.338", %"class.blink::Member.244", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.341", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.220", %"class.blink::Member.218", %"class.blink::Member.551", %"class.blink::Member.218", %"class.blink::Member.218", %"class.blink::Member.218", %"class.blink::UserActionElementSet", %"class.blink::Member.560", double, double, i64, i64, %"class.blink::HeapHashSet.562", %"class.blink::HeapHashSet.569", i16, i8, %"class.blink::Member.576", %"class.blink::Member.578", %"class.blink::Member.580", %"class.blink::Member.582", %"class.blink::TextLinkColors", %"class.blink::Member.584", i8, [7 x i8], %"class.blink::HeapHashMap.586", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.218", %"class.WTF::Vector.593", %"class.blink::Member.598", %"class.blink::Member.600", i8, %"class.blink::Member.218", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.602", %"class.blink::HeapVector.604", %"class.std::__1::unique_ptr.612", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.618", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.631", %"class.WTF::Vector.633", i8, i8, %"class.std::__1::unique_ptr.638", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.220", %"class.blink::HeapVector.644", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.652", i8, i32, %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.660", %"class.WTF::HashMap.662", %"class.blink::Member.667", %"class.blink::Member.669", %"class.blink::Member.671", %"class.blink::Member.673", %"class.blink::Member.201", %"class.blink::Member.201", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.675", i8, i32, %"class.blink::Member.682", %"class.blink::Member.684", i32, %"class.blink::Member.686", %"class.blink::Member.688", %"class.blink::Member.699", %"class.std::__1::unique_ptr.701", i64, %"class.std::__1::unique_ptr.707", i32, i32, %"class.blink::Member.718", %"class.blink::Member.720", %"class.blink::Member.722", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.724", %"class.WTF::Vector.726", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.731", %"class.blink::Member.738", %"class.std::__1::unique_ptr.740", %"class.blink::Member.746", i8, i8, %"class.WTF::String", %"class.blink::Member.748", i8, [7 x i8], %"class.blink::HeapHashMap.750", %"class.blink::HeapObserverSet.757", %"class.blink::Member.765", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.767", i32, i8, i8, %"class.blink::WeakMember.769", %"class.blink::Member.770" }
%"class.blink::Supplementable.299" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.300" }
%"class.blink::HeapHashMap.300" = type { %"class.WTF::HashMap.303" }
%"class.WTF::HashMap.303" = type { %"class.WTF::HashTable.304" }
%"class.WTF::HashTable.304" = type <{ %"struct.WTF::KeyValuePair.306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.306" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.307" = type { %"class.WTF::VectorBuffer.308" }
%"class.WTF::VectorBuffer.308" = type { %"class.WTF::VectorBufferBase.309" }
%"class.WTF::VectorBufferBase.309" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.311", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.311" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.324" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::KURL"* }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.246", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.248, %"class.WTF::Vector.267", %"class.WTF::Vector.267", %"class.blink::Member.175", %"class.blink::Member.272", %"class.blink::HeapHashSet.276", %"class.blink::Member.201", %"class.WTF::HashSet.283", %"class.WTF::TextPosition", %"class.blink::Member.287", %"class.blink::HeapVector.289", %"class.blink::Member.296" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.248 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.249", %"class.WTF::Vector.251" }
%"class.WTF::RefCounted.249" = type { %"class.base::RefCounted.250" }
%"class.base::RefCounted.250" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.251" = type { %"class.WTF::VectorBuffer.252" }
%"class.WTF::VectorBuffer.252" = type { %"class.WTF::VectorBufferBase.253" }
%"class.WTF::VectorBufferBase.253" = type { %"class.std::__1::unique_ptr.254"*, i32, i32 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.257", %"class.WTF::String" }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.274" }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.276" = type { %"class.WTF::HashSet.279" }
%"class.WTF::HashSet.279" = type { %"class.WTF::HashTable.280" }
%"class.WTF::HashTable.280" = type <{ %"class.blink::WeakMember.282"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.282" = type { %"class.blink::MemberBase.178" }
%"class.WTF::HashSet.283" = type { %"class.WTF::HashTable.284" }
%"class.WTF::HashTable.284" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.248, %"class.blink::Member.244", %"class.blink::Member.272" }
%"class.blink::HeapVector.289" = type { %"class.WTF::Vector.292" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.blink::Member.272"*, i32, i32 }
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.344 }
%class.scoped_refptr.344 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.345", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.345" = type { %"class.base::RefCounted.346" }
%"class.base::RefCounted.346" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.349" }
%"class.blink::HeapHashMap.349" = type { %"class.WTF::HashMap.352" }
%"class.WTF::HashMap.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"struct.WTF::KeyValuePair.355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.355" = type { %"class.blink::WeakMember.356", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.553" }
%"class.blink::HeapHashMap.553" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.559"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.559" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.562" = type { %"class.WTF::HashSet.565" }
%"class.WTF::HashSet.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"class.blink::WeakMember.568"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.568" = type opaque
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.586" = type { %"class.WTF::HashMap.589" }
%"class.WTF::HashMap.589" = type { %"class.WTF::HashTable.590" }
%"class.WTF::HashTable.590" = type <{ %"struct.WTF::KeyValuePair.592"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.592" = type opaque
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.604" = type { %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::Member.610"*, i32, i32 }
%"class.blink::Member.610" = type opaque
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.618" = type { %"class.WTF::HashSet.621" }
%"class.WTF::HashSet.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"class.blink::WeakMember.624"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.624" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.625", i32, [4 x i8] }>
%"class.WTF::Vector.625" = type { %"class.WTF::VectorBuffer.626" }
%"class.WTF::VectorBuffer.626" = type { %"class.WTF::VectorBufferBase.627" }
%"class.WTF::VectorBufferBase.627" = type { %"struct.std::__1::pair.628"*, i32, i32 }
%"struct.std::__1::pair.628" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.220" = type { %"class.WTF::Vector.223" }
%"class.WTF::Vector.223" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"class.blink::Member.218"*, i32, i32 }
%"class.blink::HeapVector.644" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::Member.650"*, i32, i32 }
%"class.blink::Member.650" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.201" }
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.666" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.550", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.541, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.541 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.542" }>
%"class.base::RefCountedThreadSafe.542" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.543 }
%class.scoped_refptr.543 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.544", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.544" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.545" }
%"struct.std::__1::atomic.545" = type { %"struct.std::__1::__atomic_base.546" }
%"struct.std::__1::__atomic_base.546" = type { %"struct.std::__1::__atomic_base.547" }
%"struct.std::__1::__atomic_base.547" = type { %"struct.std::__1::__cxx_atomic_impl.548" }
%"struct.std::__1::__cxx_atomic_impl.548" = type { %"struct.std::__1::__cxx_atomic_base_impl.549" }
%"struct.std::__1::__cxx_atomic_base_impl.549" = type { i8 }
%"class.blink::WeakMember.550" = type { %"class.blink::MemberBase.202" }
%"class.blink::HeapHashSet.675" = type { %"class.WTF::HashSet.678" }
%"class.WTF::HashSet.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"class.blink::Member.681"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.681" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type { %"class.blink::HeapHashMap.692", %"class.blink::HeapHashMap.692", i64 }
%"class.blink::HeapHashMap.692" = type { %"class.WTF::HashMap.695" }
%"class.WTF::HashMap.695" = type { %"class.WTF::HashTable.696" }
%"class.WTF::HashTable.696" = type <{ %"struct.WTF::KeyValuePair.698"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.698" = type { %"class.WTF::AtomicString", %"class.blink::Member.1256" }
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.82", %class.scoped_refptr.1265, %"class.WTF::Vector.1275", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.1260" }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%class.scoped_refptr.1265 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1266", %"class.WTF::Vector.1118", %"class.WTF::Vector.1268", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1266" = type { %"class.base::RefCounted.1267" }
%"class.base::RefCounted.1267" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1118" = type { %"class.WTF::VectorBuffer.1119" }
%"class.WTF::VectorBuffer.1119" = type { %"class.WTF::VectorBufferBase.1120" }
%"class.WTF::VectorBufferBase.1120" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1268" = type { %"class.WTF::VectorBuffer.1269" }
%"class.WTF::VectorBuffer.1269" = type { %"class.WTF::VectorBufferBase.1270" }
%"class.WTF::VectorBufferBase.1270" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1271 }
%union.anon.1271 = type { double }
%"class.WTF::Vector.1275" = type { %"class.WTF::VectorBuffer.1276" }
%"class.WTF::VectorBuffer.1276" = type { %"class.WTF::VectorBufferBase.1277" }
%"class.WTF::VectorBufferBase.1277" = type { %"class.std::__1::unique_ptr.1278"*, i32, i32 }
%"class.std::__1::unique_ptr.1278" = type opaque
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.283", %"class.WTF::HashSet.283", %"class.WTF::HashSet.283", %"class.WTF::HashSet.283", %"class.WTF::HashSet.283", %"class.WTF::HashSet.283", i32, [4 x i8], %"class.WTF::HashMap.710", %"class.WTF::HashMap.710", %"class.WTF::HashMap.710", %"class.WTF::HashMap.710", %"class.WTF::HashMap.710", %"class.WTF::HashMap.710", %"class.WTF::HashMap.710", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.710" = type { %"class.WTF::HashTable.711" }
%"class.WTF::HashTable.711" = type <{ %"struct.WTF::KeyValuePair.714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.714" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.731" = type { %"class.WTF::HashMap.734" }
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type opaque
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.750" = type { %"class.WTF::HashMap.753" }
%"class.WTF::HashMap.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"struct.WTF::KeyValuePair.756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.756" = type opaque
%"class.blink::HeapObserverSet.757" = type { i32, [4 x i8], %"class.blink::HeapHashSet.758" }
%"class.blink::HeapHashSet.758" = type { %"class.WTF::HashSet.761" }
%"class.WTF::HashSet.761" = type { %"class.WTF::HashTable.762" }
%"class.WTF::HashTable.762" = type <{ %"class.blink::WeakMember.764"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.764" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.201", %"class.blink::HeapHashSet.774", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.781", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.774" = type { %"class.WTF::HashSet.777" }
%"class.WTF::HashSet.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"class.blink::Member.780"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.780" = type opaque
%"class.blink::HeapTaskRunnerTimer.781" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.782", { i64, i64 } }
%"class.blink::WeakMember.782" = type { %"class.blink::MemberBase.768" }
%"class.blink::WeakMember.769" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::Node"* }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.207" }
%"class.blink::HeapHashMap.207" = type { %"class.WTF::HashMap.210" }
%"class.WTF::HashMap.210" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"struct.WTF::KeyValuePair.213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.213" = type { %"class.WTF::AtomicString", %"class.blink::Member.214" }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.218", i32, %"class.blink::HeapVector.220" }
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.233" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::HeapHashMap.235"* }
%"class.blink::HeapHashMap.235" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.238" = type { %"class.WTF::Vector.241" }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"class.blink::Member.244"*, i32, i32 }
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.187", %"class.blink::Member.189", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.187" = type { %"class.WTF::SingleThreadedBitField.188" }
%"class.WTF::SingleThreadedBitField.188" = type { i32 }
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.192", %"class.WTF::AtomicString", %"class.WTF::Vector.194" }
%"class.WTF::RefCounted.192" = type { %"class.base::RefCounted.193" }
%"class.base::RefCounted.193" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.194" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196", [32 x i8] }
%"class.WTF::VectorBufferBase.196" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1215", %"class.std::__1::unique_ptr.1217" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.858", %"class.blink::DataRef.938", %"class.blink::DataRef.942", %"class.blink::DataRef.1135", %"class.blink::DataRef.1198", %"class.blink::DataRef.1202", %"class.blink::DataRef.1206", %"class.blink::DataRef.1210", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.788 }
%class.scoped_refptr.788 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.789", %"class.blink::DataRef.791", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.789" = type { %"class.base::RefCounted.790" }
%"class.base::RefCounted.790" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.791" = type { %class.scoped_refptr.792 }
%class.scoped_refptr.792 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.793", %"class.blink::Font" }
%"class.WTF::RefCounted.793" = type { %"class.base::RefCounted.794" }
%"class.base::RefCounted.794" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.827 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.796, %class.scoped_refptr.804, %class.scoped_refptr.814, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.826 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.795 }
%class.scoped_refptr.795 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1232", [4 x i8] }>
%"class.WTF::RefCounted.1232" = type { %"class.base::RefCounted.1233" }
%"class.base::RefCounted.1233" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.796 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.802", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.797" }
%"class.WTF::Vector.797" = type { %"class.WTF::VectorBuffer.798" }
%"class.WTF::VectorBuffer.798" = type { %"class.WTF::VectorBufferBase.799" }
%"class.WTF::VectorBufferBase.799" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.802" = type { %"class.base::RefCounted.803" }
%"class.base::RefCounted.803" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.804 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.805", %"class.WTF::RefCounted.812", [4 x i8] }>
%"class.blink::FontSettings.805" = type { %"class.WTF::Vector.806" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %"class.blink::FontTagValuePair.809"*, i32, i32 }
%"class.blink::FontTagValuePair.809" = type { i32, float }
%"class.WTF::RefCounted.812" = type { %"class.base::RefCounted.813" }
%"class.base::RefCounted.813" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.815", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.823, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.823 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.824", [4 x i8] }>
%"class.WTF::RefCounted.824" = type { %"class.base::RefCounted.825" }
%"class.base::RefCounted.825" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.826 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.827 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.828", %"class.WTF::Vector.830", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.828" = type { %"class.base::RefCounted.829" }
%"class.base::RefCounted.829" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.830" = type { %"class.WTF::VectorBuffer.831" }
%"class.WTF::VectorBuffer.831" = type { %"class.WTF::VectorBufferBase.832", [8 x i8] }
%"class.WTF::VectorBufferBase.832" = type { %class.scoped_refptr.833*, i32, i32 }
%class.scoped_refptr.833 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.834", [4 x i8] }>
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.844", %class.scoped_refptr.851, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.834" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.838", %"class.absl::optional.838", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.838" = type { %"class.absl::optional_internal::optional_data.839" }
%"class.absl::optional_internal::optional_data.839" = type { %"class.absl::optional_internal::optional_data_base.840" }
%"class.absl::optional_internal::optional_data_base.840" = type { %"class.absl::optional_internal::optional_data_dtor_base.841" }
%"class.absl::optional_internal::optional_data_dtor_base.841" = type { i8, %union.anon.842 }
%union.anon.842 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.843, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.545" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.843 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.847, %class.scoped_refptr.847 }
%class.scoped_refptr.847 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.851 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.852", [4 x i8] }>
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.854" }
%"class.blink::PersistentBase.854" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.855" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.855" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.856 }
%class.scoped_refptr.856 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.857, i8, i8, i8, i8 }>
%union.anon.857 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.858" = type { %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.860", [4 x i8], %"class.blink::DataRef.862", %"class.blink::DataRef.903", %"class.WTF::Vector.907", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.911, %class.scoped_refptr.920, %"class.blink::Persistent.928", %"class.blink::Persistent.930", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.862" = type { %class.scoped_refptr.863 }
%class.scoped_refptr.863 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.864", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.866, %class.scoped_refptr.873, %"class.blink::Persistent.890", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.867", %"class.WTF::Vector.868" }
%"class.base::RefCountedThreadSafe.867" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.868" = type { %"class.WTF::VectorBuffer.869" }
%"class.WTF::VectorBuffer.869" = type { %"class.WTF::VectorBufferBase.870" }
%"class.WTF::VectorBufferBase.870" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.873 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.874", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.874" = type { %"class.base::RefCounted.875" }
%"class.base::RefCounted.875" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.876", %"class.blink::Persistent.881" }
%"class.WTF::HashMap.876" = type { %"class.WTF::HashTable.877" }
%"class.WTF::HashTable.877" = type <{ %"struct.WTF::KeyValuePair.880"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.880" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1265 }
%"class.blink::Persistent.881" = type { %"class.blink::PersistentBase.882" }
%"class.blink::PersistentBase.882" = type { %"class.blink::HeapHashMap.883"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.883" = type { %"class.WTF::HashMap.886" }
%"class.WTF::HashMap.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ %"struct.WTF::KeyValuePair.889"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.889" = type opaque
%"class.blink::Persistent.890" = type { %"class.blink::PersistentBase.891" }
%"class.blink::PersistentBase.891" = type { %"class.blink::HeapVector.892"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.892" = type { %"class.WTF::Vector.895" }
%"class.WTF::Vector.895" = type { %"class.WTF::VectorBuffer.896" }
%"class.WTF::VectorBuffer.896" = type { %"class.WTF::VectorBufferBase.897" }
%"class.WTF::VectorBufferBase.897" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.898", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.903" = type { %class.scoped_refptr.904 }
%class.scoped_refptr.904 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.905", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.907" = type { %"class.WTF::VectorBuffer.908" }
%"class.WTF::VectorBuffer.908" = type { %"class.WTF::VectorBufferBase.196" }
%class.scoped_refptr.911 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.912", %"class.WTF::Vector.914" }
%"class.WTF::RefCounted.912" = type { %"class.base::RefCounted.913" }
%"class.base::RefCounted.913" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.914" = type { %"class.WTF::VectorBuffer.915" }
%"class.WTF::VectorBuffer.915" = type { %"class.WTF::VectorBufferBase.916" }
%"class.WTF::VectorBufferBase.916" = type { %"struct.std::__1::pair.917"*, i32, i32 }
%"struct.std::__1::pair.917" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.920 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.921", [4 x i8], %"class.WTF::Vector.923" }
%"class.WTF::RefCounted.921" = type { %"class.base::RefCounted.922" }
%"class.base::RefCounted.922" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.923" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.925", [28 x i8] }>
%"class.WTF::VectorBufferBase.925" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.928" = type { %"class.blink::PersistentBase.929" }
%"class.blink::PersistentBase.929" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.930" = type { %"class.blink::PersistentBase.931" }
%"class.blink::PersistentBase.931" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.934", %"class.blink::Member.936" }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.938" = type { %class.scoped_refptr.939 }
%class.scoped_refptr.939 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.940", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.940" = type { %"class.base::RefCounted.941" }
%"class.base::RefCounted.941" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.942" = type { %class.scoped_refptr.943 }
%class.scoped_refptr.943 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.944", [4 x i8], %"class.blink::DataRef.946", %"class.blink::DataRef.1012", %"class.blink::TransformOperations", %class.scoped_refptr.920, %"class.blink::Persistent.1129", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.946" = type { %class.scoped_refptr.947 }
%class.scoped_refptr.947 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.948", [4 x i8], %"class.blink::DataRef.950", %"class.blink::Persistent.988", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.948" = type { %"class.base::RefCounted.949" }
%"class.base::RefCounted.949" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.950" = type { %class.scoped_refptr.951 }
%class.scoped_refptr.951 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.952", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.970, %class.scoped_refptr.973, %class.scoped_refptr.976, %class.scoped_refptr.979, %class.scoped_refptr.980, %class.scoped_refptr.981, %"class.blink::Persistent.988", %"class.blink::Persistent.1003", %"class.absl::optional.1007", %"class.absl::optional.1007", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.952" = type { %"class.base::RefCounted.953" }
%"class.base::RefCounted.953" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.954", %"class.std::__1::unique_ptr.959" }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.962", %"class.WTF::Vector.954", i32, i32 }
%"class.WTF::Vector.962" = type { %"class.WTF::VectorBuffer.963" }
%"class.WTF::VectorBuffer.963" = type { %"class.WTF::VectorBufferBase.964" }
%"class.WTF::VectorBufferBase.964" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.970 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.971", [4 x i8] }>
%"class.WTF::RefCounted.971" = type { %"class.base::RefCounted.972" }
%"class.base::RefCounted.972" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.973 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.974", [4 x i8] }>
%"class.WTF::RefCounted.974" = type { %"class.base::RefCounted.975" }
%"class.base::RefCounted.975" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.976 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.977" }>
%"class.WTF::RefCounted.977" = type { %"class.base::RefCounted.978" }
%"class.base::RefCounted.978" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.979 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.980 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.981 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.982", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.982" = type { %"class.base::RefCounted.983" }
%"class.base::RefCounted.983" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.984" }
%"class.blink::DataRef.984" = type { %class.scoped_refptr.985 }
%class.scoped_refptr.985 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.928", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.986" }
%"class.WTF::RefCounted.986" = type { %"class.base::RefCounted.987" }
%"class.base::RefCounted.987" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1003" = type { %"class.blink::PersistentBase.1004" }
%"class.blink::PersistentBase.1004" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.973, %"class.blink::Member.898", i32, [4 x i8] }>
%"class.absl::optional.1007" = type { %"class.absl::optional_internal::optional_data.1008" }
%"class.absl::optional_internal::optional_data.1008" = type { %"class.absl::optional_internal::optional_data_base.1009" }
%"class.absl::optional_internal::optional_data_base.1009" = type { %"class.absl::optional_internal::optional_data_dtor_base.1010" }
%"class.absl::optional_internal::optional_data_dtor_base.1010" = type { i8, [3 x i8], %union.anon.1011 }
%union.anon.1011 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.988" = type { %"class.blink::PersistentBase.989" }
%"class.blink::PersistentBase.989" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.992" }
%"class.blink::HeapVector.992" = type { %"class.WTF::Vector.995" }
%"class.WTF::Vector.995" = type { %"class.WTF::VectorBuffer.996" }
%"class.WTF::VectorBuffer.996" = type { %"class.WTF::VectorBufferBase.997" }
%"class.WTF::VectorBufferBase.997" = type { %"class.blink::Member.998"*, i32, i32 }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1012" = type { %class.scoped_refptr.1013 }
%class.scoped_refptr.1013 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1014", %"class.blink::DataRef.1016", %"class.blink::DataRef.1020", %"class.blink::DataRef.1029", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1048", %"class.std::__1::unique_ptr.1059", %"class.std::__1::unique_ptr.1090", %"class.std::__1::unique_ptr.1101", %"class.std::__1::unique_ptr.1112", %"class.WTF::Vector.1118", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1014" = type { %"class.base::RefCounted.1015" }
%"class.base::RefCounted.1015" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1016" = type { %class.scoped_refptr.1017 }
%class.scoped_refptr.1017 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1018", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1018" = type { %"class.base::RefCounted.1019" }
%"class.base::RefCounted.1019" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1020" = type { %class.scoped_refptr.1021 }
%class.scoped_refptr.1021 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1022", [4 x i8], %"class.WTF::Vector.1024", i8, [7 x i8] }>
%"class.WTF::RefCounted.1022" = type { %"class.base::RefCounted.1023" }
%"class.base::RefCounted.1023" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1024" = type { %"class.WTF::VectorBuffer.1025" }
%"class.WTF::VectorBuffer.1025" = type { %"class.WTF::VectorBufferBase.1026" }
%"class.WTF::VectorBufferBase.1026" = type { i32*, i32, i32 }
%"class.blink::DataRef.1029" = type { %class.scoped_refptr.1030 }
%class.scoped_refptr.1030 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1031", [4 x i8], %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1038", %"class.WTF::HashMap.1038", %"class.WTF::HashMap.1038", %"class.WTF::HashMap.1038", %"class.WTF::HashMap.1043", %"class.WTF::Vector.954", %"class.WTF::Vector.954", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1031" = type { %"class.base::RefCounted.1032" }
%"class.base::RefCounted.1032" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1033" = type { %"class.WTF::HashTable.1034" }
%"class.WTF::HashTable.1034" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type { %"class.WTF::String", %"class.WTF::Vector.1281" }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1038" = type { %"class.WTF::HashTable.1039" }
%"class.WTF::HashTable.1039" = type <{ %"struct.WTF::KeyValuePair.1042"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1042" = type { i64, %"class.WTF::Vector.1118" }
%"class.WTF::HashMap.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %"struct.WTF::KeyValuePair.1047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1047" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1051" }
%"class.WTF::HashMap.1051" = type { %"class.WTF::HashTable.1052" }
%"class.WTF::HashTable.1052" = type <{ %"struct.WTF::KeyValuePair.1055"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1055" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1286", %"class.absl::optional.1286", %"class.absl::optional.1286" }
%"class.absl::optional.1286" = type { %"class.absl::optional_internal::optional_data.1287" }
%"class.absl::optional_internal::optional_data.1287" = type { %"class.absl::optional_internal::optional_data_base.1288" }
%"class.absl::optional_internal::optional_data_base.1288" = type { %"class.absl::optional_internal::optional_data_dtor_base.1289" }
%"class.absl::optional_internal::optional_data_dtor_base.1289" = type { i8, %union.anon.1290 }
%union.anon.1290 = type { i32 }
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.907", %"class.WTF::Vector.1067", %"class.WTF::Vector.58", %"class.WTF::Vector.1072", %"class.WTF::Vector.1077", %"class.WTF::Vector.1082" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.58", %"class.WTF::Vector.58", %"class.WTF::Vector.1062" }
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064" }
%"class.WTF::VectorBufferBase.1064" = type { %class.scoped_refptr*, i32, i32 }
%"class.WTF::Vector.1067" = type { %"class.WTF::VectorBuffer.1068" }
%"class.WTF::VectorBuffer.1068" = type { %"class.WTF::VectorBufferBase.1069" }
%"class.WTF::VectorBufferBase.1069" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { i32*, i32, i32 }
%"class.WTF::Vector.1077" = type { %"class.WTF::VectorBuffer.1078" }
%"class.WTF::VectorBuffer.1078" = type { %"class.WTF::VectorBufferBase.1079" }
%"class.WTF::VectorBufferBase.1079" = type { i32*, i32, i32 }
%"class.WTF::Vector.1082" = type { %"class.WTF::VectorBuffer.1083" }
%"class.WTF::VectorBuffer.1083" = type { %"class.WTF::VectorBufferBase.1084" }
%"class.WTF::VectorBufferBase.1084" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1093" }
%"class.WTF::Vector.1093" = type { %"class.WTF::VectorBuffer.1094" }
%"class.WTF::VectorBuffer.1094" = type { %"class.WTF::VectorBufferBase.1095" }
%"class.WTF::VectorBufferBase.1095" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1104" }
%"class.WTF::Vector.1104" = type { %"class.WTF::VectorBuffer.1105" }
%"class.WTF::VectorBuffer.1105" = type { %"class.WTF::VectorBufferBase.1106" }
%"class.WTF::VectorBufferBase.1106" = type { %"class.blink::Persistent.928"*, i32, i32 }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.928", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1123" }
%"class.WTF::Vector.1123" = type { %"class.WTF::VectorBuffer.1124" }
%"class.WTF::VectorBuffer.1124" = type { %"class.WTF::VectorBufferBase.1125" }
%"class.WTF::VectorBufferBase.1125" = type { %class.scoped_refptr.1126*, i32, i32 }
%class.scoped_refptr.1126 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.977", [4 x i8] }>
%"class.blink::Persistent.1129" = type { %"class.blink::PersistentBase.1130" }
%"class.blink::PersistentBase.1130" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1133" }
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1135" = type { %class.scoped_refptr.1136 }
%class.scoped_refptr.1136 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1137", [4 x i8], %"class.blink::DataRef.1139", %"class.blink::DataRef.1143", %"class.blink::DataRef.1160", %"class.blink::DataRef.1178", %"class.blink::DataRef.1190", %"class.blink::DataRef.1194", %class.scoped_refptr.1164, i32, [4 x i8] }>
%"class.WTF::RefCounted.1137" = type { %"class.base::RefCounted.1138" }
%"class.base::RefCounted.1138" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1139" = type { %class.scoped_refptr.1140 }
%class.scoped_refptr.1140 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1141", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1141" = type { %"class.base::RefCounted.1142" }
%"class.base::RefCounted.1142" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1143" = type { %class.scoped_refptr.1144 }
%class.scoped_refptr.1144 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1145", %class.scoped_refptr.1147, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1145" = type { %"class.base::RefCounted.1146" }
%"class.base::RefCounted.1146" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1147 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1148", %"class.std::__1::unique_ptr.1154", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.974" }>
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.1160" = type { %class.scoped_refptr.1161 }
%class.scoped_refptr.1161 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1162", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1162" = type { %"class.base::RefCounted.1163" }
%"class.base::RefCounted.1163" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1164, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1178" = type { %class.scoped_refptr.1179 }
%class.scoped_refptr.1179 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1180", [4 x i8], %class.scoped_refptr.1182, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1180" = type { %"class.base::RefCounted.1181" }
%"class.base::RefCounted.1181" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1182 = type { %"class.base::RefCountedData.1183"* }
%"class.base::RefCountedData.1183" = type { %"class.base::RefCountedThreadSafe.1184", %"class.WTF::Vector.1185" }
%"class.base::RefCountedThreadSafe.1184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1190" = type { %class.scoped_refptr.1191 }
%class.scoped_refptr.1191 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1192", %class.scoped_refptr.1164, %class.scoped_refptr.1164, %class.scoped_refptr.1164 }
%"class.WTF::RefCounted.1192" = type { %"class.base::RefCounted.1193" }
%"class.base::RefCounted.1193" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1194" = type { %class.scoped_refptr.1195 }
%class.scoped_refptr.1195 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1196", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1196" = type { %"class.base::RefCounted.1197" }
%"class.base::RefCounted.1197" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1164 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1165", %"class.blink::Persistent.1167", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1165" = type { %"class.base::RefCounted.1166" }
%"class.base::RefCounted.1166" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1167" = type { %"class.blink::PersistentBase.1168" }
%"class.blink::PersistentBase.1168" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.218", %"class.blink::HeapHashMap.1171" }
%"class.blink::HeapHashMap.1171" = type { %"class.WTF::HashMap.1174" }
%"class.WTF::HashMap.1174" = type { %"class.WTF::HashTable.1175" }
%"class.WTF::HashTable.1175" = type <{ %"struct.WTF::KeyValuePair.1177"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1177" = type opaque
%"class.blink::DataRef.1198" = type { %class.scoped_refptr.1199 }
%class.scoped_refptr.1199 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1200", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1200" = type { %"class.base::RefCounted.1201" }
%"class.base::RefCounted.1201" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1202" = type { %class.scoped_refptr.1203 }
%class.scoped_refptr.1203 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1204", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1204" = type { %"class.base::RefCounted.1205" }
%"class.base::RefCounted.1205" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1206" = type { %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1208", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1210" = type { %class.scoped_refptr.1211 }
%class.scoped_refptr.1211 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1212", %class.scoped_refptr.1214 }
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1214 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1230", %"class.blink::StyleVariables", %class.scoped_refptr.1214 }
%"class.WTF::RefCounted.1230" = type { %"class.base::RefCounted.1231" }
%"class.base::RefCounted.1231" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1215" = type { %"class.base::RefCounted.1216" }
%"class.base::RefCounted.1216" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1220" }
%"class.std::__1::unique_ptr.1220" = type { %"class.std::__1::__compressed_pair.1221" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.WTF::Vector.1223"* }
%"class.WTF::Vector.1223" = type opaque
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)* }
%"class.std::__1::function.1235" = type { %"class.std::__1::__function::__policy_func.1239" }
%"class.std::__1::__function::__policy_func.1239" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1240", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1240" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.1327" = type { i8 }
%"class.WTF::internal::ConcurrentBucket" = type { [24 x i8], %"class.blink::Member.23"* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1374" = type { i8 }

$_ZN5blink23KeyframeEffectModelBase9SetFramesINS_6MemberINS_8KeyframeEEEEEvRNS_10HeapVectorIT_Lj0EEE = comdat any

$_ZN5blink23KeyframeEffectModelBase9SetFramesINS_6MemberINS_14StringKeyframeEEEEEvRNS_10HeapVectorIT_Lj0EEE = comdat any

$_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE = comdat any

$_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_14StringKeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE6insertIPS4_EEvjOT_ = comdat any

$_ZN5blink23KeyframeEffectModelBaseD2Ev = comdat any

$_ZN5blink23KeyframeEffectModelBaseD0Ev = comdat any

$_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE = comdat any

$_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv = comdat any

$_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv = comdat any

$_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE = comdat any

$_ZNK5blink23KeyframeEffectModelBase27IsStringKeyframeEffectModelEv = comdat any

$_ZNK5blink23KeyframeEffectModelBase31IsTransitionKeyframeEffectModelEv = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_ = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS3_E4HashENS8_10HashTraitsIS3_EENSC_IS7_EEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_DnEENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE8FinalizeEv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS8_j = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEPhm = comdat any

$_ZN5blink9NameTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties = internal unnamed_addr global %"class.blink::CSSProperty"** null, align 8
@_ZGVZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties = internal global i64 0, align 8
@_ZTVN5blink23KeyframeEffectModelBaseE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.164"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector"*, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*)* @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties = internal global [8 x %"class.blink::CSSProperty"*] zeroinitializer, align 16
@_ZGVZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties = internal global i64 0, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.2 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.3 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Keyframe>, WTF::VectorTraits<blink::Member<blink::Keyframe> > >]\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyHandle]\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS4_7ElementERKNS4_13ComputedStyleESA_PS9_E3$_0FbRKNS4_14PropertyHandleEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS4_7ElementERKNS4_13ComputedStyleESA_PS9_E3$_1FbRKNS4_8Keyframe24PropertySpecificKeyframeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS4_7ElementERKNS4_13ComputedStyleEPS9_E3$_2FbRKNS4_14PropertyHandleEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS4_7ElementERKNS4_13ComputedStyleEPS9_E3$_3FbRKNS4_8Keyframe24PropertySpecificKeyframeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_14PropertyHandleENS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEENS_11DefaultHashIS3_E4HashENS_10HashTraitsIS3_EENSB_IS7_EEEEEEPKcv = private unnamed_addr constant [351 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_14PropertyHandleENS_12KeyValuePairIS4_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [538 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::PropertyHandle, WTF::KeyValuePair<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, WTF::KeyValuePairKeyExtractor, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashMapValueTraits<WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> > >, WTF::HashTraits<blink::PropertyHandle>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8Keyframe24PropertySpecificKeyframeEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [209 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Keyframe::PropertySpecificKeyframe>, WTF::VectorTraits<blink::Member<blink::Keyframe::PropertySpecificKeyframe> > >]\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink23KeyframeEffectModelBase9SetFramesINS_6MemberINS_8KeyframeEEEEEvRNS_10HeapVectorIT_Lj0EEE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = bitcast %"class.WTF::Vector"* %3 to i8**
  br i1 %10, label %16, label %12

12:                                               ; preds = %7
  %13 = load i8*, i8** %11, align 8
  %14 = zext i32 %9 to i64
  %15 = shl nuw nsw i64 %14, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %15) #10
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %12, %7
  %17 = load i8*, i8** %11, align 8
  %18 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %17) #10
  br label %19

19:                                               ; preds = %2, %16
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member"*, %"class.blink::Member"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"* %3, %"class.blink::Member"* %21, i32 %23) #10
  %24 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.10"* %24 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.WTF::Vector.45"* %29 to i8**
  br i1 %36, label %42, label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %37, align 8
  %40 = zext i32 %35 to i64
  %41 = shl nuw nsw i64 %40, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %39, i64 %41) #10
  store i32 0, i32* %34, align 4
  br label %42

42:                                               ; preds = %38, %33
  %43 = load i8*, i8** %37, align 8
  %44 = bitcast %"class.WTF::Vector.45"* %29 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %30, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %43) #10
  br label %45

45:                                               ; preds = %19, %42
  %46 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  store double 0x7FF8000000000000, double* %46, align 8
  %47 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 12
  store i8 1, i8* %47, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23KeyframeEffectModelBase15ClearCachedDataEv(%"class.blink::KeyframeEffectModelBase"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::Member.10"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %5, i64 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %5, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = bitcast %"class.WTF::Vector.45"* %7 to i8**
  br i1 %14, label %20, label %16

16:                                               ; preds = %11
  %17 = load i8*, i8** %15, align 8
  %18 = zext i32 %13 to i64
  %19 = shl nuw nsw i64 %18, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %19) #10
  store i32 0, i32* %12, align 4
  br label %20

20:                                               ; preds = %16, %11
  %21 = load i8*, i8** %15, align 8
  %22 = bitcast %"class.WTF::Vector.45"* %7 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %8, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %21) #10
  br label %23

23:                                               ; preds = %1, %20
  %24 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  store double 0x7FF8000000000000, double* %24, align 8
  %25 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 12
  store i8 1, i8* %25, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink23KeyframeEffectModelBase9SetFramesINS_6MemberINS_14StringKeyframeEEEEEvRNS_10HeapVectorIT_Lj0EEE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::HeapVector.50"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = bitcast %"class.WTF::Vector"* %3 to i8**
  br i1 %10, label %16, label %12

12:                                               ; preds = %7
  %13 = load i8*, i8** %11, align 8
  %14 = zext i32 %9 to i64
  %15 = shl nuw nsw i64 %14, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %15) #10
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %12, %7
  %17 = load i8*, i8** %11, align 8
  %18 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store i32 0, i32* %4, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %17) #10
  br label %19

19:                                               ; preds = %2, %16
  %20 = getelementptr inbounds %"class.blink::HeapVector.50", %"class.blink::HeapVector.50"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member.56"*, %"class.blink::Member.56"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HeapVector.50", %"class.blink::HeapVector.50"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"* %3, %"class.blink::Member.56"* %21, i32 %23) #10
  %24 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.10"* %24 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.WTF::Vector.45"* %29 to i8**
  br i1 %36, label %42, label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %37, align 8
  %40 = zext i32 %35 to i64
  %41 = shl nuw nsw i64 %40, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %39, i64 %41) #10
  store i32 0, i32* %34, align 4
  br label %42

42:                                               ; preds = %38, %33
  %43 = load i8*, i8** %37, align 8
  %44 = bitcast %"class.WTF::Vector.45"* %29 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %30, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %43) #10
  br label %45

45:                                               ; preds = %19, %42
  %46 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  store double 0x7FF8000000000000, double* %46, align 8
  %47 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 12
  store i8 1, i8* %47, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.58"* noalias sret, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca double, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.58"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %12) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member"*, %"class.blink::Member"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %11
  %26 = bitcast double* %3 to i8*
  br label %30

27:                                               ; preds = %50, %2, %11
  %28 = load i32, i32* %6, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %108, label %55

30:                                               ; preds = %53, %25
  %31 = phi i32 [ %18, %25 ], [ %54, %53 ]
  %32 = phi %"class.blink::Member"* [ %21, %25 ], [ %51, %53 ]
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load double, double* %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %39 = icmp eq i8 %36, 0
  %40 = select i1 %39, double 0x7FF8000000000000, double %38
  store double %40, double* %3, align 8
  %41 = load i32, i32* %6, align 4
  %42 = icmp eq i32 %41, %31
  br i1 %42, label %49, label %43, !prof !2

43:                                               ; preds = %30
  %44 = load double*, double** %4, align 8
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds double, double* %44, i64 %45
  store double %40, double* %46, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.58"* %0, double* nonnull dereferenceable(8) %3) #10
  br label %50

50:                                               ; preds = %43, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 1
  %52 = icmp eq %"class.blink::Member"* %51, %23
  br i1 %52, label %27, label %53

53:                                               ; preds = %50
  %54 = load i32, i32* %5, align 8
  br label %30

55:                                               ; preds = %27
  %56 = add i32 %28, -1
  %57 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %56) #10
  %58 = load double, double* %57, align 8
  %59 = fcmp uno double %58, 0.000000e+00
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = load i32, i32* %6, align 4
  %62 = add i32 %61, -1
  %63 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %62) #10
  store double 1.000000e+00, double* %63, align 8
  br label %64

64:                                               ; preds = %60, %55
  %65 = load i32, i32* %6, align 4
  %66 = icmp ugt i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 0) #10
  %69 = load double, double* %68, align 8
  %70 = fcmp uno double %69, 0.000000e+00
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 0) #10
  store double 0.000000e+00, double* %72, align 8
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 0) #10
  %75 = load i32, i32* %6, align 4
  %76 = icmp ugt i32 %75, 1
  br i1 %76, label %77, label %108

77:                                               ; preds = %73
  %78 = load double, double* %74, align 8
  br label %79

79:                                               ; preds = %77, %102
  %80 = phi i32 [ %105, %102 ], [ 1, %77 ]
  %81 = phi i32 [ %104, %102 ], [ 0, %77 ]
  %82 = phi double [ %103, %102 ], [ %78, %77 ]
  %83 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %80) #10
  %84 = load double, double* %83, align 8
  %85 = fcmp uno double %84, 0.000000e+00
  br i1 %85, label %102, label %86

86:                                               ; preds = %79
  %87 = sub i32 %80, %81
  %88 = icmp ugt i32 %87, 1
  br i1 %88, label %89, label %102

89:                                               ; preds = %86
  %90 = fsub double %84, %82
  %91 = uitofp i32 %87 to double
  br label %92

92:                                               ; preds = %92, %89
  %93 = phi i32 [ 1, %89 ], [ %100, %92 ]
  %94 = uitofp i32 %93 to double
  %95 = fmul double %90, %94
  %96 = fdiv double %95, %91
  %97 = fadd double %82, %96
  %98 = add i32 %93, %81
  %99 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %98) #10
  store double %97, double* %99, align 8
  %100 = add nuw i32 %93, 1
  %101 = icmp eq i32 %100, %87
  br i1 %101, label %102, label %92

102:                                              ; preds = %92, %86, %79
  %103 = phi double [ %82, %79 ], [ %84, %86 ], [ %84, %92 ]
  %104 = phi i32 [ %81, %79 ], [ %80, %86 ], [ %80, %92 ]
  %105 = add nuw i32 %80, 1
  %106 = load i32, i32* %6, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %79, label %108

108:                                              ; preds = %102, %73, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_14StringKeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.58"* noalias sret, %"class.blink::HeapVector.50"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca double, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.58"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::HeapVector.50", %"class.blink::HeapVector.50"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %12) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.blink::HeapVector.50", %"class.blink::HeapVector.50"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Member.56"*, %"class.blink::Member.56"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %11
  %26 = bitcast double* %3 to i8*
  br label %30

27:                                               ; preds = %50, %2, %11
  %28 = load i32, i32* %6, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %108, label %55

30:                                               ; preds = %53, %25
  %31 = phi i32 [ %18, %25 ], [ %54, %53 ]
  %32 = phi %"class.blink::Member.56"* [ %21, %25 ], [ %51, %53 ]
  %33 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %34, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %34, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = load double, double* %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %39 = icmp eq i8 %36, 0
  %40 = select i1 %39, double 0x7FF8000000000000, double %38
  store double %40, double* %3, align 8
  %41 = load i32, i32* %6, align 4
  %42 = icmp eq i32 %41, %31
  br i1 %42, label %49, label %43, !prof !2

43:                                               ; preds = %30
  %44 = load double*, double** %4, align 8
  %45 = zext i32 %41 to i64
  %46 = getelementptr inbounds double, double* %44, i64 %45
  store double %40, double* %46, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.58"* %0, double* nonnull dereferenceable(8) %3) #10
  br label %50

50:                                               ; preds = %43, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  %51 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %32, i64 1
  %52 = icmp eq %"class.blink::Member.56"* %51, %23
  br i1 %52, label %27, label %53

53:                                               ; preds = %50
  %54 = load i32, i32* %5, align 8
  br label %30

55:                                               ; preds = %27
  %56 = add i32 %28, -1
  %57 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %56) #10
  %58 = load double, double* %57, align 8
  %59 = fcmp uno double %58, 0.000000e+00
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = load i32, i32* %6, align 4
  %62 = add i32 %61, -1
  %63 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %62) #10
  store double 1.000000e+00, double* %63, align 8
  br label %64

64:                                               ; preds = %60, %55
  %65 = load i32, i32* %6, align 4
  %66 = icmp ugt i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 0) #10
  %69 = load double, double* %68, align 8
  %70 = fcmp uno double %69, 0.000000e+00
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 0) #10
  store double 0.000000e+00, double* %72, align 8
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 0) #10
  %75 = load i32, i32* %6, align 4
  %76 = icmp ugt i32 %75, 1
  br i1 %76, label %77, label %108

77:                                               ; preds = %73
  %78 = load double, double* %74, align 8
  br label %79

79:                                               ; preds = %77, %102
  %80 = phi i32 [ %105, %102 ], [ 1, %77 ]
  %81 = phi i32 [ %104, %102 ], [ 0, %77 ]
  %82 = phi double [ %103, %102 ], [ %78, %77 ]
  %83 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %80) #10
  %84 = load double, double* %83, align 8
  %85 = fcmp uno double %84, 0.000000e+00
  br i1 %85, label %102, label %86

86:                                               ; preds = %79
  %87 = sub i32 %80, %81
  %88 = icmp ugt i32 %87, 1
  br i1 %88, label %89, label %102

89:                                               ; preds = %86
  %90 = fsub double %84, %82
  %91 = uitofp i32 %87 to double
  br label %92

92:                                               ; preds = %92, %89
  %93 = phi i32 [ 1, %89 ], [ %100, %92 ]
  %94 = uitofp i32 %93 to double
  %95 = fmul double %90, %94
  %96 = fdiv double %95, %91
  %97 = fadd double %82, %96
  %98 = add i32 %93, %81
  %99 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* %0, i32 %98) #10
  store double %97, double* %99, align 8
  %100 = add nuw i32 %93, 1
  %101 = icmp eq i32 %100, %87
  br i1 %101, label %102, label %92

102:                                              ; preds = %92, %86, %79
  %103 = phi double [ %82, %79 ], [ %84, %86 ], [ %84, %92 ]
  %104 = phi i32 [ %81, %79 ], [ %80, %86 ], [ %80, %92 ]
  %105 = add nuw i32 %80, 1
  %106 = load i32, i32* %6, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %79, label %108

108:                                              ; preds = %102, %73, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23KeyframeEffectModelBase10PropertiesEv(%"class.WTF::HashSet.160"* noalias sret, %"class.blink::KeyframeEffectModelBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.WTF::HashSet.160", align 8
  %6 = bitcast %"class.WTF::HashSet.160"* %0 to i8*
  %7 = bitcast %"class.WTF::HashSet.160"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %158, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::HashSet.160"* %5 to i8*
  %17 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %5, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %5, i64 0, i32 0, i32 1
  %20 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %23 = bitcast %union.anon.15* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %0, i64 0, i32 0
  %26 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %29 = bitcast %union.anon.15* %28 to i8*
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %15, %121
  %32 = phi %"class.blink::Member"* [ %9, %15 ], [ %122, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %33, align 8
  %35 = bitcast %"class.blink::Keyframe"* %34 to void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)***
  %36 = load void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)**, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)** %36, i64 2
  %38 = load void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)** %37, align 8
  call void %38(%"class.WTF::HashSet.160"* nonnull sret %5, %"class.blink::Keyframe"* %34) #10
  %39 = load i32, i32* %17, align 4
  %40 = icmp eq i32 %39, 0
  %41 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %18, align 8
  %42 = load i32, i32* %19, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %41, i64 %43
  br i1 %40, label %77, label %45

45:                                               ; preds = %31
  %46 = icmp eq i32 %42, 0
  br i1 %46, label %77, label %47

47:                                               ; preds = %45, %70
  %48 = phi %"class.blink::PropertyHandle"* [ %71, %70 ], [ %41, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store i32 0, i32* %21, align 8, !alias.scope !3
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10, !alias.scope !3
  %49 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %48, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #10
  br label %65

65:                                               ; preds = %64, %61, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  %66 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %48, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 1
  %69 = or i1 %49, %68
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %48, i64 1
  %72 = icmp eq %"class.blink::PropertyHandle"* %71, %44
  br i1 %72, label %73, label %47

73:                                               ; preds = %70, %65
  %74 = phi %"class.blink::PropertyHandle"* [ %44, %70 ], [ %48, %65 ]
  %75 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %18, align 8
  %76 = load i32, i32* %19, align 8
  br label %77

77:                                               ; preds = %73, %31, %45
  %78 = phi i32 [ %42, %31 ], [ 0, %45 ], [ %76, %73 ]
  %79 = phi %"class.blink::PropertyHandle"* [ %41, %31 ], [ %41, %45 ], [ %75, %73 ]
  %80 = phi %"class.blink::PropertyHandle"* [ %44, %31 ], [ %41, %45 ], [ %74, %73 ]
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %79, i64 %81
  %83 = icmp eq %"class.blink::PropertyHandle"* %80, %82
  br i1 %83, label %86, label %124

84:                                               ; preds = %155
  %85 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %18, align 8
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi %"class.blink::PropertyHandle"* [ %85, %84 ], [ %79, %77 ]
  %88 = icmp eq %"class.blink::PropertyHandle"* %87, null
  br i1 %88, label %121, label %89, !prof !8

89:                                               ; preds = %86
  %90 = load i32, i32* %19, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %119, label %92

92:                                               ; preds = %89
  %93 = zext i32 %90 to i64
  br label %94

94:                                               ; preds = %116, %92
  %95 = phi i64 [ 0, %92 ], [ %117, %116 ]
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %87, i64 %95, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %116, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %87, i64 %95, i32 2, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #10
  br label %116

116:                                              ; preds = %115, %112, %99, %94
  %117 = add nuw nsw i64 %95, 1
  %118 = icmp eq i64 %117, %93
  br i1 %118, label %119, label %94

119:                                              ; preds = %116, %89
  %120 = bitcast %"class.blink::PropertyHandle"* %87 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %120) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %18, align 8
  br label %121

121:                                              ; preds = %86, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %122 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 1
  %123 = icmp eq %"class.blink::Member"* %122, %13
  br i1 %123, label %158, label %31

124:                                              ; preds = %77, %155
  %125 = phi %"class.blink::PropertyHandle"* [ %156, %155 ], [ %80, %77 ]
  %126 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.161"* %25, %"class.blink::PropertyHandle"* dereferenceable(24) %125, %"class.blink::PropertyHandle"* dereferenceable(24) %125) #10
  %127 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %125, i64 1
  %128 = icmp eq %"class.blink::PropertyHandle"* %127, %44
  br i1 %128, label %155, label %129

129:                                              ; preds = %124, %152
  %130 = phi %"class.blink::PropertyHandle"* [ %153, %152 ], [ %127, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  store i32 0, i32* %27, align 8, !alias.scope !9
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10, !alias.scope !9
  %131 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %130, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %146, %143, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %148 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 1
  %151 = or i1 %131, %150
  br i1 %151, label %152, label %155

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 1
  %154 = icmp eq %"class.blink::PropertyHandle"* %153, %44
  br i1 %154, label %155, label %129

155:                                              ; preds = %147, %152, %124
  %156 = phi %"class.blink::PropertyHandle"* [ %44, %124 ], [ %130, %147 ], [ %44, %152 ]
  %157 = icmp eq %"class.blink::PropertyHandle"* %156, %82
  br i1 %157, label %84, label %124

158:                                              ; preds = %121, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23KeyframeEffectModelBase12SetCompositeENS_11EffectModel18CompositeOperationE(%"class.blink::KeyframeEffectModelBase"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 8
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %5 = bitcast %"class.blink::Member.10"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %7, i64 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %7, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = bitcast %"class.WTF::Vector.45"* %9 to i8**
  br i1 %16, label %22, label %18

18:                                               ; preds = %13
  %19 = load i8*, i8** %17, align 8
  %20 = zext i32 %15 to i64
  %21 = shl nuw nsw i64 %20, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %19, i64 %21) #10
  store i32 0, i32* %14, align 4
  br label %22

22:                                               ; preds = %18, %13
  %23 = load i8*, i8** %17, align 8
  %24 = bitcast %"class.WTF::Vector.45"* %9 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store i32 0, i32* %10, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %23) #10
  br label %25

25:                                               ; preds = %2, %22
  %26 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  store double 0x7FF8000000000000, double* %26, align 8
  %27 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 12
  store i8 1, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.164"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::AnimationTimeDelta", align 8
  %7 = getelementptr inbounds %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta"* %6, i64 0, i32 0
  store double %3, double* %7, align 8
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0)
  tail call void @_ZNK5blink23KeyframeEffectModelBase34EnsureInterpolationEffectPopulatedEv(%"class.blink::KeyframeEffectModelBase"* %0)
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %1
  %11 = bitcast double %3 to i64
  br i1 %10, label %12, label %21

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  %14 = load double, double* %13, align 8
  %15 = fcmp une double %14, %2
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 7
  %18 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* nonnull dereferenceable(8) %6, %"class.blink::AnimationTimeDelta"* dereferenceable(8) %17) #10
  %19 = bitcast %"class.blink::AnimationTimeDelta"* %6 to i64*
  %20 = load i64, i64* %19, align 8
  br label %21

21:                                               ; preds = %5, %16, %12
  %22 = phi i64 [ %11, %12 ], [ %11, %5 ], [ %20, %16 ]
  %23 = phi i1 [ true, %12 ], [ true, %5 ], [ %18, %16 ]
  store i32 %1, i32* %8, align 8
  %24 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  store double %2, double* %24, align 8
  %25 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 7
  %26 = bitcast %"class.blink::AnimationTimeDelta"* %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %27, align 8
  call void @_ZNK5blink19InterpolationEffect23GetActiveInterpolationsEdRNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::InterpolationEffect"* %28, double %2, %"class.blink::HeapVector.164"* dereferenceable(16) %4) #10
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::Keyframe::PropertySpecificKeyframe"*, align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.blink::PropertyHandle", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = alloca %"class.WTF::Vector.58", align 8
  %11 = alloca %"class.WTF::HashSet.160", align 8
  %12 = alloca i8*, align 8
  %13 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %14, align 8
  %16 = icmp eq %"class.blink::HeapHashMap"* %15, null
  br i1 %16, label %17, label %463

17:                                               ; preds = %1
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS3_E4HashENS8_10HashTraitsIS3_EENSC_IS7_EEEEEEPhm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #10
  %19 = getelementptr inbounds i8, i8* %18, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = ptrtoint i8* %18 to i64
  %24 = bitcast %"class.blink::Member.10"* %13 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #10
  br label %29

29:                                               ; preds = %17, %27
  %30 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 10, i32 0
  %31 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %30, align 8
  %32 = ptrtoint %"class.blink::TimingFunction"* %31 to i64
  %33 = icmp eq %"class.blink::TimingFunction"* %31, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %31, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %41

41:                                               ; preds = %29, %34, %38
  %42 = bitcast %"class.WTF::Vector.58"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %10, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %10, i64 0, i32 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1
  %46 = bitcast %"class.WTF::Vector.58"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  call void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.58"* nonnull sret %10, %"class.blink::HeapVector"* dereferenceable(16) %45)
  %47 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %71, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %45, i64 0, i32 0
  %52 = bitcast %"class.logging::CheckError"* %6 to i8*
  %53 = bitcast %"class.WTF::HashSet.160"* %11 to i8*
  %54 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %11, i64 0, i32 0, i32 2
  %55 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %11, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %11, i64 0, i32 0, i32 1
  %57 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %58 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %59 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %60 = bitcast %union.anon.15* %59 to i8*
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = bitcast i8** %12 to i8*
  %63 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 8
  %64 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 13
  %65 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %4 to i8*
  %66 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %67 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %68 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %69 = bitcast %union.anon.15* %68 to i8*
  %70 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %140

71:                                               ; preds = %265, %41
  %72 = phi i64 [ %32, %41 ], [ %176, %265 ]
  %73 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 11
  store i8 0, i8* %73, align 8
  %74 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %14, align 8
  %75 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %74, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %74, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 %82
  br i1 %77, label %123, label %84

84:                                               ; preds = %71
  %85 = icmp eq i32 %81, 0
  br i1 %85, label %123, label %86

86:                                               ; preds = %84
  %87 = bitcast %"class.blink::PropertyHandle"* %7 to i8*
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 1
  %90 = bitcast %union.anon.15* %89 to i8*
  %91 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %92

92:                                               ; preds = %116, %86
  %93 = phi %"struct.WTF::KeyValuePair"* [ %79, %86 ], [ %117, %116 ]
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #10
  store i32 0, i32* %88, align 8, !alias.scope !14
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #10, !alias.scope !14
  %95 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %94, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7) #10
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #10
  br label %111

111:                                              ; preds = %110, %107, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #10
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 1
  %115 = or i1 %95, %114
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 1
  %118 = icmp eq %"struct.WTF::KeyValuePair"* %117, %83
  br i1 %118, label %119, label %92

119:                                              ; preds = %116, %111
  %120 = phi %"struct.WTF::KeyValuePair"* [ %83, %116 ], [ %93, %111 ]
  %121 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %78, align 8
  %122 = load i32, i32* %80, align 8
  br label %123

123:                                              ; preds = %119, %71, %84
  %124 = phi i32 [ %81, %71 ], [ 0, %84 ], [ %122, %119 ]
  %125 = phi %"struct.WTF::KeyValuePair"* [ %79, %71 ], [ %79, %84 ], [ %121, %119 ]
  %126 = phi %"struct.WTF::KeyValuePair"* [ %83, %71 ], [ %79, %84 ], [ %120, %119 ]
  %127 = zext i32 %124 to i64
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 %127
  %129 = icmp eq %"struct.WTF::KeyValuePair"* %126, %128
  br i1 %129, label %362, label %130

130:                                              ; preds = %123
  %131 = inttoptr i64 %72 to %"class.blink::TimingFunction"*
  %132 = icmp eq i64 %72, 0
  %133 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %131, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.logging::CheckError"* %2 to i8*
  %135 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  %136 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 0
  %137 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 1
  %138 = bitcast %union.anon.15* %137 to i8*
  %139 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %386

140:                                              ; preds = %50, %265
  %141 = phi i32 [ 0, %50 ], [ %266, %265 ]
  %142 = phi i64 [ %32, %50 ], [ %176, %265 ]
  %143 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"* nonnull %10, i32 %141) #10
  %144 = load double, double* %143, align 8
  %145 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %51, i32 %141) #10
  %146 = fcmp oeq double %144, 0.000000e+00
  br i1 %146, label %147, label %175

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %145, i64 0, i32 0, i32 0
  %149 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %149, i64 0, i32 3, i32 0
  %151 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %150, align 8
  %152 = icmp eq %"class.blink::TimingFunction"* %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %151, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 1 monotonic
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %158 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %159

159:                                              ; preds = %157, %153, %147
  %160 = ptrtoint %"class.blink::TimingFunction"* %151 to i64
  %161 = icmp eq i64 %142, 0
  br i1 %161, label %175, label %162

162:                                              ; preds = %159
  %163 = inttoptr i64 %142 to %"class.blink::TimingFunction"*
  %164 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %163, i64 0, i32 1, i32 0
  %165 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw sub i32* %165, i32 1 acq_rel
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %175

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %164, i64 -2
  %170 = bitcast %"class.base::RefCountedThreadSafe"* %169 to %"class.blink::TimingFunction"*
  %171 = bitcast %"class.base::RefCountedThreadSafe"* %169 to void (%"class.blink::TimingFunction"*)***
  %172 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %172, i64 1
  %174 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %173, align 8
  call void %174(%"class.blink::TimingFunction"* nonnull %170) #10
  br label %175

175:                                              ; preds = %168, %162, %159, %140
  %176 = phi i64 [ %142, %140 ], [ %160, %159 ], [ %160, %162 ], [ %160, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  %177 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %145, i64 0, i32 0, i32 0
  %178 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %177, align 8
  %179 = bitcast %"class.blink::Keyframe"* %178 to void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)***
  %180 = load void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)**, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)** %180, i64 2
  %182 = load void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)** %181, align 8
  call void %182(%"class.WTF::HashSet.160"* nonnull sret %11, %"class.blink::Keyframe"* %178) #10
  %183 = load i32, i32* %54, align 4
  %184 = icmp eq i32 %183, 0
  %185 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %55, align 8
  %186 = load i32, i32* %56, align 8
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %185, i64 %187
  br i1 %184, label %221, label %189

189:                                              ; preds = %175
  %190 = icmp eq i32 %186, 0
  br i1 %190, label %221, label %191

191:                                              ; preds = %189, %214
  %192 = phi %"class.blink::PropertyHandle"* [ %215, %214 ], [ %185, %189 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #10
  store i32 0, i32* %58, align 8, !alias.scope !19
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10, !alias.scope !19
  %193 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %192, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #10
  br label %209

209:                                              ; preds = %208, %205, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #10
  %210 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %192, i64 0, i32 0
  %211 = load i32, i32* %210, align 8
  %212 = icmp eq i32 %211, 1
  %213 = or i1 %193, %212
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %192, i64 1
  %216 = icmp eq %"class.blink::PropertyHandle"* %215, %188
  br i1 %216, label %217, label %191

217:                                              ; preds = %214, %209
  %218 = phi %"class.blink::PropertyHandle"* [ %188, %214 ], [ %192, %209 ]
  %219 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %55, align 8
  %220 = load i32, i32* %56, align 8
  br label %221

221:                                              ; preds = %217, %175, %189
  %222 = phi i32 [ %186, %175 ], [ 0, %189 ], [ %220, %217 ]
  %223 = phi %"class.blink::PropertyHandle"* [ %185, %175 ], [ %185, %189 ], [ %219, %217 ]
  %224 = phi %"class.blink::PropertyHandle"* [ %188, %175 ], [ %185, %189 ], [ %218, %217 ]
  %225 = zext i32 %222 to i64
  %226 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %223, i64 %225
  %227 = icmp eq %"class.blink::PropertyHandle"* %224, %226
  br i1 %227, label %230, label %269

228:                                              ; preds = %359
  %229 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %55, align 8
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi %"class.blink::PropertyHandle"* [ %229, %228 ], [ %223, %221 ]
  %232 = icmp eq %"class.blink::PropertyHandle"* %231, null
  br i1 %232, label %265, label %233, !prof !8

233:                                              ; preds = %230
  %234 = load i32, i32* %56, align 8
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %263, label %236

236:                                              ; preds = %233
  %237 = zext i32 %234 to i64
  br label %238

238:                                              ; preds = %260, %236
  %239 = phi i64 [ 0, %236 ], [ %261, %260 ]
  %240 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %231, i64 %239, i32 0
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %260, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %231, i64 %239, i32 2, i32 0, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #10
  br label %260

260:                                              ; preds = %259, %256, %243, %238
  %261 = add nuw nsw i64 %239, 1
  %262 = icmp eq i64 %261, %237
  br i1 %262, label %263, label %238

263:                                              ; preds = %260, %233
  %264 = bitcast %"class.blink::PropertyHandle"* %231 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %264) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %55, align 8
  br label %265

265:                                              ; preds = %230, %263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  %266 = add nuw i32 %141, 1
  %267 = load i32, i32* %47, align 4
  %268 = icmp ult i32 %266, %267
  br i1 %268, label %140, label %71

269:                                              ; preds = %221, %359
  %270 = phi %"class.blink::PropertyHandle"* [ %360, %359 ], [ %224, %221 ]
  %271 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  store i8* null, i8** %12, align 8
  %272 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %271, i64 0, i32 0, i32 0
  %273 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_DnEENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %272, %"class.blink::PropertyHandle"* dereferenceable(24) %270, i8** nonnull dereferenceable(8) %12) #10
  %274 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %273, 0
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %274, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %276 = getelementptr inbounds %"class.blink::Member.23", %"class.blink::Member.23"* %275, i64 0, i32 0, i32 0
  %277 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %276, align 8
  %278 = icmp eq %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %277, null
  br i1 %278, label %279, label %291

279:                                              ; preds = %269
  %280 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEPhm(i64 16) #10
  %281 = getelementptr inbounds i8, i8* %280, i64 -4
  %282 = bitcast i8* %281 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %280, i8 0, i64 16, i1 false) #10
  %283 = load atomic i16, i16* %282 monotonic, align 2
  %284 = or i16 %283, 1
  store atomic i16 %284, i16* %282 release, align 2
  %285 = ptrtoint i8* %280 to i64
  %286 = bitcast %"class.blink::Member.23"* %275 to i64*
  store atomic i64 %285, i64* %286 monotonic, align 8
  %287 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %291, label %289

289:                                              ; preds = %279
  %290 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %280) #10
  br label %291

291:                                              ; preds = %269, %289, %279
  %292 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %177, align 8
  %293 = load i32, i32* %63, align 8
  %294 = bitcast %"class.blink::Keyframe"* %292 to %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)***
  %295 = load %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)**, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)*** %294, align 8
  %296 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)*, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)** %295, i64 8
  %297 = load %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)*, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe"*, %"class.blink::PropertyHandle"*, i32, double)** %296, align 8
  %298 = call %"class.blink::Keyframe::PropertySpecificKeyframe"* %297(%"class.blink::Keyframe"* %292, %"class.blink::PropertyHandle"* dereferenceable(24) %270, i32 %293, double %144) #10
  %299 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %298 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %300 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %299, align 8
  %301 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %300, i64 3
  %302 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %301, align 8
  %303 = call zeroext i1 %302(%"class.blink::Keyframe::PropertySpecificKeyframe"* %298) #10
  %304 = zext i1 %303 to i8
  %305 = load i8, i8* %64, align 2, !range !24
  %306 = or i8 %305, %304
  store i8 %306, i8* %64, align 2
  %307 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %276, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  store %"class.blink::Keyframe::PropertySpecificKeyframe"* %298, %"class.blink::Keyframe::PropertySpecificKeyframe"** %4, align 8
  %308 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %307, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %307, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = icmp eq i32 %309, %311
  br i1 %312, label %328, label %313, !prof !2

313:                                              ; preds = %291
  %314 = ptrtoint %"class.blink::Keyframe::PropertySpecificKeyframe"* %298 to i64
  %315 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %307, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %315, align 8
  %317 = zext i32 %309 to i64
  %318 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %316, i64 %317
  %319 = bitcast %"class.blink::Member.33"* %318 to i64*
  store atomic i64 %314, i64* %319 monotonic, align 8
  %320 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %298 to i8*
  %324 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %323) #10
  br label %325

325:                                              ; preds = %322, %313
  %326 = load i32, i32* %308, align 4
  %327 = add i32 %326, 1
  store i32 %327, i32* %308, align 4
  br label %330

328:                                              ; preds = %291
  %329 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %307, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.30"* %329, %"class.blink::Keyframe::PropertySpecificKeyframe"** nonnull dereferenceable(8) %4) #10
  br label %330

330:                                              ; preds = %325, %328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  %331 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %270, i64 1
  %332 = icmp eq %"class.blink::PropertyHandle"* %331, %188
  br i1 %332, label %359, label %333

333:                                              ; preds = %330, %356
  %334 = phi %"class.blink::PropertyHandle"* [ %357, %356 ], [ %331, %330 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  store i32 0, i32* %67, align 8, !alias.scope !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #10, !alias.scope !25
  %335 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %334, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #10
  br label %351

351:                                              ; preds = %350, %347, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  %352 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %334, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp eq i32 %353, 1
  %355 = or i1 %335, %354
  br i1 %355, label %356, label %359

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %334, i64 1
  %358 = icmp eq %"class.blink::PropertyHandle"* %357, %188
  br i1 %358, label %359, label %333

359:                                              ; preds = %351, %356, %330
  %360 = phi %"class.blink::PropertyHandle"* [ %188, %330 ], [ %334, %351 ], [ %188, %356 ]
  %361 = icmp eq %"class.blink::PropertyHandle"* %360, %226
  br i1 %361, label %228, label %269

362:                                              ; preds = %460, %123
  %363 = load double*, double** %43, align 8
  %364 = icmp eq double* %363, null
  %365 = bitcast double* %363 to i8*
  br i1 %364, label %371, label %366, !prof !8

366:                                              ; preds = %362
  %367 = load i32, i32* %44, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %370, label %369, !prof !2

369:                                              ; preds = %366
  store i32 0, i32* %44, align 4
  br label %370

370:                                              ; preds = %369, %366
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %365) #10
  store double* null, double** %43, align 8
  br label %371

371:                                              ; preds = %362, %370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #10
  %372 = icmp eq i64 %72, 0
  br i1 %372, label %463, label %373

373:                                              ; preds = %371
  %374 = inttoptr i64 %72 to %"class.blink::TimingFunction"*
  %375 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %374, i64 0, i32 1, i32 0
  %376 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %375, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = atomicrmw sub i32* %376, i32 1 acq_rel
  %378 = icmp eq i32 %377, 1
  br i1 %378, label %379, label %463

379:                                              ; preds = %373
  %380 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %375, i64 -2
  %381 = bitcast %"class.base::RefCountedThreadSafe"* %380 to %"class.blink::TimingFunction"*
  %382 = bitcast %"class.base::RefCountedThreadSafe"* %380 to void (%"class.blink::TimingFunction"*)***
  %383 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %382, align 8
  %384 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %383, i64 1
  %385 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %384, align 8
  call void %385(%"class.blink::TimingFunction"* nonnull %381) #10
  br label %463

386:                                              ; preds = %130, %460
  %387 = phi %"struct.WTF::KeyValuePair"* [ %126, %130 ], [ %461, %460 ]
  %388 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %387, i64 0, i32 1, i32 0, i32 0
  %389 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %388, align 8
  br i1 %132, label %395, label %390

390:                                              ; preds = %386
  %391 = atomicrmw add i32* %133, i32 1 monotonic
  %392 = icmp sgt i32 %391, 0
  br i1 %392, label %395, label %393

393:                                              ; preds = %390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %394 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #10
  br label %395

395:                                              ; preds = %386, %390, %393
  %396 = call zeroext i1 @_ZN5blink23KeyframeEffectModelBase29PropertySpecificKeyframeGroup30AddSyntheticKeyframeIfRequiredE13scoped_refptrINS_14TimingFunctionEE(%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %389, %"class.blink::TimingFunction"* %131)
  br i1 %396, label %397, label %398

397:                                              ; preds = %395
  store i8 1, i8* %73, align 8
  br label %398

398:                                              ; preds = %397, %395
  %399 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %388, align 8
  %400 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %399, i64 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %399, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %402 = load i32, i32* %401, align 4
  %403 = add i32 %402, -2
  %404 = icmp sgt i32 %403, 0
  br i1 %404, label %405, label %430

405:                                              ; preds = %398, %428
  %406 = phi i32 [ %412, %428 ], [ %403, %398 ]
  %407 = call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %400, i32 %406) #10
  %408 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %407, i64 0, i32 0, i32 0
  %409 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %408, align 8
  %410 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %409, i64 0, i32 1
  %411 = load double, double* %410, align 8
  %412 = add nsw i32 %406, -1
  %413 = call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %400, i32 %412) #10
  %414 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %413, i64 0, i32 0, i32 0
  %415 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %414, align 8
  %416 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %415, i64 0, i32 1
  %417 = load double, double* %416, align 8
  %418 = fcmp oeq double %417, %411
  %419 = add nuw nsw i32 %406, 1
  %420 = call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %400, i32 %419) #10
  %421 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %420, i64 0, i32 0, i32 0
  %422 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %421, align 8
  %423 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %422, i64 0, i32 1
  %424 = load double, double* %423, align 8
  %425 = fcmp oeq double %424, %411
  %426 = and i1 %418, %425
  br i1 %426, label %427, label %428

427:                                              ; preds = %405
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.30"* %400, i32 %406) #10
  br label %428

428:                                              ; preds = %427, %405
  %429 = icmp sgt i32 %412, 0
  br i1 %429, label %405, label %430

430:                                              ; preds = %428, %398
  %431 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %387, i64 1
  %432 = icmp eq %"struct.WTF::KeyValuePair"* %431, %83
  br i1 %432, label %460, label %433

433:                                              ; preds = %430, %457
  %434 = phi %"struct.WTF::KeyValuePair"* [ %458, %457 ], [ %431, %430 ]
  %435 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %434, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #10
  store i32 0, i32* %136, align 8, !alias.scope !30
  call void @llvm.memset.p0i8.i64(i8* align 8 %138, i8 0, i64 16, i1 false) #10, !alias.scope !30
  %436 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %435, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %9) #10
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %437, null
  br i1 %438, label %452, label %439

439:                                              ; preds = %433
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 0
  %445 = load i32, i32* %444, align 4
  br i1 %443, label %446, label %448

446:                                              ; preds = %439
  %447 = add i32 %445, -1
  store i32 %447, i32* %444, align 4
  br label %448

448:                                              ; preds = %446, %439
  %449 = phi i32 [ %447, %446 ], [ %445, %439 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %448
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %437) #10
  br label %452

452:                                              ; preds = %451, %448, %433
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #10
  %453 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %434, i64 0, i32 0, i32 0
  %454 = load i32, i32* %453, align 8
  %455 = icmp eq i32 %454, 1
  %456 = or i1 %436, %455
  br i1 %456, label %457, label %460

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %434, i64 1
  %459 = icmp eq %"struct.WTF::KeyValuePair"* %458, %83
  br i1 %459, label %460, label %433

460:                                              ; preds = %452, %457, %430
  %461 = phi %"struct.WTF::KeyValuePair"* [ %83, %430 ], [ %434, %452 ], [ %83, %457 ]
  %462 = icmp eq %"struct.WTF::KeyValuePair"* %461, %128
  br i1 %462, label %362, label %386

463:                                              ; preds = %1, %379, %373, %371
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23KeyframeEffectModelBase34EnsureInterpolationEffectPopulatedEv(%"class.blink::KeyframeEffectModelBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %5, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !24
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %162

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %11, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %11, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 %19
  br i1 %14, label %60, label %21

21:                                               ; preds = %9
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %27 = bitcast %union.anon.15* %26 to i8*
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %53, %23
  %30 = phi %"struct.WTF::KeyValuePair"* [ %16, %23 ], [ %54, %53 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  store i32 0, i32* %25, align 8, !alias.scope !35
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10, !alias.scope !35
  %32 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %31, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #10
  br label %48

48:                                               ; preds = %47, %44, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1
  %52 = or i1 %32, %51
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %54, %20
  br i1 %55, label %56, label %29

56:                                               ; preds = %53, %48
  %57 = phi %"struct.WTF::KeyValuePair"* [ %20, %53 ], [ %30, %48 ]
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = load i32, i32* %17, align 8
  br label %60

60:                                               ; preds = %56, %9, %21
  %61 = phi i32 [ %18, %9 ], [ 0, %21 ], [ %59, %56 ]
  %62 = phi %"struct.WTF::KeyValuePair"* [ %16, %9 ], [ %16, %21 ], [ %58, %56 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ %20, %9 ], [ %16, %21 ], [ %57, %56 ]
  %64 = zext i32 %61 to i64
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 %64
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %63, %65
  br i1 %66, label %73, label %67

67:                                               ; preds = %60
  %68 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %69 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %70 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %71 = bitcast %union.anon.15* %70 to i8*
  %72 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %76

73:                                               ; preds = %116, %60
  %74 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %4, align 8
  %75 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %74, i64 0, i32 0
  store i8 1, i8* %75, align 8
  br label %162

76:                                               ; preds = %67, %116
  %77 = phi %"struct.WTF::KeyValuePair"* [ %63, %67 ], [ %117, %116 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %79, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0
  br label %119

86:                                               ; preds = %158, %76
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, %20
  br i1 %88, label %116, label %89

89:                                               ; preds = %86, %113
  %90 = phi %"struct.WTF::KeyValuePair"* [ %114, %113 ], [ %87, %86 ]
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  store i32 0, i32* %69, align 8, !alias.scope !40
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #10, !alias.scope !40
  %92 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %91, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #10
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #10
  br label %108

108:                                              ; preds = %107, %104, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 1
  %112 = or i1 %92, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %114, %20
  br i1 %115, label %116, label %89

116:                                              ; preds = %108, %113, %86
  %117 = phi %"struct.WTF::KeyValuePair"* [ %20, %86 ], [ %90, %108 ], [ %20, %113 ]
  %118 = icmp eq %"struct.WTF::KeyValuePair"* %117, %65
  br i1 %118, label %73, label %76

119:                                              ; preds = %84, %158
  %120 = phi i32 [ 0, %84 ], [ %121, %158 ]
  %121 = add nuw i32 %120, 1
  %122 = call dereferenceable(8) %"class.blink::Member.33"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %80, i32 %120) #10
  %123 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %124, i64 0, i32 1
  %126 = load double, double* %125, align 8
  %127 = call dereferenceable(8) %"class.blink::Member.33"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %80, i32 %121) #10
  %128 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %129, i64 0, i32 1
  %131 = load double, double* %130, align 8
  %132 = icmp eq i32 %120, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %119
  %134 = fcmp oeq double %131, 0.000000e+00
  br i1 %134, label %135, label %136

135:                                              ; preds = %133
  br label %136

136:                                              ; preds = %133, %135, %119
  %137 = phi i32 [ 0, %135 ], [ 1, %133 ], [ %121, %119 ]
  %138 = phi double [ 0xFFF0000000000000, %135 ], [ 0xFFF0000000000000, %133 ], [ %126, %119 ]
  %139 = load i32, i32* %81, align 4
  %140 = add i32 %139, -2
  %141 = icmp eq i32 %120, %140
  br i1 %141, label %142, label %145

142:                                              ; preds = %136
  %143 = fcmp oeq double %126, 1.000000e+00
  br i1 %143, label %144, label %145

144:                                              ; preds = %142
  br label %145

145:                                              ; preds = %142, %144, %136
  %146 = phi i32 [ %137, %144 ], [ %120, %142 ], [ %120, %136 ]
  %147 = phi double [ 0x7FF0000000000000, %144 ], [ 0x7FF0000000000000, %142 ], [ %131, %136 ]
  %148 = fcmp une double %138, %147
  br i1 %148, label %149, label %158

149:                                              ; preds = %145
  %150 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %4, align 8
  %151 = call dereferenceable(8) %"class.blink::Member.33"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %80, i32 %146) #10
  %152 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %152, align 8
  %154 = call dereferenceable(8) %"class.blink::Member.33"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %80, i32 %137) #10
  %155 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %155, align 8
  call void @_ZN5blink19InterpolationEffect30AddInterpolationsFromKeyframesERKNS_14PropertyHandleERKNS_8Keyframe24PropertySpecificKeyframeES7_dd(%"class.blink::InterpolationEffect"* %150, %"class.blink::PropertyHandle"* dereferenceable(24) %85, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %153, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %156, double %138, double %147) #10
  %157 = load i32, i32* %81, align 4
  br label %158

158:                                              ; preds = %149, %145
  %159 = phi i32 [ %157, %149 ], [ %139, %145 ]
  %160 = add i32 %159, -1
  %161 = icmp ult i32 %121, %160
  br i1 %161, label %119, label %86

162:                                              ; preds = %1, %73
  ret void
}

declare zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8), %"class.blink::AnimationTimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink19InterpolationEffect23GetActiveInterpolationsEdRNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::InterpolationEffect"*, double, %"class.blink::HeapVector.164"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS_7ElementERKNS_13ComputedStyleES5_PS4_(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::function", align 8
  %7 = alloca %"class.std::__1::function.1235", align 8
  %8 = bitcast %"class.std::__1::function"* %6 to %"class.blink::ComputedStyle"**
  store %"class.blink::ComputedStyle"* %2, %"class.blink::ComputedStyle"** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast [8 x i8]* %9 to %"class.blink::ComputedStyle"**
  store %"class.blink::ComputedStyle"* %3, %"class.blink::ComputedStyle"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::__function::__policy_invoker"* %11 to i64*
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink14PropertyHandleEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS2_7ElementERKNS2_13ComputedStyleESF_PSE_E3$_0S6_EEEEbPKNS0_16__policy_storageES5_" to i64), i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS4_7ElementERKNS4_13ComputedStyleESA_PS9_E3$_0FbRKNS4_14PropertyHandleEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %7, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::__function::__policy_invoker.1240"* %14 to i64*
  %16 = bitcast %"class.std::__1::function.1235"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink8Keyframe24PropertySpecificKeyframeEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS2_7ElementERKNS2_13ComputedStyleESG_PSF_E3$_1S7_EEEEbPKNS0_16__policy_storageES6_" to i64), i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %7, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS4_7ElementERKNS4_13ComputedStyleESA_PS9_E3$_1FbRKNS4_8Keyframe24PropertySpecificKeyframeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %17, align 8
  %18 = call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEE(%"class.blink::KeyframeEffectModelBase"* %0, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.blink::ComputedStyle"* %4, %"class.std::__1::function"* nonnull %6, %"class.std::__1::function.1235"* nonnull %7)
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"*, %"class.std::__1::function"* nocapture readonly, %"class.std::__1::function.1235"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::PropertyHandle", align 8
  %8 = alloca %"class.std::__1::function", align 8
  %9 = alloca %"class.std::__1::function.1235", align 8
  %10 = alloca %"class.WTF::HashSet.283", align 8
  %11 = alloca %"class.blink::PropertyHandle", align 8
  %12 = alloca %"class.std::__1::function", align 8
  %13 = alloca %"class.std::__1::function.1235", align 8
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0)
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %35, !prof !45

16:                                               ; preds = %6
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %16
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %34, !prof !45

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %22
  %26 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() #10
  store %"class.blink::CSSProperty"* %26, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 0), align 16
  %27 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyRotateEv() #10
  store %"class.blink::CSSProperty"* %27, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 1), align 8
  %28 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyScaleEv() #10
  store %"class.blink::CSSProperty"* %28, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 2), align 16
  %29 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTransformEv() #10
  store %"class.blink::CSSProperty"* %29, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 3), align 8
  %30 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTranslateEv() #10
  store %"class.blink::CSSProperty"* %30, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 4), align 16
  %31 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() #10
  store %"class.blink::CSSProperty"* %31, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 5), align 8
  %32 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() #10
  store %"class.blink::CSSProperty"* %32, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 6), align 16
  %33 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #10
  store %"class.blink::CSSProperty"* %33, %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 7), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties) #10
  br label %34

34:                                               ; preds = %19, %22, %25
  store %"class.blink::CSSProperty"** getelementptr inbounds ([8 x %"class.blink::CSSProperty"*], [8 x %"class.blink::CSSProperty"*]* @_ZZN5blink12_GLOBAL__N_122CompositablePropertiesEvE23kCompositableProperties, i64 0, i64 0), %"class.blink::CSSProperty"*** @_ZZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties) #10
  br label %35

35:                                               ; preds = %16, %34, %6
  %36 = bitcast %"class.blink::PropertyHandle"* %7 to i8*
  %37 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 1, i32 0
  %39 = bitcast %"class.blink::CSSProperty"** %38 to i64*
  %40 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::function"* %8 to i8*
  %42 = bitcast %"class.std::__1::function"* %4 to i8*
  %43 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::__function::__policy_invoker"* %44 to i64*
  %46 = bitcast %"struct.std::__1::__function::__policy_invoker"* %43 to i64*
  %47 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  %49 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::function.1235"* %9 to i8*
  %52 = bitcast %"class.std::__1::function.1235"* %5 to i8*
  %53 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %9, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %5, i64 0, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::__function::__policy_invoker.1240"* %54 to i64*
  %56 = bitcast %"struct.std::__1::__function::__policy_invoker.1240"* %53 to i64*
  %57 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %9, i64 0, i32 0, i32 2
  %58 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %5, i64 0, i32 0, i32 2
  %59 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %5, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %9, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %9, i64 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %9, i64 0, i32 0, i32 0
  br label %74

66:                                               ; preds = %176
  %67 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %70, i64 0, i32 144, i32 0, i32 0
  %72 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %71, align 8
  %73 = icmp eq %"class.blink::PropertyRegistry"* %72, null
  br i1 %73, label %397, label %179

74:                                               ; preds = %176, %35
  %75 = phi i64 [ 0, %35 ], [ %177, %176 ]
  %76 = phi i8 [ 0, %35 ], [ %146, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  %77 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** @_ZZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEEE23compositable_properties, align 8
  %78 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %77, i64 %75
  %79 = bitcast %"class.blink::CSSProperty"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  store i32 2, i32* %37, align 8
  store i64 %80, i64* %39, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %42, i64 16, i1 false) #10
  %81 = load i64, i64* %45, align 8
  store i64 %81, i64* %46, align 8
  %82 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %48, align 8
  store %"struct.std::__1::__function::__policy"* %82, %"struct.std::__1::__function::__policy"** %47, align 8
  %83 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %82, i64 0, i32 0
  %84 = load i8* (i8*)*, i8* (i8*)** %83, align 8
  %85 = icmp eq i8* (i8*)* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %74
  %87 = load i8*, i8** %49, align 8
  %88 = call i8* %84(i8* %87) #10
  store i8* %88, i8** %50, align 8
  br label %89

89:                                               ; preds = %74, %86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %52, i64 16, i1 false) #10
  %90 = load i64, i64* %55, align 8
  store i64 %90, i64* %56, align 8
  %91 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %58, align 8
  store %"struct.std::__1::__function::__policy"* %91, %"struct.std::__1::__function::__policy"** %57, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %91, i64 0, i32 0
  %93 = load i8* (i8*)*, i8* (i8*)** %92, align 8
  %94 = icmp eq i8* (i8*)* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = load i8*, i8** %59, align 8
  %97 = call i8* %93(i8* %96) #10
  store i8* %97, i8** %60, align 8
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)** %61, align 8
  %100 = call zeroext i1 %99(%"union.std::__1::__function::__policy_storage"* nonnull %62, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7) #10
  br i1 %100, label %101, label %143

101:                                              ; preds = %98
  %102 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %63, align 8
  %103 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %102, i64 0, i32 0, i32 0
  %104 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %103, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7) #10
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, null
  br i1 %105, label %143, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %104, i64 0, i32 1, i32 0, i32 0
  %108 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %107, align 8
  %109 = icmp eq %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %108, null
  br i1 %109, label %143, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %139, %110
  %119 = phi i8 [ 0, %110 ], [ %140, %139 ]
  %120 = and i8 %119, 1
  %121 = icmp ne i8 %120, 0
  br label %143

122:                                              ; preds = %110, %139
  %123 = phi %"class.blink::Member.33"* [ %141, %139 ], [ %112, %110 ]
  %124 = phi i8 [ %140, %139 ], [ 0, %110 ]
  %125 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %123, i64 0, i32 0, i32 0
  %126 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %125, align 8
  %127 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)** %64, align 8
  %128 = call zeroext i1 %127(%"union.std::__1::__function::__policy_storage"* nonnull %65, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %126) #10
  br i1 %128, label %129, label %139

129:                                              ; preds = %122
  %130 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %125, align 8
  %131 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %130 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)***
  %132 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*** %131, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)** %132, i64 5
  %134 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)** %133, align 8
  %135 = call zeroext i1 %134(%"class.blink::Keyframe::PropertySpecificKeyframe"* %130, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::ComputedStyle"* %3) #10
  %136 = zext i1 %135 to i8
  %137 = and i8 %124, 1
  %138 = or i8 %137, %136
  br label %139

139:                                              ; preds = %129, %122
  %140 = phi i8 [ %138, %129 ], [ %124, %122 ]
  %141 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %123, i64 1
  %142 = icmp eq %"class.blink::Member.33"* %141, %116
  br i1 %142, label %118, label %122

143:                                              ; preds = %98, %101, %106, %118
  %144 = phi i1 [ false, %98 ], [ %121, %118 ], [ false, %106 ], [ false, %101 ]
  %145 = zext i1 %144 to i8
  %146 = or i8 %76, %145
  %147 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %57, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %147, i64 0, i32 1
  %149 = load void (i8*)*, void (i8*)** %148, align 8
  %150 = icmp eq void (i8*)* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %143
  %152 = load i8*, i8** %60, align 8
  call void %149(i8* %152) #10
  br label %153

153:                                              ; preds = %143, %151
  %154 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %154, i64 0, i32 1
  %156 = load void (i8*)*, void (i8*)** %155, align 8
  %157 = icmp eq void (i8*)* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %153
  %159 = load i8*, i8** %50, align 8
  call void %156(i8* %159) #10
  br label %160

160:                                              ; preds = %153, %158
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #10
  br label %176

176:                                              ; preds = %160, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  %177 = add nuw nsw i64 %75, 1
  %178 = icmp eq i64 %177, 8
  br i1 %178, label %66, label %74

179:                                              ; preds = %66
  %180 = bitcast %"class.WTF::HashSet.283"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #10
  call void @_ZNK5blink13ComputedStyle16GetVariableNamesEv(%"class.WTF::HashSet.283"* nonnull sret %10, %"class.blink::ComputedStyle"* %2) #10
  %181 = getelementptr inbounds %"class.WTF::HashSet.283", %"class.WTF::HashSet.283"* %10, i64 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::HashSet.283", %"class.WTF::HashSet.283"* %10, i64 0, i32 0, i32 0
  %185 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %184, align 8
  %186 = getelementptr inbounds %"class.WTF::HashSet.283", %"class.WTF::HashSet.283"* %10, i64 0, i32 0, i32 1
  %187 = load i32, i32* %186, align 8
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %185, i64 %188
  br i1 %183, label %223, label %190

190:                                              ; preds = %179
  %191 = icmp eq i32 %187, 0
  br i1 %191, label %199, label %192

192:                                              ; preds = %190, %196
  %193 = phi %"class.WTF::AtomicString"* [ %197, %196 ], [ %185, %190 ]
  %194 = bitcast %"class.WTF::AtomicString"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  switch i64 %195, label %199 [
    i64 -1, label %196
    i64 0, label %196
  ]

196:                                              ; preds = %192, %192
  %197 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %193, i64 1
  %198 = icmp eq %"class.WTF::AtomicString"* %197, %189
  br i1 %198, label %223, label %192

199:                                              ; preds = %192, %190
  %200 = phi %"class.WTF::AtomicString"* [ %185, %190 ], [ %193, %192 ]
  %201 = icmp eq %"class.WTF::AtomicString"* %200, %189
  br i1 %201, label %223, label %202

202:                                              ; preds = %199
  %203 = bitcast %"class.blink::PropertyHandle"* %11 to i8*
  %204 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 0
  %205 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 1, i32 0
  %206 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::function"* %12 to i8*
  %208 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 1
  %209 = bitcast %"struct.std::__1::__function::__policy_invoker"* %208 to i64*
  %210 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 2
  %211 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 0, i32 0
  %212 = bitcast %"class.std::__1::function.1235"* %13 to i8*
  %213 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %13, i64 0, i32 0, i32 1
  %214 = bitcast %"struct.std::__1::__function::__policy_invoker.1240"* %213 to i64*
  %215 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %13, i64 0, i32 0, i32 2
  %216 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %13, i64 0, i32 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 1, i32 0
  %218 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %12, i64 0, i32 0, i32 0
  %219 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %13, i64 0, i32 0, i32 1, i32 0
  %220 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %13, i64 0, i32 0, i32 0
  br label %260

221:                                              ; preds = %384, %395, %392
  %222 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %184, align 8
  br label %223

223:                                              ; preds = %196, %179, %221, %199
  %224 = phi %"class.WTF::AtomicString"* [ %185, %199 ], [ %222, %221 ], [ %185, %179 ], [ %185, %196 ]
  %225 = phi i8 [ %146, %199 ], [ %385, %221 ], [ %146, %179 ], [ %146, %196 ]
  %226 = icmp eq %"class.WTF::AtomicString"* %224, null
  br i1 %226, label %258, label %227, !prof !8

227:                                              ; preds = %223
  %228 = load i32, i32* %186, align 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %256, label %230

230:                                              ; preds = %227
  %231 = zext i32 %228 to i64
  br label %232

232:                                              ; preds = %253, %230
  %233 = phi i64 [ 0, %230 ], [ %254, %253 ]
  %234 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %224, i64 %233
  %235 = bitcast %"class.WTF::AtomicString"* %234 to i8**
  %236 = load i8*, i8** %235, align 8
  %237 = bitcast i8* %236 to %"class.WTF::StringImpl"*
  %238 = ptrtoint i8* %236 to i64
  switch i64 %238, label %239 [
    i64 -1, label %253
    i64 0, label %253
  ]

239:                                              ; preds = %232
  %240 = getelementptr inbounds i8, i8* %236, i64 8
  %241 = bitcast i8* %240 to i32*
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = bitcast i8* %236 to i32*
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %239
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %239
  %250 = phi i32 [ %248, %247 ], [ %246, %239 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #10
  br label %253

253:                                              ; preds = %252, %249, %232, %232
  %254 = add nuw nsw i64 %233, 1
  %255 = icmp eq i64 %254, %231
  br i1 %255, label %256, label %232

256:                                              ; preds = %253, %227
  %257 = bitcast %"class.WTF::AtomicString"* %224 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %257) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %184, align 8
  br label %258

258:                                              ; preds = %223, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #10
  %259 = and i8 %225, 1
  br label %397

260:                                              ; preds = %202, %395
  %261 = phi i8 [ %146, %202 ], [ %385, %395 ]
  %262 = phi %"class.WTF::AtomicString"* [ %200, %202 ], [ %389, %395 ]
  %263 = call zeroext i1 @_ZNK5blink16PropertyRegistry13WasReferencedERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"* nonnull %72, %"class.WTF::AtomicString"* dereferenceable(8) %262) #10
  br i1 %263, label %384, label %264

264:                                              ; preds = %260
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #10
  store i32 3, i32* %204, align 8
  %265 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #10
  store %"class.blink::CSSProperty"* %265, %"class.blink::CSSProperty"** %205, align 8
  %266 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %262, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  store %"class.WTF::StringImpl"* %267, %"class.WTF::StringImpl"** %206, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %286, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %286

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = zext i32 %276 to i33
  %278 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %277, i33 1) #10
  %279 = extractvalue { i33, i1 } %278, 1
  %280 = extractvalue { i33, i1 } %278, 0
  %281 = icmp slt i33 %280, 0
  %282 = or i1 %279, %281
  br i1 %282, label %283, label %284, !prof !2

283:                                              ; preds = %274
  call void @llvm.trap() #10
  unreachable

284:                                              ; preds = %274
  %285 = trunc i33 %280 to i32
  store i32 %285, i32* %275, align 4
  br label %286

286:                                              ; preds = %264, %269, %284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %207, i8* align 8 %42, i64 16, i1 false) #10
  %287 = load i64, i64* %45, align 8
  store i64 %287, i64* %209, align 8
  %288 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %48, align 8
  store %"struct.std::__1::__function::__policy"* %288, %"struct.std::__1::__function::__policy"** %210, align 8
  %289 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %288, i64 0, i32 0
  %290 = load i8* (i8*)*, i8* (i8*)** %289, align 8
  %291 = icmp eq i8* (i8*)* %290, null
  br i1 %291, label %295, label %292

292:                                              ; preds = %286
  %293 = load i8*, i8** %49, align 8
  %294 = call i8* %290(i8* %293) #10
  store i8* %294, i8** %211, align 8
  br label %295

295:                                              ; preds = %286, %292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %212, i8* align 8 %52, i64 16, i1 false) #10
  %296 = load i64, i64* %55, align 8
  store i64 %296, i64* %214, align 8
  %297 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %58, align 8
  store %"struct.std::__1::__function::__policy"* %297, %"struct.std::__1::__function::__policy"** %215, align 8
  %298 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %297, i64 0, i32 0
  %299 = load i8* (i8*)*, i8* (i8*)** %298, align 8
  %300 = icmp eq i8* (i8*)* %299, null
  br i1 %300, label %304, label %301

301:                                              ; preds = %295
  %302 = load i8*, i8** %59, align 8
  %303 = call i8* %299(i8* %302) #10
  store i8* %303, i8** %216, align 8
  br label %304

304:                                              ; preds = %295, %301
  %305 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)** %217, align 8
  %306 = call zeroext i1 %305(%"union.std::__1::__function::__policy_storage"* nonnull %218, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %11) #10
  br i1 %306, label %307, label %349

307:                                              ; preds = %304
  %308 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %63, align 8
  %309 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %308, i64 0, i32 0, i32 0
  %310 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %309, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %11) #10
  %311 = icmp eq %"struct.WTF::KeyValuePair"* %310, null
  br i1 %311, label %349, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %310, i64 0, i32 1, i32 0, i32 0
  %314 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %313, align 8
  %315 = icmp eq %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %314, null
  br i1 %315, label %349, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %314, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %314, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %320 = load i32, i32* %319, align 4
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %318, i64 %321
  %323 = icmp eq i32 %320, 0
  br i1 %323, label %324, label %328

324:                                              ; preds = %345, %316
  %325 = phi i8 [ 0, %316 ], [ %346, %345 ]
  %326 = and i8 %325, 1
  %327 = icmp ne i8 %326, 0
  br label %349

328:                                              ; preds = %316, %345
  %329 = phi %"class.blink::Member.33"* [ %347, %345 ], [ %318, %316 ]
  %330 = phi i8 [ %346, %345 ], [ 0, %316 ]
  %331 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %329, i64 0, i32 0, i32 0
  %332 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %331, align 8
  %333 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)** %219, align 8
  %334 = call zeroext i1 %333(%"union.std::__1::__function::__policy_storage"* nonnull %220, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %332) #10
  br i1 %334, label %335, label %345

335:                                              ; preds = %328
  %336 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %331, align 8
  %337 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %336 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)***
  %338 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*** %337, align 8
  %339 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)** %338, i64 5
  %340 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)** %339, align 8
  %341 = call zeroext i1 %340(%"class.blink::Keyframe::PropertySpecificKeyframe"* %336, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %11, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::ComputedStyle"* %3) #10
  %342 = zext i1 %341 to i8
  %343 = and i8 %330, 1
  %344 = or i8 %343, %342
  br label %345

345:                                              ; preds = %335, %328
  %346 = phi i8 [ %344, %335 ], [ %330, %328 ]
  %347 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %329, i64 1
  %348 = icmp eq %"class.blink::Member.33"* %347, %322
  br i1 %348, label %324, label %328

349:                                              ; preds = %304, %307, %312, %324
  %350 = phi i1 [ false, %304 ], [ %327, %324 ], [ false, %312 ], [ false, %307 ]
  %351 = zext i1 %350 to i8
  %352 = and i8 %261, 1
  %353 = or i8 %352, %351
  %354 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %215, align 8
  %355 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %354, i64 0, i32 1
  %356 = load void (i8*)*, void (i8*)** %355, align 8
  %357 = icmp eq void (i8*)* %356, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %349
  %359 = load i8*, i8** %216, align 8
  call void %356(i8* %359) #10
  br label %360

360:                                              ; preds = %349, %358
  %361 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %210, align 8
  %362 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %361, i64 0, i32 1
  %363 = load void (i8*)*, void (i8*)** %362, align 8
  %364 = icmp eq void (i8*)* %363, null
  br i1 %364, label %367, label %365

365:                                              ; preds = %360
  %366 = load i8*, i8** %211, align 8
  call void %363(i8* %366) #10
  br label %367

367:                                              ; preds = %360, %365
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %369, label %383, label %370

370:                                              ; preds = %367
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  br i1 %374, label %377, label %379

377:                                              ; preds = %370
  %378 = add i32 %376, -1
  store i32 %378, i32* %375, align 4
  br label %379

379:                                              ; preds = %377, %370
  %380 = phi i32 [ %378, %377 ], [ %376, %370 ]
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %368) #10
  br label %383

383:                                              ; preds = %367, %379, %382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #10
  br label %384

384:                                              ; preds = %260, %383
  %385 = phi i8 [ %353, %383 ], [ %261, %260 ]
  %386 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %262, i64 1
  %387 = icmp eq %"class.WTF::AtomicString"* %386, %189
  br i1 %387, label %221, label %388

388:                                              ; preds = %384, %392
  %389 = phi %"class.WTF::AtomicString"* [ %393, %392 ], [ %386, %384 ]
  %390 = bitcast %"class.WTF::AtomicString"* %389 to i64*
  %391 = load i64, i64* %390, align 8
  switch i64 %391, label %395 [
    i64 -1, label %392
    i64 0, label %392
  ]

392:                                              ; preds = %388, %388
  %393 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %389, i64 1
  %394 = icmp eq %"class.WTF::AtomicString"* %393, %189
  br i1 %394, label %221, label %388

395:                                              ; preds = %388
  %396 = icmp eq %"class.WTF::AtomicString"* %389, %189
  br i1 %396, label %221, label %260

397:                                              ; preds = %66, %258
  %398 = phi i8 [ %259, %258 ], [ %146, %66 ]
  %399 = icmp ne i8 %398, 0
  ret i1 %399
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS_7ElementERKNS_13ComputedStyleEPS4_(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::function", align 8
  %7 = alloca %"class.std::__1::function.1235", align 8
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 12
  %9 = load i8, i8* %8, align 1, !range !24
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %4
  store i8 0, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %12 = ptrtoint i8* %5 to i64
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::__function::__policy_invoker"* %13 to i64*
  %15 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink14PropertyHandleEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS2_7ElementERKNS2_13ComputedStyleEPSE_E3$_2S6_EEEEbPKNS0_16__policy_storageES5_" to i64), i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS4_7ElementERKNS4_13ComputedStyleEPS9_E3$_2FbRKNS4_14PropertyHandleEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  %17 = bitcast %"class.std::__1::function.1235"* %7 to i64*
  store i64 %12, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink8Keyframe24PropertySpecificKeyframeEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS2_7ElementERKNS2_13ComputedStyleEPSF_E3$_3S7_EEEEbPKNS0_16__policy_storageES6_" to i64)>, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %7, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK5blink23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS4_7ElementERKNS4_13ComputedStyleEPS9_E3$_3FbRKNS4_8Keyframe24PropertySpecificKeyframeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %20, align 8
  %21 = call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30SnapshotCompositablePropertiesERNS_7ElementERKNS_13ComputedStyleEPS4_NSt3__18functionIFbRKNS_14PropertyHandleEEEENS8_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEE(%"class.blink::KeyframeEffectModelBase"* %0, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::ComputedStyle"* %3, %"class.std::__1::function"* nonnull %6, %"class.std::__1::function.1235"* nonnull %7)
  %22 = xor i1 %21, true
  %23 = load i8, i8* %5, align 1
  %24 = icmp eq i8 %23, 0
  %25 = or i1 %24, %22
  br i1 %25, label %36, label %26

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 2
  %32 = bitcast %"class.blink::UseCounter"* %31 to void (%"class.blink::UseCounter"*, i32)***
  %33 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %33, i64 3
  %35 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %34, align 8
  call void %35(%"class.blink::UseCounter"* %31, i32 664) #10
  br label %36

36:                                               ; preds = %11, %26
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  br label %37

37:                                               ; preds = %4, %36
  %38 = phi i1 [ %21, %36 ], [ false, %4 ]
  ret i1 %38
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase27SnapshotCompositorKeyFramesERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS7_NSt3__18functionIFbS3_EEENSB_IFbRKNS_8Keyframe24PropertySpecificKeyframeEEEE(%"class.blink::KeyframeEffectModelBase"* nocapture readonly, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"*, %"class.std::__1::function"*, %"class.std::__1::function.1235"*) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %9 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::PropertyHandle"*)** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 %9(%"union.std::__1::__function::__policy_storage"* %10, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %11, label %12, label %58

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %14, i64 0, i32 0, i32 0
  %16 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %15, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %16, null
  br i1 %17, label %58, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %19, align 8
  %21 = icmp eq %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %20, null
  br i1 %21, label %58, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %24, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %6, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::function.1235", %"class.std::__1::function.1235"* %6, i64 0, i32 0, i32 0
  br label %37

33:                                               ; preds = %54, %22
  %34 = phi i8 [ 0, %22 ], [ %55, %54 ]
  %35 = and i8 %34, 1
  %36 = icmp ne i8 %35, 0
  br label %58

37:                                               ; preds = %30, %54
  %38 = phi %"class.blink::Member.33"* [ %24, %30 ], [ %56, %54 ]
  %39 = phi i8 [ 0, %30 ], [ %55, %54 ]
  %40 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %38, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %40, align 8
  %42 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)** %31, align 8
  %43 = tail call zeroext i1 %42(%"union.std::__1::__function::__policy_storage"* %32, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %41) #10
  br i1 %43, label %44, label %54

44:                                               ; preds = %37
  %45 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %40, align 8
  %46 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %45 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)***
  %47 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)** %47, i64 5
  %49 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::Keyframe::PropertySpecificKeyframe"* %45, %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.blink::Element"* dereferenceable(104) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.blink::ComputedStyle"* %4) #10
  %51 = zext i1 %50 to i8
  %52 = and i8 %39, 1
  %53 = or i8 %52, %51
  br label %54

54:                                               ; preds = %37, %44
  %55 = phi i8 [ %53, %44 ], [ %39, %37 ]
  %56 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %38, i64 1
  %57 = icmp eq %"class.blink::Member.33"* %56, %28
  br i1 %57, label %33, label %37

58:                                               ; preds = %12, %33, %18, %7
  %59 = phi i1 [ false, %7 ], [ %36, %33 ], [ false, %18 ], [ false, %12 ]
  ret i1 %59
}

declare void @_ZNK5blink13ComputedStyle16GetVariableNamesEv(%"class.WTF::HashSet.283"* sret, %"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PropertyRegistry13WasReferencedERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTransformEv() #10
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  store i32 2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %7, %"class.blink::CSSProperty"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.blink::KeyframeEffectModelBase"* %0 to i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)***
  %12 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %12, i64 3
  %14 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %13, align 8
  %15 = call zeroext i1 %14(%"class.blink::KeyframeEffectModelBase"* %0, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #10
  br i1 %15, label %98, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyRotateEv() #10
  %19 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %18, %"class.blink::CSSProperty"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*** %11, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %22, i64 3
  %24 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %23, align 8
  %25 = call zeroext i1 %24(%"class.blink::KeyframeEffectModelBase"* %0, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  br i1 %25, label %80, label %26

26:                                               ; preds = %16
  %27 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %28 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyScaleEv() #10
  %29 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  store i32 2, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %28, %"class.blink::CSSProperty"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %32 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*** %11, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %32, i64 3
  %34 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.blink::KeyframeEffectModelBase"* %0, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  br i1 %35, label %62, label %36

36:                                               ; preds = %26
  %37 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %38 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTranslateEv() #10
  %39 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  store i32 2, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %38, %"class.blink::CSSProperty"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %42 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*** %11, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %42, i64 3
  %44 = load i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)** %43, align 8
  %45 = call zeroext i1 %44(%"class.blink::KeyframeEffectModelBase"* %0, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %61

61:                                               ; preds = %60, %57, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  br label %62

62:                                               ; preds = %26, %61
  %63 = phi i1 [ %45, %61 ], [ true, %26 ]
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #10
  br label %79

79:                                               ; preds = %78, %75, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  br label %80

80:                                               ; preds = %16, %79
  %81 = phi i1 [ %63, %79 ], [ true, %16 ]
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #10
  br label %97

97:                                               ; preds = %80, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br label %98

98:                                               ; preds = %1, %97
  %99 = phi i1 [ %81, %97 ], [ true, %1 ]
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #10
  br label %115

115:                                              ; preds = %98, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret i1 %99
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTransformEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyRotateEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyScaleEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTranslateEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23KeyframeEffectModelBase35SetLogicalPropertyResolutionContextENS_13TextDirectionENS_11WritingModeE(%"class.blink::KeyframeEffectModelBase"*, i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %63, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0
  br label %12

9:                                                ; preds = %33
  %10 = and i8 %34, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %63, label %38

12:                                               ; preds = %7, %33
  %13 = phi i32 [ 0, %7 ], [ %35, %33 ]
  %14 = phi i8 [ 0, %7 ], [ %34, %33 ]
  %15 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %13) #10
  %16 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %16, align 8
  %18 = bitcast %"class.blink::Keyframe"* %17 to i1 (%"class.blink::Keyframe"*)***
  %19 = load i1 (%"class.blink::Keyframe"*)**, i1 (%"class.blink::Keyframe"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %19, i64 5
  %21 = load i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::Keyframe"* %17) #10
  %23 = bitcast %"class.blink::Keyframe"* %17 to %"class.blink::StringKeyframe"*
  %24 = icmp eq %"class.blink::Keyframe"* %17, null
  %25 = xor i1 %22, true
  %26 = or i1 %24, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %17, i64 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !24
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZN5blink14StringKeyframe35SetLogicalPropertyResolutionContextENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe"* nonnull %23, i8 zeroext %1, i8 zeroext %2) #10
  br label %33

33:                                               ; preds = %27, %12, %31
  %34 = phi i8 [ 1, %31 ], [ %14, %27 ], [ %14, %12 ]
  %35 = add nuw i32 %13, 1
  %36 = load i32, i32* %4, align 4
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %12, label %9

38:                                               ; preds = %9
  %39 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %40 = bitcast %"class.blink::Member.10"* %39 to i64*
  store atomic i64 0, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::InterpolationEffect"*, %"class.blink::InterpolationEffect"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %42, i64 0, i32 0
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %42, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = bitcast %"class.WTF::Vector.45"* %44 to i8**
  br i1 %51, label %57, label %53

53:                                               ; preds = %48
  %54 = load i8*, i8** %52, align 8
  %55 = zext i32 %50 to i64
  %56 = shl nuw nsw i64 %55, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %54, i64 %56) #10
  store i32 0, i32* %49, align 4
  br label %57

57:                                               ; preds = %53, %48
  %58 = load i8*, i8** %52, align 8
  %59 = bitcast %"class.WTF::Vector.45"* %44 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store i32 0, i32* %45, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %58) #10
  br label %60

60:                                               ; preds = %38, %57
  %61 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 6
  store double 0x7FF8000000000000, double* %61, align 8
  %62 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 12
  store i8 1, i8* %62, align 1
  br label %63

63:                                               ; preds = %9, %3, %60
  %64 = phi i1 [ true, %60 ], [ false, %9 ], [ false, %3 ]
  ret i1 %64
}

declare zeroext i1 @_ZN5blink14StringKeyframe35SetLogicalPropertyResolutionContextENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe"*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #10
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::Member.10"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 3
  %31 = bitcast %"class.blink::Member.38"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to %"class.blink::InterpolationEffect"*
  %36 = getelementptr inbounds %"class.blink::InterpolationEffect", %"class.blink::InterpolationEffect"* %35, i64 0, i32 0
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* %36, i8* %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv) #10
  br label %41

41:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23KeyframeEffectModelBase29PropertySpecificKeyframeGroup14AppendKeyframeEPNS_8Keyframe24PropertySpecificKeyframeE(%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Keyframe::PropertySpecificKeyframe"*, align 8
  store %"class.blink::Keyframe::PropertySpecificKeyframe"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %24, label %9, !prof !2

9:                                                ; preds = %2
  %10 = ptrtoint %"class.blink::Keyframe::PropertySpecificKeyframe"* %1 to i64
  %11 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %11, align 8
  %13 = zext i32 %5 to i64
  %14 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %12, i64 %13
  %15 = bitcast %"class.blink::Member.33"* %14 to i64*
  store atomic i64 %10, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #10
  br label %21

21:                                               ; preds = %18, %9
  %22 = load i32, i32* %4, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %4, align 4
  br label %26

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.30"* %25, %"class.blink::Keyframe::PropertySpecificKeyframe"** nonnull dereferenceable(8) %3) #10
  br label %26

26:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23KeyframeEffectModelBase29PropertySpecificKeyframeGroup30AddSyntheticKeyframeIfRequiredE13scoped_refptrINS_14TimingFunctionEE(%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::TimingFunction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Keyframe::PropertySpecificKeyframe"*, align 8
  %4 = alloca %"class.blink::Keyframe::PropertySpecificKeyframe"*, align 8
  %5 = ptrtoint %"class.blink::TimingFunction"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %6, i32 0) #10
  %8 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %9, i64 0, i32 1
  %11 = load double, double* %10, align 8
  %12 = fcmp une double %11, 0.000000e+00
  br i1 %12, label %13, label %23

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = tail call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %6, i32 0) #10
  %16 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %16, align 8
  %18 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %17 to %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)***
  %19 = load %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)**, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)*, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)** %19, i64 10
  %21 = load %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)*, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)** %20, align 8
  %22 = tail call %"class.blink::Keyframe::PropertySpecificKeyframe"* %21(%"class.blink::Keyframe::PropertySpecificKeyframe"* %17, double 0.000000e+00, %"class.blink::TimingFunction"* %1) #10
  store %"class.blink::Keyframe::PropertySpecificKeyframe"* %22, %"class.blink::Keyframe::PropertySpecificKeyframe"** %4, align 8
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE6insertIPS4_EEvjOT_(%"class.WTF::Vector.30"* %6, i32 0, %"class.blink::Keyframe::PropertySpecificKeyframe"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %23

23:                                               ; preds = %13, %2
  %24 = phi i64 [ 0, %13 ], [ %5, %2 ]
  %25 = phi i1 [ true, %13 ], [ false, %2 ]
  %26 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -1
  %29 = call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %6, i32 %28) #10
  %30 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %31, i64 0, i32 1
  %33 = load double, double* %32, align 8
  %34 = fcmp une double %33, 1.000000e+00
  br i1 %34, label %35, label %68

35:                                               ; preds = %23
  %36 = load i32, i32* %26, align 4
  %37 = add i32 %36, -1
  %38 = call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %6, i32 %37) #10
  %39 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %39, align 8
  %41 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %40 to %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)***
  %42 = load %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)**, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)*, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)** %42, i64 10
  %44 = load %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)*, %"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)** %43, align 8
  %45 = call %"class.blink::Keyframe::PropertySpecificKeyframe"* %44(%"class.blink::Keyframe::PropertySpecificKeyframe"* %40, double 1.000000e+00, %"class.blink::TimingFunction"* null) #10
  %46 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  store %"class.blink::Keyframe::PropertySpecificKeyframe"* %45, %"class.blink::Keyframe::PropertySpecificKeyframe"** %3, align 8
  %47 = load i32, i32* %26, align 4
  %48 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %66, label %51, !prof !2

51:                                               ; preds = %35
  %52 = ptrtoint %"class.blink::Keyframe::PropertySpecificKeyframe"* %45 to i64
  %53 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %53, align 8
  %55 = zext i32 %47 to i64
  %56 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %54, i64 %55
  %57 = bitcast %"class.blink::Member.33"* %56 to i64*
  store atomic i64 %52, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %51
  %61 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %45 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #10
  br label %63

63:                                               ; preds = %60, %51
  %64 = load i32, i32* %26, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %26, align 4
  br label %67

66:                                               ; preds = %35
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.30"* %6, %"class.blink::Keyframe::PropertySpecificKeyframe"** nonnull dereferenceable(8) %3) #10
  br label %67

67:                                               ; preds = %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  br label %68

68:                                               ; preds = %67, %23
  %69 = phi i1 [ true, %67 ], [ %25, %23 ]
  %70 = icmp eq i64 %24, 0
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = inttoptr i64 %24 to %"class.blink::TimingFunction"*
  %73 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %72, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %84

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 -2
  %79 = bitcast %"class.base::RefCountedThreadSafe"* %78 to %"class.blink::TimingFunction"*
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %78 to void (%"class.blink::TimingFunction"*)***
  %81 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %81, i64 1
  %83 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %82, align 8
  call void %83(%"class.blink::TimingFunction"* nonnull %79) #10
  br label %84

84:                                               ; preds = %68, %71, %77
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23KeyframeEffectModelBase29PropertySpecificKeyframeGroup24RemoveRedundantKeyframesEv(%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -2
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %31, %1
  ret void

8:                                                ; preds = %1, %31
  %9 = phi i32 [ %15, %31 ], [ %5, %1 ]
  %10 = tail call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %2, i32 %9) #10
  %11 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %12, i64 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = add nsw i32 %9, -1
  %16 = tail call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %2, i32 %15) #10
  %17 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %18, i64 0, i32 1
  %20 = load double, double* %19, align 8
  %21 = fcmp oeq double %20, %14
  %22 = add nuw nsw i32 %9, 1
  %23 = tail call dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"* %2, i32 %22) #10
  %24 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %25, i64 0, i32 1
  %27 = load double, double* %26, align 8
  %28 = fcmp oeq double %27, %14
  %29 = and i1 %21, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %8
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.30"* %2, i32 %9)
  br label %31

31:                                               ; preds = %30, %8
  %32 = icmp sgt i32 %15, 0
  br i1 %32, label %8, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase20RequiresPropertyNodeEv(%"class.blink::KeyframeEffectModelBase"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.WTF::HashSet.160", align 8
  %5 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %167, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.WTF::HashSet.160"* %4 to i8*
  %14 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %4, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::HashSet.160", %"class.WTF::HashSet.160"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %18 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %20 = bitcast %union.anon.15* %19 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %25 = bitcast %union.anon.15* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %29

27:                                               ; preds = %164
  %28 = icmp eq %"class.blink::Member"* %166, %10
  br i1 %28, label %167, label %29

29:                                               ; preds = %12, %27
  %30 = phi %"class.blink::Member"* [ %6, %12 ], [ %166, %27 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %31 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %31, align 8
  %33 = bitcast %"class.blink::Keyframe"* %32 to void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)***
  %34 = load void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)**, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)** %34, i64 2
  %36 = load void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)*, void (%"class.WTF::HashSet.160"*, %"class.blink::Keyframe"*)** %35, align 8
  call void %36(%"class.WTF::HashSet.160"* nonnull sret %4, %"class.blink::Keyframe"* %32) #10
  %37 = load i32, i32* %14, align 4
  %38 = icmp eq i32 %37, 0
  %39 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %15, align 8
  %40 = load i32, i32* %16, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %39, i64 %41
  br i1 %38, label %75, label %43

43:                                               ; preds = %29
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %75, label %45

45:                                               ; preds = %43, %68
  %46 = phi %"class.blink::PropertyHandle"* [ %69, %68 ], [ %39, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  store i32 0, i32* %18, align 8, !alias.scope !46
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10, !alias.scope !46
  %47 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %46, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #10
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %62, %59, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %64 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %46, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = or i1 %47, %66
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %46, i64 1
  %70 = icmp eq %"class.blink::PropertyHandle"* %69, %42
  br i1 %70, label %71, label %45

71:                                               ; preds = %68, %63
  %72 = phi %"class.blink::PropertyHandle"* [ %42, %68 ], [ %46, %63 ]
  %73 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %15, align 8
  %74 = load i32, i32* %16, align 8
  br label %75

75:                                               ; preds = %71, %29, %43
  %76 = phi i32 [ %40, %29 ], [ 0, %43 ], [ %74, %71 ]
  %77 = phi %"class.blink::PropertyHandle"* [ %39, %29 ], [ %39, %43 ], [ %73, %71 ]
  %78 = phi %"class.blink::PropertyHandle"* [ %42, %29 ], [ %39, %43 ], [ %72, %71 ]
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %77, i64 %79
  %81 = icmp eq %"class.blink::PropertyHandle"* %78, %80
  br i1 %81, label %128, label %82

82:                                               ; preds = %75, %122
  %83 = phi %"class.blink::PropertyHandle"* [ %123, %122 ], [ %78, %75 ]
  %84 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = or i32 %85, 1
  %87 = icmp eq i32 %86, 3
  br i1 %87, label %88, label %125

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %83, i64 0, i32 1, i32 0
  %90 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  switch i32 %92, label %125 [
    i32 1, label %93
    i32 52, label %93
  ]

93:                                               ; preds = %88, %88
  %94 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %83, i64 1
  %95 = icmp eq %"class.blink::PropertyHandle"* %94, %42
  br i1 %95, label %122, label %96

96:                                               ; preds = %93, %119
  %97 = phi %"class.blink::PropertyHandle"* [ %120, %119 ], [ %94, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  store i32 0, i32* %23, align 8, !alias.scope !51
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #10, !alias.scope !51
  %98 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %97, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #10
  br label %114

114:                                              ; preds = %113, %110, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %115 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %97, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 1
  %118 = or i1 %98, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %97, i64 1
  %121 = icmp eq %"class.blink::PropertyHandle"* %120, %42
  br i1 %121, label %122, label %96

122:                                              ; preds = %114, %119, %93
  %123 = phi %"class.blink::PropertyHandle"* [ %42, %93 ], [ %97, %114 ], [ %42, %119 ]
  %124 = icmp eq %"class.blink::PropertyHandle"* %123, %80
  br i1 %124, label %125, label %82

125:                                              ; preds = %122, %88, %82
  %126 = phi i32 [ 1, %82 ], [ 1, %88 ], [ 4, %122 ]
  %127 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %15, align 8
  br label %128

128:                                              ; preds = %125, %75
  %129 = phi %"class.blink::PropertyHandle"* [ %77, %75 ], [ %127, %125 ]
  %130 = phi i32 [ 4, %75 ], [ %126, %125 ]
  %131 = icmp eq %"class.blink::PropertyHandle"* %129, null
  br i1 %131, label %164, label %132, !prof !8

132:                                              ; preds = %128
  %133 = load i32, i32* %16, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %162, label %135

135:                                              ; preds = %132
  %136 = zext i32 %133 to i64
  br label %137

137:                                              ; preds = %159, %135
  %138 = phi i64 [ 0, %135 ], [ %160, %159 ]
  %139 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %129, i64 %138, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %159, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %129, i64 %138, i32 2, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #10
  br label %159

159:                                              ; preds = %158, %155, %142, %137
  %160 = add nuw nsw i64 %138, 1
  %161 = icmp eq i64 %160, %136
  br i1 %161, label %162, label %137

162:                                              ; preds = %159, %132
  %163 = bitcast %"class.blink::PropertyHandle"* %129 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %163) #10
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %15, align 8
  br label %164

164:                                              ; preds = %128, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %165 = icmp eq i32 %130, 4
  %166 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 1
  br i1 %165, label %27, label %167

167:                                              ; preds = %164, %27, %1
  %168 = phi i1 [ false, %1 ], [ false, %27 ], [ true, %164 ]
  ret i1 %168
}

declare void @_ZN5blink19InterpolationEffect30AddInterpolationsFromKeyframesERKNS_14PropertyHandleERKNS_8Keyframe24PropertySpecificKeyframeES7_dd(%"class.blink::InterpolationEffect"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0)
  %4 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  br i1 %8, label %54, label %15

15:                                               ; preds = %1
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %54, label %17

17:                                               ; preds = %15
  %18 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %19 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %21 = bitcast %union.anon.15* %20 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %47, %17
  %24 = phi %"struct.WTF::KeyValuePair"* [ %10, %17 ], [ %48, %47 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  store i32 0, i32* %19, align 8, !alias.scope !56
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #10, !alias.scope !56
  %26 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %25, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #10
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %41, %38, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 1
  %46 = or i1 %26, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, %14
  br i1 %49, label %50, label %23

50:                                               ; preds = %47, %42
  %51 = phi %"struct.WTF::KeyValuePair"* [ %14, %47 ], [ %24, %42 ]
  %52 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %53 = load i32, i32* %11, align 8
  br label %54

54:                                               ; preds = %50, %1, %15
  %55 = phi i32 [ %12, %1 ], [ 0, %15 ], [ %53, %50 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ %10, %1 ], [ %10, %15 ], [ %52, %50 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %14, %1 ], [ %10, %15 ], [ %51, %50 ]
  %58 = zext i32 %55 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 %58
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %57, %59
  br i1 %60, label %121, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %64 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %65 = bitcast %union.anon.15* %64 to i8*
  %66 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %67

67:                                               ; preds = %61, %118
  %68 = phi %"struct.WTF::KeyValuePair"* [ %57, %61 ], [ %119, %118 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %72, i64 %75
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %88, label %80

78:                                               ; preds = %80
  %79 = icmp eq %"class.blink::Member.33"* %87, %76
  br i1 %79, label %88, label %80

80:                                               ; preds = %67, %78
  %81 = phi %"class.blink::Member.33"* [ %87, %78 ], [ %72, %67 ]
  %82 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %83, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %81, i64 1
  br i1 %86, label %78, label %121

88:                                               ; preds = %78, %67
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 1
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %89, %14
  br i1 %90, label %118, label %91

91:                                               ; preds = %88, %115
  %92 = phi %"struct.WTF::KeyValuePair"* [ %116, %115 ], [ %89, %88 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10
  store i32 0, i32* %63, align 8, !alias.scope !61
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #10, !alias.scope !61
  %94 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %93, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #10
  br label %110

110:                                              ; preds = %109, %106, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 1
  %114 = or i1 %94, %113
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 1
  %117 = icmp eq %"struct.WTF::KeyValuePair"* %116, %14
  br i1 %117, label %118, label %91

118:                                              ; preds = %110, %115, %88
  %119 = phi %"struct.WTF::KeyValuePair"* [ %14, %88 ], [ %92, %110 ], [ %14, %115 ]
  %120 = icmp eq %"struct.WTF::KeyValuePair"* %119, %59
  br i1 %120, label %121, label %67

121:                                              ; preds = %118, %80, %54
  %122 = phi i1 [ true, %54 ], [ false, %80 ], [ true, %118 ]
  ret i1 %122
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.33"* %26, null
  %32 = icmp ne %"class.blink::Member.33"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !8

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.33"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.33"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.33"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.33"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.33"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !66

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.33"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.33"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.33"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.33"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.33"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.33"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 1
  %68 = bitcast %"class.blink::Member.33"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.33"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 2
  %73 = bitcast %"class.blink::Member.33"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.33"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 3
  %78 = bitcast %"class.blink::Member.33"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.33"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 4
  %83 = bitcast %"class.blink::Member.33"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.33"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 5
  %88 = bitcast %"class.blink::Member.33"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.33"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 6
  %93 = bitcast %"class.blink::Member.33"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.33"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 7
  %98 = bitcast %"class.blink::Member.33"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.33"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.33"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.33"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.33"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.33"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.33"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #10
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.33"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #10
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE6insertIPS4_EEvjOT_(%"class.WTF::Vector.30"*, i32, %"class.blink::Keyframe::PropertySpecificKeyframe"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.30"* %0, i32 %35) #10
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.33"* %45, null
  %47 = icmp ne %"class.blink::Member.33"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !8

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.33"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.33"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.33"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.33"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.33"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.33"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.33"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.33"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.33"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.33"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.33"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.33"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #10
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.33"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #10
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBaseD2Ev(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBaseD0Ev(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0)
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %5, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  %7 = icmp ne %"struct.WTF::KeyValuePair"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"* %0)
  %3 = xor i1 %2, true
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE(%"class.blink::HeapVector"* noalias sret, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %4, %"class.WTF::Vector"* dereferenceable(16) %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase27IsStringKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase31IsTransitionKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.18"*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.15* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8, !alias.scope !68
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !alias.scope !68
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member"* null, %"class.blink::Member"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %9) #10
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking.1327"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #10
  %13 = ptrtoint %"class.blink::HeapVectorBacking.1327"* %12 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.1327"* %12 to %"class.blink::Member"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.1327", %"class.blink::HeapVectorBacking.1327"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #10
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %30 = icmp ne %"class.blink::Member"* %24, null
  %31 = icmp ne %"class.blink::Member"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !8

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member"* %24 to i8*
  %37 = bitcast %"class.blink::Member"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #10
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1327"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1327"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1327"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.161"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 0
  %6 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyHandle"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.161"* %0, %"class.blink::PropertyHandle"* null)
  %10 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::PropertyHandle"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.15* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %62, %11
  %39 = phi i64 [ 0, %11 ], [ %68, %62 ]
  %40 = phi i64 [ %19, %11 ], [ %70, %62 ]
  %41 = phi %"class.blink::PropertyHandle"* [ null, %11 ], [ %66, %62 ]
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store i32 0, i32* %21, align 8, !alias.scope !73
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10, !alias.scope !73
  %43 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #10
  br label %59

59:                                               ; preds = %38, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br i1 %43, label %71, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %61, label %139, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %42, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* %41
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %37, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %16
  br label %38

71:                                               ; preds = %59
  %72 = icmp eq %"class.blink::PropertyHandle"* %41, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::PropertyHandle"* %42 to i8*
  br label %83

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::PropertyHandle"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #10
  %77 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %73, %75
  %84 = phi i8* [ %74, %73 ], [ %76, %75 ]
  %85 = phi %"class.blink::PropertyHandle"* [ %42, %73 ], [ %41, %75 ]
  %86 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %86, i64 16, i1 false) #10
  %87 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %85, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #10
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %96
  call void @llvm.trap() #10
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %83
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = bitcast %"class.WTF::AtomicString"* %87 to i64*
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  store i64 %109, i64* %110, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #10
  br label %127

127:                                              ; preds = %108, %123, %126
  %128 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  %134 = shl i32 %133, 1
  %135 = load i32, i32* %13, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %139, label %137

137:                                              ; preds = %127
  %138 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.161"* %0, %"class.blink::PropertyHandle"* %85)
  br label %139

139:                                              ; preds = %60, %127, %137
  %140 = phi i8 [ 1, %127 ], [ 1, %137 ], [ 0, %60 ]
  %141 = phi %"class.blink::PropertyHandle"* [ %85, %127 ], [ %138, %137 ], [ %42, %60 ]
  %142 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %141, 0
  %143 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %142, i8 %140, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.161"*, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.blink::PropertyHandle"*
  %37 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.161"* %0, %"class.blink::PropertyHandle"* %36, i32 %32, %"class.blink::PropertyHandle"* %1) #10
  ret %"class.blink::PropertyHandle"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.161"*, %"class.blink::PropertyHandle"*, i32, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.161", align 8
  %7 = bitcast %"class.WTF::HashTable.161"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.161"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::PropertyHandle"* %1, %"class.blink::PropertyHandle"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::PropertyHandle"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.161"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.15* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %73

26:                                               ; preds = %134
  %27 = bitcast %"class.WTF::HashTable.161"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"class.blink::PropertyHandle"* [ null, %17 ], [ %135, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %136, %26 ]
  %34 = bitcast %"class.WTF::HashTable.161"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"class.blink::PropertyHandle"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi i64 [ 0, %40 ], [ %65, %64 ]
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %64

64:                                               ; preds = %63, %60, %47, %42
  %65 = add nuw nsw i64 %43, 1
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %64, %38
  %68 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #10
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %29, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret %"class.blink::PropertyHandle"* %32

73:                                               ; preds = %20, %134
  %74 = phi %"class.blink::PropertyHandle"* [ null, %20 ], [ %135, %134 ]
  %75 = phi i32 [ 0, %20 ], [ %136, %134 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %76, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  store i32 0, i32* %22, align 8, !alias.scope !78
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10, !alias.scope !78
  %79 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %78, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #10
  br label %95

95:                                               ; preds = %73, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %78, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = or i1 %79, %98
  br i1 %99, label %134, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %102 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77
  %103 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.161"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %102) #10
  %104 = extractvalue { %"class.blink::PropertyHandle"*, i8 } %103, 0
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %100, %117, %120
  %122 = bitcast %"class.blink::PropertyHandle"* %104 to i8*
  %123 = bitcast %"class.blink::PropertyHandle"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #10
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2
  %125 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77, i32 2
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %131 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 %77
  %132 = icmp eq %"class.blink::PropertyHandle"* %131, %3
  %133 = select i1 %132, %"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* %74
  br label %134

134:                                              ; preds = %95, %121
  %135 = phi %"class.blink::PropertyHandle"* [ %74, %95 ], [ %133, %121 ]
  %136 = add i32 %75, 1
  %137 = load i32, i32* %13, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %26, label %73
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.161"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.161", %"class.WTF::HashTable.161"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.15* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %60, %2
  %32 = phi i64 [ 0, %2 ], [ %64, %60 ]
  %33 = phi i64 [ 0, %2 ], [ %66, %60 ]
  %34 = phi i64 [ %12, %2 ], [ %68, %60 ]
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %34
  %36 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store i32 0, i32* %14, align 8, !alias.scope !83
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10, !alias.scope !83
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br i1 %37, label %54, label %58

54:                                               ; preds = %53
  %55 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  %56 = icmp eq i64 %32, 0
  %57 = select i1 %56, i64 %55, i64 %32
  br label %71

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %35, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = select i1 %63, i64 %36, i64 %32
  %65 = icmp eq i64 %33, 0
  %66 = select i1 %65, i64 %30, i64 %33
  %67 = add i64 %66, %34
  %68 = and i64 %67, %9
  br label %31

69:                                               ; preds = %58
  %70 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i64 [ %57, %54 ], [ %70, %69 ]
  %73 = phi i8 [ 0, %54 ], [ 1, %69 ]
  %74 = inttoptr i64 %72 to %"class.blink::PropertyHandle"*
  %75 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %74, 0
  %76 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1327"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1327"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1327"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !8

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1327", %"class.blink::HeapVectorBacking.1327"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1327", %"class.blink::HeapVectorBacking.1327"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = icmp ugt %"class.blink::Member"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %28) #10
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member"* %1 to i64
  %31 = ptrtoint %"class.blink::Member"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %40) #10
  %41 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %52, i8* %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member"*, %"class.blink::Member"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member"* %65, null
  %67 = icmp ne %"class.blink::Member"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !8

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member"* %65 to i8*
  %72 = bitcast %"class.blink::Member"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #10
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #10
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !8

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1327"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1327"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1327", %"class.blink::HeapVectorBacking.1327"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !24
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector"*, %"class.blink::Member.56"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %20) #10
  %21 = load i32, i32* %7, align 4
  br label %22

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %13 ], [ %8, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %9, %23
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %1, i64 %39
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Member"*, %"class.blink::Member"** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %44, i64 %46
  br label %48

48:                                               ; preds = %42, %59
  %49 = phi %"class.blink::Member"* [ %60, %59 ], [ %47, %42 ]
  %50 = phi %"class.blink::Member.56"* [ %61, %59 ], [ %1, %42 ]
  %51 = bitcast %"class.blink::Member.56"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %52 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #10
  br label %59

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 1
  %61 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %50, i64 1
  %62 = icmp eq %"class.blink::Member.56"* %61, %40
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %38
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink14PropertyHandleEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS2_7ElementERKNS2_13ComputedStyleESF_PSE_E3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.blink::PropertyHandle"* dereferenceable(24)) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.blink::ComputedStyle"**
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %6 = bitcast [8 x i8]* %5 to %"class.blink::ComputedStyle"**
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call zeroext i1 @_ZN5blink19CSSPropertyEquality15PropertiesEqualERKNS_14PropertyHandleERKNS_13ComputedStyleES6_(%"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %7) #10
  %9 = xor i1 %8, true
  ret i1 %9
}

declare zeroext i1 @_ZN5blink19CSSPropertyEquality15PropertiesEqualERKNS_14PropertyHandleERKNS_13ComputedStyleES6_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink8Keyframe24PropertySpecificKeyframeEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase34SnapshotNeutralCompositorKeyframesERNS2_7ElementERKNS2_13ComputedStyleESG_PSF_E3$_1S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32)) #0 align 2 {
  %3 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %1 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %4 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %4, i64 2
  %6 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::Keyframe::PropertySpecificKeyframe"* %1) #10
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink14PropertyHandleEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS2_7ElementERKNS2_13ComputedStyleEPSE_E3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.blink::PropertyHandle"* nocapture readnone dereferenceable(24)) #8 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN5blink8Keyframe24PropertySpecificKeyframeEEE11__call_implINS0_20__default_alloc_funcIZNKS2_23KeyframeEffectModelBase41SnapshotAllCompositorKeyframesIfNecessaryERNS2_7ElementERKNS2_13ComputedStyleEPSF_E3$_3S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32)) #0 align 2 {
  %3 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %1 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %4 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %4, i64 2
  %6 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::Keyframe::PropertySpecificKeyframe"* %1) #10
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = load i8, i8* %10, align 1, !range !24
  %12 = or i8 %11, %8
  store i8 %12, i8* %10, align 1
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_EEPKS8_RKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.15* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8, !alias.scope !88
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !alias.scope !88
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair"* %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.58"*, double* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  %8 = icmp ugt double* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds double, double* %7, i64 %10
  %12 = icmp ugt double* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !8

24:                                               ; preds = %13
  %25 = icmp eq double* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to double*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load double*, double** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne double* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast double* %38 to i8*
  br i1 %41, label %43, label %49, !prof !8

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.58"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to double*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint double* %1 to i64
  %56 = ptrtoint double* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !8

69:                                               ; preds = %54
  %70 = icmp eq double* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load double*, double** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne double* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast double* %78 to i8*
  br i1 %81, label %83, label %89, !prof !8

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.58"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.58"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to double*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi double* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds double, double* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi double* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi double* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, double* %100, i64 %103
  %105 = bitcast double* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast double* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.58"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.58", %"class.WTF::Vector.58"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #10
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #10
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #10
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.WTF::internal::ConcurrentBucket", align 8
  %6 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %7 = getelementptr inbounds i8, i8* %1, i64 -2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = lshr i16 %9, 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %20, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %1, i64 -8
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, -131072
  %16 = inttoptr i64 %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 4144
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 16
  br label %23

20:                                               ; preds = %2
  %21 = zext i16 %10 to i64
  %22 = shl nuw nsw i64 %21, 3
  br label %23

23:                                               ; preds = %12, %20
  %24 = phi i64 [ %19, %12 ], [ %22, %20 ]
  %25 = add i64 %24, -8
  %26 = lshr i64 %25, 5
  %27 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %28 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %28, i64 3
  %30 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Visitor"* %0) #10
  %32 = icmp eq i64 %26, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %23
  %34 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %37 = bitcast %union.anon.15* %36 to i8*
  %38 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 0
  %41 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 8
  %42 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 16
  %43 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 1
  %44 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to i64*
  %45 = bitcast i8* %41 to i64*
  %46 = bitcast i8* %42 to i64*
  %47 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to %"class.blink::PropertyHandle"*
  %48 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %49 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %51 = bitcast %union.anon.15* %50 to i8*
  %52 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to i32*
  %54 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 24
  %55 = bitcast i8* %54 to i64**
  br label %57

56:                                               ; preds = %134, %23
  ret void

57:                                               ; preds = %134, %33
  %58 = phi i64 [ 0, %33 ], [ %135, %134 ]
  br i1 %31, label %59, label %100

59:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #10
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 1
  store %"class.blink::Member.23"* %61, %"class.blink::Member.23"** %43, align 8
  %62 = bitcast %"struct.WTF::KeyValuePair"* %60 to i64*
  %63 = load atomic i64, i64* %62 monotonic, align 8
  store i64 %63, i64* %44, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 0, i32 1
  %65 = bitcast %union.anon.15* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  store i64 %66, i64* %45, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 0, i32 2
  %68 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  store i64 %69, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #10
  store i32 0, i32* %49, align 8, !alias.scope !93
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #10, !alias.scope !93
  %70 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* nonnull %47, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #10
  br label %86

86:                                               ; preds = %59, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  %87 = load i32, i32* %53, align 8
  %88 = icmp eq i32 %87, 1
  %89 = or i1 %70, %88
  br i1 %89, label %99, label %90

90:                                               ; preds = %86
  %91 = load i64*, i64** %55, align 8
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = inttoptr i64 %92 to i8*
  %96 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %97 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, i64 5
  %98 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %97, align 8
  call void %98(%"class.blink::Visitor"* %0, i8* nonnull %95, i8* nonnull %95, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5TraceEPNS_7VisitorEPKv) #10
  br label %99

99:                                               ; preds = %94, %90, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #10
  br label %134

100:                                              ; preds = %57
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  store i32 0, i32* %35, align 8, !alias.scope !98
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #10, !alias.scope !98
  %103 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %102, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %100, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 1
  %123 = or i1 %103, %122
  br i1 %123, label %134, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 1
  %126 = bitcast %"class.blink::Member.23"* %125 to i64*
  %127 = load atomic i64, i64* %126 monotonic, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %124
  %130 = inttoptr i64 %127 to i8*
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, i64 5
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %132, align 8
  call void %133(%"class.blink::Visitor"* %0, i8* nonnull %130, i8* nonnull %130, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5TraceEPNS_7VisitorEPKv) #10
  br label %134

134:                                              ; preds = %129, %124, %99, %119
  %135 = add nuw nsw i64 %58, 1
  %136 = icmp eq i64 %135, %26
  br i1 %136, label %56, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #10
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.33"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.33"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe::PropertySpecificKeyframe"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InterpolationEffect"*
  tail call void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS3_E4HashENS8_10HashTraitsIS3_EENSC_IS7_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([351 x i8], [351 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_14PropertyHandleENS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEENS_11DefaultHashIS3_E4HashENS_10HashTraitsIS3_EENSB_IS7_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapINS_14PropertyHandleENS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEN3WTF11DefaultHashIS2_E4HashENS7_10HashTraitsIS2_EENSB_IS6_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKS2_DnEENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.15* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store i32 0, i32* %21, align 8, !alias.scope !103
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10, !alias.scope !103
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #10
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %62, label %178, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %42, %"struct.WTF::KeyValuePair"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  br label %84

76:                                               ; preds = %72
  %77 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 32) #10
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %74, %76
  %85 = phi i8* [ %75, %74 ], [ %77, %76 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ %42, %74 ], [ %41, %76 ]
  %87 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 16, i1 false) #10
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 2
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #10
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %97
  call void @llvm.trap() #10
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %84
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = bitcast %"class.WTF::AtomicString"* %88 to i64*
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store i64 %110, i64* %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #10
  br label %128

128:                                              ; preds = %109, %124, %127
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 1
  %130 = bitcast %"class.blink::Member.23"* %129 to i64*
  store atomic i64 0, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %166, label %133

133:                                              ; preds = %128
  %134 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %135 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %134, i64 0, i32 1
  %136 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %135) #10
  %137 = icmp eq i8* %136, null
  br i1 %137, label %138, label %140, !prof !2

138:                                              ; preds = %133
  %139 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %135, i8* %139) #10
  br label %140

140:                                              ; preds = %138, %133
  %141 = phi i8* [ %139, %138 ], [ %136, %133 ]
  %142 = bitcast i8* %141 to %"class.blink::ThreadState"**
  %143 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %143, i64 0, i32 9
  %145 = load i8, i8* %144, align 1, !range !24
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %166, label %147

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %143, i64 0, i32 13
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %148, align 8
  %151 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %143, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %151, align 8
  %153 = load atomic i64, i64* %130 monotonic, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %152, i64 0, i32 0, i32 0
  %157 = inttoptr i64 %153 to i8*
  %158 = bitcast %"class.blink::MarkingVisitor"* %152 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %159, i64 5
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %160, align 8
  call void %161(%"class.blink::Visitor"* %156, i8* nonnull %157, i8* %157, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5TraceEPNS_7VisitorEPKv) #10
  %162 = load i64, i64* %148, align 8
  br label %163

163:                                              ; preds = %155, %147
  %164 = phi i64 [ %150, %147 ], [ %162, %155 ]
  %165 = add i64 %164, -1
  store i64 %165, i64* %148, align 8
  br label %166

166:                                              ; preds = %128, %140, %163
  %167 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 4
  %170 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, %169
  %173 = shl i32 %172, 1
  %174 = load i32, i32* %13, align 8
  %175 = icmp ult i32 %173, %174
  br i1 %175, label %178, label %176

176:                                              ; preds = %166
  %177 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %86)
  br label %178

178:                                              ; preds = %61, %166, %176
  %179 = phi i8 [ 1, %166 ], [ 1, %176 ], [ 0, %61 ]
  %180 = phi %"struct.WTF::KeyValuePair"* [ %86, %166 ], [ %177, %176 ], [ %42, %61 ]
  %181 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %180, 0
  %182 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %181, i8 %179, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %182
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #10
  %37 = load i8, i8* %4, align 1, !range !24
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #10
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #10
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #10
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %4
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %4
  %14 = phi i8* [ %12, %11 ], [ %9, %4 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !24
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 16
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %13, %20
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %24, %28
  %32 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, null
  br i1 %34, label %150, label %35

35:                                               ; preds = %31
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 5
  %38 = bitcast %"struct.WTF::KeyValuePair"* %33 to i8*
  %39 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %38, i64 %37) #10
  br i1 %39, label %40, label %150

40:                                               ; preds = %35
  store i8 1, i8* %3, align 1
  %41 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %44 = zext i32 %42 to i64
  %45 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #10
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"struct.WTF::KeyValuePair"*
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %52 = bitcast %union.anon.15* %51 to i8*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %65

54:                                               ; preds = %147, %40
  %55 = phi %"struct.WTF::KeyValuePair"* [ null, %40 ], [ %72, %147 ]
  %56 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %45, %"class.blink::HeapHashTableBacking"** %56, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %45, i64 0, i32 0
  %61 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #10
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 %37, i1 false)
  %64 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %1, %"struct.WTF::KeyValuePair"* %55)
  br label %150

65:                                               ; preds = %147, %48
  %66 = phi i64 [ 0, %48 ], [ %148, %147 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %48 ], [ %72, %147 ]
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %66
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %2
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66
  %72 = select i1 %70, %"struct.WTF::KeyValuePair"* %71, %"struct.WTF::KeyValuePair"* %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  store i32 0, i32* %50, align 8, !alias.scope !108
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10, !alias.scope !108
  %74 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %73, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #10
  br label %90

90:                                               ; preds = %65, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  %94 = or i1 %74, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = bitcast %"struct.WTF::KeyValuePair"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false)
  br label %147

97:                                               ; preds = %90
  %98 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %66
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66, i32 0, i32 2, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #10
  br label %116

116:                                              ; preds = %97, %112, %115
  %117 = bitcast %"struct.WTF::KeyValuePair"* %71 to i8*
  %118 = bitcast %"struct.WTF::KeyValuePair"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #10
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %66, i32 0, i32 2
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::AtomicString"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.WTF::AtomicString"* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66, i32 1
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %66, i32 1
  %127 = bitcast %"class.blink::Member.23"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member.23"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 %66, i32 0, i32 2, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %116
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %146, %143, %116, %95
  %148 = add nuw nsw i64 %66, 1
  %149 = icmp eq i64 %148, %44
  br i1 %149, label %54, label %65

150:                                              ; preds = %35, %31, %62
  %151 = phi %"struct.WTF::KeyValuePair"* [ %64, %62 ], [ null, %31 ], [ null, %35 ]
  ret %"struct.WTF::KeyValuePair"* %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %30

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.15* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %62

26:                                               ; preds = %130
  %27 = bitcast %"class.WTF::HashTable"* %6 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = ptrtoint i8* %28 to i64
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64 [ %17, %16 ], [ %29, %26 ]
  %32 = phi i32 [ 0, %16 ], [ %132, %26 ]
  %33 = phi i8* [ %18, %16 ], [ %28, %26 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %131, %26 ]
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %43

39:                                               ; preds = %30
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %33) #10
  %40 = load i32, i32* %13, align 8
  %41 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi i64* [ %38, %37 ], [ %41, %39 ]
  %45 = phi i64 [ %31, %37 ], [ %42, %39 ]
  %46 = phi i32 [ %32, %37 ], [ %40, %39 ]
  %47 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %48 = load i64, i64* %47, align 8
  store atomic i64 %45, i64* %47 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = inttoptr i64 %45 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #10
  br label %54

54:                                               ; preds = %43, %51
  store i32 %2, i32* %13, align 8
  store i64 %48, i64* %44, align 8
  store i32 %46, i32* %9, align 8
  %55 = icmp eq i64 %48, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %48 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS8_j(%"struct.WTF::KeyValuePair"* nonnull %57, i32 %46) #10
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %58

58:                                               ; preds = %54, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret %"struct.WTF::KeyValuePair"* %34

62:                                               ; preds = %19, %130
  %63 = phi %"struct.WTF::KeyValuePair"* [ null, %19 ], [ %131, %130 ]
  %64 = phi i32 [ 0, %19 ], [ %132, %130 ]
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  store i32 0, i32* %22, align 8, !alias.scope !113
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10, !alias.scope !113
  %69 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %68, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #10
  br label %85

85:                                               ; preds = %62, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1
  %89 = or i1 %69, %88
  br i1 %89, label %130, label %90

90:                                               ; preds = %85
  %91 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %66
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0
  %94 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %93) #10
  %95 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %94, 0
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #10
  br label %112

112:                                              ; preds = %90, %108, %111
  %113 = bitcast %"struct.WTF::KeyValuePair"* %95 to i8*
  %114 = bitcast %"struct.WTF::KeyValuePair"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #10
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0, i32 2
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %66, i32 0, i32 2
  %117 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::AtomicString"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::AtomicString"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %66, i32 1
  %123 = bitcast %"class.blink::Member.23"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.23"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %66
  %128 = icmp eq %"struct.WTF::KeyValuePair"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair"* %95, %"struct.WTF::KeyValuePair"* %63
  br label %130

130:                                              ; preds = %85, %112
  %131 = phi %"struct.WTF::KeyValuePair"* [ %63, %85 ], [ %129, %112 ]
  %132 = add i32 %64, 1
  %133 = load i32, i32* %13, align 8
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %26, label %62
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.16, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 5
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([538 x i8], [538 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_14PropertyHandleENS_12KeyValuePairIS4_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapHashTableBacking"*
  tail call void @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE8FinalizeEv(%"class.blink::HeapHashTableBacking"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE8FinalizeEv(%"class.blink::HeapHashTableBacking"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %0, i64 -8, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 6
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %16, !prof !2

9:                                                ; preds = %1
  %10 = ptrtoint i8* %3 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4144
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 16
  br label %19

16:                                               ; preds = %1
  %17 = zext i16 %7 to i64
  %18 = shl nuw nsw i64 %17, 3
  br label %19

19:                                               ; preds = %9, %16
  %20 = phi i64 [ %15, %9 ], [ %18, %16 ]
  %21 = add i64 %20, -8
  %22 = lshr i64 %21, 5
  %23 = bitcast %"class.blink::HeapHashTableBacking"* %0 to %"struct.WTF::KeyValuePair"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %29 = bitcast %union.anon.15* %28 to i8*
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %32

31:                                               ; preds = %75, %19
  ret void

32:                                               ; preds = %25, %75
  %33 = phi i64 [ 0, %25 ], [ %77, %75 ]
  %34 = phi i32 [ 0, %25 ], [ %76, %75 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  store i32 0, i32* %27, align 8, !alias.scope !118
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10, !alias.scope !118
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %36, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #10
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %32, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  %57 = or i1 %37, %56
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33, i32 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %74, %71, %58, %53
  %76 = add i32 %34, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %22, %77
  br i1 %78, label %32, label %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.15* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %61, %2
  %32 = phi i64 [ 0, %2 ], [ %65, %61 ]
  %33 = phi i64 [ 0, %2 ], [ %67, %61 ]
  %34 = phi i64 [ %12, %2 ], [ %69, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %34
  %36 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store i32 0, i32* %14, align 8, !alias.scope !123
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10, !alias.scope !123
  %38 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %31, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br i1 %38, label %55, label %59

55:                                               ; preds = %54
  %56 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  %57 = icmp eq i64 %32, 0
  %58 = select i1 %57, i64 %56, i64 %32
  br label %72

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  %65 = select i1 %64, i64 %36, i64 %32
  %66 = icmp eq i64 %33, 0
  %67 = select i1 %66, i64 %30, i64 %33
  %68 = add i64 %67, %34
  %69 = and i64 %68, %9
  br label %31

70:                                               ; preds = %59
  %71 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  br label %72

72:                                               ; preds = %70, %55
  %73 = phi i64 [ %58, %55 ], [ %71, %70 ]
  %74 = phi i8 [ 0, %55 ], [ 1, %70 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS8_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %9 = bitcast %union.anon.15* %8 to i8*
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = zext i32 %1 to i64
  br label %14

12:                                               ; preds = %61, %2
  %13 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %13) #10
  ret void

14:                                               ; preds = %61, %5
  %15 = phi i64 [ 0, %5 ], [ %62, %61 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  store i32 0, i32* %7, align 8, !alias.scope !128
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #10, !alias.scope !128
  %18 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %17, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #10
  br label %34

34:                                               ; preds = %14, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  %38 = or i1 %18, %37
  br i1 %38, label %61, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15, i32 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %39, %52, %55
  store i32 1, i32* %35, align 8, !alias.scope !133
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15, i32 0, i32 1
  %58 = bitcast %union.anon.15* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #10, !alias.scope !133
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15, i32 1
  %60 = bitcast %"class.blink::Member.23"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %34, %56
  %62 = add nuw nsw i64 %15, 1
  %63 = icmp eq i64 %62, %11
  br i1 %63, label %12, label %14
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.33"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %24, i64 %25
  ret %"class.blink::Member.33"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.33"* @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %24, i64 %25
  ret %"class.blink::Member.33"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.30"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.30"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.33", %"class.blink::Member.33"* %16, i64 %18
  %20 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.33"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !8

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %8, align 8
  %10 = icmp eq %"class.blink::Member.33"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1374"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1374"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1374", %"class.blink::HeapVectorBacking.1374"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %8, align 8
  %26 = icmp eq %"class.blink::Member.33"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.33"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !24
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.30"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.30"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.30"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1374"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1374"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.33"*, %"class.blink::Member.33"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1374"* %17, null
  %23 = icmp ne %"class.blink::Member.33"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.33"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !8

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.30"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1374", %"class.blink::HeapVectorBacking.1374"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.30"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1374", %"class.blink::HeapVectorBacking.1374"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1374"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.3, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1374"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1374"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.18"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.18"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8Keyframe24PropertySpecificKeyframeEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!5 = distinct !{!5, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!6 = distinct !{!6, !7, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!12 = distinct !{!12, !13, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!16 = distinct !{!16, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!17 = distinct !{!17, !18, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!21 = distinct !{!21, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!22 = distinct !{!22, !23, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!24 = !{i8 0, i8 2}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!28 = distinct !{!28, !29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!32 = distinct !{!32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!33 = distinct !{!33, !34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!37 = distinct !{!37, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!38 = distinct !{!38, !39, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!42 = distinct !{!42, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!43 = distinct !{!43, !44, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!45 = !{!"branch_weights", i32 1, i32 1048575}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!48 = distinct !{!48, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!49 = distinct !{!49, !50, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!51 = !{!52, !54}
!52 = distinct !{!52, !53, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!53 = distinct !{!53, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!54 = distinct !{!54, !55, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!55 = distinct !{!55, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!58 = distinct !{!58, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!59 = distinct !{!59, !60, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!60 = distinct !{!60, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!63 = distinct !{!63, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!64 = distinct !{!64, !65, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!65 = distinct !{!65, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!66 = distinct !{!66, !67}
!67 = !{!"llvm.loop.unroll.disable"}
!68 = !{!69, !71}
!69 = distinct !{!69, !70, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!70 = distinct !{!70, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!71 = distinct !{!71, !72, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!72 = distinct !{!72, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!73 = !{!74, !76}
!74 = distinct !{!74, !75, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!75 = distinct !{!75, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!76 = distinct !{!76, !77, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!77 = distinct !{!77, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!78 = !{!79, !81}
!79 = distinct !{!79, !80, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!80 = distinct !{!80, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!81 = distinct !{!81, !82, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!82 = distinct !{!82, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!83 = !{!84, !86}
!84 = distinct !{!84, !85, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!85 = distinct !{!85, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!86 = distinct !{!86, !87, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!87 = distinct !{!87, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!88 = !{!89, !91}
!89 = distinct !{!89, !90, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!90 = distinct !{!90, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!91 = distinct !{!91, !92, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!92 = distinct !{!92, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!93 = !{!94, !96}
!94 = distinct !{!94, !95, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!95 = distinct !{!95, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!96 = distinct !{!96, !97, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!97 = distinct !{!97, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!100 = distinct !{!100, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!101 = distinct !{!101, !102, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!102 = distinct !{!102, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!103 = !{!104, !106}
!104 = distinct !{!104, !105, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!105 = distinct !{!105, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!106 = distinct !{!106, !107, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!107 = distinct !{!107, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!108 = !{!109, !111}
!109 = distinct !{!109, !110, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!110 = distinct !{!110, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!111 = distinct !{!111, !112, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!112 = distinct !{!112, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!113 = !{!114, !116}
!114 = distinct !{!114, !115, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!115 = distinct !{!115, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!116 = distinct !{!116, !117, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!117 = distinct !{!117, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!118 = !{!119, !121}
!119 = distinct !{!119, !120, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!120 = distinct !{!120, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!121 = distinct !{!121, !122, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!122 = distinct !{!122, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!123 = !{!124, !126}
!124 = distinct !{!124, !125, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!125 = distinct !{!125, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!126 = distinct !{!126, !127, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!127 = distinct !{!127, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!128 = !{!129, !131}
!129 = distinct !{!129, !130, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!130 = distinct !{!130, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!131 = distinct !{!131, !132, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!132 = distinct !{!132, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!133 = !{!134}
!134 = distinct !{!134, !135, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv: argument 0"}
!135 = distinct !{!135, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv"}
