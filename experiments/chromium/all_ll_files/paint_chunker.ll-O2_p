; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/paint_chunker.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/paint_chunker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector"*, %"class.absl::optional.50", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"struct.blink::DisplayItem::Id" }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.81" }
%"class.blink::PaintPropertyNode.81" = type { %"class.WTF::RefCounted.82", i8, i8, %class.scoped_refptr.0, i32, i32 }
%"class.WTF::RefCounted.82" = type { %"class.base::RefCounted.83" }
%"class.base::RefCounted.83" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.0 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.78" }
%"class.blink::PaintPropertyNode.78" = type { %"class.WTF::RefCounted.79", i8, i8, %class.scoped_refptr.1, i32, i32 }
%"class.WTF::RefCounted.79" = type { %"class.base::RefCounted.80" }
%"class.base::RefCounted.80" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.57", %"class.WTF::Vector.62" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59", [128 x i8] }
%"class.WTF::VectorBufferBase.59" = type { i32*, i32, i32 }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64", [128 x i8] }
%"class.WTF::VectorBufferBase.64" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.blink::Color" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.42", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr, %class.scoped_refptr.0, %class.scoped_refptr.1 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2", %"class.WTF::Vector.5", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.21" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.14, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.15", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.10" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.14 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.67", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.67" = type { %"class.WTF::RefCounted.68", i8, i8, %class.scoped_refptr.14, i32, i32 }
%"class.WTF::RefCounted.68" = type { %"class.base::RefCounted.69" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.70" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.75" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon }
%union.anon = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::DisplayItem" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16, [2 x i8] }>
%"class.blink::DrawingDisplayItem" = type { %"class.blink::DisplayItem.base", %class.sk_sp }
%"class.blink::DisplayItem.base" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16 }>
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.85", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr, %class.scoped_refptr.0, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.110", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.89" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.105" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.91, [20 x float], i32, [4 x i8], %"class.std::__1::vector.98", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.91 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.92, i32, %"class.absl::optional.93", i8, i32 }
%class.sk_sp.92 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.100" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.116" }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { i32*, i32*, %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { i32* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.134 }
%union.anon.134 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.166", i32, [4 x i8] }>
%"class.WTF::Vector.166" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168" }
%"class.WTF::VectorBufferBase.168" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.163" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr, %"class.absl::optional.142", %class.scoped_refptr.147, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.142" = type { %"class.absl::optional_internal::optional_data.143" }
%"class.absl::optional_internal::optional_data.143" = type { %"class.absl::optional_internal::optional_data_base.144" }
%"class.absl::optional_internal::optional_data_base.144" = type { %"class.absl::optional_internal::optional_data_dtor_base.145" }
%"class.absl::optional_internal::optional_data_dtor_base.145" = type { i8, [3 x i8], %union.anon.146 }
%union.anon.146 = type { %"class.blink::FloatClipRect" }
%class.scoped_refptr.147 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.161", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.148, i32, %"struct.std::__1::atomic.151", %"struct.std::__1::atomic.151", i8, i8 }>
%class.sk_sp.148 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.149, %class.SkTDArray.150, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.149 = type { i8*, i32, i32 }
%class.SkTDArray.150 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.156 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.151" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.156 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.157", [3 x i8] }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"struct.std::__1::atomic.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.WTF::RefCounted.161" = type { %"class.base::RefCounted.162" }
%"class.base::RefCounted.162" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>

$_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_ = comdat any

$_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_ = comdat any

$_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10PaintChunkEEEmm = comdat any

$_ZN5blink10PaintChunkD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEE7ReleaseEPS2_ = comdat any

$_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_ = comdat any

$_ZN5blink26TransformPaintPropertyNodeD2Ev = comdat any

$_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_ = comdat any

$_ZN5blink10PaintChunkC2EjOS0_ = comdat any

$_ZN5blink10PaintChunkC2EjjRKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE = comdat any

$_ZN3WTF6VectorIN5blink15TouchActionRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15TouchActionRectEEEmm = comdat any

$_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm = comdat any

@_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10PaintChunkEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PaintChunk]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15TouchActionRectEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TouchActionRect]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IntRect]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PaintChunker11ResetChunksEPN3WTF6VectorINS_10PaintChunkELj0ENS1_18PartitionAllocatorEEE(%"class.blink::PaintChunker"*, %"class.WTF::Vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %4 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink12PaintChunker27FinalizeLastChunkPropertiesEv(%"class.blink::PaintChunker"* %0)
  %7 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  br label %11

11:                                               ; preds = %2, %6
  store %"class.WTF::Vector"* %1, %"class.WTF::Vector"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PaintChunker27FinalizeLastChunkPropertiesEv(%"class.blink::PaintChunker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Region", align 8
  %3 = alloca %"class.blink::Region", align 8
  %4 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %116, label %9

9:                                                ; preds = %1
  %10 = add i32 %7, -1
  %11 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %10) #9
  %12 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %11, i64 0, i32 11
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 16
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %116

16:                                               ; preds = %9
  %17 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  %21 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %17, i32 %20) #9
  %22 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 6
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %103, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3
  %27 = bitcast %"class.blink::Region"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %21, i64 0, i32 8
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %2, %"class.blink::IntRect"* dereferenceable(16) %28) #9
  %29 = call zeroext i1 @_ZNK5blink6Region8ContainsERKS0_(%"class.blink::Region"* %26, %"class.blink::Region"* nonnull dereferenceable(304) %2) #9
  %30 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %21, i64 0, i32 11
  %31 = zext i1 %29 to i8
  %32 = load i8, i8* %30, align 1
  %33 = and i8 %32, -2
  %34 = or i8 %33, %31
  store i8 %34, i8* %30, align 1
  %35 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %2, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %2, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40, !prof !3

40:                                               ; preds = %25
  store i32 0, i32* %37, align 4
  br label %41

41:                                               ; preds = %40, %25
  %42 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %36, i64 0, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %2, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %45 = bitcast i8* %44 to %"struct.blink::Region::Span"*
  %46 = icmp eq %"struct.blink::Region::Span"* %43, %45
  br i1 %46, label %49, label %47, !prof !4

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %36, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.63"* %48, %"struct.blink::Region::Span"* %43) #9
  br label %49

49:                                               ; preds = %47, %41
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %42, align 8
  %50 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  %55 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %2, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %58 = bitcast i8* %57 to i32*
  %59 = icmp eq i32* %56, %58
  br i1 %59, label %62, label %60, !prof !4

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %35, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.58"* %61, i32* %56) #9
  br label %62

62:                                               ; preds = %54, %60
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %27) #9
  %63 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 4
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = load i8, i8* %30, align 1
  %66 = shl nuw nsw i8 %64, 1
  %67 = and i8 %65, -3
  %68 = or i8 %67, %66
  store i8 %68, i8* %30, align 1
  %69 = bitcast %"class.blink::Region"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %69) #9
  call void @_ZN5blink6RegionC1Ev(%"class.blink::Region"* nonnull %3) #9
  %70 = bitcast %"class.blink::Region"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %69, i64 16, i1 false) #9
  %71 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.58"* %71, %"class.WTF::VectorBuffer.58"* dereferenceable(144) %72, i64 0, i64 0) #9
  %73 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %74 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 1, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.63"* %73, %"class.WTF::VectorBuffer.63"* dereferenceable(144) %74, i64 0, i64 0) #9
  %75 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 1
  %77 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %62
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %62
  %82 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %76, i64 0, i32 0, i32 0, i32 0
  %83 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %85 = bitcast i8* %84 to %"struct.blink::Region::Span"*
  %86 = icmp eq %"struct.blink::Region::Span"* %83, %85
  br i1 %86, label %89, label %87, !prof !4

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %76, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.63"* %88, %"struct.blink::Region::Span"* %83) #9
  br label %89

89:                                               ; preds = %87, %81
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %82, align 8
  %90 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93, !prof !3

93:                                               ; preds = %89
  store i32 0, i32* %90, align 4
  br label %94

94:                                               ; preds = %93, %89
  %95 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %98 = bitcast i8* %97 to i32*
  %99 = icmp eq i32* %96, %98
  br i1 %99, label %102, label %100, !prof !4

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %75, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.58"* %101, i32* %96) #9
  br label %102

102:                                              ; preds = %94, %100
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %69) #9
  store i8 1, i8* %63, align 8
  br label %103

103:                                              ; preds = %16, %102
  %104 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 8, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %21, i64 0, i32 2, i32 0
  store i32 %105, i32* %108, align 8
  %109 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 9
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %21, i64 0, i32 3
  %113 = bitcast float* %112 to i32*
  store i32 %111, i32* %113, align 4
  br label %114

114:                                              ; preds = %103, %107
  store i32 0, i32* %104, align 4
  %115 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 9
  store float 0.000000e+00, float* %115, align 8
  br label %116

116:                                              ; preds = %9, %1, %114
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PaintChunker33UpdateCurrentPaintChunkPropertiesEPKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"class.blink::PaintChunker"* nocapture, %"struct.blink::DisplayItem::Id"* readonly, %"class.blink::PropertyTreeStateOrAlias"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 0
  %9 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %2, i64 0, i32 0
  %11 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %9, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 1
  %15 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %2, i64 0, i32 1
  %17 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %16, align 8
  %18 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 2
  %21 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %2, i64 0, i32 2
  %23 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %22, align 8
  %24 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %21, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %19, %3, %7, %13
  %26 = icmp eq %"struct.blink::DisplayItem::Id"* %1, null
  store i8 0, i8* %4, align 8
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %union.anon.54* %28 to i8*
  %30 = bitcast %"struct.blink::DisplayItem::Id"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %30, i64 16, i1 false) #9
  store i8 1, i8* %4, align 8
  br label %31

31:                                               ; preds = %19, %25, %27
  %32 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2
  %33 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %32 to i8*
  %34 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PaintChunker14AppendByMovingEONS_10PaintChunkE(%"class.blink::PaintChunker"*, %"struct.blink::PaintChunk"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12PaintChunker27FinalizeLastChunkPropertiesEv(%"class.blink::PaintChunker"* %0)
  %3 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %4 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = add i32 %6, -1
  %10 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %9) #9
  %11 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %13, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %2, %8
  %17 = phi i32 [ %15, %8 ], [ 0, %2 ]
  %18 = phi %"class.WTF::Vector"* [ %13, %8 ], [ %4, %2 ]
  %19 = phi i32 [ %12, %8 ], [ 0, %2 ]
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %17, %22
  br i1 %23, label %24, label %46, !prof !3

24:                                               ; preds = %16
  %25 = add i32 %17, 1
  %26 = lshr i32 %17, 2
  %27 = add i32 %25, %26
  %28 = icmp ugt i32 %27, 4
  %29 = select i1 %28, i32 %27, i32 4
  %30 = icmp ugt i32 %29, %25
  %31 = select i1 %30, i32 %29, i32 %25
  %32 = icmp ult i32 %17, %31
  br i1 %32, label %33, label %46, !prof !4

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %34, align 8
  %36 = icmp eq %"struct.blink::PaintChunk"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = zext i32 %31 to i64
  %39 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10PaintChunkEEEmm(i64 %38) #9
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10PaintChunkEEEPKcv, i64 0, i64 0)) #9
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast %"class.WTF::Vector"* %18 to i64*
  store atomic i64 %41, i64* %42 monotonic, align 8
  %43 = udiv i64 %39, 112
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %21, align 8
  br label %46

45:                                               ; preds = %33
  tail call void @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %18, i32 %31) #9
  br label %46

46:                                               ; preds = %16, %24, %37, %45
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %18, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %47, align 8
  %49 = load i32, i32* %20, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %48, i64 %50
  tail call void @_ZN5blink10PaintChunkC2EjOS0_(%"struct.blink::PaintChunk"* %51, i32 %19, %"struct.blink::PaintChunk"* dereferenceable(112) %1) #9
  %52 = load i32, i32* %20, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %20, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12PaintChunker18EnsureCurrentChunkERKNS_11DisplayItem2IdE(%"class.blink::PaintChunker"*, %"struct.blink::DisplayItem::Id"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %8 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  %12 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %11) #9
  %13 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %12, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 0
  %16 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %15, align 8
  %17 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %14, %16
  br i1 %17, label %18, label %30

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %12, i64 0, i32 5, i32 1, i32 0
  %20 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 1
  %22 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %21, align 8
  %23 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %20, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %12, i64 0, i32 5, i32 2, i32 0
  %26 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 2
  %28 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %27, align 8
  %29 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %26, %28
  br i1 %29, label %94, label %30

30:                                               ; preds = %24, %2, %6, %18
  %31 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  store i8 0, i8* %31, align 8
  %35 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %union.anon.54* %35 to i8*
  %37 = bitcast %"struct.blink::DisplayItem::Id"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #9
  store i8 1, i8* %31, align 8
  br label %38

38:                                               ; preds = %30, %34
  tail call void @_ZN5blink12PaintChunker27FinalizeLastChunkPropertiesEv(%"class.blink::PaintChunker"* %0)
  %39 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %40 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %40, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = add i32 %42, -1
  %46 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %40, i32 %45) #9
  %47 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %39, align 8
  br label %50

50:                                               ; preds = %38, %44
  %51 = phi %"class.WTF::Vector"* [ %49, %44 ], [ %40, %38 ]
  %52 = phi i32 [ %48, %44 ], [ 0, %38 ]
  %53 = load i8, i8* %31, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %50
  tail call void @llvm.trap() #9
  unreachable

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %86, !prof !3

64:                                               ; preds = %56
  %65 = add i32 %60, 1
  %66 = lshr i32 %60, 2
  %67 = add i32 %65, %66
  %68 = icmp ugt i32 %67, 4
  %69 = select i1 %68, i32 %67, i32 4
  %70 = icmp ugt i32 %69, %65
  %71 = select i1 %70, i32 %69, i32 %65
  %72 = icmp ult i32 %60, %71
  br i1 %72, label %73, label %86, !prof !4

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %74, align 8
  %76 = icmp eq %"struct.blink::PaintChunk"* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = zext i32 %71 to i64
  %79 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10PaintChunkEEEmm(i64 %78) #9
  %80 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %79, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10PaintChunkEEEPKcv, i64 0, i64 0)) #9
  %81 = ptrtoint i8* %80 to i64
  %82 = bitcast %"class.WTF::Vector"* %51 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = udiv i64 %79, 112
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %61, align 8
  br label %86

85:                                               ; preds = %73
  tail call void @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %51, i32 %71) #9
  br label %86

86:                                               ; preds = %56, %64, %77, %85
  %87 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %51, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %87, align 8
  %89 = load i32, i32* %59, align 4
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %88, i64 %90
  tail call void @_ZN5blink10PaintChunkC2EjjRKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"struct.blink::PaintChunk"* %91, i32 %52, i32 %52, %"struct.blink::DisplayItem::Id"* dereferenceable(16) %57, %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24) %58) #9
  %92 = load i32, i32* %59, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %59, align 4
  store i8 0, i8* %31, align 8
  store i8 0, i8* %3, align 1
  br label %94

94:                                               ; preds = %24, %86
  %95 = phi i1 [ true, %86 ], [ false, %24 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12PaintChunker25IncrementDisplayItemIndexERKNS_11DisplayItemE(%"class.blink::PaintChunker"*, %"class.blink::DisplayItem"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::DisplayItem::Id", align 8
  %4 = alloca float, align 4
  %5 = alloca %"class.blink::Region", align 8
  %6 = alloca %"class.blink::Region", align 8
  %7 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %1, i64 0, i32 3
  %8 = load i16, i16* %7, align 4
  %9 = and i16 %8, 255
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 %10, -48
  %12 = icmp ult i32 %11, 9
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = and i16 %8, 254
  %15 = or i16 %14, 1
  %16 = icmp eq i16 %15, 117
  br i1 %16, label %17, label %22

17:                                               ; preds = %2, %13
  %18 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 5
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = load i16, i16* %7, align 4
  %21 = and i16 %20, 255
  br label %22

22:                                               ; preds = %17, %13
  %23 = phi i16 [ %21, %17 ], [ %9, %13 ]
  %24 = phi i1 [ true, %17 ], [ false, %13 ]
  %25 = bitcast %"struct.blink::DisplayItem::Id"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #9
  %26 = bitcast %"class.blink::DisplayItem"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %1, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i16 %23 to i64
  %33 = or i64 %31, %32
  %34 = bitcast %"struct.blink::DisplayItem::Id"* %3 to i64*
  store i64 %27, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.blink::DisplayItem::Id", %"struct.blink::DisplayItem::Id"* %3, i64 0, i32 1
  %36 = bitcast i32* %35 to i64*
  store i64 %33, i64* %36, align 8
  %37 = call zeroext i1 @_ZN5blink12PaintChunker18EnsureCurrentChunkERKNS_11DisplayItem2IdE(%"class.blink::PaintChunker"* %0, %"struct.blink::DisplayItem::Id"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #9
  %38 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %39 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %39, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, -1
  %43 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %42) #9
  %44 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %43, i64 0, i32 8
  %45 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %1, i64 0, i32 1
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %44, %"class.blink::IntRect"* dereferenceable(16) %45) #9
  %46 = load i16, i16* %7, align 4
  %47 = and i16 %46, 1024
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %22
  %50 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %43, i64 0, i32 9
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %50, %"class.blink::IntRect"* dereferenceable(16) %45) #9
  %51 = load i16, i16* %7, align 4
  %52 = and i16 %51, 1024
  %53 = and i16 %51, 255
  %54 = zext i16 %53 to i32
  %55 = add nsw i32 %54, -1
  %56 = icmp ult i32 %55, 47
  %57 = icmp ne i16 %52, 0
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %66

59:                                               ; preds = %49
  %60 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #9
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %61 = bitcast %"class.blink::DisplayItem"* %1 to %"class.blink::DrawingDisplayItem"*
  %62 = call i32 @_ZNK5blink18DrawingDisplayItem15BackgroundColorERf(%"class.blink::DrawingDisplayItem"* %61, float* nonnull dereferenceable(4) %4) #9
  %63 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %43, i64 0, i32 4
  %64 = load float, float* %4, align 4
  %65 = call zeroext i1 @_ZN5blink12PaintChunker31ProcessBackgroundColorCandidateERKNS_11DisplayItem2IdENS_5ColorEf(%"class.blink::PaintChunker"* %0, %"struct.blink::DisplayItem::Id"* dereferenceable(16) %63, i32 %62, float %64)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #9
  br label %66

66:                                               ; preds = %22, %59, %49
  %67 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 6
  %68 = load i8, i8* %67, align 2, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %183, label %70

70:                                               ; preds = %66
  %71 = load i16, i16* %7, align 4
  %72 = and i16 %71, 255
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %73, -1
  %75 = icmp ult i32 %74, 47
  br i1 %75, label %76, label %183

76:                                               ; preds = %70
  %77 = bitcast %"class.blink::DisplayItem"* %1 to %"class.blink::DrawingDisplayItem"*
  %78 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %136, label %80

80:                                               ; preds = %76
  %81 = and i16 %71, 8192
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %83, label %94

83:                                               ; preds = %80
  %84 = or i16 %71, 8192
  store i16 %84, i16* %7, align 4
  %85 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %1, i64 1
  %86 = bitcast %"class.blink::DisplayItem"* %85 to %"class.cc::PaintOpBuffer"**
  %87 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %86, align 8
  %88 = call zeroext i1 @_ZNK5blink18DrawingDisplayItem24CalculateKnownToBeOpaqueEPKN2cc13PaintOpBufferE(%"class.blink::DrawingDisplayItem"* %77, %"class.cc::PaintOpBuffer"* %87) #9
  %89 = zext i1 %88 to i16
  %90 = load i16, i16* %7, align 4
  %91 = shl nuw nsw i16 %89, 14
  %92 = and i16 %90, -16385
  %93 = or i16 %92, %91
  store i16 %93, i16* %7, align 4
  br label %94

94:                                               ; preds = %80, %83
  %95 = phi i16 [ %71, %80 ], [ %93, %83 ]
  %96 = and i16 %95, 16384
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %136, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3, i32 1, i32 1, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, %100
  %104 = icmp ult i32 %103, 10
  br i1 %104, label %105, label %136

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3
  %107 = bitcast %"class.blink::Region"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %107) #9
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %5, %"class.blink::IntRect"* dereferenceable(16) %45) #9
  call void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"* %106, %"class.blink::Region"* nonnull dereferenceable(304) %5) #9
  %108 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %5, i64 0, i32 1
  %109 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %5, i64 0, i32 1, i32 1
  %110 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %5, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %114, label %113, !prof !3

113:                                              ; preds = %105
  store i32 0, i32* %110, align 4
  br label %114

114:                                              ; preds = %113, %105
  %115 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %109, i64 0, i32 0, i32 0, i32 0
  %116 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %5, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %118 = bitcast i8* %117 to %"struct.blink::Region::Span"*
  %119 = icmp eq %"struct.blink::Region::Span"* %116, %118
  br i1 %119, label %122, label %120, !prof !4

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %109, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.63"* %121, %"struct.blink::Region::Span"* %116) #9
  br label %122

122:                                              ; preds = %120, %114
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %115, align 8
  %123 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %127, label %126, !prof !3

126:                                              ; preds = %122
  store i32 0, i32* %123, align 4
  br label %127

127:                                              ; preds = %126, %122
  %128 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %5, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %131 = bitcast i8* %130 to i32*
  %132 = icmp eq i32* %129, %131
  br i1 %132, label %135, label %133, !prof !4

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %108, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.58"* %134, i32* %129) #9
  br label %135

135:                                              ; preds = %127, %133
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %107) #9
  br label %136

136:                                              ; preds = %94, %76, %135, %98
  %137 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 4
  %138 = load i8, i8* %137, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %183, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::DisplayItem", %"class.blink::DisplayItem"* %1, i64 1
  %142 = bitcast %"class.blink::DisplayItem"* %141 to %"class.cc::PaintOpBuffer"**
  %143 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %142, align 8
  %144 = icmp eq %"class.cc::PaintOpBuffer"* %143, null
  br i1 %144, label %183, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %143, i64 0, i32 9
  %147 = load i8, i8* %146, align 4
  %148 = and i8 %147, 8
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %183, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 3
  %152 = bitcast %"class.blink::Region"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %152) #9
  call void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"* nonnull %6, %"class.blink::IntRect"* dereferenceable(16) %45) #9
  %153 = call zeroext i1 @_ZNK5blink6Region8ContainsERKS0_(%"class.blink::Region"* %151, %"class.blink::Region"* nonnull dereferenceable(304) %6) #9
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %137, align 8
  %155 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1
  %156 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 1
  %157 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %161, label %160, !prof !3

160:                                              ; preds = %150
  store i32 0, i32* %157, align 4
  br label %161

161:                                              ; preds = %160, %150
  %162 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %156, i64 0, i32 0, i32 0, i32 0
  %163 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 1, i32 0, i32 1, i64 0
  %165 = bitcast i8* %164 to %"struct.blink::Region::Span"*
  %166 = icmp eq %"struct.blink::Region::Span"* %163, %165
  br i1 %166, label %169, label %167, !prof !4

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.WTF::Vector.62", %"class.WTF::Vector.62"* %156, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.63"* %168, %"struct.blink::Region::Span"* %163) #9
  br label %169

169:                                              ; preds = %167, %161
  store %"struct.blink::Region::Span"* null, %"struct.blink::Region::Span"** %162, align 8
  %170 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %174, label %173, !prof !3

173:                                              ; preds = %169
  store i32 0, i32* %170, align 4
  br label %174

174:                                              ; preds = %173, %169
  %175 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = getelementptr inbounds %"class.blink::Region", %"class.blink::Region"* %6, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %178 = bitcast i8* %177 to i32*
  %179 = icmp eq i32* %176, %178
  br i1 %179, label %182, label %180, !prof !4

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.blink::Region::Shape", %"class.blink::Region::Shape"* %155, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.58"* %181, i32* %176) #9
  br label %182

182:                                              ; preds = %174, %180
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %152) #9
  br label %183

183:                                              ; preds = %145, %136, %140, %182, %66, %70
  %184 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %43, i64 0, i32 10
  %185 = load i16, i16* %7, align 4
  %186 = lshr i16 %185, 8
  %187 = trunc i16 %186 to i8
  %188 = and i8 %187, 3
  %189 = load i8, i8* %184, align 1
  %190 = icmp ult i8 %189, %188
  %191 = select i1 %190, i8 %188, i8 %189
  store i8 %191, i8* %184, align 8
  %192 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %43, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %192, align 4
  br i1 %24, label %195, label %198

195:                                              ; preds = %183
  %196 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 5
  store i8 1, i8* %196, align 1
  %197 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %197, align 8
  br label %198

198:                                              ; preds = %195, %183
  ret i1 %37
}

declare void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK5blink18DrawingDisplayItem15BackgroundColorERf(%"class.blink::DrawingDisplayItem"*, float* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12PaintChunker31ProcessBackgroundColorCandidateERKNS_11DisplayItem2IdENS_5ColorEf(%"class.blink::PaintChunker"*, %"struct.blink::DisplayItem::Id"* nocapture readonly dereferenceable(16), i32, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 %2, i32* %6, align 4
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %44, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZN5blink12PaintChunker18EnsureCurrentChunkERKNS_11DisplayItem2IdE(%"class.blink::PaintChunker"* %0, %"struct.blink::DisplayItem::Id"* dereferenceable(16) %1)
  %10 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %11 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  %15 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %11, i32 %14) #9
  %16 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 8, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = fmul float %18, 5.000000e-01
  %20 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %20, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  %24 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %23) #9
  %25 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %24, i64 0, i32 8, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sitofp i32 %26 to float
  %28 = fmul float %19, %27
  %29 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 9
  %30 = load float, float* %29, align 8
  br i1 %9, label %35, label %31

31:                                               ; preds = %8
  %32 = fcmp ugt float %30, %3
  %33 = fcmp ugt float %28, %3
  %34 = and i1 %33, %32
  br i1 %34, label %44, label %35

35:                                               ; preds = %8, %31
  %36 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 9
  %37 = fcmp ult float %30, %28
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 8
  %40 = call i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"* %39, %"class.blink::Color"* nonnull dereferenceable(4) %5) #9
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi i32 [ %40, %38 ], [ %2, %35 ]
  %43 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 8, i32 0
  store i32 %42, i32* %43, align 4
  store float %3, float* %36, align 8
  br label %44

44:                                               ; preds = %41, %31, %4
  %45 = phi i1 [ false, %4 ], [ false, %31 ], [ %9, %41 ]
  ret i1 %45
}

declare void @_ZN5blink6Region5UniteERKS0_(%"class.blink::Region"*, %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #2

declare void @_ZN5blink6RegionC1ERKNS_7IntRectE(%"class.blink::Region"*, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink6Region8ContainsERKS0_(%"class.blink::Region"*, %"class.blink::Region"* dereferenceable(304)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12PaintChunker28AddHitTestDataToCurrentChunkERKNS_11DisplayItem2IdERKNS_7IntRectEN2cc11TouchActionEb(%"class.blink::PaintChunker"*, %"struct.blink::DisplayItem::Id"* nocapture readonly dereferenceable(16), %"class.blink::IntRect"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::TouchActionRect", align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = icmp eq i32 %3, 127
  %10 = and i1 %9, %8
  %11 = xor i1 %10, true
  %12 = or i1 %11, %4
  br i1 %12, label %19, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 2, i32 2
  %15 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %14, align 8
  %16 = tail call dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() #9
  %17 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %16, i64 0, i32 0
  %18 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %15, %17
  br i1 %18, label %88, label %19

19:                                               ; preds = %5, %13
  %20 = tail call zeroext i1 @_ZN5blink12PaintChunker18EnsureCurrentChunkERKNS_11DisplayItem2IdE(%"class.blink::PaintChunker"* %0, %"struct.blink::DisplayItem::Id"* dereferenceable(16) %1)
  %21 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %22 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %22, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, -1
  %26 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %22, i32 %25) #9
  %27 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %26, i64 0, i32 8
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %27, %"class.blink::IntRect"* dereferenceable(16) %2) #9
  br i1 %9, label %59, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %26, i64 0, i32 6
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %30, align 8
  %32 = icmp eq %"struct.blink::HitTestData"* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = tail call i8* @_Znwm(i64 56) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 56, i1 false) #9
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast i8* %34 to %"struct.blink::HitTestData"*
  br label %38

38:                                               ; preds = %28, %33
  %39 = phi %"struct.blink::HitTestData"* [ %31, %28 ], [ %37, %33 ]
  %40 = bitcast %"struct.blink::TouchActionRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %40) #9
  %41 = bitcast %"class.blink::IntRect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %41, i64 16, i1 false)
  %42 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %6, i64 0, i32 1
  store i32 %3, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %39, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %39, i64 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %56, label %48, !prof !3

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::TouchActionRect"*, %"struct.blink::TouchActionRect"** %49, align 8
  %51 = zext i32 %44 to i64
  %52 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %50, i64 %51
  %53 = bitcast %"struct.blink::TouchActionRect"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %40, i64 20, i1 false) #9
  %54 = load i32, i32* %43, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %43, align 4
  br label %58

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %39, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink15TouchActionRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2"* %57, %"struct.blink::TouchActionRect"* nonnull dereferenceable(20) %6) #9
  br label %58

58:                                               ; preds = %48, %56
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %40) #9
  br label %59

59:                                               ; preds = %19, %58
  br i1 %4, label %60, label %88

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %26, i64 0, i32 6
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %62, align 8
  %64 = icmp eq %"struct.blink::HitTestData"* %63, null
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = call i8* @_Znwm(i64 56) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 56, i1 false) #9
  %67 = ptrtoint i8* %66 to i64
  %68 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %67, i64* %68, align 8
  %69 = bitcast i8* %66 to %"struct.blink::HitTestData"*
  br label %70

70:                                               ; preds = %60, %65
  %71 = phi %"struct.blink::HitTestData"* [ %63, %60 ], [ %69, %65 ]
  %72 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %71, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %71, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %71, i64 0, i32 1, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %87, label %78, !prof !3

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %72, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %79, align 8
  %81 = zext i32 %74 to i64
  %82 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %80, i64 %81
  %83 = bitcast %"class.blink::IntRect"* %82 to i8*
  %84 = bitcast %"class.blink::IntRect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 16, i1 false) #9
  %85 = load i32, i32* %73, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %73, align 4
  br label %88

87:                                               ; preds = %70
  call void @_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.5"* %72, %"class.blink::IntRect"* dereferenceable(16) %2) #9
  br label %88

88:                                               ; preds = %87, %78, %59, %13
  %89 = phi i1 [ false, %13 ], [ %20, %59 ], [ %20, %78 ], [ %20, %87 ]
  ret i1 %89
}

declare dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PaintChunker26AddSelectionToCurrentChunkEN4absl8optionalINS_21PaintedSelectionBoundEEES4_(%"class.blink::PaintChunker"* nocapture readonly, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %8) #9
  %10 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %9, i64 0, i32 7
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::LayerSelectionData"*, %"struct.blink::LayerSelectionData"** %11, align 8
  %13 = icmp eq %"struct.blink::LayerSelectionData"* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = tail call i8* @_Znwm(i64 56) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 0, i64 56, i1 false) #9
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.42"* %10 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i8* %15 to %"struct.blink::LayerSelectionData"*
  br label %19

19:                                               ; preds = %3, %14
  %20 = phi %"struct.blink::LayerSelectionData"* [ %12, %3 ], [ %18, %14 ]
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 8 %21, i64 28, i1 false)
  br label %26

26:                                               ; preds = %19, %24
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 8 %27, i64 28, i1 false)
  br label %32

32:                                               ; preds = %26, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12PaintChunker24CreateScrollHitTestChunkERKNS_11DisplayItem2IdEPKNS_26TransformPaintPropertyNodeERKNS_7IntRectE(%"class.blink::PaintChunker"*, %"struct.blink::DisplayItem::Id"* nocapture readonly dereferenceable(16), %"class.blink::TransformPaintPropertyNode"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 5
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = tail call zeroext i1 @_ZN5blink12PaintChunker18EnsureCurrentChunkERKNS_11DisplayItem2IdE(%"class.blink::PaintChunker"* %0, %"struct.blink::DisplayItem::Id"* dereferenceable(16) %1)
  %8 = getelementptr inbounds %"class.blink::PaintChunker", %"class.blink::PaintChunker"* %0, i64 0, i32 0
  %9 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %9, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  %13 = tail call dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %12) #9
  %14 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %13, i64 0, i32 8
  tail call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %14, %"class.blink::IntRect"* dereferenceable(16) %3) #9
  %15 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %13, i64 0, i32 6
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %16, align 8
  %18 = icmp eq %"struct.blink::HitTestData"* %17, null
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = tail call i8* @_Znwm(i64 56) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 56, i1 false) #9
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %21, i64* %22, align 8
  %23 = bitcast i8* %20 to %"struct.blink::HitTestData"*
  br label %24

24:                                               ; preds = %4, %19
  %25 = phi %"struct.blink::HitTestData"* [ %17, %4 ], [ %23, %19 ]
  %26 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %25, i64 0, i32 3
  store %"class.blink::TransformPaintPropertyNode"* %2, %"class.blink::TransformPaintPropertyNode"** %26, align 8
  %27 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %25, i64 0, i32 2
  %28 = bitcast %"class.blink::IntRect"* %27 to i8*
  %29 = bitcast %"class.blink::IntRect"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 16, i1 false)
  store i8 1, i8* %5, align 1
  store i8 0, i8* %6, align 8
  ret void
}

declare i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink6RegionC1Ev(%"class.blink::Region"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink18DrawingDisplayItem24CalculateKnownToBeOpaqueEPKN2cc13PaintOpBufferE(%"class.blink::DrawingDisplayItem"*, %"class.cc::PaintOpBuffer"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.63"*, %"struct.blink::Region::Span"*) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast %"struct.blink::Region::Span"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer.58"*, i32*) local_unnamed_addr #3 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer.58"*, %"class.WTF::VectorBuffer.58"* dereferenceable(144), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.58"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.58"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i32* [ null, %14 ], [ %9, %32 ]
  %49 = phi i32* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i32* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i32* [ %43, %52 ], [ null, %42 ]
  %60 = phi i32* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i32* %48, null
  %66 = icmp ne i32* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.58"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.58"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.58"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.58"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.58", %"class.WTF::VectorBuffer.58"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i32* %48, null
  %84 = icmp ult i32 %47, 32
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 32
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i32, i32* %48, i64 %139
  %141 = bitcast i32* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i32, i32* %48, i64 %138
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i32, i32* %59, i64 %138
  %147 = bitcast i32* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i32, i32* %59, i64 %139
  %153 = icmp ult i32* %144, %152
  %154 = icmp ult i32* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !5, !noalias !8
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !5, !noalias !8
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !8
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !8
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !5, !noalias !8
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !5, !noalias !8
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !8
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !8
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !5, !noalias !8
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !5, !noalias !8
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !8
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !8
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !5, !noalias !8
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !5, !noalias !8
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !8
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !8
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !10

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !5, !noalias !8
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !5, !noalias !8
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !8
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !8
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !5, !noalias !8
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !5, !noalias !8
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !8
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !8
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !12

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i32, i32* %48, i64 %242
  %244 = getelementptr inbounds i32, i32* %49, i64 %242
  %245 = icmp ne i32* %244, null
  %246 = icmp ne i32* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !4

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i32, i32* %48, i64 %249
  %251 = bitcast i32* %243 to i8*
  %252 = ptrtoint i32* %250 to i64
  %253 = ptrtoint i32* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i32* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #9
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i32, i32* %59, i64 %258
  %260 = getelementptr inbounds i32, i32* %60, i64 %258
  %261 = icmp ne i32* %260, null
  %262 = icmp ne i32* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !4

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i32, i32* %59, i64 %265
  %267 = bitcast i32* %259 to i8*
  %268 = ptrtoint i32* %266 to i64
  %269 = ptrtoint i32* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #9
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 32
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6Region4SpanELj16ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.63"*, %"class.WTF::VectorBuffer.63"* dereferenceable(144), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to %"struct.blink::Region::Span"*
  %12 = icmp eq %"struct.blink::Region::Span"* %9, %11
  %13 = ptrtoint %"struct.blink::Region::Span"* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to %"struct.blink::Region::Span"*
  %19 = icmp eq %"struct.blink::Region::Span"* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint %"struct.blink::Region::Span"* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.63"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.63"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::Region::Span"*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 0
  %41 = load %"struct.blink::Region::Span"*, %"struct.blink::Region::Span"** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi %"struct.blink::Region::Span"* [ %18, %14 ], [ %39, %32 ]
  %44 = phi %"struct.blink::Region::Span"* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi %"struct.blink::Region::Span"* [ null, %14 ], [ %9, %32 ]
  %49 = phi %"struct.blink::Region::Span"* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq %"struct.blink::Region::Span"* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi %"struct.blink::Region::Span"* [ %43, %52 ], [ null, %42 ]
  %60 = phi %"struct.blink::Region::Span"* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq %"struct.blink::Region::Span"* %48, null
  %66 = icmp ne %"struct.blink::Region::Span"* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer.63"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer.63"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer.63"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer.63"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer.63", %"class.WTF::VectorBuffer.63"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne %"struct.blink::Region::Span"* %48, null
  %84 = icmp ult i32 %47, 16
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 16
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %139
  %141 = bitcast %"struct.blink::Region::Span"* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %138
  %145 = bitcast %"struct.blink::Region::Span"* %144 to i8*
  %146 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %138
  %147 = bitcast %"struct.blink::Region::Span"* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 3
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %139
  %153 = icmp ult %"struct.blink::Region::Span"* %144, %152
  %154 = icmp ult %"struct.blink::Region::Span"* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !13, !noalias !16
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !13, !noalias !16
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !16
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !16
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !13, !noalias !16
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !13, !noalias !16
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !16
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !16
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !13, !noalias !16
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !13, !noalias !16
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !16
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !16
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !13, !noalias !16
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !13, !noalias !16
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !16
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !16
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !18

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !13, !noalias !16
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !13, !noalias !16
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !16
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !16
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !13, !noalias !16
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !13, !noalias !16
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !16
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !16
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !19

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %242
  %244 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %49, i64 %242
  %245 = icmp ne %"struct.blink::Region::Span"* %244, null
  %246 = icmp ne %"struct.blink::Region::Span"* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !4

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %48, i64 %249
  %251 = bitcast %"struct.blink::Region::Span"* %243 to i8*
  %252 = ptrtoint %"struct.blink::Region::Span"* %250 to i64
  %253 = ptrtoint %"struct.blink::Region::Span"* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast %"struct.blink::Region::Span"* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #9
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %258
  %260 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %60, i64 %258
  %261 = icmp ne %"struct.blink::Region::Span"* %260, null
  %262 = icmp ne %"struct.blink::Region::Span"* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !4

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds %"struct.blink::Region::Span", %"struct.blink::Region::Span"* %59, i64 %265
  %267 = bitcast %"struct.blink::Region::Span"* %259 to i8*
  %268 = ptrtoint %"struct.blink::Region::Span"* %266 to i64
  %269 = ptrtoint %"struct.blink::Region::Span"* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast %"struct.blink::Region::Span"* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #9
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 16
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"struct.blink::PaintChunk"* @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %24, i64 %25
  ret %"struct.blink::PaintChunk"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10PaintChunkELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %58

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::PaintChunk"* [ %54, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::PaintChunk"* [ %53, %14 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::PaintChunk"* %16 to i8*
  %18 = bitcast %"struct.blink::PaintChunk"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false) #9
  %19 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 0, i32 5
  %20 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 5
  %21 = getelementptr inbounds %"class.blink::RefCountedPropertyTreeState", %"class.blink::RefCountedPropertyTreeState"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::RefCountedPropertyTreeState"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::RefCountedPropertyTreeState"* %19 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* null, %"class.blink::TransformPaintPropertyNodeOrAlias"** %21, align 8
  %25 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 0, i32 5, i32 1
  %26 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 5, i32 1
  %27 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %26, i64 0, i32 0
  %28 = bitcast %class.scoped_refptr.0* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.scoped_refptr.0* %25 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* null, %"class.blink::ClipPaintPropertyNodeOrAlias"** %27, align 8
  %31 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 0, i32 5, i32 2
  %32 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 5, i32 2
  %33 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %32, i64 0, i32 0
  %34 = bitcast %class.scoped_refptr.1* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %class.scoped_refptr.1* %31 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* null, %"class.blink::EffectPaintPropertyNodeOrAlias"** %33, align 8
  %37 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 6
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  store %"struct.blink::HitTestData"* null, %"struct.blink::HitTestData"** %39, align 8
  %42 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 0, i32 7
  %44 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 7
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr.42"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  store %"struct.blink::LayerSelectionData"* null, %"struct.blink::LayerSelectionData"** %45, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.42"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 0, i32 8
  %50 = bitcast %"class.blink::IntRect"* %49 to i8*
  %51 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 0, i32 8
  %52 = bitcast %"class.blink::IntRect"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 34, i1 false) #9
  tail call void @_ZN5blink10PaintChunkD2Ev(%"struct.blink::PaintChunk"* %15) #9
  %53 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %16, i64 1
  %54 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %15, i64 1
  %55 = icmp eq %"struct.blink::PaintChunk"* %54, %10
  br i1 %55, label %56, label %14

56:                                               ; preds = %14, %4
  %57 = bitcast %"struct.blink::PaintChunk"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #9
  br label %125

58:                                               ; preds = %2
  %59 = zext i32 %1 to i64
  %60 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10PaintChunkEEEmm(i64 %59) #9
  %61 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %60, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10PaintChunkEEEPKcv, i64 0, i64 0)) #9
  %62 = udiv i64 %60, 112
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.blink::PaintChunk"*, %"struct.blink::PaintChunk"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %65, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %58
  %72 = bitcast %"struct.blink::PaintChunk"* %65 to i8*
  br label %120

73:                                               ; preds = %58
  %74 = bitcast i8* %61 to %"struct.blink::PaintChunk"*
  br label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.blink::PaintChunk"* [ %115, %75 ], [ %65, %73 ]
  %77 = phi %"struct.blink::PaintChunk"* [ %114, %75 ], [ %74, %73 ]
  %78 = bitcast %"struct.blink::PaintChunk"* %77 to i8*
  %79 = bitcast %"struct.blink::PaintChunk"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 32, i1 false) #9
  %80 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 0, i32 5
  %81 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 0, i32 5
  %82 = getelementptr inbounds %"class.blink::RefCountedPropertyTreeState", %"class.blink::RefCountedPropertyTreeState"* %81, i64 0, i32 0, i32 0
  %83 = bitcast %"class.blink::RefCountedPropertyTreeState"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::RefCountedPropertyTreeState"* %80 to i64*
  store i64 %84, i64* %85, align 8
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* null, %"class.blink::TransformPaintPropertyNodeOrAlias"** %82, align 8
  %86 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 0, i32 5, i32 1
  %87 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 0, i32 5, i32 1
  %88 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %87, i64 0, i32 0
  %89 = bitcast %class.scoped_refptr.0* %87 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %class.scoped_refptr.0* %86 to i64*
  store i64 %90, i64* %91, align 8
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* null, %"class.blink::ClipPaintPropertyNodeOrAlias"** %88, align 8
  %92 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 0, i32 5, i32 2
  %93 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 0, i32 5, i32 2
  %94 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %93, i64 0, i32 0
  %95 = bitcast %class.scoped_refptr.1* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %class.scoped_refptr.1* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* null, %"class.blink::EffectPaintPropertyNodeOrAlias"** %94, align 8
  %98 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 0, i32 6
  %99 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 0, i32 6
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  store %"struct.blink::HitTestData"* null, %"struct.blink::HitTestData"** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 0, i32 7
  %105 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 0, i32 7
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.42"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"struct.blink::LayerSelectionData"* null, %"struct.blink::LayerSelectionData"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.42"* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 0, i32 8
  %111 = bitcast %"class.blink::IntRect"* %110 to i8*
  %112 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 0, i32 8
  %113 = bitcast %"class.blink::IntRect"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %113, i64 34, i1 false) #9
  tail call void @_ZN5blink10PaintChunkD2Ev(%"struct.blink::PaintChunk"* %76) #9
  %114 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %77, i64 1
  %115 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %76, i64 1
  %116 = icmp eq %"struct.blink::PaintChunk"* %115, %69
  br i1 %116, label %117, label %75

117:                                              ; preds = %75
  %118 = bitcast %"class.WTF::Vector"* %0 to i8**
  %119 = load i8*, i8** %118, align 8
  br label %120

120:                                              ; preds = %71, %117
  %121 = phi i8* [ %119, %117 ], [ %72, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %121) #9
  %122 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %63, i64* %122 monotonic, align 8
  %123 = trunc i64 %62 to i32
  %124 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %123, i32* %124, align 8
  br label %125

125:                                              ; preds = %120, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10PaintChunkEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 19155236
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 19155236) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 112
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10PaintChunkD2Ev(%"struct.blink::PaintChunk"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::LayerSelectionData"*, %"struct.blink::LayerSelectionData"** %2, align 8
  store %"struct.blink::LayerSelectionData"* null, %"struct.blink::LayerSelectionData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayerSelectionData"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayerSelectionData", %"struct.blink::LayerSelectionData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::HitTestData"*, %"struct.blink::HitTestData"** %8, align 8
  store %"struct.blink::HitTestData"* null, %"struct.blink::HitTestData"** %8, align 8
  %10 = icmp eq %"struct.blink::HitTestData"* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %12, align 8
  %14 = icmp eq %"class.blink::IntRect"* %13, null
  %15 = bitcast %"class.blink::IntRect"* %13 to i8*
  br i1 %14, label %22, label %16, !prof !4

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %9, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #9
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %12, align 8
  br label %22

22:                                               ; preds = %21, %11
  %23 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::TouchActionRect"*, %"struct.blink::TouchActionRect"** %23, align 8
  %25 = icmp eq %"struct.blink::TouchActionRect"* %24, null
  %26 = bitcast %"struct.blink::TouchActionRect"* %24 to i8*
  br i1 %25, label %33, label %27, !prof !4

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.blink::HitTestData", %"struct.blink::HitTestData"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %33

33:                                               ; preds = %32, %22
  %34 = bitcast %"struct.blink::HitTestData"* %9 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %7, %33
  %36 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 2
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %36) #9
  %37 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 1
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %37) #9
  %38 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %38) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %0, i64 0, i32 0
  %3 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %15) #9
  %16 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #9
  ret void

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 1
  %19 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 4, i32 0, i32 4
  %20 = bitcast i32* %19 to %"class.cc::DocumentTransitionSharedElementId"*
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"* %20) #9
  %21 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 3, i32 0, i32 3
  %22 = bitcast %class.scoped_refptr.1* %21 to %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"**
  %23 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %22, align 8
  store %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* null, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %22, align 8
  %24 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %23, i64 0, i32 0, i32 0
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %26) #9
  %27 = bitcast %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %23 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %25, %17
  %29 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 1, i32 0, i32 4
  %30 = bitcast i32* %29 to %"class.cc::FilterOperations"*
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %30) #9
  %31 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 1, i32 0, i32 3
  %32 = bitcast %class.scoped_refptr.1* %31 to %class.scoped_refptr.0*
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %32) #9
  %33 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %18 to %class.scoped_refptr*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %33) #9
  %34 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3, i32 0
  %35 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %34, align 8
  %36 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %28
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* nonnull %35) #9
  br label %38

38:                                               ; preds = %28, %37
  %39 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %39) #9
  br label %40

40:                                               ; preds = %5, %38, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %0, i64 0, i32 0
  %3 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %59, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %59

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %15) #9
  %16 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #9
  ret void

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 6, i32 0, i32 4
  %19 = bitcast i32* %18 to %"class.blink::GeometryMapperClipCache"**
  %20 = load %"class.blink::GeometryMapperClipCache"*, %"class.blink::GeometryMapperClipCache"** %19, align 8
  store %"class.blink::GeometryMapperClipCache"* null, %"class.blink::GeometryMapperClipCache"** %19, align 8
  %21 = icmp eq %"class.blink::GeometryMapperClipCache"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"** %23, align 8
  %25 = icmp eq %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %24, null
  %26 = bitcast %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %24 to i8*
  br i1 %25, label %33, label %27, !prof !4

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %33

33:                                               ; preds = %32, %22
  %34 = bitcast %"class.blink::GeometryMapperClipCache"* %20 to i8*
  tail call void @free(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %17
  %36 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 1
  %37 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 2, i32 0, i32 3
  %38 = bitcast %class.scoped_refptr.0* %37 to %"class.blink::RefCountedPath"**
  %39 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %38, align 8
  %40 = icmp eq %"class.blink::RefCountedPath"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %39, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.base::RefCounted.162", %"class.base::RefCounted.162"* %42, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %43) #9
  %44 = getelementptr inbounds %"class.base::RefCounted.162", %"class.base::RefCounted.162"* %42, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.base::RefCounted.162", %"class.base::RefCounted.162"* %42, i64 -4
  %49 = bitcast %"class.base::RefCounted.162"* %48 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %49) #9
  %50 = bitcast %"class.base::RefCounted.162"* %48 to i8*
  tail call void @free(i8* %50) #9
  br label %51

51:                                               ; preds = %47, %41, %35
  %52 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %36 to %class.scoped_refptr*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %52) #9
  %53 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3, i32 0
  %54 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %53, align 8
  %55 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %54, null
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* nonnull %54) #9
  br label %57

57:                                               ; preds = %51, %56
  %58 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %58) #9
  br label %59

59:                                               ; preds = %5, %57, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %15) #9
  %16 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #9
  ret void

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"* nonnull %18) #9
  %19 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %19) #9
  br label %20

20:                                               ; preds = %5, %17, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::EffectPaintPropertyNodeOrAlias"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #9
  %3 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %39

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, null
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  br i1 %10, label %39, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.1* %13) #9
  %14 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %0 to i8*
  tail call void @free(i8* %14) #9
  br label %39

15:                                               ; preds = %6
  br i1 %10, label %39, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 1
  %18 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 4, i32 0, i32 4
  %19 = bitcast i32* %18 to %"class.cc::DocumentTransitionSharedElementId"*
  tail call void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"* %19) #9
  %20 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 3, i32 0, i32 3
  %21 = bitcast %class.scoped_refptr.1* %20 to %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"**
  %22 = load %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"*, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %21, align 8
  store %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* null, %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"** %21, align 8
  %23 = icmp eq %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo", %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %22, i64 0, i32 0, i32 0
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %25) #9
  %26 = bitcast %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* %22 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %24, %16
  %28 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 1, i32 0, i32 4
  %29 = bitcast i32* %28 to %"class.cc::FilterOperations"*
  tail call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* %29) #9
  %30 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 1, i32 0, i32 3
  %31 = bitcast %class.scoped_refptr.1* %30 to %class.scoped_refptr.0*
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %31) #9
  %32 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %17 to %class.scoped_refptr*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %32) #9
  %33 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %33, align 8
  %35 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink30EffectPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* nonnull %34) #9
  br label %37

37:                                               ; preds = %27, %36
  %38 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"* %0 to i8*
  tail call void @free(i8* %38) #9
  br label %39

39:                                               ; preds = %11, %12, %15, %37, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc33DocumentTransitionSharedElementIdD1Ev(%"class.cc::DocumentTransitionSharedElementId"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::ClipPaintPropertyNodeOrAlias"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #9
  %3 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %58

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, null
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  br i1 %10, label %58, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %13) #9
  %14 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %0 to i8*
  tail call void @free(i8* %14) #9
  br label %58

15:                                               ; preds = %6
  br i1 %10, label %58, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 6, i32 0, i32 4
  %18 = bitcast i32* %17 to %"class.blink::GeometryMapperClipCache"**
  %19 = load %"class.blink::GeometryMapperClipCache"*, %"class.blink::GeometryMapperClipCache"** %18, align 8
  store %"class.blink::GeometryMapperClipCache"* null, %"class.blink::GeometryMapperClipCache"** %18, align 8
  %20 = icmp eq %"class.blink::GeometryMapperClipCache"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"** %22, align 8
  %24 = icmp eq %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %23, null
  %25 = bitcast %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %23 to i8*
  br i1 %24, label %32, label %26, !prof !4

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %26
  store i32 0, i32* %27, align 4
  br label %31

31:                                               ; preds = %30, %26
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #9
  br label %32

32:                                               ; preds = %31, %21
  %33 = bitcast %"class.blink::GeometryMapperClipCache"* %19 to i8*
  tail call void @free(i8* %33) #9
  br label %34

34:                                               ; preds = %32, %16
  %35 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 2, i32 0, i32 3
  %37 = bitcast %class.scoped_refptr.0* %36 to %"class.blink::RefCountedPath"**
  %38 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %37, align 8
  %39 = icmp eq %"class.blink::RefCountedPath"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %38, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.base::RefCounted.162", %"class.base::RefCounted.162"* %41, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #9
  %43 = getelementptr inbounds %"class.base::RefCounted.162", %"class.base::RefCounted.162"* %41, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.162", %"class.base::RefCounted.162"* %41, i64 -4
  %48 = bitcast %"class.base::RefCounted.162"* %47 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %48) #9
  %49 = bitcast %"class.base::RefCounted.162"* %47 to i8*
  tail call void @free(i8* %49) #9
  br label %50

50:                                               ; preds = %46, %40, %34
  %51 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %35 to %class.scoped_refptr*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %51) #9
  %52 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, i64 0, i32 0, i32 3, i32 0
  %53 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %52, align 8
  %54 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEE7ReleaseEPS2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* nonnull %53) #9
  br label %56

56:                                               ; preds = %50, %55
  %57 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %0 to i8*
  tail call void @free(i8* %57) #9
  br label %58

58:                                               ; preds = %11, %12, %15, %56, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4PathD2Ev(%"class.blink::Path"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::GeometryMapperTransformCache"*, %"class.blink::GeometryMapperTransformCache"** %2, align 8
  store %"class.blink::GeometryMapperTransformCache"* null, %"class.blink::GeometryMapperTransformCache"** %2, align 8
  %4 = icmp eq %"class.blink::GeometryMapperTransformCache"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GeometryMapperTransformCache", %"class.blink::GeometryMapperTransformCache"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::GeometryMapperTransformCache::ScreenTransform"*, %"struct.blink::GeometryMapperTransformCache::ScreenTransform"** %6, align 8
  store %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* null, %"struct.blink::GeometryMapperTransformCache::ScreenTransform"** %6, align 8
  %8 = icmp eq %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::GeometryMapperTransformCache", %"class.blink::GeometryMapperTransformCache"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"*, %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"** %12, align 8
  store %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* null, %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"** %12, align 8
  %14 = icmp eq %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %11
  %18 = bitcast %"class.blink::GeometryMapperTransformCache"* %3 to i8*
  tail call void @free(i8* %18) #9
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %21 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %20, align 8
  store %"struct.cc::StickyPositionConstraint"* null, %"struct.cc::StickyPositionConstraint"** %20, align 8
  %22 = icmp eq %"struct.cc::StickyPositionConstraint"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 0
  %27 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %26, align 8
  %28 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %27) #9
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %36, align 8
  store %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* null, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %36, align 8
  %38 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %43 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %42, align 8
  %44 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, null
  br i1 %44, label %60, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #9
  %47 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %55) #9
  %56 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to i8*
  tail call void @free(i8* %56) #9
  br label %60

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"* nonnull %58) #9
  %59 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to i8*
  tail call void @free(i8* %59) #9
  ret void

60:                                               ; preds = %45, %54, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %0, null
  br i1 %4, label %25, label %6

6:                                                ; preds = %1
  br i1 %5, label %44, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %12) #9
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %15 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %14, align 8
  %16 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #9
  %19 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %15) #9
  br label %23

23:                                               ; preds = %17, %22, %13
  %24 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %24) #9
  br label %44

25:                                               ; preds = %1
  br i1 %5, label %44, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %31) #9
  store i8 0, i8* %27, align 8
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %33, align 8
  %35 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #9
  %38 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %34) #9
  br label %42

42:                                               ; preds = %36, %41, %32
  %43 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %43) #9
  br label %44

44:                                               ; preds = %25, %42, %6, %23
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10PaintChunkC2EjOS0_(%"struct.blink::PaintChunk"*, i32, %"struct.blink::PaintChunk"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %7, %1
  %11 = sub i32 %10, %9
  store i32 %11, i32* %5, align 4
  %12 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 2, i32 0
  %14 = load i32, i32* %12, align 8
  store i32 %14, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 3
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast float* %15 to i32*
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 4
  %22 = bitcast %"struct.blink::DisplayItem::Id"* %20 to i8*
  %23 = bitcast %"struct.blink::DisplayItem::Id"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %24, align 8
  %26 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %25, %"class.blink::TransformPaintPropertyNodeOrAlias"** %26, align 8
  %27 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #9
  br label %30

30:                                               ; preds = %28, %3
  %31 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 5, i32 1, i32 0
  %32 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 1, i32 0
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %32, %"class.blink::ClipPaintPropertyNodeOrAlias"** %33, align 8
  %34 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 5, i32 2, i32 0
  %39 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 2, i32 0
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %39, %"class.blink::EffectPaintPropertyNodeOrAlias"** %40, align 8
  %41 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %39, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #9
  br label %44

44:                                               ; preds = %37, %42
  %45 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 6
  %46 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 6
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  store %"struct.blink::HitTestData"* null, %"struct.blink::HitTestData"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 7
  %52 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 7
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unique_ptr.42"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  store %"struct.blink::LayerSelectionData"* null, %"struct.blink::LayerSelectionData"** %53, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.42"* %51 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 8
  %58 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 8
  %59 = bitcast %"class.blink::IntRect"* %57 to i8*
  %60 = bitcast %"class.blink::IntRect"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false)
  %61 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 9
  %62 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 9
  %63 = bitcast %"class.blink::IntRect"* %61 to i8*
  %64 = bitcast %"class.blink::IntRect"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false)
  %65 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 10
  %66 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 10
  %67 = load i8, i8* %66, align 8
  store i8 %67, i8* %65, align 8
  %68 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 11
  %69 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %2, i64 0, i32 11
  %70 = load i8, i8* %69, align 1
  %71 = and i8 %70, 1
  %72 = load i8, i8* %68, align 1
  %73 = and i8 %72, -2
  %74 = or i8 %73, %71
  store i8 %74, i8* %68, align 1
  %75 = load i8, i8* %69, align 1
  %76 = and i8 %75, 2
  %77 = and i8 %74, -3
  %78 = or i8 %77, %76
  store i8 %78, i8* %68, align 1
  %79 = load i8, i8* %69, align 1
  %80 = and i8 %79, 4
  %81 = and i8 %78, -29
  %82 = or i8 %80, %81
  %83 = or i8 %82, 16
  store i8 %83, i8* %68, align 1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10PaintChunkC2EjjRKNS_11DisplayItem2IdERKNS_24PropertyTreeStateOrAliasE(%"struct.blink::PaintChunk"*, i32, i32, %"struct.blink::DisplayItem::Id"* dereferenceable(16), %"class.blink::PropertyTreeStateOrAlias"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 4
  %11 = bitcast %"struct.blink::DisplayItem::Id"* %10 to i8*
  %12 = bitcast %"struct.blink::DisplayItem::Id"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %4, i64 0, i32 0
  %14 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %13, align 8
  %15 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %14, %"class.blink::TransformPaintPropertyNodeOrAlias"** %15, align 8
  %16 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #9
  br label %19

19:                                               ; preds = %17, %5
  %20 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %4, i64 0, i32 1
  %21 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 1, i32 0
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %21, %"class.blink::ClipPaintPropertyNodeOrAlias"** %22, align 8
  %23 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  br label %26

26:                                               ; preds = %24, %19
  %27 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %4, i64 0, i32 2
  %28 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 5, i32 2, i32 0
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %28, %"class.blink::EffectPaintPropertyNodeOrAlias"** %29, align 8
  %30 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #9
  br label %33

33:                                               ; preds = %26, %31
  %34 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 6
  %35 = getelementptr inbounds %"struct.blink::PaintChunk", %"struct.blink::PaintChunk"* %0, i64 0, i32 11
  %36 = bitcast %"class.std::__1::unique_ptr"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 49, i1 false)
  %37 = load i8, i8* %35, align 1
  %38 = and i8 %37, -4
  store i8 %38, i8* %35, align 1
  %39 = getelementptr inbounds %"struct.blink::DisplayItem::Id", %"struct.blink::DisplayItem::Id"* %3, i64 0, i32 0
  %40 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %40, i64 0, i32 1
  %42 = load i8, i8* %41, align 8
  %43 = icmp ne i8 %42, 20
  %44 = zext i1 %43 to i8
  %45 = shl nuw nsw i8 %44, 2
  %46 = and i8 %37, -8
  %47 = or i8 %45, %46
  store i8 %47, i8* %35, align 1
  %48 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %39, align 8
  %49 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %48, i64 0, i32 1
  %50 = load i8, i8* %49, align 8
  %51 = icmp eq i8 %50, 21
  %52 = zext i1 %51 to i8
  %53 = shl nuw nsw i8 %52, 3
  %54 = and i8 %47, -28
  %55 = or i8 %53, %54
  store i8 %55, i8* %35, align 1
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15TouchActionRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2"*, %"struct.blink::TouchActionRect"* dereferenceable(20)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::TouchActionRect"*, %"struct.blink::TouchActionRect"** %6, align 8
  %8 = icmp ugt %"struct.blink::TouchActionRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::TouchActionRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::TouchActionRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15TouchActionRectEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15TouchActionRectEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 20
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::TouchActionRect"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 20
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::TouchActionRect"*, %"struct.blink::TouchActionRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::TouchActionRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::TouchActionRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::TouchActionRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::TouchActionRect"* %1 to i64
  %56 = ptrtoint %"struct.blink::TouchActionRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 20
  %59 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::TouchActionRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15TouchActionRectEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15TouchActionRectEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::TouchActionRect"*, %"struct.blink::TouchActionRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::TouchActionRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::TouchActionRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 20
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::TouchActionRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::TouchActionRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::TouchActionRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::TouchActionRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::TouchActionRect", %"struct.blink::TouchActionRect"* %100, i64 %103
  %105 = bitcast %"struct.blink::TouchActionRect"* %104 to i8*
  %106 = bitcast %"struct.blink::TouchActionRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 20, i1 false) #9
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15TouchActionRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink7IntRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.5"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %8 = icmp ugt %"class.blink::IntRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %7, i64 %10
  %12 = icmp ugt %"class.blink::IntRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::IntRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::IntRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::IntRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::IntRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::IntRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::IntRect"* %1 to i64
  %56 = ptrtoint %"class.blink::IntRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::IntRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink7IntRectEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::IntRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::IntRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::IntRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::IntRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::IntRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::IntRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %100, i64 %103
  %105 = bitcast %"class.blink::IntRect"* %104 to i8*
  %106 = bitcast %"class.blink::IntRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #9
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink7IntRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !11}
!19 = distinct !{!19, !11}
