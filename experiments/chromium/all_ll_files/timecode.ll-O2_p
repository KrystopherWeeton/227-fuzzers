; ModuleID = '../../third_party/ffmpeg/libavutil/timecode.c'
source_filename = "../../third_party/ffmpeg/libavutil/timecode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.AVRational = type { i32, i32 }

@.str = private unnamed_addr constant [23 x i8] c"%s%02d:%02d:%02d%c%02d\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"%02u:%02u:%02u%c%02u\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"%d:%d:%d%c%d\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\0A\00", align 1
@.str.6 = private unnamed_addr constant [65 x i8] c"Valid timecode frame rate must be specified. Minimum value is 1\0A\00", align 1
@.str.7 = private unnamed_addr constant [61 x i8] c"Drop frame is only allowed with multiples of 30000/1001 FPS\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"Using non-standard frame rate %d/%d\0A\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_timecode_adjust_ntsc_framenum2(i32, i32) local_unnamed_addr #0 {
  %3 = icmp ne i32 %1, 0
  %4 = srem i32 %1, 30
  %5 = sdiv i32 %1, 30
  %6 = icmp eq i32 %4, 0
  %7 = and i1 %3, %6
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = shl nsw i32 %5, 1
  %10 = mul nsw i32 %5, 17982
  %11 = sdiv i32 %0, %10
  %12 = srem i32 %0, %10
  %13 = mul i32 %5, 18
  %14 = mul i32 %13, %11
  %15 = add i32 %14, %0
  %16 = sub nsw i32 %12, %9
  %17 = sdiv i32 %10, 10
  %18 = sdiv i32 %16, %17
  %19 = mul nsw i32 %18, %9
  %20 = add i32 %15, %19
  br label %21

21:                                               ; preds = %2, %8
  %22 = phi i32 [ %20, %8 ], [ %0, %2 ]
  ret i32 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av_timecode_get_smpte_from_framenum(%struct.AVTimecode* nocapture readonly, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %1
  br i1 %8, label %31, label %12

12:                                               ; preds = %2
  %13 = icmp ne i32 %4, 0
  %14 = srem i32 %4, 30
  %15 = sdiv i32 %4, 30
  %16 = icmp eq i32 %14, 0
  %17 = and i1 %13, %16
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = shl nsw i32 %15, 1
  %20 = mul nsw i32 %15, 17982
  %21 = sdiv i32 %11, %20
  %22 = srem i32 %11, %20
  %23 = mul i32 %15, 18
  %24 = mul i32 %23, %21
  %25 = add i32 %24, %11
  %26 = sub nsw i32 %22, %19
  %27 = sdiv i32 %20, 10
  %28 = sdiv i32 %26, %27
  %29 = mul nsw i32 %28, %19
  %30 = add i32 %25, %29
  br label %31

31:                                               ; preds = %18, %12, %2
  %32 = phi i32 [ %11, %2 ], [ %30, %18 ], [ %11, %12 ]
  %33 = urem i32 %32, %4
  %34 = udiv i32 %32, %4
  %35 = urem i32 %34, 60
  %36 = mul i32 %4, 60
  %37 = udiv i32 %32, %36
  %38 = urem i32 %37, 60
  %39 = mul i32 %4, 3600
  %40 = udiv i32 %32, %39
  %41 = urem i32 %40, 24
  %42 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 2
  %43 = bitcast %struct.AVRational* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = tail call i32 @av_timecode_get_smpte(i64 %44, i32 %7, i32 %41, i32 %38, i32 %35, i32 %33)
  ret i32 %45
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_timecode_get_smpte(i64, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = trunc i64 %0 to i32
  %8 = shl i64 %0, 32
  %9 = ashr exact i64 %8, 32
  %10 = ashr i64 %0, 32
  %11 = mul nsw i64 %10, -30
  %12 = add nsw i64 %9, %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %6
  %15 = xor i64 %12, %10
  %16 = ashr i64 %15, 63
  %17 = trunc i64 %16 to i32
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = srem i32 %5, 2
  %21 = sdiv i32 %5, 2
  %22 = icmp eq i32 %20, 1
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = mul nsw i64 %10, 50
  %25 = icmp eq i64 %9, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = icmp ugt i64 %0, 4294967295
  %28 = icmp sgt i32 %7, 0
  %29 = or i1 %27, %28
  %30 = select i1 %29, i32 128, i32 8388608
  br label %31

31:                                               ; preds = %19, %23, %26, %6, %14
  %32 = phi i32 [ 0, %14 ], [ 0, %6 ], [ 0, %19 ], [ 8388608, %23 ], [ %30, %26 ]
  %33 = phi i32 [ %5, %14 ], [ %5, %6 ], [ %21, %26 ], [ %21, %23 ], [ %21, %19 ]
  %34 = srem i32 %2, 24
  %35 = icmp slt i32 %3, 59
  %36 = select i1 %35, i32 %3, i32 59
  %37 = icmp sgt i32 %36, 0
  %38 = select i1 %37, i32 %36, i32 0
  %39 = icmp slt i32 %4, 59
  %40 = select i1 %39, i32 %4, i32 59
  %41 = icmp sgt i32 %40, 0
  %42 = select i1 %41, i32 %40, i32 0
  %43 = srem i32 %33, 40
  %44 = shl i32 %1, 30
  %45 = sdiv i32 %43, 10
  %46 = shl nsw i32 %45, 28
  %47 = srem i32 %43, 10
  %48 = shl nsw i32 %47, 24
  %49 = udiv i32 %42, 10
  %50 = shl i32 %49, 20
  %51 = urem i32 %42, 10
  %52 = shl nuw nsw i32 %51, 16
  %53 = udiv i32 %38, 10
  %54 = shl i32 %53, 12
  %55 = urem i32 %38, 10
  %56 = shl nuw nsw i32 %55, 8
  %57 = sdiv i32 %34, 10
  %58 = shl nsw i32 %57, 4
  %59 = srem i32 %34, 10
  %60 = or i32 %59, %44
  %61 = or i32 %60, %58
  %62 = or i32 %61, %54
  %63 = or i32 %62, %56
  %64 = or i32 %63, %50
  %65 = or i32 %64, %52
  %66 = or i32 %65, %32
  %67 = or i32 %66, %46
  %68 = or i32 %67, %48
  ret i32 %68
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_timecode_make_string(%struct.AVTimecode* nocapture readonly, i8* returned, i32) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %2
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %3
  %14 = icmp ne i32 %5, 0
  %15 = srem i32 %5, 30
  %16 = sdiv i32 %5, 30
  %17 = icmp eq i32 %15, 0
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %32

19:                                               ; preds = %13
  %20 = shl nsw i32 %16, 1
  %21 = mul nsw i32 %16, 17982
  %22 = sdiv i32 %11, %21
  %23 = srem i32 %11, %21
  %24 = mul i32 %16, 18
  %25 = mul i32 %24, %22
  %26 = add i32 %25, %11
  %27 = sub nsw i32 %23, %20
  %28 = sdiv i32 %21, 10
  %29 = sdiv i32 %27, %28
  %30 = mul nsw i32 %29, %20
  %31 = add i32 %26, %30
  br label %32

32:                                               ; preds = %19, %13, %3
  %33 = phi i32 [ %11, %3 ], [ %31, %19 ], [ %11, %13 ]
  %34 = icmp slt i32 %33, 0
  %35 = sub nsw i32 0, %33
  %36 = and i32 %7, 4
  %37 = select i1 %34, i32 %35, i32 %33
  %38 = srem i32 %37, %5
  %39 = sdiv i32 %37, %5
  %40 = srem i32 %39, 60
  %41 = mul nsw i32 %5, 60
  %42 = sdiv i32 %37, %41
  %43 = srem i32 %42, 60
  %44 = mul nsw i32 %5, 3600
  %45 = sdiv i32 %37, %44
  %46 = and i32 %7, 2
  %47 = icmp eq i32 %46, 0
  %48 = srem i32 %45, 24
  %49 = select i1 %47, i32 %45, i32 %48
  %50 = icmp eq i32 %36, 0
  %51 = xor i1 %34, true
  %52 = or i1 %50, %51
  %53 = select i1 %52, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)
  %54 = or i32 %8, 58
  %55 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 23, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* nonnull %53, i32 %49, i32 %43, i32 %40, i32 %54, i32 %38) #7
  ret i8* %1
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_timecode_make_smpte_tc_string2(i8* returned, i64, i32, i32, i32) local_unnamed_addr #3 {
  %6 = and i32 %2, 15
  %7 = icmp ugt i32 %6, 9
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = lshr i32 %2, 4
  %10 = and i32 %9, 3
  %11 = mul nuw nsw i32 %10, 10
  %12 = add nuw nsw i32 %11, %6
  br label %13

13:                                               ; preds = %5, %8
  %14 = phi i32 [ %12, %8 ], [ 0, %5 ]
  %15 = lshr i32 %2, 8
  %16 = and i32 %15, 15
  %17 = icmp ugt i32 %16, 9
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = lshr i32 %2, 12
  %20 = and i32 %19, 7
  %21 = mul nuw nsw i32 %20, 10
  %22 = add nuw nsw i32 %21, %16
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi i32 [ %22, %18 ], [ 0, %13 ]
  %25 = lshr i32 %2, 16
  %26 = and i32 %25, 15
  %27 = icmp ugt i32 %26, 9
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = lshr i32 %2, 20
  %30 = and i32 %29, 7
  %31 = mul nuw nsw i32 %30, 10
  %32 = add nuw nsw i32 %31, %26
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi i32 [ %32, %28 ], [ 0, %23 ]
  %35 = lshr i32 %2, 24
  %36 = and i32 %35, 15
  %37 = icmp ugt i32 %36, 9
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = lshr i32 %2, 28
  %40 = and i32 %39, 3
  %41 = mul nuw nsw i32 %40, 10
  %42 = add nuw nsw i32 %41, %36
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi i32 [ %42, %38 ], [ 0, %33 ]
  %45 = and i32 %2, 1073741824
  %46 = icmp eq i32 %45, 0
  %47 = icmp eq i32 %3, 0
  %48 = select i1 %47, i32 59, i32 58
  %49 = select i1 %46, i32 58, i32 %48
  %50 = trunc i64 %1 to i32
  %51 = shl i64 %1, 32
  %52 = ashr exact i64 %51, 32
  %53 = ashr i64 %1, 32
  %54 = mul nsw i64 %53, -30
  %55 = add nsw i64 %52, %54
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %80, label %57

57:                                               ; preds = %43
  %58 = xor i64 %55, %53
  %59 = ashr i64 %58, 63
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %62, label %80

62:                                               ; preds = %57
  %63 = shl nsw i32 %44, 1
  %64 = icmp eq i32 %4, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %62
  %66 = mul nsw i64 %53, 50
  %67 = icmp eq i64 %52, %66
  br i1 %67, label %68, label %76

68:                                               ; preds = %65
  %69 = icmp ugt i64 %1, 4294967295
  %70 = icmp sgt i32 %50, 0
  %71 = or i1 %69, %70
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = lshr i32 %2, 7
  %74 = and i32 %73, 1
  %75 = or i32 %63, %74
  br label %80

76:                                               ; preds = %68, %65
  %77 = lshr i32 %2, 23
  %78 = and i32 %77, 1
  %79 = or i32 %63, %78
  br label %80

80:                                               ; preds = %43, %62, %76, %72, %57
  %81 = phi i32 [ %63, %62 ], [ %75, %72 ], [ %79, %76 ], [ %44, %57 ], [ %44, %43 ]
  %82 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %14, i32 %24, i32 %34, i32 %49, i32 %81) #7
  ret i8* %0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_timecode_make_smpte_tc_string(i8* returned, i32, i32) local_unnamed_addr #3 {
  %4 = and i32 %1, 15
  %5 = icmp ugt i32 %4, 9
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = lshr i32 %1, 4
  %8 = and i32 %7, 3
  %9 = mul nuw nsw i32 %8, 10
  %10 = add nuw nsw i32 %9, %4
  br label %11

11:                                               ; preds = %6, %3
  %12 = phi i32 [ %10, %6 ], [ 0, %3 ]
  %13 = lshr i32 %1, 8
  %14 = and i32 %13, 15
  %15 = icmp ugt i32 %14, 9
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = lshr i32 %1, 12
  %18 = and i32 %17, 7
  %19 = mul nuw nsw i32 %18, 10
  %20 = add nuw nsw i32 %19, %14
  br label %21

21:                                               ; preds = %16, %11
  %22 = phi i32 [ %20, %16 ], [ 0, %11 ]
  %23 = lshr i32 %1, 16
  %24 = and i32 %23, 15
  %25 = icmp ugt i32 %24, 9
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = lshr i32 %1, 20
  %28 = and i32 %27, 7
  %29 = mul nuw nsw i32 %28, 10
  %30 = add nuw nsw i32 %29, %24
  br label %31

31:                                               ; preds = %26, %21
  %32 = phi i32 [ %30, %26 ], [ 0, %21 ]
  %33 = lshr i32 %1, 24
  %34 = and i32 %33, 15
  %35 = icmp ugt i32 %34, 9
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = lshr i32 %1, 28
  %38 = and i32 %37, 3
  %39 = mul nuw nsw i32 %38, 10
  %40 = add nuw nsw i32 %39, %34
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi i32 [ %40, %36 ], [ 0, %31 ]
  %43 = and i32 %1, 1073741824
  %44 = icmp eq i32 %43, 0
  %45 = icmp eq i32 %2, 0
  %46 = select i1 %45, i32 59, i32 58
  %47 = select i1 %44, i32 58, i32 %46
  %48 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %12, i32 %22, i32 %32, i32 %47, i32 %42) #7
  ret i8* %0
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @av_timecode_make_mpeg_tc_string(i8* returned, i32) local_unnamed_addr #3 {
  %3 = lshr i32 %1, 19
  %4 = and i32 %3, 31
  %5 = lshr i32 %1, 13
  %6 = and i32 %5, 63
  %7 = lshr i32 %1, 6
  %8 = and i32 %7, 63
  %9 = and i32 %1, 16777216
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i32 58, i32 59
  %12 = and i32 %1, 63
  %13 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %4, i32 %6, i32 %8, i32 %11, i32 %12) #7
  ret i8* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @av_timecode_check_frame_rate(i64) local_unnamed_addr #0 {
  %2 = trunc i64 %0 to i32
  %3 = lshr i64 %0, 32
  %4 = trunc i64 %3 to i32
  %5 = icmp eq i32 %4, 0
  %6 = icmp eq i32 %2, 0
  %7 = or i1 %6, %5
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = sdiv i32 %4, 2
  %10 = add nsw i32 %9, %2
  %11 = sdiv i32 %10, %4
  switch i32 %11, label %12 [
    i32 24, label %13
    i32 25, label %13
    i32 30, label %13
    i32 48, label %13
    i32 50, label %13
    i32 60, label %13
    i32 100, label %13
    i32 120, label %13
    i32 150, label %13
  ]

12:                                               ; preds = %1, %8
  br label %13

13:                                               ; preds = %8, %8, %8, %8, %8, %8, %8, %8, %8, %12
  %14 = phi i32 [ 0, %8 ], [ -1, %12 ], [ 0, %8 ], [ 0, %8 ], [ 0, %8 ], [ 0, %8 ], [ 0, %8 ], [ 0, %8 ], [ 0, %8 ], [ 0, %8 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_timecode_init(%struct.AVTimecode* nocapture, i64, i32, i32, i8*) local_unnamed_addr #5 {
  %6 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 3
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 0
  store i32 %3, i32* %7, align 4
  %8 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 2
  %10 = bitcast %struct.AVRational* %9 to i64*
  store i64 %1, i64* %10, align 4
  %11 = trunc i64 %1 to i32
  %12 = lshr i64 %1, 32
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, 0
  %15 = icmp eq i32 %11, 0
  %16 = or i1 %15, %14
  br i1 %16, label %21, label %17

17:                                               ; preds = %5
  %18 = sdiv i32 %13, 2
  %19 = add nsw i32 %18, %11
  %20 = sdiv i32 %19, %13
  br label %21

21:                                               ; preds = %5, %17
  %22 = phi i32 [ %20, %17 ], [ -1, %5 ]
  %23 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 3
  store i32 %22, i32* %23, align 4
  %24 = tail call fastcc i32 @check_timecode(i8* %4, %struct.AVTimecode* %0)
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @check_timecode(i8*, %struct.AVTimecode* nocapture readonly) unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = urem i32 %4, 30
  %13 = icmp eq i32 %12, 0
  %14 = or i1 %13, %11
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %22

16:                                               ; preds = %7
  switch i32 %4, label %17 [
    i32 24, label %22
    i32 25, label %22
    i32 30, label %22
    i32 48, label %22
    i32 50, label %22
    i32 60, label %22
    i32 100, label %22
    i32 120, label %22
    i32 150, label %22
  ]

17:                                               ; preds = %16
  %18 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %1, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %1, i64 0, i32 2, i32 1
  %21 = load i32, i32* %20, align 4
  tail call void (i8*, i32, i8*, ...) @av_log(i8* %0, i32 24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i32 %19, i32 %21) #7
  br label %22

22:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16, %16, %17, %15, %6
  %23 = phi i32 [ -22, %6 ], [ -22, %15 ], [ 0, %17 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ], [ 0, %16 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_timecode_init_from_components(%struct.AVTimecode* nocapture, i64, i32, i32, i32, i32, i32, i8*) local_unnamed_addr #5 {
  %9 = bitcast %struct.AVTimecode* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 20, i1 false)
  %10 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 2
  %12 = bitcast %struct.AVRational* %11 to i64*
  store i64 %1, i64* %12, align 4
  %13 = trunc i64 %1 to i32
  %14 = lshr i64 %1, 32
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %15, 0
  %17 = icmp eq i32 %13, 0
  %18 = or i1 %17, %16
  br i1 %18, label %23, label %19

19:                                               ; preds = %8
  %20 = sdiv i32 %15, 2
  %21 = add nsw i32 %20, %13
  %22 = sdiv i32 %21, %15
  br label %23

23:                                               ; preds = %8, %19
  %24 = phi i32 [ %22, %19 ], [ -1, %8 ]
  %25 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 3
  store i32 %24, i32* %25, align 4
  %26 = tail call fastcc i32 @check_timecode(i8* %7, %struct.AVTimecode* %0)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %49, label %28

28:                                               ; preds = %23
  %29 = mul nsw i32 %3, 3600
  %30 = mul nsw i32 %4, 60
  %31 = add nsw i32 %30, %29
  %32 = add nsw i32 %31, %5
  %33 = load i32, i32* %25, align 4
  %34 = mul i32 %33, %32
  %35 = add i32 %34, %6
  %36 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 0
  store i32 %35, i32* %36, align 4
  %37 = load i32, i32* %10, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %28
  %41 = mul nsw i32 %3, 60
  %42 = add nsw i32 %41, %4
  %43 = udiv i32 %33, 30
  %44 = sdiv i32 %42, 10
  %45 = sub nsw i32 %42, %44
  %46 = shl i32 %45, 1
  %47 = mul i32 %46, %43
  %48 = sub i32 %35, %47
  store i32 %48, i32* %36, align 4
  br label %49

49:                                               ; preds = %40, %28, %23
  %50 = phi i32 [ %26, %23 ], [ 0, %28 ], [ 0, %40 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_timecode_init_from_string(%struct.AVTimecode* nocapture, i64, i8* nocapture readonly, i8*) local_unnamed_addr #5 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  store i8 -86, i8* %5, align 1
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  store i32 -1431655766, i32* %6, align 4
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 -1431655766, i32* %7, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  store i32 -1431655766, i32* %8, align 4
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #7
  store i32 -1431655766, i32* %9, align 4
  %14 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %8, i8* nonnull %5, i32* nonnull %9) #7
  %15 = icmp eq i32 %14, 5
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  call void (i8*, i32, i8*, ...) @av_log(i8* %3, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %65

17:                                               ; preds = %4
  %18 = load i8, i8* %5, align 1
  %19 = icmp ne i8 %18, 58
  %20 = zext i1 %19 to i32
  %21 = load i32, i32* %6, align 4
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %8, align 4
  %24 = load i32, i32* %9, align 4
  %25 = bitcast %struct.AVTimecode* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 20, i1 false) #7
  %26 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 1
  store i32 %20, i32* %26, align 4
  %27 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 2
  %28 = bitcast %struct.AVRational* %27 to i64*
  store i64 %1, i64* %28, align 4
  %29 = trunc i64 %1 to i32
  %30 = lshr i64 %1, 32
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %31, 0
  %33 = icmp eq i32 %29, 0
  %34 = or i1 %33, %32
  br i1 %34, label %39, label %35

35:                                               ; preds = %17
  %36 = sdiv i32 %31, 2
  %37 = add nsw i32 %36, %29
  %38 = sdiv i32 %37, %31
  br label %39

39:                                               ; preds = %35, %17
  %40 = phi i32 [ %38, %35 ], [ -1, %17 ]
  %41 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 3
  store i32 %40, i32* %41, align 4
  %42 = call fastcc i32 @check_timecode(i8* %3, %struct.AVTimecode* %0) #7
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %39
  %45 = mul nsw i32 %21, 3600
  %46 = mul nsw i32 %22, 60
  %47 = add nsw i32 %46, %45
  %48 = add nsw i32 %47, %23
  %49 = load i32, i32* %41, align 4
  %50 = mul i32 %49, %48
  %51 = add i32 %50, %24
  %52 = getelementptr inbounds %struct.AVTimecode, %struct.AVTimecode* %0, i64 0, i32 0
  store i32 %51, i32* %52, align 4
  %53 = load i32, i32* %26, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %44
  %57 = mul nsw i32 %21, 60
  %58 = add nsw i32 %57, %22
  %59 = udiv i32 %49, 30
  %60 = sdiv i32 %58, 10
  %61 = sub nsw i32 %58, %60
  %62 = shl i32 %61, 1
  %63 = mul i32 %62, %59
  %64 = sub i32 %51, %63
  store i32 %64, i32* %52, align 4
  br label %65

65:                                               ; preds = %56, %44, %39, %16
  %66 = phi i32 [ -1094995529, %16 ], [ %42, %39 ], [ 0, %44 ], [ 0, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  ret i32 %66
}

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #4

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
