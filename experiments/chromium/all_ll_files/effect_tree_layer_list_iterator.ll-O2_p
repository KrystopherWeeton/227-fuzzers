; ModuleID = '../../cc/layers/effect_tree_layer_list_iterator.cc'
source_filename = "../../cc/layers/effect_tree_layer_list_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::EffectTreeLayerListIterator" = type { i32, %"class.cc::LayerTreeImpl::IteratorAdapter", i32, i32, i32, %"class.cc::LayerTreeImpl"*, %"class.cc::EffectTree"* }
%"class.cc::LayerTreeImpl::IteratorAdapter" = type { %"class.std::__1::reverse_iterator" }
%"class.std::__1::reverse_iterator" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1168", %"class.std::__1::unique_ptr.1188", i8, [7 x i8] }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1158" }
%"class.base::flat_map.1158" = type { %"class.base::internal::flat_tree.1159" }
%"class.base::internal::flat_tree.1159" = type { %"class.std::__1::vector.1160" }
%"class.std::__1::vector.1160" = type { %"class.std::__1::__vector_base.1161" }
%"class.std::__1::__vector_base.1161" = type { %"struct.std::__1::pair.1162"*, %"struct.std::__1::pair.1162"*, %"class.std::__1::__compressed_pair.1163" }
%"struct.std::__1::pair.1162" = type opaque
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::pair.1162"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1171", %"class.std::__1::vector.1171", %"class.std::__1::vector.1178" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.1171" = type { %"class.std::__1::__vector_base.1172" }
%"class.std::__1::__vector_base.1172" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { i8** }
%"class.std::__1::vector.1178" = type { %"class.std::__1::__vector_base.1179" }
%"class.std::__1::__vector_base.1179" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1180" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.cc::Region"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.850", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.908" }
%"class.cc::PropertyTree.850" = type { i32 (...)**, %"class.std::__1::vector.851", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.880" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.874", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.853" }
%"class.std::__1::vector.853" = type { %"class.std::__1::__vector_base.854" }
%"class.std::__1::__vector_base.854" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.869" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.855, [20 x float], i32, [4 x i8], %"class.std::__1::vector.862", i32, [4 x i8] }>
%class.sk_sp.855 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.856, i32, %"class.absl::optional.857", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.856 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.857" = type { %"class.absl::optional_internal::optional_data.858" }
%"class.absl::optional_internal::optional_data.858" = type { %"class.absl::optional_internal::optional_data_base.859" }
%"class.absl::optional_internal::optional_data_base.859" = type { %"class.absl::optional_internal::optional_data_dtor_base.860" }
%"class.absl::optional_internal::optional_data_dtor_base.860" = type { i8, %union.anon.861 }
%union.anon.861 = type { %struct.SkRect }
%"class.std::__1::vector.862" = type { %"class.std::__1::__vector_base.863" }
%"class.std::__1::__vector_base.863" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.874" = type { %"class.absl::optional_internal::optional_data.875" }
%"class.absl::optional_internal::optional_data.875" = type { %"class.absl::optional_internal::optional_data_base.876" }
%"class.absl::optional_internal::optional_data_base.876" = type { %"class.absl::optional_internal::optional_data_dtor_base.877" }
%"class.absl::optional_internal::optional_data_dtor_base.877" = type { i8, %union.anon.878 }
%union.anon.878 = type { %"class.gfx::RRectF" }
%"class.gfx::PointF" = type { float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.879" }
%"class.base::internal::flat_tree.879" = type { %"class.std::__1::vector.811" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i32*, i32*, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i32* }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"struct.cc::EffectNode"* }
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.819", %"class.base::flat_map.819", %"class.base::flat_map.819", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.819" = type { %"class.base::internal::flat_tree.820" }
%"class.base::internal::flat_tree.820" = type { %"class.std::__1::vector.821" }
%"class.std::__1::vector.821" = type { %"class.std::__1::__vector_base.822" }
%"class.std::__1::__vector_base.822" = type { %"struct.std::__1::pair.823"*, %"struct.std::__1::pair.823"*, %"class.std::__1::__compressed_pair.824" }
%"struct.std::__1::pair.823" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.std::__1::pair.823"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.239", %"class.std::__1::vector.836", %"class.std::__1::vector.843" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.829", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.831" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { i32*, i32*, %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { i32* }
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.838" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.845" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.927" }
%"class.cc::PropertyTree.927" = type { i32 (...)**, %"class.std::__1::vector.928", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.928" = type { %"class.std::__1::__vector_base.929" }
%"class.std::__1::__vector_base.929" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.930" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.935", i32, %"class.base::flat_map.943", %"class.base::flat_map.953", %"class.base::WeakPtr.963" }
%"class.cc::PropertyTree.935" = type { i32 (...)**, %"class.std::__1::vector.936", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.938" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.943" = type { %"class.base::internal::flat_tree.944" }
%"class.base::internal::flat_tree.944" = type { %"class.std::__1::vector.945" }
%"class.std::__1::vector.945" = type { %"class.std::__1::__vector_base.946" }
%"class.std::__1::__vector_base.946" = type { %"struct.std::__1::pair.947"*, %"struct.std::__1::pair.947"*, %"class.std::__1::__compressed_pair.948" }
%"struct.std::__1::pair.947" = type opaque
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"struct.std::__1::pair.947"* }
%"class.base::flat_map.953" = type { %"class.base::internal::flat_tree.954" }
%"class.base::internal::flat_tree.954" = type { %"class.std::__1::vector.955" }
%"class.std::__1::vector.955" = type { %"class.std::__1::__vector_base.956" }
%"class.std::__1::__vector_base.956" = type { %"struct.std::__1::pair.957"*, %"struct.std::__1::pair.957"*, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"* }
%"class.base::WeakPtr.963" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.160 }
%class.scoped_refptr.160 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.55", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.964", %"class.std::__1::vector.971" }
%"class.std::__1::vector.964" = type { %"class.std::__1::__vector_base.965" }
%"class.std::__1::__vector_base.965" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.966" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.971" = type { %"class.std::__1::__vector_base.972" }
%"class.std::__1::__vector_base.972" = type { %"class.std::__1::vector.973"*, %"class.std::__1::vector.973"*, %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::vector.973" = type opaque
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.std::__1::vector.973"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.885" }
%"class.std::__1::__hash_table.885" = type <{ %"class.std::__1::unique_ptr.886", %"class.std::__1::__compressed_pair.896", %"class.std::__1::__compressed_pair.901", %"class.std::__1::__compressed_pair.904", [4 x i8] }>
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888", %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"struct.std::__1::__hash_node_base.889"** }
%"struct.std::__1::__hash_node_base.889" = type { %"struct.std::__1::__hash_node_base.889"* }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.std::__1::__bucket_list_deallocator.891" }
%"class.std::__1::__bucket_list_deallocator.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"struct.std::__1::__hash_node_base.889" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { float }
%"class.std::__1::vector.908" = type { %"class.std::__1::__vector_base.909" }
%"class.std::__1::__vector_base.909" = type { %"class.std::__1::unique_ptr.910"*, %"class.std::__1::unique_ptr.910"*, %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.913" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::unique_ptr.910"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.979", %class.scoped_refptr.980, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.986, %"class.std::__1::vector.990", %"class.std::__1::unordered_map.997", %"class.base::internal::flat_tree.1021", %"class.std::__1::unordered_map.1029", %"class.std::__1::unordered_map.1053", %"class.std::__1::unordered_map.1077", %"class.std::__1::unordered_map.1077", %"class.base::flat_map.1101", %"class.std::__1::vector.1111", %"class.base::internal::flat_tree.1118", %"class.base::internal::flat_tree.602", %"class.std::__1::vector.1119", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.118", %"class.std::__1::vector.118", %"class.std::__1::vector.1126", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1133, %class.scoped_refptr.1133, %"class.std::__1::unique_ptr.1138", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.637", %"class.std::__1::vector.760", %"class.std::__1::unique_ptr.1144", %"class.std::__1::vector.1150" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.9", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.106", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.gfx::Vector2dF", %"class.std::__1::vector.118", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.410", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.467", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.479", %"class.std::__1::set.485", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.495", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.536", %"class.base::RepeatingCallback.332", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.542", i8, i8, i8, i32, %"class.std::__1::unique_ptr.552", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.558", %"class.std::__1::vector.564", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.584", %"class.std::__1::unique_ptr.596", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.602", %"class.absl::optional.615", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.86", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.690", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.768", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.811", %"class.base::WeakPtrFactory.818" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.15" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.20", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.36", [4 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.46, %class.scoped_refptr.47, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.48", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.46 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.47 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.86", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.94" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.76"*, i64 }
%"class.std::__1::unique_ptr.76" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.94" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.101" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.101" = type { %"class.base::internal::VectorBuffer.102", i64, i64 }
%"class.base::internal::VectorBuffer.102" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.126", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.132", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.359", %"class.std::__1::vector.214", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.397", %"class.base::WeakPtrFactory.397" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.132" = type { %"class.std::__1::__hash_table.133" }
%"class.std::__1::__hash_table.133" = type <{ %"class.std::__1::unique_ptr.134", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.154", [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136", %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.137"** }
%"struct.std::__1::__hash_node_base.137" = type { %"struct.std::__1::__hash_node_base.137"* }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::__bucket_list_deallocator.139" }
%"class.std::__1::__bucket_list_deallocator.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.137" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.159, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.161", %"class.base::flat_map.191", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.201", %"class.std::__1::map.201", i8, %"class.std::__1::vector.210", %"class.base::WeakPtrFactory.226" }
%class.scoped_refptr.159 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.186" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.181", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.164, %"class.gfx::Rect", i32, %class.sk_sp.169, %class.sk_sp.177, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.178 }
%class.sk_sp.164 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.165", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { i8* }
%class.sk_sp.169 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.170" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.163, i32, i32 }
%class.sk_sp.163 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.56" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.172" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.177 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.178 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.179", [4 x i8] }>
%"class.base::RefCountedThreadSafe.179" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.180 }
%union.anon.180 = type { i64 }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.191" = type { %"class.base::internal::flat_tree.192" }
%"class.base::internal::flat_tree.192" = type { %"class.std::__1::vector.193" }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"*, %"class.std::__1::__compressed_pair.196" }
%"struct.std::__1::pair.195" = type opaque
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.std::__1::pair.195"* }
%"class.std::__1::map.201" = type { %"class.std::__1::__tree.202" }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.221" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.212, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.89 }
%class.scoped_refptr.89 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.90", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.90" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.212 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.214", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.213", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.213" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.226" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.227", i8, %class.scoped_refptr.159, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.237" }
%"class.base::flat_map.227" = type { %"class.base::internal::flat_tree.228" }
%"class.base::internal::flat_tree.228" = type { %"class.std::__1::vector.229" }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"struct.std::__1::pair.231"*, %"struct.std::__1::pair.231"*, %"class.std::__1::__compressed_pair.232" }
%"struct.std::__1::pair.231" = type { i32, %"class.std::__1::unique_ptr.1294" }
%"class.std::__1::unique_ptr.1294" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::pair.231"* }
%"class.base::WeakPtrFactory.237" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.238", %"class.base::internal::flat_tree.238", %"class.std::__1::vector.246", i32, %"class.absl::optional.253", %"class.std::__1::unordered_map.258", %"class.std::__1::unordered_map.282", %"class.base::flat_map.306", %"class.base::WeakPtrFactory.316" }
%"class.base::internal::flat_tree.238" = type { %"class.std::__1::vector.239" }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.248" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.253" = type { %"class.absl::optional_internal::optional_data.254" }
%"class.absl::optional_internal::optional_data.254" = type { %"class.absl::optional_internal::optional_data_base.255" }
%"class.absl::optional_internal::optional_data_base.255" = type { %"class.absl::optional_internal::optional_data_dtor_base.256" }
%"class.absl::optional_internal::optional_data_dtor_base.256" = type { i8, %union.anon.257 }
%union.anon.257 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.282" = type { %"class.std::__1::__hash_table.283" }
%"class.std::__1::__hash_table.283" = type <{ %"class.std::__1::unique_ptr.284", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.302", [4 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286", %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base.287"** }
%"struct.std::__1::__hash_node_base.287" = type { %"struct.std::__1::__hash_node_base.287"* }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::__bucket_list_deallocator.289" }
%"class.std::__1::__bucket_list_deallocator.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.287" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::flat_map.306" = type { %"class.base::internal::flat_tree.307" }
%"class.base::internal::flat_tree.307" = type { %"class.std::__1::vector.308" }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"struct.std::__1::pair.310"*, %"struct.std::__1::pair.310"*, %"class.std::__1::__compressed_pair.311" }
%"struct.std::__1::pair.310" = type { i32, i32 }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::pair.310"* }
%"class.base::WeakPtrFactory.316" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.317", %"class.std::__1::vector.325" }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.320" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.319, i16, i16, i32 }
%class.scoped_refptr.319 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.327" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.332", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.333" }
%"class.base::WeakPtrFactory.333" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.334" }
%"class.std::__1::__hash_table.334" = type <{ %"class.std::__1::unique_ptr.335", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.354", [4 x i8] }>
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::__hash_node_base.338"** }
%"struct.std::__1::__hash_node_base.338" = type { %"struct.std::__1::__hash_node_base.338"* }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::__bucket_list_deallocator.340" }
%"class.std::__1::__bucket_list_deallocator.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::__hash_node_base.338" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.359" = type { %"class.std::__1::__hash_table.360" }
%"class.std::__1::__hash_table.360" = type <{ %"class.std::__1::unique_ptr.361", %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.379", [4 x i8] }>
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363", %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.364"** }
%"struct.std::__1::__hash_node_base.364" = type { %"struct.std::__1::__hash_node_base.364"* }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.std::__1::__bucket_list_deallocator.366" }
%"class.std::__1::__bucket_list_deallocator.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.364" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %class.scoped_refptr.212*, %class.scoped_refptr.212*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %class.scoped_refptr.212* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.383" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.389", %"class.base::WeakPtrFactory.390" }
%"class.base::OnceCallback.389" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.390" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.391, i8, [7 x i8] }>
%class.scoped_refptr.391 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.392", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.392" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.393" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::WeakPtrFactory.397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.401", %"class.absl::optional.401", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.401" = type { %"class.absl::optional_internal::optional_data.402" }
%"class.absl::optional_internal::optional_data.402" = type { %"class.absl::optional_internal::optional_data_base.403" }
%"class.absl::optional_internal::optional_data_base.403" = type { %"class.absl::optional_internal::optional_data_dtor_base.404" }
%"class.absl::optional_internal::optional_data_dtor_base.404" = type { i8, %union.anon.405 }
%union.anon.405 = type { %"struct.std::__1::pair.406" }
%"struct.std::__1::pair.406" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.426", %"class.absl::optional.426", %"class.absl::optional.426", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.445, %"class.absl::optional.446", %"class.std::__1::map.451" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.422" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.416"**, %"struct.std::__1::pair.416"**, %"struct.std::__1::pair.416"**, %"class.std::__1::__compressed_pair.417" }
%"struct.std::__1::pair.416" = type opaque
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::pair.416"** }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.426" = type { %"class.absl::optional_internal::optional_data.427" }
%"class.absl::optional_internal::optional_data.427" = type { %"class.absl::optional_internal::optional_data_base.428" }
%"class.absl::optional_internal::optional_data_base.428" = type { %"class.absl::optional_internal::optional_data_dtor_base.429" }
%"class.absl::optional_internal::optional_data_dtor_base.429" = type { i8, %union.anon.430 }
%union.anon.430 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.431", %"class.base::circular_deque.432", %"class.std::__1::map.434", %"class.absl::optional" }
%"class.base::RepeatingCallback.431" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.432" = type { %"class.base::internal::VectorBuffer.433", i64, i64 }
%"class.base::internal::VectorBuffer.433" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.434" = type { %"class.std::__1::__tree.435" }
%"class.std::__1::__tree.435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%struct.anon.445 = type { double, double }
%"class.absl::optional.446" = type { %"class.absl::optional_internal::optional_data.447" }
%"class.absl::optional_internal::optional_data.447" = type { %"class.absl::optional_internal::optional_data_base.448" }
%"class.absl::optional_internal::optional_data_base.448" = type { %"class.absl::optional_internal::optional_data_dtor_base.449" }
%"class.absl::optional_internal::optional_data_dtor_base.449" = type { i8, %union.anon.450 }
%union.anon.450 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.451" = type { %"class.std::__1::__tree.452" }
%"class.std::__1::__tree.452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.463" }
%"class.base::RingBuffer.463" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.495" = type { %"class.std::__1::__hash_table.496" }
%"class.std::__1::__hash_table.496" = type <{ %"class.std::__1::unique_ptr.497", %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.512", %"class.std::__1::__compressed_pair.515", [4 x i8] }>
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499", %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.500"** }
%"struct.std::__1::__hash_node_base.500" = type { %"struct.std::__1::__hash_node_base.500"* }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.std::__1::__bucket_list_deallocator.502" }
%"class.std::__1::__bucket_list_deallocator.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.500" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.521" }
%"class.std::__1::vector.521" = type { %"class.std::__1::__vector_base.522" }
%"class.std::__1::__vector_base.522" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.528" }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"class.std::__1::unique_ptr.530"*, %"class.std::__1::unique_ptr.530"*, %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::unique_ptr.530" = type opaque
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.std::__1::unique_ptr.530"* }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.332" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.542" = type { %"class.std::__1::__tree.543" }
%"class.std::__1::__tree.543" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.564" = type { %"class.std::__1::__vector_base.565" }
%"class.std::__1::__vector_base.565" = type { %"struct.std::__1::pair.566"*, %"struct.std::__1::pair.566"*, %"class.std::__1::__compressed_pair.567" }
%"struct.std::__1::pair.566" = type opaque
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::pair.566"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.572", %"class.base::internal::flat_tree.238", %"class.base::internal::flat_tree.238", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.572" = type { %"class.base::internal::flat_tree.573" }
%"class.base::internal::flat_tree.573" = type { %"class.std::__1::vector.574" }
%"class.std::__1::vector.574" = type { %"class.std::__1::__vector_base.575" }
%"class.std::__1::__vector_base.575" = type { %"struct.std::__1::pair.576"*, %"struct.std::__1::pair.576"*, %"class.std::__1::__compressed_pair.577" }
%"struct.std::__1::pair.576" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.170", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1300", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1300" = type { %"class.std::__1::vector.1301" }
%"class.std::__1::vector.1301" = type { %"class.std::__1::__vector_base.1302" }
%"class.std::__1::__vector_base.1302" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1303" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::pair.576"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.582", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.583" }
%"class.base::RepeatingCallback.582" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.583" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.587" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.615" = type { %"class.absl::optional_internal::optional_data.616" }
%"class.absl::optional_internal::optional_data.616" = type { %"class.absl::optional_internal::optional_data_base.617" }
%"class.absl::optional_internal::optional_data_base.617" = type { %"class.absl::optional_internal::optional_data_dtor_base.618" }
%"class.absl::optional_internal::optional_data_dtor_base.618" = type { i8, [7 x i8], %union.anon.619 }
%union.anon.619 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.620", %"struct.viz::Selection", i8, %"class.absl::optional.625", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.630", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.620" = type { %"class.absl::optional_internal::optional_data.621" }
%"class.absl::optional_internal::optional_data.621" = type { %"class.absl::optional_internal::optional_data_base.622" }
%"class.absl::optional_internal::optional_data_base.622" = type { %"class.absl::optional_internal::optional_data_dtor_base.623" }
%"class.absl::optional_internal::optional_data_dtor_base.623" = type { i8, %union.anon.624 }
%union.anon.624 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.625" = type { %"class.absl::optional_internal::optional_data.626" }
%"class.absl::optional_internal::optional_data.626" = type { %"class.absl::optional_internal::optional_data_base.627" }
%"class.absl::optional_internal::optional_data_base.627" = type { %"class.absl::optional_internal::optional_data_dtor_base.628" }
%"class.absl::optional_internal::optional_data_dtor_base.628" = type { i8, %union.anon.629 }
%union.anon.629 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.630" = type { %"class.absl::optional_internal::optional_data.631" }
%"class.absl::optional_internal::optional_data.631" = type { %"class.absl::optional_internal::optional_data_base.632" }
%"class.absl::optional_internal::optional_data_base.632" = type { %"class.absl::optional_internal::optional_data_dtor_base.633" }
%"class.absl::optional_internal::optional_data_dtor_base.633" = type { i8, %union.anon.634 }
%union.anon.634 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.635" }
%"class.base::circular_deque.635" = type { %"class.base::internal::VectorBuffer.636", i64, i64 }
%"class.base::internal::VectorBuffer.636" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.637", %"class.std::__1::vector.637" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.645", %"class.base::flat_map.651", %"class.base::flat_map.661", %"class.base::RepeatingCallback.671", %"class.std::__1::vector.672", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.680", i64, i64 }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.651" = type { %"class.base::internal::flat_tree.652" }
%"class.base::internal::flat_tree.652" = type { %"class.std::__1::vector.653" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { %"struct.std::__1::pair.655"*, %"struct.std::__1::pair.655"*, %"class.std::__1::__compressed_pair.656" }
%"struct.std::__1::pair.655" = type opaque
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"struct.std::__1::pair.655"* }
%"class.base::flat_map.661" = type { %"class.base::internal::flat_tree.662" }
%"class.base::internal::flat_tree.662" = type { %"class.std::__1::vector.663" }
%"class.std::__1::vector.663" = type { %"class.std::__1::__vector_base.664" }
%"class.std::__1::__vector_base.664" = type { %"struct.std::__1::pair.665"*, %"struct.std::__1::pair.665"*, %"class.std::__1::__compressed_pair.666" }
%"struct.std::__1::pair.665" = type opaque
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"struct.std::__1::pair.665"* }
%"class.base::RepeatingCallback.671" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.672" = type { %"class.std::__1::__vector_base.673" }
%"class.std::__1::__vector_base.673" = type { %"class.std::__1::unique_ptr.674"*, %"class.std::__1::unique_ptr.674"*, %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::unique_ptr.674" = type opaque
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.std::__1::unique_ptr.674"* }
%"class.base::flat_map.680" = type { %"class.base::internal::flat_tree.681" }
%"class.base::internal::flat_tree.681" = type { %"class.std::__1::vector.682" }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"struct.std::__1::pair.684"*, %"struct.std::__1::pair.684"*, %"class.std::__1::__compressed_pair.685" }
%"struct.std::__1::pair.684" = type opaque
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"struct.std::__1::pair.684"* }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.696", %"class.base::internal::flat_tree.706" }
%"class.base::flat_map.696" = type { %"class.base::internal::flat_tree.697" }
%"class.base::internal::flat_tree.697" = type { %"class.std::__1::vector.698" }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"struct.std::__1::pair.700"*, %"struct.std::__1::pair.700"*, %"class.std::__1::__compressed_pair.701" }
%"struct.std::__1::pair.700" = type opaque
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"struct.std::__1::pair.700"* }
%"class.base::internal::flat_tree.706" = type { %"class.std::__1::vector.707" }
%"class.std::__1::vector.707" = type { %"class.std::__1::__vector_base.708" }
%"class.std::__1::__vector_base.708" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.719" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.709", %"class.absl::optional.714", %"struct.cc::ElementId" }
%"class.absl::optional.709" = type { %"class.absl::optional_internal::optional_data.710" }
%"class.absl::optional_internal::optional_data.710" = type { %"class.absl::optional_internal::optional_data_base.711" }
%"class.absl::optional_internal::optional_data_base.711" = type { %"class.absl::optional_internal::optional_data_dtor_base.712" }
%"class.absl::optional_internal::optional_data_dtor_base.712" = type { i8, %union.anon.713 }
%union.anon.713 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.714" = type { %"class.absl::optional_internal::optional_data.715" }
%"class.absl::optional_internal::optional_data.715" = type { %"class.absl::optional_internal::optional_data_base.716" }
%"class.absl::optional_internal::optional_data_base.716" = type { %"class.absl::optional_internal::optional_data_dtor_base.717" }
%"class.absl::optional_internal::optional_data_dtor_base.717" = type { i8, %union.anon.718 }
%union.anon.718 = type { i32 }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.736" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.724", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.724" = type { %"class.std::__1::__deque_base.725" }
%"class.std::__1::__deque_base.725" = type { %"struct.std::__1::__split_buffer.726", i64, %"class.std::__1::__compressed_pair.732" }
%"struct.std::__1::__split_buffer.726" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.727" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::circular_deque.736" = type { %"class.base::internal::VectorBuffer.737", i64, i64 }
%"class.base::internal::VectorBuffer.737" = type { %"struct.std::__1::pair.738"*, i64 }
%"struct.std::__1::pair.738" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.739", %"class.std::__1::map.744", %"class.std::__1::map.744" }
%"class.absl::optional.739" = type { %"class.absl::optional_internal::optional_data.740" }
%"class.absl::optional_internal::optional_data.740" = type { %"class.absl::optional_internal::optional_data_base.741" }
%"class.absl::optional_internal::optional_data_base.741" = type { %"class.absl::optional_internal::optional_data_dtor_base.742" }
%"class.absl::optional_internal::optional_data_dtor_base.742" = type { i8, [3 x i8], %union.anon.743 }
%union.anon.743 = type { %"class.gfx::Transform" }
%"class.std::__1::map.744" = type { %"class.std::__1::__tree.745" }
%"class.std::__1::__tree.745" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.746", %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.753", %"class.std::__1::vector.760" }
%"class.std::__1::vector.753" = type { %"class.std::__1::__vector_base.754" }
%"class.std::__1::__vector_base.754" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.755" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.332", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.774" }
%"class.base::WeakPtrFactory.774" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.775", %"class.std::__1::map.782", i64 }
%"class.std::__1::list.775" = type { %"class.std::__1::__list_imp.776" }
%"class.std::__1::__list_imp.776" = type { %"struct.std::__1::__list_node_base.777", %"class.std::__1::__compressed_pair.778" }
%"struct.std::__1::__list_node_base.777" = type { %"struct.std::__1::__list_node_base.777"*, %"struct.std::__1::__list_node_base.777"* }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.782" = type { %"class.std::__1::__tree.783" }
%"class.std::__1::__tree.783" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.784", %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.793", %"class.base::internal::flat_tree.803", %"class.base::internal::flat_tree.803" }
%"class.base::flat_map.793" = type { %"class.base::internal::flat_tree.794" }
%"class.base::internal::flat_tree.794" = type { %"class.std::__1::vector.795" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.base::internal::flat_tree.803" = type { %"class.std::__1::vector.804" }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.806" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.viz::FrameSinkId"* }
%"class.base::WeakPtrFactory.818" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.979" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.980 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.981" }
%"class.absl::optional.981" = type { %"class.absl::optional_internal::optional_data.982" }
%"class.absl::optional_internal::optional_data.982" = type { %"class.absl::optional_internal::optional_data_base.983" }
%"class.absl::optional_internal::optional_data_base.983" = type { %"class.absl::optional_internal::optional_data_dtor_base.984" }
%"class.absl::optional_internal::optional_data_dtor_base.984" = type { i8, %union.anon.985 }
%union.anon.985 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.986 = type { %"class.cc::SyncedProperty.987"* }
%"class.cc::SyncedProperty.987" = type <{ %"class.base::RefCounted.988", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.988" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.990" = type { %"class.std::__1::__vector_base.991" }
%"class.std::__1::__vector_base.991" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unordered_map.997" = type { %"class.std::__1::__hash_table.998" }
%"class.std::__1::__hash_table.998" = type <{ %"class.std::__1::unique_ptr.999", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1017", [4 x i8] }>
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001", %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"struct.std::__1::__hash_node_base.1002"** }
%"struct.std::__1::__hash_node_base.1002" = type { %"struct.std::__1::__hash_node_base.1002"* }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.std::__1::__bucket_list_deallocator.1004" }
%"class.std::__1::__bucket_list_deallocator.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.std::__1::__hash_node_base.1002" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::internal::flat_tree.1021" = type { %"class.std::__1::vector.1022" }
%"class.std::__1::vector.1022" = type { %"class.std::__1::__vector_base.1023" }
%"class.std::__1::__vector_base.1023" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1029" = type { %"class.std::__1::__hash_table.1030" }
%"class.std::__1::__hash_table.1030" = type <{ %"class.std::__1::unique_ptr.1031", %"class.std::__1::__compressed_pair.1041", %"class.std::__1::__compressed_pair.1046", %"class.std::__1::__compressed_pair.1049", [4 x i8] }>
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033", %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1034"** }
%"struct.std::__1::__hash_node_base.1034" = type { %"struct.std::__1::__hash_node_base.1034"* }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"class.std::__1::__bucket_list_deallocator.1036" }
%"class.std::__1::__bucket_list_deallocator.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1034" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.1053" = type { %"class.std::__1::__hash_table.1054" }
%"class.std::__1::__hash_table.1054" = type <{ %"class.std::__1::unique_ptr.1055", %"class.std::__1::__compressed_pair.1065", %"class.std::__1::__compressed_pair.1070", %"class.std::__1::__compressed_pair.1073", [4 x i8] }>
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057", %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"struct.std::__1::__hash_node_base.1058"** }
%"struct.std::__1::__hash_node_base.1058" = type { %"struct.std::__1::__hash_node_base.1058"* }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.std::__1::__bucket_list_deallocator.1060" }
%"class.std::__1::__bucket_list_deallocator.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"struct.std::__1::__hash_node_base.1058" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::unordered_map.1077" = type { %"class.std::__1::__hash_table.1078" }
%"class.std::__1::__hash_table.1078" = type <{ %"class.std::__1::unique_ptr.1079", %"class.std::__1::__compressed_pair.1089", %"class.std::__1::__compressed_pair.1094", %"class.std::__1::__compressed_pair.1097", [4 x i8] }>
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081", %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"struct.std::__1::__hash_node_base.1082"** }
%"struct.std::__1::__hash_node_base.1082" = type { %"struct.std::__1::__hash_node_base.1082"* }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.std::__1::__bucket_list_deallocator.1084" }
%"class.std::__1::__bucket_list_deallocator.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.std::__1::__hash_node_base.1082" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::flat_map.1101" = type { %"class.base::internal::flat_tree.1102" }
%"class.base::internal::flat_tree.1102" = type { %"class.std::__1::vector.1103" }
%"class.std::__1::vector.1103" = type { %"class.std::__1::__vector_base.1104" }
%"class.std::__1::__vector_base.1104" = type { %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"*, %"class.std::__1::__compressed_pair.1106" }
%"struct.std::__1::pair.1105" = type opaque
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::pair.1105"* }
%"class.std::__1::vector.1111" = type { %"class.std::__1::__vector_base.1112" }
%"class.std::__1::__vector_base.1112" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1113" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1197", %class.scoped_refptr.1205, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1257", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1262", %"class.base::flat_map.1269", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1168", %"class.std::__1::unique_ptr.1188", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1200", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1242", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1205, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1200" = type { %"class.std::__1::__vector_base.1201" }
%"class.std::__1::__vector_base.1201" = type { %"class.std::__1::unique_ptr.1202"*, %"class.std::__1::unique_ptr.1202"*, %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1205, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1208", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1208" = type { %"class.std::__1::__hash_table.1209" }
%"class.std::__1::__hash_table.1209" = type <{ %"class.std::__1::unique_ptr.1210", %"class.std::__1::__compressed_pair.1220", %"class.std::__1::__compressed_pair.1225", %"class.std::__1::__compressed_pair.1228", [4 x i8] }>
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212", %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"struct.std::__1::__hash_node_base.1213"** }
%"struct.std::__1::__hash_node_base.1213" = type { %"struct.std::__1::__hash_node_base.1213"* }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.std::__1::__bucket_list_deallocator.1215" }
%"class.std::__1::__bucket_list_deallocator.1215" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"struct.std::__1::__hash_node_base.1213" }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.std::__1::unique_ptr.1202"* }
%"class.std::__1::deque.1242" = type { %"class.std::__1::__deque_base.1243" }
%"class.std::__1::__deque_base.1243" = type { %"struct.std::__1::__split_buffer.1244", i64, %"class.std::__1::__compressed_pair.1250" }
%"struct.std::__1::__split_buffer.1244" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1245" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1205 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1206", [4 x i8], i64, %class.scoped_refptr.1207, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1207 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1257" = type { %"class.absl::optional_internal::optional_data.1258" }
%"class.absl::optional_internal::optional_data.1258" = type { %"class.absl::optional_internal::optional_data_base.1259" }
%"class.absl::optional_internal::optional_data_base.1259" = type { %"class.absl::optional_internal::optional_data_dtor_base.1260" }
%"class.absl::optional_internal::optional_data_dtor_base.1260" = type { i8, %union.anon.1261 }
%union.anon.1261 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1262" = type { %"class.std::__1::__vector_base.1263" }
%"class.std::__1::__vector_base.1263" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1269" = type { %"class.base::internal::flat_tree.1270" }
%"class.base::internal::flat_tree.1270" = type { %"class.std::__1::vector.1271" }
%"class.std::__1::vector.1271" = type { %"class.std::__1::__vector_base.1272" }
%"class.std::__1::__vector_base.1272" = type { %"struct.std::__1::pair.1273"*, %"struct.std::__1::pair.1273"*, %"class.std::__1::__compressed_pair.1274" }
%"struct.std::__1::pair.1273" = type opaque
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"struct.std::__1::pair.1273"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1118" = type { %"class.std::__1::vector.1111" }
%"class.base::internal::flat_tree.602" = type { %"class.std::__1::vector.603" }
%"class.std::__1::vector.603" = type { %"class.std::__1::__vector_base.604" }
%"class.std::__1::__vector_base.604" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.610" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.605", %"class.viz::SurfaceId" }
%"class.absl::optional.605" = type { %"class.absl::optional_internal::optional_data.606" }
%"class.absl::optional_internal::optional_data.606" = type { %"class.absl::optional_internal::optional_data_base.607" }
%"class.absl::optional_internal::optional_data_base.607" = type { %"class.absl::optional_internal::optional_data_dtor_base.608" }
%"class.absl::optional_internal::optional_data_dtor_base.608" = type { i8, %union.anon.609 }
%union.anon.609 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1119" = type { %"class.std::__1::__vector_base.1120" }
%"class.std::__1::__vector_base.1120" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.std::__1::unique_ptr.120"*, %"class.std::__1::unique_ptr.120"*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::unique_ptr.120"* }
%"class.std::__1::vector.1126" = type { %"class.std::__1::__vector_base.1127" }
%"class.std::__1::__vector_base.1127" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1128" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1133 = type { %"class.cc::SyncedProperty.1134"* }
%"class.cc::SyncedProperty.1134" = type <{ %"class.base::RefCounted.1135", %"class.cc::AdditionGroup.1136", %"class.cc::AdditionGroup.1136", %"class.cc::AdditionGroup.1136", %"class.cc::AdditionGroup.1136", %"class.cc::AdditionGroup.1136", i8, [3 x i8] }>
%"class.base::RefCounted.1135" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1136" = type { float }
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.637" = type { %"class.std::__1::__vector_base.638" }
%"class.std::__1::__vector_base.638" = type { %"class.base::OnceCallback.639"*, %"class.base::OnceCallback.639"*, %"class.std::__1::__compressed_pair.640" }
%"class.base::OnceCallback.639" = type opaque
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.base::OnceCallback.639"* }
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.std::__1::unique_ptr.762"*, %"class.std::__1::unique_ptr.762"*, %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1281", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1281" = type { %"class.absl::optional_internal::optional_data.1282" }
%"class.absl::optional_internal::optional_data.1282" = type { %"class.absl::optional_internal::optional_data_base.1283" }
%"class.absl::optional_internal::optional_data_base.1283" = type { %"class.absl::optional_internal::optional_data_dtor_base.1284" }
%"class.absl::optional_internal::optional_data_dtor_base.1284" = type { i8, %union.anon.1285 }
%union.anon.1285 = type { i32 }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.std::__1::unique_ptr.762"* }
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1150" = type { %"class.std::__1::__vector_base.1151" }
%"class.std::__1::__vector_base.1151" = type { %"class.std::__1::unique_ptr.1152"*, %"class.std::__1::unique_ptr.1152"*, %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::unique_ptr.1152" = type opaque
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.std::__1::unique_ptr.1152"* }

@_ZN2cc27EffectTreeLayerListIteratorC1EPNS_13LayerTreeImplE = hidden unnamed_addr alias void (%"class.cc::EffectTreeLayerListIterator"*, %"class.cc::LayerTreeImpl"*), void (%"class.cc::EffectTreeLayerListIterator"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc27EffectTreeLayerListIteratorC2EPNS_13LayerTreeImplE
@_ZN2cc27EffectTreeLayerListIteratorC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::EffectTreeLayerListIterator"*, %"class.cc::EffectTreeLayerListIterator"*), void (%"class.cc::EffectTreeLayerListIterator"*, %"class.cc::EffectTreeLayerListIterator"*)* @_ZN2cc27EffectTreeLayerListIteratorC2ERKS0_
@_ZN2cc27EffectTreeLayerListIteratorD1Ev = hidden unnamed_addr alias void (%"class.cc::EffectTreeLayerListIterator"*), void (%"class.cc::EffectTreeLayerListIterator"*)* @_ZN2cc27EffectTreeLayerListIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27EffectTreeLayerListIteratorC2EPNS_13LayerTreeImplE(%"class.cc::EffectTreeLayerListIterator"* nocapture, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 0
  store i32 3, i32* %3, align 8
  %4 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.cc::LayerTreeImpl::IteratorAdapter"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 2
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 3
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 4
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 5
  store %"class.cc::LayerTreeImpl"* %1, %"class.cc::LayerTreeImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 5, i32 4
  store %"class.cc::EffectTree"* %16, %"class.cc::EffectTree"** %15, align 8
  %17 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %1, i64 0, i32 22, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %19 = inttoptr i64 %7 to %"class.std::__1::unique_ptr"*
  %20 = icmp eq %"class.std::__1::unique_ptr"* %18, %19
  br i1 %20, label %44, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 -1, i32 0, i32 0, i32 0
  %23 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %23, i64 0, i32 10
  %25 = load i16, i16* %24, align 4
  %26 = and i16 %25, 256
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %35, label %40

28:                                               ; preds = %35
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 -2, i32 0, i32 0, i32 0
  %30 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %30, i64 0, i32 10
  %32 = load i16, i16* %31, align 4
  %33 = and i16 %32, 256
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %21, %28
  %36 = phi %"class.std::__1::unique_ptr"* [ %37, %28 ], [ %19, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 -1
  store %"class.std::__1::unique_ptr"* %37, %"class.std::__1::unique_ptr"** %9, align 8
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr"* %37, %38
  br i1 %39, label %44, label %28

40:                                               ; preds = %28, %21
  %41 = phi %"class.std::__1::unique_ptr"* [ %19, %21 ], [ %37, %28 ]
  %42 = phi %"class.std::__1::unique_ptr"* [ %18, %21 ], [ %38, %28 ]
  %43 = icmp eq %"class.std::__1::unique_ptr"* %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %35, %2, %40
  store i32 1, i32* %3, align 8
  store i32 1, i32* %11, align 8
  br label %49

45:                                               ; preds = %40
  store i32 0, i32* %3, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 -1, i32 0, i32 0, i32 0
  %47 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %46, align 8
  %48 = tail call i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* %47) #4
  store i32 %48, i32* %11, align 8
  store i32 %48, i32* %12, align 4
  store i32 %48, i32* %13, align 8
  br label %49

49:                                               ; preds = %45, %44
  ret void
}

declare i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27EffectTreeLayerListIteratorC2ERKS0_(%"class.cc::EffectTreeLayerListIterator"* nocapture, %"class.cc::EffectTreeLayerListIterator"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::EffectTreeLayerListIterator"* %0 to i8*
  %4 = bitcast %"class.cc::EffectTreeLayerListIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc27EffectTreeLayerListIteratorD2Ev(%"class.cc::EffectTreeLayerListIterator"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27EffectTreeLayerListIteratorppEv(%"class.cc::EffectTreeLayerListIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %77 [
    i32 0, label %4
    i32 1, label %45
    i32 2, label %51
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 5
  %8 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %8, i64 0, i32 22, i32 0, i32 0
  br label %10

10:                                               ; preds = %15, %4
  %11 = phi %"class.std::__1::unique_ptr"* [ %6, %4 ], [ %12, %15 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -1
  store %"class.std::__1::unique_ptr"* %12, %"class.std::__1::unique_ptr"** %5, align 8
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr"* %12, %13
  br i1 %14, label %24, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -2, i32 0, i32 0, i32 0
  %17 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %17, i64 0, i32 10
  %19 = load i16, i16* %18, align 4
  %20 = and i16 %19, 256
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %10, label %22

22:                                               ; preds = %15
  %23 = icmp eq %"class.std::__1::unique_ptr"* %12, %13
  br i1 %23, label %24, label %27

24:                                               ; preds = %10, %22
  %25 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 3
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 4
  store i32 -1, i32* %26, align 8
  store i32 1, i32* %2, align 8
  br label %77

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -2, i32 0, i32 0, i32 0
  %29 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %28, align 8
  %30 = tail call i32 @_ZNK2cc9LayerImpl31render_target_effect_tree_indexEv(%"class.cc::LayerImpl"* %29) #4
  %31 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 3
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %30, %33
  br i1 %34, label %77, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 6
  %37 = load %"class.cc::EffectTree"*, %"class.cc::EffectTree"** %36, align 8
  %38 = tail call i32 @_ZNK2cc10EffectTree37LowestCommonAncestorWithRenderSurfaceEii(%"class.cc::EffectTree"* %37, i32 %33, i32 %30) #4
  %39 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 4
  store i32 %38, i32* %39, align 8
  %40 = load i32, i32* %32, align 8
  %41 = icmp eq i32 %40, %38
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = load i32, i32* %31, align 4
  store i32 %43, i32* %32, align 8
  store i32 %43, i32* %39, align 8
  br label %77

44:                                               ; preds = %35
  store i32 1, i32* %2, align 8
  br label %77

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 -1, i32* %46, align 8
  store i32 3, i32* %2, align 8
  br label %77

50:                                               ; preds = %45
  store i32 2, i32* %2, align 8
  br label %77

51:                                               ; preds = %1
  %52 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 6
  %57 = bitcast %"class.cc::EffectTree"** %56 to %"class.cc::PropertyTree.850"**
  %58 = load %"class.cc::PropertyTree.850"*, %"class.cc::PropertyTree.850"** %57, align 8
  %59 = sext i32 %53 to i64
  %60 = getelementptr inbounds %"class.cc::PropertyTree.850", %"class.cc::PropertyTree.850"* %58, i64 0, i32 1, i32 0, i32 0
  %61 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %60, align 8
  %62 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %61, i64 %59
  br label %63

63:                                               ; preds = %51, %55
  %64 = phi %"struct.cc::EffectNode"* [ %62, %55 ], [ null, %51 ]
  %65 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %64, i64 0, i32 20
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %52, align 8
  %67 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %63
  store i32 0, i32* %2, align 8
  br label %77

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.cc::EffectTreeLayerListIterator", %"class.cc::EffectTreeLayerListIterator"* %0, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %66, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  store i32 0, i32* %2, align 8
  store i32 %68, i32* %52, align 8
  store i32 %68, i32* %72, align 8
  br label %77

76:                                               ; preds = %71
  store i32 1, i32* %2, align 8
  br label %77

77:                                               ; preds = %27, %70, %76, %75, %49, %50, %44, %42, %1, %24
  ret void
}

declare i32 @_ZNK2cc10EffectTree37LowestCommonAncestorWithRenderSurfaceEii(%"class.cc::EffectTree"*, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
