; ModuleID = '../../media/learning/impl/one_hot.cc'
source_filename = "../../media/learning/impl/one_hot.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.media::learning::OneHotConverter" = type { %"struct.media::learning::LearningTask", %"class.std::__1::vector.7" }
%"struct.media::learning::LearningTask" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::vector", %"struct.media::learning::LearningTask::ValueDescription", i64, double, %"class.absl::optional", i64, i8, double, i8, i8, i8, double, i32, i8, double, double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.media::learning::LearningTask::ValueDescription"* }
%"struct.media::learning::LearningTask::ValueDescription" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.absl::optional.9"*, %"class.absl::optional.9"*, %"class.std::__1::__compressed_pair.22" }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }
%union.anon.13 = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.absl::optional.9"* }
%"class.media::learning::TrainingData" = type { %"class.std::__1::vector.27", i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"*, %"class.std::__1::__compressed_pair.36" }
%"struct.media::learning::LabelledExample" = type { %"class.std::__1::vector.29", %"class.media::learning::Value", i64 }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.media::learning::Value"*, %"class.media::learning::Value"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.media::learning::Value"* }
%"class.media::learning::Value" = type { double }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.media::learning::LabelledExample"* }
%"class.media::learning::ConvertingModel" = type { %"class.media::learning::Model", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.53" }
%"class.media::learning::Model" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.media::learning::OneHotConverter"* }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.media::learning::Model"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.media::learning::Value", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.media::learning::Value"* }
%"class.std::__1::tuple.89" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__tree_node.79" = type { %"class.std::__1::__tree_node_base.base", %"class.media::learning::Value" }
%"class.media::learning::TargetHistogram" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.std::__1::pair.61"*, %"struct.std::__1::pair.61"*, %"class.std::__1::__compressed_pair.62" }
%"struct.std::__1::pair.61" = type { %"class.media::learning::Value", double }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::pair.61"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN5media8learning15LabelledExampleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4absl8optionalINS_3mapIN5media8learning5ValueEmNS_4lessIS6_EENS_9allocatorINS_4pairIKS6_mEEEEEEEENS9_ISF_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5media8learning5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5media8learning5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

@_ZTVN5media8learning15ConvertingModelE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::learning::ConvertingModel"*)* @_ZN5media8learning15ConvertingModelD2Ev to i8*), i8* bitcast (void (%"class.media::learning::ConvertingModel"*)* @_ZN5media8learning15ConvertingModelD0Ev to i8*), i8* bitcast (void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::ConvertingModel"*, %"class.std::__1::vector.29"*)* @_ZN5media8learning15ConvertingModel19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN5media8learning15OneHotConverterC1ERKNS0_12LearningTaskERKNS0_12TrainingDataE = hidden unnamed_addr alias void (%"class.media::learning::OneHotConverter"*, %"struct.media::learning::LearningTask"*, %"class.media::learning::TrainingData"*), void (%"class.media::learning::OneHotConverter"*, %"struct.media::learning::LearningTask"*, %"class.media::learning::TrainingData"*)* @_ZN5media8learning15OneHotConverterC2ERKNS0_12LearningTaskERKNS0_12TrainingDataE
@_ZN5media8learning15OneHotConverterD1Ev = hidden unnamed_addr alias void (%"class.media::learning::OneHotConverter"*), void (%"class.media::learning::OneHotConverter"*)* @_ZN5media8learning15OneHotConverterD2Ev
@_ZN5media8learning15ConvertingModelC1ENSt3__110unique_ptrINS0_15OneHotConverterENS2_14default_deleteIS4_EEEENS3_INS0_5ModelENS5_IS8_EEEE = hidden unnamed_addr alias void (%"class.media::learning::ConvertingModel"*, %"class.media::learning::OneHotConverter"*, %"class.media::learning::Model"*), void (%"class.media::learning::ConvertingModel"*, %"class.media::learning::OneHotConverter"*, %"class.media::learning::Model"*)* @_ZN5media8learning15ConvertingModelC2ENSt3__110unique_ptrINS0_15OneHotConverterENS2_14default_deleteIS4_EEEENS3_INS0_5ModelENS5_IS8_EEEE
@_ZN5media8learning15ConvertingModelD1Ev = hidden unnamed_addr alias void (%"class.media::learning::ConvertingModel"*), void (%"class.media::learning::ConvertingModel"*)* @_ZN5media8learning15ConvertingModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15OneHotConverterC2ERKNS0_12LearningTaskERKNS0_12TrainingDataE(%"class.media::learning::OneHotConverter"*, %"struct.media::learning::LearningTask"* dereferenceable(176), %"class.media::learning::TrainingData"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0
  tail call void @_ZN5media8learning12LearningTaskC1ERKS1_(%"struct.media::learning::LearningTask"* %4, %"struct.media::learning::LearningTask"* dereferenceable(176) %1) #10
  %5 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.7"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %9 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %8, align 8
  %10 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %11 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %10, align 8
  %12 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %11, %9
  br i1 %12, label %31, label %13

13:                                               ; preds = %3, %23
  %14 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %15, %23 ], [ %11, %3 ]
  %15 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %14, i64 -1
  %16 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %20, %13
  %24 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %15, %9
  br i1 %24, label %25, label %13

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = bitcast %"class.absl::optional.9"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.7"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  br label %31

31:                                               ; preds = %3, %25
  %32 = phi i64 [ %30, %25 ], [ 0, %3 ]
  %33 = phi i64 [ %28, %25 ], [ 0, %3 ]
  store %"struct.media::learning::LearningTask::ValueDescription"* %9, %"struct.media::learning::LearningTask::ValueDescription"** %10, align 8
  %34 = getelementptr inbounds %"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* %1, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.media::learning::LearningTask", %"struct.media::learning::LearningTask"* %1, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 1, i32 0, i32 1
  %43 = sub i64 %33, %32
  %44 = ashr exact i64 %43, 5
  %45 = icmp ugt i64 %41, %44
  %46 = inttoptr i64 %32 to %"class.absl::optional.9"*
  %47 = inttoptr i64 %33 to %"class.absl::optional.9"*
  br i1 %45, label %48, label %50

48:                                               ; preds = %31
  %49 = sub nsw i64 %41, %44
  tail call void @_ZNSt3__16vectorIN4absl8optionalINS_3mapIN5media8learning5ValueEmNS_4lessIS6_EENS_9allocatorINS_4pairIKS6_mEEEEEEEENS9_ISF_EEE8__appendEm(%"class.std::__1::vector.7"* %5, i64 %49) #10
  br label %69

50:                                               ; preds = %31
  %51 = icmp ult i64 %41, %44
  br i1 %51, label %52, label %69

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %46, i64 %41
  %54 = icmp eq %"class.absl::optional.9"* %53, %47
  br i1 %54, label %68, label %55

55:                                               ; preds = %52, %66
  %56 = phi %"class.absl::optional.9"* [ %57, %66 ], [ %47, %52 ]
  %57 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %56, i64 -1
  %58 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %56, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %63 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %56, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node"**
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_node"* %65) #10
  store i8 0, i8* %58, align 8
  br label %66

66:                                               ; preds = %61, %55
  %67 = icmp eq %"class.absl::optional.9"* %57, %53
  br i1 %67, label %68, label %55

68:                                               ; preds = %66, %52
  store %"class.absl::optional.9"* %53, %"class.absl::optional.9"** %42, align 8
  br label %69

69:                                               ; preds = %48, %50, %68
  %70 = load i64, i64* %36, align 8
  %71 = load i64, i64* %38, align 8
  %72 = icmp eq i64 %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %10 to i64*
  br label %77

76:                                               ; preds = %112, %69
  ret void

77:                                               ; preds = %73, %112
  %78 = phi i64 [ %71, %73 ], [ %115, %112 ]
  %79 = phi i64 [ 0, %73 ], [ %113, %112 ]
  %80 = inttoptr i64 %78 to %"struct.media::learning::LearningTask::ValueDescription"*
  %81 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %80, i64 %79
  %82 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %80, i64 %79, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %111

85:                                               ; preds = %77
  %86 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %10, align 8
  %87 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %74, align 8
  %88 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %86, %87
  br i1 %88, label %110, label %89

89:                                               ; preds = %85
  %90 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %86 to i8*
  %96 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #10
  br label %103

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %86, i64 0, i32 0
  %99 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %80, i64 %79, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %98, i8* %100, i64 %102) #10
  br label %103

103:                                              ; preds = %97, %94
  %104 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %86, i64 0, i32 1
  %105 = bitcast i32* %82 to i64*
  %106 = bitcast i32* %104 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %86, i64 1
  %109 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %108 to i64
  store i64 %109, i64* %75, align 8
  br label %112

110:                                              ; preds = %85
  tail call void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"* %7, %"struct.media::learning::LearningTask::ValueDescription"* dereferenceable(32) %81) #10
  br label %112

111:                                              ; preds = %77
  tail call void @_ZN5media8learning15OneHotConverter17ProcessOneFeatureEmRKNS0_12LearningTask16ValueDescriptionERKNS0_12TrainingDataE(%"class.media::learning::OneHotConverter"* %0, i64 %79, %"struct.media::learning::LearningTask::ValueDescription"* dereferenceable(32) %81, %"class.media::learning::TrainingData"* dereferenceable(32) %2)
  br label %112

112:                                              ; preds = %110, %103, %111
  %113 = add nuw i64 %79, 1
  %114 = load i64, i64* %36, align 8
  %115 = load i64, i64* %38, align 8
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 5
  %118 = icmp ult i64 %113, %117
  br i1 %118, label %77, label %76
}

declare void @_ZN5media8learning12LearningTaskC1ERKS1_(%"struct.media::learning::LearningTask"*, %"struct.media::learning::LearningTask"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15OneHotConverter17ProcessOneFeatureEmRKNS0_12LearningTask16ValueDescriptionERKNS0_12TrainingDataE(%"class.media::learning::OneHotConverter"*, i64, %"struct.media::learning::LearningTask::ValueDescription"* nocapture readonly dereferenceable(32), %"class.media::learning::TrainingData"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.89", align 1
  %7 = alloca %"class.std::__1::set", align 8
  %8 = alloca %"class.std::__1::map", align 8
  %9 = alloca %"struct.media::learning::LearningTask::ValueDescription", align 8
  %10 = bitcast %"class.std::__1::set"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %11, align 8
  %15 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %15, align 8
  %17 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %3, i64 0, i32 0, i32 0, i32 1
  %18 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %17, align 8
  %19 = icmp eq %"struct.media::learning::LabelledExample"* %16, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  br label %63

22:                                               ; preds = %63
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  br label %24

24:                                               ; preds = %22, %4
  %25 = phi %"class.std::__1::__tree_end_node"* [ %23, %22 ], [ %13, %4 ]
  %26 = bitcast %"class.std::__1::map"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node_base"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %27, align 8
  %32 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %34 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %33 to i64*
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %25, %13
  br i1 %35, label %71, label %36

36:                                               ; preds = %24
  %37 = load i64, i64* %34, align 8
  %38 = bitcast %"class.std::__1::vector"* %32 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 5
  %42 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %9 to i8*
  %43 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %9, i64 0, i32 1
  %46 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %2 to i8*
  %49 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %9, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %2, i64 0, i32 1
  %53 = bitcast i32* %52 to i64*
  %54 = bitcast i32* %45 to i64*
  %55 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0
  %59 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %60 = bitcast %"class.std::__1::tuple"* %5 to %"class.std::__1::__tree_end_node"**
  %61 = getelementptr inbounds %"class.std::__1::tuple.89", %"class.std::__1::tuple.89"* %6, i64 0, i32 0
  %62 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %9 to i8*
  br label %125

63:                                               ; preds = %20, %63
  %64 = phi %"struct.media::learning::LabelledExample"* [ %16, %20 ], [ %69, %63 ]
  %65 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %65, align 8
  %67 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %66, i64 %1
  %68 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.41"* nonnull %21, %"class.media::learning::Value"* dereferenceable(8) %67, %"class.media::learning::Value"* dereferenceable(8) %67) #10
  %69 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %64, i64 1
  %70 = icmp eq %"struct.media::learning::LabelledExample"* %69, %18
  br i1 %70, label %22, label %63

71:                                               ; preds = %195, %24
  %72 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %72, align 8
  %74 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  %77 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %76, label %98, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %77, i64 0, i32 0
  %80 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_node"**
  %82 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %79, %"class.std::__1::__tree_node"* %82) #10
  %83 = bitcast %"class.std::__1::map"* %8 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::map"* %77 to i64*
  store i64 %84, i64* %85, align 8
  %86 = bitcast %"class.std::__1::__tree_end_node"* %30 to i64*
  %87 = bitcast %"class.std::__1::__tree_end_node"* %80 to i64*
  %88 = load i64, i64* %86, align 8
  store i64 %88, i64* %87, align 8
  %89 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %29, align 8
  store i64 %90, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %77, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"** %93, align 8
  br label %118

94:                                               ; preds = %78
  %95 = inttoptr i64 %88 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"** %96, align 8
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %27, align 8
  %97 = bitcast %"class.std::__1::__tree_end_node"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false) #10
  br label %118

98:                                               ; preds = %71
  %99 = bitcast %"class.std::__1::map"* %8 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::map"* %77 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0, i32 1
  %104 = bitcast %"class.std::__1::__compressed_pair.14"* %103 to i64*
  %105 = bitcast %"class.std::__1::__compressed_pair.14"* %102 to i64*
  %106 = load i64, i64* %104, align 8
  store i64 %106, i64* %105, align 8
  %107 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %108 = load i64, i64* %29, align 8
  store i64 %108, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  %110 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %73, i64 %1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br i1 %109, label %111, label %113

111:                                              ; preds = %98
  %112 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %77, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"** %112, align 8
  br label %117

113:                                              ; preds = %98
  %114 = inttoptr i64 %106 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"** %115, align 8
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %27, align 8
  %116 = bitcast %"class.std::__1::__tree_end_node"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #10
  br label %117

117:                                              ; preds = %113, %111
  store i8 1, i8* %74, align 8
  br label %118

118:                                              ; preds = %92, %94, %117
  %119 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %8, i64 0, i32 0
  %120 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node"**
  %121 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %120, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* nonnull %119, %"class.std::__1::__tree_node"* %121) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %122 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  %123 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node.79"**
  %124 = load %"class.std::__1::__tree_node.79"*, %"class.std::__1::__tree_node.79"** %123, align 8
  call void @_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.41"* nonnull %122, %"class.std::__1::__tree_node.79"* %124) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void

125:                                              ; preds = %36, %195
  %126 = phi i64 [ %41, %36 ], [ %158, %195 ]
  %127 = phi %"class.std::__1::__tree_end_node"* [ %25, %36 ], [ %196, %195 ]
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 4
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.media::learning::Value"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 32, i1 false)
  %130 = load i8, i8* %47, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %48, i64 24, i1 false) #10
  br label %136

133:                                              ; preds = %125
  %134 = load i8*, i8** %50, align 8
  %135 = load i64, i64* %51, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %49, i8* %134, i64 %135) #10
  br label %136

136:                                              ; preds = %132, %133
  %137 = load i64, i64* %53, align 8
  store i64 %137, i64* %54, align 8
  store i32 1, i32* %45, align 8
  %138 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %33, align 8
  %139 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %55, align 8
  %140 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %138, %139
  br i1 %140, label %156, label %141

141:                                              ; preds = %136
  %142 = load i8, i8* %57, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* nonnull align 8 %42, i64 24, i1 false) #10
  br label %150

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %138, i64 0, i32 0
  %148 = load i8*, i8** %43, align 8
  %149 = load i64, i64* %44, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %147, i8* %148, i64 %149) #10
  br label %150

150:                                              ; preds = %146, %144
  %151 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %138, i64 0, i32 1
  %152 = bitcast i32* %151 to i64*
  %153 = load i64, i64* %54, align 8
  store i64 %153, i64* %152, align 8
  %154 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %138, i64 1
  %155 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %154 to i64
  store i64 %155, i64* %34, align 8
  br label %157

156:                                              ; preds = %136
  call void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"* %32, %"struct.media::learning::LearningTask::ValueDescription"* nonnull dereferenceable(32) %9) #10
  br label %157

157:                                              ; preds = %150, %156
  %158 = add i64 %126, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  store %"class.std::__1::__tree_end_node"* %128, %"class.std::__1::__tree_end_node"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %61) #10
  %159 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* nonnull %58, %"class.media::learning::Value"* dereferenceable(8) %129, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.89"* nonnull dereferenceable(1) %6) #10
  %160 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %159, 0
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 5
  %162 = bitcast %"class.std::__1::__tree_end_node"* %161 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %61) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  store i64 %126, i64* %162, align 8
  %163 = load i8, i8* %57, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %157
  %166 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %166) #11
  br label %167

167:                                              ; preds = %157, %165
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #10
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 1, i32 0
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %171, label %179

171:                                              ; preds = %167
  %172 = bitcast %"class.std::__1::__tree_end_node"* %127 to %"class.std::__1::__tree_node_base"*
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 2
  %174 = bitcast %"class.std::__1::__tree_end_node"* %173 to %"class.std::__1::__tree_end_node"**
  %175 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, %172
  br i1 %178, label %195, label %186

179:                                              ; preds = %167, %179
  %180 = phi %"class.std::__1::__tree_node_base"* [ %182, %179 ], [ %169, %167 ]
  %181 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %180, i64 0, i32 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, null
  br i1 %183, label %184, label %179

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %180, i64 0, i32 0
  br label %195

186:                                              ; preds = %171, %186
  %187 = phi %"class.std::__1::__tree_end_node"** [ %190, %186 ], [ %174, %171 ]
  %188 = bitcast %"class.std::__1::__tree_end_node"** %187 to %"class.std::__1::__tree_node_base"**
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %191 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %190, align 8
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %191, i64 0, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, %189
  br i1 %194, label %195, label %186

195:                                              ; preds = %186, %171, %184
  %196 = phi %"class.std::__1::__tree_end_node"* [ %185, %184 ], [ %175, %171 ], [ %191, %186 ]
  %197 = icmp eq %"class.std::__1::__tree_end_node"* %196, %13
  br i1 %197, label %71, label %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15OneHotConverterD2Ev(%"class.media::learning::OneHotConverter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %2, align 8
  %4 = icmp eq %"class.absl::optional.9"* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %6, align 8
  %8 = icmp eq %"class.absl::optional.9"* %7, %3
  br i1 %8, label %24, label %9

9:                                                ; preds = %5, %20
  %10 = phi %"class.absl::optional.9"* [ %11, %20 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %10, i64 -1
  %12 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %10, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %10, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #10
  store i8 0, i8* %12, align 8
  br label %20

20:                                               ; preds = %15, %9
  %21 = icmp eq %"class.absl::optional.9"* %11, %3
  br i1 %21, label %22, label %9

22:                                               ; preds = %20
  %23 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %2, align 8
  br label %24

24:                                               ; preds = %22, %5
  %25 = phi %"class.absl::optional.9"* [ %23, %22 ], [ %3, %5 ]
  store %"class.absl::optional.9"* %3, %"class.absl::optional.9"** %6, align 8
  %26 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %1, %24
  %28 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %0, i64 0, i32 0
  tail call void @_ZN5media8learning12LearningTaskD1Ev(%"struct.media::learning::LearningTask"* %28) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media8learning12LearningTaskD1Ev(%"struct.media::learning::LearningTask"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media8learning15OneHotConverter7ConvertERKNS0_12TrainingDataE(%"class.media::learning::TrainingData"* noalias sret, %"class.media::learning::OneHotConverter"* nocapture readonly, %"class.media::learning::TrainingData"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.media::learning::LabelledExample", align 16
  %5 = alloca %"class.std::__1::vector.29", align 16
  %6 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %0, i64 0, i32 1
  %9 = bitcast %"class.media::learning::TrainingData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 32, i1 false)
  tail call void @_ZN5media8learning12TrainingDataC1Ev(%"class.media::learning::TrainingData"* %0) #10
  %10 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %10, align 8
  %12 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %12, align 8
  %14 = icmp eq %"struct.media::learning::LabelledExample"* %11, %13
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = bitcast %"struct.media::learning::LabelledExample"* %4 to i8*
  %17 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %4, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %4, i64 0, i32 2
  %22 = bitcast %"class.std::__1::vector.29"* %5 to i8*
  %23 = bitcast %"class.media::learning::Value"** %18 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.media::learning::Value"** %24 to i64*
  %26 = bitcast %"class.media::learning::Value"** %19 to i64*
  %27 = bitcast %"struct.media::learning::LabelledExample"** %6 to i64*
  %28 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %0, i64 0, i32 0
  %29 = bitcast %"struct.media::learning::LabelledExample"* %4 to i8*
  %30 = bitcast %"class.std::__1::vector.29"* %5 to <2 x i64>*
  %31 = bitcast %"struct.media::learning::LabelledExample"* %4 to <2 x i64>*
  br label %33

32:                                               ; preds = %51, %3
  ret void

33:                                               ; preds = %15, %51
  %34 = phi %"struct.media::learning::LabelledExample"* [ %11, %15 ], [ %55, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 24, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %20, align 8
  store i64 -6148914691236517206, i64* %21, align 16
  call void @_ZN5media8learning15LabelledExampleC1ERKS1_(%"struct.media::learning::LabelledExample"* nonnull %4, %"struct.media::learning::LabelledExample"* dereferenceable(40) %34) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %35 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %34, i64 0, i32 0
  call void @_ZNK5media8learning15OneHotConverter7ConvertERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE(%"class.std::__1::vector.29"* nonnull sret %5, %"class.media::learning::OneHotConverter"* %1, %"class.std::__1::vector.29"* dereferenceable(24) %35)
  %36 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %17, align 16
  %37 = icmp eq %"class.media::learning::Value"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = ptrtoint %"class.media::learning::Value"* %36 to i64
  store i64 %39, i64* %23, align 8
  %40 = bitcast %"class.media::learning::Value"* %36 to i8*
  call void @_ZdlPv(i8* %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 24, i1 false) #10
  br label %41

41:                                               ; preds = %33, %38
  %42 = load <2 x i64>, <2 x i64>* %30, align 16
  store <2 x i64> %42, <2 x i64>* %31, align 16
  %43 = load i64, i64* %25, align 16
  store i64 %43, i64* %26, align 16
  %44 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %6, align 8
  %45 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %46 = icmp eq %"struct.media::learning::LabelledExample"* %44, %45
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  call void @_ZN5media8learning15LabelledExampleC1ERKS1_(%"struct.media::learning::LabelledExample"* %44, %"struct.media::learning::LabelledExample"* nonnull dereferenceable(40) %4) #10
  %48 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %44, i64 1
  %49 = ptrtoint %"struct.media::learning::LabelledExample"* %48 to i64
  store i64 %49, i64* %27, align 8
  br label %51

50:                                               ; preds = %41
  call void @_ZNSt3__16vectorIN5media8learning15LabelledExampleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.27"* %28, %"struct.media::learning::LabelledExample"* nonnull dereferenceable(40) %4) #10
  br label %51

51:                                               ; preds = %47, %50
  %52 = load i64, i64* %21, align 16
  %53 = load i64, i64* %8, align 8
  %54 = add i64 %53, %52
  store i64 %54, i64* %8, align 8
  call void @_ZN5media8learning15LabelledExampleD1Ev(%"struct.media::learning::LabelledExample"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  %55 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %34, i64 1
  %56 = icmp eq %"struct.media::learning::LabelledExample"* %55, %13
  br i1 %56, label %32, label %33
}

declare void @_ZN5media8learning12TrainingDataC1Ev(%"class.media::learning::TrainingData"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5media8learning15LabelledExampleC1ERKS1_(%"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media8learning15OneHotConverter7ConvertERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE(%"class.std::__1::vector.29"* noalias sret, %"class.media::learning::OneHotConverter"* nocapture readonly, %"class.std::__1::vector.29"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.media::learning::Value", align 8
  %5 = alloca %"class.media::learning::Value", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector.29"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %1, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %12 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 5
  %18 = bitcast %"class.media::learning::Value"** %8 to i64*
  %19 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %20 = icmp eq i64 %16, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %3
  %22 = icmp ugt i64 %17, 2305843009213693951
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @abort() #12
  unreachable

24:                                               ; preds = %21
  %25 = bitcast %"class.media::learning::Value"** %7 to i64*
  %26 = ashr exact i64 %16, 2
  %27 = tail call i8* @_Znwm(i64 %26) #11
  %28 = bitcast i8* %27 to %"class.media::learning::Value"*
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %28, i64 %17
  %31 = ptrtoint %"class.media::learning::Value"* %30 to i64
  store i64 %29, i64* %19, align 8
  store i64 %29, i64* %25, align 8
  store i64 %31, i64* %18, align 8
  br label %32

32:                                               ; preds = %24, %3
  %33 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %1, i64 0, i32 1
  %34 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %1, i64 0, i32 1, i32 0, i32 1
  %35 = bitcast %"class.absl::optional.9"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.7"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %132, label %40

40:                                               ; preds = %32
  %41 = bitcast %"class.media::learning::Value"* %4 to i8*
  %42 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %4, i64 0, i32 0
  %43 = bitcast %"class.media::learning::Value"** %7 to i64*
  %44 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %2, i64 0, i32 0, i32 0
  %45 = bitcast %"class.media::learning::Value"* %5 to i8*
  %46 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %5, i64 0, i32 0
  br label %47

47:                                               ; preds = %40, %125
  %48 = phi i64 [ %38, %40 ], [ %128, %125 ]
  %49 = phi i64 [ 0, %40 ], [ %126, %125 ]
  %50 = inttoptr i64 %48 to %"class.absl::optional.9"*
  %51 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %50, i64 %49, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %47
  %55 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %44, align 8
  %56 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %55, i64 %49
  %57 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %7, align 8
  %58 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %8, align 8
  %59 = icmp eq %"class.media::learning::Value"* %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  call void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"* %57, %"class.media::learning::Value"* dereferenceable(8) %56) #10
  %61 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %57, i64 1
  %62 = ptrtoint %"class.media::learning::Value"* %61 to i64
  store i64 %62, i64* %43, align 8
  br label %125

63:                                               ; preds = %54
  call void @_ZNSt3__16vectorIN5media8learning5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.29"* %0, %"class.media::learning::Value"* dereferenceable(8) %56) #10
  br label %125

64:                                               ; preds = %47
  %65 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %50, i64 %49, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %72, label %106

68:                                               ; preds = %115
  %69 = load i8, i8* %51, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %68
  call void @llvm.trap() #10
  unreachable

72:                                               ; preds = %64, %68
  %73 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %44, align 8
  %74 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %73, i64 %49
  %75 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %50, i64 %49, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_node"**
  %77 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node"* %77, null
  br i1 %78, label %98, label %79

79:                                               ; preds = %72, %79
  %80 = phi %"class.std::__1::__tree_end_node"* [ %89, %79 ], [ %75, %72 ]
  %81 = phi %"class.std::__1::__tree_node"* [ %90, %79 ], [ %77, %72 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1, i32 0, i32 0
  %83 = call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %82, %"class.media::learning::Value"* dereferenceable(8) %74) #10
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 1
  %85 = bitcast %"class.std::__1::__tree_node_base"** %84 to %"class.std::__1::__tree_node"**
  %86 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::__tree_node"* %81 to %"class.std::__1::__tree_node"**
  %88 = select i1 %83, %"class.std::__1::__tree_node"** %85, %"class.std::__1::__tree_node"** %87
  %89 = select i1 %83, %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"* %86
  %90 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %88, align 8
  %91 = icmp eq %"class.std::__1::__tree_node"* %90, null
  br i1 %91, label %92, label %79

92:                                               ; preds = %79
  %93 = icmp eq %"class.std::__1::__tree_end_node"* %89, %75
  br i1 %93, label %98, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %89, i64 4
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.media::learning::Value"*
  %97 = call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %74, %"class.media::learning::Value"* dereferenceable(8) %96) #10
  br i1 %97, label %98, label %99

98:                                               ; preds = %94, %92, %72
  br label %99

99:                                               ; preds = %94, %98
  %100 = phi %"class.std::__1::__tree_end_node"* [ %75, %98 ], [ %89, %94 ]
  %101 = load i8, i8* %51, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %99
  call void @llvm.trap() #10
  unreachable

104:                                              ; preds = %99
  %105 = icmp eq %"class.std::__1::__tree_end_node"* %100, %75
  br i1 %105, label %125, label %118

106:                                              ; preds = %64, %115
  %107 = phi i64 [ %116, %115 ], [ 0, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #10
  store double 0.000000e+00, double* %42, align 8
  %108 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %7, align 8
  %109 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %8, align 8
  %110 = icmp ult %"class.media::learning::Value"* %108, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  call void @_ZN5media8learning5ValueC1EOS1_(%"class.media::learning::Value"* %108, %"class.media::learning::Value"* nonnull dereferenceable(8) %4) #10
  %112 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %108, i64 1
  %113 = ptrtoint %"class.media::learning::Value"* %112 to i64
  store i64 %113, i64* %43, align 8
  br label %115

114:                                              ; preds = %106
  call void @_ZNSt3__16vectorIN5media8learning5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.29"* %0, %"class.media::learning::Value"* nonnull dereferenceable(8) %4) #10
  br label %115

115:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #10
  %116 = add nuw i64 %107, 1
  %117 = icmp eq i64 %116, %66
  br i1 %117, label %68, label %106

118:                                              ; preds = %104
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  store double 1.000000e+00, double* %46, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 5
  %120 = bitcast %"class.std::__1::__tree_end_node"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %6, align 8
  %123 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %122, i64 %121
  %124 = call dereferenceable(8) %"class.media::learning::Value"* @_ZN5media8learning5ValueaSEOS1_(%"class.media::learning::Value"* %123, %"class.media::learning::Value"* nonnull dereferenceable(8) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br label %125

125:                                              ; preds = %104, %118, %63, %60
  %126 = add nuw i64 %49, 1
  %127 = load i64, i64* %35, align 8
  %128 = load i64, i64* %37, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 5
  %131 = icmp ult i64 %126, %130
  br i1 %131, label %47, label %132

132:                                              ; preds = %125, %32
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media8learning15LabelledExampleD1Ev(%"struct.media::learning::LabelledExample"*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.media::learning::Value"* @_ZN5media8learning5ValueaSEOS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15ConvertingModelC2ENSt3__110unique_ptrINS0_15OneHotConverterENS2_14default_deleteIS4_EEEENS3_INS0_5ModelENS5_IS8_EEEE(%"class.media::learning::ConvertingModel"* nocapture, %"class.media::learning::OneHotConverter"*, %"class.media::learning::Model"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.media::learning::OneHotConverter"* %1 to i64
  %5 = ptrtoint %"class.media::learning::Model"* %2 to i64
  %6 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning15ConvertingModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::unique_ptr.53"* %9 to i64*
  store i64 %5, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15ConvertingModelD2Ev(%"class.media::learning::ConvertingModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning15ConvertingModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.media::learning::Model"*, %"class.media::learning::Model"** %3, align 8
  store %"class.media::learning::Model"* null, %"class.media::learning::Model"** %3, align 8
  %5 = icmp eq %"class.media::learning::Model"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::learning::Model"* %4 to void (%"class.media::learning::Model"*)***
  %8 = load void (%"class.media::learning::Model"*)**, void (%"class.media::learning::Model"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %8, i64 1
  %10 = load void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %9, align 8
  tail call void %10(%"class.media::learning::Model"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.media::learning::OneHotConverter"*, %"class.media::learning::OneHotConverter"** %12, align 8
  store %"class.media::learning::OneHotConverter"* null, %"class.media::learning::OneHotConverter"** %12, align 8
  %14 = icmp eq %"class.media::learning::OneHotConverter"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %13, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %16, align 8
  %18 = icmp eq %"class.absl::optional.9"* %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %13, i64 0, i32 1, i32 0, i32 1
  %21 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %20, align 8
  %22 = icmp eq %"class.absl::optional.9"* %21, %17
  br i1 %22, label %38, label %23

23:                                               ; preds = %19, %34
  %24 = phi %"class.absl::optional.9"* [ %25, %34 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %24, i64 -1
  %26 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %24, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %24, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %30, %"class.std::__1::__tree_node"* %33) #10
  store i8 0, i8* %26, align 8
  br label %34

34:                                               ; preds = %29, %23
  %35 = icmp eq %"class.absl::optional.9"* %25, %17
  br i1 %35, label %36, label %23

36:                                               ; preds = %34
  %37 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %16, align 8
  br label %38

38:                                               ; preds = %36, %19
  %39 = phi %"class.absl::optional.9"* [ %37, %36 ], [ %17, %19 ]
  store %"class.absl::optional.9"* %17, %"class.absl::optional.9"** %20, align 8
  %40 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %38, %15
  %42 = getelementptr inbounds %"class.media::learning::OneHotConverter", %"class.media::learning::OneHotConverter"* %13, i64 0, i32 0
  tail call void @_ZN5media8learning12LearningTaskD1Ev(%"struct.media::learning::LearningTask"* %42) #10
  %43 = bitcast %"class.media::learning::OneHotConverter"* %13 to i8*
  tail call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %11, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15ConvertingModelD0Ev(%"class.media::learning::ConvertingModel"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5media8learning15ConvertingModelD2Ev(%"class.media::learning::ConvertingModel"* %0) #10
  %2 = bitcast %"class.media::learning::ConvertingModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning15ConvertingModel19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE(%"class.media::learning::TargetHistogram"* noalias sret, %"class.media::learning::ConvertingModel"* nocapture readonly, %"class.std::__1::vector.29"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.29", align 8
  %5 = bitcast %"class.std::__1::vector.29"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.29"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load %"class.media::learning::OneHotConverter"*, %"class.media::learning::OneHotConverter"** %7, align 8
  call void @_ZNK5media8learning15OneHotConverter7ConvertERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE(%"class.std::__1::vector.29"* nonnull sret %4, %"class.media::learning::OneHotConverter"* %9, %"class.std::__1::vector.29"* dereferenceable(24) %2)
  %10 = getelementptr inbounds %"class.media::learning::ConvertingModel", %"class.media::learning::ConvertingModel"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.media::learning::Model"*, %"class.media::learning::Model"** %10, align 8
  %12 = bitcast %"class.media::learning::Model"* %11 to void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)***
  %13 = load void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)**, void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)*, void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)** %13, i64 2
  %15 = load void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)*, void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::Model"*, %"class.std::__1::vector.29"*)** %14, align 8
  call void %15(%"class.media::learning::TargetHistogram"* sret %0, %"class.media::learning::Model"* %11, %"class.std::__1::vector.29"* nonnull dereferenceable(24) %4) #10
  %16 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %6, align 8
  %17 = icmp eq %"class.media::learning::Value"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %4, i64 0, i32 0, i32 1
  %20 = ptrtoint %"class.media::learning::Value"* %16 to i64
  %21 = bitcast %"class.media::learning::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.media::learning::Value"* %16 to i8*
  call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %3, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media8learning15LabelledExampleENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.27"*, %"struct.media::learning::LabelledExample"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.media::learning::LabelledExample"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.27"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.27"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.media::learning::LabelledExample"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.media::learning::LabelledExample"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.media::learning::LabelledExample"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %33, i64 %32
  %36 = ptrtoint %"struct.media::learning::LabelledExample"* %35 to i64
  tail call void @_ZN5media8learning15LabelledExampleC1ERKS1_(%"struct.media::learning::LabelledExample"* %34, %"struct.media::learning::LabelledExample"* dereferenceable(40) %1) #10
  %37 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %34, i64 1
  %38 = ptrtoint %"struct.media::learning::LabelledExample"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %39, align 8
  %41 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %3, align 8
  %42 = icmp eq %"struct.media::learning::LabelledExample"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.media::learning::LabelledExample"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.media::learning::LabelledExample"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.media::learning::LabelledExample"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %47, i64 -1
  tail call void @_ZN5media8learning15LabelledExampleC1EOS1_(%"struct.media::learning::LabelledExample"* %48, %"struct.media::learning::LabelledExample"* dereferenceable(40) %49) #10
  %50 = icmp eq %"struct.media::learning::LabelledExample"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.media::learning::LabelledExample"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.media::learning::LabelledExample"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.media::learning::LabelledExample"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.media::learning::LabelledExample"*
  %60 = icmp eq %"struct.media::learning::LabelledExample"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.media::learning::LabelledExample"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %62, i64 -1
  tail call void @_ZN5media8learning15LabelledExampleD1Ev(%"struct.media::learning::LabelledExample"* %63) #10
  %64 = icmp eq %"struct.media::learning::LabelledExample"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5media8learning15LabelledExampleC1EOS1_(%"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"* dereferenceable(40)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4absl8optionalINS_3mapIN5media8learning5ValueEmNS_4lessIS6_EENS_9allocatorINS_4pairIKS6_mEEEEEEEENS9_ISF_EEE8__appendEm(%"class.std::__1::vector.7"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.absl::optional.9"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.absl::optional.9"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %67, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.absl::optional.9"*
  %14 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %12
  %17 = shl nsw i64 %1, 5
  %18 = add i64 %17, -32
  %19 = lshr exact i64 %18, 5
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %16, %23
  %24 = phi %"class.absl::optional.9"* [ %29, %23 ], [ %13, %16 ]
  %25 = phi i64 [ %30, %23 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %24, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %union.anon.13* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10
  %29 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %24, i64 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %23, !llvm.loop !4

32:                                               ; preds = %23, %16
  %33 = phi %"class.absl::optional.9"* [ %13, %16 ], [ %29, %23 ]
  %34 = icmp ult i64 %18, 224
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"class.absl::optional.9"* %14 to i64
  br label %65

37:                                               ; preds = %32, %37
  %38 = phi %"class.absl::optional.9"* [ %63, %37 ], [ %33, %32 ]
  %39 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %union.anon.13* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #10
  %42 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 1, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %union.anon.13* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 2, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %union.anon.13* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  %48 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 3, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon.13* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #10
  %51 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 4, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %union.anon.13* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 5, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon.13* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 8
  %58 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 6, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %union.anon.13* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #10
  %60 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 7, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast %union.anon.13* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #10
  %63 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %38, i64 8
  %64 = icmp eq %"class.absl::optional.9"* %63, %14
  br i1 %64, label %35, label %37

65:                                               ; preds = %12, %35
  %66 = phi i64 [ %36, %35 ], [ %8, %12 ]
  store i64 %66, i64* %7, align 8
  br label %213

67:                                               ; preds = %2
  %68 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %8, %69
  %71 = ashr exact i64 %70, 5
  %72 = add i64 %71, %1
  %73 = icmp ugt i64 %72, 576460752303423487
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #12
  unreachable

76:                                               ; preds = %67
  %77 = sub i64 %5, %69
  %78 = ashr exact i64 %77, 5
  %79 = icmp ult i64 %78, 288230376151711743
  br i1 %79, label %80, label %88

80:                                               ; preds = %76
  %81 = ashr exact i64 %77, 4
  %82 = icmp ult i64 %81, %72
  %83 = select i1 %82, i64 %72, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 576460752303423487
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @abort() #12
  unreachable

88:                                               ; preds = %76, %85
  %89 = phi i64 [ %83, %85 ], [ 576460752303423487, %76 ]
  %90 = shl i64 %89, 5
  %91 = tail call i8* @_Znwm(i64 %90) #11
  %92 = bitcast i8* %91 to %"class.absl::optional.9"*
  br label %93

93:                                               ; preds = %80, %88
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.absl::optional.9"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %95, i64 %71
  %97 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %95, i64 %94
  %98 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %96, i64 %1
  %99 = shl nsw i64 %1, 5
  %100 = add i64 %99, -32
  %101 = lshr exact i64 %100, 5
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 7
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %93, %105
  %106 = phi %"class.absl::optional.9"* [ %111, %105 ], [ %96, %93 ]
  %107 = phi i64 [ %112, %105 ], [ %103, %93 ]
  %108 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %108, align 8
  %109 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %106, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = bitcast %union.anon.13* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #10
  %111 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %106, i64 1
  %112 = add i64 %107, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %105, !llvm.loop !6

114:                                              ; preds = %105, %93
  %115 = phi %"class.absl::optional.9"* [ %96, %93 ], [ %111, %105 ]
  %116 = icmp ult i64 %100, 224
  br i1 %116, label %145, label %117

117:                                              ; preds = %114, %117
  %118 = phi %"class.absl::optional.9"* [ %143, %117 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %119, align 8
  %120 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 0, i32 0, i32 0, i32 0, i32 1
  %121 = bitcast %union.anon.13* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #10
  %122 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %122, align 8
  %123 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 1, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast %union.anon.13* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #10
  %125 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %125, align 8
  %126 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 2, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast %union.anon.13* %126 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #10
  %128 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 3, i32 0, i32 0, i32 0, i32 1
  %130 = bitcast %union.anon.13* %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #10
  %131 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %131, align 8
  %132 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 4, i32 0, i32 0, i32 0, i32 1
  %133 = bitcast %union.anon.13* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #10
  %134 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %134, align 8
  %135 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 5, i32 0, i32 0, i32 0, i32 1
  %136 = bitcast %union.anon.13* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #10
  %137 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %137, align 8
  %138 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 6, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %union.anon.13* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #10
  %140 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %140, align 8
  %141 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 7, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast %union.anon.13* %141 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #10
  %143 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %118, i64 8
  %144 = icmp eq %"class.absl::optional.9"* %98, %143
  br i1 %144, label %145, label %117

145:                                              ; preds = %117, %114
  %146 = ptrtoint %"class.absl::optional.9"* %97 to i64
  %147 = ptrtoint %"class.absl::optional.9"* %98 to i64
  %148 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 0
  %149 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %148, align 8
  %150 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %6, align 8
  %151 = icmp eq %"class.absl::optional.9"* %150, %149
  br i1 %151, label %152, label %154

152:                                              ; preds = %145
  %153 = ptrtoint %"class.absl::optional.9"* %96 to i64
  store i64 %153, i64* %68, align 8
  store i64 %147, i64* %7, align 8
  store i64 %146, i64* %4, align 8
  br label %208

154:                                              ; preds = %145, %187
  %155 = phi %"class.absl::optional.9"* [ %188, %187 ], [ %96, %145 ]
  %156 = phi %"class.absl::optional.9"* [ %157, %187 ], [ %150, %145 ]
  %157 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %156, i64 -1
  %158 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %155, i64 -1, i32 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %157, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 32, i1 false) #10
  %160 = load i8, i8* %159, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %187, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %156, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %155, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0
  %165 = bitcast %"class.std::__1::map"* %163 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.std::__1::map"* %164 to i64*
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %155, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %156, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %170 = bitcast %"class.std::__1::__compressed_pair.14"* %169 to i64*
  %171 = bitcast %"class.std::__1::__compressed_pair.14"* %168 to i64*
  %172 = load i64, i64* %170, align 8
  store i64 %172, i64* %171, align 8
  %173 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %156, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %174 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %155, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %175 = load i64, i64* %173, align 8
  store i64 %175, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  %177 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %155, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  br i1 %176, label %178, label %180

178:                                              ; preds = %162
  %179 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %164, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %177, %"class.std::__1::__tree_end_node"** %179, align 8
  br label %186

180:                                              ; preds = %162
  %181 = inttoptr i64 %172 to %"class.std::__1::__tree_node_base"*
  %182 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %163, i64 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %177, %"class.std::__1::__tree_end_node"** %183, align 8
  %184 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %156, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %184, %"class.std::__1::__tree_end_node"** %182, align 8
  %185 = bitcast %"class.std::__1::__tree_end_node"* %184 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 16, i1 false) #10
  br label %186

186:                                              ; preds = %180, %178
  store i8 1, i8* %158, align 8
  br label %187

187:                                              ; preds = %186, %154
  %188 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %155, i64 -1
  %189 = icmp eq %"class.absl::optional.9"* %157, %149
  br i1 %189, label %190, label %154

190:                                              ; preds = %187
  %191 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %148, align 8
  %192 = load %"class.absl::optional.9"*, %"class.absl::optional.9"** %6, align 8
  %193 = ptrtoint %"class.absl::optional.9"* %188 to i64
  store i64 %193, i64* %68, align 8
  store i64 %147, i64* %7, align 8
  store i64 %146, i64* %4, align 8
  %194 = icmp eq %"class.absl::optional.9"* %192, %191
  br i1 %194, label %208, label %195

195:                                              ; preds = %190, %206
  %196 = phi %"class.absl::optional.9"* [ %197, %206 ], [ %192, %190 ]
  %197 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %196, i64 -1
  %198 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %197, i64 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8, i8* %198, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %196, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %203 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %196, i64 -1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %204 = bitcast %"class.std::__1::__tree_end_node"* %203 to %"class.std::__1::__tree_node"**
  %205 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %204, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %202, %"class.std::__1::__tree_node"* %205) #10
  store i8 0, i8* %198, align 8
  br label %206

206:                                              ; preds = %201, %195
  %207 = icmp eq %"class.absl::optional.9"* %197, %191
  br i1 %207, label %208, label %195

208:                                              ; preds = %206, %152, %190
  %209 = phi %"class.absl::optional.9"* [ %149, %152 ], [ %191, %190 ], [ %191, %206 ]
  %210 = icmp eq %"class.absl::optional.9"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %212) #11
  br label %213

213:                                              ; preds = %211, %208, %65
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media8learning12LearningTask16ValueDescriptionENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector"*, %"struct.media::learning::LearningTask::ValueDescription"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.media::learning::LearningTask::ValueDescription"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"struct.media::learning::LearningTask::ValueDescription"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %36, i64 %35
  %39 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %38 to i64
  %40 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %37 to i8*
  %46 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #10
  br label %53

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %50, i64 %52) #10
  br label %53

53:                                               ; preds = %44, %47
  %54 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %36, i64 %9, i32 1
  %55 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %1, i64 0, i32 1
  %56 = bitcast i32* %55 to i64*
  %57 = bitcast i32* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 1
  %60 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %62 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %61, align 8
  %63 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %62 to i64
  %64 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %3, align 8
  %65 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %64, %62
  br i1 %65, label %113, label %66

66:                                               ; preds = %53
  %67 = getelementptr %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %64, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = ptrtoint i8** %67 to i64
  %69 = sub i64 %68, %63
  %70 = and i64 %69, 32
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 -1
  %74 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %64, i64 -1
  %75 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %73 to i8*
  %76 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #10
  %77 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %37, i64 -1, i32 1
  %78 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %64, i64 -1, i32 1
  %79 = bitcast i32* %78 to i64*
  %80 = bitcast i32* %77 to i64*
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  br label %82

82:                                               ; preds = %72, %66
  %83 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ undef, %66 ], [ %73, %72 ]
  %84 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %37, %66 ], [ %73, %72 ]
  %85 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %64, %66 ], [ %74, %72 ]
  %86 = icmp ult i64 %69, 32
  br i1 %86, label %109, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %99, %87 ], [ %84, %82 ]
  %89 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %100, %87 ], [ %85, %82 ]
  %90 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %88, i64 -1
  %91 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %89, i64 -1
  %92 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %90 to i8*
  %93 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #10
  %94 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %88, i64 -1, i32 1
  %95 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %89, i64 -1, i32 1
  %96 = bitcast i32* %95 to i64*
  %97 = bitcast i32* %94 to i64*
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %88, i64 -2
  %100 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %89, i64 -2
  %101 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %99 to i8*
  %102 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #10
  %103 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %88, i64 -2, i32 1
  %104 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %89, i64 -2, i32 1
  %105 = bitcast i32* %104 to i64*
  %106 = bitcast i32* %103 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %100, %62
  br i1 %108, label %109, label %87

109:                                              ; preds = %87, %82
  %110 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %83, %82 ], [ %99, %87 ]
  %111 = load i64, i64* %6, align 8
  %112 = load %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"** %3, align 8
  br label %113

113:                                              ; preds = %53, %109
  %114 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %112, %109 ], [ %62, %53 ]
  %115 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %110, %109 ], [ %37, %53 ]
  %116 = phi i64 [ %111, %109 ], [ %63, %53 ]
  %117 = ptrtoint %"struct.media::learning::LearningTask::ValueDescription"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %60, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"struct.media::learning::LearningTask::ValueDescription"*
  %119 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %114, %118
  br i1 %119, label %132, label %120

120:                                              ; preds = %113, %130
  %121 = phi %"struct.media::learning::LearningTask::ValueDescription"* [ %122, %130 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %121, i64 -1
  %123 = bitcast %"struct.media::learning::LearningTask::ValueDescription"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"struct.media::learning::LearningTask::ValueDescription", %"struct.media::learning::LearningTask::ValueDescription"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  tail call void @_ZdlPv(i8* %129) #11
  br label %130

130:                                              ; preds = %127, %120
  %131 = icmp eq %"struct.media::learning::LearningTask::ValueDescription"* %122, %118
  br i1 %131, label %132, label %120

132:                                              ; preds = %130, %113
  %133 = icmp eq i64 %116, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %135) #11
  br label %136

136:                                              ; preds = %132, %134
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media8learning5ValueC1EOS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media8learning5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.29"*, %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.media::learning::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.media::learning::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.media::learning::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.media::learning::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %36, i64 %35
  %39 = ptrtoint %"class.media::learning::Value"* %38 to i64
  tail call void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"* %37, %"class.media::learning::Value"* dereferenceable(8) %1) #10
  %40 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %37, i64 1
  %41 = ptrtoint %"class.media::learning::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %42, align 8
  %44 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %3, align 8
  %45 = icmp eq %"class.media::learning::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.media::learning::Value"* %43 to i64
  br label %56

48:                                               ; preds = %34, %48
  %49 = phi %"class.media::learning::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.media::learning::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %50, i64 -1
  tail call void @_ZN5media8learning5ValueC1EOS1_(%"class.media::learning::Value"* %51, %"class.media::learning::Value"* dereferenceable(8) %52) #10
  %53 = icmp eq %"class.media::learning::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %"class.media::learning::Value"* [ %37, %46 ], [ %51, %54 ]
  %58 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %59 = ptrtoint %"class.media::learning::Value"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %56, %61
  ret void
}

declare void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5media8learning5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.29"*, %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.media::learning::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.media::learning::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.media::learning::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.media::learning::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %36, i64 %35
  %39 = ptrtoint %"class.media::learning::Value"* %38 to i64
  tail call void @_ZN5media8learning5ValueC1EOS1_(%"class.media::learning::Value"* %37, %"class.media::learning::Value"* dereferenceable(8) %1) #10
  %40 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %37, i64 1
  %41 = ptrtoint %"class.media::learning::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %42, align 8
  %44 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %3, align 8
  %45 = icmp eq %"class.media::learning::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.media::learning::Value"* %43 to i64
  br label %56

48:                                               ; preds = %34, %48
  %49 = phi %"class.media::learning::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.media::learning::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %50, i64 -1
  tail call void @_ZN5media8learning5ValueC1EOS1_(%"class.media::learning::Value"* %51, %"class.media::learning::Value"* dereferenceable(8) %52) #10
  %53 = icmp eq %"class.media::learning::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %"class.media::learning::Value"* [ %37, %46 ], [ %51, %54 ]
  %58 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %59 = ptrtoint %"class.media::learning::Value"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %56, %61
  ret void
}

declare zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.41"*, %"class.std::__1::__tree_node.79"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.79"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.79"* %1 to %"class.std::__1::__tree_node.79"**
  %6 = load %"class.std::__1::__tree_node.79"*, %"class.std::__1::__tree_node.79"** %5, align 8
  tail call void @_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.41"* %0, %"class.std::__1::__tree_node.79"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.79"**
  %9 = load %"class.std::__1::__tree_node.79"*, %"class.std::__1::__tree_node.79"** %8, align 8
  tail call void @_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.41"* %0, %"class.std::__1::__tree_node.79"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.79"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.41"*, %"class.media::learning::Value"* dereferenceable(8), %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.41", %"class.std::__1::__tree.41"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.79"**
  %6 = load %"class.std::__1::__tree_node.79"*, %"class.std::__1::__tree_node.79"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.79"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.41", %"class.std::__1::__tree.41"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node.79"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %1, %"class.media::learning::Value"* dereferenceable(8) %13) #10
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %13, %"class.media::learning::Value"* dereferenceable(8) %1) #10
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node.79"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.79"**
  %41 = load %"class.std::__1::__tree_node.79"*, %"class.std::__1::__tree_node.79"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node.79"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 40) #11, !noalias !7
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %"class.media::learning::Value"*
  tail call void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"* %46, %"class.media::learning::Value"* dereferenceable(8) %2) #10, !noalias !7
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node.79"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.41", %"class.std::__1::__tree.41"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.41"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.41", %"class.std::__1::__tree.41"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #10
  %65 = getelementptr inbounds %"class.std::__1::__tree.41", %"class.std::__1::__tree.41"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node.79"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.79", %"class.std::__1::__tree_node.79"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.media::learning::Value"* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.89"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %1, %"class.media::learning::Value"* dereferenceable(8) %15) #10
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %15, %"class.media::learning::Value"* dereferenceable(8) %1) #10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %74

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 48) #11, !noalias !10
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %48, align 8, !noalias !10
  %50 = bitcast i8* %47 to %"class.media::learning::Value"*
  tail call void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"* %50, %"class.media::learning::Value"* dereferenceable(8) %49) #10, !noalias !10
  %51 = getelementptr inbounds i8, i8* %46, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8, !noalias !10
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %45
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %45 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #10
  %71 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %39
  %75 = phi i8 [ 1, %67 ], [ 0, %39 ]
  %76 = phi %"class.std::__1::__tree_node"* [ %53, %67 ], [ %43, %39 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeIN5media8learning5ValueENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeINS_12__value_typeIN5media8learning5ValueEmEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
