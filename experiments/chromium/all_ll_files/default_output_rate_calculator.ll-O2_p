; ModuleID = '../../third_party/webrtc/modules/audio_mixer/default_output_rate_calculator.cc'
source_filename = "../../third_party/webrtc/modules/audio_mixer/default_output_rate_calculator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::DefaultOutputRateCalculator" = type { %"class.webrtc::OutputRateCalculator" }
%"class.webrtc::OutputRateCalculator" = type { i32 (...)** }

$_ZN6webrtc20OutputRateCalculatorD2Ev = comdat any

$_ZN6webrtc27DefaultOutputRateCalculatorD0Ev = comdat any

@_ZZN6webrtc27DefaultOutputRateCalculator28CalculateOutputRateFromRangeEN3rtc9ArrayViewIKiLln4711EEEE12native_rates = internal unnamed_addr constant [4 x i32] [i32 8000, i32 16000, i32 32000, i32 48000], align 16
@_ZTVN6webrtc27DefaultOutputRateCalculatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.webrtc::DefaultOutputRateCalculator"*, i32*, i64)* @_ZN6webrtc27DefaultOutputRateCalculator28CalculateOutputRateFromRangeEN3rtc9ArrayViewIKiLln4711EEE to i8*), i8* bitcast (void (%"class.webrtc::OutputRateCalculator"*)* @_ZN6webrtc20OutputRateCalculatorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::DefaultOutputRateCalculator"*)* @_ZN6webrtc27DefaultOutputRateCalculatorD0Ev to i8*)] }, align 8

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc27DefaultOutputRateCalculator28CalculateOutputRateFromRangeEN3rtc9ArrayViewIKiLln4711EEE(%"class.webrtc::DefaultOutputRateCalculator"* nocapture readnone, i32*, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %74, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i32, i32* %1, i64 %2
  %7 = icmp eq i64 %2, 1
  br i1 %7, label %56, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds i32, i32* %1, i64 1
  %10 = shl nsw i64 %2, 2
  %11 = add i64 %10, -8
  %12 = lshr exact i64 %11, 2
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %8, %16
  %17 = phi i32* [ %24, %16 ], [ %9, %8 ]
  %18 = phi i32* [ %23, %16 ], [ %1, %8 ]
  %19 = phi i64 [ %25, %16 ], [ %14, %8 ]
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %17, align 4
  %22 = icmp slt i32 %20, %21
  %23 = select i1 %22, i32* %17, i32* %18
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = add i64 %19, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %16, !llvm.loop !2

27:                                               ; preds = %16, %8
  %28 = phi i32* [ undef, %8 ], [ %23, %16 ]
  %29 = phi i32* [ %9, %8 ], [ %24, %16 ]
  %30 = phi i32* [ %1, %8 ], [ %23, %16 ]
  %31 = icmp ult i64 %11, 12
  br i1 %31, label %56, label %32

32:                                               ; preds = %27, %32
  %33 = phi i32* [ %54, %32 ], [ %29, %27 ]
  %34 = phi i32* [ %53, %32 ], [ %30, %27 ]
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %33, align 4
  %37 = icmp slt i32 %35, %36
  %38 = select i1 %37, i32* %33, i32* %34
  %39 = getelementptr inbounds i32, i32* %33, i64 1
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %39, align 4
  %42 = icmp slt i32 %40, %41
  %43 = select i1 %42, i32* %39, i32* %38
  %44 = getelementptr inbounds i32, i32* %33, i64 2
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %44, align 4
  %47 = icmp slt i32 %45, %46
  %48 = select i1 %47, i32* %44, i32* %43
  %49 = getelementptr inbounds i32, i32* %33, i64 3
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %49, align 4
  %52 = icmp slt i32 %50, %51
  %53 = select i1 %52, i32* %49, i32* %48
  %54 = getelementptr inbounds i32, i32* %33, i64 4
  %55 = icmp eq i32* %54, %6
  br i1 %55, label %56, label %32

56:                                               ; preds = %27, %32, %5
  %57 = phi i32* [ %1, %5 ], [ %28, %27 ], [ %53, %32 ]
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %59, %56
  %60 = phi i64 [ 4, %56 ], [ %70, %59 ]
  %61 = phi i32* [ getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN6webrtc27DefaultOutputRateCalculator28CalculateOutputRateFromRangeEN3rtc9ArrayViewIKiLln4711EEEE12native_rates, i64 0, i64 0), %56 ], [ %69, %59 ]
  %62 = lshr i64 %60, 1
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %58
  %66 = getelementptr inbounds i32, i32* %63, i64 1
  %67 = xor i64 %62, -1
  %68 = add i64 %60, %67
  %69 = select i1 %65, i32* %66, i32* %61
  %70 = select i1 %65, i64 %68, i64 %62
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %59

72:                                               ; preds = %59
  %73 = load i32, i32* %69, align 4
  br label %74

74:                                               ; preds = %3, %72
  %75 = phi i32 [ %73, %72 ], [ 48000, %3 ]
  ret i32 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc20OutputRateCalculatorD2Ev(%"class.webrtc::OutputRateCalculator"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc27DefaultOutputRateCalculatorD0Ev(%"class.webrtc::DefaultOutputRateCalculator"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.webrtc::DefaultOutputRateCalculator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
