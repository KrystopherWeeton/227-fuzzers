; ModuleID = '../../third_party/blink/renderer/core/html/html_frame_element_base.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_frame_element_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.80", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.80" = type { %"class.base::RefCounted.81" }
%"class.base::RefCounted.81" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.88", i32, [4 x i8], %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.261", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.268", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.206", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__cxx_atomic_impl.127" }
%"struct.std::__1::__cxx_atomic_impl.127" = type { %"struct.std::__1::__cxx_atomic_base_impl.128" }
%"struct.std::__1::__cxx_atomic_base_impl.128" = type { i64 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist.163"* }
%"class.blink::Worklist.163" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::Worklist.170"* }
%"class.blink::Worklist.170" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::Worklist.177"* }
%"class.blink::Worklist.177" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.124" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.184", %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.200", [4 x i8] }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186", %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { i64 }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { float }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.209", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.218" }
%"class.WTF::Vector.218" = type { %"class.WTF::VectorBuffer.219" }
%"class.WTF::VectorBuffer.219" = type { %"class.WTF::VectorBufferBase.220" }
%"class.WTF::VectorBufferBase.220" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.234" }
%"class.WTF::VectorBuffer.234" = type { %"class.WTF::VectorBufferBase.235" }
%"class.WTF::VectorBufferBase.235" = type { %"struct.std::__1::pair.236"*, i32, i32 }
%"struct.std::__1::pair.236" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.249" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.135"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.149"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.156"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.163"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1339", i64 }
%"class.std::__1::vector.1339" = type { %"class.std::__1::__vector_base.1340" }
%"class.std::__1::__vector_base.1340" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1341" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.267 }
%class.scoped_refptr.267 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLFrameElementBase" = type { %"class.blink::HTMLFrameOwnerElement.base", i32, i32, i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1468", %"class.blink::Member.1470", %"class.blink::Member.0", %"class.blink::Member.1472", %"class.blink::Member.1472", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1503", %"class.blink::HeapVector.1505" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::Document"* }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1476" }
%"class.blink::HeapHashMap.1476" = type { %"class.WTF::HashMap.1479" }
%"class.WTF::HashMap.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"struct.WTF::KeyValuePair.1482"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1482" = type { %"class.WTF::AtomicString", %"class.blink::Member.1483" }
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.539", i32, %"class.blink::HeapVector.1487" }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.1487" = type { %"class.WTF::Vector.1490" }
%"class.WTF::Vector.1490" = type { %"class.WTF::VectorBuffer.1491" }
%"class.WTF::VectorBuffer.1491" = type { %"class.WTF::VectorBufferBase.1492" }
%"class.WTF::VectorBufferBase.1492" = type { %"class.blink::Member.539"*, i32, i32 }
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1500" }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::HeapHashMap.1502"* }
%"class.blink::HeapHashMap.1502" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1505" = type { %"class.WTF::Vector.1508" }
%"class.WTF::Vector.1508" = type { %"class.WTF::VectorBuffer.1509" }
%"class.WTF::VectorBuffer.1509" = type { %"class.WTF::VectorBufferBase.1510" }
%"class.WTF::VectorBufferBase.1510" = type { %"class.blink::Member.1511"*, i32, i32 }
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1513", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1515, %"class.WTF::Vector.1516", %"class.WTF::Vector.1516", %"class.blink::Member", %"class.blink::Member.1521", %"class.blink::HeapHashSet.1525", %"class.blink::Member.1470", %"class.WTF::HashSet.1532", %"class.WTF::TextPosition", %"class.blink::Member.1536", %"class.blink::HeapVector.1538", %"class.blink::Member.1545" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1515 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1523" }
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1525" = type { %"class.WTF::HashSet.1528" }
%"class.WTF::HashSet.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"class.blink::WeakMember.1531"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1531" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.1532" = type { %"class.WTF::HashTable.1533" }
%"class.WTF::HashTable.1533" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1538" = type { %"class.WTF::Vector.1541" }
%"class.WTF::Vector.1541" = type { %"class.WTF::VectorBuffer.1542" }
%"class.WTF::VectorBuffer.1542" = type { %"class.WTF::VectorBufferBase.1543" }
%"class.WTF::VectorBufferBase.1543" = type { %"class.blink::Member.1521"*, i32, i32 }
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.48", %"class.blink::Member.50", %"class.blink::Member.52", i8, i32, i8, i32, %"class.blink::Member.465", %"class.blink::Member.71", %"class.blink::FrameLifecycle", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.19", %"class.blink::Member.469", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.471", i8, %"class.base::UnguessableToken", %"class.absl::optional.473", %"class.absl::optional.478", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.19", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1348", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.19", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1362", %"class.blink::Member.1366", %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.blink::Member.1372", %"class.blink::Member.1374", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::HeapObserverSet", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::Member.1400", %"class.blink::Member.1402", %"class.blink::Member.1404", %"class.blink::Member.1406", %"class.blink::Member.1408", %"class.blink::Member.1410", %"class.blink::Member.1412", %"class.blink::Member.1414", %"class.blink::Member.1416", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.1441", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1448", %"class.blink::Member.48", %"class.blink::Member.48", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.1456", %"class.std::__1::unique_ptr.1462", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1348" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1349" }
%"class.blink::HeapHashMap.1349" = type { %"class.WTF::HashMap.1352" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1356" }
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.48", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.48", %"class.blink::Member.19", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.1378" }
%"class.blink::HeapHashSet.1378" = type { %"class.WTF::HashSet.1381" }
%"class.WTF::HashSet.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"class.blink::WeakMember.1384"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1384" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1389" }
%"class.blink::HeapHashSet.1389" = type { %"class.WTF::HashSet.1392" }
%"class.WTF::HashSet.1392" = type { %"class.WTF::HashTable.1393" }
%"class.WTF::HashTable.1393" = type <{ %"class.blink::WeakMember.1395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1395" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1418" }
%"class.WTF::Deque.1418" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.std::__1::unique_ptr.1423"*, i32, i32 }
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1429", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1429" = type { %"class.std::__1::__bitset.1430" }
%"class.std::__1::__bitset.1430" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1431" }
%"class.absl::optional.1431" = type { %"class.absl::optional_internal::optional_data.1432" }
%"class.absl::optional_internal::optional_data.1432" = type { %"class.absl::optional_internal::optional_data_base.1433" }
%"class.absl::optional_internal::optional_data_base.1433" = type { %"class.absl::optional_internal::optional_data_dtor_base.1434" }
%"class.absl::optional_internal::optional_data_dtor_base.1434" = type { i8, %union.anon.1435 }
%union.anon.1435 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1436", i64, %"class.absl::optional.412", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.946" }
%"class.blink::WebPrivatePtr.946" = type { i8* }
%"class.absl::optional.1436" = type { %"class.absl::optional_internal::optional_data.1437" }
%"class.absl::optional_internal::optional_data.1437" = type { %"class.absl::optional_internal::optional_data_base.1438" }
%"class.absl::optional_internal::optional_data_base.1438" = type { %"class.absl::optional_internal::optional_data_dtor_base.1439" }
%"class.absl::optional_internal::optional_data_dtor_base.1439" = type { i8, %union.anon.1440 }
%union.anon.1440 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.412" = type { %"class.absl::optional_internal::optional_data.413" }
%"class.absl::optional_internal::optional_data.413" = type { %"class.absl::optional_internal::optional_data_base.414" }
%"class.absl::optional_internal::optional_data_base.414" = type { %"class.absl::optional_internal::optional_data_dtor_base.415" }
%"class.absl::optional_internal::optional_data_dtor_base.415" = type { i8, %union.anon.416 }
%union.anon.416 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.1441" = type { %"class.std::__1::unique_ptr.1442" }
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1448" = type { %"class.WTF::HashSet.1451" }
%"class.WTF::HashSet.1451" = type { %"class.WTF::HashTable.1452" }
%"class.WTF::HashTable.1452" = type <{ %"class.blink::WeakMember.1454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1454" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1455" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1455" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.371 }
%class.scoped_refptr.371 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.307", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.307" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.287" }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.308" }
%"struct.std::__1::atomic.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__atomic_base.310" }
%"struct.std::__1::__atomic_base.310" = type { %"struct.std::__1::__cxx_atomic_impl.311" }
%"struct.std::__1::__cxx_atomic_impl.311" = type { %"struct.std::__1::__cxx_atomic_base_impl.312" }
%"struct.std::__1::__cxx_atomic_base_impl.312" = type { i8 }
%"class.std::__1::unique_ptr.1456" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1462" = type { %"class.std::__1::__compressed_pair.1463" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.19", %"class.blink::Member.71", %"class.blink::Member.279", %"class.blink::Member.281", i8, %"class.WTF::Vector.283" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60", [32 x i8] }
%"class.WTF::VectorBufferBase.60" = type { %"struct.std::__1::pair.61"*, i32, i32 }
%"struct.std::__1::pair.61" = type { %"class.WTF::AtomicString", %"class.blink::Member.62" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::HeapVector.64"* }
%"class.blink::HeapVector.64" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.WTF::Vector.69"* }
%"class.WTF::Vector.69" = type opaque
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.457" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.286, %"class.std::__1::unique_ptr.407", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.292, i32 }>
%class.scoped_refptr.286 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.292, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.373", %"class.absl::optional.378", %"class.absl::optional.334", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.398", i8, [7 x i8], %class.scoped_refptr.292, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.300", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.306 }
%class.scoped_refptr.306 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.292, %"class.std::__1::unique_ptr.315", %"class.absl::optional.324", %"struct.std::__1::atomic.268", i8, i8, i8, i8, i32, i32, %"class.absl::optional.334", %"class.std::__1::unique_ptr.339", i8, i64, %class.scoped_refptr.369, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.372" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.314", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.314" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.292, i8, %"class.mojo::ScopedHandleBase.318", %class.scoped_refptr.319, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.320" }
%"class.mojo::ScopedHandleBase.318" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.319 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.320" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.324" = type { %"class.absl::optional_internal::optional_data.325" }
%"class.absl::optional_internal::optional_data.325" = type { %"class.absl::optional_internal::optional_data_base.326" }
%"class.absl::optional_internal::optional_data_base.326" = type { %"class.absl::optional_internal::optional_data_dtor_base.327" }
%"class.absl::optional_internal::optional_data_dtor_base.327" = type { i8, %union.anon.328 }
%union.anon.328 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.329", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.329" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.342", i8, i64, %class.scoped_refptr.343, %class.scoped_refptr.365 }
%"class.base::RepeatingCallback.342" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.343 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.344", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.354", i8, [7 x i8] }>
%"class.base::RefCounted.344" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::map.354" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%class.scoped_refptr.365 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.369 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1338", [4 x i8], %"class.base::RepeatingCallback.410", %class.scoped_refptr.292, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.410" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.372" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.373" = type { %"class.absl::optional_internal::optional_data.374" }
%"class.absl::optional_internal::optional_data.374" = type { %"class.absl::optional_internal::optional_data_base.375" }
%"class.absl::optional_internal::optional_data_base.375" = type { %"class.absl::optional_internal::optional_data_dtor_base.376" }
%"class.absl::optional_internal::optional_data_dtor_base.376" = type { i8, %union.anon.377 }
%union.anon.377 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.378" = type { %"class.absl::optional_internal::optional_data.379" }
%"class.absl::optional_internal::optional_data.379" = type { %"class.absl::optional_internal::optional_data_base.380" }
%"class.absl::optional_internal::optional_data_base.380" = type { %"class.absl::optional_internal::optional_data_dtor_base.381" }
%"class.absl::optional_internal::optional_data_dtor_base.381" = type { i8, [7 x i8], %union.anon.382 }
%union.anon.382 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.334" = type { %"class.absl::optional_internal::optional_data.335" }
%"class.absl::optional_internal::optional_data.335" = type { %"class.absl::optional_internal::optional_data_base.336" }
%"class.absl::optional_internal::optional_data_base.336" = type { %"class.absl::optional_internal::optional_data_dtor_base.337" }
%"class.absl::optional_internal::optional_data_dtor_base.337" = type { i8, %union.anon.338 }
%union.anon.338 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.383 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.383 = type { %"class.std::__1::map.386" }
%"class.std::__1::map.386" = type { %"class.std::__1::__tree.387" }
%"class.std::__1::__tree.387" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.397"*, i64 }
%"class.std::__1::unique_ptr.397" = type opaque
%"class.std::__1::map.398" = type { %"class.std::__1::__tree.399" }
%"class.std::__1::__tree.399" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.410", %"class.base::OnceCallback.411", %"class.absl::optional.412", %"class.absl::optional.417", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.424", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.432", %"class.std::__1::map.443", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.452", i8, %class.scoped_refptr.292, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.453" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.411" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.417" = type { %"class.absl::optional_internal::optional_data.418" }
%"class.absl::optional_internal::optional_data.418" = type { %"class.absl::optional_internal::optional_data_base.419" }
%"class.absl::optional_internal::optional_data_base.419" = type { %"class.absl::optional_internal::optional_data_dtor_base.420" }
%"class.absl::optional_internal::optional_data_dtor_base.420" = type { i8, %union.anon.421 }
%union.anon.421 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.292, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.422" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.422" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.423 }
%class.scoped_refptr.423 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.427", %class.scoped_refptr.428 }
%"class.base::RepeatingCallback.427" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.428 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.432" = type { %"class.std::__1::__tree.433" }
%"class.std::__1::__tree.433" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::map.443" = type { %"class.std::__1::__tree.444" }
%"class.std::__1::__tree.444" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.base::OnceCallback.452" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.453" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.292 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.293" }>
%"class.base::RefCountedThreadSafe.293" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type { %"class.v8::Isolate"*, %"class.blink::Member.19", i32, %"class.blink::Member.75", %"class.blink::HeapHashMap.272" }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::WindowProxy"* }
%"class.blink::WindowProxy" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.blink::Member.19", %class.scoped_refptr.79, %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%class.scoped_refptr.79 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::HeapHashMap.272" = type { %"class.WTF::HashMap.275" }
%"class.WTF::HashMap.275" = type { %"class.WTF::HashTable.276" }
%"class.WTF::HashTable.276" = type <{ %"struct.WTF::KeyValuePair.278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.278" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.496", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.510", %"class.blink::FrameLoader", %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::Member.541", %"class.blink::Member.543", %"class.blink::Member.545", %"class.blink::Member.547", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.551", %class.scoped_refptr.553, %"class.blink::Member.554", %"class.blink::Member.556", %"class.blink::Member.558", %"class.blink::Member.560", %"class.blink::Member.562", %"class.blink::Member.564", %"class.blink::Member.566", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.570", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.591", %"class.std::__1::unique_ptr.592", %"class.absl::optional.478", i32, [4 x i8], %"class.std::__1::unique_ptr.598", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.606", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.611", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.616", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.619", %"class.blink::Member.621", %"class.blink::Member.623", %"class.blink::Member.625", %"class.mojo::StructPtr", %"class.blink::Member.635", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.637", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.489" }
%"class.blink::HeapHashMap.489" = type { %"class.WTF::HashMap.492" }
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.499", %"class.base::WeakPtrFactory.504" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type opaque
%"class.base::WeakPtrFactory.504" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.508" }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1725" }
%"class.blink::WeakMember.1725" = type { %"class.blink::MemberBase.1726" }
%"class.blink::MemberBase.1726" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1566" }
%"class.blink::HeapObserverSet.1566" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1567" }
%"class.blink::HeapHashSet.1567" = type { %"class.WTF::HashSet.1570" }
%"class.WTF::HashSet.1570" = type { %"class.WTF::HashTable.1571" }
%"class.WTF::HashTable.1571" = type <{ %"class.blink::WeakMember.1573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1573" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.410", %"class.base::RepeatingCallback.2094", i64, %"class.std::__1::map.2095", i8*, i64, %"class.base::WeakPtrFactory.2104" }
%"class.base::RepeatingCallback.2094" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2095" = type { %"class.std::__1::__tree.2096" }
%"class.std::__1::__tree.2096" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2097", %"class.std::__1::__compressed_pair.2101" }
%"class.std::__1::__compressed_pair.2097" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.2101" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.base::WeakPtrFactory.2104" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.510" = type { %"class.WTF::HashSet.513" }
%"class.WTF::HashSet.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"class.blink::WeakMember.516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.516" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.469", %"class.blink::Member.517", %"class.blink::Member.519", %"class.std::__1::unique_ptr.521", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.533" }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.936", %"class.blink::Member.941", %"class.std::__1::unique_ptr.943", %"class.std::__1::unique_ptr.1115", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.1171, %"class.WTF::AtomicString", i32, %"class.absl::optional.1027", %class.scoped_refptr.1172, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.992", i8, %"class.absl::optional.999", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.469", %"class.blink::Member.1173", %"class.blink::Member.1248", %"class.blink::Member.1250", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.1252", %class.scoped_refptr.1224, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.1265", %"class.std::__1::unique_ptr.1004", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.1277", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1282, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1296, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.1297", %"class.blink::Member.1312", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.1325", %"class.WTF::Vector.963", i8, i8, i8, %"class.blink::WebVector.1104", %"class.blink::WebVector.1104", %"class.mojo::Remote.1330" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase.938" }
%"class.WTF::VectorBufferBase.938" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.943" = type { %"class.std::__1::__compressed_pair.944" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.947", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.992", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.999", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1004", %"class.base::UnguessableToken", %"class.blink::WebVector.1010", %"class.base::TickClock"*, %"class.blink::WebVector.1019", %"class.absl::optional.1027", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1032", %"class.blink::WebVector", i8, %"class.blink::WebVector.1037", i8, %"class.std::__1::unique_ptr.1045", %"class.blink::WebVector.1104", %"class.blink::WebVector.1104" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.947" = type { %"class.std::__1::vector.948" }
%"class.std::__1::vector.948" = type { %"class.std::__1::__vector_base.949" }
%"class.std::__1::__vector_base.949" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.987" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.950", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.998", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.998" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1010" = type { %"class.std::__1::vector.1011" }
%"class.std::__1::vector.1011" = type { %"class.std::__1::__vector_base.1012" }
%"class.std::__1::__vector_base.1012" = type { %"class.std::__1::unique_ptr.1013"*, %"class.std::__1::unique_ptr.1013"*, %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::unique_ptr.1013" = type opaque
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.std::__1::unique_ptr.1013"* }
%"class.blink::WebVector.1019" = type { %"class.std::__1::vector.1020" }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.1032" = type { %"class.absl::optional_internal::optional_data.1033" }
%"class.absl::optional_internal::optional_data.1033" = type { %"class.absl::optional_internal::optional_data_base.1034" }
%"class.absl::optional_internal::optional_data_base.1034" = type { %"class.absl::optional_internal::optional_data_dtor_base.1035" }
%"class.absl::optional_internal::optional_data_dtor_base.1035" = type { i8, [7 x i8], %union.anon.1036 }
%union.anon.1036 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.575" }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1037" = type { %"class.std::__1::vector.1038" }
%"class.std::__1::vector.1038" = type { %"class.std::__1::__vector_base.1039" }
%"class.std::__1::__vector_base.1039" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { i32* }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1048" }
%"class.blink::WebVector.1048" = type { %"class.std::__1::vector.1049" }
%"class.std::__1::vector.1049" = type { %"class.std::__1::__vector_base.1050" }
%"class.std::__1::__vector_base.1050" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.1096" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1051", %"class.blink::WebVector.1059", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.1091", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1051" = type { %"class.std::__1::vector.1052" }
%"class.std::__1::vector.1052" = type { %"class.std::__1::__vector_base.1053" }
%"class.std::__1::__vector_base.1053" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1054" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1059" = type { %"class.std::__1::vector.1060" }
%"class.std::__1::vector.1060" = type { %"class.std::__1::__vector_base.1061" }
%"class.std::__1::__vector_base.1061" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1086" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1062", %"class.blink::WebVector", %"class.blink::WebVector.1070", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1062" = type { %"class.std::__1::vector.1063" }
%"class.std::__1::vector.1063" = type { %"class.std::__1::__vector_base.1064" }
%"class.std::__1::__vector_base.1064" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1070" = type { %"class.std::__1::vector.1071" }
%"class.std::__1::vector.1071" = type { %"class.std::__1::__vector_base.1072" }
%"class.std::__1::__vector_base.1072" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1081" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1073" }
%"class.blink::WebVector.1073" = type { %"class.std::__1::vector.1074" }
%"class.std::__1::vector.1074" = type { %"class.std::__1::__vector_base.1075" }
%"class.std::__1::__vector_base.1075" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { i8* }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.1091" = type { %"class.absl::optional_internal::optional_data.1092" }
%"class.absl::optional_internal::optional_data.1092" = type { %"class.absl::optional_internal::optional_data_base.1093" }
%"class.absl::optional_internal::optional_data_base.1093" = type { %"class.absl::optional_internal::optional_data_dtor_base.1094" }
%"class.absl::optional_internal::optional_data_dtor_base.1094" = type { i8, [7 x i8], %union.anon.1095 }
%union.anon.1095 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.std::__1::unique_ptr.1115" = type { %"class.std::__1::__compressed_pair.1116" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1118", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1118" = type { %"class.std::__1::unique_ptr.1119" }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1122" }
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { %"class.mojo::StructPtr.1125"*, i32, i32 }
%"class.mojo::StructPtr.1125" = type { %"class.std::__1::unique_ptr.1126" }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1129", %"class.WTF::HashMap.1136", %"class.WTF::HashMap.1141", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1146", i8, %"class.WTF::Vector.963", i32, %"class.mojo::StructPtr.1147", %"class.WTF::Vector.963" }
%"class.mojo::StructPtr.1129" = type { %"class.std::__1::unique_ptr.1130" }
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1136" = type { %"class.WTF::HashTable.1137" }
%"class.WTF::HashTable.1137" = type <{ %"struct.WTF::KeyValuePair.1140"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1140" = type opaque
%"class.WTF::HashMap.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"struct.WTF::KeyValuePair.1145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1145" = type opaque
%"class.mojo::InlinedStructPtr.1146" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1147" = type { %"class.std::__1::unique_ptr.1148" }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.963", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1162" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.407", i32 }>
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.1171 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.1027" = type { %"class.absl::optional_internal::optional_data.1028" }
%"class.absl::optional_internal::optional_data.1028" = type { %"class.absl::optional_internal::optional_data_base.1029" }
%"class.absl::optional_internal::optional_data_base.1029" = type { %"class.absl::optional_internal::optional_data_dtor_base.1030" }
%"class.absl::optional_internal::optional_data_dtor_base.1030" = type { i8, %union.anon.1031 }
%union.anon.1031 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.1172 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1225", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1172 }
%"class.WTF::RefCounted.1225" = type { %"class.base::RefCounted.1226" }
%"class.base::RefCounted.1226" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.999" = type { %"class.absl::optional_internal::optional_data.1000" }
%"class.absl::optional_internal::optional_data.1000" = type { %"class.absl::optional_internal::optional_data_base.1001" }
%"class.absl::optional_internal::optional_data_base.1001" = type { %"class.absl::optional_internal::optional_data_dtor_base.1002" }
%"class.absl::optional_internal::optional_data_dtor_base.1002" = type { i8, %union.anon.1003 }
%union.anon.1003 = type { i32 }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.963", %"class.blink::Member.1177", %"class.absl::optional.1179", i64, i64, i32, %class.scoped_refptr.1184, %class.scoped_refptr.1171, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1184 }
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.1179" = type { %"class.absl::optional_internal::optional_data.1180" }
%"class.absl::optional_internal::optional_data.1180" = type { %"class.absl::optional_internal::optional_data_base.1181" }
%"class.absl::optional_internal::optional_data_base.1181" = type { %"class.absl::optional_internal::optional_data_dtor_base.1182" }
%"class.absl::optional_internal::optional_data_dtor_base.1182" = type { i8, %union.anon.1183 }
%union.anon.1183 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.1184 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1186", i64, %"class.WTF::Vector.1189", %"class.WTF::Vector.1194", %"class.WTF::Vector.1200", %"class.WTF::Vector.1218", %class.scoped_refptr.1224, %"class.WTF::HashMap.1227", %"class.WTF::Vector.1232", %"class.WTF::Vector.1189", %"class.WTF::Vector.1238", %"class.WTF::HashMap.1243", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1185" }
%"class.base::RefCountedThreadSafe.1185" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196", [8 x i8] }
%"class.WTF::VectorBufferBase.1196" = type { %class.scoped_refptr.1197*, i32, i32 }
%class.scoped_refptr.1197 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1200" = type { %"class.WTF::VectorBuffer.1201" }
%"class.WTF::VectorBuffer.1201" = type { %"class.WTF::VectorBufferBase.1202" }
%"class.WTF::VectorBufferBase.1202" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1204", %"class.std::__1::unique_ptr.1210" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1203 }
%class.scoped_refptr.1203 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1218" = type { %"class.WTF::VectorBuffer.1219" }
%"class.WTF::VectorBuffer.1219" = type { %"class.WTF::VectorBufferBase.1220" }
%"class.WTF::VectorBufferBase.1220" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1221", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1221" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1231" = type opaque
%"class.WTF::Vector.1232" = type { %"class.WTF::VectorBuffer.1233" }
%"class.WTF::VectorBuffer.1233" = type { %"class.WTF::VectorBufferBase.1234" }
%"class.WTF::VectorBufferBase.1234" = type { %"class.mojo::ScopedHandleBase.1235"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1235" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191", [16 x i8] }
%"class.WTF::VectorBufferBase.1191" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1238" = type { %"class.WTF::VectorBuffer.1239" }
%"class.WTF::VectorBuffer.1239" = type { %"class.WTF::VectorBufferBase.1240" }
%"class.WTF::VectorBufferBase.1240" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1243" = type { %"class.WTF::HashTable.1244" }
%"class.WTF::HashTable.1244" = type <{ %"struct.WTF::KeyValuePair.1247"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1247" = type { i8**, %"class.std::__1::unique_ptr.2082" }
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.958", %class.scoped_refptr.977, %class.scoped_refptr.978, %"struct.blink::CacheControlHeader", %"class.absl::optional.412", %"class.absl::optional.886", %"class.absl::optional.886", %"class.absl::optional.886", i64, %"class.blink::KURL", %"class.WTF::Vector.936", %"class.WTF::String", %"class.WTF::Vector.963", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.478", %"class.WTF::Vector.963", %"class.blink::KURL", %"class.absl::optional.979" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.953" }
%"class.WTF::HashMap.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ %"struct.WTF::KeyValuePair.957"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.957" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.958" = type { %"class.absl::optional_internal::optional_data.959" }
%"class.absl::optional_internal::optional_data.959" = type { %"class.absl::optional_internal::optional_data_base.960" }
%"class.absl::optional_internal::optional_data_base.960" = type { %"class.absl::optional_internal::optional_data_dtor_base.961" }
%"class.absl::optional_internal::optional_data_dtor_base.961" = type { i8, %union.anon.962 }
%union.anon.962 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.963", %"class.WTF::String", i64, i64, %"class.WTF::Vector.968", %"class.WTF::Vector.972" }
%"class.WTF::Vector.968" = type { %"class.WTF::VectorBuffer.969" }
%"class.WTF::VectorBuffer.969" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974" }
%"class.WTF::VectorBufferBase.974" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.977 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.978 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.412", %"class.absl::optional.412" }
%"class.absl::optional.886" = type { %"class.absl::optional_internal::optional_data.887" }
%"class.absl::optional_internal::optional_data.887" = type { %"class.absl::optional_internal::optional_data_base.888" }
%"class.absl::optional_internal::optional_data_base.888" = type { %"class.absl::optional_internal::optional_data_dtor_base.889" }
%"class.absl::optional_internal::optional_data_dtor_base.889" = type { i8, %union.anon.890 }
%union.anon.890 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.879" }
%"class.base::time_internal::TimeBase.879" = type { i64 }
%"class.absl::optional.979" = type { %"class.absl::optional_internal::optional_data.980" }
%"class.absl::optional_internal::optional_data.980" = type { %"class.absl::optional_internal::optional_data_base.981" }
%"class.absl::optional_internal::optional_data_base.981" = type { %"class.absl::optional_internal::optional_data_dtor_base.982" }
%"class.absl::optional_internal::optional_data_dtor_base.982" = type { i8, %union.anon.983 }
%union.anon.983 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::Remote.1252" = type { %"class.mojo::internal::InterfacePtrState.1253" }
%"class.mojo::internal::InterfacePtrState.1253" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1254" }
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.1224 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.412", %"class.absl::optional.412", %"class.absl::optional.412", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.1260", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.519" }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.1267" }
%"class.base::flat_map.1267" = type { %"class.base::internal::flat_tree.1268" }
%"class.base::internal::flat_tree.1268" = type { %"class.std::__1::vector.1269" }
%"class.std::__1::vector.1269" = type { %"class.std::__1::__vector_base.1270" }
%"class.std::__1::__vector_base.1270" = type { %"struct.std::__1::pair.1271"*, %"struct.std::__1::pair.1271"*, %"class.std::__1::__compressed_pair.1272" }
%"struct.std::__1::pair.1271" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"struct.std::__1::pair.1271"* }
%"class.WTF::Vector.1277" = type { %"class.WTF::VectorBuffer.1278" }
%"class.WTF::VectorBuffer.1278" = type { %"class.WTF::VectorBufferBase.1279" }
%"class.WTF::VectorBufferBase.1279" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1282 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1283", i64, %"class.WTF::Vector.1285", %"class.WTF::Vector.1290" }
%"class.WTF::RefCounted.1283" = type { %"class.base::RefCounted.1284" }
%"class.base::RefCounted.1284" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1285" = type { %"class.WTF::VectorBuffer.1286" }
%"class.WTF::VectorBuffer.1286" = type { %"class.WTF::VectorBufferBase.1287" }
%"class.WTF::VectorBufferBase.1287" = type { i8*, i32, i32 }
%"class.WTF::Vector.1290" = type { %"class.WTF::VectorBuffer.1291" }
%"class.WTF::VectorBuffer.1291" = type { %"class.WTF::VectorBufferBase.1292" }
%"class.WTF::VectorBufferBase.1292" = type { %"class.std::__1::unique_ptr.1293"*, i32, i32 }
%"class.std::__1::unique_ptr.1293" = type opaque
%class.scoped_refptr.1296 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.1301", %"class.std::__1::unique_ptr.1306", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.1301" = type { %"class.WTF::HashTable.1302" }
%"class.WTF::HashTable.1302" = type <{ %"struct.WTF::KeyValuePair.1305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1305" = type { %"class.WTF::Vector.2153", %class.scoped_refptr.2158 }
%"class.WTF::Vector.2153" = type { %"class.WTF::VectorBuffer.2154" }
%"class.WTF::VectorBuffer.2154" = type { %"class.WTF::VectorBufferBase.2155", [32 x i8] }
%"class.WTF::VectorBufferBase.2155" = type { i8*, i32, i32 }
%class.scoped_refptr.2158 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2159", %"class.WTF::Vector.2161", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2159" = type { %"class.base::RefCounted.2160" }
%"class.base::RefCounted.2160" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2161" = type { %"class.WTF::VectorBuffer.2162" }
%"class.WTF::VectorBuffer.2162" = type { %"class.WTF::VectorBufferBase.2155" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2165", i64, %"class.absl::optional.2170" }
%"class.std::__1::unique_ptr.2165" = type { %"class.std::__1::__compressed_pair.2166" }
%"class.std::__1::__compressed_pair.2166" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"class.absl::optional.2170" = type { %"class.absl::optional_internal::optional_data.2171" }
%"class.absl::optional_internal::optional_data.2171" = type { %"class.absl::optional_internal::optional_data_base.2172" }
%"class.absl::optional_internal::optional_data_base.2172" = type { %"class.absl::optional_internal::optional_data_dtor_base.2173" }
%"class.absl::optional_internal::optional_data_dtor_base.2173" = type { i8, %union.anon.2174 }
%union.anon.2174 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2175", %"class.std::__1::unique_ptr.2176" }
%"class.mojo::ScopedHandleBase.2175" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2176" = type { %"class.std::__1::__compressed_pair.2177" }
%"class.std::__1::__compressed_pair.2177" = type { %"struct.std::__1::__compressed_pair_elem.2178" }
%"struct.std::__1::__compressed_pair_elem.2178" = type { i8* }
%"class.std::__1::unique_ptr.1306" = type { %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.524" }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::KURL"* }
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.1318" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.1314", %"class.std::__1::bitset.1314", %"class.std::__1::bitset.1316" }
%"class.std::__1::bitset.1314" = type { %"class.std::__1::__bitset.1315" }
%"class.std::__1::__bitset.1315" = type { [11 x i64] }
%"class.std::__1::bitset.1316" = type { %"class.std::__1::__bitset.1317" }
%"class.std::__1::__bitset.1317" = type { [2 x i64] }
%"class.blink::HeapHashSet.1318" = type { %"class.WTF::HashSet.1321" }
%"class.WTF::HashSet.1321" = type { %"class.WTF::HashTable.1322" }
%"class.WTF::HashTable.1322" = type <{ %"class.blink::Member.1324"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1324" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.1325" = type { %"class.WTF::VectorBuffer.1326" }
%"class.WTF::VectorBuffer.1326" = type { %"class.WTF::VectorBufferBase.1327" }
%"class.WTF::VectorBufferBase.1327" = type { i32*, i32, i32 }
%"class.WTF::Vector.963" = type { %"class.WTF::VectorBuffer.964" }
%"class.WTF::VectorBuffer.964" = type { %"class.WTF::VectorBufferBase.965" }
%"class.WTF::VectorBufferBase.965" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::WebVector.1104" = type { %"class.std::__1::vector.1105" }
%"class.std::__1::vector.1105" = type { %"class.std::__1::__vector_base.1106" }
%"class.std::__1::__vector_base.1106" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.1330" = type { %"class.mojo::internal::InterfacePtrState.1331" }
%"class.mojo::internal::InterfacePtrState.1331" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1332" }
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.644", %"class.blink::Member.469", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.652", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.657", %"class.blink::Member.659", %"class.blink::Member.659", %"class.std::__1::unique_ptr.662", i32, [4 x i8], %"class.WTF::HashSet.665", %"class.blink::Member.672", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.674", %"class.blink::HeapHashSet.681", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.689", i8, %"class.blink::Member.695", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.707", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.721", i8, %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.844", %"class.WTF::Vector.850", i32, %class.scoped_refptr.855, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.856", %"class.blink::Member.858", %"class.blink::Member.860", %"class.blink::HeapHashSet.862", %"class.blink::HeapHashSet.869", %"class.std::__1::unique_ptr.876", %"class.std::__1::unique_ptr.883", %"class.WTF::Vector.894" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.644" = type { %"class.WTF::HashTable.645" }
%"class.WTF::HashTable.645" = type <{ %class.scoped_refptr.648*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.648 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.651", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.649, %"class.base::WeakPtrFactory.650" }
%class.scoped_refptr.649 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.650" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.651" = type { %"class.blink::MemberBase.538" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.652" = type { %"class.absl::optional_internal::optional_data.653" }
%"class.absl::optional_internal::optional_data.653" = type { %"class.absl::optional_internal::optional_data_base.654" }
%"class.absl::optional_internal::optional_data_base.654" = type { %"class.absl::optional_internal::optional_data_dtor_base.655" }
%"class.absl::optional_internal::optional_data_dtor_base.655" = type { i8, %union.anon.656 }
%union.anon.656 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::HeapHashSet.661"* }
%"class.blink::HeapHashSet.661" = type opaque
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.WTF::HashSet.665"* }
%"class.WTF::HashSet.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.674" = type { %"class.WTF::HashSet.677" }
%"class.WTF::HashSet.677" = type { %"class.WTF::HashTable.678" }
%"class.WTF::HashTable.678" = type <{ %"class.blink::Member.680"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.680" = type opaque
%"class.blink::HeapHashSet.681" = type { %"class.WTF::HashSet.684" }
%"class.WTF::HashSet.684" = type { %"class.WTF::HashTable.685" }
%"class.WTF::HashTable.685" = type <{ %"class.blink::Member.687"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.922", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.932", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.539" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.924", %"class.blink::Member.926", %"class.blink::Member.928", %"class.blink::Member.930", %"class.WTF::Vector.894", i16, %class.scoped_refptr.649 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.932" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.933", { i64, i64 } }
%"class.blink::WeakMember.933" = type { %"class.blink::MemberBase.688" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.699", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.699" = type { %"class.WTF::HashTable.700" }
%"class.WTF::HashTable.700" = type <{ %"struct.WTF::KeyValuePair.702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.702" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.703", i32, i32 }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.707" = type { %"class.WTF::LinkedHashSet.710" }
%"class.WTF::LinkedHashSet.710" = type { %"class.WTF::HashMap.711", %"class.WTF::VectorBackedLinkedList.715" }
%"class.WTF::HashMap.711" = type { %"class.WTF::HashTable.712" }
%"class.WTF::HashTable.712" = type <{ %"struct.WTF::KeyValuePair.714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.714" = type opaque
%"class.WTF::VectorBackedLinkedList.715" = type { %"class.WTF::Vector.716", i32, i32 }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"class.WTF::VectorBackedLinkedListNode.719"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.719" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.730, %class.scoped_refptr.730, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.821", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.826", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.730 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.731", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.738" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.733", i32, [4 x i8] }>
%"class.WTF::Vector.733" = type { %"class.WTF::VectorBuffer.734" }
%"class.WTF::VectorBuffer.734" = type { %"class.WTF::VectorBufferBase.735" }
%"class.WTF::VectorBufferBase.735" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.738" = type { %"class.WTF::VectorBuffer.739" }
%"class.WTF::VectorBuffer.739" = type { %"class.WTF::VectorBufferBase.740" }
%"class.WTF::VectorBufferBase.740" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.793", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.741, %class.scoped_refptr.742, %class.scoped_refptr.743 }
%class.scoped_refptr.741 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.757", i8, i8, %class.scoped_refptr.741, i32, i32 }
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.742 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.917" }
%"class.blink::PaintPropertyNode.917" = type { %"class.WTF::RefCounted.918", i8, i8, %class.scoped_refptr.742, i32, i32 }
%"class.WTF::RefCounted.918" = type { %"class.base::RefCounted.919" }
%"class.base::RefCounted.919" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.743 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.914" }
%"class.blink::PaintPropertyNode.914" = type { %"class.WTF::RefCounted.915", i8, i8, %class.scoped_refptr.743, i32, i32 }
%"class.WTF::RefCounted.915" = type { %"class.base::RefCounted.916" }
%"class.base::RefCounted.916" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.747", %"class.WTF::Vector.752", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.747" = type { %"class.WTF::VectorBuffer.748" }
%"class.WTF::VectorBuffer.748" = type { %"class.WTF::VectorBufferBase.749" }
%"class.WTF::VectorBufferBase.749" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.772" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.765, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.766", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.759" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.765 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.765, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.902" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.902" = type { %"class.absl::optional_internal::optional_data.903" }
%"class.absl::optional_internal::optional_data.903" = type { %"class.absl::optional_internal::optional_data_base.904" }
%"class.absl::optional_internal::optional_data_base.904" = type { %"class.absl::optional_internal::optional_data_dtor_base.905" }
%"class.absl::optional_internal::optional_data_dtor_base.905" = type { i8, %union.anon.906 }
%union.anon.906 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.907", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.907" = type { %"class.std::__1::__vector_base.908" }
%"class.std::__1::__vector_base.908" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.909" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.781", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.796", %"class.absl::optional.796" }
%"class.absl::optional.796" = type { %"class.absl::optional_internal::optional_data.797" }
%"class.absl::optional_internal::optional_data.797" = type { %"class.absl::optional_internal::optional_data_base.798" }
%"class.absl::optional_internal::optional_data_base.798" = type { %"class.absl::optional_internal::optional_data_dtor_base.799" }
%"class.absl::optional_internal::optional_data_dtor_base.799" = type { i8, [3 x i8], %union.anon.800 }
%union.anon.800 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.738"*, %"class.absl::optional.806", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.806" = type { %"class.absl::optional_internal::optional_data.807" }
%"class.absl::optional_internal::optional_data.807" = type { %"class.absl::optional_internal::optional_data_base.808" }
%"class.absl::optional_internal::optional_data_base.808" = type { %"class.absl::optional_internal::optional_data_dtor_base.809" }
%"class.absl::optional_internal::optional_data_dtor_base.809" = type { i8, %union.anon.810 }
%union.anon.810 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.811", %"class.WTF::Vector.816" }
%"class.WTF::Vector.811" = type { %"class.WTF::VectorBuffer.812" }
%"class.WTF::VectorBuffer.812" = type { %"class.WTF::VectorBufferBase.813", [128 x i8] }
%"class.WTF::VectorBufferBase.813" = type { i32*, i32, i32 }
%"class.WTF::Vector.816" = type { %"class.WTF::VectorBuffer.817" }
%"class.WTF::VectorBuffer.817" = type { %"class.WTF::VectorBufferBase.818", [128 x i8] }
%"class.WTF::VectorBufferBase.818" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.821" = type { %"class.WTF::VectorBuffer.822" }
%"class.WTF::VectorBuffer.822" = type { %"class.WTF::VectorBufferBase.823" }
%"class.WTF::VectorBufferBase.823" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.826" = type { %"class.WTF::HashTable.827" }
%"class.WTF::HashTable.827" = type <{ %"struct.WTF::KeyValuePair.830"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.830" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.831", %"class.WTF::Vector.836" }
%"class.WTF::HashMap.831" = type { %"class.WTF::HashTable.832" }
%"class.WTF::HashTable.832" = type <{ %"struct.WTF::KeyValuePair.835"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.835" = type opaque
%"class.WTF::Vector.836" = type { %"class.WTF::VectorBuffer.837" }
%"class.WTF::VectorBuffer.837" = type { %"class.WTF::VectorBufferBase.838" }
%"class.WTF::VectorBufferBase.838" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::VectorBufferBase.852" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.855 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.862" = type { %"class.WTF::HashSet.865" }
%"class.WTF::HashSet.865" = type { %"class.WTF::HashTable.866" }
%"class.WTF::HashTable.866" = type <{ %"class.blink::WeakMember.868"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.868" = type opaque
%"class.blink::HeapHashSet.869" = type { %"class.WTF::HashSet.872" }
%"class.WTF::HashSet.872" = type { %"class.WTF::HashTable.873" }
%"class.WTF::HashTable.873" = type <{ %"class.blink::WeakMember.875"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.875" = type opaque
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.886", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896" }
%"class.WTF::VectorBufferBase.896" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type { %"class.blink::Member.469" }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.553 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.568" }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2107" }
%"class.mojo::Remote.2107" = type { %"class.mojo::internal::InterfacePtrState.2108" }
%"class.mojo::internal::InterfacePtrState.2108" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2109" }
%"class.std::__1::unique_ptr.2109" = type { %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.2111" }
%"struct.std::__1::__compressed_pair_elem.2111" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.573, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.573 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.574", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.574" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.582, i8, [7 x i8] }>
%class.scoped_refptr.582 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.583", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.583" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.584" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.591" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.604" }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2117" }
%"class.mojo::AssociatedRemote.2117" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2118" }
%"class.mojo::internal::AssociatedInterfacePtrState.2118" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2119" }
%"class.std::__1::unique_ptr.2119" = type { %"class.std::__1::__compressed_pair.2120" }
%"class.std::__1::__compressed_pair.2120" = type { %"struct.std::__1::__compressed_pair_elem.2121" }
%"struct.std::__1::__compressed_pair_elem.2121" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.606" = type { %"class.blink::Member.607" }
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2127" }
%"class.mojo::AssociatedRemote.2127" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2128" }
%"class.mojo::internal::AssociatedInterfacePtrState.2128" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2129" }
%"class.std::__1::unique_ptr.2129" = type { %"class.std::__1::__compressed_pair.2130" }
%"class.std::__1::__compressed_pair.2130" = type { %"struct.std::__1::__compressed_pair_elem.2131" }
%"struct.std::__1::__compressed_pair_elem.2131" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.609" }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2137", %"class.blink::Member.469", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2137" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2138" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.407" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2138" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.611" = type { %"class.blink::Member.612" }
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2141", %"class.blink::Member.469", %"class.mojo::AssociatedReceiver.2142" }
%"class.blink::ThreadState::PrefinalizerRegistration.2141" = type { i8 }
%"class.mojo::AssociatedReceiver.2142" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2143" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2143" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.614" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2146", %"class.blink::Member.469", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2146" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.286, %"class.std::__1::unique_ptr.407", %"class.base::WeakPtrFactory.2147" }
%"class.base::WeakPtrFactory.2147" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.616" = type { %"class.blink::Member.617" }
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2150", %"class.blink::Member.469", %"class.mojo::AssociatedReceiver.2151" }
%"class.blink::ThreadState::PrefinalizerRegistration.2150" = type { i8 }
%"class.mojo::AssociatedReceiver.2151" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2152" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2152" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::HeapHashMap.627"* }
%"class.blink::HeapHashMap.627" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.628" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.631" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.631" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.637" = type { %"class.absl::optional_internal::optional_data.638" }
%"class.absl::optional_internal::optional_data.638" = type { %"class.absl::optional_internal::optional_data_base.639" }
%"class.absl::optional_internal::optional_data_base.639" = type { %"class.absl::optional_internal::optional_data_dtor_base.640" }
%"class.absl::optional_internal::optional_data_dtor_base.640" = type { i8, %union.anon.641 }
%union.anon.641 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.19", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, %union.anon.477 }
%union.anon.477 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.483 }
%class.scoped_refptr.483 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"class.blink::WeakMember.488"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.488" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.32" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.23", i8, i8, [6 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1548", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.894", %"class.WTF::Vector.894", i8, i32, %"class.blink::Member.1556", %"class.blink::Member.1616", %"class.blink::Member.1761", %"class.blink::Member.1248", %"class.blink::Member.1763", %"class.blink::Member.1765", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1767", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1773", %"class.blink::Member.1775", %"class.blink::Member.1511", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1777", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1783", %"class.blink::HeapVector.1487", %"class.blink::Member.539", %"class.blink::Member.1736", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::Member.539", %"class.blink::UserActionElementSet", %"class.blink::Member.1792", double, double, i64, i64, %"class.blink::HeapHashSet.1794", %"class.blink::HeapHashSet.1801", i16, i8, %"class.blink::Member.1808", %"class.blink::Member.1810", %"class.blink::Member.1812", %"class.blink::Member.1814", %"class.blink::TextLinkColors", %"class.blink::Member.1816", i8, [7 x i8], %"class.blink::HeapHashMap.1818", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.539", %"class.WTF::Vector.1825", %"class.blink::Member.1830", %"class.blink::Member.1832", i8, %"class.blink::Member.539", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1834", %"class.blink::HeapVector.1836", %"class.std::__1::unique_ptr.1844", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1850", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1863", %"class.WTF::Vector.1865", i8, i8, %"class.std::__1::unique_ptr.1870", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1487", %"class.blink::HeapVector.1876", i32, i8, %"class.blink::HeapTaskRunnerTimer.1783", %"class.blink::HeapTaskRunnerTimer.1783", %"class.blink::DocumentTiming", %"class.blink::Member.1884", i8, i32, %"class.blink::Member.1886", %"class.blink::Member.1888", %"class.blink::Member.1890", %"class.blink::HeapTaskRunnerTimer.1783", %"class.blink::Member.1892", %"class.WTF::HashMap.1894", %"class.blink::Member.1899", %"class.blink::Member.1901", %"class.blink::Member.1903", %"class.blink::Member.1905", %"class.blink::Member.1470", %"class.blink::Member.1470", %"class.blink::HeapTaskRunnerTimer.1783", %"class.blink::HeapHashSet.1907", i8, i32, %"class.blink::Member.1914", %"class.blink::Member.1916", i32, %"class.blink::Member.1918", %"class.blink::Member.1920", %"class.blink::Member.1922", %"class.std::__1::unique_ptr.1924", i64, %"class.std::__1::unique_ptr.1930", i32, i32, %"class.blink::Member.1936", %"class.blink::Member.1938", %"class.blink::Member.1940", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1942", %"class.WTF::Vector.1747", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1944", %"class.blink::Member.1951", %"class.std::__1::unique_ptr.1953", %"class.blink::Member.1959", i8, i8, %"class.WTF::String", %"class.blink::Member.1961", i8, [7 x i8], %"class.blink::HeapHashMap.1963", %"class.blink::HeapObserverSet.1970", %"class.blink::Member.1978", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1980", i32, i8, i8, %"class.blink::WeakMember.1982", %"class.blink::Member.1983" }
%"class.blink::Supplementable.1548" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1549" }
%"class.blink::HeapHashMap.1549" = type { %"class.WTF::HashMap.1552" }
%"class.WTF::HashMap.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1657", %"class.blink::ThreadState::PrefinalizerRegistration.1665", %"class.blink::Member.1666", %"class.blink::Member.1470", %"class.blink::Member.1668", i8, %"class.blink::Member.1670", %"class.blink::Member.1672", %"class.blink::Member.1674", %"class.blink::Member.1674", %"class.blink::Member.1674", %"class.blink::Member.1674", %"class.blink::Member.1674", %"class.blink::Member.1674", %"class.blink::Member.1676", %"class.blink::Member.1678", %"class.blink::Member.1680", %"class.blink::Member.1682", %"class.blink::Member.1684", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.963", %"class.blink::Member.1686", %class.scoped_refptr.1184, %"class.blink::HeapHashSet.1688", %"class.blink::Member.1695", %"class.blink::HeapHashMap.1708", %"class.std::__1::unique_ptr.1715", %"class.blink::Member.1721", %"class.blink::Member.1740", %"class.blink::Member.1742", %"class.blink::Member.1744", %"class.WTF::Vector.1747", %"class.util::TokenType", %"class.WTF::HashSet.1752", %"class.WTF::Deque.1756" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1558", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1622", i32, i8, [3 x i8], %"class.blink::HeapVector.1624", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1632", %"class.blink::Member.1634", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1115", %"class.blink::Member.1643", %"class.blink::Member.1645", i8 }>
%"class.blink::Supplementable.1558" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1559" }
%"class.blink::HeapHashMap.1559" = type { %"class.WTF::HashMap.1562" }
%"class.WTF::HashMap.1562" = type { %"class.WTF::HashTable.1563" }
%"class.WTF::HashTable.1563" = type <{ %"struct.WTF::KeyValuePair.1565"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1565" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1574" }
%"class.blink::Supplementable.1574" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1575" }
%"class.blink::HeapHashMap.1575" = type { %"class.WTF::HashMap.1578" }
%"class.WTF::HashMap.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"struct.WTF::KeyValuePair.1581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1581" = type { i8*, %"class.blink::Member.2088" }
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2090" }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1224, %"class.std::__1::unique_ptr.1582", %"class.std::__1::unique_ptr.1582", %"class.std::__1::unique_ptr.1609", %"class.std::__1::unique_ptr.1609", %"class.blink::Member.1616", i32, [4 x i8], %"class.WTF::HashSet.1618", i32, i32 }
%"class.std::__1::unique_ptr.1582" = type { %"class.std::__1::__compressed_pair.1583" }
%"class.std::__1::__compressed_pair.1583" = type { %"struct.std::__1::__compressed_pair_elem.1584" }
%"struct.std::__1::__compressed_pair_elem.1584" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1585", %"class.std::__1::map.1596", %"class.std::__1::map.1605"* }
%"class.std::__1::map.1585" = type { %"class.std::__1::__tree.1586" }
%"class.std::__1::__tree.1586" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1587", %"class.std::__1::__compressed_pair.1591" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.1591" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::map.1596" = type { %"class.std::__1::__tree.1597" }
%"class.std::__1::__tree.1597" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1598", %"class.std::__1::__compressed_pair.1602" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"class.std::__1::__compressed_pair.1602" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"class.std::__1::map.1605" = type opaque
%"class.std::__1::unique_ptr.1609" = type { %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.1611" }
%"struct.std::__1::__compressed_pair_elem.1611" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.1612", %"class.base::flat_map.1267" }
%"struct.std::__1::array.1612" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.1618" = type { %"class.WTF::HashTable.1619" }
%"class.WTF::HashTable.1619" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1624" = type { %"class.WTF::Vector.1627" }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.blink::Member.1630"*, i32, i32 }
%"class.blink::Member.1630" = type opaque
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1636", i32, i32 }
%"class.blink::HeapHashMap.1636" = type { %"class.WTF::HashMap.1639" }
%"class.WTF::HashMap.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"struct.WTF::KeyValuePair.1642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1642" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1634", i8, [7 x i8], %"class.WTF::Vector.1122", %"class.blink::HeapVector.1649", i8, [7 x i8], %"class.WTF::HashSet.1618", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1649" = type { %"class.WTF::Vector.1652" }
%"class.WTF::Vector.1652" = type { %"class.WTF::VectorBuffer.1653" }
%"class.WTF::VectorBuffer.1653" = type { %"class.WTF::VectorBufferBase.1654" }
%"class.WTF::VectorBufferBase.1654" = type { %"class.blink::Member.1655"*, i32, i32 }
%"class.blink::Member.1655" = type opaque
%"class.blink::Supplementable.1657" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1658" }
%"class.blink::HeapHashMap.1658" = type { %"class.WTF::HashMap.1661" }
%"class.WTF::HashMap.1661" = type { %"class.WTF::HashTable.1662" }
%"class.WTF::HashTable.1662" = type <{ %"struct.WTF::KeyValuePair.1664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1664" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1665" = type { i8 }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type { %"class.blink::Member.1556", %"class.blink::Member.2009" }
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::LocalWindowProxyManager"* }
%"class.blink::LocalWindowProxyManager" = type { %"class.blink::WindowProxyManagerImplHelper" }
%"class.blink::WindowProxyManagerImplHelper" = type { %"class.blink::WindowProxyManager" }
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1682" = type { %"class.blink::MemberBase.1683" }
%"class.blink::MemberBase.1683" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1684" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%"class.blink::HeapHashSet.1688" = type { %"class.WTF::HashSet.1691" }
%"class.WTF::HashSet.1691" = type { %"class.WTF::HashTable.1692" }
%"class.WTF::HashTable.1692" = type <{ %"class.blink::WeakMember.1694"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1694" = type opaque
%"class.blink::Member.1695" = type { %"class.blink::MemberBase.1696" }
%"class.blink::MemberBase.1696" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1702", %"class.blink::Member.1702", %"class.blink::Member.1704", %"class.blink::Member.1706", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1697" }
%"class.absl::optional.1697" = type { %"class.absl::optional_internal::optional_data.1698" }
%"class.absl::optional_internal::optional_data.1698" = type { %"class.absl::optional_internal::optional_data_base.1699" }
%"class.absl::optional_internal::optional_data_base.1699" = type { %"class.absl::optional_internal::optional_data_dtor_base.1700" }
%"class.absl::optional_internal::optional_data_dtor_base.1700" = type { i8, %union.anon.1701 }
%union.anon.1701 = type { i64 }
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::Event"* }
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1708" = type { %"class.WTF::HashMap.1711" }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1714" = type opaque
%"class.std::__1::unique_ptr.1715" = type { %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.1717" }
%"struct.std::__1::__compressed_pair_elem.1717" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.469", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1736", %"class.blink::Member.1738", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1727", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1729", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1729" = type { %"class.WTF::HashMap.1732" }
%"class.WTF::HashMap.1732" = type { %"class.WTF::HashTable.1733" }
%"class.WTF::HashTable.1733" = type <{ %"struct.WTF::KeyValuePair.1735"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1735" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.1738" = type { %"class.blink::MemberBase.1739" }
%"class.blink::MemberBase.1739" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1556", %"class.blink::Member.2003", %"class.blink::Member.2005" }
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1556", %"class.blink::HeapMojoRemote.1998" }
%"class.blink::HeapMojoRemote.1998" = type { %"class.blink::Member.1999" }
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::HeapHashMap.1746"* }
%"class.blink::HeapHashMap.1746" = type opaque
%"class.WTF::HashSet.1752" = type { %"class.WTF::HashTable.1753" }
%"class.WTF::HashTable.1753" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1756" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1759" }
%"class.WTF::VectorBuffer.1759" = type { %"class.WTF::VectorBufferBase.1760" }
%"class.WTF::VectorBufferBase.1760" = type { i64*, i32, i32 }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1558", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1622", i32, i8, [3 x i8], %"class.blink::HeapVector.1624", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1632", %"class.blink::Member.1634", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1115", %"class.blink::Member.1643", %"class.blink::Member.1645", i8, [7 x i8] }>
%"class.blink::Member.1761" = type { %"class.blink::MemberBase.1762" }
%"class.blink::MemberBase.1762" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1763" = type { %"class.blink::MemberBase.1764" }
%"class.blink::MemberBase.1764" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1767" = type { %"class.std::__1::__compressed_pair.1768" }
%"class.std::__1::__compressed_pair.1768" = type { %"struct.std::__1::__compressed_pair_elem.1769" }
%"struct.std::__1::__compressed_pair_elem.1769" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1775" = type { %"class.blink::MemberBase.1776" }
%"class.blink::MemberBase.1776" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1777" = type { %"class.WTF::VectorBuffer.1778" }
%"class.WTF::VectorBuffer.1778" = type { %"class.WTF::VectorBufferBase.1779" }
%"class.WTF::VectorBufferBase.1779" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1780 }
%class.scoped_refptr.1780 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1470", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1785" }
%"class.blink::HeapHashMap.1785" = type { %"class.WTF::HashMap.1788" }
%"class.WTF::HashMap.1788" = type { %"class.WTF::HashTable.1789" }
%"class.WTF::HashTable.1789" = type <{ %"struct.WTF::KeyValuePair.1791"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1791" = type opaque
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1794" = type { %"class.WTF::HashSet.1797" }
%"class.WTF::HashSet.1797" = type { %"class.WTF::HashTable.1798" }
%"class.WTF::HashTable.1798" = type <{ %"class.blink::WeakMember.1800"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1800" = type opaque
%"class.blink::HeapHashSet.1801" = type { %"class.WTF::HashSet.1804" }
%"class.WTF::HashSet.1804" = type { %"class.WTF::HashTable.1805" }
%"class.WTF::HashTable.1805" = type <{ %"class.blink::WeakMember.1807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1807" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1812" = type { %"class.blink::MemberBase.1813" }
%"class.blink::MemberBase.1813" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.1505" }
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1816" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1818" = type { %"class.WTF::HashMap.1821" }
%"class.WTF::HashMap.1821" = type { %"class.WTF::HashTable.1822" }
%"class.WTF::HashTable.1822" = type <{ %"struct.WTF::KeyValuePair.1824"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1824" = type opaque
%"class.WTF::Vector.1825" = type { %"class.WTF::VectorBuffer.1826" }
%"class.WTF::VectorBuffer.1826" = type { %"class.WTF::VectorBufferBase.1827" }
%"class.WTF::VectorBufferBase.1827" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1834" = type { %"class.blink::MemberBase.1835" }
%"class.blink::MemberBase.1835" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1836" = type { %"class.WTF::Vector.1839" }
%"class.WTF::Vector.1839" = type { %"class.WTF::VectorBuffer.1840" }
%"class.WTF::VectorBuffer.1840" = type { %"class.WTF::VectorBufferBase.1841" }
%"class.WTF::VectorBufferBase.1841" = type { %"class.blink::Member.1842"*, i32, i32 }
%"class.blink::Member.1842" = type opaque
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1850" = type { %"class.WTF::HashSet.1853" }
%"class.WTF::HashSet.1853" = type { %"class.WTF::HashTable.1854" }
%"class.WTF::HashTable.1854" = type <{ %"class.blink::WeakMember.1856"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1856" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1857", i32, [4 x i8] }>
%"class.WTF::Vector.1857" = type { %"class.WTF::VectorBuffer.1858" }
%"class.WTF::VectorBuffer.1858" = type { %"class.WTF::VectorBufferBase.1859" }
%"class.WTF::VectorBufferBase.1859" = type { %"struct.std::__1::pair.1860"*, i32, i32 }
%"struct.std::__1::pair.1860" = type opaque
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1870" = type { %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1876" = type { %"class.WTF::Vector.1879" }
%"class.WTF::Vector.1879" = type { %"class.WTF::VectorBuffer.1880" }
%"class.WTF::VectorBuffer.1880" = type { %"class.WTF::VectorBufferBase.1881" }
%"class.WTF::VectorBufferBase.1881" = type { %"class.blink::Member.1882"*, i32, i32 }
%"class.blink::Member.1882" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1470" }
%"class.blink::Member.1884" = type { %"class.blink::MemberBase.1885" }
%"class.blink::MemberBase.1885" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"struct.WTF::KeyValuePair.1898"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1898" = type opaque
%"class.blink::Member.1899" = type { %"class.blink::MemberBase.1900" }
%"class.blink::MemberBase.1900" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1783" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1784", { i64, i64 } }
%"class.blink::WeakMember.1784" = type { %"class.blink::MemberBase.1471" }
%"class.blink::HeapHashSet.1907" = type { %"class.WTF::HashSet.1910" }
%"class.WTF::HashSet.1910" = type { %"class.WTF::HashTable.1911" }
%"class.WTF::HashTable.1911" = type <{ %"class.blink::Member.1913"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1913" = type opaque
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1924" = type { %"class.std::__1::__compressed_pair.1925" }
%"class.std::__1::__compressed_pair.1925" = type { %"struct.std::__1::__compressed_pair_elem.1926" }
%"struct.std::__1::__compressed_pair_elem.1926" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1747" = type { %"class.WTF::VectorBuffer.1748" }
%"class.WTF::VectorBuffer.1748" = type { %"class.WTF::VectorBufferBase.1749" }
%"class.WTF::VectorBufferBase.1749" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1944" = type { %"class.WTF::HashMap.1947" }
%"class.WTF::HashMap.1947" = type { %"class.WTF::HashTable.1948" }
%"class.WTF::HashTable.1948" = type <{ %"struct.WTF::KeyValuePair.1950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1950" = type opaque
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1953" = type { %"class.std::__1::__compressed_pair.1954" }
%"class.std::__1::__compressed_pair.1954" = type { %"struct.std::__1::__compressed_pair_elem.1955" }
%"struct.std::__1::__compressed_pair_elem.1955" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1959" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1963" = type { %"class.WTF::HashMap.1966" }
%"class.WTF::HashMap.1966" = type { %"class.WTF::HashTable.1967" }
%"class.WTF::HashTable.1967" = type <{ %"struct.WTF::KeyValuePair.1969"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1969" = type opaque
%"class.blink::HeapObserverSet.1970" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1971" }
%"class.blink::HeapHashSet.1971" = type { %"class.WTF::HashSet.1974" }
%"class.WTF::HashSet.1974" = type { %"class.WTF::HashTable.1975" }
%"class.WTF::HashTable.1975" = type <{ %"class.blink::WeakMember.1977"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1977" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1470", %"class.blink::HeapHashSet.1987", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1994", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1987" = type { %"class.WTF::HashSet.1990" }
%"class.WTF::HashSet.1990" = type { %"class.WTF::HashTable.1991" }
%"class.WTF::HashTable.1991" = type <{ %"class.blink::Member.1993"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1993" = type opaque
%"class.blink::HeapTaskRunnerTimer.1994" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1995", { i64, i64 } }
%"class.blink::WeakMember.1995" = type { %"class.blink::MemberBase.1981" }
%"class.blink::WeakMember.1982" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.19", %"class.blink::Member.21", %"struct.blink::FramePolicy", %"class.blink::Member.44", i8, i8, [6 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2030", i8* }
%"class.WTF::StringAppend.2030" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2013", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2025", %"class.WTF::Vector.2026" }
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2016", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2016" = type { %"class.std::__1::__compressed_pair.2017" }
%"class.std::__1::__compressed_pair.2017" = type { %"struct.std::__1::__compressed_pair_elem.2018" }
%"struct.std::__1::__compressed_pair_elem.2018" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2025" = type { %"class.blink::MemberBase.470" }
%"class.WTF::Vector.2026" = type { %"class.WTF::VectorBuffer.2027" }
%"class.WTF::VectorBuffer.2027" = type { %"class.WTF::VectorBufferBase.813" }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2184" }
%"class.WTF::Vector.2184" = type { %"class.WTF::VectorBuffer.2185" }
%"class.WTF::VectorBuffer.2185" = type { %"class.WTF::VectorBufferBase.2186", [64 x i8] }
%"class.WTF::VectorBufferBase.2186" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.2033", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.2033" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.2037", %"class.blink::Member.2037" }
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.79, %"class.blink::Member.2041", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2045" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2043" }
%"class.blink::Persistent.2043" = type { %"class.blink::PersistentBase.2044" }
%"class.blink::PersistentBase.2044" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2045" = type { %"class.base::StrongAlias.2046" }
%"class.base::StrongAlias.2046" = type { %"class.base::UnguessableToken" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2190" }
%"class.WTF::HashMap.2190" = type { %"class.WTF::HashTable.2191" }
%"class.WTF::HashTable.2191" = type <{ %"struct.WTF::KeyValuePair.2194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2194" = type <{ %"class.blink::UntracedMember", i32, [4 x i8] }>
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::Node"* }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type opaque
%"class.blink::FrameView" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8, i8 }>
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.2049", i8, i8, %class.scoped_refptr.649, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2055", i8, [7 x i8] }>
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2057" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2057" = type { %"class.v8::TracedReference.2058" }
%"class.v8::TracedReference.2058" = type { %"class.v8::BasicTracedReference.2059" }
%"class.v8::BasicTracedReference.2059" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2060", %"class.WTF::String"* }
%"class.blink::HeapVector.2060" = type { %"class.WTF::Vector.2063" }
%"class.WTF::Vector.2063" = type { %"class.WTF::VectorBuffer.2064" }
%"class.WTF::VectorBuffer.2064" = type { %"class.WTF::VectorBufferBase.2065" }
%"class.WTF::VectorBufferBase.2065" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.2067" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1812", %"class.blink::Member.2068", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::FormAssociated" = type opaque
%"class.mojo::StructPtr.2070" = type { %"class.std::__1::unique_ptr.2071" }
%"class.std::__1::unique_ptr.2071" = type { %"class.std::__1::__compressed_pair.2072" }
%"class.std::__1::__compressed_pair.2072" = type { %"struct.std::__1::__compressed_pair_elem.2073" }
%"struct.std::__1::__compressed_pair_elem.2073" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.2074", %"class.WTF::Vector.963", %"class.WTF::String" }
%"class.WTF::Vector.2074" = type { %"class.WTF::VectorBuffer.2075" }
%"class.WTF::VectorBuffer.2075" = type { %"class.WTF::VectorBufferBase.2076" }
%"class.WTF::VectorBufferBase.2076" = type { %class.scoped_refptr.1172*, i32, i32 }
%"class.WTF::StringTypeAdapter.2213" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2214" = type { %"class.WTF::StringTypeAdapter.2215" }
%"class.WTF::StringTypeAdapter.2215" = type { %"class.WTF::StringView" }

$_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZN5blink20HTMLFrameElementBaseD2Ev = comdat any

$_ZN5blink20HTMLFrameElementBaseD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink20HTMLFrameElementBase23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink20HTMLFrameElementBase23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb = comdat any

$_ZN5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZNK5blink20HTMLFrameElementBase13ScrollbarModeEv = comdat any

$_ZNK5blink20HTMLFrameElementBase11MarginWidthEv = comdat any

$_ZNK5blink20HTMLFrameElementBase12MarginHeightEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv = comdat any

$_ZThn104_N5blink20HTMLFrameElementBaseD1Ev = comdat any

$_ZThn104_N5blink20HTMLFrameElementBaseD0Ev = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv = comdat any

$_ZNK5blink10FrameOwner8IsPluginEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv = comdat any

$_ZThn104_NK5blink20HTMLFrameElementBase13ScrollbarModeEv = comdat any

$_ZThn104_NK5blink20HTMLFrameElementBase11MarginWidthEv = comdat any

$_ZThn104_NK5blink20HTMLFrameElementBase12MarginHeightEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv = comdat any

$_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv = comdat any

$_ZN5blink10FrameOwner19CSPAttributeChangedEv = comdat any

$_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb = comdat any

$_ZNK3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_12AtomicStringEEESA_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink20HTMLFrameElementBaseE = hidden unnamed_addr constant { [201 x i8*], [3 x i8*], [28 x i8*] } { [201 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*)* @_ZN5blink20HTMLFrameElementBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*)* @_ZN5blink20HTMLFrameElementBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Visitor"*)* @_ZNK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*, i1, i32)* @_ZN5blink20HTMLFrameElementBase10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink20HTMLFrameElementBase16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::ContainerNode"*)* @_ZN5blink20HTMLFrameElementBase12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*)* @_ZN5blink20HTMLFrameElementBase36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Event"*)* @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2067"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink20HTMLFrameElementBase14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::QualifiedName"*)* @_ZNK5blink20HTMLFrameElementBase21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::Attribute"*)* @_ZNK5blink20HTMLFrameElementBase14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*, %"class.blink::Attribute"*)* @_ZNK5blink20HTMLFrameElementBase22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement22DisconnectContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::HTMLFrameElementBase"*)* @_ZNK5blink20HTMLFrameElementBase29GetOriginForPermissionsPolicyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::flat_map"*, %"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv to i8*), i8* bitcast (void (%"class.mojo::StructPtr.2070"*, %"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement25ConstructTrustTokenParamsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [28 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_N5blink20HTMLFrameElementBaseD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_N5blink20HTMLFrameElementBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv to i8*), i8* bitcast (i1 (%"class.blink::FrameOwner"*)* @_ZNK5blink10FrameOwner8IsPluginEv to i8*), i8* bitcast (%"class.blink::Frame"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv to i8*), i8* bitcast (%"struct.blink::FramePolicy"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_NK5blink20HTMLFrameElementBase13ScrollbarModeEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_NK5blink20HTMLFrameElementBase11MarginWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameElementBase"*)* @_ZThn104_NK5blink20HTMLFrameElementBase12MarginHeightEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*)* @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv to i8*), i8* bitcast (void (%"class.blink::FrameOwner"*)* @_ZN5blink10FrameOwner19CSPAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFrameOwnerElement"*, i1)* @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb to i8*)] }, align 8
@.str = private unnamed_addr constant [36 x i8] c"Invalid relative frame source URL (\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c") within data URL.\00", align 1
@_ZN5blink10html_names11kSrcdocAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kMarginwidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kMarginheightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kScrollingAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"noscroll\00", align 1
@_ZN5blink10html_names19kOnbeforeunloadAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names13kBeforeunloadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.5 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/core/html/html_frame_element_base.cc\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"!ContentFrame()\00", align 1
@_ZN5blink10html_names13kLongdescAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.7 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11HTMLElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.11 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.12 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBaseC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFrameOwnerElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %2) #9
  %5 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN5blink21HTMLFrameOwnerElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase12IsURLAllowedEv(%"class.blink::HTMLFrameElementBase"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %48, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %48, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Document"* %17, %"class.WTF::String"* dereferenceable(8) %18) #9
  %19 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Frame"*, %"class.blink::Frame"** %19, align 8
  %21 = icmp eq %"class.blink::Frame"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %11
  %23 = call zeroext i1 @_ZNK5blink4KURL20ProtocolIsJavaScriptEv(%"class.blink::KURL"* nonnull %2) #9
  br i1 %23, label %24, label %45

24:                                               ; preds = %22
  %25 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %26 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %26, i64 10
  %28 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %27, align 8
  %29 = call %"class.blink::ExecutionContext"* %28(%"class.blink::Node"* %13) #9
  %30 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %29, i64 0, i32 5
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %31) #9
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = call %"class.blink::LocalDOMWindow"* @_ZN5blink16CurrentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"* %31) #9
  br label %41

35:                                               ; preds = %24
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %38, i64 0, i32 12, i32 0, i32 0
  %40 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %39, align 8
  br label %41

41:                                               ; preds = %35, %33
  %42 = phi %"class.blink::LocalDOMWindow"* [ %34, %33 ], [ %40, %35 ]
  %43 = load %"class.blink::Frame"*, %"class.blink::Frame"** %19, align 8
  %44 = call zeroext i1 @_ZN5blink15BindingSecurity24ShouldAllowAccessToFrameEPKNS_14LocalDOMWindowEPKNS_5FrameENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"* %42, %"class.blink::Frame"* %43, i32 1) #9
  br i1 %44, label %45, label %46

45:                                               ; preds = %11, %41, %22
  br label %46

46:                                               ; preds = %41, %45
  %47 = phi i1 [ true, %45 ], [ false, %41 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #9
  br label %48

48:                                               ; preds = %1, %7, %46
  %49 = phi i1 [ %47, %46 ], [ true, %7 ], [ true, %1 ]
  ret i1 %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZNK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::Frame"*, %"class.blink::Frame"** %2, align 8
  ret %"class.blink::Frame"* %3
}

declare zeroext i1 @_ZNK5blink4KURL20ProtocolIsJavaScriptEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink16CurrentDOMWindowEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15BindingSecurity24ShouldAllowAccessToFrameEPKNS_14LocalDOMWindowEPKNS_5FrameENS_26BindingSecurityForPlatform17ErrorReportOptionE(%"class.blink::LocalDOMWindow"*, %"class.blink::Frame"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase7OpenURLEb(%"class.blink::HTMLFrameElementBase"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = tail call zeroext i1 @_ZNK5blink20HTMLFrameElementBase12IsURLAllowedEv(%"class.blink::HTMLFrameElementBase"* %0)
  br i1 %8, label %9, label %234

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %65

18:                                               ; preds = %9, %14
  %19 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() #9
  %20 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %19, i64 0, i32 4, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = and i32 %25, 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %44, label %28

28:                                               ; preds = %23
  %29 = load atomic i32, i32* %24 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %46

44:                                               ; preds = %23
  %45 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %46

46:                                               ; preds = %18, %28, %42, %44
  %47 = phi %"class.WTF::StringImpl"* [ %45, %44 ], [ %21, %28 ], [ %21, %42 ], [ null, %18 ]
  %48 = ptrtoint %"class.WTF::StringImpl"* %47 to i64
  %49 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %48, i64* %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #9
  br label %65

65:                                               ; preds = %46, %61, %64, %14
  %66 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  %71 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %70) #9
  %72 = icmp eq %"class.blink::LocalFrame"* %71, null
  br i1 %72, label %234, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %74) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 112, i1 false)
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::Document"* %77, %"class.WTF::String"* dereferenceable(8) %78) #9
  %79 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %4) #9
  br i1 %79, label %230, label %80

80:                                               ; preds = %73
  %81 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %82 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %81, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::Document"*, %"class.blink::Document"** %82, align 8
  %84 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %83) #9
  %85 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85)
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %87 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8** %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %89, align 8
  %90 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %84, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85)
  br i1 %90, label %91, label %230

91:                                               ; preds = %80
  %92 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %93 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %93, i64 10
  %95 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %94, align 8
  %96 = call %"class.blink::ExecutionContext"* %95(%"class.blink::Node"* %66) #9
  %97 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #9
  store i32 6, i32* %5, align 4
  %98 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #9
  store i32 2, i32* %6, align 4
  %99 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #9
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %177, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %119

109:                                              ; preds = %102
  %110 = zext i32 %108 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #9
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %109
  call void @llvm.trap() #9
  unreachable

117:                                              ; preds = %109
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %107, align 4
  br label %119

119:                                              ; preds = %117, %102
  %120 = phi i32 [ %118, %117 ], [ %108, %102 ]
  %121 = load atomic i32, i32* %103 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %134

124:                                              ; preds = %119
  %125 = zext i32 %120 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #9
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %124
  call void @llvm.trap() #9
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %107, align 4
  br label %134

134:                                              ; preds = %132, %119
  %135 = phi i32 [ %133, %132 ], [ %120, %119 ]
  %136 = load atomic i32, i32* %103 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = add i32 %135, -1
  store i32 %140, i32* %107, align 4
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i32 [ %140, %139 ], [ %135, %134 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #9
  br label %145

145:                                              ; preds = %141, %144
  %146 = load atomic i32, i32* %103 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %160

149:                                              ; preds = %145
  %150 = load i32, i32* %107, align 4
  %151 = zext i32 %150 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #9
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !2

157:                                              ; preds = %149
  call void @llvm.trap() #9
  unreachable

158:                                              ; preds = %149
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %107, align 4
  br label %160

160:                                              ; preds = %145, %158
  %161 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([36 x i8]* @.str to i64), i64* %161, align 8
  %162 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %162, align 8
  %163 = load atomic i32, i32* %103 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %181

166:                                              ; preds = %160
  %167 = load i32, i32* %107, align 4
  %168 = zext i32 %167 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #9
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %166
  call void @llvm.trap() #9
  unreachable

175:                                              ; preds = %166
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %107, align 4
  br label %181

177:                                              ; preds = %91
  %178 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([36 x i8]* @.str to i64), i64* %178, align 8
  %179 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %179, align 8
  %180 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8** %180, align 8
  br label %193

181:                                              ; preds = %175, %160
  %182 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8** %182, align 8
  %183 = load atomic i32, i32* %103 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = load i32, i32* %107, align 4
  br i1 %185, label %187, label %189

187:                                              ; preds = %181
  %188 = add i32 %186, -1
  store i32 %188, i32* %107, align 4
  br label %189

189:                                              ; preds = %187, %181
  %190 = phi i32 [ %188, %187 ], [ %186, %181 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #9
  br label %193

193:                                              ; preds = %177, %189, %192
  %194 = phi %"class.WTF::StringImpl"** [ %179, %177 ], [ %162, %189 ], [ %162, %192 ]
  %195 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_12AtomicStringEEESA_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %7) #9
  %196 = bitcast %"class.blink::ExecutionContext"* %96 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %197 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %197, i64 52
  %199 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %198, align 8
  call void %199(%"class.blink::ExecutionContext"* %96, %"class.blink::ConsoleMessage"* %195, i1 zeroext false) #9
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #9
  br label %215

215:                                              ; preds = %193, %211, %214
  br i1 %101, label %229, label %216

216:                                              ; preds = %215
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #9
  br label %229

229:                                              ; preds = %215, %225, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #9
  br label %230

230:                                              ; preds = %229, %80, %73
  %231 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %232 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 5
  %233 = call zeroext i1 @_ZN5blink21HTMLFrameOwnerElement22LoadOrRedirectSubframeERKNS_4KURLERKN3WTF12AtomicStringEb(%"class.blink::HTMLFrameOwnerElement"* %231, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.WTF::AtomicString"* dereferenceable(8) %232, i1 zeroext %1) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %74) #9
  br label %234

234:                                              ; preds = %230, %65, %2
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink8BlankURLEv() local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21HTMLFrameOwnerElement22LoadOrRedirectSubframeERKNS_4KURLERKN3WTF12AtomicStringEb(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %8, align 8
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcdocAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %14
  br i1 %15, label %16, label %105

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink9SrcdocURLEv() #9
  %22 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %21, i64 0, i32 4
  tail call void @_ZN5blink20HTMLFrameElementBase11SetLocationERKN3WTF6StringE(%"class.blink::HTMLFrameElementBase"* %0, %"class.WTF::String"* dereferenceable(8) %22)
  br label %587

23:                                               ; preds = %16
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %25, align 8
  %27 = icmp eq %"class.blink::ElementData"* %26, null
  br i1 %27, label %78, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::UniqueElementData"*
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 1, i32 1
  %36 = bitcast %"class.blink::Member.14"* %35 to %"class.blink::Attribute"**
  %37 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %34, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  br label %45

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %26, i64 1
  %42 = bitcast %"class.blink::ElementData"* %41 to %"class.blink::Attribute"*
  %43 = lshr i32 %30, 1
  %44 = and i32 %43, 268435455
  br label %45

45:                                               ; preds = %40, %33
  %46 = phi %"class.blink::Attribute"* [ %42, %40 ], [ %37, %33 ]
  %47 = phi i32 [ %44, %40 ], [ %39, %33 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %71, %51
  %57 = phi %"class.blink::Attribute"* [ %46, %51 ], [ %72, %71 ]
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %59, %53
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, %64
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %68, %69
  br i1 %70, label %74, label %71

71:                                               ; preds = %66, %61
  %72 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %57, i64 1
  %73 = icmp eq %"class.blink::Attribute"* %72, %49
  br i1 %73, label %78, label %56

74:                                               ; preds = %66, %56
  %75 = icmp eq %"class.blink::Attribute"* %57, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %57, i64 0, i32 1
  br label %80

78:                                               ; preds = %71, %74, %45, %23
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %80

80:                                               ; preds = %76, %78
  %81 = phi %"class.WTF::AtomicString"* [ %79, %78 ], [ %77, %76 ]
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %587, label %85

85:                                               ; preds = %80
  %86 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0
  %88 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %87) #9
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  call void @_ZN5blink20HTMLFrameElementBase11SetLocationERKN3WTF6StringE(%"class.blink::HTMLFrameElementBase"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %90 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #9
  br label %104

104:                                              ; preds = %85, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #9
  br label %587

105:                                              ; preds = %2
  %106 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %107, align 8
  %109 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %108
  br i1 %109, label %110, label %182

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %112 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %111, align 8
  %113 = icmp eq %"class.blink::ElementData"* %112, null
  br i1 %113, label %162, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %112, i64 0, i32 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.blink::ElementData"* %112 to %"class.blink::UniqueElementData"*
  %121 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %112, i64 1, i32 1
  %122 = bitcast %"class.blink::Member.14"* %121 to %"class.blink::Attribute"**
  %123 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %120, i64 0, i32 2, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  br label %131

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %112, i64 1
  %128 = bitcast %"class.blink::ElementData"* %127 to %"class.blink::Attribute"*
  %129 = lshr i32 %116, 1
  %130 = and i32 %129, 268435455
  br label %131

131:                                              ; preds = %126, %119
  %132 = phi %"class.blink::Attribute"* [ %128, %126 ], [ %123, %119 ]
  %133 = phi i32 [ %130, %126 ], [ %125, %119 ]
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %132, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %162, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %140

140:                                              ; preds = %156, %137
  %141 = phi %"class.blink::Attribute"* [ %132, %137 ], [ %157, %156 ]
  %142 = phi i32 [ 0, %137 ], [ %158, %156 ]
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %141, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %143, align 8
  %145 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %144, %14
  br i1 %145, label %160, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %148, %149
  br i1 %150, label %151, label %156

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %153, %154
  br i1 %155, label %160, label %156

156:                                              ; preds = %151, %146
  %157 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %141, i64 1
  %158 = add i32 %142, 1
  %159 = icmp eq %"class.blink::Attribute"* %157, %135
  br i1 %159, label %162, label %140

160:                                              ; preds = %140, %151
  %161 = icmp eq i32 %142, -1
  br i1 %161, label %162, label %182

162:                                              ; preds = %156, %160, %131, %110
  %163 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #9
  %164 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  %165 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %164) #9
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %165, %"class.WTF::StringImpl"** %166, align 8
  call void @_ZN5blink20HTMLFrameElementBase11SetLocationERKN3WTF6StringE(%"class.blink::HTMLFrameElementBase"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %167 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %181

181:                                              ; preds = %162, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #9
  br label %587

182:                                              ; preds = %160, %105
  %183 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %183, i64 0, i32 0, i32 0
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %186 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %185
  br i1 %186, label %187, label %229

187:                                              ; preds = %182
  %188 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"* %188, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #9
  %189 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 5
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %210, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i33
  %202 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #9
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !2

207:                                              ; preds = %198
  tail call void @llvm.trap() #9
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4
  br label %210

210:                                              ; preds = %208, %193, %187
  %211 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %212 = bitcast %"class.WTF::AtomicString"* %189 to i64*
  %213 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %189, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  store i64 %211, i64* %212, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %587, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %587

228:                                              ; preds = %225
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #9
  br label %587

229:                                              ; preds = %182
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %232
  br i1 %233, label %234, label %275

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 5
  %236 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %236, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %256, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %256

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i33
  %248 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #9
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !2

253:                                              ; preds = %244
  tail call void @llvm.trap() #9
  unreachable

254:                                              ; preds = %244
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %245, align 4
  br label %256

256:                                              ; preds = %254, %239, %234
  %257 = ptrtoint %"class.WTF::StringImpl"* %237 to i64
  %258 = bitcast %"class.WTF::AtomicString"* %235 to i64*
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %235, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  store i64 %257, i64* %258, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %587, label %262

262:                                              ; preds = %256
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %587

274:                                              ; preds = %271
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #9
  br label %587

275:                                              ; preds = %229
  %276 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kMarginwidthAttrE, align 8
  %277 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %276, i64 0, i32 0, i32 0
  %278 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %277, align 8
  %279 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %278
  br i1 %279, label %280, label %311

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  %282 = tail call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %281, i8* null) #9
  %283 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, %282
  br i1 %285, label %587, label %286

286:                                              ; preds = %280
  %287 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %288 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %287) #9
  %289 = icmp eq %"class.blink::Document"* %288, null
  br i1 %289, label %306, label %290

290:                                              ; preds = %286
  %291 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %287) #9
  %292 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %295 = load i32, i32* %294, align 4
  %296 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %297 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %296, align 8
  %298 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %297, i64 187
  %299 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %298, align 8
  %300 = tail call zeroext i1 %299(%"class.blink::HTMLFrameOwnerElement"* %287) #9
  %301 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %302 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %301, align 8
  %303 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %302, i64 188
  %304 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %303, align 8
  %305 = tail call i32 %304(%"class.blink::HTMLFrameOwnerElement"* %287) #9
  tail call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %291, i32 %282, i32 %293, i32 %295, i1 zeroext %300, i32 %305) #9
  br label %306

306:                                              ; preds = %290, %286
  store i32 %282, i32* %283, align 8
  %307 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %308 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %308, i64 190
  %310 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %309, align 8
  tail call void %310(%"class.blink::HTMLFrameOwnerElement"* %287) #9
  br label %587

311:                                              ; preds = %275
  %312 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kMarginheightAttrE, align 8
  %313 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %312, i64 0, i32 0, i32 0
  %314 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %313, align 8
  %315 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %314
  br i1 %315, label %316, label %347

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0
  %318 = tail call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* %317, i8* null) #9
  %319 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %320 = load i32, i32* %319, align 4
  %321 = icmp eq i32 %320, %318
  br i1 %321, label %587, label %322

322:                                              ; preds = %316
  %323 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %324 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %323) #9
  %325 = icmp eq %"class.blink::Document"* %324, null
  br i1 %325, label %342, label %326

326:                                              ; preds = %322
  %327 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %323) #9
  %328 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %329 = load i32, i32* %328, align 8
  %330 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %333 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %332, align 8
  %334 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %333, i64 187
  %335 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %334, align 8
  %336 = tail call zeroext i1 %335(%"class.blink::HTMLFrameOwnerElement"* %323) #9
  %337 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %338 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %337, align 8
  %339 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %338, i64 188
  %340 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %339, align 8
  %341 = tail call i32 %340(%"class.blink::HTMLFrameOwnerElement"* %323) #9
  tail call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %327, i32 %329, i32 %318, i32 %331, i1 zeroext %336, i32 %341) #9
  br label %342

342:                                              ; preds = %326, %322
  store i32 %318, i32* %319, align 4
  %343 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %344 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %343, align 8
  %345 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %344, i64 190
  %346 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %345, align 8
  tail call void %346(%"class.blink::HTMLFrameOwnerElement"* %323) #9
  br label %587

347:                                              ; preds = %311
  %348 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kScrollingAttrE, align 8
  %349 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %348, i64 0, i32 0, i32 0
  %350 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %349, align 8
  %351 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %350
  br i1 %351, label %352, label %568

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %431, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 1
  %360 = bitcast %"class.WTF::StringImpl"* %359 to i8*
  %361 = icmp eq i32 %358, 3
  br i1 %361, label %362, label %429

362:                                              ; preds = %356
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %386, label %367

367:                                              ; preds = %362
  %368 = load i8, i8* %360, align 1
  %369 = zext i8 %368 to i64
  %370 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %369
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i32
  %373 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %374 = sext i8 %373 to i32
  %375 = icmp eq i32 %372, %374
  br i1 %375, label %376, label %429

376:                                              ; preds = %367
  %377 = getelementptr inbounds i8, i8* %360, i64 1
  %378 = load i8, i8* %377, align 1
  %379 = zext i8 %378 to i64
  %380 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %379
  %381 = load i8, i8* %380, align 1
  %382 = zext i8 %381 to i32
  %383 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %384 = sext i8 %383 to i32
  %385 = icmp eq i32 %382, %384
  br i1 %385, label %421, label %429

386:                                              ; preds = %362
  %387 = bitcast %"class.WTF::StringImpl"* %359 to i16*
  %388 = load i16, i16* %387, align 2
  %389 = add i16 %388, -65
  %390 = icmp ult i16 %389, 26
  %391 = zext i1 %390 to i16
  %392 = shl nuw nsw i16 %391, 5
  %393 = or i16 %392, %388
  %394 = zext i16 %393 to i32
  %395 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %396 = sext i8 %395 to i32
  %397 = icmp eq i32 %394, %396
  br i1 %397, label %398, label %429

398:                                              ; preds = %386
  %399 = getelementptr inbounds i16, i16* %387, i64 1
  %400 = load i16, i16* %399, align 2
  %401 = add i16 %400, -65
  %402 = icmp ult i16 %401, 26
  %403 = zext i1 %402 to i16
  %404 = shl nuw nsw i16 %403, 5
  %405 = or i16 %404, %400
  %406 = zext i16 %405 to i32
  %407 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %408 = sext i8 %407 to i32
  %409 = icmp eq i32 %406, %408
  br i1 %409, label %410, label %429

410:                                              ; preds = %398
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 1, i32 1
  %412 = bitcast i32* %411 to i16*
  %413 = load i16, i16* %412, align 2
  %414 = add i16 %413, -65
  %415 = icmp ult i16 %414, 26
  %416 = zext i1 %415 to i16
  %417 = shl nuw nsw i16 %416, 5
  %418 = or i16 %417, %413
  %419 = icmp eq i16 %418, %405
  %420 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %420) #9
  br i1 %419, label %508, label %436

421:                                              ; preds = %376
  %422 = getelementptr inbounds i8, i8* %360, i64 2
  %423 = load i8, i8* %422, align 1
  %424 = zext i8 %423 to i64
  %425 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %424
  %426 = load i8, i8* %425, align 1
  %427 = icmp eq i8 %426, %381
  %428 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %428) #9
  br i1 %427, label %508, label %436

429:                                              ; preds = %376, %367, %398, %386, %356
  %430 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %430) #9
  br label %436

431:                                              ; preds = %352
  %432 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %432) #9
  %433 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %433, align 8
  %434 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %435 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %434, i64* %435, align 8
  br label %444

436:                                              ; preds = %421, %410, %429
  %437 = phi i8* [ %430, %429 ], [ %420, %410 ], [ %428, %421 ]
  %438 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %354, %"class.WTF::StringImpl"** %438, align 8
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 1
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 1
  %442 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %443 = bitcast i8** %442 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %441, %"class.WTF::StringImpl"** %443, align 8
  br label %444

444:                                              ; preds = %431, %436
  %445 = phi i8* [ %437, %436 ], [ %432, %431 ]
  %446 = phi i32 [ %440, %436 ], [ 0, %431 ]
  %447 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %446, i32* %447, align 8
  %448 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [9 x i8]* nonnull dereferenceable(9) @.str.3)
  br i1 %448, label %507, label %449

449:                                              ; preds = %444
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %496, label %452

452:                                              ; preds = %449
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 1
  %456 = bitcast %"class.WTF::StringImpl"* %455 to i8*
  %457 = icmp eq i32 %454, 2
  br i1 %457, label %458, label %496

458:                                              ; preds = %452
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 1
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %472, label %463

463:                                              ; preds = %458
  %464 = load i8, i8* %456, align 1
  %465 = zext i8 %464 to i64
  %466 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %465
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i32
  %469 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %470 = sext i8 %469 to i32
  %471 = icmp eq i32 %468, %470
  br i1 %471, label %497, label %496

472:                                              ; preds = %458
  %473 = bitcast %"class.WTF::StringImpl"* %455 to i16*
  %474 = load i16, i16* %473, align 2
  %475 = add i16 %474, -65
  %476 = icmp ult i16 %475, 26
  %477 = zext i1 %476 to i16
  %478 = shl nuw nsw i16 %477, 5
  %479 = or i16 %478, %474
  %480 = zext i16 %479 to i32
  %481 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %482 = sext i8 %481 to i32
  %483 = icmp eq i32 %480, %482
  br i1 %483, label %484, label %496

484:                                              ; preds = %472
  %485 = getelementptr inbounds i16, i16* %473, i64 1
  %486 = load i16, i16* %485, align 2
  %487 = add i16 %486, -65
  %488 = icmp ult i16 %487, 26
  %489 = zext i1 %488 to i16
  %490 = shl nuw nsw i16 %489, 5
  %491 = or i16 %490, %486
  %492 = zext i16 %491 to i32
  %493 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %494 = sext i8 %493 to i32
  %495 = icmp eq i32 %492, %494
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #9
  br i1 %495, label %510, label %539

496:                                              ; preds = %452, %472, %463, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #9
  br label %539

497:                                              ; preds = %463
  %498 = getelementptr inbounds i8, i8* %456, i64 1
  %499 = load i8, i8* %498, align 1
  %500 = zext i8 %499 to i64
  %501 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %500
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i32
  %504 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %505 = sext i8 %504 to i32
  %506 = icmp eq i32 %503, %505
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #9
  br i1 %506, label %510, label %539

507:                                              ; preds = %444
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #9
  br label %510

508:                                              ; preds = %410, %421
  %509 = phi i8* [ %420, %410 ], [ %428, %421 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %509) #9
  br label %510

510:                                              ; preds = %484, %508, %507, %497
  %511 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = icmp eq i32 %512, 1
  br i1 %513, label %587, label %514

514:                                              ; preds = %510
  %515 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %516 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %515) #9
  %517 = icmp eq %"class.blink::Document"* %516, null
  br i1 %517, label %534, label %518

518:                                              ; preds = %514
  %519 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %515) #9
  %520 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %521 = load i32, i32* %520, align 8
  %522 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %523 = load i32, i32* %522, align 4
  %524 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %525 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %524, align 8
  %526 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %525, i64 187
  %527 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %526, align 8
  %528 = call zeroext i1 %527(%"class.blink::HTMLFrameOwnerElement"* %515) #9
  %529 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %530 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %529, align 8
  %531 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %530, i64 188
  %532 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %531, align 8
  %533 = call i32 %532(%"class.blink::HTMLFrameOwnerElement"* %515) #9
  call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %519, i32 %521, i32 %523, i32 1, i1 zeroext %528, i32 %533) #9
  br label %534

534:                                              ; preds = %518, %514
  store i32 1, i32* %511, align 4
  %535 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %536 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %536, i64 190
  %538 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %537, align 8
  call void %538(%"class.blink::HTMLFrameOwnerElement"* %515) #9
  br label %587

539:                                              ; preds = %484, %496, %497
  %540 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %541 = load i32, i32* %540, align 4
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %587, label %543

543:                                              ; preds = %539
  %544 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %545 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %544) #9
  %546 = icmp eq %"class.blink::Document"* %545, null
  br i1 %546, label %563, label %547

547:                                              ; preds = %543
  %548 = call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %544) #9
  %549 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %550 = load i32, i32* %549, align 8
  %551 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %552 = load i32, i32* %551, align 4
  %553 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %554 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %553, align 8
  %555 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %554, i64 187
  %556 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %555, align 8
  %557 = call zeroext i1 %556(%"class.blink::HTMLFrameOwnerElement"* %544) #9
  %558 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %559 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %558, align 8
  %560 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %559, i64 188
  %561 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %560, align 8
  %562 = call i32 %561(%"class.blink::HTMLFrameOwnerElement"* %544) #9
  call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %548, i32 %550, i32 %552, i32 0, i1 zeroext %557, i32 %562) #9
  br label %563

563:                                              ; preds = %547, %543
  store i32 0, i32* %540, align 4
  %564 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %565 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %564, align 8
  %566 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %565, i64 190
  %567 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %566, align 8
  call void %567(%"class.blink::HTMLFrameOwnerElement"* %544) #9
  br label %587

568:                                              ; preds = %347
  %569 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kOnbeforeunloadAttrE, align 8
  %570 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %569, i64 0, i32 0, i32 0
  %571 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %570, align 8
  %572 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %571
  br i1 %572, label %573, label %585

573:                                              ; preds = %568
  %574 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kBeforeunloadE, align 8
  %576 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %578 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %577, align 8
  %579 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %578, i64 10
  %580 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %579, align 8
  %581 = tail call %"class.blink::ExecutionContext"* %580(%"class.blink::Node"* %576) #9
  %582 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %581, %"class.blink::QualifiedName"* dereferenceable(8) %7, %"class.WTF::AtomicString"* dereferenceable(8) %9, i32 2) #9
  %583 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %582, i64 0, i32 0, i32 0, i32 0
  %584 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %574, %"class.WTF::AtomicString"* dereferenceable(8) %575, %"class.blink::EventListener"* %583) #9
  br label %587

585:                                              ; preds = %568
  %586 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"* %586, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #9
  br label %587

587:                                              ; preds = %563, %539, %534, %510, %342, %316, %306, %280, %274, %271, %256, %228, %225, %210, %80, %104, %181, %573, %585, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase11SetLocationERKN3WTF6StringE(%"class.blink::HTMLFrameElementBase"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %6
  %12 = load atomic i32, i32* %7 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %29

27:                                               ; preds = %6
  %28 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %29

29:                                               ; preds = %2, %11, %25, %27
  %30 = phi %"class.WTF::StringImpl"* [ %28, %27 ], [ %4, %11 ], [ %4, %25 ], [ null, %2 ]
  %31 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %32 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 4
  %33 = bitcast %"class.WTF::AtomicString"* %32 to i64*
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %31, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %50

50:                                               ; preds = %49, %46, %29
  %51 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 256
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  tail call void @_ZN5blink20HTMLFrameElementBase7OpenURLEb(%"class.blink::HTMLFrameElementBase"* %0, i1 zeroext false)
  br label %56

56:                                               ; preds = %50, %55
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink9SrcdocURLEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFrameOwnerElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase14SetMarginWidthEi(%"class.blink::HTMLFrameElementBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %8 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %12 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %17 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %17, i64 187
  %19 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %21 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %22 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %22, i64 188
  %24 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  tail call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %11, i32 %1, i32 %13, i32 %15, i1 zeroext %20, i32 %25) #9
  br label %26

26:                                               ; preds = %6, %10
  store i32 %1, i32* %3, align 8
  %27 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %28 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %28, i64 190
  %30 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %29, align 8
  tail call void %30(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  br label %31

31:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase15SetMarginHeightEi(%"class.blink::HTMLFrameElementBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %8 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %12 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %17 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %17, i64 187
  %19 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %21 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %22 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %22, i64 188
  %24 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  tail call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %11, i32 %13, i32 %1, i32 %15, i1 zeroext %20, i32 %25) #9
  br label %26

26:                                               ; preds = %6, %10
  store i32 %1, i32* %3, align 4
  %27 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %28 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %28, i64 190
  %30 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %29, align 8
  tail call void %30(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  br label %31

31:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase16SetScrollbarModeENS_5mojom13ScrollbarModeE(%"class.blink::HTMLFrameElementBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %8 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = tail call %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %12 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i1 (%"class.blink::HTMLFrameOwnerElement"*)***
  %17 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)**, i1 (%"class.blink::HTMLFrameOwnerElement"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %17, i64 187
  %19 = load i1 (%"class.blink::HTMLFrameOwnerElement"*)*, i1 (%"class.blink::HTMLFrameOwnerElement"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  %21 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to i32 (%"class.blink::HTMLFrameOwnerElement"*)***
  %22 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)**, i32 (%"class.blink::HTMLFrameOwnerElement"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %22, i64 188
  %24 = load i32 (%"class.blink::HTMLFrameOwnerElement"*)*, i32 (%"class.blink::HTMLFrameOwnerElement"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  tail call void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"* %11, i32 %13, i32 %15, i32 %1, i1 zeroext %20, i32 %25) #9
  br label %26

26:                                               ; preds = %6, %10
  store i32 %1, i32* %3, align 4
  %27 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to void (%"class.blink::HTMLFrameOwnerElement"*)***
  %28 = load void (%"class.blink::HTMLFrameOwnerElement"*)**, void (%"class.blink::HTMLFrameOwnerElement"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %28, i64 190
  %30 = load void (%"class.blink::HTMLFrameOwnerElement"*)*, void (%"class.blink::HTMLFrameOwnerElement"*)** %29, align 8
  tail call void %30(%"class.blink::HTMLFrameOwnerElement"* %7) #9
  br label %31

31:                                               ; preds = %2, %26
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink20HTMLFrameElementBase29GetOriginForPermissionsPolicyEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() #9
  %9 = ptrtoint %"class.blink::SecurityOrigin"* %8 to i64
  br label %35

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 4, i32 0
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Document"* %15, %"class.WTF::String"* dereferenceable(8) %16) #9
  %17 = call zeroext i1 @_ZN5blink8Document36ShouldInheritSecurityOriginFromOwnerERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %2) #9
  br i1 %17, label %18, label %30

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %21, i64 10
  %23 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %22, align 8
  %24 = call %"class.blink::ExecutionContext"* %23(%"class.blink::Node"* %19) #9
  %25 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %24) #9
  %26 = ptrtoint %"class.blink::SecurityOrigin"* %25 to i64
  %27 = icmp eq %"class.blink::SecurityOrigin"* %25, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %25, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #9
  br label %33

30:                                               ; preds = %10
  %31 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %2) #9
  %32 = ptrtoint %"class.blink::SecurityOrigin"* %31 to i64
  br label %33

33:                                               ; preds = %28, %18, %30
  %34 = phi i64 [ %32, %30 ], [ %26, %18 ], [ %26, %28 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #9
  br label %35

35:                                               ; preds = %33, %7
  %36 = phi i64 [ %34, %33 ], [ %9, %7 ]
  %37 = inttoptr i64 %36 to %"class.blink::SecurityOrigin"*
  ret %"class.blink::SecurityOrigin"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZNK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 4
  ret %"struct.blink::FramePolicy"* %2
}

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() local_unnamed_addr #1

declare zeroext i1 @_ZN5blink8Document36ShouldInheritSecurityOriginFromOwnerERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase17SetNameAndOpenURLEv(%"class.blink::HTMLFrameElementBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1048576
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %1
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.14"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %65

61:                                               ; preds = %54, %57, %28, %6
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %65

63:                                               ; preds = %1
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi %"class.WTF::AtomicString"* [ %64, %63 ], [ %62, %61 ], [ %60, %59 ]
  %67 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 5
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #9
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  tail call void @llvm.trap() #9
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %65
  %89 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %90 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  store i64 %89, i64* %90, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #9
  br label %107

107:                                              ; preds = %88, %103, %106
  tail call void @_ZN5blink20HTMLFrameElementBase7OpenURLEb(%"class.blink::HTMLFrameElementBase"* %0, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20HTMLFrameElementBase12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %1) #9
  %6 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Frame"*, %"class.blink::Frame"** %6, align 8
  %8 = icmp eq %"class.blink::Frame"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 190, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #9
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  br label %12

12:                                               ; preds = %2, %9
  ret i32 1
}

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Node"*, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %6) #9
  %8 = icmp eq %"class.blink::LocalFrame"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %1
  %10 = icmp eq %"class.blink::HTMLFrameElementBase"* %0, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::Node"** %2 to i8*
  %14 = bitcast %"class.blink::Node"** %2 to i64*
  br label %15

15:                                               ; preds = %21, %11
  %16 = phi %"class.blink::Node"* [ %12, %11 ], [ %25, %21 ]
  %17 = call dereferenceable(24) %"class.WTF::HashCountedSet"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() #9
  %18 = ptrtoint %"class.blink::Node"* %16 to i64
  %19 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %17, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  store i64 %18, i64* %14, align 8
  %20 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.2191"* %19, %"class.blink::Node"** nonnull dereferenceable(8) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.blink::Node"** %22 to %"class.blink::ContainerNode"**
  %24 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %24, i64 0, i32 0
  %26 = icmp eq %"class.blink::ContainerNode"* %24, null
  br i1 %26, label %27, label %15

27:                                               ; preds = %21, %9
  %28 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Frame"*, %"class.blink::Frame"** %28, align 8
  %30 = icmp eq %"class.blink::Frame"* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  call void @_ZN5blink20HTMLFrameElementBase17SetNameAndOpenURLEv(%"class.blink::HTMLFrameElementBase"* %0)
  br label %32

32:                                               ; preds = %15, %27, %1, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::HTMLFrameElementBase"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"* %4, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #9
  %5 = tail call %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink21HTMLFrameOwnerElement24GetLayoutEmbeddedContentEv(%"class.blink::HTMLFrameOwnerElement"* %3) #9
  %6 = icmp eq %"class.blink::LayoutEmbeddedContent"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Frame"*, %"class.blink::Frame"** %8, align 8
  %10 = icmp eq %"class.blink::Frame"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::Frame"* %9 to %"class.blink::FrameView"* (%"class.blink::Frame"*)***
  %13 = load %"class.blink::FrameView"* (%"class.blink::Frame"*)**, %"class.blink::FrameView"* (%"class.blink::Frame"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::FrameView"* (%"class.blink::Frame"*)*, %"class.blink::FrameView"* (%"class.blink::Frame"*)** %13, i64 9
  %15 = load %"class.blink::FrameView"* (%"class.blink::Frame"*)*, %"class.blink::FrameView"* (%"class.blink::Frame"*)** %14, align 8
  %16 = tail call %"class.blink::FrameView"* %15(%"class.blink::Frame"* nonnull %9) #9
  %17 = bitcast %"class.blink::FrameView"* %16 to %"class.blink::EmbeddedContentView"*
  tail call void @_ZN5blink21HTMLFrameOwnerElement22SetEmbeddedContentViewEPNS_19EmbeddedContentViewE(%"class.blink::HTMLFrameOwnerElement"* %3, %"class.blink::EmbeddedContentView"* %17) #9
  br label %18

18:                                               ; preds = %7, %2, %11
  ret void
}

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink21HTMLFrameOwnerElement24GetLayoutEmbeddedContentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement22SetEmbeddedContentViewEPNS_19EmbeddedContentViewE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::EmbeddedContentView"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase13SupportsFocusEv(%"class.blink::HTMLFrameElementBase"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink20HTMLFrameElementBase15DefaultTabIndexEv(%"class.blink::HTMLFrameElementBase"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20HTMLFrameElementBase10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::HTMLFrameElementBase"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"* %4, i1 zeroext %1, i32 %2) #9
  %5 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %8) #9
  %10 = icmp eq %"class.blink::Page"* %9, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %9, i64 0, i32 10, i32 0, i32 0
  %13 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %12, align 8
  br i1 %1, label %14, label %17

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Frame"*, %"class.blink::Frame"** %15, align 8
  tail call void @_ZN5blink15FocusController15SetFocusedFrameEPNS_5FrameEb(%"class.blink::FocusController"* %13, %"class.blink::Frame"* %16, i1 zeroext true) #9
  br label %25

17:                                               ; preds = %11
  %18 = tail call %"class.blink::LocalFrame"* @_ZNK5blink15FocusController12FocusedFrameEv(%"class.blink::FocusController"* %13) #9
  %19 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Frame"*, %"class.blink::Frame"** %20, align 8
  %22 = icmp eq %"class.blink::Frame"* %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %12, align 8
  tail call void @_ZN5blink15FocusController15SetFocusedFrameEPNS_5FrameEb(%"class.blink::FocusController"* %24, %"class.blink::Frame"* null, i1 zeroext true) #9
  br label %25

25:                                               ; preds = %3, %14, %23, %17
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink15FocusController15SetFocusedFrameEPNS_5FrameEb(%"class.blink::FocusController"*, %"class.blink::Frame"*, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink15FocusController12FocusedFrameEv(%"class.blink::FocusController"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase14IsURLAttributeERKNS_9AttributeE(%"class.blink::HTMLFrameElementBase"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kLongdescAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  ret i1 %13

14:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLFrameElementBase"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %1) #9
  br label %12

12:                                               ; preds = %9, %2
  %13 = phi i1 [ true, %2 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::HTMLFrameElementBase"* nocapture readnone, %"class.blink::Attribute"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcdocAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  ret i1 %8
}

declare %"class.blink::Document"* @_ZNK5blink21HTMLFrameOwnerElement15contentDocumentEv(%"class.blink::HTMLFrameOwnerElement"*) local_unnamed_addr #1

declare void @_ZN5blink8Document30WillChangeFrameOwnerPropertiesEiiNS_5mojom13ScrollbarModeEbNS1_11ColorSchemeE(%"class.blink::Document"*, i32, i32, i32, i1 zeroext, i32) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20HTMLFrameElementBaseD2Ev(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #9
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #9
  br label %38

38:                                               ; preds = %21, %34, %37
  %39 = bitcast %"class.blink::HTMLFrameElementBase"* %0 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElementD2Ev(%"class.blink::HTMLFrameOwnerElement"* %39) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20HTMLFrameElementBaseD0Ev(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #9
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11HTMLElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19IsFrameOwnerElementEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase23CanContainRangeEndPointEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11HTMLElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #9
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.2067"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19IsKeyboardFocusableEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement11IsAdRelatedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20HTMLFrameElementBase23AreAuthorShadowsAllowedEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

declare void @_ZN5blink21HTMLFrameOwnerElement22DisconnectContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement12SetCollapsedEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.14"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %68
  tail call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %58, %63, %78
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20HTMLFrameElementBase13ScrollbarModeEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20HTMLFrameElementBase11MarginWidthEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20HTMLFrameElementBase12MarginHeightEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement15AllowFullscreenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %2, align 8
  %4 = icmp eq %"class.blink::EmbeddedContentView"* %3, null
  ret i1 %4
}

declare i32 @_ZNK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

declare void @_ZN5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21HTMLFrameOwnerElement23ConstructRequiredPolicyEv(%"class.base::flat_map"* noalias sret, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.base::flat_map"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZNK5blink21HTMLFrameOwnerElement25ConstructTrustTokenParamsEv(%"class.mojo::StructPtr.2070"* sret, %"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 0, i32 7
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink21HTMLFrameOwnerElement23ReferrerPolicyAttributeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_NK5blink21HTMLFrameOwnerElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink20HTMLFrameElementBaseD1Ev(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"struct.blink::FramePolicy"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 1, i32 2, i32 0, i32 1
  %5 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 1, i32 3, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [201 x i8*], [3 x i8*], [28 x i8*] }, { [201 x i8*], [3 x i8*], [28 x i8*] }* @_ZTVN5blink20HTMLFrameElementBaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 3, i32 3
  %9 = bitcast %"class.base::flat_map"* %8 to %"class.WTF::StringImpl"**
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #9
  br label %25

25:                                               ; preds = %24, %21, %1
  %26 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 3, i32 2, i32 0, i32 2
  %27 = bitcast %"class.std::__1::__compressed_pair.32"* %26 to %"class.WTF::StringImpl"**
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #9
  br label %43

43:                                               ; preds = %25, %39, %42
  %44 = bitcast %"struct.blink::FramePolicy"* %2 to %"class.blink::HTMLFrameOwnerElement"*
  tail call void @_ZN5blink21HTMLFrameOwnerElementD2Ev(%"class.blink::HTMLFrameOwnerElement"* %44) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink20HTMLFrameElementBaseD0Ev(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement7IsLocalEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement8IsRemoteEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10FrameOwner8IsPluginEv(%"class.blink::FrameOwner"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Frame"* @_ZThn104_NK5blink21HTMLFrameOwnerElement12ContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 14
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::Frame"**
  %5 = load %"class.blink::Frame"*, %"class.blink::Frame"** %4, align 8
  ret %"class.blink::Frame"* %5
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement15SetContentFrameERNS_5FrameE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::Frame"* dereferenceable(392)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17ClearContentFrameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::FramePolicy"* @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetFramePolicyEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 16
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"struct.blink::FramePolicy"*
  ret %"struct.blink::FramePolicy"* %4
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement17AddResourceTimingERKNS_18ResourceTimingInfoE(%"class.blink::HTMLFrameOwnerElement"*, %"class.blink::ResourceTimingInfo"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement12DispatchLoadEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement26IntrinsicSizingInfoChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement25SetNeedsOcclusionTrackingEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink21HTMLFrameOwnerElement28BrowsingContextContainerNameEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 12
  %5 = bitcast %"class.blink::FrameOwner"* %4 to %"class.blink::ElementData"**
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.14"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #9
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #9
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %60, %65, %80
  ret %"class.WTF::StringImpl"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink20HTMLFrameElementBase13ScrollbarModeEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"struct.blink::FramePolicy"* %2 to %"class.blink::HTMLFrameElementBase"*
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink20HTMLFrameElementBase11MarginWidthEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = getelementptr inbounds %"struct.blink::FramePolicy", %"struct.blink::FramePolicy"* %2, i64 3, i32 2, i32 0, i32 1
  %4 = bitcast %"struct.blink::ParsedPermissionsPolicyDeclaration"** %3 to i32*
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZThn104_NK5blink20HTMLFrameElementBase12MarginHeightEv(%"class.blink::HTMLFrameElementBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %0, i64 -1, i32 0, i32 4
  %3 = bitcast %"struct.blink::FramePolicy"* %2 to %"class.blink::HTMLFrameElementBase"*
  %4 = getelementptr inbounds %"class.blink::HTMLFrameElementBase", %"class.blink::HTMLFrameElementBase"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement15AllowFullscreenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement19AllowPaymentRequestEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement13IsDisplayNoneEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::FrameOwner", %"class.blink::FrameOwner"* %2, i64 15
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::EmbeddedContentView"**
  %5 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %4, align 8
  %6 = icmp eq %"class.blink::EmbeddedContentView"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn104_NK5blink21HTMLFrameOwnerElement14GetColorSchemeEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink21HTMLFrameOwnerElement22ShouldLazyLoadChildrenEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink21HTMLFrameOwnerElement27FrameOwnerPropertiesChangedEv(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FrameOwner19CSPAttributeChangedEv(%"class.blink::FrameOwner"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink21HTMLFrameOwnerElement19SetIsSwappingFramesEb(%"class.blink::HTMLFrameOwnerElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::FrameOwner"* %3 to %"class.blink::HTMLFrameOwnerElement"*
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %4, i64 0, i32 7
  store i8 %5, i8* %6, align 1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.WTF::HashCountedSet"* @_ZN5blink23SubframeLoadingDisabler20DisabledSubtreeRootsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink14UntracedMemberINS1_4NodeEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.2191"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2191", %"class.WTF::HashTable.2191"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2194"*, %"struct.WTF::KeyValuePair.2194"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2194"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2191", %"class.WTF::HashTable.2191"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::Node"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2194", %"struct.WTF::KeyValuePair.2194"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2194", %"struct.WTF::KeyValuePair.2194"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::Node"*
  %38 = icmp eq %"class.blink::Node"* %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %59, %39
  %54 = phi i64 [ %33, %39 ], [ %63, %59 ]
  %55 = phi i64 [ 0, %39 ], [ %61, %59 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2194", %"struct.WTF::KeyValuePair.2194"* %4, i64 %54, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %52, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2194", %"struct.WTF::KeyValuePair.2194"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2194", %"struct.WTF::KeyValuePair.2194"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = icmp eq %"class.blink::Node"* %66, %37
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %59, %2, %6
  %69 = phi %"struct.WTF::KeyValuePair.2194"* [ null, %2 ], [ %34, %6 ], [ null, %53 ], [ %64, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair.2194"* %69, null
  ret i1 %70
}

; Function Attrs: nounwind
declare void @_ZN5blink21HTMLFrameOwnerElementD2Ev(%"class.blink::HTMLFrameOwnerElement"*) unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_IPKcNS7_12AtomicStringEEESA_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #9
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #9
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #9
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #9
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #9
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %3, i8* %8) #9
  %9 = bitcast %"class.WTF::StringTypeAdapter.2213"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #9
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %2, i8* %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #9
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #9
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #9
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #9
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #9
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #9
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2213"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2213", %"class.WTF::StringTypeAdapter.2213"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2213"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %4, i8* %14) #9
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2030"* %9) #9
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2030"* %9) #9
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %25, i8* %26) #9
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.12, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #9
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %41, i8* %42) #9
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.12, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2214", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2213"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.2213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2213", %"class.WTF::StringTypeAdapter.2213"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.2214"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2214", %"class.WTF::StringTypeAdapter.2214"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2214", %"class.WTF::StringTypeAdapter.2214"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2214"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2213"* nonnull %3, i8* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2214", %"class.WTF::StringTypeAdapter.2214"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2215"* nonnull %34, i8* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2030"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2213"* nonnull %5, i8* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2214", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2213"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2213"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %5, i8* %10) #9
  %11 = bitcast %"class.WTF::StringTypeAdapter.2213"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2213", %"class.WTF::StringTypeAdapter.2213"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #9
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %3, i8* %14) #9
  %15 = bitcast %"class.WTF::StringTypeAdapter.2214"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2214", %"class.WTF::StringTypeAdapter.2214"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2214", %"class.WTF::StringTypeAdapter.2214"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #9
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2214"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2213"* nonnull %3, i16* %1) #9
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2214", %"class.WTF::StringTypeAdapter.2214"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2215"* nonnull %34, i16* %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2030"* %6) #9
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2213"* nonnull %5, i16* %40) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2030"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2213", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2213"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2213", %"class.WTF::StringTypeAdapter.2213"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2030", %"class.WTF::StringAppend.2030"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2213"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2213"* nonnull %4, i8* %13) #9
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2030", %"class.WTF::StringAppend.2030"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.12, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %45, i8* %46) #9
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.12, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2213"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2215"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2213"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2215"*, i16*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
