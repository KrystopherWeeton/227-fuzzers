; ModuleID = '../../third_party/unrar/src/rawread.cpp'
source_filename = "../../third_party/unrar/src/rawread.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.RawRead = type { %class.Array, %class.File*, i64, i64, %class.CryptData* }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }

$_ZN5ArrayIhE3AddEm = comdat any

@ErrHandler = external global %class.ErrorHandler, align 4
@.str = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

@_ZN7RawReadC1Ev = hidden unnamed_addr alias void (%class.RawRead*), void (%class.RawRead*)* @_ZN7RawReadC2Ev
@_ZN7RawReadC1EP4File = hidden unnamed_addr alias void (%class.RawRead*, %class.File*), void (%class.RawRead*, %class.File*)* @_ZN7RawReadC2EP4File

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7RawReadC2Ev(%class.RawRead* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 1
  %3 = bitcast %class.RawRead* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 33, i1 false)
  %4 = bitcast %class.File** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7RawRead5ResetEv(%class.RawRead* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7RawReadC2EP4File(%class.RawRead* nocapture, %class.File*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.RawRead* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 33, i1 false) #8
  %4 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 1
  store %class.File* %1, %class.File** %4, align 8
  %5 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7RawRead4ReadEm(%class.RawRead*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 4
  %4 = load %class.CryptData*, %class.CryptData** %3, align 8
  %5 = icmp eq %class.CryptData* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %37

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0
  %15 = sub i64 %1, %11
  %16 = sub i64 0, %15
  %17 = and i64 %16, 15
  %18 = add i64 %17, %15
  tail call void @_ZN5ArrayIhE3AddEm(%class.Array* %14, i64 %18)
  %19 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 1
  %20 = load %class.File*, %class.File** %19, align 8
  %21 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %8
  %24 = bitcast %class.File* %20 to i32 (%class.File*, i8*, i64)***
  %25 = load i32 (%class.File*, i8*, i64)**, i32 (%class.File*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %25, i64 4
  %27 = load i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %26, align 8
  %28 = tail call i32 %27(%class.File* %20, i8* %23, i64 %18) #8
  %29 = sext i32 %28 to i64
  %30 = load %class.CryptData*, %class.CryptData** %3, align 8
  %31 = load i8*, i8** %21, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %8
  tail call void @_ZN9CryptData12DecryptBlockEPhm(%class.CryptData* %30, i8* %32, i64 %18) #8
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %33, i64 0, i64 %1
  %35 = load i64, i64* %9, align 8
  %36 = add i64 %35, %34
  br label %39

37:                                               ; preds = %6
  %38 = add i64 %10, %1
  br label %39

39:                                               ; preds = %37, %13
  %40 = phi i64 [ %38, %37 ], [ %36, %13 ]
  %41 = phi i64 [ %1, %37 ], [ %29, %13 ]
  store i64 %40, i64* %9, align 8
  br label %61

42:                                               ; preds = %2
  %43 = icmp eq i64 %1, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0
  tail call void @_ZN5ArrayIhE3AddEm(%class.Array* %45, i64 %1)
  %46 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 1
  %47 = load %class.File*, %class.File** %46, align 8
  %48 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  %53 = bitcast %class.File* %47 to i32 (%class.File*, i8*, i64)***
  %54 = load i32 (%class.File*, i8*, i64)**, i32 (%class.File*, i8*, i64)*** %53, align 8
  %55 = getelementptr inbounds i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %54, i64 4
  %56 = load i32 (%class.File*, i8*, i64)*, i32 (%class.File*, i8*, i64)** %55, align 8
  %57 = tail call i32 %56(%class.File* %47, i8* %52, i64 %1) #8
  %58 = sext i32 %57 to i64
  %59 = load i64, i64* %48, align 8
  %60 = add i64 %59, %58
  store i64 %60, i64* %48, align 8
  br label %61

61:                                               ; preds = %42, %44, %39
  %62 = phi i64 [ %41, %39 ], [ %58, %44 ], [ 0, %42 ]
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIhE3AddEm(%class.Array*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str, i64 0, i64 0), i64 %11) #8
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #8
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = tail call noalias i8* @malloc(i64 %25) #8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #8
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %35, i64 %38, i1 false)
  tail call void @_Z9cleandataPvm(i8* nonnull %35, i64 %38) #8
  %39 = load i8*, i8** %34, align 8
  tail call void @free(i8* %39) #8
  br label %46

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @realloc(i8* %42, i64 %25) #8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #8
  br label %46

46:                                               ; preds = %33, %40, %45, %37
  %47 = phi i8* [ %30, %37 ], [ %30, %33 ], [ null, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  store i8* %47, i8** %48, align 8
  store i64 %25, i64* %6, align 8
  br label %49

49:                                               ; preds = %46, %2
  ret void
}

declare void @_ZN9CryptData12DecryptBlockEPhm(%class.CryptData*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7RawRead4ReadEPhm(%class.RawRead*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0
  tail call void @_ZN5ArrayIhE3AddEm(%class.Array* %6, i64 %2)
  %7 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %1, i64 %2, i1 false)
  %12 = load i64, i64* %7, align 8
  %13 = add i64 %12, %2
  store i64 %13, i64* %7, align 8
  br label %14

14:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = add nuw i64 %3, 1
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %3
  %12 = load i8, i8* %11, align 1
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i8 [ %12, %7 ], [ 0, %1 ]
  ret i8 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  %5 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i16
  %14 = getelementptr inbounds i8, i8* %10, i64 %4
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i16
  %17 = shl nuw i16 %16, 8
  %18 = or i16 %17, %13
  %19 = add i64 %3, 2
  store i64 %19, i64* %2, align 8
  br label %20

20:                                               ; preds = %1, %8
  %21 = phi i16 [ %18, %8 ], [ 0, %1 ]
  ret i16 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = add i64 %3, 1
  %15 = getelementptr inbounds i8, i8* %10, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = or i32 %18, %13
  %20 = add i64 %3, 2
  %21 = getelementptr inbounds i8, i8* %10, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 16
  %25 = or i32 %19, %24
  %26 = getelementptr inbounds i8, i8* %10, i64 %4
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %28, 24
  %30 = or i32 %25, %29
  %31 = add i64 %3, 4
  store i64 %31, i64* %2, align 8
  br label %32

32:                                               ; preds = %1, %8
  %33 = phi i32 [ %30, %8 ], [ 0, %1 ]
  ret i32 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN7RawRead4Get8Ev(%class.RawRead* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 3
  %5 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %3
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i64
  %14 = add i64 %3, 1
  %15 = getelementptr inbounds i8, i8* %10, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw nsw i64 %17, 8
  %19 = or i64 %18, %13
  %20 = add i64 %3, 2
  %21 = getelementptr inbounds i8, i8* %10, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 16
  %25 = or i64 %19, %24
  %26 = getelementptr inbounds i8, i8* %10, i64 %4
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = shl nuw nsw i64 %28, 24
  %30 = or i64 %25, %29
  %31 = add i64 %3, 4
  store i64 %31, i64* %2, align 8
  %32 = add i64 %3, 7
  br label %33

33:                                               ; preds = %1, %8
  %34 = phi i64 [ %4, %1 ], [ %32, %8 ]
  %35 = phi i64 [ %3, %1 ], [ %31, %8 ]
  %36 = phi i64 [ 0, %1 ], [ %30, %8 ]
  %37 = icmp ult i64 %34, %6
  br i1 %37, label %38, label %63

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %35
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = add i64 %35, 1
  %45 = getelementptr inbounds i8, i8* %40, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = shl nuw nsw i64 %47, 8
  %49 = or i64 %48, %43
  %50 = add i64 %35, 2
  %51 = getelementptr inbounds i8, i8* %40, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = shl nuw nsw i64 %53, 16
  %55 = or i64 %49, %54
  %56 = getelementptr inbounds i8, i8* %40, i64 %34
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl nuw nsw i64 %58, 24
  %60 = or i64 %55, %59
  %61 = add i64 %35, 4
  store i64 %61, i64* %2, align 8
  %62 = shl nuw i64 %60, 32
  br label %63

63:                                               ; preds = %33, %38
  %64 = phi i64 [ %62, %38 ], [ 0, %33 ]
  %65 = or i64 %64, %36
  ret i64 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN7RawRead4GetVEv(%class.RawRead* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %30

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %14

10:                                               ; preds = %14
  %11 = icmp ult i64 %19, %5
  %12 = icmp ult i64 %29, 64
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %30

14:                                               ; preds = %7, %10
  %15 = phi i64 [ 0, %7 ], [ %29, %10 ]
  %16 = phi i64 [ %3, %7 ], [ %19, %10 ]
  %17 = phi i64 [ undef, %7 ], [ %27, %10 ]
  %18 = phi i64 [ 0, %7 ], [ %25, %10 ]
  %19 = add nuw i64 %16, 1
  store i64 %19, i64* %2, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 %16
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, 127
  %23 = zext i8 %22 to i64
  %24 = shl i64 %23, %15
  %25 = add i64 %24, %18
  %26 = icmp sgt i8 %21, -1
  %27 = select i1 %26, i64 %25, i64 %17
  %28 = icmp slt i8 %21, 0
  %29 = add nuw nsw i64 %15, 7
  br i1 %28, label %10, label %30

30:                                               ; preds = %14, %10, %1
  %31 = phi i64 [ 0, %1 ], [ 0, %10 ], [ %27, %14 ]
  ret i64 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7RawRead8GetVSizeEm(%class.RawRead* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  br label %9

9:                                                ; preds = %6, %14
  %10 = phi i64 [ %1, %6 ], [ %15, %14 ]
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = icmp sgt i8 %12, -1
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = add nuw i64 %10, 1
  %16 = icmp ult i64 %15, %4
  br i1 %16, label %9, label %21

17:                                               ; preds = %9
  %18 = sub i64 %10, %1
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  br label %21

21:                                               ; preds = %14, %2, %17
  %22 = phi i32 [ %20, %17 ], [ 0, %2 ], [ 0, %14 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nocapture, i8* nocapture, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, %2
  %10 = select i1 %9, i64 %8, i64 %2
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %15, i64 %10, i1 false)
  br label %16

16:                                               ; preds = %3, %12
  br i1 %9, label %17, label %20

17:                                               ; preds = %16
  %18 = getelementptr inbounds i8, i8* %1, i64 %10
  %19 = sub i64 %2, %10
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 %19, i1 false)
  br label %20

20:                                               ; preds = %17, %16
  %21 = load i64, i64* %6, align 8
  %22 = add i64 %21, %10
  store i64 %22, i64* %6, align 8
  ret i64 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7RawRead4GetWEPwm(%class.RawRead* nocapture, i32*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = shl i64 %2, 1
  %7 = add i64 %6, -1
  %8 = add i64 %7, %5
  %9 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %5
  %16 = tail call i32* @_Z9RawToWidePKhPwm(i8* %15, i32* %1, i64 %2) #8
  %17 = shl i64 %2, 2
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, %17
  store i64 %19, i64* %4, align 8
  br label %23

20:                                               ; preds = %3
  %21 = bitcast i32* %1 to i8*
  %22 = shl i64 %2, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 %22, i1 false)
  br label %23

23:                                               ; preds = %20, %12
  ret void
}

declare i32* @_Z9RawToWidePKhPwm(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7RawRead8GetCRC15Eb(%class.RawRead* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 2
  %10 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 3
  %11 = select i1 %1, i64* %10, i64* %3
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -2
  %14 = tail call i32 @_Z5CRC32jPKvm(i32 -1, i8* %9, i64 %13) #8
  %15 = and i32 %14, 65535
  %16 = xor i32 %15, 65535
  br label %17

17:                                               ; preds = %2, %6
  %18 = phi i32 [ %16, %6 ], [ 0, %2 ]
  ret i32 %18
}

declare i32 @_Z5CRC32jPKvm(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7RawRead8GetCRC50Ev(%class.RawRead* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, 5
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.RawRead, %class.RawRead* %0, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 4
  %9 = add i64 %3, -4
  %10 = tail call i32 @_Z5CRC32jPKvm(i32 -1, i8* %8, i64 %9) #8
  %11 = xor i32 %10, -1
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i32 [ %11, %5 ], [ -1, %1 ]
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_Z7RawGetVPKhRjjRb(i8* nocapture readonly, i32* nocapture dereferenceable(4), i32, i8* nocapture dereferenceable(1)) local_unnamed_addr #4 {
  store i8 0, i8* %3, align 1
  %5 = load i32, i32* %1, align 4
  %6 = icmp ult i32 %5, %2
  br i1 %6, label %10, label %27

7:                                                ; preds = %10
  %8 = add i32 %13, 7
  %9 = icmp ult i32 %15, %2
  br i1 %9, label %10, label %27

10:                                               ; preds = %4, %7
  %11 = phi i32 [ %15, %7 ], [ %5, %4 ]
  %12 = phi i64 [ %25, %7 ], [ undef, %4 ]
  %13 = phi i32 [ %8, %7 ], [ 0, %4 ]
  %14 = phi i64 [ %23, %7 ], [ 0, %4 ]
  %15 = add nuw i32 %11, 1
  store i32 %15, i32* %1, align 4
  %16 = zext i32 %11 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 127
  %20 = zext i8 %19 to i64
  %21 = zext i32 %13 to i64
  %22 = shl i64 %20, %21
  %23 = add i64 %22, %14
  %24 = icmp sgt i8 %18, -1
  %25 = select i1 %24, i64 %23, i64 %12
  %26 = icmp slt i8 %18, 0
  br i1 %26, label %7, label %28

27:                                               ; preds = %7, %4
  store i8 1, i8* %3, align 1
  br label %28

28:                                               ; preds = %10, %27
  %29 = phi i64 [ 0, %27 ], [ %25, %10 ]
  ret i64 %29
}

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #2

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
