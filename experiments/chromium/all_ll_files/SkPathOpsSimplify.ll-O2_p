; ModuleID = '../../third_party/skia/src/pathops/SkPathOpsSimplify.cpp'
source_filename = "../../third_party/skia/src/pathops/SkPathOpsSimplify.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOpContour = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8, [7 x i8] }>
%class.SkOpGlobalState = type <{ %class.SkArenaAlloc*, %class.SkOpCoincidence*, %class.SkOpContourHead*, i32, i8, i8, i8, i8 }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkOpCoincidence = type <{ %class.SkCoincidentSpans*, %class.SkCoincidentSpans*, %class.SkOpGlobalState*, i8, i8, i8, i8, i8, [3 x i8] }>
%class.SkCoincidentSpans = type { %class.SkCoincidentSpans*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT* }
%class.SkOpPtT = type <{ double, %struct.SkPoint, %class.SkOpSpanBase*, %class.SkOpPtT*, i8, i8, i8, [5 x i8] }>
%struct.SkPoint = type { float, float }
%class.SkOpSpanBase = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8, [2 x i8] }>
%class.SkOpAngle = type <{ %struct.SkDCurve, %class.SkDCurveSweep, double, %class.SkLineParameters, %class.SkOpAngle*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%struct.SkDCurve = type { %union.anon }
%union.anon = type { %struct.SkDCubic }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%struct.SkDPoint = type { double, double }
%class.SkDCurveSweep = type <{ %struct.SkDCurve, [2 x %struct.SkDVector], i8, i8, [6 x i8] }>
%struct.SkDVector = type { double, double }
%class.SkLineParameters = type { double, double, double }
%class.SkOpSpan = type <{ %class.SkOpSpanBase.base, [2 x i8], %class.SkOpSpan*, %class.SkOpAngle*, %class.SkOpSpanBase*, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%class.SkOpSpanBase.base = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8 }>
%class.SkOpContourHead = type { %class.SkOpContour.base, [7 x i8] }
%class.SkOpContour.base = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8 }>
%class.SkOpSegment = type <{ %class.SkOpSpan, %class.SkOpSpanBase, %class.SkOpContour*, %class.SkOpSegment*, %class.SkOpSegment*, %struct.SkPoint*, %struct.SkPathOpsBounds, float, i32, i32, i32, i8, [7 x i8] }>
%struct.SkPathOpsBounds = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%class.SkOpEdgeBuilder = type <{ %class.SkOpGlobalState*, %class.SkPath*, %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.1, %class.SkOpContourBuilder, %class.SkOpContourHead*, [2 x i32], i32, i8, i8, i8, i8 }>
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkOpContourBuilder = type <{ %class.SkOpContour*, [2 x %struct.SkPoint], i8, [7 x i8] }>
%class.SkTDArray.14 = type { %class.SkOpSpanBase**, i32, i32 }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [4096 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkPathWriter = type { %class.SkPath, %class.SkTArray, %class.SkTDArray.13, %class.SkPath*, [2 x %class.SkOpPtT*], %class.SkOpPtT* }
%class.SkTArray = type { %class.SkPath*, i64 }
%class.SkTDArray.13 = type { %class.SkOpPtT**, i32, i32 }

@__const._Z13SimplifyDebugRK6SkPathPS_.contour = private unnamed_addr constant %class.SkOpContour <{ %class.SkOpGlobalState* inttoptr (i64 -6148914691236517206 to %class.SkOpGlobalState*), %class.SkOpSegment <{ %class.SkOpSpan <{ %class.SkOpSpanBase.base <{ %class.SkOpPtT <{ double 0xFFFFFFFFFFFFFFFF, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpPtT* inttoptr (i64 -6148914691236517206 to %class.SkOpPtT*), i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpAngle* inttoptr (i64 -6148914691236517206 to %class.SkOpAngle*), %class.SkOpSpan* inttoptr (i64 -6148914691236517206 to %class.SkOpSpan*), i32 -1431655766, i8 -86, i8 -86 }>, [2 x i8] c"\AA\AA", %class.SkOpSpan* inttoptr (i64 -6148914691236517206 to %class.SkOpSpan*), %class.SkOpAngle* inttoptr (i64 -6148914691236517206 to %class.SkOpAngle*), %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.SkOpSpanBase <{ %class.SkOpPtT <{ double 0xFFFFFFFFFFFFFFFF, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpPtT* inttoptr (i64 -6148914691236517206 to %class.SkOpPtT*), i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpAngle* inttoptr (i64 -6148914691236517206 to %class.SkOpAngle*), %class.SkOpSpan* inttoptr (i64 -6148914691236517206 to %class.SkOpSpan*), i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.SkOpContour* inttoptr (i64 -6148914691236517206 to %class.SkOpContour*), %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), %struct.SkPathOpsBounds { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.SkOpSegment* inttoptr (i64 -6148914691236517206 to %class.SkOpSegment*), %class.SkOpContour* inttoptr (i64 -6148914691236517206 to %class.SkOpContour*), %struct.SkPathOpsBounds { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@__const._Z13SimplifyDebugRK6SkPathPS_.builder = private unnamed_addr constant %class.SkOpEdgeBuilder <{ %class.SkOpGlobalState* inttoptr (i64 -6148914691236517206 to %class.SkOpGlobalState*), %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.2 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.1 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkOpContourBuilder <{ %class.SkOpContour* inttoptr (i64 -6148914691236517206 to %class.SkOpContour*), [2 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.SkOpContourHead* inttoptr (i64 -6148914691236517206 to %class.SkOpContourHead*), [2 x i32] [i32 -1431655766, i32 -1431655766], i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 }>, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z13SimplifyDebugRK6SkPathPS_(%class.SkPath* dereferenceable(16), %class.SkPath*) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca %class.SkOpSpanBase*, align 8
  %5 = alloca %class.SkOpSpanBase*, align 8
  %6 = alloca %class.SkTDArray.14, align 8
  %7 = alloca %class.SkOpSpanBase*, align 8
  %8 = alloca %class.SkOpSpanBase*, align 8
  %9 = alloca %class.SkOpSpanBase*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %class.SkOpSpanBase*, align 8
  %12 = alloca %class.SkOpSpanBase*, align 8
  %13 = alloca %class.SkSTArenaAlloc, align 8
  %14 = alloca %class.SkOpContour, align 8
  %15 = alloca %class.SkOpContourHead*, align 8
  %16 = alloca %class.SkOpGlobalState, align 8
  %17 = alloca %class.SkOpCoincidence, align 8
  %18 = alloca %class.SkOpEdgeBuilder, align 8
  %19 = alloca %class.SkPathWriter, align 8
  %20 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %21 = load i8, i8* %20, align 2
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 1, i32 3
  %25 = tail call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %0) #5
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %2
  %28 = icmp eq %class.SkPath* %1, %0
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %0) #5
  br label %31

31:                                               ; preds = %27, %29
  %32 = trunc i32 %24 to i8
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %34 = load i8, i8* %33, align 2
  %35 = and i8 %34, -4
  %36 = or i8 %35, %32
  store i8 %36, i8* %33, align 2
  br label %386

37:                                               ; preds = %2
  %38 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %13, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4128, i8* nonnull %38) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 4128, i1 false)
  %39 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %13, i64 0, i32 0, i32 0, i64 4096
  %40 = bitcast i8* %39 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %40, i8* nonnull %38, i64 4096, i64 4096) #5
  %41 = bitcast %class.SkOpContour* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 344, i8* nonnull %41) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 bitcast (%class.SkOpContour* @__const._Z13SimplifyDebugRK6SkPathPS_.contour to i8*), i64 344, i1 false)
  %42 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %14, i64 0, i32 2
  %43 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %14, i64 0, i32 6
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %14, i64 0, i32 8
  store i8 0, i8* %44, align 4
  %45 = bitcast %class.SkOpSegment** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #5
  %46 = bitcast %class.SkOpContourHead** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  %47 = bitcast %class.SkOpContourHead** %15 to %class.SkOpContour**
  store %class.SkOpContour* %14, %class.SkOpContour** %47, align 8
  %48 = bitcast %class.SkOpGlobalState* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #5
  %49 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %16, i64 0, i32 1
  %50 = bitcast %class.SkOpContour* %14 to %class.SkOpContourHead*
  %51 = bitcast %class.SkOpGlobalState* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false)
  call void @_ZN15SkOpGlobalStateC1EP15SkOpContourHeadP12SkArenaAlloc(%class.SkOpGlobalState* nonnull %16, %class.SkOpContourHead* nonnull %50, %class.SkArenaAlloc* %40) #5
  %52 = bitcast %class.SkOpCoincidence* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #5
  %53 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %17, i64 0, i32 2
  %54 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %17, i64 0, i32 3
  %55 = bitcast %class.SkOpCoincidence* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #5
  store %class.SkOpGlobalState* %16, %class.SkOpGlobalState** %53, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 5, i1 false) #5
  store %class.SkOpCoincidence* %17, %class.SkOpCoincidence** %49, align 8
  %56 = bitcast %class.SkOpEdgeBuilder* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %56) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 bitcast (%class.SkOpEdgeBuilder* @__const._Z13SimplifyDebugRK6SkPathPS_.builder to i8*), i64 120, i1 false)
  %57 = bitcast %class.SkOpContourHead** %15 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 0
  store %class.SkOpGlobalState* %16, %class.SkOpGlobalState** %59, align 8
  %60 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 1
  store %class.SkPath* %0, %class.SkPath** %60, align 8
  %61 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 2
  %62 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 5
  %63 = bitcast %class.SkTDArray* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 48, i1 false) #5
  %64 = bitcast %class.SkOpContourBuilder* %62 to i64*
  store i64 %58, i64* %64, align 8
  %65 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 5, i32 2
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 6
  %67 = bitcast %class.SkOpContourHead** %66 to i64*
  store i64 %58, i64* %67, align 8
  %68 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 10
  store i8 0, i8* %68, align 1
  call void @_ZN15SkOpEdgeBuilder4initEv(%class.SkOpEdgeBuilder* nonnull %18) #5
  %69 = call zeroext i1 @_ZN15SkOpEdgeBuilder6finishEv(%class.SkOpEdgeBuilder* nonnull %18) #5
  br i1 %69, label %70, label %377

70:                                               ; preds = %37
  %71 = call zeroext i1 @_Z15SortContourListPP15SkOpContourHeadbb(%class.SkOpContourHead** nonnull %15, i1 zeroext false, i1 zeroext false) #5
  br i1 %71, label %79, label %72

72:                                               ; preds = %70
  %73 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #5
  %74 = trunc i32 %24 to i8
  %75 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %76 = load i8, i8* %75, align 2
  %77 = and i8 %76, -4
  %78 = or i8 %77, %74
  store i8 %78, i8* %75, align 2
  br label %377

79:                                               ; preds = %70
  %80 = load %class.SkOpContour*, %class.SkOpContour** %47, align 8
  br label %81

81:                                               ; preds = %90, %79
  %82 = phi %class.SkOpContour* [ %80, %79 ], [ %92, %90 ]
  br label %83

83:                                               ; preds = %86, %81
  %84 = phi %class.SkOpContour* [ %82, %81 ], [ %88, %86 ]
  %85 = call zeroext i1 @_Z14AddIntersectTsP11SkOpContourS0_P15SkOpCoincidence(%class.SkOpContour* %82, %class.SkOpContour* %84, %class.SkOpCoincidence* nonnull %17) #5
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  %87 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %84, i64 0, i32 3
  %88 = load %class.SkOpContour*, %class.SkOpContour** %87, align 8
  %89 = icmp eq %class.SkOpContour* %88, null
  br i1 %89, label %90, label %83

90:                                               ; preds = %86, %83
  %91 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %82, i64 0, i32 3
  %92 = load %class.SkOpContour*, %class.SkOpContour** %91, align 8
  %93 = icmp eq %class.SkOpContour* %92, null
  br i1 %93, label %94, label %81

94:                                               ; preds = %90
  %95 = load %class.SkOpContourHead*, %class.SkOpContourHead** %15, align 8
  %96 = call zeroext i1 @_Z17HandleCoincidenceP15SkOpContourHeadP15SkOpCoincidence(%class.SkOpContourHead* %95, %class.SkOpCoincidence* nonnull %17) #5
  br i1 %96, label %97, label %377

97:                                               ; preds = %94
  %98 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #5
  %99 = trunc i32 %24 to i8
  %100 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %101 = load i8, i8* %100, align 2
  %102 = and i8 %101, -4
  %103 = or i8 %102, %99
  store i8 %103, i8* %100, align 2
  %104 = bitcast %class.SkPathWriter* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %104) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 80, i1 false)
  call void @_ZN12SkPathWriterC1ER6SkPath(%class.SkPathWriter* nonnull %19, %class.SkPath* dereferenceable(16) %1) #5
  %105 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 9
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = zext i8 %106 to i64
  %108 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 7, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, -1
  %111 = load %class.SkOpContourHead*, %class.SkOpContourHead** %15, align 8
  br i1 %110, label %112, label %268

112:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #5
  store i8 0, i8* %3, align 1
  %113 = call %class.SkOpSpan* @_Z15FindSortableTopP15SkOpContourHead(%class.SkOpContourHead* %111) #5
  %114 = icmp eq %class.SkOpSpan* %113, null
  br i1 %114, label %345, label %115

115:                                              ; preds = %112
  %116 = bitcast %class.SkOpSpanBase** %4 to i8*
  %117 = bitcast %class.SkOpSpanBase** %4 to i64*
  %118 = bitcast %class.SkOpSpanBase** %5 to i8*
  %119 = bitcast %class.SkOpSpanBase** %5 to %class.SkOpSpan**
  %120 = bitcast %class.SkTDArray.14* %6 to i8*
  %121 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %6, i64 0, i32 0
  %122 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %6, i64 0, i32 1
  %123 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %6, i64 0, i32 2
  %124 = bitcast %class.SkOpSpanBase** %9 to i8*
  %125 = bitcast %class.SkTDArray.14* %6 to i8**
  %126 = bitcast %class.SkOpSpanBase** %7 to i8*
  %127 = bitcast %class.SkOpSpanBase** %7 to i64*
  %128 = bitcast %class.SkOpSpanBase** %8 to i8*
  %129 = bitcast %class.SkOpSpanBase** %5 to i64*
  %130 = bitcast %class.SkOpSpanBase** %8 to i64*
  br label %131

131:                                              ; preds = %260, %115
  %132 = phi %class.SkOpSpan* [ %113, %115 ], [ %262, %260 ]
  %133 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %132, i64 0, i32 0, i32 1
  %134 = load %class.SkOpSegment*, %class.SkOpSegment** %133, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #5
  %135 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %132, i64 0, i32 4
  %136 = bitcast %class.SkOpSpanBase** %135 to i64*
  %137 = load i64, i64* %136, align 8
  store i64 %137, i64* %117, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #5
  store %class.SkOpSpan* %132, %class.SkOpSpan** %119, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 16, i1 false) #5
  %138 = inttoptr i64 %137 to %class.SkOpSpanBase*
  %139 = bitcast %class.SkOpSpan* %132 to %class.SkOpSpanBase*
  br label %140

140:                                              ; preds = %257, %131
  %141 = phi %class.SkOpSpanBase* [ %139, %131 ], [ %259, %257 ]
  %142 = phi %class.SkOpSpanBase* [ %138, %131 ], [ %258, %257 ]
  %143 = phi %class.SkOpSegment* [ %134, %131 ], [ %255, %257 ]
  %144 = call zeroext i1 @_ZN11SkOpSegment13activeWindingEP12SkOpSpanBaseS1_(%class.SkOpSegment* %143, %class.SkOpSpanBase* %142, %class.SkOpSpanBase* %141) #5
  br i1 %144, label %145, label %214

145:                                              ; preds = %140
  %146 = load i8, i8* %3, align 1
  br label %147

147:                                              ; preds = %175, %145
  %148 = phi i8 [ %146, %145 ], [ %176, %175 ]
  %149 = phi %class.SkOpSegment* [ %143, %145 ], [ %160, %175 ]
  %150 = icmp eq i8 %148, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %149, i64 0, i32 9
  %153 = load i32, i32* %152, align 8
  %154 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %149, i64 0, i32 8
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %153, %155
  br i1 %156, label %190, label %157

157:                                              ; preds = %151, %147
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #5
  %158 = load i64, i64* %117, align 8
  store i64 %158, i64* %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #5
  %159 = load i64, i64* %129, align 8
  store i64 %159, i64* %130, align 8
  %160 = call %class.SkOpSegment* @_ZN11SkOpSegment15findNextWindingEP9SkTDArrayIP12SkOpSpanBaseEPS2_S5_Pb(%class.SkOpSegment* %149, %class.SkTDArray.14* nonnull %6, %class.SkOpSpanBase** nonnull %7, %class.SkOpSpanBase** nonnull %8, i8* nonnull %3) #5
  %161 = icmp eq %class.SkOpSegment* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %157
  %163 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %164 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %165 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %149, %class.SkOpSpanBase* %163, %class.SkOpSpanBase* %164, %class.SkPathWriter* nonnull %19) #5
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #5
  br label %264

167:                                              ; preds = %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #5
  br label %190

168:                                              ; preds = %162
  %169 = load i64, i64* %127, align 8
  store i64 %169, i64* %117, align 8
  %170 = load i64, i64* %130, align 8
  store i64 %170, i64* %129, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #5
  %171 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %19) #5
  br i1 %171, label %190, label %172

172:                                              ; preds = %168
  %173 = load i8, i8* %3, align 1, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %172, %177
  %176 = phi i8 [ 0, %172 ], [ 1, %177 ]
  br label %147

177:                                              ; preds = %172
  %178 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %179 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %180 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %178, i64 0, i32 0, i32 0
  %181 = load double, double* %180, align 8
  %182 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %179, i64 0, i32 0, i32 0
  %183 = load double, double* %182, align 8
  %184 = fcmp olt double %181, %183
  %185 = select i1 %184, %class.SkOpSpanBase* %178, %class.SkOpSpanBase* %179
  %186 = bitcast %class.SkOpSpanBase* %185 to %class.SkOpSpan*
  %187 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %186, i64 0, i32 10
  %188 = load i8, i8* %187, align 4, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %175, label %190

190:                                              ; preds = %177, %168, %151, %167
  %191 = phi %class.SkOpSegment* [ %149, %167 ], [ %160, %177 ], [ %160, %168 ], [ %149, %151 ]
  %192 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %193 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %194 = call zeroext i1 @_ZN11SkOpSegment13activeWindingEP12SkOpSpanBaseS1_(%class.SkOpSegment* %191, %class.SkOpSpanBase* %192, %class.SkOpSpanBase* %193) #5
  br i1 %194, label %195, label %213

195:                                              ; preds = %190
  %196 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %19) #5
  br i1 %196, label %213, label %197

197:                                              ; preds = %195
  %198 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %199 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %200 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %198, i64 0, i32 0, i32 0
  %201 = load double, double* %200, align 8
  %202 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %199, i64 0, i32 0, i32 0
  %203 = load double, double* %202, align 8
  %204 = fcmp olt double %201, %203
  %205 = select i1 %204, %class.SkOpSpanBase* %198, %class.SkOpSpanBase* %199
  %206 = bitcast %class.SkOpSpanBase* %205 to %class.SkOpSpan*
  %207 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %206, i64 0, i32 10
  %208 = load i8, i8* %207, align 4, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %197
  %211 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %191, %class.SkOpSpanBase* %198, %class.SkOpSpanBase* %199, %class.SkPathWriter* nonnull %19) #5
  br i1 %211, label %212, label %266

212:                                              ; preds = %210
  call void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment* %191, %class.SkOpSpan* %206) #5
  br label %213

213:                                              ; preds = %212, %197, %195, %190
  call void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter* nonnull %19) #5
  br label %254

214:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #5
  store %class.SkOpSpanBase* inttoptr (i64 -6148914691236517206 to %class.SkOpSpanBase*), %class.SkOpSpanBase** %9, align 8
  %215 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %216 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %217 = call zeroext i1 @_ZN11SkOpSegment16markAndChaseDoneEP12SkOpSpanBaseS1_PS1_(%class.SkOpSegment* %143, %class.SkOpSpanBase* %215, %class.SkOpSpanBase* %216, %class.SkOpSpanBase** nonnull %9) #5
  br i1 %217, label %218, label %264

218:                                              ; preds = %214
  %219 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %9, align 8
  %220 = icmp eq %class.SkOpSpanBase* %219, null
  %221 = ptrtoint %class.SkOpSpanBase* %219 to i64
  br i1 %220, label %253, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %219, i64 0, i32 7
  %224 = load i8, i8* %223, align 1, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %253

226:                                              ; preds = %222
  store i8 1, i8* %223, align 1
  %227 = load i32, i32* %123, align 4
  %228 = add i32 %227, 1
  %229 = icmp sgt i32 %228, -1
  br i1 %229, label %231, label %230

230:                                              ; preds = %226
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

231:                                              ; preds = %226
  %232 = load i32, i32* %122, align 8
  %233 = icmp slt i32 %232, %228
  br i1 %233, label %236, label %234

234:                                              ; preds = %231
  %235 = load %class.SkOpSpanBase**, %class.SkOpSpanBase*** %121, align 8
  br label %248

236:                                              ; preds = %231
  %237 = add i32 %227, 5
  %238 = lshr i32 %237, 2
  %239 = add nuw i32 %238, %237
  %240 = icmp sgt i32 %239, -1
  br i1 %240, label %242, label %241

241:                                              ; preds = %236
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

242:                                              ; preds = %236
  store i32 %239, i32* %122, align 8
  %243 = load i8*, i8** %125, align 8
  %244 = sext i32 %239 to i64
  %245 = shl nsw i64 %244, 3
  %246 = call i8* @_Z16sk_realloc_throwPvm(i8* %243, i64 %245) #5
  store i8* %246, i8** %125, align 8
  %247 = bitcast i8* %246 to %class.SkOpSpanBase**
  br label %248

248:                                              ; preds = %242, %234
  %249 = phi %class.SkOpSpanBase** [ %235, %234 ], [ %247, %242 ]
  store i32 %228, i32* %123, align 4
  %250 = sext i32 %227 to i64
  %251 = getelementptr inbounds %class.SkOpSpanBase*, %class.SkOpSpanBase** %249, i64 %250
  %252 = bitcast %class.SkOpSpanBase** %251 to i64*
  store i64 %221, i64* %252, align 8
  br label %253

253:                                              ; preds = %248, %222, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #5
  br label %254

254:                                              ; preds = %253, %213
  %255 = call %class.SkOpSegment* @_Z9FindChaseP9SkTDArrayIP12SkOpSpanBaseEPS1_S4_(%class.SkTDArray.14* nonnull %6, %class.SkOpSpanBase** nonnull %4, %class.SkOpSpanBase** nonnull %5) #5
  call void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead* %111) #5
  %256 = icmp eq %class.SkOpSegment* %255, null
  br i1 %256, label %260, label %257

257:                                              ; preds = %254
  %258 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %4, align 8
  %259 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  br label %140

260:                                              ; preds = %254
  %261 = load i8*, i8** %125, align 8
  call void @_Z7sk_freePv(i8* %261) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #5
  %262 = call %class.SkOpSpan* @_Z15FindSortableTopP15SkOpContourHead(%class.SkOpContourHead* %111) #5
  %263 = icmp eq %class.SkOpSpan* %262, null
  br i1 %263, label %345, label %131

264:                                              ; preds = %214, %166
  %265 = phi i8* [ %126, %166 ], [ %124, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #5
  br label %266

266:                                              ; preds = %210, %264
  %267 = load i8*, i8** %125, align 8
  call void @_Z7sk_freePv(i8* %267) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #5
  br label %347

268:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #5
  store i8 0, i8* %10, align 1
  %269 = call %class.SkOpSpan* @_Z10FindUndoneP15SkOpContourHead(%class.SkOpContourHead* %111) #5
  %270 = icmp eq %class.SkOpSpan* %269, null
  br i1 %270, label %345, label %271

271:                                              ; preds = %268
  %272 = bitcast %class.SkOpSpanBase** %11 to i8*
  %273 = bitcast %class.SkOpSpanBase** %12 to i8*
  br label %274

274:                                              ; preds = %341, %271
  %275 = phi %class.SkOpSpan* [ %269, %271 ], [ %342, %341 ]
  %276 = phi i32 [ 1000000, %271 ], [ %291, %341 ]
  %277 = icmp slt i32 %276, 1
  br i1 %277, label %344, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %275, i64 0, i32 4
  %280 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %279, align 8
  %281 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %275, i64 0, i32 0, i32 1
  %282 = load %class.SkOpSegment*, %class.SkOpSegment** %281, align 8
  %283 = bitcast %class.SkOpSpan* %275 to %class.SkOpSpanBase*
  %284 = load i8, i8* %10, align 1, !range !2
  br label %285

285:                                              ; preds = %313, %278
  %286 = phi i8 [ %311, %313 ], [ %284, %278 ]
  %287 = phi i32 [ %291, %313 ], [ %276, %278 ]
  %288 = phi %class.SkOpSpanBase* [ %308, %313 ], [ %283, %278 ]
  %289 = phi %class.SkOpSpanBase* [ %307, %313 ], [ %280, %278 ]
  %290 = phi %class.SkOpSegment* [ %300, %313 ], [ %282, %278 ]
  %291 = add nsw i32 %287, -1
  %292 = icmp eq i8 %286, 0
  br i1 %292, label %293, label %299

293:                                              ; preds = %285
  %294 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %290, i64 0, i32 9
  %295 = load i32, i32* %294, align 8
  %296 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %290, i64 0, i32 8
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %295, %297
  br i1 %298, label %326, label %299

299:                                              ; preds = %293, %285
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %272) #5
  store %class.SkOpSpanBase* %289, %class.SkOpSpanBase** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273) #5
  store %class.SkOpSpanBase* %288, %class.SkOpSpanBase** %12, align 8
  %300 = call %class.SkOpSegment* @_ZN11SkOpSegment11findNextXorEPP12SkOpSpanBaseS2_Pb(%class.SkOpSegment* %290, %class.SkOpSpanBase** nonnull %11, %class.SkOpSpanBase** nonnull %12, i8* nonnull %10) #5
  %301 = icmp eq %class.SkOpSegment* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %299
  %303 = call zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment* %290, %class.SkOpSpanBase* %289, %class.SkOpSpanBase* %288, %class.SkPathWriter* nonnull %19) #5
  br i1 %303, label %306, label %304

304:                                              ; preds = %302
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272) #5
  br label %344

305:                                              ; preds = %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272) #5
  br label %326

306:                                              ; preds = %302
  %307 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %11, align 8
  %308 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272) #5
  %309 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %19) #5
  br i1 %309, label %326, label %310

310:                                              ; preds = %306
  %311 = load i8, i8* %10, align 1, !range !2
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %315, %310
  %314 = icmp slt i32 %287, 2
  br i1 %314, label %344, label %285

315:                                              ; preds = %310
  %316 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %307, i64 0, i32 0, i32 0
  %317 = load double, double* %316, align 8
  %318 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %308, i64 0, i32 0, i32 0
  %319 = load double, double* %318, align 8
  %320 = fcmp olt double %317, %319
  %321 = select i1 %320, %class.SkOpSpanBase* %307, %class.SkOpSpanBase* %308
  %322 = bitcast %class.SkOpSpanBase* %321 to %class.SkOpSpan*
  %323 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %322, i64 0, i32 10
  %324 = load i8, i8* %323, align 4, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %313, label %326

326:                                              ; preds = %315, %306, %293, %305
  %327 = phi %class.SkOpSpanBase* [ %289, %305 ], [ %307, %306 ], [ %307, %315 ], [ %289, %293 ]
  %328 = phi %class.SkOpSpanBase* [ %288, %305 ], [ %308, %306 ], [ %308, %315 ], [ %288, %293 ]
  %329 = call zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter* nonnull %19) #5
  br i1 %329, label %341, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %327, i64 0, i32 0, i32 0
  %332 = load double, double* %331, align 8
  %333 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %328, i64 0, i32 0, i32 0
  %334 = load double, double* %333, align 8
  %335 = fcmp olt double %332, %334
  %336 = select i1 %335, %class.SkOpSpanBase* %327, %class.SkOpSpanBase* %328
  %337 = bitcast %class.SkOpSpanBase* %336 to %class.SkOpSpan*
  %338 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %337, i64 0, i32 10
  %339 = load i8, i8* %338, align 4, !range !2
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %344, label %341

341:                                              ; preds = %330, %326
  call void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter* nonnull %19) #5
  call void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead* %111) #5
  %342 = call %class.SkOpSpan* @_Z10FindUndoneP15SkOpContourHead(%class.SkOpContourHead* %111) #5
  %343 = icmp eq %class.SkOpSpan* %342, null
  br i1 %343, label %345, label %274

344:                                              ; preds = %274, %330, %313, %304
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #5
  br label %347

345:                                              ; preds = %341, %260, %268, %112
  %346 = phi i8* [ %3, %112 ], [ %10, %268 ], [ %3, %260 ], [ %10, %341 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %346) #5
  call void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter* nonnull %19) #5
  br label %347

347:                                              ; preds = %344, %266, %345
  %348 = phi i1 [ true, %345 ], [ false, %266 ], [ false, %344 ]
  %349 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %19, i64 0, i32 2
  %350 = bitcast %class.SkTDArray.13* %349 to i8**
  %351 = load i8*, i8** %350, align 8
  call void @_Z7sk_freePv(i8* %351) #5
  %352 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %19, i64 0, i32 1
  %353 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %19, i64 0, i32 1, i32 1
  %354 = load i64, i64* %353, align 8
  %355 = and i64 %354, 4294967294
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %347
  %358 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %352, i64 0, i32 0
  br label %363

359:                                              ; preds = %363, %347
  %360 = phi i64 [ %354, %347 ], [ %368, %363 ]
  %361 = and i64 %360, 1
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %375, label %372

363:                                              ; preds = %363, %357
  %364 = phi i64 [ 0, %357 ], [ %367, %363 ]
  %365 = load %class.SkPath*, %class.SkPath** %358, align 8
  %366 = getelementptr inbounds %class.SkPath, %class.SkPath* %365, i64 %364
  call void @_ZN6SkPathD1Ev(%class.SkPath* %366) #5
  %367 = add nuw nsw i64 %364, 1
  %368 = load i64, i64* %353, align 8
  %369 = lshr i64 %368, 1
  %370 = and i64 %369, 2147483647
  %371 = icmp ult i64 %367, %370
  br i1 %371, label %363, label %359

372:                                              ; preds = %359
  %373 = bitcast %class.SkTArray* %352 to i8**
  %374 = load i8*, i8** %373, align 8
  call void @_Z7sk_freePv(i8* %374) #5
  br label %375

375:                                              ; preds = %359, %372
  %376 = getelementptr inbounds %class.SkPathWriter, %class.SkPathWriter* %19, i64 0, i32 0
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %376) #5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %104) #5
  br label %377

377:                                              ; preds = %375, %94, %37, %72
  %378 = phi i1 [ true, %72 ], [ false, %37 ], [ %348, %375 ], [ false, %94 ]
  %379 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 4, i32 0
  %380 = load i8*, i8** %379, align 8
  call void @_Z7sk_freePv(i8* %380) #5
  %381 = getelementptr inbounds %class.SkOpEdgeBuilder, %class.SkOpEdgeBuilder* %18, i64 0, i32 3
  %382 = bitcast %class.SkTDArray.2* %381 to i8**
  %383 = load i8*, i8** %382, align 8
  call void @_Z7sk_freePv(i8* %383) #5
  %384 = bitcast %class.SkTDArray* %61 to i8**
  %385 = load i8*, i8** %384, align 8
  call void @_Z7sk_freePv(i8* %385) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %56) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  call void @llvm.lifetime.end.p0i8(i64 344, i8* nonnull %41) #5
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %40) #5
  call void @llvm.lifetime.end.p0i8(i64 4128, i8* nonnull %38) #5
  br label %386

386:                                              ; preds = %377, %31
  %387 = phi i1 [ true, %31 ], [ %378, %377 ]
  ret i1 %387
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN15SkOpGlobalStateC1EP15SkOpContourHeadP12SkArenaAlloc(%class.SkOpGlobalState*, %class.SkOpContourHead*, %class.SkArenaAlloc*) unnamed_addr #2

declare zeroext i1 @_ZN15SkOpEdgeBuilder6finishEv(%class.SkOpEdgeBuilder*) local_unnamed_addr #2

declare zeroext i1 @_Z15SortContourListPP15SkOpContourHeadbb(%class.SkOpContourHead**, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_Z14AddIntersectTsP11SkOpContourS0_P15SkOpCoincidence(%class.SkOpContour*, %class.SkOpContour*, %class.SkOpCoincidence*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_Z17HandleCoincidenceP15SkOpContourHeadP15SkOpCoincidence(%class.SkOpContourHead*, %class.SkOpCoincidence*) local_unnamed_addr #2

declare void @_ZN12SkPathWriterC1ER6SkPath(%class.SkPathWriter*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare void @_ZN12SkPathWriter8assembleEv(%class.SkPathWriter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z8SimplifyRK6SkPathPS_(%class.SkPath* dereferenceable(16), %class.SkPath*) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_Z13SimplifyDebugRK6SkPathPS_(%class.SkPath* dereferenceable(16) %0, %class.SkPath* %1)
  ret i1 %3
}

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #2

declare void @_ZN15SkOpEdgeBuilder4initEv(%class.SkOpEdgeBuilder*) local_unnamed_addr #2

declare %class.SkOpSpan* @_Z15FindSortableTopP15SkOpContourHead(%class.SkOpContourHead*) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkOpSegment13activeWindingEP12SkOpSpanBaseS1_(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*) local_unnamed_addr #2

declare %class.SkOpSegment* @_ZN11SkOpSegment15findNextWindingEP9SkTDArrayIP12SkOpSpanBaseEPS2_S5_Pb(%class.SkOpSegment*, %class.SkTDArray.14*, %class.SkOpSpanBase**, %class.SkOpSpanBase**, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK11SkOpSegment10addCurveToEPK12SkOpSpanBaseS2_P12SkPathWriter(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkPathWriter*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkPathWriter8isClosedEv(%class.SkPathWriter*) local_unnamed_addr #2

declare void @_ZN11SkOpSegment8markDoneEP8SkOpSpan(%class.SkOpSegment*, %class.SkOpSpan*) local_unnamed_addr #2

declare void @_ZN12SkPathWriter13finishContourEv(%class.SkPathWriter*) local_unnamed_addr #2

declare zeroext i1 @_ZN11SkOpSegment16markAndChaseDoneEP12SkOpSpanBaseS1_PS1_(%class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase**) local_unnamed_addr #2

declare %class.SkOpSegment* @_Z9FindChaseP9SkTDArrayIP12SkOpSpanBaseEPS1_S4_(%class.SkTDArray.14*, %class.SkOpSpanBase**, %class.SkOpSpanBase**) local_unnamed_addr #2

declare void @_ZN14SkPathOpsDebug15ShowActiveSpansEP15SkOpContourHead(%class.SkOpContourHead*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare %class.SkOpSpan* @_Z10FindUndoneP15SkOpContourHead(%class.SkOpContourHead*) local_unnamed_addr #2

declare %class.SkOpSegment* @_ZN11SkOpSegment11findNextXorEPP12SkOpSpanBaseS2_Pb(%class.SkOpSegment*, %class.SkOpSpanBase**, %class.SkOpSpanBase**, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #4

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
