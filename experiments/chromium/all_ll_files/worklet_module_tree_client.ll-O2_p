; ModuleID = '../../third_party/blink/renderer/core/workers/worklet_module_tree_client.cc'
source_filename = "../../third_party/blink/renderer/core/workers/worklet_module_tree_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WorkletModuleTreeClient" = type { %"class.blink::ModuleTreeClient", %"class.blink::Member", %class.scoped_refptr.224, %"class.blink::CrossThreadPersistent" }
%"class.blink::ModuleTreeClient" = type { %"class.blink::NameClient" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptState"* }
%class.scoped_refptr.224 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.230" }
%"class.blink::PersistentBase.230" = type { %"class.blink::WorkletPendingTasks"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.254" }
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.258" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.177", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.181", %"class.blink::HeapHashMap.190", %"class.std::__1::unique_ptr.200", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.212", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.215" }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.190" = type { %"class.WTF::HashMap.193" }
%"class.WTF::HashMap.193" = type { %"class.WTF::HashTable.194" }
%"class.WTF::HashTable.194" = type <{ %"struct.WTF::KeyValuePair.196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.196" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.197" }
%"class.blink::TraceWrapperV8Reference.197" = type { %"class.v8::TracedReference.198" }
%"class.v8::TracedReference.198" = type { %"class.v8::BasicTracedReference.199" }
%"class.v8::BasicTracedReference.199" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.203" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.212" = type { %"class.v8::Persistent.213" }
%"class.v8::Persistent.213" = type { %"class.v8::PersistentBase.214" }
%"class.v8::PersistentBase.214" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.215" = type { %"class.WTF::HashMap.218" }
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.221" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.222" }
%"class.blink::Persistent.222" = type { %"class.blink::PersistentBase.223" }
%"class.blink::PersistentBase.223" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.225" }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i32 }
%"class.blink::WorkletPendingTasks" = type { i32 (...)**, i32, %"class.blink::Member.233", %"class.blink::Member.252" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.245", %"class.blink::SelfKeepAlive.249" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.237" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.241" }
%"class.WTF::HashTable.241" = type <{ %"class.blink::WeakMember.243"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.243" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.245", %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.245" = type { %"class.v8::TracedReference.246" }
%"class.v8::TracedReference.246" = type { %"class.v8::BasicTracedReference.247" }
%"class.v8::BasicTracedReference.247" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.249" = type { %"class.blink::Persistent.250" }
%"class.blink::Persistent.250" = type { %"class.blink::PersistentBase.251" }
%"class.blink::PersistentBase.251" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::Worklet"* }
%"class.blink::Worklet" = type opaque
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::ModuleScript" = type { %"class.blink::Script", %"class.blink::Member.283", %"class.blink::TraceWrapperV8Reference.287", %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference", %"class.WTF::HashMap.290", %"class.blink::KURL" }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.271", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.276", [6 x i8] }>
%"class.WTF::HashSet.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.std::__1::pair.275"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.275" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.266" }
%"struct.std::__1::atomic.266" = type { %"struct.std::__1::__atomic_base.267" }
%"struct.std::__1::__atomic_base.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__cxx_atomic_impl.269" }
%"struct.std::__1::__cxx_atomic_impl.269" = type { %"struct.std::__1::__cxx_atomic_base_impl.270" }
%"struct.std::__1::__cxx_atomic_base_impl.270" = type { i32 }
%"class.base::StrongAlias.276" = type { i8 }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::TraceWrapperV8Reference.287" = type { %"class.v8::TracedReference.288" }
%"class.v8::TracedReference.288" = type { %"class.v8::BasicTracedReference.289" }
%"class.v8::BasicTracedReference.289" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::HashMap.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"struct.WTF::KeyValuePair.294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.294" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.277" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::KURL"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.295 }
%class.scoped_refptr.295 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.296", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.296" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.188" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.188" = type { %"class.v8::Context"* }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%class.scoped_refptr.297 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.299", i64, %"class.WTF::Vector.303", %"class.WTF::Vector.308", %"class.WTF::Vector.314", %"class.WTF::Vector.332", %class.scoped_refptr.343, %"class.WTF::HashMap.348", %"class.WTF::Vector.353", %"class.WTF::Vector.303", %"class.WTF::Vector.358", %"class.WTF::HashMap.363", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.298" }
%"class.base::RefCountedThreadSafe.298" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { i8* }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310", [8 x i8] }
%"class.WTF::VectorBufferBase.310" = type { %class.scoped_refptr.311*, i32, i32 }
%class.scoped_refptr.311 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.317 }
%class.scoped_refptr.317 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.335", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.335" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.343 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.344", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.347 }
%"class.WTF::RefCounted.344" = type { %"class.base::RefCounted.345" }
%"class.base::RefCounted.345" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.346 }
%union.anon.346 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.347 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.348" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"struct.WTF::KeyValuePair.352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.352" = type opaque
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.303" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305", [16 x i8] }
%"class.WTF::VectorBufferBase.305" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"struct.WTF::KeyValuePair.367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.367" = type { i8**, %"class.std::__1::unique_ptr.894" }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::V8ScriptRunner::RethrowErrorsOption" = type { %"class.absl::optional.369" }
%"class.absl::optional.369" = type { %"class.absl::optional_internal::optional_data.370" }
%"class.absl::optional_internal::optional_data.370" = type { %"class.absl::optional_internal::optional_data_base.371" }
%"class.absl::optional_internal::optional_data_base.371" = type { %"class.absl::optional_internal::optional_data_dtor_base.372" }
%"class.absl::optional_internal::optional_data_dtor_base.372" = type { i8, %union.anon.373 }
%union.anon.373 = type { %"class.WTF::String" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.v8::Value" = type { i8 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.445", i32, i8, [3 x i8], %"class.blink::HeapVector.447", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.466", %"class.blink::Member.472", %"class.blink::Member.474", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.394" }
%"class.blink::HeapHashMap.394" = type { %"class.WTF::HashMap.397" }
%"class.WTF::HashMap.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"struct.WTF::KeyValuePair.400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.400" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.401" }
%"class.blink::Supplementable.401" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.402" }
%"class.blink::HeapHashMap.402" = type { %"class.WTF::HashMap.405" }
%"class.WTF::HashMap.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"struct.WTF::KeyValuePair.408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.408" = type { i8*, %"class.blink::Member.890" }
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.892" }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.343, %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.433", %"class.blink::Member.439", i32, [4 x i8], %"class.WTF::HashSet.441", i32, i32 }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.420", %"class.std::__1::map.429"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.420" = type { %"class.std::__1::__tree.421" }
%"class.std::__1::__tree.421" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.422", %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.429" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.447" = type { %"class.WTF::Vector.450" }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::Member.453"*, i32, i32 }
%"class.blink::Member.453" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.459", i32, i32 }
%"class.blink::HeapHashMap.459" = type { %"class.WTF::HashMap.462" }
%"class.WTF::HashMap.462" = type { %"class.WTF::HashTable.463" }
%"class.WTF::HashTable.463" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.457", i8, [7 x i8], %"class.WTF::Vector.478", %"class.blink::HeapVector.518", i8, [7 x i8], %"class.WTF::HashSet.441", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.484", %"class.WTF::HashMap.491", %"class.WTF::HashMap.496", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.501", i32, %"class.mojo::StructPtr.506", %"class.WTF::Vector.501" }
%"class.mojo::StructPtr.484" = type { %"class.std::__1::unique_ptr.485" }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type opaque
%"class.WTF::HashMap.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ %"struct.WTF::KeyValuePair.500"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.500" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.506" = type { %"class.std::__1::unique_ptr.507" }
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.501", i8, i8, [6 x i8] }>
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.518" = type { %"class.WTF::Vector.521" }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { %"class.blink::Member.524"*, i32, i32 }
%"class.blink::Member.524" = type opaque
%"class.blink::WorkletGlobalScope" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.347, i8, [7 x i8], %"class.blink::CrossThreadPersistent.561", i32, i32, %"class.blink::Member.570", %"class.blink::WorkerThread"*, %"class.util::TokenType.572", %"class.std::__1::unique_ptr.574", i8, i8, [6 x i8] }>
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent.526", %"class.std::__1::unique_ptr.538", %"class.blink::Member.544", %"class.blink::HeapHashSet.546", %class.scoped_refptr.553, %"class.blink::Member.555", %"class.blink::Member.557", i32, %"class.WTF::Vector.478", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.283" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.387" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.378" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380", [32 x i8] }
%"class.WTF::VectorBufferBase.380" = type { %"struct.std::__1::pair.381"*, i32, i32 }
%"struct.std::__1::pair.381" = type { %"class.WTF::AtomicString", %"class.blink::Member.382" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::HeapVector.384"* }
%"class.blink::HeapVector.384" = type opaque
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.WTF::Vector.390"* }
%"class.WTF::Vector.390" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.445", i32, i8, [3 x i8], %"class.blink::HeapVector.447", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.466", %"class.blink::Member.472", %"class.blink::Member.474", i8 }>
%"class.blink::CrossThreadPersistent.526" = type { %"class.blink::PersistentBase.527" }
%"class.blink::PersistentBase.527" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.530" }
%"class.blink::Supplementable.530" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.531" }
%"class.blink::HeapHashMap.531" = type { %"class.WTF::HashMap.534" }
%"class.WTF::HashMap.534" = type { %"class.WTF::HashTable.535" }
%"class.WTF::HashTable.535" = type <{ %"struct.WTF::KeyValuePair.537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.537" = type { i8*, %"class.blink::Member.900" }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::Supplement.902"* }
%"class.blink::Supplement.902" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.903" }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.582", %"class.blink::Member.583", %"class.blink::Member.585", %"class.blink::Member.587", %class.scoped_refptr.224, %class.scoped_refptr.224, %"class.blink::Member.589", %"class.blink::Member.591", %"class.blink::Member.597", %"class.blink::Member.601", %"class.blink::Member.659", %"class.blink::HeapHashMap.661", %"class.blink::HeapHashSet.668", %"class.blink::HeapHashSet.668", %"class.blink::HeapHashMap.828", %"class.blink::HeapVector.835", %"class.blink::Member.843", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.846", %"class.WTF::Vector.853", %"class.blink::HeapHashSet.859", %"class.blink::HeapHashSet.859", %"class.std::__1::unique_ptr.865", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.874", i8, i8, %"class.base::WeakPtrFactory.876" }
%"class.blink::ThreadState::PrefinalizerRegistration.582" = type { i8 }
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.595" }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.605", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.607", %"class.WTF::HashSet.612", i8, [3 x i8], i32, %"class.blink::HeapHashMap.616", %"class.std::__1::map.623", %"class.std::__1::map.634", %"class.std::__1::unique_ptr.643", %"class.blink::Member.591", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.656", %"class.mojo::InlinedStructPtr.658", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"struct.WTF::KeyValuePair.611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.611" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type opaque
%"class.std::__1::map.623" = type { %"class.std::__1::__tree.624" }
%"class.std::__1::__tree.624" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.625", %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.634" = type { %"class.std::__1::__tree.635" }
%"class.std::__1::__tree.635" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.636", %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.658" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.661" = type { %"class.WTF::HashMap.664" }
%"class.WTF::HashMap.664" = type { %"class.WTF::HashTable.665" }
%"class.WTF::HashTable.665" = type <{ %"struct.WTF::KeyValuePair.667"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.667" = type opaque
%"class.blink::HeapHashSet.668" = type { %"class.WTF::HashSet.671" }
%"class.WTF::HashSet.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"class.blink::WeakMember.674"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.678", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.698", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.792", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.803", %"class.blink::ResourceResponse", %class.scoped_refptr.805, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.678" = type { %"class.absl::optional_internal::optional_data.679" }
%"class.absl::optional_internal::optional_data.679" = type { %"class.absl::optional_internal::optional_data_base.680" }
%"class.absl::optional_internal::optional_data_base.680" = type { %"class.absl::optional_internal::optional_data_dtor_base.681" }
%"class.absl::optional_internal::optional_data_dtor_base.681" = type { i8, %union.anon.682 }
%union.anon.682 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.683", i8, %"class.absl::optional.688", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.683" = type { %"class.absl::optional_internal::optional_data.684" }
%"class.absl::optional_internal::optional_data.684" = type { %"class.absl::optional_internal::optional_data_base.685" }
%"class.absl::optional_internal::optional_data_base.685" = type { %"class.absl::optional_internal::optional_data_dtor_base.686" }
%"class.absl::optional_internal::optional_data_dtor_base.686" = type { i8, [7 x i8], %union.anon.687 }
%union.anon.687 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.688" = type { %"class.absl::optional_internal::optional_data.689" }
%"class.absl::optional_internal::optional_data.689" = type { %"class.absl::optional_internal::optional_data_base.690" }
%"class.absl::optional_internal::optional_data_base.690" = type { %"class.absl::optional_internal::optional_data_dtor_base.691" }
%"class.absl::optional_internal::optional_data_dtor_base.691" = type { i8, %union.anon.692 }
%union.anon.692 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.693", %"class.WTF::Vector.501" }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { i32*, i32, i32 }
%"class.WTF::Vector.698" = type { %"class.WTF::VectorBuffer.699" }
%"class.WTF::VectorBuffer.699" = type { %"class.WTF::VectorBufferBase.700" }
%"class.WTF::VectorBufferBase.700" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.788" }
%"class.WTF::HashMap.788" = type { %"class.WTF::HashTable.789" }
%"class.WTF::HashTable.789" = type <{ %"struct.WTF::KeyValuePair.791"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.791" = type <{ %"class.blink::WeakMember.905", i32, [4 x i8] }>
%"class.blink::WeakMember.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.907", [7 x i8], %"class.blink::Member.841", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.907" = type { i8 }
%"class.blink::Member.841" = type { %"class.blink::MemberBase.675" }
%"class.blink::HeapHashSet.792" = type { %"class.WTF::HashSet.795" }
%"class.WTF::HashSet.795" = type { %"class.WTF::HashTable.796" }
%"class.WTF::HashTable.796" = type <{ %"class.blink::WeakMember.798"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.798" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.276", %"class.WTF::String", %"class.WTF::HashSet.271", i8, i8, %class.scoped_refptr.248, %class.scoped_refptr.799, %class.scoped_refptr.801 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%class.scoped_refptr.799 = type { %"class.base::RefCountedData.800"* }
%"class.base::RefCountedData.800" = type opaque
%class.scoped_refptr.801 = type { %"class.base::RefCountedData.802"* }
%"class.base::RefCountedData.802" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.751" }
%"class.base::time_internal::TimeBase.751" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.347, %class.scoped_refptr.347, %class.scoped_refptr.347, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.706, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.718", %"class.absl::optional.723", %"class.absl::optional.369", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.738", %"class.absl::optional.369", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.369", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.738", %"class.absl::optional.743", i8, %class.scoped_refptr.750 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.701" }
%"class.WTF::HashMap.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ %"struct.WTF::KeyValuePair.705"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.705" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.706 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.707", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.716, i8, %"class.url::Origin" }
%"class.base::RefCounted.707" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.265 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.708" }
%"class.std::__1::vector.708" = type { %"class.std::__1::__vector_base.709" }
%"class.std::__1::__vector_base.709" = type { %"class.std::__1::unique_ptr.710"*, %"class.std::__1::unique_ptr.710"*, %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::unique_ptr.710"* }
%class.scoped_refptr.716 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.717", [4 x i8] }>
%"class.base::RefCountedThreadSafe.717" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.718" = type { %"class.absl::optional_internal::optional_data.719" }
%"class.absl::optional_internal::optional_data.719" = type { %"class.absl::optional_internal::optional_data_base.720" }
%"class.absl::optional_internal::optional_data_base.720" = type { %"class.absl::optional_internal::optional_data_dtor_base.721" }
%"class.absl::optional_internal::optional_data_dtor_base.721" = type { i8, %union.anon.722 }
%union.anon.722 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.723" = type { %"class.absl::optional_internal::optional_data.724" }
%"class.absl::optional_internal::optional_data.724" = type { %"class.absl::optional_internal::optional_data_base.725" }
%"class.absl::optional_internal::optional_data_base.725" = type { %"class.absl::optional_internal::optional_data_dtor_base.726" }
%"class.absl::optional_internal::optional_data_dtor_base.726" = type { i8, %union.anon.727 }
%union.anon.727 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.728", %"class.WTF::Vector.501", %"class.WTF::String" }
%"class.WTF::Vector.728" = type { %"class.WTF::VectorBuffer.729" }
%"class.WTF::VectorBuffer.729" = type { %"class.WTF::VectorBufferBase.730" }
%"class.WTF::VectorBufferBase.730" = type { %class.scoped_refptr.347*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.733", %"class.absl::optional.733" }
%"class.absl::optional.733" = type { %"class.absl::optional_internal::optional_data.734" }
%"class.absl::optional_internal::optional_data.734" = type { %"class.absl::optional_internal::optional_data_base.735" }
%"class.absl::optional_internal::optional_data_base.735" = type { %"class.absl::optional_internal::optional_data_dtor_base.736" }
%"class.absl::optional_internal::optional_data_dtor_base.736" = type { i8, %union.anon.737 }
%union.anon.737 = type { %"class.base::TimeDelta" }
%"class.absl::optional.738" = type { %"class.absl::optional_internal::optional_data.739" }
%"class.absl::optional_internal::optional_data.739" = type { %"class.absl::optional_internal::optional_data_base.740" }
%"class.absl::optional_internal::optional_data_base.740" = type { %"class.absl::optional_internal::optional_data_dtor_base.741" }
%"class.absl::optional_internal::optional_data_dtor_base.741" = type { i8, %union.anon.742 }
%union.anon.742 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.743" = type { %"class.absl::optional_internal::optional_data.744" }
%"class.absl::optional_internal::optional_data.744" = type { %"class.absl::optional_internal::optional_data_base.745" }
%"class.absl::optional_internal::optional_data_base.745" = type { %"class.absl::optional_internal::optional_data_dtor_base.746" }
%"class.absl::optional_internal::optional_data_dtor_base.746" = type { i8, %union.anon.747 }
%union.anon.747 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.748" }
%"class.mojo::PendingRemote.748" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.749", i32 }
%"class.mojo::ScopedHandleBase.749" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.750 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.882", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.882" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.883" }
%"class.std::__1::vector.883" = type { %"class.std::__1::__vector_base.884" }
%"class.std::__1::__vector_base.884" = type { i32*, i32*, %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { i32* }
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.752", %class.scoped_refptr.767, %class.scoped_refptr.768, %"struct.blink::CacheControlHeader", %"class.absl::optional.733", %"class.absl::optional.769", %"class.absl::optional.769", %"class.absl::optional.769", i64, %"class.blink::KURL", %"class.WTF::Vector.774", %"class.WTF::String", %"class.WTF::Vector.501", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.738", %"class.WTF::Vector.501", %"class.blink::KURL", %"class.absl::optional.779" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.752" = type { %"class.absl::optional_internal::optional_data.753" }
%"class.absl::optional_internal::optional_data.753" = type { %"class.absl::optional_internal::optional_data_base.754" }
%"class.absl::optional_internal::optional_data_base.754" = type { %"class.absl::optional_internal::optional_data_dtor_base.755" }
%"class.absl::optional_internal::optional_data_dtor_base.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.501", %"class.WTF::String", i64, i64, %"class.WTF::Vector.757", %"class.WTF::Vector.762" }
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.758" }
%"class.WTF::VectorBuffer.758" = type { %"class.WTF::VectorBufferBase.759" }
%"class.WTF::VectorBufferBase.759" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.767 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.768 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.769" = type { %"class.absl::optional_internal::optional_data.770" }
%"class.absl::optional_internal::optional_data.770" = type { %"class.absl::optional_internal::optional_data_base.771" }
%"class.absl::optional_internal::optional_data_base.771" = type { %"class.absl::optional_internal::optional_data_dtor_base.772" }
%"class.absl::optional_internal::optional_data_dtor_base.772" = type { i8, %union.anon.773 }
%union.anon.773 = type { %"class.base::Time" }
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.776" }
%"class.WTF::VectorBufferBase.776" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.779" = type { %"class.absl::optional_internal::optional_data.780" }
%"class.absl::optional_internal::optional_data.780" = type { %"class.absl::optional_internal::optional_data_base.781" }
%"class.absl::optional_internal::optional_data_base.781" = type { %"class.absl::optional_internal::optional_data_dtor_base.782" }
%"class.absl::optional_internal::optional_data_dtor_base.782" = type { i8, %union.anon.783 }
%union.anon.783 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.805 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.806", i64, %"class.WTF::Vector.808", %"class.WTF::Vector.813" }
%"class.WTF::RefCounted.806" = type { %"class.base::RefCounted.807" }
%"class.base::RefCounted.807" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.808" = type { %"class.WTF::VectorBuffer.809" }
%"class.WTF::VectorBuffer.809" = type { %"class.WTF::VectorBufferBase.810" }
%"class.WTF::VectorBufferBase.810" = type { i8*, i32, i32 }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.std::__1::unique_ptr.816"*, i32, i32 }
%"class.std::__1::unique_ptr.816" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.819" }
%"class.std::__1::__tree.819" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.820", %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.blink::HeapHashMap.828" = type { %"class.WTF::HashMap.831" }
%"class.WTF::HashMap.831" = type { %"class.WTF::HashTable.832" }
%"class.WTF::HashTable.832" = type <{ %"struct.WTF::KeyValuePair.834"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.834" = type opaque
%"class.blink::HeapVector.835" = type { %"class.WTF::Vector.838" }
%"class.WTF::Vector.838" = type { %"class.WTF::VectorBuffer.839" }
%"class.WTF::VectorBuffer.839" = type { %"class.WTF::VectorBufferBase.840" }
%"class.WTF::VectorBufferBase.840" = type { %"class.blink::Member.841"*, i32, i32 }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.552", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.224, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.845 }
%class.scoped_refptr.845 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.647", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.647" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.648" }
%"struct.std::__1::atomic.648" = type { %"struct.std::__1::__atomic_base.649" }
%"struct.std::__1::__atomic_base.649" = type { %"struct.std::__1::__atomic_base.650" }
%"struct.std::__1::__atomic_base.650" = type { %"struct.std::__1::__cxx_atomic_impl.651" }
%"struct.std::__1::__cxx_atomic_impl.651" = type { %"struct.std::__1::__cxx_atomic_base_impl.652" }
%"struct.std::__1::__cxx_atomic_base_impl.652" = type { i8 }
%"class.blink::WeakMember.552" = type { %"class.blink::MemberBase.545" }
%"class.blink::HeapHashMap.846" = type { %"class.WTF::HashMap.849" }
%"class.WTF::HashMap.849" = type { %"class.WTF::HashTable.850" }
%"class.WTF::HashTable.850" = type <{ %"struct.WTF::KeyValuePair.852"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.852" = type opaque
%"class.WTF::Vector.853" = type { %"class.WTF::VectorBuffer.854" }
%"class.WTF::VectorBuffer.854" = type { %"class.WTF::VectorBufferBase.855" }
%"class.WTF::VectorBufferBase.855" = type { %class.scoped_refptr.856*, i32, i32 }
%class.scoped_refptr.856 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.859" = type { %"class.WTF::HashSet.862" }
%"class.WTF::HashSet.862" = type { %"class.WTF::HashTable.863" }
%"class.WTF::HashTable.863" = type <{ %"class.blink::Member.803"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.WTF::HashSet.868"* }
%"class.WTF::HashSet.868" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.646 }
%class.scoped_refptr.646 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.872" }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.876" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.546" = type { %"class.WTF::HashSet.549" }
%"class.WTF::HashSet.549" = type { %"class.WTF::HashTable.550" }
%"class.WTF::HashTable.550" = type <{ %"class.blink::WeakMember.552"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.553 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.554", [4 x i8] }>
%"class.base::RefCounted.554" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.559", i32, [4 x i8] }>
%"class.std::__1::bitset.559" = type { %"class.std::__1::__bitset.560" }
%"class.std::__1::__bitset.560" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.561" = type { %"class.blink::PersistentBase.562" }
%"class.blink::PersistentBase.562" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.565", %"class.WTF::Mutex" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.util::TokenType.572" = type { %"class.base::StrongAlias.573" }
%"class.base::StrongAlias.573" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"struct.base::internal::BindState.913" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.914" }
%"class.std::__1::tuple.914" = type { %"struct.std::__1::__tuple_impl.915" }
%"struct.std::__1::__tuple_impl.915" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.916" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::CrossThreadPersistent" }
%"class.std::__1::__tuple_leaf.916" = type { %class.scoped_refptr.297 }

$_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EEDnEEEDaOT_DpOT0_ = comdat any

$_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EES5_EEEDaOT_DpOT0_ = comdat any

$_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_ = comdat any

$_ZNK5blink16ModuleTreeClient18NameInHeapSnapshotEv = comdat any

$_ZN5blink23WorkletModuleTreeClientD2Ev = comdat any

$_ZN5blink23WorkletModuleTreeClientD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EEDnEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_19WorkletPendingTasksEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EES6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EES6_EED2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink23WorkletModuleTreeClientE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ModuleTreeClient"*)* @_ZNK5blink16ModuleTreeClient18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::WorkletModuleTreeClient"*)* @_ZN5blink23WorkletModuleTreeClientD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkletModuleTreeClient"*)* @_ZN5blink23WorkletModuleTreeClientD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkletModuleTreeClient"*, %"class.blink::Visitor"*)* @_ZNK5blink23WorkletModuleTreeClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WorkletModuleTreeClient"*, %"class.blink::ModuleScript"*)* @_ZN5blink23WorkletModuleTreeClient28NotifyModuleTreeLoadFinishedEPNS_12ModuleScriptE to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"NotifyModuleTreeLoadFinished\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/core/workers/worklet_module_tree_client.cc\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"ModuleTreeClient\00", align 1

@_ZN5blink23WorkletModuleTreeClientC1EPNS_11ScriptStateE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE = hidden unnamed_addr alias void (%"class.blink::WorkletModuleTreeClient"*, %"class.blink::ScriptState"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*), void (%"class.blink::WorkletModuleTreeClient"*, %"class.blink::ScriptState"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*)* @_ZN5blink23WorkletModuleTreeClientC2EPNS_11ScriptStateE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WorkletModuleTreeClientC2EPNS_11ScriptStateE13scoped_refptrIN4base22SingleThreadTaskRunnerEEPNS_19WorkletPendingTasksE(%"class.blink::WorkletModuleTreeClient"*, %"class.blink::ScriptState"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::WorkletPendingTasks"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %6 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink23WorkletModuleTreeClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 2
  %9 = bitcast %class.scoped_refptr.224* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %3, %"class.blink::WorkletPendingTasks"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  %15 = ptrtoint %"class.blink::WorkletPendingTasks"* %3 to i64
  switch i64 %15, label %16 [
    i64 0, label %35
    i64 -1, label %35
  ]

16:                                               ; preds = %4
  %17 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %18 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %17, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #7
  %19 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %20 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %23, label %26, !prof !2

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %19, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %24) #7
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  br label %26

26:                                               ; preds = %23, %16
  %27 = phi %"class.blink::PersistentNode"* [ %25, %23 ], [ %21, %16 ]
  %28 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %19 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to %"class.blink::PersistentBase.230"**
  store %"class.blink::PersistentBase.230"* %11, %"class.blink::PersistentBase.230"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  %33 = ptrtoint %"class.blink::PersistentNode"* %27 to i64
  %34 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %13 to i64*
  store atomic i64 %33, i64* %34 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #7
  br label %35

35:                                               ; preds = %26, %4, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23WorkletModuleTreeClient28NotifyModuleTreeLoadFinishedEPNS_12ModuleScriptE(%"class.blink::WorkletModuleTreeClient"* nocapture readonly, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to { i64, i64 }*
  %13 = alloca %"class.blink::CrossThreadPersistent", align 8
  %14 = alloca i8*, align 8
  %15 = alloca %"class.blink::ScriptState::Scope", align 8
  %16 = alloca %"class.v8::MicrotasksScope", align 8
  %17 = alloca %"class.base::Location", align 8
  %18 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to { i64, i64 }*
  %21 = alloca %"class.blink::CrossThreadPersistent", align 8
  %22 = alloca %class.scoped_refptr.297, align 8
  %23 = alloca %"class.blink::ScriptValue", align 8
  %24 = alloca %"class.blink::V8ScriptRunner::RethrowErrorsOption", align 8
  %25 = alloca %"class.base::Location", align 8
  %26 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %27 = alloca <2 x i64>, align 16
  %28 = bitcast <2 x i64>* %27 to { i64, i64 }*
  %29 = alloca %"class.blink::CrossThreadPersistent", align 8
  %30 = icmp eq %"class.blink::ModuleScript"* %1, null
  br i1 %30, label %31, label %99

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 2, i32 0
  %33 = bitcast %"class.base::SingleThreadTaskRunner"** %32 to %"class.base::SequencedTaskRunner"**
  %34 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %33, align 8
  %35 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 50) #7
  %36 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #7
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)* @_ZN5blink19WorkletPendingTasks5AbortE13scoped_refptrINS_21SerializedScriptValueEE to i64), i64 0>, <2 x i64>* %11, align 16
  %37 = bitcast %"class.blink::CrossThreadPersistent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  %38 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %13, i64 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %13, i64 0, i32 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %39, %"class.blink::WorkletPendingTasks"** %41, align 8, !alias.scope !3
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %13, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8, !alias.scope !3
  %44 = ptrtoint %"class.blink::WorkletPendingTasks"* %39 to i64
  switch i64 %44, label %45 [
    i64 0, label %64
    i64 -1, label %64
  ]

45:                                               ; preds = %31
  %46 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !3
  %47 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %46, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %47) #7, !noalias !3
  %48 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !3
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8, !noalias !3
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !2

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %48, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #7
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %45
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %45 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !3
  %59 = bitcast %"class.blink::CrossThreadPersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8, !noalias !3
  %60 = bitcast %"class.blink::PersistentNode"* %56 to %"class.blink::PersistentBase.230"**
  store %"class.blink::PersistentBase.230"* %40, %"class.blink::PersistentBase.230"** %60, align 8, !noalias !3
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  %62 = ptrtoint %"class.blink::PersistentNode"* %56 to i64
  %63 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %42 to i64*
  store atomic i64 %62, i64* %63 release, align 8, !alias.scope !3
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %47) #7
  br label %64

64:                                               ; preds = %31, %31, %55
  %65 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #7
  store i8* null, i8** %14, align 8
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EEDnEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %10, { i64, i64 }* nonnull dereferenceable(16) %12, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %13, i8** nonnull dereferenceable(8) %14)
  %66 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = bitcast %"class.base::SequencedTaskRunner"* %34 to %"class.base::TaskRunner"*
  %69 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.WTF::CrossThreadOnceFunction"* %10 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8
  %72 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %71, i64* %73, align 8, !alias.scope !6
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8, !noalias !6
  %74 = bitcast %"class.base::SequencedTaskRunner"* %34 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %75 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %74, align 8
  %76 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %75, align 8
  %77 = call zeroext i1 %76(%"class.base::TaskRunner"* %68, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %7, i64 0) #7
  %78 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #7
  %79 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  %80 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #7
  %81 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %42 to i64*
  %82 = load atomic i64, i64* %81 acquire, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %98, label %84

84:                                               ; preds = %64
  %85 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %86 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %85, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %86) #7
  %87 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %88 = load atomic i64, i64* %81 monotonic, align 8
  %89 = inttoptr i64 %88 to %"class.blink::PersistentNode"*
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %87, i64 0, i32 0, i32 0
  %93 = bitcast %"class.blink::CrossThreadPersistentRegion"* %87 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %88 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %89, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %96, align 8
  store %"class.blink::PersistentNode"* %89, %"class.blink::PersistentNode"** %92, align 8
  br label %97

97:                                               ; preds = %91, %84
  store atomic i64 0, i64* %81 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %86) #7
  br label %98

98:                                               ; preds = %64, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #7
  br label %330

99:                                               ; preds = %2
  %100 = bitcast %"class.blink::ScriptState::Scope"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #7
  %101 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %15, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 1, i32 0, i32 0
  %103 = bitcast %"class.blink::ScriptState::Scope"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 32, i1 false)
  %104 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %102, align 8
  %105 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %15, i64 0, i32 0
  %106 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %104, i64 0, i32 0
  %107 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %106, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %105, %"class.v8::Isolate"* %107) #7
  %108 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %104, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.v8::Context"*, %"class.v8::Context"** %108, align 8
  %110 = icmp eq %"class.v8::Context"* %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %99
  %112 = bitcast %"class.blink::ScriptState"* %104 to %"class.v8::internal::Isolate"**
  %113 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %112, align 8
  %114 = bitcast %"class.v8::Context"* %109 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %113, i64 %115) #7
  %117 = bitcast i64* %116 to %"class.v8::Context"*
  br label %118

118:                                              ; preds = %99, %111
  %119 = phi %"class.v8::Context"* [ %117, %111 ], [ null, %99 ]
  store %"class.v8::Context"* %119, %"class.v8::Context"** %101, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %119) #7
  %120 = getelementptr inbounds %"class.blink::ModuleScript", %"class.blink::ModuleScript"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %121, null
  br i1 %122, label %224, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.v8::MicrotasksScope"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #7
  %125 = bitcast %"class.v8::MicrotasksScope"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 24, i1 false)
  %126 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %102, align 8
  %127 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %126, i64 0, i32 0
  %128 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %127, align 8
  %129 = call %"class.v8::MicrotaskQueue"* @_ZN5blink16ToMicrotaskQueueEPNS_11ScriptStateE(%"class.blink::ScriptState"* %126) #7
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateEPNS_14MicrotaskQueueENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %16, %"class.v8::Isolate"* %128, %"class.v8::MicrotaskQueue"* %129, i32 1) #7
  %130 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 2, i32 0
  %131 = bitcast %"class.base::SingleThreadTaskRunner"** %130 to %"class.base::SequencedTaskRunner"**
  %132 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %131, align 8
  %133 = bitcast %"class.base::Location"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 70) #7
  %134 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #7
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)* @_ZN5blink19WorkletPendingTasks5AbortE13scoped_refptrINS_21SerializedScriptValueEE to i64), i64 0>, <2 x i64>* %19, align 16
  %135 = bitcast %"class.blink::CrossThreadPersistent"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #7
  %136 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3, i32 0, i32 0
  %137 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %21, i64 0, i32 0
  %139 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %21, i64 0, i32 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %137, %"class.blink::WorkletPendingTasks"** %139, align 8, !alias.scope !9
  %140 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %21, i64 0, i32 0, i32 1
  %141 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %141, align 8, !alias.scope !9
  %142 = ptrtoint %"class.blink::WorkletPendingTasks"* %137 to i64
  switch i64 %142, label %143 [
    i64 0, label %162
    i64 -1, label %162
  ]

143:                                              ; preds = %123
  %144 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !9
  %145 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %144, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %145) #7, !noalias !9
  %146 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !9
  %147 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %147, align 8, !noalias !9
  %149 = icmp eq %"class.blink::PersistentNode"* %148, null
  br i1 %149, label %150, label %153, !prof !2

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %146, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %151) #7
  %152 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %147, align 8
  br label %153

153:                                              ; preds = %150, %143
  %154 = phi %"class.blink::PersistentNode"* [ %152, %150 ], [ %148, %143 ]
  %155 = bitcast %"class.blink::PersistentNode"* %154 to i64*
  %156 = load i64, i64* %155, align 8, !noalias !9
  %157 = bitcast %"class.blink::CrossThreadPersistentRegion"* %146 to i64*
  store i64 %156, i64* %157, align 8, !noalias !9
  %158 = bitcast %"class.blink::PersistentNode"* %154 to %"class.blink::PersistentBase.230"**
  store %"class.blink::PersistentBase.230"* %138, %"class.blink::PersistentBase.230"** %158, align 8, !noalias !9
  %159 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %154, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %159, align 8
  %160 = ptrtoint %"class.blink::PersistentNode"* %154 to i64
  %161 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %140 to i64*
  store atomic i64 %160, i64* %161 release, align 8, !alias.scope !9
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %145) #7
  br label %162

162:                                              ; preds = %123, %123, %153
  %163 = bitcast %class.scoped_refptr.297* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #7
  %164 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %102, align 8
  %165 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %164, i64 0, i32 0
  %166 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %165, align 8
  %167 = bitcast %"class.blink::ScriptValue"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #7
  call void @_ZNK5blink12ModuleScript20CreateErrorToRethrowEv(%"class.blink::ScriptValue"* nonnull sret %23, %"class.blink::ModuleScript"* nonnull %1) #7
  %168 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %23) #7
  %169 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue29SerializeAndSwallowExceptionsEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %166, %"class.v8::Value"* %168) #7
  %170 = getelementptr inbounds %class.scoped_refptr.297, %class.scoped_refptr.297* %22, i64 0, i32 0
  store %"class.blink::SerializedScriptValue"* %169, %"class.blink::SerializedScriptValue"** %170, align 8
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EES5_EEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %18, { i64, i64 }* nonnull dereferenceable(16) %20, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %21, %class.scoped_refptr.297* nonnull dereferenceable(8) %22)
  %171 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171)
  %172 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172)
  %173 = bitcast %"class.base::SequencedTaskRunner"* %132 to %"class.base::TaskRunner"*
  %174 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.WTF::CrossThreadOnceFunction"* %18 to i64*
  %176 = load i64, i64* %175, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %174, align 8
  %177 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %176, i64* %178, align 8, !alias.scope !12
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %177, align 8, !noalias !12
  %179 = bitcast %"class.base::SequencedTaskRunner"* %132 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %180 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %179, align 8
  %181 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %180, align 8
  %182 = call zeroext i1 %181(%"class.base::TaskRunner"* %173, %"class.base::Location"* nonnull dereferenceable(32) %17, %"class.base::OnceCallback"* nonnull %5, i64 0) #7
  %183 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %183) #7
  %184 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %184) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172)
  %185 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %18, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %185) #7
  %186 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %170, align 8
  %187 = icmp eq %"class.blink::SerializedScriptValue"* %186, null
  br i1 %187, label %194, label %188

188:                                              ; preds = %162
  %189 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %186, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw sub i32* %189, i32 1 acq_rel
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %186) #7
  %193 = bitcast %"class.blink::SerializedScriptValue"* %186 to i8*
  call void @free(i8* %193) #7
  br label %194

194:                                              ; preds = %162, %188, %192
  %195 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %23, i64 0, i32 1, i32 1, i32 0
  %196 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %195, align 8
  %197 = icmp eq %"class.blink::DOMWrapperWorld"* %196, null
  br i1 %197, label %205, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %196, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %199) #7
  %200 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %196, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %198
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %196) #7
  %204 = bitcast %"class.blink::DOMWrapperWorld"* %196 to i8*
  call void @free(i8* %204) #7
  br label %205

205:                                              ; preds = %194, %198, %203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #7
  %206 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %140 to i64*
  %207 = load atomic i64, i64* %206 acquire, align 8
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %223, label %209

209:                                              ; preds = %205
  %210 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %211 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %210, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %211) #7
  %212 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %213 = load atomic i64, i64* %206 monotonic, align 8
  %214 = inttoptr i64 %213 to %"class.blink::PersistentNode"*
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %222, label %216

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %212, i64 0, i32 0, i32 0
  %218 = bitcast %"class.blink::CrossThreadPersistentRegion"* %212 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = inttoptr i64 %213 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %214, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %221, align 8
  store %"class.blink::PersistentNode"* %214, %"class.blink::PersistentNode"** %217, align 8
  br label %222

222:                                              ; preds = %216, %209
  store atomic i64 0, i64* %206 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %211) #7
  br label %223

223:                                              ; preds = %205, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %133) #7
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #7
  br label %328

224:                                              ; preds = %118
  %225 = getelementptr inbounds %"class.blink::V8ScriptRunner::RethrowErrorsOption", %"class.blink::V8ScriptRunner::RethrowErrorsOption"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 0, i64 16, i1 false) #7, !alias.scope !15
  %226 = call { i32, %"class.v8::Value"* } @_ZN5blink12ModuleScript23RunScriptAndReturnValueENS_14V8ScriptRunner19RethrowErrorsOptionE(%"class.blink::ModuleScript"* nonnull %1, %"class.blink::V8ScriptRunner::RethrowErrorsOption"* nonnull %24) #7
  %227 = extractvalue { i32, %"class.v8::Value"* } %226, 0
  %228 = load i8, i8* %225, align 8, !range !18
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %248, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"class.blink::V8ScriptRunner::RethrowErrorsOption", %"class.blink::V8ScriptRunner::RethrowErrorsOption"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #7
  br label %247

247:                                              ; preds = %246, %243, %230
  store i8 0, i8* %225, align 8
  br label %248

248:                                              ; preds = %224, %247
  %249 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %102, align 8
  %250 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %249) #7
  %251 = icmp eq %"class.blink::ExecutionContext"* %250, null
  %252 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %250, i64 -1, i32 22
  %253 = bitcast %"class.blink::DOMTimerCoordinator"* %252 to %"class.blink::WorkletGlobalScope"*
  %254 = select i1 %251, %"class.blink::WorkletGlobalScope"* null, %"class.blink::WorkletGlobalScope"* %253
  %255 = getelementptr inbounds %"class.blink::WorkletGlobalScope", %"class.blink::WorkletGlobalScope"* %254, i64 0, i32 0, i32 14
  %256 = load %"class.blink::WorkerReportingProxy"*, %"class.blink::WorkerReportingProxy"** %255, align 8
  %257 = icmp eq i32 %227, 1
  %258 = bitcast %"class.blink::WorkerReportingProxy"* %256 to void (%"class.blink::WorkerReportingProxy"*, i1)***
  %259 = load void (%"class.blink::WorkerReportingProxy"*, i1)**, void (%"class.blink::WorkerReportingProxy"*, i1)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.blink::WorkerReportingProxy"*, i1)*, void (%"class.blink::WorkerReportingProxy"*, i1)** %259, i64 14
  %261 = load void (%"class.blink::WorkerReportingProxy"*, i1)*, void (%"class.blink::WorkerReportingProxy"*, i1)** %260, align 8
  call void %261(%"class.blink::WorkerReportingProxy"* %256, i1 zeroext %257) #7
  %262 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 2, i32 0
  %263 = bitcast %"class.base::SingleThreadTaskRunner"** %262 to %"class.base::SequencedTaskRunner"**
  %264 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %263, align 8
  %265 = bitcast %"class.base::Location"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %265) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %25, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 93) #7
  %266 = bitcast <2 x i64>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %266) #7
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::WorkletPendingTasks"*)* @_ZN5blink19WorkletPendingTasks16DecrementCounterEv to i64), i64 0>, <2 x i64>* %27, align 16
  %267 = bitcast %"class.blink::CrossThreadPersistent"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %267) #7
  %268 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3, i32 0, i32 0
  %269 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %29, i64 0, i32 0
  %271 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %29, i64 0, i32 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %269, %"class.blink::WorkletPendingTasks"** %271, align 8, !alias.scope !19
  %272 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %29, i64 0, i32 0, i32 1
  %273 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %273, align 8, !alias.scope !19
  %274 = ptrtoint %"class.blink::WorkletPendingTasks"* %269 to i64
  switch i64 %274, label %275 [
    i64 0, label %294
    i64 -1, label %294
  ]

275:                                              ; preds = %248
  %276 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !19
  %277 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %276, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %277) #7, !noalias !19
  %278 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7, !noalias !19
  %279 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %278, i64 0, i32 0, i32 0
  %280 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %279, align 8, !noalias !19
  %281 = icmp eq %"class.blink::PersistentNode"* %280, null
  br i1 %281, label %282, label %285, !prof !2

282:                                              ; preds = %275
  %283 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %278, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %283) #7
  %284 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %279, align 8
  br label %285

285:                                              ; preds = %282, %275
  %286 = phi %"class.blink::PersistentNode"* [ %284, %282 ], [ %280, %275 ]
  %287 = bitcast %"class.blink::PersistentNode"* %286 to i64*
  %288 = load i64, i64* %287, align 8, !noalias !19
  %289 = bitcast %"class.blink::CrossThreadPersistentRegion"* %278 to i64*
  store i64 %288, i64* %289, align 8, !noalias !19
  %290 = bitcast %"class.blink::PersistentNode"* %286 to %"class.blink::PersistentBase.230"**
  store %"class.blink::PersistentBase.230"* %270, %"class.blink::PersistentBase.230"** %290, align 8, !noalias !19
  %291 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %286, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %291, align 8
  %292 = ptrtoint %"class.blink::PersistentNode"* %286 to i64
  %293 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %272 to i64*
  store atomic i64 %292, i64* %293 release, align 8, !alias.scope !19
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %277) #7
  br label %294

294:                                              ; preds = %248, %248, %285
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %26, { i64, i64 }* nonnull dereferenceable(16) %28, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %29)
  %295 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295)
  %296 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %296)
  %297 = bitcast %"class.base::SequencedTaskRunner"* %264 to %"class.base::TaskRunner"*
  %298 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %299 = bitcast %"class.WTF::CrossThreadOnceFunction"* %26 to i64*
  %300 = load i64, i64* %299, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %298, align 8
  %301 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %302 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %300, i64* %302, align 8, !alias.scope !22
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %301, align 8, !noalias !22
  %303 = bitcast %"class.base::SequencedTaskRunner"* %264 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %304 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %303, align 8
  %305 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %304, align 8
  %306 = call zeroext i1 %305(%"class.base::TaskRunner"* %297, %"class.base::Location"* nonnull dereferenceable(32) %25, %"class.base::OnceCallback"* nonnull %3, i64 0) #7
  %307 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %307) #7
  %308 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %308) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %296)
  %309 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %26, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %309) #7
  %310 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %272 to i64*
  %311 = load atomic i64, i64* %310 acquire, align 8
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %327, label %313

313:                                              ; preds = %294
  %314 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %315 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %314, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %315) #7
  %316 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %317 = load atomic i64, i64* %310 monotonic, align 8
  %318 = inttoptr i64 %317 to %"class.blink::PersistentNode"*
  %319 = icmp eq i64 %317, 0
  br i1 %319, label %326, label %320

320:                                              ; preds = %313
  %321 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %316, i64 0, i32 0, i32 0
  %322 = bitcast %"class.blink::CrossThreadPersistentRegion"* %316 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = inttoptr i64 %317 to i64*
  store i64 %323, i64* %324, align 8
  %325 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %318, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %325, align 8
  store %"class.blink::PersistentNode"* %318, %"class.blink::PersistentNode"** %321, align 8
  br label %326

326:                                              ; preds = %320, %313
  store atomic i64 0, i64* %310 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %315) #7
  br label %327

327:                                              ; preds = %294, %326
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %267) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %266) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %265) #7
  br label %328

328:                                              ; preds = %327, %223
  %329 = load %"class.v8::Context"*, %"class.v8::Context"** %101, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %329) #7
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %105) #7
  br label %330

330:                                              ; preds = %328, %98
  %331 = phi i8* [ %100, %328 ], [ %35, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %331) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EEDnEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16), i8** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.blink::CrossThreadPersistent", align 8
  %8 = bitcast %"class.blink::CrossThreadPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #7, !alias.scope !25
  %10 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !25
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #7, !noalias !25
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %12, align 8, !noalias !25
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"* nonnull %9, %"class.blink::WorkletPendingTasks"* %13) #7
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #7
  %14 = call i8* @_Znwm(i64 72) #8, !noalias !28
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EEDnEE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !28
  %16 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8, !noalias !28
  %18 = getelementptr inbounds i8, i8* %14, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %19, align 8, !noalias !28
  %20 = getelementptr inbounds i8, i8* %14, i64 48
  %21 = bitcast i8* %20 to %"class.blink::PersistentBase.230"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #7, !noalias !28
  %22 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !28
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #7, !noalias !28
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %25 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %24, align 8, !noalias !28
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"* %21, %"class.blink::WorkletPendingTasks"* %25) #7, !noalias !28
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #7, !noalias !28
  %26 = getelementptr inbounds i8, i8* %14, i64 64
  %27 = bitcast i8* %26 to i8**
  store i8* null, i8** %27, align 8, !noalias !28
  %28 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %30 = ptrtoint i8* %14 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8, !noalias !33
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %30, i64* %32, align 8, !alias.scope !33
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8, !noalias !33
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #7, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #7
  %35 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %36 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %35 to i64*
  %37 = load atomic i64, i64* %36 acquire, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %4
  %40 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %41 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %40, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %41) #7
  %42 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %43 = load atomic i64, i64* %36 monotonic, align 8
  %44 = inttoptr i64 %43 to %"class.blink::PersistentNode"*
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %42, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::CrossThreadPersistentRegion"* %42 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = inttoptr i64 %43 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %51, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %47, align 8
  br label %52

52:                                               ; preds = %46, %39
  store atomic i64 0, i64* %36 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %41) #7
  br label %53

53:                                               ; preds = %4, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret void
}

declare void @_ZN5blink19WorkletPendingTasks5AbortE13scoped_refptrINS_21SerializedScriptValueEE(%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::MicrotaskQueue"* @_ZN5blink16ToMicrotaskQueueEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateEPNS_14MicrotaskQueueENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, %"class.v8::MicrotaskQueue"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EES5_EEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16), %class.scoped_refptr.297* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.blink::CrossThreadPersistent", align 8
  %8 = bitcast %"class.blink::CrossThreadPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #7, !alias.scope !36
  %10 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !36
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #7, !noalias !36
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %12, align 8, !noalias !36
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"* nonnull %9, %"class.blink::WorkletPendingTasks"* %13) #7
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #7
  %14 = getelementptr inbounds %class.scoped_refptr.297, %class.scoped_refptr.297* %3, i64 0, i32 0
  %15 = bitcast %class.scoped_refptr.297* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %14, align 8
  %17 = call i8* @_Znwm(i64 72) #8, !noalias !39
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EES6_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !39
  %19 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8, !noalias !39
  %21 = getelementptr inbounds i8, i8* %17, i64 32
  %22 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %22, align 8, !noalias !39
  %23 = getelementptr inbounds i8, i8* %17, i64 48
  %24 = bitcast i8* %23 to %"class.blink::PersistentBase.230"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #7, !noalias !39
  %25 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !39
  %26 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %25, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %26) #7, !noalias !39
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %28 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %27, align 8, !noalias !39
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"* %24, %"class.blink::WorkletPendingTasks"* %28) #7, !noalias !39
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %26) #7, !noalias !39
  %29 = getelementptr inbounds i8, i8* %17, i64 64
  %30 = bitcast i8* %29 to i64*
  store i64 %16, i64* %30, align 8, !noalias !39
  %31 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = ptrtoint i8* %17 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8, !noalias !44
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %33, i64* %35, align 8, !alias.scope !44
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !44
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #7, !noalias !44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #7
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %39 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %38 to i64*
  %40 = load atomic i64, i64* %39 acquire, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %4
  %43 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %44 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %43, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %44) #7
  %45 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %46 = load atomic i64, i64* %39 monotonic, align 8
  %47 = inttoptr i64 %46 to %"class.blink::PersistentNode"*
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %45, i64 0, i32 0, i32 0
  %51 = bitcast %"class.blink::CrossThreadPersistentRegion"* %45 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = inttoptr i64 %46 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %47, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %54, align 8
  store %"class.blink::PersistentNode"* %47, %"class.blink::PersistentNode"** %50, align 8
  br label %55

55:                                               ; preds = %49, %42
  store atomic i64 0, i64* %39 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %44) #7
  br label %56

56:                                               ; preds = %4, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret void
}

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue29SerializeAndSwallowExceptionsEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZNK5blink12ModuleScript20CreateErrorToRethrowEv(%"class.blink::ScriptValue"* sret, %"class.blink::ModuleScript"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

declare { i32, %"class.v8::Value"* } @_ZN5blink12ModuleScript23RunScriptAndReturnValueENS_14V8ScriptRunner19RethrowErrorsOptionE(%"class.blink::ModuleScript"*, %"class.blink::V8ScriptRunner::RethrowErrorsOption"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink19WorkletPendingTasksEFvvEJNS1_21CrossThreadPersistentIS2_EEEEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.blink::CrossThreadPersistent", align 8
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #7, !alias.scope !47
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !47
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #7, !noalias !47
  %11 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %11, align 8, !noalias !47
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"* nonnull %8, %"class.blink::WorkletPendingTasks"* %12) #7
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #7
  %13 = call i8* @_Znwm(i64 64) #8, !noalias !50
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !50
  %15 = bitcast { i64, i64 }* %1 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8, !noalias !50
  %17 = getelementptr inbounds i8, i8* %13, i64 32
  %18 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %18, align 8, !noalias !50
  %19 = getelementptr inbounds i8, i8* %13, i64 48
  %20 = bitcast i8* %19 to %"class.blink::PersistentBase.230"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #7, !noalias !50
  %21 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7, !noalias !50
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #7, !noalias !50
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %24 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %23, align 8, !noalias !50
  call void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"* %20, %"class.blink::WorkletPendingTasks"* %24) #7, !noalias !50
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #7, !noalias !50
  %25 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = ptrtoint i8* %13 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8, !noalias !55
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %27, i64* %29, align 8, !alias.scope !55
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8, !noalias !55
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #7, !noalias !55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #7
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %33 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %32 to i64*
  %34 = load atomic i64, i64* %33 acquire, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %50, label %36

36:                                               ; preds = %3
  %37 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %38 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %37, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %38) #7
  %39 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %40 = load atomic i64, i64* %33 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::PersistentNode"*
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %39, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::CrossThreadPersistentRegion"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %40 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %44, align 8
  br label %49

49:                                               ; preds = %43, %36
  store atomic i64 0, i64* %33 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %38) #7
  br label %50

50:                                               ; preds = %3, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

declare void @_ZN5blink19WorkletPendingTasks16DecrementCounterEv(%"class.blink::WorkletPendingTasks"*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23WorkletModuleTreeClient5TraceEPNS_7VisitorE(%"class.blink::WorkletModuleTreeClient"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink16ModuleTreeClient18NameInHeapSnapshotEv(%"class.blink::ModuleTreeClient"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23WorkletModuleTreeClientD2Ev(%"class.blink::WorkletModuleTreeClient"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink23WorkletModuleTreeClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #7
  %10 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %11 = load atomic i64, i64* %4 monotonic, align 8
  %12 = inttoptr i64 %11 to %"class.blink::PersistentNode"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::CrossThreadPersistentRegion"* %10 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %12, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %12, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %14, %7
  store atomic i64 0, i64* %4 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #7
  br label %21

21:                                               ; preds = %1, %20
  %22 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 2, i32 0
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %23, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %32) #7
  br label %33

33:                                               ; preds = %21, %25, %30
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23WorkletModuleTreeClientD0Ev(%"class.blink::WorkletModuleTreeClient"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink23WorkletModuleTreeClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #7
  %10 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %11 = load atomic i64, i64* %4 monotonic, align 8
  %12 = inttoptr i64 %11 to %"class.blink::PersistentNode"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::CrossThreadPersistentRegion"* %10 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %12, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %12, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %14, %7
  store atomic i64 0, i64* %4 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #7
  br label %21

21:                                               ; preds = %20, %1
  %22 = getelementptr inbounds %"class.blink::WorkletModuleTreeClient", %"class.blink::WorkletModuleTreeClient"* %0, i64 0, i32 2, i32 0
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %23, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %32) #7
  br label %33

33:                                               ; preds = %21, %25, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EEDnEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::WorkletPendingTasks"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)**
  %21 = load void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)*, void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::WorkletPendingTasks"* %12, %"class.blink::SerializedScriptValue"* null) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EEDnEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #7
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #7
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #8
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.230"*, %"class.blink::WorkletPendingTasks"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.230", %"class.blink::PersistentBase.230"* %0, i64 0, i32 0
  store %"class.blink::WorkletPendingTasks"* %1, %"class.blink::WorkletPendingTasks"** %3, align 8
  %4 = ptrtoint %"class.blink::WorkletPendingTasks"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.230", %"class.blink::PersistentBase.230"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.230"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #7
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.230"**
  store %"class.blink::PersistentBase.230"* %0, %"class.blink::PersistentBase.230"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.230", %"class.blink::PersistentBase.230"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19WorkletPendingTasksELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WorkletPendingTasks"**
  %5 = load %"class.blink::WorkletPendingTasks"*, %"class.blink::WorkletPendingTasks"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #7
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #7
  %7 = icmp eq %"class.blink::WorkletPendingTasks"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WorkletPendingTasks"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19WorkletPendingTasksEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #7
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #7
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19WorkletPendingTasksEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkletPendingTasks"*
  tail call void @_ZNK5blink19WorkletPendingTasks5TraceEPNS_7VisitorE(%"class.blink::WorkletPendingTasks"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink19WorkletPendingTasks5TraceEPNS_7VisitorE(%"class.blink::WorkletPendingTasks"*, %"class.blink::Visitor"*) unnamed_addr #2

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EES7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::WorkletPendingTasks"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)**
  %21 = load void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)*, void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::WorkletPendingTasks"*, %"class.blink::SerializedScriptValue"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::SerializedScriptValue"**
  %28 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %27, align 8
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %27, align 8
  tail call void %25(%"class.blink::WorkletPendingTasks"* %12, %"class.blink::SerializedScriptValue"* %28) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EES6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.913"*
  tail call void @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EES6_EED2Ev(%"struct.base::internal::BindState.913"* nonnull %4) #7
  %5 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS2_21SerializedScriptValueEEEJNS2_21CrossThreadPersistentIS3_EES6_EED2Ev(%"struct.base::internal::BindState.913"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::BindState.913", %"struct.base::internal::BindState.913"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %2, align 8
  %4 = icmp eq %"class.blink::SerializedScriptValue"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %3) #7
  %10 = bitcast %"class.blink::SerializedScriptValue"* %3 to i8*
  tail call void @free(i8* %10) #7
  br label %11

11:                                               ; preds = %9, %5, %1
  %12 = getelementptr inbounds %"struct.base::internal::BindState.913", %"struct.base::internal::BindState.913"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %18 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %17, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #7
  %19 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %20 = load atomic i64, i64* %13 monotonic, align 8
  %21 = inttoptr i64 %20 to %"class.blink::PersistentNode"*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %19, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %19 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = inttoptr i64 %20 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %24, align 8
  br label %29

29:                                               ; preds = %23, %16
  store atomic i64 0, i64* %13 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #7
  br label %30

30:                                               ; preds = %11, %29
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19WorkletPendingTasksEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::WorkletPendingTasks"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::WorkletPendingTasks"*)**
  %21 = load void (%"class.blink::WorkletPendingTasks"*)*, void (%"class.blink::WorkletPendingTasks"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::WorkletPendingTasks"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::WorkletPendingTasks"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::WorkletPendingTasks"* %12) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19WorkletPendingTasksEFvvEJNS2_21CrossThreadPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #7
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #7
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #7
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #7
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #8
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!11 = distinct !{!11, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink14V8ScriptRunner19RethrowErrorsOption12DoNotRethrowEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink14V8ScriptRunner19RethrowErrorsOption12DoNotRethrowEv"}
!18 = !{i8 0, i8 2}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_: argument 0"}
!21 = distinct !{!21, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_19WorkletPendingTasksEEENS_21CrossThreadPersistentIT_EEPS3_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EEDnEEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EEDnEEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EEDnEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EEDnEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EES7_EEEDcOT0_DpOT1_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletPendingTasksEFv13scoped_refptrINS3_21SerializedScriptValueEEEJNS3_21CrossThreadPersistentIS4_EES7_EEEDcOT0_DpOT1_"}
!42 = distinct !{!42, !43, !"_ZN4base8BindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EES5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8BindOnceIMN5blink19WorkletPendingTasksEFv13scoped_refptrINS1_21SerializedScriptValueEEEJNS1_21CrossThreadPersistentIS2_EES5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink21CrossThreadPersistentINS1_19WorkletPendingTasksEEEE4CopyERKS4_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletPendingTasksEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19WorkletPendingTasksEFvvEJNS3_21CrossThreadPersistentIS4_EEEEEDcOT0_DpOT1_"}
!53 = distinct !{!53, !54, !"_ZN4base8BindOnceIMN5blink19WorkletPendingTasksEFvvEJNS1_21CrossThreadPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!54 = distinct !{!54, !"_ZN4base8BindOnceIMN5blink19WorkletPendingTasksEFvvEJNS1_21CrossThreadPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!57 = distinct !{!57, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
