; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/subband_nearend_detector.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/subband_nearend_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::SubbandNearendDetector" = type <{ %"class.webrtc::NearendDetector", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i64, %"class.std::__1::vector", float, float, i8, [7 x i8] }>
%"class.webrtc::NearendDetector" = type { i32 (...)** }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"*, %"class.std::__1::__compressed_pair.3" }
%"class.webrtc::aec3::MovingAverage" = type { i64, i64, float, %"class.std::__1::vector.0", i64 }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.webrtc::aec3::MovingAverage"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::array" = type { [65 x float] }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { %"struct.std::__1::array"*, i64 }

$_ZN6webrtc22SubbandNearendDetectorD2Ev = comdat any

$_ZN6webrtc22SubbandNearendDetectorD0Ev = comdat any

$_ZNK6webrtc22SubbandNearendDetector14IsNearendStateEv = comdat any

@_ZTVN6webrtc22SubbandNearendDetectorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::SubbandNearendDetector"*)* @_ZN6webrtc22SubbandNearendDetectorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::SubbandNearendDetector"*)* @_ZN6webrtc22SubbandNearendDetectorD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::SubbandNearendDetector"*)* @_ZNK6webrtc22SubbandNearendDetector14IsNearendStateEv to i8*), i8* bitcast (void (%"class.webrtc::SubbandNearendDetector"*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.rtc::ArrayView"*, i1)* @_ZN6webrtc22SubbandNearendDetector6UpdateEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEES7_S7_b to i8*)] }, align 8

@_ZN6webrtc22SubbandNearendDetectorC1ERKNS_20EchoCanceller3Config10Suppressor23SubbandNearendDetectionEm = hidden unnamed_addr alias void (%"class.webrtc::SubbandNearendDetector"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"*, i64), void (%"class.webrtc::SubbandNearendDetector"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"*, i64)* @_ZN6webrtc22SubbandNearendDetectorC2ERKNS_20EchoCanceller3Config10Suppressor23SubbandNearendDetectionEm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22SubbandNearendDetectorC2ERKNS_20EchoCanceller3Config10Suppressor23SubbandNearendDetectionEm(%"class.webrtc::SubbandNearendDetector"*, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"* nocapture readonly dereferenceable(48), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.webrtc::aec3::MovingAverage", align 8
  %5 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc22SubbandNearendDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1
  %7 = bitcast %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"* %6 to i8*
  %8 = bitcast %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 2
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3
  %11 = bitcast %"class.webrtc::aec3::MovingAverage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection"* %6, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  call void @_ZN6webrtc4aec313MovingAverageC1Emm(%"class.webrtc::aec3::MovingAverage"* nonnull %4, i64 65, i64 %13) #8
  %14 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #8
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %76, label %16

16:                                               ; preds = %3
  %17 = icmp ugt i64 %2, 329406144173384850
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #9
  unreachable

20:                                               ; preds = %16
  %21 = mul i64 %2, 56
  %22 = call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.webrtc::aec3::MovingAverage"*
  %24 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3, i32 0, i32 1
  %25 = bitcast %"class.webrtc::aec3::MovingAverage"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %23, i64 %2
  %28 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::aec3::MovingAverage"* %27, %"class.webrtc::aec3::MovingAverage"** %28, align 8
  %29 = bitcast %"class.webrtc::aec3::MovingAverage"** %24 to i64*
  %30 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %4, i64 0, i32 3
  %31 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %4, i64 0, i32 3, i32 0, i32 1
  %32 = bitcast float** %31 to i64*
  %33 = bitcast %"class.std::__1::vector.0"* %30 to i64*
  %34 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %4, i64 0, i32 4
  br label %35

35:                                               ; preds = %69, %20
  %36 = phi %"class.webrtc::aec3::MovingAverage"* [ %23, %20 ], [ %72, %69 ]
  %37 = bitcast %"class.webrtc::aec3::MovingAverage"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %11, i64 20, i1 false) #8
  %38 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %36, i64 0, i32 3
  %39 = bitcast %"class.std::__1::vector.0"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #8
  %40 = load i64, i64* %32, align 8
  %41 = load i64, i64* %33, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 2
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %69, label %45

45:                                               ; preds = %35
  %46 = icmp ugt i64 %43, 4611686018427387903
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::vector.0"* %38 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #9
  unreachable

49:                                               ; preds = %45
  %50 = call i8* @_Znwm(i64 %42) #10
  %51 = bitcast i8* %50 to float*
  %52 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %36, i64 0, i32 3, i32 0, i32 1
  %53 = bitcast float** %52 to i8**
  store i8* %50, i8** %53, align 8
  %54 = bitcast %"class.std::__1::vector.0"* %38 to i8**
  store i8* %50, i8** %54, align 8
  %55 = getelementptr inbounds float, float* %51, i64 %43
  %56 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %36, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store float* %55, float** %56, align 8
  %57 = load i64, i64* %32, align 8
  %58 = bitcast float** %52 to i64*
  %59 = ptrtoint i8* %50 to i64
  %60 = sub i64 %57, %41
  %61 = icmp sgt i64 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %49
  %63 = lshr exact i64 %60, 2
  %64 = inttoptr i64 %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %64, i64 %60, i1 false) #8
  %65 = getelementptr inbounds float, float* %51, i64 %63
  %66 = ptrtoint float* %65 to i64
  br label %67

67:                                               ; preds = %62, %49
  %68 = phi i64 [ %66, %62 ], [ %59, %49 ]
  store i64 %68, i64* %58, align 8
  br label %69

69:                                               ; preds = %67, %35
  %70 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %36, i64 0, i32 4
  %71 = load i64, i64* %34, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %36, i64 1
  %73 = icmp eq %"class.webrtc::aec3::MovingAverage"* %72, %27
  br i1 %73, label %74, label %35

74:                                               ; preds = %69
  %75 = ptrtoint %"class.webrtc::aec3::MovingAverage"* %27 to i64
  store i64 %75, i64* %29, align 8
  br label %76

76:                                               ; preds = %3, %74
  call void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #8
  %77 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 4
  %78 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 1, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %79, 1
  %83 = sub i64 %82, %81
  %84 = uitofp i64 %83 to float
  %85 = fdiv float 1.000000e+00, %84
  store float %85, float* %77, align 8
  %86 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 5
  %87 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 2, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 2, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %88, 1
  %92 = sub i64 %91, %90
  %93 = uitofp i64 %92 to float
  %94 = fdiv float 1.000000e+00, %93
  store float %94, float* %86, align 4
  %95 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 6
  store i8 0, i8* %95, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc4aec313MovingAverageC1Emm(%"class.webrtc::aec3::MovingAverage"*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc22SubbandNearendDetector6UpdateEN3rtc9ArrayViewIKNSt3__15arrayIfLm65EEELln4711EEES7_S7_b(%"class.webrtc::SubbandNearendDetector"* nocapture, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"* nocapture readnone, i64, %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"struct.std::__1::array", align 4
  %9 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 6
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 0
  %15 = bitcast %"struct.std::__1::array"* %8 to i8*
  %16 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 1, i32 0
  %19 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 1, i32 1
  %20 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 1
  %22 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 2, i32 0
  %23 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 2, i32 1
  %24 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 3
  %26 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 1, i32 4
  %27 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %14, align 8
  br label %29

28:                                               ; preds = %213, %7
  ret void

29:                                               ; preds = %13, %213
  %30 = phi i64 [ 0, %13 ], [ %216, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -1, i64 260, i1 false)
  %31 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %16, align 8
  %32 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %31, i64 %30
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 %30, i32 0, i64 0
  call void @_ZN6webrtc4aec313MovingAverage7AverageEN3rtc9ArrayViewIKfLln4711EEENS3_IfLln4711EEE(%"class.webrtc::aec3::MovingAverage"* %32, float* %33, i64 65, float* nonnull %17, i64 65) #8
  %34 = load i64, i64* %18, align 8
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %27, i64 %30, i32 0, i64 %34
  %36 = load i64, i64* %19, align 8
  %37 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %27, i64 %30, i32 0, i64 1
  %38 = getelementptr inbounds float, float* %37, i64 %36
  %39 = icmp eq float* %35, %38
  br i1 %39, label %88, label %40

40:                                               ; preds = %29
  %41 = sub i64 %36, %34
  %42 = and i64 %41, 4611686018427387903
  %43 = add i64 %41, 1
  %44 = and i64 %43, 7
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %40, %46
  %47 = phi float [ %51, %46 ], [ 0.000000e+00, %40 ]
  %48 = phi float* [ %52, %46 ], [ %35, %40 ]
  %49 = phi i64 [ %53, %46 ], [ %44, %40 ]
  %50 = load float, float* %48, align 4
  %51 = fadd float %47, %50
  %52 = getelementptr inbounds float, float* %48, i64 1
  %53 = add i64 %49, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %46, !llvm.loop !2

55:                                               ; preds = %46, %40
  %56 = phi float [ undef, %40 ], [ %51, %46 ]
  %57 = phi float [ 0.000000e+00, %40 ], [ %51, %46 ]
  %58 = phi float* [ %35, %40 ], [ %52, %46 ]
  %59 = icmp ult i64 %42, 7
  br i1 %59, label %88, label %60

60:                                               ; preds = %55, %60
  %61 = phi float [ %85, %60 ], [ %57, %55 ]
  %62 = phi float* [ %86, %60 ], [ %58, %55 ]
  %63 = load float, float* %62, align 4
  %64 = fadd float %61, %63
  %65 = getelementptr inbounds float, float* %62, i64 1
  %66 = load float, float* %65, align 4
  %67 = fadd float %64, %66
  %68 = getelementptr inbounds float, float* %62, i64 2
  %69 = load float, float* %68, align 4
  %70 = fadd float %67, %69
  %71 = getelementptr inbounds float, float* %62, i64 3
  %72 = load float, float* %71, align 4
  %73 = fadd float %70, %72
  %74 = getelementptr inbounds float, float* %62, i64 4
  %75 = load float, float* %74, align 4
  %76 = fadd float %73, %75
  %77 = getelementptr inbounds float, float* %62, i64 5
  %78 = load float, float* %77, align 4
  %79 = fadd float %76, %78
  %80 = getelementptr inbounds float, float* %62, i64 6
  %81 = load float, float* %80, align 4
  %82 = fadd float %79, %81
  %83 = getelementptr inbounds float, float* %62, i64 7
  %84 = load float, float* %83, align 4
  %85 = fadd float %82, %84
  %86 = getelementptr inbounds float, float* %62, i64 8
  %87 = icmp eq float* %86, %38
  br i1 %87, label %88, label %60

88:                                               ; preds = %55, %60, %29
  %89 = phi float [ 0.000000e+00, %29 ], [ %56, %55 ], [ %85, %60 ]
  %90 = load float, float* %20, align 8
  %91 = fmul float %89, %90
  %92 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 %34
  %93 = getelementptr inbounds float, float* %21, i64 %36
  %94 = icmp eq float* %92, %93
  br i1 %94, label %143, label %95

95:                                               ; preds = %88
  %96 = sub i64 %36, %34
  %97 = and i64 %96, 4611686018427387903
  %98 = add i64 %96, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %110, label %101

101:                                              ; preds = %95, %101
  %102 = phi float [ %106, %101 ], [ 0.000000e+00, %95 ]
  %103 = phi float* [ %107, %101 ], [ %92, %95 ]
  %104 = phi i64 [ %108, %101 ], [ %99, %95 ]
  %105 = load float, float* %103, align 4
  %106 = fadd float %102, %105
  %107 = getelementptr inbounds float, float* %103, i64 1
  %108 = add i64 %104, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %101, !llvm.loop !4

110:                                              ; preds = %101, %95
  %111 = phi float [ undef, %95 ], [ %106, %101 ]
  %112 = phi float [ 0.000000e+00, %95 ], [ %106, %101 ]
  %113 = phi float* [ %92, %95 ], [ %107, %101 ]
  %114 = icmp ult i64 %97, 7
  br i1 %114, label %143, label %115

115:                                              ; preds = %110, %115
  %116 = phi float [ %140, %115 ], [ %112, %110 ]
  %117 = phi float* [ %141, %115 ], [ %113, %110 ]
  %118 = load float, float* %117, align 4
  %119 = fadd float %116, %118
  %120 = getelementptr inbounds float, float* %117, i64 1
  %121 = load float, float* %120, align 4
  %122 = fadd float %119, %121
  %123 = getelementptr inbounds float, float* %117, i64 2
  %124 = load float, float* %123, align 4
  %125 = fadd float %122, %124
  %126 = getelementptr inbounds float, float* %117, i64 3
  %127 = load float, float* %126, align 4
  %128 = fadd float %125, %127
  %129 = getelementptr inbounds float, float* %117, i64 4
  %130 = load float, float* %129, align 4
  %131 = fadd float %128, %130
  %132 = getelementptr inbounds float, float* %117, i64 5
  %133 = load float, float* %132, align 4
  %134 = fadd float %131, %133
  %135 = getelementptr inbounds float, float* %117, i64 6
  %136 = load float, float* %135, align 4
  %137 = fadd float %134, %136
  %138 = getelementptr inbounds float, float* %117, i64 7
  %139 = load float, float* %138, align 4
  %140 = fadd float %137, %139
  %141 = getelementptr inbounds float, float* %117, i64 8
  %142 = icmp eq float* %141, %93
  br i1 %142, label %143, label %115

143:                                              ; preds = %110, %115, %88
  %144 = phi float [ 0.000000e+00, %88 ], [ %111, %110 ], [ %140, %115 ]
  %145 = fmul float %90, %144
  %146 = load i64, i64* %22, align 8
  %147 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 %146
  %148 = load i64, i64* %23, align 8
  %149 = getelementptr inbounds float, float* %21, i64 %148
  %150 = icmp eq float* %147, %149
  br i1 %150, label %199, label %151

151:                                              ; preds = %143
  %152 = sub i64 %148, %146
  %153 = and i64 %152, 4611686018427387903
  %154 = add i64 %152, 1
  %155 = and i64 %154, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %166, label %157

157:                                              ; preds = %151, %157
  %158 = phi float [ %162, %157 ], [ 0.000000e+00, %151 ]
  %159 = phi float* [ %163, %157 ], [ %147, %151 ]
  %160 = phi i64 [ %164, %157 ], [ %155, %151 ]
  %161 = load float, float* %159, align 4
  %162 = fadd float %158, %161
  %163 = getelementptr inbounds float, float* %159, i64 1
  %164 = add i64 %160, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %157, !llvm.loop !5

166:                                              ; preds = %157, %151
  %167 = phi float [ undef, %151 ], [ %162, %157 ]
  %168 = phi float [ 0.000000e+00, %151 ], [ %162, %157 ]
  %169 = phi float* [ %147, %151 ], [ %163, %157 ]
  %170 = icmp ult i64 %153, 7
  br i1 %170, label %199, label %171

171:                                              ; preds = %166, %171
  %172 = phi float [ %196, %171 ], [ %168, %166 ]
  %173 = phi float* [ %197, %171 ], [ %169, %166 ]
  %174 = load float, float* %173, align 4
  %175 = fadd float %172, %174
  %176 = getelementptr inbounds float, float* %173, i64 1
  %177 = load float, float* %176, align 4
  %178 = fadd float %175, %177
  %179 = getelementptr inbounds float, float* %173, i64 2
  %180 = load float, float* %179, align 4
  %181 = fadd float %178, %180
  %182 = getelementptr inbounds float, float* %173, i64 3
  %183 = load float, float* %182, align 4
  %184 = fadd float %181, %183
  %185 = getelementptr inbounds float, float* %173, i64 4
  %186 = load float, float* %185, align 4
  %187 = fadd float %184, %186
  %188 = getelementptr inbounds float, float* %173, i64 5
  %189 = load float, float* %188, align 4
  %190 = fadd float %187, %189
  %191 = getelementptr inbounds float, float* %173, i64 6
  %192 = load float, float* %191, align 4
  %193 = fadd float %190, %192
  %194 = getelementptr inbounds float, float* %173, i64 7
  %195 = load float, float* %194, align 4
  %196 = fadd float %193, %195
  %197 = getelementptr inbounds float, float* %173, i64 8
  %198 = icmp eq float* %197, %149
  br i1 %198, label %199, label %171

199:                                              ; preds = %166, %171, %143
  %200 = phi float [ 0.000000e+00, %143 ], [ %167, %166 ], [ %196, %171 ]
  %201 = load i8, i8* %9, align 8, !range !6
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %213

203:                                              ; preds = %199
  %204 = load float, float* %24, align 4
  %205 = fmul float %200, %204
  %206 = load float, float* %25, align 8
  %207 = fmul float %206, %205
  %208 = fcmp olt float %145, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %203
  %210 = load float, float* %26, align 4
  %211 = fmul float %91, %210
  %212 = fcmp ogt float %145, %211
  br label %213

213:                                              ; preds = %199, %203, %209
  %214 = phi i1 [ true, %199 ], [ false, %203 ], [ %212, %209 ]
  %215 = zext i1 %214 to i8
  store i8 %215, i8* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %15) #8
  %216 = add nuw i64 %30, 1
  %217 = load i64, i64* %10, align 8
  %218 = icmp ult i64 %216, %217
  br i1 %218, label %29, label %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6webrtc4aec313MovingAverage7AverageEN3rtc9ArrayViewIKfLln4711EEENS3_IfLln4711EEE(%"class.webrtc::aec3::MovingAverage"*, float*, i64, float*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc22SubbandNearendDetectorD2Ev(%"class.webrtc::SubbandNearendDetector"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc22SubbandNearendDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %4, align 8
  %6 = icmp eq %"class.webrtc::aec3::MovingAverage"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.webrtc::aec3::MovingAverage"* %5 to i8*
  %9 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %9, align 8
  %11 = icmp eq %"class.webrtc::aec3::MovingAverage"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.webrtc::aec3::MovingAverage"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %13, i64 -1
  tail call void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"* %14) #8
  %15 = icmp eq %"class.webrtc::aec3::MovingAverage"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.webrtc::aec3::MovingAverage"* %5, %"class.webrtc::aec3::MovingAverage"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc22SubbandNearendDetectorD0Ev(%"class.webrtc::SubbandNearendDetector"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc22SubbandNearendDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %4, align 8
  %6 = icmp eq %"class.webrtc::aec3::MovingAverage"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.webrtc::aec3::MovingAverage"* %5 to i8*
  %9 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.webrtc::aec3::MovingAverage"*, %"class.webrtc::aec3::MovingAverage"** %9, align 8
  %11 = icmp eq %"class.webrtc::aec3::MovingAverage"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.webrtc::aec3::MovingAverage"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.webrtc::aec3::MovingAverage", %"class.webrtc::aec3::MovingAverage"* %13, i64 -1
  tail call void @_ZN6webrtc4aec313MovingAverageD1Ev(%"class.webrtc::aec3::MovingAverage"* %14) #8
  %15 = icmp eq %"class.webrtc::aec3::MovingAverage"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.webrtc::aec3::MovingAverage"* %5, %"class.webrtc::aec3::MovingAverage"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %"class.webrtc::SubbandNearendDetector"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc22SubbandNearendDetector14IsNearendStateEv(%"class.webrtc::SubbandNearendDetector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SubbandNearendDetector", %"class.webrtc::SubbandNearendDetector"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !6
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = !{i8 0, i8 2}
