; ModuleID = '../../media/base/audio_discard_helper.cc'
source_filename = "../../media/base/audio_discard_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AudioDiscardHelper" = type { i32, i64, %"class.media::AudioTimestampHelper", i64, %"class.base::TimeDelta", i8, %"struct.std::__1::pair", i64 }
%"class.media::AudioTimestampHelper" = type { double, %"class.base::TimeDelta", i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::pair" = type { %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.media::DecoderBuffer" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", %"class.base::TimeDelta", %"class.base::TimeDelta", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"struct.std::__1::pair", i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.media::ReadOnlyUnalignedMapping"* }
%"class.media::ReadOnlyUnalignedMapping" = type { %"class.base::ReadOnlySharedMemoryMapping", i64, i64 }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.media::UnalignedSharedMemory"* }
%"class.media::UnalignedSharedMemory" = type { %"class.base::subtle::PlatformSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping", i8, i64, i8* }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.20" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"class.media::AudioBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.29", i32, i32, i32, i32, i32, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.std::__1::unique_ptr.30", i64, %"class.std::__1::vector.33", %class.scoped_refptr }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i8**, i8**, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i8** }
%class.scoped_refptr = type { %"class.media::AudioBufferMemoryPool"* }
%"class.media::AudioBufferMemoryPool" = type { %"class.base::RefCountedThreadSafe.40", %"class.base::Lock", %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@.str = private unnamed_addr constant [42 x i8] c"frames_discarded_so_far <= decoder_delay_\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../media/base/audio_discard_helper.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

@_ZN5media18AudioDiscardHelperC1Eimb = hidden unnamed_addr alias void (%"class.media::AudioDiscardHelper"*, i32, i64, i1), void (%"class.media::AudioDiscardHelper"*, i32, i64, i1)* @_ZN5media18AudioDiscardHelperC2Eimb
@_ZN5media18AudioDiscardHelperD1Ev = hidden unnamed_addr alias void (%"class.media::AudioDiscardHelper"*), void (%"class.media::AudioDiscardHelper"*)* @_ZN5media18AudioDiscardHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18AudioDiscardHelperC2Eimb(%"class.media::AudioDiscardHelper"*, i32, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 2
  tail call void @_ZN5media20AudioTimestampHelperC1Ei(%"class.media::AudioTimestampHelper"* %8, i32 %1) #7
  %9 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 3
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -9223372036854775808>, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 5
  store i8 %5, i8* %11, align 8
  %12 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 6
  %13 = bitcast %"struct.std::__1::pair"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN5media20AudioTimestampHelperC1Ei(%"class.media::AudioTimestampHelper"*, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media18AudioDiscardHelperD2Ev(%"class.media::AudioDiscardHelper"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5media18AudioDiscardHelper17TimeDeltaToFramesEN4base9TimeDeltaE(%"class.media::AudioDiscardHelper"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = add i64 %1, -9223372036854775807
  %4 = icmp ult i64 %3, 2
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = sitofp i64 %1 to double
  %7 = fdiv double %6, 1.000000e+06
  br label %11

8:                                                ; preds = %2
  %9 = icmp slt i64 %1, 0
  %10 = select i1 %9, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %11

11:                                               ; preds = %5, %8
  %12 = phi double [ %10, %8 ], [ %7, %5 ]
  %13 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = sitofp i32 %14 to double
  %16 = fmul double %12, %15
  %17 = fadd double %16, 5.000000e-01
  %18 = fptoui double %17 to i64
  ret i64 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18AudioDiscardHelper5ResetEm(%"class.media::AudioDiscardHelper"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 3
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 4, i32 0
  store i64 -9223372036854775808, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 2
  tail call void @_ZN5media20AudioTimestampHelper16SetBaseTimestampEN4base9TimeDeltaE(%"class.media::AudioTimestampHelper"* %5, i64 -9223372036854775808) #7
  %6 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN5media20AudioTimestampHelper16SetBaseTimestampEN4base9TimeDeltaE(%"class.media::AudioTimestampHelper"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media18AudioDiscardHelper14ProcessBuffersERKNS_13DecoderBufferEPNS_11AudioBufferE(%"class.media::AudioDiscardHelper"*, %"class.media::DecoderBuffer"* nocapture readonly dereferenceable(112), %"class.media::AudioBuffer"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 4, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %1, i64 0, i32 4, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %11, i64* %13, align 8
  %14 = icmp eq i64 %9, -9223372036854775808
  %15 = icmp sle i64 %9, %11
  %16 = or i1 %14, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %9) #7
  %19 = load i64, i64* %10, align 8
  br label %20

20:                                               ; preds = %3, %17
  %21 = phi i64 [ %11, %3 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i64 %21, i64* %8, align 8
  %22 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 2
  %23 = call i64 @_ZNK5media20AudioTimestampHelper14base_timestampEv(%"class.media::AudioTimestampHelper"* %22) #7
  %24 = icmp eq i64 %23, -9223372036854775808
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = load i64, i64* %10, align 8
  %27 = icmp sgt i64 %26, 0
  %28 = select i1 %27, i64 %26, i64 0
  call void @_ZN5media20AudioTimestampHelper16SetBaseTimestampEN4base9TimeDeltaE(%"class.media::AudioTimestampHelper"* %22, i64 %28) #7
  br label %29

29:                                               ; preds = %20, %25
  %30 = icmp eq %"class.media::AudioBuffer"* %2, null
  br i1 %30, label %31, label %42

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 5
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %200, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %1, i64 0, i32 12, i32 0, i32 0
  %37 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %1, i64 0, i32 12, i32 1, i32 0
  %40 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 6, i32 1, i32 0
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %40, align 8
  br label %200

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 6
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %1, i64 0, i32 12, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %1, i64 0, i32 12, i32 1, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 5
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 6, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  store i64 %47, i64* %54, align 8
  %56 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 6, i32 1, i32 0
  %57 = load i64, i64* %56, align 8
  store i64 %49, i64* %56, align 8
  br label %58

58:                                               ; preds = %42, %53
  %59 = phi i64 [ %47, %42 ], [ %55, %53 ]
  %60 = phi i64 [ %49, %42 ], [ %57, %53 ]
  %61 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %58
  %65 = load i32, i32* %43, align 4
  %66 = sext i32 %65 to i64
  %67 = icmp ugt i64 %62, %66
  %68 = select i1 %67, i64 %66, i64 %62
  %69 = sub i64 %62, %68
  store i64 %69, i64* %61, align 8
  %70 = icmp ult i64 %62, %66
  br i1 %70, label %71, label %200

71:                                               ; preds = %64
  %72 = trunc i64 %68 to i32
  call void @_ZN5media11AudioBuffer9TrimStartEi(%"class.media::AudioBuffer"* nonnull %2, i32 %72) #7
  br label %73

73:                                               ; preds = %71, %58
  %74 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 7
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %75
  %81 = trunc i64 %80 to i32
  %82 = trunc i64 %79 to i32
  call void @_ZN5media11AudioBuffer9TrimRangeEii(%"class.media::AudioBuffer"* nonnull %2, i32 %81, i32 %82) #7
  store i64 0, i64* %74, align 8
  br label %83

83:                                               ; preds = %73, %77
  %84 = icmp sgt i64 %59, 0
  br i1 %84, label %85, label %158

85:                                               ; preds = %83
  %86 = load i32, i32* %43, align 4
  %87 = sext i32 %86 to i64
  %88 = icmp eq i64 %59, 9223372036854775807
  br i1 %88, label %89, label %112

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %144, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %1, i64 0, i32 5, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, -9223372036854775807
  %97 = icmp ult i64 %96, 2
  br i1 %97, label %101, label %98

98:                                               ; preds = %93
  %99 = sitofp i64 %95 to double
  %100 = fdiv double %99, 1.000000e+06
  br label %104

101:                                              ; preds = %93
  %102 = icmp slt i64 %95, 0
  %103 = select i1 %102, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %104

104:                                              ; preds = %101, %98
  %105 = phi double [ %103, %101 ], [ %100, %98 ]
  %106 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = sitofp i32 %107 to double
  %109 = fmul double %105, %108
  %110 = fadd double %109, 5.000000e-01
  %111 = fptoui double %110 to i64
  br label %124

112:                                              ; preds = %85
  %113 = sitofp i64 %59 to double
  %114 = fdiv double %113, 1.000000e+06
  %115 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = sitofp i32 %116 to double
  %118 = fmul double %114, %117
  %119 = fadd double %118, 5.000000e-01
  %120 = fptoui double %119 to i64
  %121 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %144, label %124

124:                                              ; preds = %104, %112
  %125 = phi i64 [ %111, %104 ], [ %120, %112 ]
  %126 = phi i64 [ %91, %104 ], [ %122, %112 ]
  %127 = sub nsw i64 %45, %87
  %128 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #7
  %129 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %129, align 8
  %130 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130)
  %131 = icmp ult i64 %126, %127
  br i1 %131, label %133, label %132

132:                                              ; preds = %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130)
  store i8* null, i8** %129, align 8
  br label %142

133:                                              ; preds = %124
  %134 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %127) #7
  %135 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %126) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i8* %134, i8* %135) #7
  %136 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130)
  store i8* %137, i8** %129, align 8
  %138 = icmp eq i8* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 152, %"class.logging::CheckOpResult"* nonnull %6) #7
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #7
  br label %142

142:                                              ; preds = %132, %133, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #7
  %143 = sub i64 %126, %127
  br label %144

144:                                              ; preds = %89, %112, %142
  %145 = phi i64 [ %125, %142 ], [ %120, %112 ], [ %87, %89 ]
  %146 = phi i64 [ %143, %142 ], [ 0, %112 ], [ 0, %89 ]
  %147 = icmp ult i64 %146, %87
  br i1 %147, label %148, label %200

148:                                              ; preds = %144
  %149 = sub i64 %87, %146
  %150 = icmp ult i64 %149, %145
  %151 = select i1 %150, i64 %149, i64 %145
  %152 = sub i64 %145, %151
  store i64 %152, i64* %61, align 8
  %153 = icmp eq i64 %151, %87
  br i1 %153, label %200, label %154

154:                                              ; preds = %148
  %155 = trunc i64 %146 to i32
  %156 = add i64 %151, %146
  %157 = trunc i64 %156 to i32
  call void @_ZN5media11AudioBuffer9TrimRangeEii(%"class.media::AudioBuffer"* nonnull %2, i32 %155, i32 %157) #7
  br label %158

158:                                              ; preds = %154, %83
  %159 = icmp sgt i64 %60, 0
  br i1 %159, label %160, label %196

160:                                              ; preds = %158
  %161 = load i32, i32* %43, align 4
  %162 = sext i32 %161 to i64
  %163 = add nsw i64 %60, -9223372036854775807
  %164 = icmp ult i64 %163, 2
  br i1 %164, label %168, label %165

165:                                              ; preds = %160
  %166 = sitofp i64 %60 to double
  %167 = fdiv double %166, 1.000000e+06
  br label %168

168:                                              ; preds = %160, %165
  %169 = phi double [ %167, %165 ], [ 0x7FF0000000000000, %160 ]
  %170 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = sitofp i32 %171 to double
  %173 = fmul double %169, %172
  %174 = fadd double %173, 5.000000e-01
  %175 = fptoui double %174 to i64
  %176 = getelementptr inbounds %"class.media::AudioDiscardHelper", %"class.media::AudioDiscardHelper"* %0, i64 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %168
  %180 = icmp ult i64 %177, %45
  br i1 %180, label %181, label %200

181:                                              ; preds = %179
  %182 = icmp ugt i64 %177, %175
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  store i64 %177, i64* %61, align 8
  %184 = sub i64 %175, %177
  br label %187

185:                                              ; preds = %181
  %186 = load i64, i64* %74, align 8
  store i64 %175, i64* %74, align 8
  br label %187

187:                                              ; preds = %168, %183, %185
  %188 = phi i64 [ %175, %168 ], [ %186, %185 ], [ %184, %183 ]
  %189 = icmp ugt i64 %188, %162
  br i1 %189, label %200, label %190

190:                                              ; preds = %187
  %191 = icmp eq i64 %188, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %190
  %193 = icmp eq i64 %188, %162
  br i1 %193, label %200, label %194

194:                                              ; preds = %192
  %195 = trunc i64 %188 to i32
  call void @_ZN5media11AudioBuffer7TrimEndEi(%"class.media::AudioBuffer"* nonnull %2, i32 %195) #7
  br label %196

196:                                              ; preds = %190, %194, %158
  %197 = call i64 @_ZNK5media20AudioTimestampHelper12GetTimestampEv(%"class.media::AudioTimestampHelper"* %22) #7
  %198 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 8, i32 0
  store i64 %197, i64* %198, align 8
  %199 = load i32, i32* %43, align 4
  call void @_ZN5media20AudioTimestampHelper9AddFramesEi(%"class.media::AudioTimestampHelper"* %22, i32 %199) #7
  br label %200

200:                                              ; preds = %64, %148, %144, %196, %179, %187, %192, %35, %31
  %201 = phi i1 [ false, %31 ], [ false, %35 ], [ true, %196 ], [ false, %64 ], [ false, %179 ], [ false, %187 ], [ false, %192 ], [ false, %144 ], [ false, %148 ]
  ret i1 %201
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5media11AudioBuffer9TrimStartEi(%"class.media::AudioBuffer"*, i32) local_unnamed_addr #1

declare void @_ZN5media11AudioBuffer9TrimRangeEii(%"class.media::AudioBuffer"*, i32, i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN5media11AudioBuffer7TrimEndEi(%"class.media::AudioBuffer"*, i32) local_unnamed_addr #1

declare i64 @_ZNK5media20AudioTimestampHelper12GetTimestampEv(%"class.media::AudioTimestampHelper"*) local_unnamed_addr #1

declare void @_ZN5media20AudioTimestampHelper9AddFramesEi(%"class.media::AudioTimestampHelper"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #7
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #7
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #7
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i64 @_ZNK5media20AudioTimestampHelper14base_timestampEv(%"class.media::AudioTimestampHelper"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
