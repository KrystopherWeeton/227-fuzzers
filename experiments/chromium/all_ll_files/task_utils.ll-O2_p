; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/core/task_utils.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/task/core/task_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ifstream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_filebuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_filebuf" = type <{ %"class.std::__1::basic_streambuf", i8*, i8*, i8*, [8 x i8], i64, i8*, i64, %struct._IO_FILE*, %"class.std::__1::codecvt"*, %struct.__mbstate_t, %struct.__mbstate_t, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::codecvt" = type { %"class.std::__1::locale::facet" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%struct.__mbstate_t = type { i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_istream" = type { i32 (...)**, i64, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [40 x i8] c"Invalid tensor type for dequantization \00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c". Requested kTfLiteUInt8, kTfLiteInt8 or kTfLiteInt16, got \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"\0AFATAL\0A\00", align 1
@_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE = external unnamed_addr constant [4 x i8*], align 8

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN6tflite4task4core10DequantizeERK12TfLiteTensori(%struct.TfLiteTensor* readonly dereferenceable(112), i32) local_unnamed_addr #0 {
  %3 = alloca [5 x %"class.absl::string_view"], align 16
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %37 [
    i32 3, label %7
    i32 9, label %17
    i32 7, label %27
  ]

7:                                                ; preds = %2
  %8 = icmp eq %struct.TfLiteTensor* %0, null
  %9 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %10 = bitcast %union.TfLitePtrUnion* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = select i1 %8, i8* null, i8* %11
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  br label %82

17:                                               ; preds = %2
  %18 = icmp eq %struct.TfLiteTensor* %0, null
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %20 = bitcast %union.TfLitePtrUnion* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %18, i8* null, i8* %21
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  br label %82

27:                                               ; preds = %2
  %28 = icmp eq %struct.TfLiteTensor* %0, null
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %30 = bitcast %union.TfLitePtrUnion* %29 to i16**
  %31 = load i16*, i16** %30, align 8
  %32 = select i1 %28, i16* null, i16* %31
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = sext i16 %35 to i32
  br label %82

37:                                               ; preds = %2
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 7
  %41 = load i8*, i8** %40, align 8
  %42 = ptrtoint i8* %41 to i64
  %43 = icmp eq i8* %41, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = tail call i64 @strlen(i8* nonnull %41) #11
  %46 = icmp sgt i64 %45, -1
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %44
  tail call void @llvm.trap() #11
  unreachable

48:                                               ; preds = %44, %37
  %49 = phi i64 [ 0, %37 ], [ %45, %44 ]
  %50 = tail call i8* @TfLiteTypeGetName(i32 %6) #11
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp eq i8* %50, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = tail call i64 @strlen(i8* nonnull %50) #11
  %55 = icmp sgt i64 %54, -1
  br i1 %55, label %57, label %56, !prof !2

56:                                               ; preds = %53
  tail call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %53, %48
  %58 = phi i64 [ 0, %48 ], [ %54, %53 ]
  %59 = bitcast [5 x %"class.absl::string_view"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %59) #11, !noalias !3
  %60 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %61 = bitcast [5 x %"class.absl::string_view"]* %3 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([40 x i8]* @.str.2 to i64), i64 39>, <2 x i64>* %61, align 16, !noalias !3
  %62 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %63 = bitcast i8** %62 to i64*
  store i64 %42, i64* %63, align 16, !noalias !3
  %64 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 1
  store i64 %49, i64* %64, align 8, !noalias !3
  %65 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %66 = bitcast i8** %65 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([60 x i8]* @.str.3 to i64), i64 59>, <2 x i64>* %66, align 16, !noalias !3
  %67 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %68 = bitcast i8** %67 to i64*
  store i64 %51, i64* %68, align 16, !noalias !3
  %69 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  store i64 %58, i64* %69, align 8, !noalias !3
  %70 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %71 = bitcast i8** %70 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([2 x i8]* @.str.4 to i64), i64 1>, <2 x i64>* %71, align 16, !noalias !3
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.absl::string_view"* nonnull %60, i64 5) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %59) #11, !noalias !3
  %72 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = select i1 %75, i8* %77, i8* %39
  %79 = call i32 @fputs(i8* %78, %struct._IO_FILE* %38) #12
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %81 = call i64 @fwrite(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %80) #12
  call void @abort() #13
  unreachable

82:                                               ; preds = %27, %17, %7
  %83 = phi i32 [ %36, %27 ], [ %26, %17 ], [ %16, %7 ]
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 3, i32 0
  %85 = load float, float* %84, align 8
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 3, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sub nsw i32 %83, %87
  %89 = sitofp i32 %88 to float
  %90 = fmul float %85, %89
  %91 = fpext float %90 to double
  ret double %91
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(%"class.std::__1::basic_string"*) unnamed_addr #3 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task4core16GetStringAtIndexEPK12TfLiteTensori(%"class.std::__1::basic_string"* noalias sret, %struct.TfLiteTensor*, i32) local_unnamed_addr #0 {
  %4 = tail call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %1, i32 %2) #11
  %5 = extractvalue { i8*, i32 } %4, 0
  %6 = extractvalue { i8*, i32 } %4, 1
  %7 = sext i32 %6 to i64
  %8 = icmp ugt i32 %6, -17
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %10) #13
  unreachable

11:                                               ; preds = %3
  %12 = icmp ult i32 %6, 23
  br i1 %12, label %21, label %13

13:                                               ; preds = %11
  %14 = add nuw nsw i64 %7, 16
  %15 = and i64 %14, -16
  %16 = tail call i8* @_Znwm(i64 %15) #14
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = or i64 %15, -9223372036854775808
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %7, i64* %20, align 8
  br label %27

21:                                               ; preds = %11
  %22 = trunc i32 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %26 = icmp eq i32 %6, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %21, %13
  %28 = phi i8* [ %16, %13 ], [ %25, %21 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %5, i64 %7, i1 false) #11
  br label %29

29:                                               ; preds = %21, %27
  %30 = phi i8* [ %25, %21 ], [ %28, %27 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %7
  store i8 0, i8* %31, align 1
  ret void
}

declare { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite4task4core17LoadBinaryContentEPKc(%"class.std::__1::basic_string"* noalias sret, i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_ifstream", align 8
  %4 = bitcast %"class.std::__1::basic_ifstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 328, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 1) to i64*), align 8
  %11 = bitcast %"class.std::__1::basic_ifstream"* %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 2) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_ifstream"* %3 to i8**
  %14 = inttoptr i64 %10 to i8*
  %15 = getelementptr i8, i8* %14, i64 -24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 %17
  %19 = bitcast i8* %18 to i64*
  store i64 %12, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 0, i32 1
  store i64 0, i64* %20, align 8
  %21 = load i8*, i8** %13, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_filebuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #11
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC1Ev(%"class.std::__1::basic_filebuf"* %9) #11
  %32 = call %"class.std::__1::basic_filebuf"* @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4openEPKcj(%"class.std::__1::basic_filebuf"* %9, i8* %1, i32 14) #11
  %33 = icmp eq %"class.std::__1::basic_filebuf"* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %2
  %35 = load i8*, i8** %13, align 8
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %4, i64 %38
  %40 = bitcast i8* %39 to %"class.std::__1::ios_base"*
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = or i32 %43, 4
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %40, i32 %44) #11
  br label %45

45:                                               ; preds = %2, %34
  %46 = bitcast %"class.std::__1::basic_ifstream"* %3 to %"class.std::__1::basic_istream"*
  %47 = call { i64, i64 } @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5tellgEv(%"class.std::__1::basic_istream"* nonnull %46) #11
  %48 = extractvalue { i64, i64 } %47, 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %52 = icmp ugt i64 %48, -17
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 -86, i64 24, i1 false)
  br i1 %52, label %54, label %56

54:                                               ; preds = %45
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %55) #13
  unreachable

56:                                               ; preds = %45
  %57 = icmp ult i64 %48, 23
  br i1 %57, label %65, label %58

58:                                               ; preds = %56
  %59 = add nuw i64 %48, 16
  %60 = and i64 %59, -16
  %61 = call i8* @_Znwm(i64 %60) #14
  store i8* %61, i8** %49, align 8
  %62 = or i64 %60, -9223372036854775808
  store i64 %62, i64* %51, align 8
  store i64 %48, i64* %50, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %71

65:                                               ; preds = %56
  %66 = trunc i64 %48 to i8
  %67 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  store i8 %66, i8* %68, align 1
  %69 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %70 = icmp eq i64 %48, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %65, %58
  %72 = phi i8* [ %69, %65 ], [ %64, %58 ]
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %65 ], [ %63, %58 ]
  %74 = phi i8* [ %69, %65 ], [ %61, %58 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 0, i64 %48, i1 false) #11
  br label %75

75:                                               ; preds = %65, %71
  %76 = phi i8* [ %69, %65 ], [ %72, %71 ]
  %77 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %65 ], [ %73, %71 ]
  %78 = phi i8* [ %69, %65 ], [ %74, %71 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 %48
  store i8 0, i8* %79, align 1
  %80 = call dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE(%"class.std::__1::basic_istream"* nonnull %46, i64 0, i32 0) #11
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = load i8*, i8** %49, align 8
  %85 = select i1 %83, i8* %84, i8* %76
  %86 = call dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4readEPcl(%"class.std::__1::basic_istream"* nonnull %46, i8* %85, i64 %48) #11
  %87 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE to i64*), align 8
  store i64 %87, i64* %11, align 8
  %88 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 3) to i64*), align 8
  %89 = inttoptr i64 %87 to i8*
  %90 = getelementptr i8, i8* %89, i64 -24
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds i8, i8* %4, i64 %92
  %94 = bitcast i8* %93 to i64*
  store i64 %88, i64* %94, align 8
  call void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_filebuf"* %9) #11
  call void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_istream"* nonnull %46, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE, i64 0, i64 1)) #11
  %95 = getelementptr inbounds %"class.std::__1::basic_ifstream", %"class.std::__1::basic_ifstream"* %3, i64 0, i32 2
  %96 = bitcast %"class.std::__1::basic_ios.base"* %95 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %96) #11
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare { i64, i64 } @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5tellgEv(%"class.std::__1::basic_istream"*) local_unnamed_addr #2

declare dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE(%"class.std::__1::basic_istream"*, i64, i32) local_unnamed_addr #2

declare dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE4readEPcl(%"class.std::__1::basic_istream"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_filebuf"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_istream"*, i8**) unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #2

declare void @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC1Ev(%"class.std::__1::basic_filebuf"*) unnamed_addr #2

declare %"class.std::__1::basic_filebuf"* @_ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4openEPKcj(%"class.std::__1::basic_filebuf"*, i8*, i32) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind }
attributes #12 = { cold }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
