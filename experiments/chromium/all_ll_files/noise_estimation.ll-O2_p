; ModuleID = '../../third_party/webrtc/modules/video_processing/util/noise_estimation.cc'
source_filename = "../../third_party/webrtc/modules/video_processing/util/noise_estimation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::NoiseEstimation" = type { i32, i32, i32, i32, i32, i32, i32, i32, double, double, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15NoiseEstimation4InitEiiNS_7CpuTypeE(%"class.webrtc::NoiseEstimation"* nocapture, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = ashr i32 %1, 4
  %6 = ashr i32 %2, 4
  %7 = mul nsw i32 %6, %5
  %8 = sext i32 %7 to i64
  %9 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %8, i64 4)
  %10 = extractvalue { i64, i1 } %9, 1
  %11 = extractvalue { i64, i1 } %9, 0
  %12 = select i1 %10, i64 -1, i64 %11
  %13 = tail call i8* @_Znam(i64 %12) #6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 %12, i1 false)
  %14 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = bitcast i32** %14 to i8**
  store i8* %13, i8** %16, align 8
  %17 = icmp eq i32* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %4
  %19 = bitcast i32* %15 to i8*
  tail call void @_ZdaPv(i8* %19) #6
  br label %20

20:                                               ; preds = %4, %18
  %21 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 0
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 1
  store i32 %2, i32* %22, align 4
  %23 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 3
  store i32 %5, i32* %23, align 4
  %24 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 2
  store i32 %6, i32* %24, align 8
  %25 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 6
  store i32 %3, i32* %25, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc15NoiseEstimation8GetNoiseEijj(%"class.webrtc::NoiseEstimation"* nocapture, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 %5
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = load i32*, i32** %6, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 %5
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, 5
  %18 = add i32 %3, -1344
  %19 = icmp ult i32 %18, 12736
  %20 = and i1 %19, %17
  br i1 %20, label %21, label %32

21:                                               ; preds = %4
  %22 = lshr i32 %3, 10
  %23 = udiv i32 %2, %22
  %24 = icmp slt i32 %23, 300
  %25 = select i1 %24, i32 %23, i32 300
  %26 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %25, %27
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 8
  br label %32

32:                                               ; preds = %21, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc15NoiseEstimation17ResetConsecLowVarEi(%"class.webrtc::NoiseEstimation"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 %3
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc15NoiseEstimation16UpdateNoiseLevelEv(%"class.webrtc::NoiseEstimation"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to double
  %5 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %6 to double
  %8 = fmul double %7, 6.500000e-01
  %9 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = sitofp i32 %10 to double
  %12 = fmul double %8, %11
  %13 = fdiv double %12, 4.100000e+01
  %14 = fcmp ogt double %13, %4
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15, %1
  %20 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 7
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 4
  store i32 0, i32* %22, align 8
  br label %44

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = udiv i32 %25, %17
  store i32 %26, i32* %24, align 4
  %27 = mul nsw i32 %10, %6
  %28 = sdiv i32 %27, 41
  %29 = sitofp i32 %28 to double
  %30 = fdiv double %4, %29
  %31 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 9
  store double %30, double* %31, align 8
  store i32 0, i32* %16, align 8
  store i32 0, i32* %2, align 4
  %32 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 8
  %33 = load double, double* %32, align 8
  %34 = fcmp oeq double %33, 0.000000e+00
  br i1 %34, label %35, label %37

35:                                               ; preds = %23
  %36 = uitofp i32 %26 to double
  br label %42

37:                                               ; preds = %23
  %38 = fmul double %33, 1.500000e+01
  %39 = uitofp i32 %26 to double
  %40 = fadd double %38, %39
  %41 = fmul double %40, 6.250000e-02
  br label %42

42:                                               ; preds = %37, %35
  %43 = phi double [ %41, %37 ], [ %36, %35 ]
  store double %43, double* %32, align 8
  br label %44

44:                                               ; preds = %42, %19
  %45 = phi i32* [ %24, %42 ], [ %2, %19 ]
  store i32 0, i32* %45, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN6webrtc15NoiseEstimation13GetNoiseLevelEv(%"class.webrtc::NoiseEstimation"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 70, i32 150
  %6 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to double
  %9 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to double
  %12 = fmul double %11, 6.500000e-01
  %13 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = sitofp i32 %14 to double
  %16 = fmul double %12, %15
  %17 = fdiv double %16, 4.100000e+01
  %18 = fcmp ogt double %17, %8
  br i1 %18, label %23, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %19, %1
  %24 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 7
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 8
  store double 0.000000e+00, double* %25, align 8
  %26 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 4
  store i32 0, i32* %26, align 8
  br label %48

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = udiv i32 %29, %21
  store i32 %30, i32* %28, align 4
  %31 = mul nsw i32 %14, %10
  %32 = sdiv i32 %31, 41
  %33 = sitofp i32 %32 to double
  %34 = fdiv double %8, %33
  %35 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 9
  store double %34, double* %35, align 8
  store i32 0, i32* %20, align 8
  store i32 0, i32* %6, align 4
  %36 = getelementptr inbounds %"class.webrtc::NoiseEstimation", %"class.webrtc::NoiseEstimation"* %0, i64 0, i32 8
  %37 = load double, double* %36, align 8
  %38 = fcmp oeq double %37, 0.000000e+00
  br i1 %38, label %39, label %41

39:                                               ; preds = %27
  %40 = uitofp i32 %30 to double
  br label %46

41:                                               ; preds = %27
  %42 = fmul double %37, 1.500000e+01
  %43 = uitofp i32 %30 to double
  %44 = fadd double %42, %43
  %45 = fmul double %44, 6.250000e-02
  br label %46

46:                                               ; preds = %41, %39
  %47 = phi double [ %45, %41 ], [ %40, %39 ]
  store double %47, double* %36, align 8
  br label %48

48:                                               ; preds = %23, %46
  %49 = phi i32* [ %6, %23 ], [ %28, %46 ]
  %50 = phi double [ 0.000000e+00, %23 ], [ %47, %46 ]
  store i32 0, i32* %49, align 4
  %51 = sitofp i32 %5 to double
  %52 = fcmp ogt double %50, %51
  %53 = zext i1 %52 to i8
  ret i8 %53
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
