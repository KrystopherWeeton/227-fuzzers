; ModuleID = '../../third_party/blink/renderer/core/loader/resource/image_resource_content.cc'
source_filename = "../../third_party/blink/renderer/core/loader/resource/image_resource_content.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::(anonymous namespace)::NullImageResourceInfo> >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::(anonymous namespace)::NullImageResourceInfo> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.202 }
%class.scoped_refptr.202 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.203" }
%"struct.std::__1::atomic.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__atomic_base.205" }
%"struct.std::__1::__atomic_base.205" = type { %"struct.std::__1::__cxx_atomic_impl.206" }
%"struct.std::__1::__cxx_atomic_impl.206" = type { %"struct.std::__1::__cxx_atomic_base_impl.207" }
%"struct.std::__1::__cxx_atomic_base_impl.207" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.7", i32, [4 x i8], %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.180", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.192" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member", float, i8, %class.scoped_refptr, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr = type { %"class.blink::Image"* }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.1, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.184" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.scoped_refptr.1 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.2" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.208" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::KURL"* }
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional", %class.scoped_refptr.235, %class.scoped_refptr.236, %"struct.blink::CacheControlHeader", %"class.absl::optional.237", %"class.absl::optional.242", %"class.absl::optional.242", %"class.absl::optional.242", i64, %"class.blink::KURL", %"class.WTF::Vector.247", %"class.WTF::String", %"class.WTF::Vector.220", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.252", %"class.WTF::Vector.220", %"class.blink::KURL", %"class.absl::optional.257" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.214" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.218" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.220", %"class.WTF::String", i64, i64, %"class.WTF::Vector.225", %"class.WTF::Vector.230" }
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.230" = type { %"class.WTF::VectorBuffer.231" }
%"class.WTF::VectorBuffer.231" = type { %"class.WTF::VectorBufferBase.232" }
%"class.WTF::VectorBufferBase.232" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.235 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.236 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.237", %"class.absl::optional.237" }
%"class.absl::optional.237" = type { %"class.absl::optional_internal::optional_data.238" }
%"class.absl::optional_internal::optional_data.238" = type { %"class.absl::optional_internal::optional_data_base.239" }
%"class.absl::optional_internal::optional_data_base.239" = type { %"class.absl::optional_internal::optional_data_dtor_base.240" }
%"class.absl::optional_internal::optional_data_dtor_base.240" = type { i8, %union.anon.241 }
%union.anon.241 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.242" = type { %"class.absl::optional_internal::optional_data.243" }
%"class.absl::optional_internal::optional_data.243" = type { %"class.absl::optional_internal::optional_data_base.244" }
%"class.absl::optional_internal::optional_data_base.244" = type { %"class.absl::optional_internal::optional_data_dtor_base.245" }
%"class.absl::optional_internal::optional_data_dtor_base.245" = type { i8, %union.anon.246 }
%union.anon.246 = type { %"class.base::Time" }
%"class.WTF::Vector.247" = type { %"class.WTF::VectorBuffer.248" }
%"class.WTF::VectorBuffer.248" = type { %"class.WTF::VectorBufferBase.249" }
%"class.WTF::VectorBufferBase.249" = type { %"class.blink::KURL"*, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.219" }
%"class.base::time_internal::TimeBase.219" = type { i64 }
%"class.absl::optional.252" = type { %"class.absl::optional_internal::optional_data.253" }
%"class.absl::optional_internal::optional_data.253" = type { %"class.absl::optional_internal::optional_data_base.254" }
%"class.absl::optional_internal::optional_data_base.254" = type { %"class.absl::optional_internal::optional_data_dtor_base.255" }
%"class.absl::optional_internal::optional_data_dtor_base.255" = type { i8, %union.anon.256 }
%union.anon.256 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.220" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"class.WTF::String"*, i32, i32 }
%"class.absl::optional.257" = type { %"class.absl::optional_internal::optional_data.258" }
%"class.absl::optional_internal::optional_data.258" = type { %"class.absl::optional_internal::optional_data_base.259" }
%"class.absl::optional_internal::optional_data_base.259" = type { %"class.absl::optional_internal::optional_data_dtor_base.260" }
%"class.absl::optional_internal::optional_data_dtor_base.260" = type { i8, %union.anon.261 }
%union.anon.261 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.268" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.264 }
%union.anon.264 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::FetchParameters" = type opaque
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::ImageResource" = type <{ %"class.blink::Resource", %"class.blink::MultipartImageResourceParser::Client", %"class.blink::Member.376", %"class.blink::Member.378", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.276", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.296", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.366", %"class.blink::ResourceResponse", %class.scoped_refptr.1, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, %union.anon.280 }
%union.anon.280 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.281", i8, %"class.absl::optional.286", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.281" = type { %"class.absl::optional_internal::optional_data.282" }
%"class.absl::optional_internal::optional_data.282" = type { %"class.absl::optional_internal::optional_data_base.283" }
%"class.absl::optional_internal::optional_data_base.283" = type { %"class.absl::optional_internal::optional_data_dtor_base.284" }
%"class.absl::optional_internal::optional_data_dtor_base.284" = type { i8, [7 x i8], %union.anon.285 }
%union.anon.285 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.286" = type { %"class.absl::optional_internal::optional_data.287" }
%"class.absl::optional_internal::optional_data.287" = type { %"class.absl::optional_internal::optional_data_base.288" }
%"class.absl::optional_internal::optional_data_base.288" = type { %"class.absl::optional_internal::optional_data_dtor_base.289" }
%"class.absl::optional_internal::optional_data_dtor_base.289" = type { i8, %union.anon.290 }
%union.anon.290 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.291", %"class.WTF::Vector.220" }
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { i32*, i32, i32 }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet.342" }
%"class.WTF::HashCountedSet.342" = type { %"class.WTF::HashMap.343" }
%"class.WTF::HashMap.343" = type { %"class.WTF::HashTable.344" }
%"class.WTF::HashTable.344" = type <{ %"struct.WTF::KeyValuePair.346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.346" = type <{ %"class.blink::WeakMember.609", i32, [4 x i8] }>
%"class.blink::WeakMember.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.351", i8, i8, %class.scoped_refptr.356, %class.scoped_refptr.361, %class.scoped_refptr.363 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.std::__1::pair.355"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.355" = type opaque
%class.scoped_refptr.356 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.357", i32, i32, %"class.blink::Persistent.359" }
%"class.WTF::RefCounted.357" = type { %"class.base::RefCounted.358" }
%"class.base::RefCounted.358" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.359" = type { %"class.blink::PersistentBase.360" }
%"class.blink::PersistentBase.360" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr.273" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.361 = type { %"class.base::RefCountedData.362"* }
%"class.base::RefCountedData.362" = type opaque
%class.scoped_refptr.363 = type { %"class.base::RefCountedData.364"* }
%"class.base::RefCountedData.364" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.299, %class.scoped_refptr.299, %class.scoped_refptr.299, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.300, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.312", %"class.absl::optional.317", %"class.absl::optional.327", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.252", %"class.absl::optional.327", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.327", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.252", %"class.absl::optional.332", i8, %class.scoped_refptr.337 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.299 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.384", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.268", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.299 }
%"class.WTF::RefCounted.384" = type { %"class.base::RefCounted.385" }
%"class.base::RefCounted.385" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.300 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.301", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.310, i8, %"class.url::Origin" }
%"class.base::RefCounted.301" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.202 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.302" }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"class.std::__1::unique_ptr.304"*, %"class.std::__1::unique_ptr.304"*, %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.std::__1::unique_ptr.304"* }
%class.scoped_refptr.310 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.311", [4 x i8] }>
%"class.base::RefCountedThreadSafe.311" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.312" = type { %"class.absl::optional_internal::optional_data.313" }
%"class.absl::optional_internal::optional_data.313" = type { %"class.absl::optional_internal::optional_data_base.314" }
%"class.absl::optional_internal::optional_data_base.314" = type { %"class.absl::optional_internal::optional_data_dtor_base.315" }
%"class.absl::optional_internal::optional_data_dtor_base.315" = type { i8, %union.anon.316 }
%union.anon.316 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.317" = type { %"class.absl::optional_internal::optional_data.318" }
%"class.absl::optional_internal::optional_data.318" = type { %"class.absl::optional_internal::optional_data_base.319" }
%"class.absl::optional_internal::optional_data_base.319" = type { %"class.absl::optional_internal::optional_data_dtor_base.320" }
%"class.absl::optional_internal::optional_data_dtor_base.320" = type { i8, %union.anon.321 }
%union.anon.321 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.322", %"class.WTF::Vector.220", %"class.WTF::String" }
%"class.WTF::Vector.322" = type { %"class.WTF::VectorBuffer.323" }
%"class.WTF::VectorBuffer.323" = type { %"class.WTF::VectorBufferBase.324" }
%"class.WTF::VectorBufferBase.324" = type { %class.scoped_refptr.299*, i32, i32 }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { %"class.WTF::String" }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, %union.anon.336 }
%union.anon.336 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.337 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.601", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.601" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.602" }
%"class.std::__1::vector.602" = type { %"class.std::__1::__vector_base.603" }
%"class.std::__1::__vector_base.603" = type { i32*, i32*, %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { i32* }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::MultipartImageResourceParser::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::MultipartImageResourceParser"* }
%"class.blink::MultipartImageResourceParser" = type <{ %"class.blink::ResourceResponse", %"class.WTF::Vector", %"class.blink::Member.382", %"class.WTF::Vector", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::MultipartImageResourceParser::Client"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.613", %"class.blink::FreeList", %"class.WTF::Vector.618" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.612" }
%"struct.std::__1::array.612" = type { [256 x i8] }
%"class.WTF::Vector.613" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.618" = type { %"class.WTF::VectorBuffer.619" }
%"class.WTF::VectorBuffer.619" = type { %"class.WTF::VectorBufferBase.620" }
%"class.WTF::VectorBufferBase.620" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::ImageResourceObserver"**, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::SVGImage" = type { %"class.blink::Image", %"class.blink::Persistent.393", %"class.blink::Persistent.395", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.403", %"class.blink::LayoutSize", i8, i32, %"class.blink::Persistent.409" }
%"class.blink::Persistent.393" = type { %"class.blink::PersistentBase.394" }
%"class.blink::PersistentBase.394" = type { %"class.blink::SVGImageChromeClient"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::SVGImageChromeClient" = type opaque
%"class.blink::Persistent.395" = type { %"class.blink::PersistentBase.396" }
%"class.blink::PersistentBase.396" = type { %"class.blink::Page"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::Page" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type opaque
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::scheduler::WebAgentGroupScheduler"* }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Persistent.409" = type { %"class.blink::PersistentBase.410" }
%"class.blink::PersistentBase.410" = type { %"class.blink::SVGImage::SVGImageLocalFrameClient"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::SVGImage::SVGImageLocalFrameClient" = type opaque
%"class.blink::BitmapImage" = type <{ %"class.blink::Image", %"class.std::__1::unique_ptr.412", %"class.blink::IntSize", %"class.blink::IntSize", %"class.blink::IntSize", %"class.blink::IntSize", %"class.cc::PaintImage", i32, i8, i8, [2 x i8], i32, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::DeferredImageDecoder"* }
%"class.blink::DeferredImageDecoder" = type { %class.scoped_refptr.415, %"class.std::__1::unique_ptr.430", %"class.WTF::String", %"class.blink::IntSize", i32, i8, i8, i8, i8, i8, i8, %class.sk_sp.439, %"class.blink::IntPoint", i32, %"class.absl::optional.477", i8, i8, %"class.absl::optional.482", %"class.WTF::Vector.492", i64, %class.scoped_refptr.497 }
%class.scoped_refptr.415 = type { %"class.blink::ParkableImage"* }
%"class.blink::ParkableImage" = type <{ %"class.WTF::ThreadSafeRefCounted.416", [4 x i8], %"class.WTF::Mutex", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.424", i64, i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.416" = type { %"class.base::RefCountedThreadSafe.417" }
%"class.base::RefCountedThreadSafe.417" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::RWBuffer"* }
%"class.blink::RWBuffer" = type { %"struct.blink::RWBuffer::BufferHead"*, %"struct.blink::RWBuffer::BufferBlock"*, i64 }
%"struct.blink::RWBuffer::BufferHead" = type opaque
%"struct.blink::RWBuffer::BufferBlock" = type opaque
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::ImageDecoder"* }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr.433, %"class.WTF::Vector.436", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr.448", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.454", %class.sk_sp.439, i8, %"class.std::__1::unique_ptr.468" }
%class.scoped_refptr.433 = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.434", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.434" = type { %"class.base::RefCountedThreadSafe.435" }
%"class.base::RefCountedThreadSafe.435" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438", [128 x i8] }
%"class.WTF::VectorBufferBase.438" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.445 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.439, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.445 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr.448" = type { %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.459" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.458, [8 x i8] }
%struct.anon.458 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { i8* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%class.sk_sp.439 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.440" }
%"struct.std::__1::atomic.440" = type { %"struct.std::__1::__atomic_base.441" }
%"struct.std::__1::__atomic_base.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__cxx_atomic_impl.443" }
%"struct.std::__1::__cxx_atomic_impl.443" = type { %"struct.std::__1::__cxx_atomic_base_impl.444" }
%"struct.std::__1::__cxx_atomic_base_impl.444" = type { i8 }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.absl::optional.477" = type { %"class.absl::optional_internal::optional_data.478" }
%"class.absl::optional_internal::optional_data.478" = type { %"class.absl::optional_internal::optional_data_base.479" }
%"class.absl::optional_internal::optional_data_base.479" = type { %"class.absl::optional_internal::optional_data_dtor_base.480" }
%"class.absl::optional_internal::optional_data_dtor_base.480" = type { i8, %union.anon.481 }
%union.anon.481 = type { i8 }
%"class.absl::optional.482" = type { %"class.absl::optional_internal::optional_data.483" }
%"class.absl::optional_internal::optional_data.483" = type { %"class.absl::optional_internal::optional_data_base.484" }
%"class.absl::optional_internal::optional_data_base.484" = type { %"class.absl::optional_internal::optional_data_dtor_base.485" }
%"class.absl::optional_internal::optional_data_dtor_base.485" = type { i8, [3 x i8], %union.anon.486 }
%union.anon.486 = type { %"struct.cc::ImageHeaderMetadata" }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional.487", i8, i8, %"class.absl::optional.477", %"class.absl::optional.477", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional.487" = type { %"class.absl::optional_internal::optional_data.488" }
%"class.absl::optional_internal::optional_data.488" = type { %"class.absl::optional_internal::optional_data_base.489" }
%"class.absl::optional_internal::optional_data_base.489" = type { %"class.absl::optional_internal::optional_data_dtor_base.490" }
%"class.absl::optional_internal::optional_data_dtor_base.490" = type { i8, %union.anon.491 }
%union.anon.491 = type { %"class.gfx::Size" }
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { %"struct.blink::DeferredFrameData"*, i32, i32 }
%"struct.blink::DeferredFrameData" = type opaque
%class.scoped_refptr.497 = type { %"class.blink::ImageFrameGenerator"* }
%"class.blink::ImageFrameGenerator" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.501, %class.sk_sp.502, %"class.gfx::Rect", i32, %class.sk_sp.507, %class.sk_sp.515, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.501, %class.scoped_refptr.516 }
%class.sk_sp.502 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.503", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.507 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.508" }
%"class.std::__1::vector.508" = type { %"class.std::__1::__vector_base.509" }
%"class.std::__1::__vector_base.509" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.510" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.515 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.501 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.516 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.517", [4 x i8] }>
%"class.base::RefCountedThreadSafe.517" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.WTF::HashSet.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.657" = type { %"class.WTF::StringTypeAdapter.658" }
%"class.WTF::StringTypeAdapter.658" = type { %"class.WTF::StringView" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.562", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.571", %"class.blink::Member.573", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.582", %"class.blink::Member.588", %"class.blink::Member.590", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.535" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.528" }
%"class.blink::HeapHashSet.528" = type { %"class.WTF::HashSet.531" }
%"class.WTF::HashSet.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"class.blink::WeakMember.534"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.534" = type opaque
%"class.blink::Supplementable.535" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.536" }
%"class.blink::HeapHashMap.536" = type { %"class.WTF::HashMap.539" }
%"class.WTF::HashMap.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { i8*, %"class.blink::Member.592" }
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.594" }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.543, %"class.std::__1::unique_ptr.544", %"class.std::__1::unique_ptr.544", %"class.std::__1::unique_ptr.550", %"class.std::__1::unique_ptr.550", %"class.blink::Member.556", i32, [4 x i8], %"class.WTF::HashSet.558", i32, i32 }
%class.scoped_refptr.543 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.566" }
%"class.WTF::Vector.566" = type { %"class.WTF::VectorBuffer.567" }
%"class.WTF::VectorBuffer.567" = type { %"class.WTF::VectorBufferBase.568" }
%"class.WTF::VectorBufferBase.568" = type { %"class.blink::Member.569"*, i32, i32 }
%"class.blink::Member.569" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.575", i32, i32 }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.blink::(anonymous namespace)::NullImageResourceInfo" = type { %"class.blink::ImageResourceInfo", %"class.blink::KURL", %"class.blink::ResourceResponse" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN5blink20ImageResourceContentD2Ev = comdat any

$_ZN5blink20ImageResourceContentD0Ev = comdat any

$_ZZN7logging15CheckOpValueStrIN5blink5Image16SizeAvailabilityEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20ImageResourceContentEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20ImageResourceContentEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20ImageResourceContentEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF12CopyToVectorIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorENS_6VectorIS3_Lj0ES8_EEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink21ImageResourceObserverEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink21ImageResourceObserverELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink20ImageResourceContentE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ImageResourceContent"*, %"class.blink::Visitor"*)* @_ZNK5blink20ImageResourceContent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ImageResourceContent"*)* @_ZN5blink20ImageResourceContentD2Ev to i8*), i8* bitcast (void (%"class.blink::ImageResourceContent"*)* @_ZN5blink20ImageResourceContentD0Ev to i8*), i8* bitcast (void (%"class.blink::ImageResourceContent"*, %"class.blink::Image"*, i64)* @_ZN5blink20ImageResourceContent20DecodedSizeChangedToEPKNS_5ImageEm to i8*), i8* bitcast (i1 (%"class.blink::ImageResourceContent"*, %"class.blink::Image"*)* @_ZN5blink20ImageResourceContent20ShouldPauseAnimationEPKNS_5ImageE to i8*), i8* bitcast (void (%"class.blink::ImageResourceContent"*, %"class.blink::Image"*)* @_ZN5blink20ImageResourceContent7ChangedEPKNS_5ImageE to i8*), i8* bitcast (void (%"class.blink::ImageResourceContent"*, %"class.blink::Image"*)* @_ZN5blink20ImageResourceContent18AsyncLoadCompletedEPKNS_5ImageE to i8*)] }, align 8
@_ZZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info = internal global i64 0, align 8
@.str = private unnamed_addr constant [80 x i8] c"../../third_party/blink/renderer/core/loader/resource/image_resource_content.cc\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"!is_add_remove_observer_prohibited_\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"!ErrorOccurred()\00", align 1
@_ZN5blink10http_names11kContentDPRE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [14 x i8] c"image/svg+xml\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.5 = private unnamed_addr constant [65 x i8] c"size_available_ == Image::kSizeAvailableAndLoadingAsynchronously\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.6 = private unnamed_addr constant [34 x i8] c"ImageResourceContent::updateImage\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"image/\00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"Image bpp (byte per pixel) exceeds max value set in %s.\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"lossy-images-max-bpp\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"lossless-images-max-bpp\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c"lossless-images-strict-max-bpp\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5IndexEvE7kGcInfo = internal constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE7GetNameEPKv, i8 1 }, align 8
@_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5IndexEvE13gc_info_index = internal global { { i32 } } zeroinitializer, align 4
@_ZTVN5blink12_GLOBAL__N_121NullImageResourceInfoE = internal unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo3UrlEv to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo15LoadResponseEndEv to i8*), i8* bitcast (%"class.blink::ResourceResponse"* (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo11GetResponseEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo16IsCacheValidatorEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*, i32)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo15IsAccessAllowedENS_17ImageResourceInfo40DoesCurrentFrameHaveSingleSecurityOriginE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo28HasCacheControlNoStoreHeaderEv to i8*), i8* bitcast (void (%"class.absl::optional.276"*, %"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo16GetResourceErrorEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*, i64)* @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo14SetDecodedSizeEm to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo23WillAddClientOrObserverEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo25DidRemoveClientOrObserverEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)* @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo30EmulateLoadStartedForInspectorEPNS_15ResourceFetcherERKNS_4KURLERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*, %"class.blink::ResourceFetcher"*)* @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo17LoadDeferredImageEPNS_15ResourceFetcherE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo12IsAdResourceEv to i8*), i8* bitcast (%"class.WTF::HashSet.518"* (%"class.blink::(anonymous namespace)::NullImageResourceInfo"*)* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo28GetUnsupportedImageMimeTypesEv to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ImageResourceContentEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImageResourceContent]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20ImageResourceContentEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20ImageResourceContentEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink21ImageResourceObserverEjEEEEPKcv = private unnamed_addr constant [111 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::ImageResourceObserver *, unsigned int>]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.20 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink21ImageResourceObserverEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImageResourceObserver *]\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.23 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEE = hidden unnamed_addr alias void (%"class.blink::ImageResourceContent"*, %"class.blink::Image"*), void (%"class.blink::ImageResourceContent"*, %"class.blink::Image"*)* @_ZN5blink20ImageResourceContentC2E13scoped_refptrINS_5ImageEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContentC2E13scoped_refptrINS_5ImageEE(%"class.blink::ImageResourceContent"* nocapture, %"class.blink::Image"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::Image"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20ImageResourceContentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 2
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 0, i32 0, i32 0
  store %"class.blink::ImageResourceInfo"* null, %"class.blink::ImageResourceInfo"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 6
  store float 1.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 7
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8
  %14 = bitcast %class.scoped_refptr* %13 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9
  %16 = bitcast %"class.WTF::HashCountedSet"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #11
  %17 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10
  %18 = bitcast %"class.WTF::HashCountedSet"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #11
  %19 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info to i8*) acquire, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %122, !prof !2

21:                                               ; preds = %2
  %22 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %122, label %24

24:                                               ; preds = %21
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #11
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !3

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #11
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %35, align 8
  %37 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  %40 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %41 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %40, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.203"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.203"*)) #11
  br label %42

42:                                               ; preds = %39, %31
  %43 = phi i32 [ %37, %31 ], [ %41, %39 ]
  %44 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %36, i64 0, i32 19, i64 3
  %45 = bitcast %"class.blink::BaseArena"** %44 to %"class.blink::NormalPageArena"**
  %46 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %46, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 1200
  br i1 %49, label %80, label %50, !prof !3

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %46, i64 0, i32 3
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 1200
  store i8* %53, i8** %51, align 8
  %54 = add i64 %48, -1200
  store i64 %54, i64* %47, align 8
  %55 = bitcast i8* %52 to i32*
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %52, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = trunc i32 %43 to i16
  %59 = shl i16 %58, 2
  store atomic i16 %59, i16* %57 monotonic, align 2
  %60 = getelementptr inbounds i8, i8* %52, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 600, i16* %61, align 2
  %62 = ptrtoint i8* %52 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %52, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %43 to i64
  %82 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %46, i64 1200, i64 %81) #11
  br label %83

83:                                               ; preds = %80, %50
  %84 = phi i8* [ %79, %50 ], [ %82, %80 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 1184, i1 false) #11
  %86 = bitcast i8* %84 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121NullImageResourceInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = bitcast i8* %85 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %87) #11
  %88 = getelementptr inbounds i8, i8* %84, i64 120
  %89 = bitcast i8* %88 to %"class.blink::ResourceResponse"*
  tail call void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"* %89) #11
  %90 = getelementptr inbounds i8, i8* %84, i64 -4
  %91 = bitcast i8* %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = or i16 %92, 1
  store atomic i16 %93, i16* %91 release, align 2
  store i8* %84, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %94 = ptrtoint i8* %84 to i64
  switch i64 %94, label %95 [
    i64 0, label %121
    i64 -1, label %121
  ]

95:                                               ; preds = %83
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #11
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !3

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #11
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %111, label %114, !prof !3

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %107, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %112) #11
  %113 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  br label %114

114:                                              ; preds = %111, %102
  %115 = phi %"class.blink::PersistentNode"* [ %113, %111 ], [ %109, %102 ]
  %116 = bitcast %"class.blink::PersistentNode"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.blink::PersistentRegion"* %107 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %115, i64 0, i32 0
  store i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info, i64 0, i32 0, i32 0, i64 0), i8** %119, align 8
  %120 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %115, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_121NullImageResourceInfoELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %120, align 8
  store %"class.blink::PersistentNode"* %115, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %121

121:                                              ; preds = %83, %83, %114
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info) #11
  br label %122

122:                                              ; preds = %21, %121, %2
  %123 = load i64, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink20ImageResourceContentC1E13scoped_refptrINS_5ImageEEE11s_null_info to i64*), align 8
  %124 = bitcast %"class.blink::Member"* %9 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %122
  %128 = inttoptr i64 %123 to i8*
  %129 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #11
  br label %130

130:                                              ; preds = %127, %122
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImageResourceContent"* @_ZN5blink20ImageResourceContent12CreateLoadedE13scoped_refptrINS_5ImageEE(%"class.blink::Image"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20ImageResourceContentEEEPhm(i64 88) #11
  %3 = bitcast i8* %2 to %"class.blink::ImageResourceContent"*
  tail call void @_ZN5blink20ImageResourceContentC2E13scoped_refptrINS_5ImageEE(%"class.blink::ImageResourceContent"* %3, %"class.blink::Image"* %0) #11
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 2, i8* %8, align 8
  ret %"class.blink::ImageResourceContent"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImageResourceContent"* @_ZN5blink20ImageResourceContent5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"*, %"class.blink::ResourceFetcher"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ImageResource"* @_ZN5blink13ImageResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"* %0, %"class.blink::ResourceFetcher"* %1) #11
  %4 = icmp eq %"class.blink::ImageResource"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.blink::ImageResourceContent"* @_ZN5blink13ImageResource10GetContentEv(%"class.blink::ImageResource"* nonnull %3) #11
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi %"class.blink::ImageResourceContent"* [ %6, %5 ], [ null, %2 ]
  ret %"class.blink::ImageResourceContent"* %8
}

declare %"class.blink::ImageResource"* @_ZN5blink13ImageResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherE(%"class.blink::FetchParameters"*, %"class.blink::ResourceFetcher"*) local_unnamed_addr #3

declare %"class.blink::ImageResourceContent"* @_ZN5blink13ImageResource10GetContentEv(%"class.blink::ImageResource"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent20SetImageResourceInfoEPNS_17ImageResourceInfoE(%"class.blink::ImageResourceContent"* nocapture, %"class.blink::ImageResourceInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5
  %4 = ptrtoint %"class.blink::ImageResourceInfo"* %1 to i64
  %5 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ImageResourceInfo"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20ImageResourceContent5TraceEPNS_7VisitorE(%"class.blink::ImageResourceContent"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #11, !range !4
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #11
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent22HandleObserverFinishedEPNS_21ImageResourceObserverE(%"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::ImageResourceObserver"*, align 8
  store %"class.blink::ImageResourceObserver"* %1, %"class.blink::ImageResourceObserver"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 1, !range !5
  store i8 1, i8* %5, align 1
  %7 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %7, i64 0, i32 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"* %8, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %4) #11
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %7, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %55, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  store i32 %21, i32* %19, align 8
  br label %47

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 0
  store %"class.blink::ImageResourceObserver"* inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*), %"class.blink::ImageResourceObserver"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  %29 = and i32 %28, 2147483647
  %30 = and i32 %27, -2147483648
  %31 = or i32 %29, %30
  store i32 %31, i32* %26, align 8
  %32 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -1
  store i32 %34, i32* %32, align 4
  %35 = mul i32 %34, 6
  %36 = load i32, i32* %13, align 8
  %37 = icmp ult i32 %35, %36
  %38 = icmp ugt i32 %36, 8
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47

40:                                               ; preds = %24
  %41 = lshr i32 %36, 1
  %42 = zext i32 %41 to i64
  %43 = shl nuw nsw i64 %42, 4
  %44 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink21ImageResourceObserverEjEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %43, i1 false) #11
  %45 = bitcast i8* %44 to %"struct.WTF::KeyValuePair"*
  %46 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %8, %"struct.WTF::KeyValuePair"* %45, i32 %41, %"struct.WTF::KeyValuePair"* null) #11
  br label %47

47:                                               ; preds = %23, %24, %40
  %48 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #11
  store i32 0, i32* %3, align 4
  %49 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0
  %50 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %49, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %3) #11
  %51 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %50, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #11
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 8
  br label %55

55:                                               ; preds = %2, %47
  %56 = icmp eq i8* %5, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  store i8 %6, i8* %5, align 1
  br label %58

58:                                               ; preds = %55, %57
  %59 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %4, align 8
  %60 = bitcast %"class.blink::ImageResourceObserver"* %59 to void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)***
  %61 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)**, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)** %61, i64 4
  %63 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)** %62, align 8
  call void %63(%"class.blink::ImageResourceObserver"* %59, %"class.blink::ImageResourceContent"* %0) #11
  call void @_ZN5blink20ImageResourceContent26UpdateImageAnimationPolicyEv(%"class.blink::ImageResourceContent"* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent26UpdateImageAnimationPolicyEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %105, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %2, align 4
  %8 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 1, !range !5
  store i8 1, i8* %8, align 1
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %52, label %19

19:                                               ; preds = %6
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %52, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %52, label %31

31:                                               ; preds = %28, %50
  %32 = phi %"struct.WTF::KeyValuePair"* [ %44, %50 ], [ %29, %28 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %33, align 8
  %35 = bitcast %"class.blink::ImageResourceObserver"* %34 to i1 (%"class.blink::ImageResourceObserver"*, i32*)***
  %36 = load i1 (%"class.blink::ImageResourceObserver"*, i32*)**, i1 (%"class.blink::ImageResourceObserver"*, i32*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::ImageResourceObserver"*, i32*)*, i1 (%"class.blink::ImageResourceObserver"*, i32*)** %36, i64 7
  %38 = load i1 (%"class.blink::ImageResourceObserver"*, i32*)*, i1 (%"class.blink::ImageResourceObserver"*, i32*)** %37, align 8
  %39 = call zeroext i1 %38(%"class.blink::ImageResourceObserver"* %34, i32* nonnull dereferenceable(4) %2) #11
  br i1 %39, label %52, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %18
  br i1 %42, label %52, label %43

43:                                               ; preds = %40, %47
  %44 = phi %"struct.WTF::KeyValuePair"* [ %48, %47 ], [ %41, %40 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  switch i64 %46, label %50 [
    i64 -1, label %47
    i64 0, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, %18
  br i1 %49, label %52, label %43

50:                                               ; preds = %43
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %44, %18
  br i1 %51, label %52, label %31

52:                                               ; preds = %25, %40, %50, %31, %47, %6, %28
  %53 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %57 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 %60
  br i1 %55, label %95, label %62

62:                                               ; preds = %52
  %63 = icmp eq i32 %59, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %62, %68
  %65 = phi %"struct.WTF::KeyValuePair"* [ %69, %68 ], [ %57, %62 ]
  %66 = bitcast %"struct.WTF::KeyValuePair"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %71 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %64, %64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 1
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %61
  br i1 %70, label %95, label %64

71:                                               ; preds = %64, %62
  %72 = phi %"struct.WTF::KeyValuePair"* [ %57, %62 ], [ %65, %64 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %72, %61
  br i1 %73, label %95, label %74

74:                                               ; preds = %71, %93
  %75 = phi %"struct.WTF::KeyValuePair"* [ %87, %93 ], [ %72, %71 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %77 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %76, align 8
  %78 = bitcast %"class.blink::ImageResourceObserver"* %77 to i1 (%"class.blink::ImageResourceObserver"*, i32*)***
  %79 = load i1 (%"class.blink::ImageResourceObserver"*, i32*)**, i1 (%"class.blink::ImageResourceObserver"*, i32*)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::ImageResourceObserver"*, i32*)*, i1 (%"class.blink::ImageResourceObserver"*, i32*)** %79, i64 7
  %81 = load i1 (%"class.blink::ImageResourceObserver"*, i32*)*, i1 (%"class.blink::ImageResourceObserver"*, i32*)** %80, align 8
  %82 = call zeroext i1 %81(%"class.blink::ImageResourceObserver"* %77, i32* nonnull dereferenceable(4) %2) #11
  br i1 %82, label %95, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 1
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %84, %61
  br i1 %85, label %95, label %86

86:                                               ; preds = %83, %90
  %87 = phi %"struct.WTF::KeyValuePair"* [ %91, %90 ], [ %84, %83 ]
  %88 = bitcast %"struct.WTF::KeyValuePair"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  switch i64 %89, label %93 [
    i64 -1, label %90
    i64 0, label %90
  ]

90:                                               ; preds = %86, %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 1
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %91, %61
  br i1 %92, label %95, label %86

93:                                               ; preds = %86
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %87, %61
  br i1 %94, label %95, label %74

95:                                               ; preds = %68, %83, %93, %74, %90, %52, %71
  %96 = icmp eq i8* %8, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %95
  store i8 %9, i8* %8, align 1
  br label %98

98:                                               ; preds = %95, %97
  %99 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %100 = load i32, i32* %2, align 4
  %101 = bitcast %"class.blink::Image"* %99 to void (%"class.blink::Image"*, i32)***
  %102 = load void (%"class.blink::Image"*, i32)**, void (%"class.blink::Image"*, i32)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::Image"*, i32)*, void (%"class.blink::Image"*, i32)** %102, i64 26
  %104 = load void (%"class.blink::Image"*, i32)*, void (%"class.blink::Image"*, i32)** %103, align 8
  call void %104(%"class.blink::Image"* %99, i32 %100) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  br label %105

105:                                              ; preds = %1, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent11AddObserverEPNS_21ImageResourceObserverE(%"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::ImageResourceObserver"*, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::ImageResourceObserver"* %1, %"class.blink::ImageResourceObserver"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 2, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 133, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #11
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %13, align 8
  %15 = bitcast %"class.blink::ImageResourceInfo"* %14 to void (%"class.blink::ImageResourceInfo"*)***
  %16 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %16, i64 9
  %18 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %17, align 8
  call void %18(%"class.blink::ImageResourceInfo"* %14) #11
  %19 = load i8, i8* %6, align 1, !range !5
  store i8 1, i8* %6, align 1
  %20 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9
  %21 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  store i32 0, i32* %3, align 4
  %22 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %20, i64 0, i32 0, i32 0
  %23 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %22, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %3) #11
  %24 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %23, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = icmp eq i8* %6, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %12
  store i8 %19, i8* %6, align 1
  br label %30

30:                                               ; preds = %12, %29
  %31 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %13, align 8
  %32 = bitcast %"class.blink::ImageResourceInfo"* %31 to i1 (%"class.blink::ImageResourceInfo"*)***
  %33 = load i1 (%"class.blink::ImageResourceInfo"*)**, i1 (%"class.blink::ImageResourceInfo"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %33, i64 4
  %35 = load i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %34, align 8
  %36 = call zeroext i1 %35(%"class.blink::ImageResourceInfo"* %31) #11
  br i1 %36, label %132, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %39 = load %"class.blink::Image"*, %"class.blink::Image"** %38, align 8
  %40 = icmp eq %"class.blink::Image"* %39, null
  br i1 %40, label %59, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::Image"* %39 to i64 (%"class.blink::Image"*)***
  %43 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %43, i64 13
  %45 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %44, align 8
  %46 = call i64 %45(%"class.blink::Image"* nonnull %39) #11
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %47, 1
  %51 = icmp slt i32 %49, 1
  %52 = or i1 %50, %51
  br i1 %52, label %59, label %53

53:                                               ; preds = %41
  %54 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %4, align 8
  %55 = bitcast %"class.blink::ImageResourceObserver"* %54 to void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)***
  %56 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)**, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)** %56, i64 2
  %58 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)** %57, align 8
  call void %58(%"class.blink::ImageResourceObserver"* %54, %"class.blink::ImageResourceContent"* %0, i32 1) #11
  br label %59

59:                                               ; preds = %37, %53, %41
  %60 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %61 = load i8, i8* %60, align 8
  %62 = icmp ugt i8 %61, 1
  br i1 %62, label %63, label %132

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %20, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %66, label %132, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, -1
  %71 = zext i32 %70 to i64
  %72 = bitcast %"class.blink::ImageResourceObserver"** %4 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = shl i64 %73, 32
  %75 = xor i64 %74, -1
  %76 = add i64 %73, %75
  %77 = lshr i64 %76, 22
  %78 = xor i64 %77, %76
  %79 = shl i64 %78, 13
  %80 = xor i64 %79, -1
  %81 = add i64 %78, %80
  %82 = lshr i64 %81, 8
  %83 = xor i64 %82, %81
  %84 = mul i64 %83, 9
  %85 = lshr i64 %84, 15
  %86 = xor i64 %85, %84
  %87 = shl i64 %86, 27
  %88 = xor i64 %87, -1
  %89 = add i64 %86, %88
  %90 = lshr i64 %89, 31
  %91 = xor i64 %90, %89
  %92 = trunc i64 %91 to i32
  %93 = and i32 %70, %92
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %94
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0
  %97 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %96, align 8
  %98 = inttoptr i64 %73 to %"class.blink::ImageResourceObserver"*
  %99 = icmp eq %"class.blink::ImageResourceObserver"* %97, %98
  br i1 %99, label %128, label %100

100:                                              ; preds = %67
  %101 = xor i32 %92, -1
  %102 = lshr i32 %92, 23
  %103 = add i32 %102, %101
  %104 = shl i32 %103, 12
  %105 = xor i32 %104, %103
  %106 = lshr i32 %105, 7
  %107 = xor i32 %106, %105
  %108 = shl i32 %107, 2
  %109 = xor i32 %108, %107
  %110 = lshr i32 %109, 20
  %111 = xor i32 %110, %109
  %112 = or i32 %111, 1
  %113 = zext i32 %112 to i64
  br label %114

114:                                              ; preds = %119, %100
  %115 = phi %"class.blink::ImageResourceObserver"* [ %97, %100 ], [ %126, %119 ]
  %116 = phi i64 [ %94, %100 ], [ %123, %119 ]
  %117 = phi i64 [ 0, %100 ], [ %121, %119 ]
  %118 = icmp eq %"class.blink::ImageResourceObserver"* %115, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %114
  %120 = icmp eq i64 %117, 0
  %121 = select i1 %120, i64 %113, i64 %117
  %122 = add i64 %121, %116
  %123 = and i64 %122, %71
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %123
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %124, i64 0, i32 0
  %126 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %125, align 8
  %127 = icmp eq %"class.blink::ImageResourceObserver"* %126, %98
  br i1 %127, label %128, label %114

128:                                              ; preds = %119, %67
  %129 = phi %"struct.WTF::KeyValuePair"* [ %95, %67 ], [ %124, %119 ]
  %130 = icmp eq %"struct.WTF::KeyValuePair"* %129, null
  br i1 %130, label %132, label %131

131:                                              ; preds = %128
  call void @_ZN5blink20ImageResourceContent22HandleObserverFinishedEPNS_21ImageResourceObserverE(%"class.blink::ImageResourceContent"* %0, %"class.blink::ImageResourceObserver"* %98)
  br label %132

132:                                              ; preds = %114, %128, %63, %30, %131, %59
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent8IsLoadedEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp ugt i8 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent14RemoveObserverEPNS_21ImageResourceObserverE(%"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ImageResourceObserver"*, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::ImageResourceObserver"* %1, %"class.blink::ImageResourceObserver"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 2, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 156, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #11
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %11 = load i8, i8* %5, align 1, !range !5
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8 [ 0, %2 ], [ %11, %8 ]
  store i8 1, i8* %5, align 1
  %14 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %14, i64 0, i32 0, i32 0
  %16 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"* %15, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %3) #11
  %17 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %14, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %17, %23
  br i1 %24, label %78, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, -1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %53

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 0
  store %"class.blink::ImageResourceObserver"* inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*), %"class.blink::ImageResourceObserver"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  %35 = and i32 %34, 2147483647
  %36 = and i32 %33, -2147483648
  %37 = or i32 %35, %36
  store i32 %37, i32* %32, align 8
  %38 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -1
  store i32 %40, i32* %38, align 4
  %41 = mul i32 %40, 6
  %42 = load i32, i32* %20, align 8
  %43 = icmp ult i32 %41, %42
  %44 = icmp ugt i32 %42, 8
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %60

46:                                               ; preds = %30
  %47 = lshr i32 %42, 1
  %48 = zext i32 %47 to i64
  %49 = shl nuw nsw i64 %48, 4
  %50 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink21ImageResourceObserverEjEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 %49, i1 false) #11
  %51 = bitcast i8* %50 to %"struct.WTF::KeyValuePair"*
  %52 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %15, %"struct.WTF::KeyValuePair"* %51, i32 %47, %"struct.WTF::KeyValuePair"* null) #11
  br label %60

53:                                               ; preds = %25
  store i32 %28, i32* %26, align 8
  %54 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %55 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %54, align 8
  %56 = bitcast %"class.blink::ImageResourceInfo"* %55 to void (%"class.blink::ImageResourceInfo"*)***
  %57 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %57, i64 10
  %59 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %58, align 8
  call void %59(%"class.blink::ImageResourceInfo"* %55) #11
  br label %151

60:                                               ; preds = %30, %46
  %61 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10
  %62 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %61, i64 0, i32 0, i32 0
  %63 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"* %62, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %3) #11
  %64 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %63, 0
  %65 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %61, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 %69
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %64, %70
  %72 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %73 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %72, align 8
  %74 = bitcast %"class.blink::ImageResourceInfo"* %73 to void (%"class.blink::ImageResourceInfo"*)***
  %75 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %75, i64 10
  %77 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %76, align 8
  call void %77(%"class.blink::ImageResourceInfo"* %73) #11
  br i1 %71, label %138, label %151

78:                                               ; preds = %12
  %79 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10
  %80 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %79, i64 0, i32 0, i32 0
  %81 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"* %80, %"class.blink::ImageResourceObserver"** nonnull dereferenceable(8) %3) #11
  %82 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %81, 0
  %83 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 %87
  %89 = icmp eq %"struct.WTF::KeyValuePair"* %88, %82
  br i1 %89, label %144, label %90

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, -1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %102, label %95

95:                                               ; preds = %90
  store i32 %93, i32* %91, align 8
  %96 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %97 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %96, align 8
  %98 = bitcast %"class.blink::ImageResourceInfo"* %97 to void (%"class.blink::ImageResourceInfo"*)***
  %99 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %99, i64 10
  %101 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %100, align 8
  call void %101(%"class.blink::ImageResourceInfo"* %97) #11
  br label %151

102:                                              ; preds = %90
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 0
  store %"class.blink::ImageResourceObserver"* inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*), %"class.blink::ImageResourceObserver"** %103, align 8
  %104 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 3
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, 1
  %107 = and i32 %106, 2147483647
  %108 = and i32 %105, -2147483648
  %109 = or i32 %107, %108
  store i32 %109, i32* %104, align 8
  %110 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, -1
  store i32 %112, i32* %110, align 4
  %113 = mul i32 %112, 6
  %114 = load i32, i32* %85, align 8
  %115 = icmp ult i32 %113, %114
  %116 = icmp ugt i32 %114, 8
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %131

118:                                              ; preds = %102
  %119 = lshr i32 %114, 1
  %120 = zext i32 %119 to i64
  %121 = shl nuw nsw i64 %120, 4
  %122 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %121, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink21ImageResourceObserverEjEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %122, i8 0, i64 %121, i1 false) #11
  %123 = bitcast i8* %122 to %"struct.WTF::KeyValuePair"*
  %124 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %80, %"struct.WTF::KeyValuePair"* %123, i32 %119, %"struct.WTF::KeyValuePair"* null) #11
  %125 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %126 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %125, align 8
  %127 = bitcast %"class.blink::ImageResourceInfo"* %126 to void (%"class.blink::ImageResourceInfo"*)***
  %128 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %128, i64 10
  %130 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %129, align 8
  call void %130(%"class.blink::ImageResourceInfo"* %126) #11
  br label %138

131:                                              ; preds = %102
  %132 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %133 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %132, align 8
  %134 = bitcast %"class.blink::ImageResourceInfo"* %133 to void (%"class.blink::ImageResourceInfo"*)***
  %135 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %135, i64 10
  %137 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %136, align 8
  call void %137(%"class.blink::ImageResourceInfo"* %133) #11
  br label %138

138:                                              ; preds = %118, %131, %60
  %139 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %3, align 8
  %140 = bitcast %"class.blink::ImageResourceObserver"* %139 to void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)***
  %141 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)**, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)** %141, i64 5
  %143 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*)** %142, align 8
  call void %143(%"class.blink::ImageResourceObserver"* %139, %"class.blink::ImageResourceContent"* %0) #11
  br label %151

144:                                              ; preds = %78
  %145 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %146 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %145, align 8
  %147 = bitcast %"class.blink::ImageResourceInfo"* %146 to void (%"class.blink::ImageResourceInfo"*)***
  %148 = load void (%"class.blink::ImageResourceInfo"*)**, void (%"class.blink::ImageResourceInfo"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %148, i64 10
  %150 = load void (%"class.blink::ImageResourceInfo"*)*, void (%"class.blink::ImageResourceInfo"*)** %149, align 8
  call void %150(%"class.blink::ImageResourceInfo"* %146) #11
  br label %151

151:                                              ; preds = %95, %144, %53, %138, %60
  %152 = icmp eq i8* %5, null
  br i1 %152, label %154, label %153

153:                                              ; preds = %151
  store i8 %13, i8* %5, align 1
  br label %154

154:                                              ; preds = %151, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20ImageResourceContent21PriorityFromObserversEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1, !range !5
  store i8 1, i8* %2, align 1
  %4 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %25, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %12
  br i1 %21, label %25, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %12
  br i1 %24, label %25, label %49

25:                                               ; preds = %19, %49, %76, %73, %1, %22
  %26 = phi i32 [ 0, %22 ], [ 0, %1 ], [ %64, %73 ], [ %64, %76 ], [ %64, %49 ], [ 0, %19 ]
  %27 = phi i32 [ 0, %22 ], [ 0, %1 ], [ %66, %73 ], [ %66, %76 ], [ %66, %49 ], [ 0, %19 ]
  %28 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 %35
  br i1 %30, label %78, label %37

37:                                               ; preds = %25
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %37, %43
  %40 = phi %"struct.WTF::KeyValuePair"* [ %44, %43 ], [ %32, %37 ]
  %41 = bitcast %"struct.WTF::KeyValuePair"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %46 [
    i64 -1, label %43
    i64 0, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, %36
  br i1 %45, label %78, label %39

46:                                               ; preds = %39, %37
  %47 = phi %"struct.WTF::KeyValuePair"* [ %32, %37 ], [ %40, %39 ]
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %47, %36
  br i1 %48, label %78, label %88

49:                                               ; preds = %22, %76
  %50 = phi i32 [ %66, %76 ], [ 0, %22 ]
  %51 = phi i32 [ %64, %76 ], [ 0, %22 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %70, %76 ], [ %23, %22 ]
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0
  %54 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %53, align 8
  %55 = bitcast %"class.blink::ImageResourceObserver"* %54 to i64 (%"class.blink::ImageResourceObserver"*)***
  %56 = load i64 (%"class.blink::ImageResourceObserver"*)**, i64 (%"class.blink::ImageResourceObserver"*)*** %55, align 8
  %57 = getelementptr inbounds i64 (%"class.blink::ImageResourceObserver"*)*, i64 (%"class.blink::ImageResourceObserver"*)** %56, i64 8
  %58 = load i64 (%"class.blink::ImageResourceObserver"*)*, i64 (%"class.blink::ImageResourceObserver"*)** %57, align 8
  %59 = tail call i64 %58(%"class.blink::ImageResourceObserver"* %54) #11
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %60, 0
  %62 = lshr i64 %59, 32
  %63 = trunc i64 %62 to i32
  %64 = select i1 %61, i32 %51, i32 1
  %65 = select i1 %61, i32 0, i32 %63
  %66 = add nsw i32 %65, %50
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 1
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, %12
  br i1 %68, label %25, label %69

69:                                               ; preds = %49, %73
  %70 = phi %"struct.WTF::KeyValuePair"* [ %74, %73 ], [ %67, %49 ]
  %71 = bitcast %"struct.WTF::KeyValuePair"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %76 [
    i64 -1, label %73
    i64 0, label %73
  ]

73:                                               ; preds = %69, %69
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 1
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %74, %12
  br i1 %75, label %25, label %69

76:                                               ; preds = %69
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %70, %12
  br i1 %77, label %25, label %49

78:                                               ; preds = %43, %88, %115, %112, %25, %46
  %79 = phi i32 [ %26, %46 ], [ %26, %25 ], [ %103, %112 ], [ %103, %115 ], [ %103, %88 ], [ %26, %43 ]
  %80 = phi i32 [ %27, %46 ], [ %27, %25 ], [ %105, %112 ], [ %105, %115 ], [ %105, %88 ], [ %27, %43 ]
  %81 = icmp eq i8* %2, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  store i8 %3, i8* %2, align 1
  br label %83

83:                                               ; preds = %78, %82
  %84 = zext i32 %80 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %79 to i64
  %87 = or i64 %85, %86
  ret i64 %87

88:                                               ; preds = %46, %115
  %89 = phi i32 [ %105, %115 ], [ %27, %46 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %109, %115 ], [ %47, %46 ]
  %91 = phi i32 [ %103, %115 ], [ %26, %46 ]
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 0, i32 0
  %93 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %92, align 8
  %94 = bitcast %"class.blink::ImageResourceObserver"* %93 to i64 (%"class.blink::ImageResourceObserver"*)***
  %95 = load i64 (%"class.blink::ImageResourceObserver"*)**, i64 (%"class.blink::ImageResourceObserver"*)*** %94, align 8
  %96 = getelementptr inbounds i64 (%"class.blink::ImageResourceObserver"*)*, i64 (%"class.blink::ImageResourceObserver"*)** %95, i64 8
  %97 = load i64 (%"class.blink::ImageResourceObserver"*)*, i64 (%"class.blink::ImageResourceObserver"*)** %96, align 8
  %98 = tail call i64 %97(%"class.blink::ImageResourceObserver"* %93) #11
  %99 = trunc i64 %98 to i32
  %100 = icmp eq i32 %99, 0
  %101 = lshr i64 %98, 32
  %102 = trunc i64 %101 to i32
  %103 = select i1 %100, i32 %91, i32 1
  %104 = select i1 %100, i32 0, i32 %102
  %105 = add nsw i32 %104, %89
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 1
  %107 = icmp eq %"struct.WTF::KeyValuePair"* %106, %36
  br i1 %107, label %78, label %108

108:                                              ; preds = %88, %112
  %109 = phi %"struct.WTF::KeyValuePair"* [ %113, %112 ], [ %106, %88 ]
  %110 = bitcast %"struct.WTF::KeyValuePair"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %109, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %36
  br i1 %114, label %78, label %108

115:                                              ; preds = %108
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %109, %36
  br i1 %116, label %78, label %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent18DestroyDecodedDataEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8
  %9 = add i8 %8, -3
  %10 = icmp ult i8 %9, 2
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 198, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #11
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  %14 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  br label %15

15:                                               ; preds = %6, %11
  %16 = phi %"class.blink::Image"* [ %4, %6 ], [ %14, %11 ]
  %17 = bitcast %"class.blink::Image"* %16 to void (%"class.blink::Image"*)***
  %18 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %18, i64 21
  %20 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %19, align 8
  call void %20(%"class.blink::Image"* %16) #11
  br label %21

21:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = add i8 %3, -3
  %5 = icmp ult i8 %4, 2
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent16DoResetAnimationEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.blink::Image"*, %"class.blink::Image"** %2, align 8
  %4 = icmp eq %"class.blink::Image"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::Image"* %3 to void (%"class.blink::Image"*)***
  %7 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %7, i64 24
  %9 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %8, align 8
  tail call void %9(%"class.blink::Image"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::SharedBuffer"* @_ZNK5blink20ImageResourceContent14ResourceBufferEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.blink::Image"*, %"class.blink::Image"** %2, align 8
  %4 = icmp eq %"class.blink::Image"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::Image"* %3 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %7 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %7, i64 22
  %9 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %8, align 8
  %10 = tail call %"class.WTF::SharedBuffer"* %9(%"class.blink::Image"* nonnull %3) #11
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.WTF::SharedBuffer"* [ %10, %5 ], [ null, %1 ]
  ret %"class.WTF::SharedBuffer"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent28ShouldUpdateImageImmediatelyEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %7 = load %"class.blink::Image"*, %"class.blink::Image"** %6, align 8
  %8 = icmp eq %"class.blink::Image"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::Image"* %7 to i1 (%"class.blink::Image"*)***
  %11 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %11, i64 25
  %13 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::Image"* nonnull %7) #11
  br label %15

15:                                               ; preds = %5, %9, %1
  %16 = phi i1 [ true, %1 ], [ false, %5 ], [ %14, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.blink::Image"*, %"class.blink::Image"** %2, align 8
  %4 = icmp eq %"class.blink::Image"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = add i8 %7, -3
  %9 = icmp ult i8 %8, 2
  br i1 %9, label %10, label %12

10:                                               ; preds = %1, %5
  %11 = tail call %"class.blink::Image"* @_ZN5blink5Image9NullImageEv() #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi %"class.blink::Image"* [ %11, %10 ], [ %3, %5 ]
  ret %"class.blink::Image"* %13
}

declare %"class.blink::Image"* @_ZN5blink5Image9NullImageEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20ImageResourceContent13IntrinsicSizeENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::Image"* %4 to i1 (%"class.blink::Image"*)***
  %8 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %8, i64 3
  %10 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Image"* nonnull %4) #11
  br i1 %11, label %12, label %37

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %13, align 8
  %15 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %16 = icmp eq %"class.blink::Image"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 8
  %20 = add i8 %19, -3
  %21 = icmp ult i8 %20, 2
  br i1 %21, label %22, label %24

22:                                               ; preds = %17, %12
  %23 = tail call %"class.blink::Image"* @_ZN5blink5Image9NullImageEv() #11
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi %"class.blink::Image"* [ %23, %22 ], [ %15, %17 ]
  %26 = bitcast %"class.blink::Image"* %25 to i1 (%"class.blink::Image"*)***
  %27 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %27, i64 11
  %29 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Image"* %25) #11
  %31 = zext i1 %30 to i32
  %32 = bitcast %"class.blink::ImageResourceInfo"* %14 to i1 (%"class.blink::ImageResourceInfo"*, i32)***
  %33 = load i1 (%"class.blink::ImageResourceInfo"*, i32)**, i1 (%"class.blink::ImageResourceInfo"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*, i32)*, i1 (%"class.blink::ImageResourceInfo"*, i32)** %33, i64 5
  %35 = load i1 (%"class.blink::ImageResourceInfo"*, i32)*, i1 (%"class.blink::ImageResourceInfo"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::ImageResourceInfo"* %14, i32 %31) #11
  br i1 %36, label %37, label %38

37:                                               ; preds = %24, %6
  br label %38

38:                                               ; preds = %24, %37
  %39 = phi i32 [ %1, %37 ], [ 1, %24 ]
  %40 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %41 = tail call i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"* %40, i32 %39) #11
  %42 = and i64 %41, -4294967296
  %43 = and i64 %41, 4294967295
  br label %44

44:                                               ; preds = %2, %38
  %45 = phi i64 [ %42, %38 ], [ 0, %2 ]
  %46 = phi i64 [ %43, %38 ], [ 0, %2 ]
  %47 = or i64 %46, %45
  ret i64 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20ImageResourceContent27ForceOrientationIfNecessaryENS_27RespectImageOrientationEnumE(%"class.blink::ImageResourceContent"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::Image"* %4 to i1 (%"class.blink::Image"*)***
  %8 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %8, i64 3
  %10 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Image"* nonnull %4) #11
  br i1 %11, label %12, label %37

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %13, align 8
  %15 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %16 = icmp eq %"class.blink::Image"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 8
  %20 = add i8 %19, -3
  %21 = icmp ult i8 %20, 2
  br i1 %21, label %22, label %24

22:                                               ; preds = %17, %12
  %23 = tail call %"class.blink::Image"* @_ZN5blink5Image9NullImageEv() #11
  br label %24

24:                                               ; preds = %17, %22
  %25 = phi %"class.blink::Image"* [ %23, %22 ], [ %15, %17 ]
  %26 = bitcast %"class.blink::Image"* %25 to i1 (%"class.blink::Image"*)***
  %27 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %27, i64 11
  %29 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Image"* %25) #11
  %31 = zext i1 %30 to i32
  %32 = bitcast %"class.blink::ImageResourceInfo"* %14 to i1 (%"class.blink::ImageResourceInfo"*, i32)***
  %33 = load i1 (%"class.blink::ImageResourceInfo"*, i32)**, i1 (%"class.blink::ImageResourceInfo"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*, i32)*, i1 (%"class.blink::ImageResourceInfo"*, i32)** %33, i64 5
  %35 = load i1 (%"class.blink::ImageResourceInfo"*, i32)*, i1 (%"class.blink::ImageResourceInfo"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::ImageResourceInfo"* %14, i32 %31) #11
  br i1 %36, label %37, label %38

37:                                               ; preds = %2, %24, %6
  br label %38

38:                                               ; preds = %24, %37
  %39 = phi i32 [ %1, %37 ], [ 1, %24 ]
  ret i32 %39
}

declare i64 @_ZNK5blink5Image4SizeENS_27RespectImageOrientationEnumE(%"class.blink::Image"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent15IsAccessAllowedEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %5 = load %"class.blink::Image"*, %"class.blink::Image"** %4, align 8
  %6 = icmp eq %"class.blink::Image"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = add i8 %9, -3
  %11 = icmp ult i8 %10, 2
  br i1 %11, label %12, label %14

12:                                               ; preds = %7, %1
  %13 = tail call %"class.blink::Image"* @_ZN5blink5Image9NullImageEv() #11
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi %"class.blink::Image"* [ %13, %12 ], [ %5, %7 ]
  %16 = bitcast %"class.blink::Image"* %15 to i1 (%"class.blink::Image"*)***
  %17 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %17, i64 11
  %19 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::Image"* %15) #11
  %21 = zext i1 %20 to i32
  %22 = bitcast %"class.blink::ImageResourceInfo"* %3 to i1 (%"class.blink::ImageResourceInfo"*, i32)***
  %23 = load i1 (%"class.blink::ImageResourceInfo"*, i32)**, i1 (%"class.blink::ImageResourceInfo"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*, i32)*, i1 (%"class.blink::ImageResourceInfo"*, i32)** %23, i64 5
  %25 = load i1 (%"class.blink::ImageResourceInfo"*, i32)*, i1 (%"class.blink::ImageResourceInfo"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ImageResourceInfo"* %3, i32 %21) #11
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent15NotifyObserversENS0_18NotifyFinishOptionENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::ImageResourceContent"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.387", align 8
  %5 = alloca %"class.WTF::Vector.387", align 8
  %6 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 1, !range !5
  store i8 1, i8* %6, align 1
  %8 = bitcast %"class.WTF::Vector.387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #11, !alias.scope !6
  call void @_ZN3WTF12CopyToVectorIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorENS_6VectorIS3_Lj0ES8_EEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %9, %"class.WTF::Vector.387"* nonnull dereferenceable(16) %4) #11
  %10 = bitcast %"class.WTF::Vector.387"* %4 to i64*
  %11 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ImageResourceObserver"**, %"class.blink::ImageResourceObserver"*** %11, align 8
  store atomic i64 0, i64* %10 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %4, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  %16 = icmp eq i8* %6, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %3
  store i8 %7, i8* %6, align 1
  br label %18

18:                                               ; preds = %3, %17
  %19 = zext i32 %15 to i64
  %20 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %12, i64 %19
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %9, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  br label %48

25:                                               ; preds = %120, %18
  %26 = icmp eq %"class.blink::ImageResourceObserver"** %12, null
  br i1 %26, label %29, label %27, !prof !9

27:                                               ; preds = %25
  %28 = bitcast %"class.blink::ImageResourceObserver"** %12 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #11
  br label %29

29:                                               ; preds = %27, %25
  %30 = load i8, i8* %6, align 1, !range !5
  store i8 1, i8* %6, align 1
  %31 = bitcast %"class.WTF::Vector.387"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #11, !alias.scope !10
  call void @_ZN3WTF12CopyToVectorIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorENS_6VectorIS3_Lj0ES8_EEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %32, %"class.WTF::Vector.387"* nonnull dereferenceable(16) %5) #11
  %33 = bitcast %"class.WTF::Vector.387"* %5 to i64*
  %34 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ImageResourceObserver"**, %"class.blink::ImageResourceObserver"*** %34, align 8
  store atomic i64 0, i64* %33 monotonic, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %5, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %5, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br i1 %16, label %40, label %39

39:                                               ; preds = %29
  store i8 %30, i8* %6, align 1
  br label %40

40:                                               ; preds = %29, %39
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %35, i64 %41
  %43 = icmp eq i32 %38, 0
  br i1 %43, label %123, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %32, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %47 = icmp eq i32 %1, 0
  br label %128

48:                                               ; preds = %22, %120
  %49 = phi %"class.blink::ImageResourceObserver"** [ %12, %22 ], [ %121, %120 ]
  %50 = bitcast %"class.blink::ImageResourceObserver"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %23, align 8
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, null
  br i1 %53, label %120, label %54

54:                                               ; preds = %48
  %55 = load i32, i32* %24, align 8
  %56 = add i32 %55, -1
  %57 = zext i32 %56 to i64
  %58 = shl i64 %51, 32
  %59 = xor i64 %58, -1
  %60 = add i64 %51, %59
  %61 = lshr i64 %60, 22
  %62 = xor i64 %61, %60
  %63 = shl i64 %62, 13
  %64 = xor i64 %63, -1
  %65 = add i64 %62, %64
  %66 = lshr i64 %65, 8
  %67 = xor i64 %66, %65
  %68 = mul i64 %67, 9
  %69 = lshr i64 %68, 15
  %70 = xor i64 %69, %68
  %71 = shl i64 %70, 27
  %72 = xor i64 %71, -1
  %73 = add i64 %70, %72
  %74 = lshr i64 %73, 31
  %75 = xor i64 %74, %73
  %76 = trunc i64 %75 to i32
  %77 = and i32 %56, %76
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %78
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %81 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %80, align 8
  %82 = inttoptr i64 %51 to %"class.blink::ImageResourceObserver"*
  %83 = icmp eq %"class.blink::ImageResourceObserver"* %81, %82
  br i1 %83, label %112, label %84

84:                                               ; preds = %54
  %85 = xor i32 %76, -1
  %86 = lshr i32 %76, 23
  %87 = add i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %98

98:                                               ; preds = %103, %84
  %99 = phi %"class.blink::ImageResourceObserver"* [ %81, %84 ], [ %110, %103 ]
  %100 = phi i64 [ %78, %84 ], [ %107, %103 ]
  %101 = phi i64 [ 0, %84 ], [ %105, %103 ]
  %102 = icmp eq %"class.blink::ImageResourceObserver"* %99, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %98
  %104 = icmp eq i64 %101, 0
  %105 = select i1 %104, i64 %97, i64 %101
  %106 = add i64 %105, %100
  %107 = and i64 %106, %57
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %107
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 0, i32 0
  %110 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %109, align 8
  %111 = icmp eq %"class.blink::ImageResourceObserver"* %110, %82
  br i1 %111, label %112, label %98

112:                                              ; preds = %103, %54
  %113 = phi %"struct.WTF::KeyValuePair"* [ %79, %54 ], [ %108, %103 ]
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = inttoptr i64 %51 to void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)***
  %117 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)**, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)** %117, i64 2
  %119 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)** %118, align 8
  call void %119(%"class.blink::ImageResourceObserver"* %82, %"class.blink::ImageResourceContent"* %0, i32 %2) #11
  br label %120

120:                                              ; preds = %98, %112, %48, %115
  %121 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %49, i64 1
  %122 = icmp eq %"class.blink::ImageResourceObserver"** %121, %20
  br i1 %122, label %25, label %48

123:                                              ; preds = %245, %40
  %124 = icmp eq %"class.blink::ImageResourceObserver"** %35, null
  br i1 %124, label %127, label %125, !prof !9

125:                                              ; preds = %123
  %126 = bitcast %"class.blink::ImageResourceObserver"** %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %126) #11
  br label %127

127:                                              ; preds = %123, %125
  ret void

128:                                              ; preds = %44, %245
  %129 = phi %"class.blink::ImageResourceObserver"** [ %35, %44 ], [ %246, %245 ]
  %130 = bitcast %"class.blink::ImageResourceObserver"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %45, align 8
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, null
  br i1 %133, label %245, label %134

134:                                              ; preds = %128
  %135 = load i32, i32* %46, align 8
  %136 = add i32 %135, -1
  %137 = zext i32 %136 to i64
  %138 = shl i64 %131, 32
  %139 = xor i64 %138, -1
  %140 = add i64 %131, %139
  %141 = lshr i64 %140, 22
  %142 = xor i64 %141, %140
  %143 = shl i64 %142, 13
  %144 = xor i64 %143, -1
  %145 = add i64 %142, %144
  %146 = lshr i64 %145, 8
  %147 = xor i64 %146, %145
  %148 = mul i64 %147, 9
  %149 = lshr i64 %148, 15
  %150 = xor i64 %149, %148
  %151 = shl i64 %150, 27
  %152 = xor i64 %151, -1
  %153 = add i64 %150, %152
  %154 = lshr i64 %153, 31
  %155 = xor i64 %154, %153
  %156 = trunc i64 %155 to i32
  %157 = and i32 %136, %156
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 %158
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 0, i32 0
  %161 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %160, align 8
  %162 = inttoptr i64 %131 to %"class.blink::ImageResourceObserver"*
  %163 = icmp eq %"class.blink::ImageResourceObserver"* %161, %162
  br i1 %163, label %192, label %164

164:                                              ; preds = %134
  %165 = xor i32 %156, -1
  %166 = lshr i32 %156, 23
  %167 = add i32 %166, %165
  %168 = shl i32 %167, 12
  %169 = xor i32 %168, %167
  %170 = lshr i32 %169, 7
  %171 = xor i32 %170, %169
  %172 = shl i32 %171, 2
  %173 = xor i32 %172, %171
  %174 = lshr i32 %173, 20
  %175 = xor i32 %174, %173
  %176 = or i32 %175, 1
  %177 = zext i32 %176 to i64
  br label %178

178:                                              ; preds = %183, %164
  %179 = phi %"class.blink::ImageResourceObserver"* [ %161, %164 ], [ %190, %183 ]
  %180 = phi i64 [ %158, %164 ], [ %187, %183 ]
  %181 = phi i64 [ 0, %164 ], [ %185, %183 ]
  %182 = icmp eq %"class.blink::ImageResourceObserver"* %179, null
  br i1 %182, label %245, label %183

183:                                              ; preds = %178
  %184 = icmp eq i64 %181, 0
  %185 = select i1 %184, i64 %177, i64 %181
  %186 = add i64 %185, %180
  %187 = and i64 %186, %137
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %132, i64 %187
  %189 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %188, i64 0, i32 0
  %190 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %189, align 8
  %191 = icmp eq %"class.blink::ImageResourceObserver"* %190, %162
  br i1 %191, label %192, label %178

192:                                              ; preds = %183, %134
  %193 = phi %"struct.WTF::KeyValuePair"* [ %159, %134 ], [ %188, %183 ]
  %194 = icmp eq %"struct.WTF::KeyValuePair"* %193, null
  br i1 %194, label %245, label %195

195:                                              ; preds = %192
  %196 = inttoptr i64 %131 to void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)***
  %197 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)**, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)** %197, i64 2
  %199 = load void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)*, void (%"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceContent"*, i32)** %198, align 8
  call void %199(%"class.blink::ImageResourceObserver"* %162, %"class.blink::ImageResourceContent"* %0, i32 %2) #11
  br i1 %47, label %200, label %245

200:                                              ; preds = %195
  %201 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %45, align 8
  %202 = icmp eq %"struct.WTF::KeyValuePair"* %201, null
  br i1 %202, label %245, label %203

203:                                              ; preds = %200
  %204 = load i32, i32* %46, align 8
  %205 = add i32 %204, -1
  %206 = zext i32 %205 to i64
  %207 = and i32 %205, %156
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %201, i64 %208
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %209, i64 0, i32 0
  %211 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %210, align 8
  %212 = icmp eq %"class.blink::ImageResourceObserver"* %211, %162
  br i1 %212, label %241, label %213

213:                                              ; preds = %203
  %214 = xor i32 %156, -1
  %215 = lshr i32 %156, 23
  %216 = add i32 %215, %214
  %217 = shl i32 %216, 12
  %218 = xor i32 %217, %216
  %219 = lshr i32 %218, 7
  %220 = xor i32 %219, %218
  %221 = shl i32 %220, 2
  %222 = xor i32 %221, %220
  %223 = lshr i32 %222, 20
  %224 = xor i32 %223, %222
  %225 = or i32 %224, 1
  %226 = zext i32 %225 to i64
  br label %227

227:                                              ; preds = %232, %213
  %228 = phi %"class.blink::ImageResourceObserver"* [ %211, %213 ], [ %239, %232 ]
  %229 = phi i64 [ %208, %213 ], [ %236, %232 ]
  %230 = phi i64 [ 0, %213 ], [ %234, %232 ]
  %231 = icmp eq %"class.blink::ImageResourceObserver"* %228, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %227
  %233 = icmp eq i64 %230, 0
  %234 = select i1 %233, i64 %226, i64 %230
  %235 = add i64 %234, %229
  %236 = and i64 %235, %206
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %201, i64 %236
  %238 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %237, i64 0, i32 0
  %239 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %238, align 8
  %240 = icmp eq %"class.blink::ImageResourceObserver"* %239, %162
  br i1 %240, label %241, label %227

241:                                              ; preds = %232, %203
  %242 = phi %"struct.WTF::KeyValuePair"* [ %209, %203 ], [ %237, %232 ]
  %243 = icmp eq %"struct.WTF::KeyValuePair"* %242, null
  br i1 %243, label %245, label %244

244:                                              ; preds = %241
  call void @_ZN5blink20ImageResourceContent22HandleObserverFinishedEPNS_21ImageResourceObserverE(%"class.blink::ImageResourceContent"* %0, %"class.blink::ImageResourceObserver"* %162)
  br label %245

245:                                              ; preds = %178, %227, %241, %192, %200, %128, %195, %244
  %246 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %129, i64 1
  %247 = icmp eq %"class.blink::ImageResourceObserver"** %246, %42
  br i1 %247, label %123, label %128
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZN5blink20ImageResourceContent11CreateImageEb(%"class.blink::ImageResourceContent"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %8, align 8
  %10 = bitcast %"class.blink::ImageResourceInfo"* %9 to %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)***
  %11 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %11, i64 3
  %13 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %12, align 8
  %14 = tail call dereferenceable(1072) %"class.blink::ResourceResponse"* %13(%"class.blink::ImageResourceInfo"* %9) #11
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names11kContentDPRE, align 8
  %16 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %15) #11
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %7, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %68, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #11
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %20, %35
  %40 = phi %"class.WTF::StringImpl"* [ %37, %35 ], [ %18, %20 ]
  %41 = tail call i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"* nonnull %40, i16 zeroext 44, i32 -1) #11
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %68, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  %47 = icmp ult i32 %41, %46
  br i1 %47, label %48, label %68

48:                                               ; preds = %43
  %49 = add nuw i32 %41, 1
  %50 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 %49, i32 -1) #11
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = bitcast %"class.WTF::String"* %5 to i64*
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %51, i64* %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #11
  br label %68

68:                                               ; preds = %2, %35, %48, %64, %67, %39, %43
  %69 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 7
  %70 = call float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"* nonnull %5, i8* %69) #11
  %71 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 6
  store float %70, float* %71, align 8
  %72 = load i8, i8* %69, align 4, !range !5
  %73 = icmp ne i8 %72, 0
  %74 = fcmp ugt float %70, 0.000000e+00
  %75 = and i1 %74, %73
  br i1 %75, label %77, label %76

76:                                               ; preds = %68
  store float 1.000000e+00, float* %71, align 8
  store i8 0, i8* %69, align 4
  br label %77

77:                                               ; preds = %68, %76
  %78 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %8, align 8
  %79 = bitcast %"class.blink::ImageResourceInfo"* %78 to %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)***
  %80 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %80, i64 3
  %82 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %81, align 8
  %83 = call dereferenceable(1072) %"class.blink::ResourceResponse"* %82(%"class.blink::ImageResourceInfo"* %78) #11
  %84 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %83) #11
  %85 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %77
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %91, i64* %92, align 8
  br label %101

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %101

101:                                              ; preds = %93, %89
  %102 = phi i64 [ %100, %93 ], [ %91, %89 ]
  %103 = phi i32 [ %96, %93 ], [ 0, %89 ]
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %103, i32* %104, align 8
  %105 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #11
  %106 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %102, i64* %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 13, i32* %108, align 8
  %109 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  %110 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 0
  br i1 %109, label %111, label %114

111:                                              ; preds = %101
  %112 = call noalias i8* @malloc(i64 136) #11
  %113 = bitcast i8* %112 to %"class.blink::SVGImage"*
  call void @_ZN5blink8SVGImageC1EPNS_13ImageObserverEb(%"class.blink::SVGImage"* %113, %"class.blink::ImageObserver"* %110, i1 zeroext %1) #11
  br label %117

114:                                              ; preds = %101
  %115 = call noalias i8* @malloc(i64 232) #11
  %116 = bitcast i8* %115 to %"class.blink::BitmapImage"*
  call void @_ZN5blink11BitmapImageC1EPNS_13ImageObserverEb(%"class.blink::BitmapImage"* %116, %"class.blink::ImageObserver"* %110, i1 zeroext %1) #11
  br label %117

117:                                              ; preds = %114, %111
  %118 = phi i8* [ %112, %111 ], [ %115, %114 ]
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #11
  br label %134

134:                                              ; preds = %117, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %135 = bitcast i8* %118 to %"class.blink::Image"*
  ret %"class.blink::Image"* %135
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #3

declare float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent10ClearImageEv(%"class.blink::ImageResourceContent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %84, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Image"* %4 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %8 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %8, i64 22
  %10 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %9, align 8
  %11 = tail call %"class.WTF::SharedBuffer"* %10(%"class.blink::Image"* nonnull %4) #11
  %12 = icmp eq %"class.WTF::SharedBuffer"* %11, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %6
  %14 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %15 = bitcast %"class.blink::Image"* %14 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %16 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %16, i64 22
  %18 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %17, align 8
  %19 = tail call %"class.WTF::SharedBuffer"* %18(%"class.blink::Image"* %14) #11
  %20 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 0, %21
  %23 = icmp eq %"class.WTF::SharedBuffer"* %19, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #11
  %26 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %19) #11
  %30 = bitcast %"class.WTF::SharedBuffer"* %19 to i8*
  tail call void @free(i8* %30) #11
  br label %31

31:                                               ; preds = %29, %24, %13
  %32 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #11
  %33 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %11) #11
  %37 = bitcast %"class.WTF::SharedBuffer"* %11 to i8*
  tail call void @free(i8* %37) #11
  br label %38

38:                                               ; preds = %6, %31, %36
  %39 = phi i64 [ %22, %31 ], [ %22, %36 ], [ 0, %6 ]
  %40 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #11
  %41 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %40, i64 %39) #11
  %42 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %43 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %42, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::ImageObserver"* null, %"class.blink::ImageObserver"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %42, i64 0, i32 4, i32 0, i32 1, i32 0
  %45 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %46 = icmp eq %"class.blink::PersistentNode"* %45, null
  br i1 %46, label %66, label %47

47:                                               ; preds = %38
  %48 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %49 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %48, i64 0, i32 1
  %50 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %49) #11
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %54, !prof !3

52:                                               ; preds = %47
  %53 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %49, i8* %53) #11
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i8* [ %53, %52 ], [ %50, %47 ]
  %56 = bitcast i8* %55 to %"class.blink::ThreadState"**
  %57 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %58, align 8
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %61 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0, i32 0
  %62 = bitcast %"class.blink::PersistentRegion"* %59 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.blink::PersistentNode"* %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %60, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %65, align 8
  store %"class.blink::PersistentNode"* %60, %"class.blink::PersistentNode"** %61, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8
  br label %66

66:                                               ; preds = %38, %54
  %67 = bitcast %class.scoped_refptr* %2 to i64*
  %68 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  store i64 0, i64* %67, align 8
  %69 = icmp eq %"class.blink::Image"* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %68, i64 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw sub i32* %72, i32 1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %82

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %71, i64 -2
  %77 = bitcast %"class.base::RefCountedThreadSafe"* %76 to %"class.blink::Image"*
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %76 to void (%"class.blink::Image"*)***
  %79 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %79, i64 1
  %81 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %80, align 8
  tail call void %81(%"class.blink::Image"* nonnull %77) #11
  br label %82

82:                                               ; preds = %66, %70, %75
  %83 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  store i32 0, i32* %83, align 4
  br label %84

84:                                               ; preds = %1, %82
  ret void
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #3

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent27UpdateToLoadedContentStatusENS_14ResourceStatusE(%"class.blink::ImageResourceContent"* nocapture, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  switch i8 %1, label %8 [
    i8 2, label %4
    i8 1, label %4
    i8 0, label %5
  ]

4:                                                ; preds = %2, %2
  br label %8

5:                                                ; preds = %2
  %6 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #11
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  br label %8

8:                                                ; preds = %2, %5, %4
  %9 = phi i8 [ %1, %2 ], [ 0, %5 ], [ 2, %4 ]
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  store i8 %9, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent15NotifyStartLoadEv(%"class.blink::ImageResourceContent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 349, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #11
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br label %9

9:                                                ; preds = %1, %6
  store i8 1, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink20ImageResourceContent16GetContentStatusEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent18AsyncLoadCompletedEPKNS_5ImageE(%"class.blink::ImageResourceContent"*, %"class.blink::Image"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %8 = load %"class.blink::Image"*, %"class.blink::Image"** %7, align 8
  %9 = icmp eq %"class.blink::Image"* %8, %1
  br i1 %9, label %10, label %31

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  %14 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 1, i32* %5, align 4
  %15 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  br label %29

19:                                               ; preds = %10
  %20 = bitcast i32* %13 to i8*
  %21 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %20, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5blink5Image16SizeAvailabilityEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  %22 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5blink5Image16SizeAvailabilityEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %24, i8** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 369, %"class.logging::CheckOpResult"* nonnull %4) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  store i32 2, i32* %13, align 4
  %30 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  store i8 2, i8* %30, align 8
  call void @_ZN5blink20ImageResourceContent15NotifyObserversENS0_18NotifyFinishOptionENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::ImageResourceContent"* %0, i32 0, i32 1)
  br label %31

31:                                               ; preds = %2, %29
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20ImageResourceContent11UpdateImageE13scoped_refptrIN3WTF12SharedBufferEENS_14ResourceStatusENS0_17UpdateImageOptionEbb(%"class.blink::ImageResourceContent"*, %"class.WTF::SharedBuffer"*, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = ptrtoint %"class.WTF::SharedBuffer"* %1 to i64
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !9

14:                                               ; preds = %6
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %16 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %20

20:                                               ; preds = %6, %14
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), %14 ]
  %22 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %14 ]
  %23 = phi i64 [ -6148914691236517206, %6 ], [ %19, %14 ]
  %24 = add i32 %3, -1
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  call void @_ZN5blink20ImageResourceContent10ClearImageEv(%"class.blink::ImageResourceContent"* %0)
  br label %27

27:                                               ; preds = %20, %26
  %28 = icmp ult i32 %3, 2
  br i1 %28, label %29, label %277

29:                                               ; preds = %27
  %30 = icmp eq %"class.WTF::SharedBuffer"* %1, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  br label %65

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 0, i32 0
  %37 = load %"class.blink::Image"*, %"class.blink::Image"** %36, align 8
  %38 = icmp eq %"class.blink::Image"* %37, null
  br i1 %38, label %39, label %57

39:                                               ; preds = %34
  %40 = call %"class.blink::Image"* @_ZN5blink20ImageResourceContent11CreateImageEb(%"class.blink::ImageResourceContent"* %0, i1 zeroext %5)
  %41 = ptrtoint %"class.blink::Image"* %40 to i64
  %42 = bitcast %class.scoped_refptr* %35 to i64*
  %43 = load %"class.blink::Image"*, %"class.blink::Image"** %36, align 8
  store i64 %41, i64* %42, align 8
  %44 = icmp eq %"class.blink::Image"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %43, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %51 to %"class.blink::Image"*
  %53 = bitcast %"class.base::RefCountedThreadSafe"* %51 to void (%"class.blink::Image"*)***
  %54 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %54, i64 1
  %56 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %55, align 8
  call void %56(%"class.blink::Image"* nonnull %52) #11
  br label %57

57:                                               ; preds = %34, %50, %45, %39
  %58 = load %"class.blink::Image"*, %"class.blink::Image"** %36, align 8
  %59 = bitcast %"class.blink::Image"* %58 to i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)***
  %60 = load i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)**, i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)*, i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)** %60, i64 18
  %62 = load i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)*, i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)** %61, align 8
  %63 = call i32 %62(%"class.blink::Image"* %58, %"class.WTF::SharedBuffer"* nonnull %1, i1 zeroext %4) #11
  %64 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %31, %57
  %66 = phi i32 [ %63, %57 ], [ %33, %31 ]
  %67 = phi i64 [ 0, %57 ], [ %10, %31 ]
  %68 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  %69 = icmp ne i32 %66, 0
  %70 = or i1 %69, %4
  br i1 %70, label %71, label %292

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %73 = load %"class.blink::Image"*, %"class.blink::Image"** %72, align 8
  %74 = icmp eq %"class.blink::Image"* %73, null
  br i1 %74, label %276, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %76, align 8
  %78 = bitcast %"class.blink::ImageResourceInfo"* %77 to %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)***
  %79 = load %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)**, %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)*, %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)** %79, i64 14
  %81 = load %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)*, %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)** %80, align 8
  %82 = call %"class.WTF::HashSet.518"* %81(%"class.blink::ImageResourceInfo"* %77) #11
  %83 = icmp eq %"class.WTF::HashSet.518"* %82, null
  br i1 %83, label %249, label %84

84:                                               ; preds = %75
  %85 = load %"class.blink::Image"*, %"class.blink::Image"** %72, align 8
  %86 = bitcast %"class.blink::Image"* %85 to %"class.WTF::StringImpl"* (%"class.blink::Image"*)***
  %87 = load %"class.WTF::StringImpl"* (%"class.blink::Image"*)**, %"class.WTF::StringImpl"* (%"class.blink::Image"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Image"*)*, %"class.WTF::StringImpl"* (%"class.blink::Image"*)** %87, i64 20
  %89 = load %"class.WTF::StringImpl"* (%"class.blink::Image"*)*, %"class.WTF::StringImpl"* (%"class.blink::Image"*)** %88, align 8
  %90 = call %"class.WTF::StringImpl"* %89(%"class.blink::Image"* %85) #11
  %91 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %76, align 8
  %92 = bitcast %"class.blink::ImageResourceInfo"* %91 to %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)***
  %93 = load %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)**, %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)*, %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)** %93, i64 14
  %95 = load %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)*, %"class.WTF::HashSet.518"* (%"class.blink::ImageResourceInfo"*)** %94, align 8
  %96 = call %"class.WTF::HashSet.518"* %95(%"class.blink::ImageResourceInfo"* %91) #11
  %97 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #11
  %98 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %98, label %142, label %99

99:                                               ; preds = %84
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %116

106:                                              ; preds = %99
  %107 = zext i32 %105 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #11
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !3

113:                                              ; preds = %106
  call void @llvm.trap() #11
  unreachable

114:                                              ; preds = %106
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %104, align 4
  br label %116

116:                                              ; preds = %114, %99
  %117 = phi i32 [ %115, %114 ], [ %105, %99 ]
  %118 = load atomic i32, i32* %100 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %131

121:                                              ; preds = %116
  %122 = zext i32 %117 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #11
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !3

128:                                              ; preds = %121
  call void @llvm.trap() #11
  unreachable

129:                                              ; preds = %121
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %104, align 4
  br label %131

131:                                              ; preds = %129, %116
  %132 = phi i32 [ %130, %129 ], [ %117, %116 ]
  %133 = load atomic i32, i32* %100 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  %137 = add i32 %132, -1
  store i32 %137, i32* %104, align 4
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i32 [ %137, %136 ], [ %132, %131 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11
  br label %142

142:                                              ; preds = %84, %138, %141
  %143 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %144, align 8
  %145 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %146 = getelementptr inbounds %"class.WTF::HashSet.518", %"class.WTF::HashSet.518"* %96, i64 0, i32 0, i32 0
  %147 = load %"class.WTF::String"*, %"class.WTF::String"** %146, align 8
  %148 = icmp eq %"class.WTF::String"* %147, null
  br i1 %148, label %201, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.WTF::HashSet.518", %"class.WTF::HashSet.518"* %96, i64 0, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = add i32 %151, -1
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = lshr i32 %155, 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %149
  %159 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %145) #11
  br label %160

160:                                              ; preds = %158, %149
  %161 = phi i32 [ %159, %158 ], [ %156, %149 ]
  %162 = and i32 %161, %152
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 %163
  %165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %201, label %168

168:                                              ; preds = %160
  %169 = xor i32 %161, -1
  %170 = lshr i32 %161, 23
  %171 = add i32 %170, %169
  %172 = shl i32 %171, 12
  %173 = xor i32 %172, %171
  %174 = lshr i32 %173, 7
  %175 = xor i32 %174, %173
  %176 = shl i32 %175, 2
  %177 = xor i32 %176, %175
  %178 = lshr i32 %177, 20
  %179 = xor i32 %178, %177
  %180 = or i32 %179, 1
  %181 = zext i32 %180 to i64
  br label %182

182:                                              ; preds = %192, %168
  %183 = phi %"class.WTF::StringImpl"* [ %166, %168 ], [ %199, %192 ]
  %184 = phi %"class.WTF::String"* [ %164, %168 ], [ %197, %192 ]
  %185 = phi i64 [ %163, %168 ], [ %196, %192 ]
  %186 = phi i64 [ 0, %168 ], [ %194, %192 ]
  %187 = bitcast %"class.WTF::String"* %184 to i8**
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, inttoptr (i64 -1 to i8*)
  br i1 %189, label %192, label %190

190:                                              ; preds = %182
  %191 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %183, %"class.WTF::StringImpl"* %145) #11
  br i1 %191, label %201, label %192

192:                                              ; preds = %190, %182
  %193 = icmp eq i64 %186, 0
  %194 = select i1 %193, i64 %181, i64 %186
  %195 = add i64 %194, %185
  %196 = and i64 %195, %153
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 %196
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %197, i64 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %201, label %182

201:                                              ; preds = %190, %192, %142, %160
  %202 = phi %"class.WTF::String"* [ null, %142 ], [ null, %160 ], [ null, %192 ], [ %184, %190 ]
  %203 = icmp eq %"class.WTF::String"* %202, null
  %204 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #11
  br label %218

218:                                              ; preds = %201, %214, %217
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #11
  br label %234

234:                                              ; preds = %218, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #11
  br i1 %98, label %248, label %235

235:                                              ; preds = %234
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11
  br label %248

248:                                              ; preds = %234, %244, %247
  br i1 %203, label %249, label %292

249:                                              ; preds = %75, %248
  %250 = load %"class.blink::Image"*, %"class.blink::Image"** %72, align 8
  %251 = icmp eq %"class.blink::Image"* %250, null
  br i1 %251, label %276, label %252

252:                                              ; preds = %249
  %253 = bitcast %"class.blink::Image"* %250 to i64 (%"class.blink::Image"*)***
  %254 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %253, align 8
  %255 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %254, i64 13
  %256 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %255, align 8
  %257 = call i64 %256(%"class.blink::Image"* nonnull %250) #11
  %258 = trunc i64 %257 to i32
  %259 = lshr i64 %257, 32
  %260 = trunc i64 %259 to i32
  %261 = icmp slt i32 %258, 1
  %262 = icmp slt i32 %260, 1
  %263 = or i1 %261, %262
  br i1 %263, label %264, label %277

264:                                              ; preds = %252
  %265 = load %"class.blink::Image"*, %"class.blink::Image"** %72, align 8
  %266 = icmp eq %"class.blink::Image"* %265, null
  br i1 %266, label %276, label %267

267:                                              ; preds = %264
  %268 = bitcast %"class.blink::Image"* %265 to i1 (%"class.blink::Image"*)***
  %269 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %268, align 8
  %270 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %269, i64 2
  %271 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %270, align 8
  %272 = call zeroext i1 %271(%"class.blink::Image"* nonnull %265) #11
  br i1 %272, label %273, label %276

273:                                              ; preds = %267
  %274 = load i32, i32* %68, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %249, %71, %264, %273, %267
  call void @_ZN5blink20ImageResourceContent10ClearImageEv(%"class.blink::ImageResourceContent"* %0)
  br label %292

277:                                              ; preds = %27, %252, %273
  %278 = phi i64 [ %67, %273 ], [ %67, %252 ], [ %10, %27 ]
  br i1 %4, label %279, label %291

279:                                              ; preds = %277
  %280 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 4
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %291, label %283

283:                                              ; preds = %279
  switch i8 %2, label %288 [
    i8 2, label %284
    i8 1, label %284
    i8 0, label %285
  ]

284:                                              ; preds = %283, %283
  br label %288

285:                                              ; preds = %283
  %286 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #11
  %287 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #11
  br label %288

288:                                              ; preds = %283, %284, %285
  %289 = phi i8 [ %2, %283 ], [ 0, %285 ], [ 2, %284 ]
  %290 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  store i8 %289, i8* %290, align 8
  call void @_ZN5blink20ImageResourceContent15NotifyObserversENS0_18NotifyFinishOptionENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::ImageResourceContent"* %0, i32 0, i32 1)
  br label %292

291:                                              ; preds = %279, %277
  call void @_ZN5blink20ImageResourceContent15NotifyObserversENS0_18NotifyFinishOptionENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::ImageResourceContent"* %0, i32 1, i32 1)
  br label %292

292:                                              ; preds = %288, %291, %65, %248, %276
  %293 = phi i64 [ %67, %276 ], [ %278, %291 ], [ %278, %288 ], [ %67, %248 ], [ %67, %65 ]
  %294 = phi i32 [ 1, %276 ], [ 0, %291 ], [ 0, %288 ], [ 1, %248 ], [ 0, %65 ]
  %295 = icmp eq i8* %22, null
  br i1 %295, label %300, label %296

296:                                              ; preds = %292
  %297 = load i8, i8* %22, align 1
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %300, label %299

299:                                              ; preds = %296
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %23) #11
  br label %300

300:                                              ; preds = %292, %296, %299
  %301 = inttoptr i64 %293 to %"class.WTF::SharedBuffer"*
  %302 = icmp eq i64 %293, 0
  br i1 %302, label %310, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %301, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %304) #11
  %305 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %301, i64 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %303
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %301) #11
  %309 = inttoptr i64 %293 to i8*
  call void @free(i8* %309) #11
  br label %310

310:                                              ; preds = %300, %303, %308
  ret i32 %294
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.657", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.657", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #11
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #11
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #11
  %29 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #11
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #11
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.658"* nonnull %47, i8* %50) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #11
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #11
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #11
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #11
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #11
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #11
  %90 = bitcast %"class.WTF::StringTypeAdapter.657"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #11
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.657"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #11
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.658"* nonnull %108, i16* %111) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #11
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #11
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #11
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #11
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20ImageResourceContent20GetCompressionFormatEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %3 = load %"class.blink::Image"*, %"class.blink::Image"** %2, align 8
  %4 = icmp eq %"class.blink::Image"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::Image"* %3 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %7 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %7, i64 22
  %9 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %8, align 8
  %10 = tail call %"class.WTF::SharedBuffer"* %9(%"class.blink::Image"* nonnull %3) #11
  %11 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %11, align 8
  %13 = bitcast %"class.blink::ImageResourceInfo"* %12 to %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)***
  %14 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %14, i64 3
  %16 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %15, align 8
  %17 = tail call dereferenceable(1072) %"class.blink::ResourceResponse"* %16(%"class.blink::ImageResourceInfo"* %12) #11
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16ResourceResponse15HttpContentTypeEv(%"class.blink::ResourceResponse"* %17) #11
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #11
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  tail call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %39

37:                                               ; preds = %5
  %38 = tail call i32 @_ZN5blink12ImageDecoder20GetCompressionFormatE13scoped_refptrIN3WTF12SharedBufferEENS2_6StringE(%"class.WTF::SharedBuffer"* %10, %"class.WTF::StringImpl"* null) #11
  br label %52

39:                                               ; preds = %20, %35
  %40 = tail call i32 @_ZN5blink12ImageDecoder20GetCompressionFormatE13scoped_refptrIN3WTF12SharedBufferEENS2_6StringE(%"class.WTF::SharedBuffer"* %10, %"class.WTF::StringImpl"* nonnull %18) #11
  %41 = load atomic i32, i32* %21 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #11
  br label %52

52:                                               ; preds = %1, %51, %48, %37
  %53 = phi i32 [ 0, %1 ], [ %38, %37 ], [ %40, %48 ], [ %40, %51 ]
  ret i32 %53
}

declare i32 @_ZN5blink12ImageDecoder20GetCompressionFormatE13scoped_refptrIN3WTF12SharedBufferEENS2_6StringE(%"class.WTF::SharedBuffer"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZNK5blink20ImageResourceContent11GetResponseEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = bitcast %"class.blink::ImageResourceInfo"* %3 to %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)***
  %5 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %5, i64 3
  %7 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %6, align 8
  %8 = tail call dereferenceable(1072) %"class.blink::ResourceResponse"* %7(%"class.blink::ImageResourceInfo"* %3) #11
  ret %"class.blink::ResourceResponse"* %8
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16ResourceResponse15HttpContentTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20ImageResourceContent28IsAcceptableCompressionRatioERNS_16ExecutionContextE(%"class.blink::ImageResourceContent"* nocapture readonly, %"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PolicyValue", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::PolicyValue", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::PolicyValue", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %10 = load %"class.blink::Image"*, %"class.blink::Image"** %9, align 8
  %11 = icmp eq %"class.blink::Image"* %10, null
  br i1 %11, label %145, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::Image"* %10 to i64 (%"class.blink::Image"*)***
  %14 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %14, i64 13
  %16 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %15, align 8
  %17 = tail call i64 %16(%"class.blink::Image"* nonnull %10) #11
  %18 = shl i64 %17, 32
  %19 = ashr exact i64 %18, 32
  %20 = ashr i64 %17, 32
  %21 = mul nsw i64 %19, %20
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %145, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %24, align 8
  %26 = bitcast %"class.blink::ImageResourceInfo"* %25 to %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)***
  %27 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %27, i64 3
  %29 = load %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::ResourceResponse"* (%"class.blink::ImageResourceInfo"*)** %28, align 8
  %30 = tail call dereferenceable(1072) %"class.blink::ResourceResponse"* %29(%"class.blink::ImageResourceInfo"* %25) #11
  %31 = tail call i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"* %30) #11
  %32 = sitofp i64 %31 to double
  %33 = icmp slt i64 %31, 1
  br i1 %33, label %34, label %67

34:                                               ; preds = %23
  %35 = load %"class.blink::Image"*, %"class.blink::Image"** %9, align 8
  %36 = bitcast %"class.blink::Image"* %35 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %37 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %37, i64 22
  %39 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %38, align 8
  %40 = tail call %"class.WTF::SharedBuffer"* %39(%"class.blink::Image"* %35) #11
  %41 = icmp eq %"class.WTF::SharedBuffer"* %40, null
  br i1 %41, label %67, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %40, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %43) #11
  %44 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %40) #11
  %48 = bitcast %"class.WTF::SharedBuffer"* %40 to i8*
  tail call void @free(i8* %48) #11
  br label %49

49:                                               ; preds = %42, %47
  %50 = load %"class.blink::Image"*, %"class.blink::Image"** %9, align 8
  %51 = bitcast %"class.blink::Image"* %50 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %52 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %52, i64 22
  %54 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %53, align 8
  %55 = tail call %"class.WTF::SharedBuffer"* %54(%"class.blink::Image"* %50) #11
  %56 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %55, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = uitofp i64 %57 to double
  %59 = icmp eq %"class.WTF::SharedBuffer"* %55, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %55, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #11
  %62 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %55) #11
  %66 = bitcast %"class.WTF::SharedBuffer"* %55 to i8*
  tail call void @free(i8* %66) #11
  br label %67

67:                                               ; preds = %34, %23, %65, %60, %49
  %68 = phi double [ %58, %49 ], [ %58, %60 ], [ %58, %65 ], [ %32, %23 ], [ %32, %34 ]
  %69 = fadd double %68, -1.024000e+03
  %70 = uitofp i64 %21 to double
  %71 = fdiv double %69, %70
  %72 = tail call i32 @_ZNK5blink20ImageResourceContent20GetCompressionFormatEv(%"class.blink::ImageResourceContent"* %0)
  %73 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %24, align 8
  %74 = bitcast %"class.blink::ImageResourceInfo"* %73 to %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)***
  %75 = load %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)*** %74, align 8
  %76 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)** %75, i64 1
  %77 = load %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)** %76, align 8
  %78 = tail call dereferenceable(112) %"class.blink::KURL"* %77(%"class.blink::ImageResourceInfo"* %73) #11
  %79 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %78, i64 0, i32 4
  switch i32 %72, label %145 [
    i32 1, label %80
    i32 2, label %101
  ]

80:                                               ; preds = %67
  call void @_ZN5blink11PolicyValue15CreateDecDoubleEd(%"class.blink::PolicyValue"* nonnull sret %3, double %71) #11
  %81 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #11
  %82 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0)) #11
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueENS_13ReportOptionsERKN3WTF6StringES8_(%"class.blink::ExecutionContext"* %1, i32 5, %"class.blink::PolicyValue"* nonnull byval(%"class.blink::PolicyValue") align 8 %3, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %79) #11
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #11
  br label %100

100:                                              ; preds = %80, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #11
  br label %145

101:                                              ; preds = %67
  %102 = fadd double %68, -1.024000e+04
  %103 = fdiv double %102, %70
  call void @_ZN5blink11PolicyValue15CreateDecDoubleEd(%"class.blink::PolicyValue"* nonnull sret %5, double %103) #11
  %104 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  %105 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0)) #11
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueENS_13ReportOptionsERKN3WTF6StringES8_(%"class.blink::ExecutionContext"* %1, i32 2, %"class.blink::PolicyValue"* nonnull byval(%"class.blink::PolicyValue") align 8 %5, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %79) #11
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #11
  br label %123

123:                                              ; preds = %101, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  call void @_ZN5blink11PolicyValue15CreateDecDoubleEd(%"class.blink::PolicyValue"* nonnull sret %7, double %71) #11
  %124 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #11
  %125 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0)) #11
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueENS_13ReportOptionsERKN3WTF6StringES8_(%"class.blink::ExecutionContext"* %1, i32 4, %"class.blink::PolicyValue"* nonnull byval(%"class.blink::PolicyValue") align 8 %7, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %79) #11
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #11
  br label %143

143:                                              ; preds = %123, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #11
  %144 = and i1 %107, %127
  br label %145

145:                                              ; preds = %2, %12, %67, %143, %100
  %146 = phi i1 [ true, %2 ], [ true, %12 ], [ %84, %100 ], [ %144, %143 ], [ true, %67 ]
  ret i1 %146
}

declare i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink20ImageResourceContent3UrlEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = bitcast %"class.blink::ImageResourceInfo"* %3 to %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)***
  %5 = load %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)**, %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)** %5, i64 1
  %7 = load %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)*, %"class.blink::KURL"* (%"class.blink::ImageResourceInfo"*)** %6, align 8
  %8 = tail call dereferenceable(112) %"class.blink::KURL"* %7(%"class.blink::ImageResourceInfo"* %3) #11
  ret %"class.blink::KURL"* %8
}

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueENS_13ReportOptionsERKN3WTF6StringES8_(%"class.blink::ExecutionContext"*, i32, %"class.blink::PolicyValue"* byval(%"class.blink::PolicyValue") align 8, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink11PolicyValue15CreateDecDoubleEd(%"class.blink::PolicyValue"* sret, double) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent20DecodedSizeChangedToEPKNS_5ImageEm(%"class.blink::ImageResourceContent"* nocapture readonly, %"class.blink::Image"* readnone, i64) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::Image"* %1, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %7 = load %"class.blink::Image"*, %"class.blink::Image"** %6, align 8
  %8 = icmp eq %"class.blink::Image"* %7, %1
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %10, align 8
  %12 = bitcast %"class.blink::ImageResourceInfo"* %11 to void (%"class.blink::ImageResourceInfo"*, i64)***
  %13 = load void (%"class.blink::ImageResourceInfo"*, i64)**, void (%"class.blink::ImageResourceInfo"*, i64)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*, i64)*, void (%"class.blink::ImageResourceInfo"*, i64)** %13, i64 8
  %15 = load void (%"class.blink::ImageResourceInfo"*, i64)*, void (%"class.blink::ImageResourceInfo"*, i64)** %14, align 8
  tail call void %15(%"class.blink::ImageResourceInfo"* %11, i64 %2) #11
  br label %16

16:                                               ; preds = %5, %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20ImageResourceContent20ShouldPauseAnimationEPKNS_5ImageE(%"class.blink::ImageResourceContent"*, %"class.blink::Image"* readnone) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Image"* %1, null
  br i1 %3, label %100, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %6 = load %"class.blink::Image"*, %"class.blink::Image"** %5, align 8
  %7 = icmp eq %"class.blink::Image"* %6, %1
  br i1 %7, label %8, label %100

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 1, !range !5
  store i8 1, i8* %9, align 1
  %11 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %18
  br i1 %13, label %53, label %20

20:                                               ; preds = %8
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"struct.WTF::KeyValuePair"* [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"struct.WTF::KeyValuePair"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %19
  br i1 %28, label %53, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"struct.WTF::KeyValuePair"* [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, %19
  br i1 %31, label %53, label %32

32:                                               ; preds = %29, %51
  %33 = phi %"struct.WTF::KeyValuePair"* [ %45, %51 ], [ %30, %29 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %34, align 8
  %36 = bitcast %"class.blink::ImageResourceObserver"* %35 to i1 (%"class.blink::ImageResourceObserver"*)***
  %37 = load i1 (%"class.blink::ImageResourceObserver"*)**, i1 (%"class.blink::ImageResourceObserver"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::ImageResourceObserver"*)*, i1 (%"class.blink::ImageResourceObserver"*)** %37, i64 6
  %39 = load i1 (%"class.blink::ImageResourceObserver"*)*, i1 (%"class.blink::ImageResourceObserver"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::ImageResourceObserver"* %35) #11
  br i1 %40, label %96, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair"* %42, %19
  br i1 %43, label %53, label %44

44:                                               ; preds = %41, %48
  %45 = phi %"struct.WTF::KeyValuePair"* [ %49, %48 ], [ %42, %41 ]
  %46 = bitcast %"struct.WTF::KeyValuePair"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, %19
  br i1 %50, label %53, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %45, %19
  br i1 %52, label %53, label %32

53:                                               ; preds = %26, %41, %51, %48, %8, %29
  %54 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %61
  br i1 %56, label %96, label %63

63:                                               ; preds = %53
  %64 = icmp eq i32 %60, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %63, %69
  %66 = phi %"struct.WTF::KeyValuePair"* [ %70, %69 ], [ %58, %63 ]
  %67 = bitcast %"struct.WTF::KeyValuePair"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, %62
  br i1 %71, label %96, label %65

72:                                               ; preds = %65, %63
  %73 = phi %"struct.WTF::KeyValuePair"* [ %58, %63 ], [ %66, %65 ]
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, %62
  br i1 %74, label %96, label %75

75:                                               ; preds = %72, %94
  %76 = phi %"struct.WTF::KeyValuePair"* [ %88, %94 ], [ %73, %72 ]
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0
  %78 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %77, align 8
  %79 = bitcast %"class.blink::ImageResourceObserver"* %78 to i1 (%"class.blink::ImageResourceObserver"*)***
  %80 = load i1 (%"class.blink::ImageResourceObserver"*)**, i1 (%"class.blink::ImageResourceObserver"*)*** %79, align 8
  %81 = getelementptr inbounds i1 (%"class.blink::ImageResourceObserver"*)*, i1 (%"class.blink::ImageResourceObserver"*)** %80, i64 6
  %82 = load i1 (%"class.blink::ImageResourceObserver"*)*, i1 (%"class.blink::ImageResourceObserver"*)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.blink::ImageResourceObserver"* %78) #11
  br i1 %83, label %96, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 1
  %86 = icmp eq %"struct.WTF::KeyValuePair"* %85, %62
  br i1 %86, label %96, label %87

87:                                               ; preds = %84, %91
  %88 = phi %"struct.WTF::KeyValuePair"* [ %92, %91 ], [ %85, %84 ]
  %89 = bitcast %"struct.WTF::KeyValuePair"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %94 [
    i64 -1, label %91
    i64 0, label %91
  ]

91:                                               ; preds = %87, %87
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %88, i64 1
  %93 = icmp eq %"struct.WTF::KeyValuePair"* %92, %62
  br i1 %93, label %96, label %87

94:                                               ; preds = %87
  %95 = icmp eq %"struct.WTF::KeyValuePair"* %88, %62
  br i1 %95, label %96, label %75

96:                                               ; preds = %32, %69, %84, %94, %75, %91, %53, %72
  %97 = phi i1 [ true, %72 ], [ true, %53 ], [ true, %91 ], [ true, %84 ], [ true, %94 ], [ false, %75 ], [ true, %69 ], [ false, %32 ]
  %98 = icmp eq i8* %9, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  store i8 %10, i8* %9, align 1
  br label %100

100:                                              ; preds = %4, %99, %96, %2
  %101 = phi i1 [ false, %2 ], [ false, %4 ], [ %97, %96 ], [ %97, %99 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent7ChangedEPKNS_5ImageE(%"class.blink::ImageResourceContent"*, %"class.blink::Image"* readnone) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Image"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %6 = load %"class.blink::Image"*, %"class.blink::Image"** %5, align 8
  %7 = icmp eq %"class.blink::Image"* %6, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_ZN5blink20ImageResourceContent15NotifyObserversENS0_18NotifyFinishOptionENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::ImageResourceContent"* %0, i32 1, i32 0)
  br label %9

9:                                                ; preds = %4, %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent30EmulateLoadStartedForInspectorEPNS_15ResourceFetcherERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::ImageResourceContent"* nocapture readonly, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %5, align 8
  %7 = bitcast %"class.blink::ImageResourceInfo"* %6 to void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)***
  %8 = load void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)** %8, i64 11
  %10 = load void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*, %"class.blink::KURL"*, %"class.WTF::AtomicString"*)** %9, align 8
  tail call void %10(%"class.blink::ImageResourceInfo"* %6, %"class.blink::ResourceFetcher"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent9IsLoadingEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent20LoadFailedOrCanceledEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20ImageResourceContent15LoadResponseEndEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = bitcast %"class.blink::ImageResourceInfo"* %3 to i64 (%"class.blink::ImageResourceInfo"*)***
  %5 = load i64 (%"class.blink::ImageResourceInfo"*)**, i64 (%"class.blink::ImageResourceInfo"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.blink::ImageResourceInfo"*)*, i64 (%"class.blink::ImageResourceInfo"*)** %5, i64 2
  %7 = load i64 (%"class.blink::ImageResourceInfo"*)*, i64 (%"class.blink::ImageResourceInfo"*)** %6, align 8
  %8 = tail call i64 %7(%"class.blink::ImageResourceInfo"* %3) #11
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent28HasCacheControlNoStoreHeaderEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = bitcast %"class.blink::ImageResourceInfo"* %3 to i1 (%"class.blink::ImageResourceInfo"*)***
  %5 = load i1 (%"class.blink::ImageResourceInfo"*)**, i1 (%"class.blink::ImageResourceInfo"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %5, i64 6
  %7 = load i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ImageResourceInfo"* %3) #11
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink20ImageResourceContent27DevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 6
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent30HasDevicePixelRatioHeaderValueEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 4, !range !5
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20ImageResourceContent16GetResourceErrorEv(%"class.absl::optional.276"* noalias sret, %"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %1, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %3, align 8
  %5 = bitcast %"class.blink::ImageResourceInfo"* %4 to void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)***
  %6 = load void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)**, void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)*, void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)** %6, i64 7
  %8 = load void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)*, void (%"class.absl::optional.276"*, %"class.blink::ImageResourceInfo"*)** %7, align 8
  tail call void %8(%"class.absl::optional.276"* sret %0, %"class.blink::ImageResourceInfo"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent16IsCacheValidatorEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = bitcast %"class.blink::ImageResourceInfo"* %3 to i1 (%"class.blink::ImageResourceInfo"*)***
  %5 = load i1 (%"class.blink::ImageResourceInfo"*)**, i1 (%"class.blink::ImageResourceInfo"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %5, i64 4
  %7 = load i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ImageResourceInfo"* %3) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent17LoadDeferredImageEPNS_15ResourceFetcherE(%"class.blink::ImageResourceContent"* nocapture readonly, %"class.blink::ResourceFetcher"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %3, align 8
  %5 = bitcast %"class.blink::ImageResourceInfo"* %4 to void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)***
  %6 = load void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)**, void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)*, void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)** %6, i64 12
  %8 = load void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)*, void (%"class.blink::ImageResourceInfo"*, %"class.blink::ResourceFetcher"*)** %7, align 8
  tail call void %8(%"class.blink::ImageResourceInfo"* %4, %"class.blink::ResourceFetcher"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink20ImageResourceContent12IsAdResourceEv(%"class.blink::ImageResourceContent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.blink::ImageResourceInfo"*, %"class.blink::ImageResourceInfo"** %2, align 8
  %4 = bitcast %"class.blink::ImageResourceInfo"* %3 to i1 (%"class.blink::ImageResourceInfo"*)***
  %5 = load i1 (%"class.blink::ImageResourceInfo"*)**, i1 (%"class.blink::ImageResourceInfo"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %5, i64 13
  %7 = load i1 (%"class.blink::ImageResourceInfo"*)*, i1 (%"class.blink::ImageResourceInfo"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ImageResourceInfo"* %3) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ImageResourceContent22RecordDecodedImageTypeEPNS_10UseCounterE(%"class.blink::ImageResourceContent"* nocapture readonly, %"class.blink::UseCounter"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::Image"* %4 to i1 (%"class.blink::Image"*)***
  %8 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %8, i64 3
  %10 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Image"* nonnull %4) #11
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::Image"* %4 to %"class.blink::BitmapImage"*
  tail call void @_ZN5blink11BitmapImage22RecordDecodedImageTypeEPNS_10UseCounterE(%"class.blink::BitmapImage"* nonnull %13, %"class.blink::UseCounter"* %1) #11
  br label %14

14:                                               ; preds = %6, %2, %12
  ret void
}

declare void @_ZN5blink11BitmapImage22RecordDecodedImageTypeEPNS_10UseCounterE(%"class.blink::BitmapImage"*, %"class.blink::UseCounter"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ImageResourceContentD2Ev(%"class.blink::ImageResourceContent"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20ImageResourceContentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %8, label %6, !prof !9

6:                                                ; preds = %1
  %7 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  br i1 %11, label %14, label %12, !prof !9

12:                                               ; preds = %8
  %13 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %9, align 8
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %16 = load %"class.blink::Image"*, %"class.blink::Image"** %15, align 8
  %17 = icmp eq %"class.blink::Image"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %16, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %24 to %"class.blink::Image"*
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %24 to void (%"class.blink::Image"*)***
  %27 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %27, i64 1
  %29 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %28, align 8
  tail call void %29(%"class.blink::Image"* nonnull %25) #11
  br label %30

30:                                               ; preds = %14, %18, %23
  %31 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 0
  tail call void @_ZN5blink13ImageObserverD2Ev(%"class.blink::ImageObserver"* %31) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ImageResourceContentD0Ev(%"class.blink::ImageResourceContent"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20ImageResourceContentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %8, label %6, !prof !9

6:                                                ; preds = %1
  %7 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  br i1 %11, label %14, label %12, !prof !9

12:                                               ; preds = %8
  %13 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %13) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %9, align 8
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 8, i32 0
  %16 = load %"class.blink::Image"*, %"class.blink::Image"** %15, align 8
  %17 = icmp eq %"class.blink::Image"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %16, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %24 to %"class.blink::Image"*
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %24 to void (%"class.blink::Image"*)***
  %27 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %27, i64 1
  %29 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %28, align 8
  tail call void %29(%"class.blink::Image"* nonnull %25) #11
  br label %30

30:                                               ; preds = %14, %18, %23
  %31 = getelementptr inbounds %"class.blink::ImageResourceContent", %"class.blink::ImageResourceContent"* %0, i64 0, i32 0
  tail call void @_ZN5blink13ImageObserverD2Ev(%"class.blink::ImageObserver"* %31) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"*, i16 zeroext, i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN5blink8SVGImageC1EPNS_13ImageObserverEb(%"class.blink::SVGImage"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZN5blink11BitmapImageC1EPNS_13ImageObserverEb(%"class.blink::BitmapImage"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN5blink5Image16SizeAvailabilityEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13ImageObserverD2Ev(%"class.blink::ImageObserver"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"* nocapture, i8* nocapture) #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink8internal14FinalizerTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE8FinalizeEPv(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121NullImageResourceInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 120
  %4 = bitcast i8* %3 to %"class.blink::ResourceResponse"*
  tail call void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"* %4) #11
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  %6 = bitcast i8* %5 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %6) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { i8*, i8 } @_ZN5blink9NameTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE7GetNameEPKv(i8* nocapture readnone) #10 align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.203"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo3UrlEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* readnone) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::NullImageResourceInfo", %"class.blink::(anonymous namespace)::NullImageResourceInfo"* %0, i64 0, i32 1
  ret %"class.blink::KURL"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo15LoadResponseEndEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone) unnamed_addr #10 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo11GetResponseEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* readnone) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::NullImageResourceInfo", %"class.blink::(anonymous namespace)::NullImageResourceInfo"* %0, i64 0, i32 2
  ret %"class.blink::ResourceResponse"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo16IsCacheValidatorEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone) unnamed_addr #10 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo15IsAccessAllowedENS_17ImageResourceInfo40DoesCurrentFrameHaveSingleSecurityOriginE(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone, i32) unnamed_addr #10 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo28HasCacheControlNoStoreHeaderEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone) unnamed_addr #10 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo16GetResourceErrorEv(%"class.absl::optional.276"* noalias nocapture sret, %"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.276", %"class.absl::optional.276"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.absl::optional.276", %"class.absl::optional.276"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %union.anon.280* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 208, i1 false) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo14SetDecodedSizeEm(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture, i64) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo23WillAddClientOrObserverEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo25DidRemoveClientOrObserverEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo30EmulateLoadStartedForInspectorEPNS_15ResourceFetcherERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture, %"class.blink::ResourceFetcher"* nocapture, %"class.blink::KURL"* nocapture dereferenceable(112), %"class.WTF::AtomicString"* nocapture dereferenceable(8)) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121NullImageResourceInfo17LoadDeferredImageEPNS_15ResourceFetcherE(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture, %"class.blink::ResourceFetcher"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo12IsAdResourceEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone) unnamed_addr #10 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.WTF::HashSet.518"* @_ZNK5blink12_GLOBAL__N_121NullImageResourceInfo28GetUnsupportedImageMimeTypesEv(%"class.blink::(anonymous namespace)::NullImageResourceInfo"* nocapture readnone) unnamed_addr #10 align 2 {
  ret %"class.WTF::HashSet.518"* null
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_121NullImageResourceInfoELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::NullImageResourceInfo"**
  %5 = load %"class.blink::(anonymous namespace)::NullImageResourceInfo"*, %"class.blink::(anonymous namespace)::NullImageResourceInfo"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::(anonymous namespace)::NullImageResourceInfo"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::NullImageResourceInfo"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_121NullImageResourceInfoEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20ImageResourceContentEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.203"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20ImageResourceContentEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.203"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20ImageResourceContentEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #11, !range !4
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #11
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20ImageResourceContentEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20ImageResourceContentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 64
  %4 = bitcast i8* %3 to %"struct.WTF::KeyValuePair"**
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %9, label %7, !prof !9

7:                                                ; preds = %1
  %8 = bitcast %"struct.WTF::KeyValuePair"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds i8, i8* %0, i64 40
  %11 = bitcast i8* %10 to %"struct.WTF::KeyValuePair"**
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, null
  br i1 %13, label %16, label %14, !prof !9

14:                                               ; preds = %9
  %15 = bitcast %"struct.WTF::KeyValuePair"* %12 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %11, align 8
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds i8, i8* %0, i64 32
  %18 = bitcast i8* %17 to %"class.blink::Image"**
  %19 = load %"class.blink::Image"*, %"class.blink::Image"** %18, align 8
  %20 = icmp eq %"class.blink::Image"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %19, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe"* %27 to %"class.blink::Image"*
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %27 to void (%"class.blink::Image"*)***
  %30 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %30, i64 1
  %32 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %31, align 8
  tail call void %32(%"class.blink::Image"* nonnull %28) #11
  br label %33

33:                                               ; preds = %16, %21, %26
  %34 = bitcast i8* %0 to %"class.blink::ImageObserver"*
  tail call void @_ZN5blink13ImageObserverD2Ev(%"class.blink::ImageObserver"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20ImageResourceContentEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable"*, %"class.blink::ImageResourceObserver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::ImageResourceObserver"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::ImageResourceObserver"*
  %38 = icmp eq %"class.blink::ImageResourceObserver"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::ImageResourceObserver"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::ImageResourceObserver"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %64, align 8
  %66 = icmp eq %"class.blink::ImageResourceObserver"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::ImageResourceObserver"** dereferenceable(8) %53) #11
  %55 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair"* %55, %"struct.WTF::KeyValuePair"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable"*, %"class.blink::ImageResourceObserver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::ImageResourceObserver"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %34, align 8
  %36 = icmp eq %"class.blink::ImageResourceObserver"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::ImageResourceObserver"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::ImageResourceObserver"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::ImageResourceObserver"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::ImageResourceObserver"* %63, inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %78 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %77, align 8
  %79 = icmp eq %"class.blink::ImageResourceObserver"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::ImageResourceObserver"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::ImageResourceObserver"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %40, align 8
  %42 = icmp eq %"class.blink::ImageResourceObserver"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::ImageResourceObserver"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::ImageResourceObserver"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::ImageResourceObserver"* %59, %43
  br i1 %64, label %104, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::ImageResourceObserver"* %59, inttoptr (i64 -1 to %"class.blink::ImageResourceObserver"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %73, align 8
  %75 = icmp eq %"class.blink::ImageResourceObserver"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %92 = load i32, i32* %2, align 4
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %12, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %87
  %103 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %104

104:                                              ; preds = %58, %87, %102
  %105 = phi i8 [ 1, %87 ], [ 1, %102 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair"* [ %89, %87 ], [ %103, %102 ], [ %60, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink21ImageResourceObserverEjEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPN5blink21ImageResourceObserverENS_12KeyValuePairIS3_jEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IjEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12CopyToVectorIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorENS_6VectorIS3_Lj0ES8_EEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24), %"class.WTF::Vector.387"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, %4
  br i1 %7, label %8, label %63

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, %4
  br i1 %11, label %12, label %51

12:                                               ; preds = %8
  %13 = lshr i32 %10, 2
  %14 = add nuw i32 %10, 1
  %15 = add i32 %14, %13
  %16 = icmp ugt i32 %15, 4
  %17 = select i1 %16, i32 %15, i32 4
  %18 = icmp ugt i32 %17, %4
  %19 = select i1 %18, i32 %17, i32 %4
  %20 = icmp ult i32 %10, %19
  br i1 %20, label %21, label %51, !prof !9

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ImageResourceObserver"**, %"class.blink::ImageResourceObserver"*** %22, align 8
  %24 = icmp eq %"class.blink::ImageResourceObserver"** %23, null
  %25 = zext i32 %19 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink21ImageResourceObserverEEEmm(i64 %25) #11
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink21ImageResourceObserverEEEPKcv, i64 0, i64 0)) #11
  br i1 %24, label %28, label %33

28:                                               ; preds = %21
  %29 = ptrtoint i8* %27 to i64
  %30 = bitcast %"class.WTF::Vector.387"* %1 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = lshr i64 %26, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %9, align 8
  br label %51

33:                                               ; preds = %21
  %34 = lshr i64 %26, 3
  %35 = ptrtoint i8* %27 to i64
  %36 = load %"class.blink::ImageResourceObserver"**, %"class.blink::ImageResourceObserver"*** %22, align 8
  %37 = icmp ne i8* %27, null
  %38 = icmp ne %"class.blink::ImageResourceObserver"** %36, null
  %39 = and i1 %37, %38
  %40 = bitcast %"class.blink::ImageResourceObserver"** %36 to i8*
  br i1 %39, label %41, label %47, !prof !9

41:                                               ; preds = %33
  %42 = load i32, i32* %5, align 4
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %40, i64 %44, i1 false) #11
  %45 = bitcast %"class.WTF::Vector.387"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %41, %33
  %48 = phi i8* [ %46, %41 ], [ %40, %33 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #11
  %49 = bitcast %"class.WTF::Vector.387"* %1 to i64*
  store atomic i64 %35, i64* %49 monotonic, align 8
  %50 = trunc i64 %34 to i32
  store i32 %50, i32* %9, align 8
  br label %51

51:                                               ; preds = %47, %28, %12, %8
  %52 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %1, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::ImageResourceObserver"**, %"class.blink::ImageResourceObserver"*** %52, align 8
  %54 = load i32, i32* %5, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %53, i64 %55
  %57 = zext i32 %4 to i64
  %58 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %53, i64 %57
  %59 = bitcast %"class.blink::ImageResourceObserver"** %56 to i8*
  %60 = ptrtoint %"class.blink::ImageResourceObserver"** %58 to i64
  %61 = ptrtoint %"class.blink::ImageResourceObserver"** %56 to i64
  %62 = sub i64 %60, %61
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 %62, i1 false) #11
  br label %63

63:                                               ; preds = %2, %51
  store i32 %4, i32* %5, align 4
  %64 = load i32, i32* %3, align 4
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 %70
  br i1 %65, label %84, label %72

72:                                               ; preds = %63
  %73 = icmp eq i32 %69, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %72, %78
  %75 = phi %"struct.WTF::KeyValuePair"* [ %79, %78 ], [ %67, %72 ]
  %76 = bitcast %"struct.WTF::KeyValuePair"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  switch i64 %77, label %81 [
    i64 -1, label %78
    i64 0, label %78
  ]

78:                                               ; preds = %74, %74
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 1
  %80 = icmp eq %"struct.WTF::KeyValuePair"* %79, %71
  br i1 %80, label %84, label %74

81:                                               ; preds = %74, %72
  %82 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %75, %74 ]
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, %71
  br i1 %83, label %84, label %85

84:                                               ; preds = %78, %85, %101, %98, %63, %81
  ret void

85:                                               ; preds = %81, %101
  %86 = phi i32 [ %102, %101 ], [ 0, %81 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %95, %101 ], [ %82, %81 ]
  %88 = bitcast %"struct.WTF::KeyValuePair"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = tail call dereferenceable(8) %"class.blink::ImageResourceObserver"** @_ZN3WTF6VectorIPN5blink21ImageResourceObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.387"* %1, i32 %86) #11
  %91 = bitcast %"class.blink::ImageResourceObserver"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 1
  %93 = icmp eq %"struct.WTF::KeyValuePair"* %92, %71
  br i1 %93, label %84, label %94

94:                                               ; preds = %85, %98
  %95 = phi %"struct.WTF::KeyValuePair"* [ %99, %98 ], [ %92, %85 ]
  %96 = bitcast %"struct.WTF::KeyValuePair"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %101 [
    i64 -1, label %98
    i64 0, label %98
  ]

98:                                               ; preds = %94, %94
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 1
  %100 = icmp eq %"struct.WTF::KeyValuePair"* %99, %71
  br i1 %100, label %84, label %94

101:                                              ; preds = %94
  %102 = add i32 %86, 1
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %95, %71
  br i1 %103, label %84, label %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink21ImageResourceObserverEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.20, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ImageResourceObserver"** @_ZN3WTF6VectorIPN5blink21ImageResourceObserverELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.387", %"class.WTF::Vector.387"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageResourceObserver"**, %"class.blink::ImageResourceObserver"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %24, i64 %25
  ret %"class.blink::ImageResourceObserver"** %26
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.658"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.658"*, i16*) local_unnamed_addr #3

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i32 24, i32 33}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK3WTF14HashCountedSetIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE8AsVectorEv: argument 0"}
!8 = distinct !{!8, !"_ZNK3WTF14HashCountedSetIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE8AsVectorEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK3WTF14HashCountedSetIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE8AsVectorEv: argument 0"}
!12 = distinct !{!12, !"_ZNK3WTF14HashCountedSetIPN5blink21ImageResourceObserverENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEE8AsVectorEv"}
