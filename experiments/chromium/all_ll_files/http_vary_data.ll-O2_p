; ModuleID = '../../net/http/http_vary_data.cc'
source_filename = "../../net/http/http_vary_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"struct.net::HttpRequestInfo" = type <{ %class.GURL, %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i8, [7 x i8], %"class.net::HttpRequestHeaders", %"class.net::UploadDataStream"*, i32, i32, i32, %"class.net::SocketTag", [3 x i8], %"struct.net::MutableNetworkTrafficAnnotationTag", i32, %"class.absl::optional.15", i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.5" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.net::UploadDataStream" = type opaque
%"class.net::SocketTag" = type { i8 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.url::Origin" }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.21", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.23" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%struct.md5_state_st = type { [4 x i32], i32, i32, [64 x i8], i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }

@.str = private unnamed_addr constant [5 x i8] c"vary\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"*\00", align 1

@_ZN3net12HttpVaryDataC1Ev = hidden unnamed_addr alias void (%"class.net::HttpVaryData"*), void (%"class.net::HttpVaryData"*)* @_ZN3net12HttpVaryDataC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net12HttpVaryDataC2Ev(%"class.net::HttpVaryData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net12HttpVaryData4InitERKNS_15HttpRequestInfoERKNS_19HttpResponseHeadersE(%"class.net::HttpVaryData"*, %"struct.net::HttpRequestInfo"* dereferenceable(488), %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.md5_state_st, align 4
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %struct.md5_state_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 92, i1 false)
  call void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st* nonnull %4) #6
  %9 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 1
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  store i64 0, i64* %5, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  store i8 4, i8* %15, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i32*
  store i32 2037539190, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 4
  store i8 0, i8* %18, align 4
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #6
  %22 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %2, i64* nonnull %5, i8* nonnull %11, i64 4, %"class.std::__1::basic_string"* nonnull %7) #6
  br i1 %22, label %23, label %50

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  br label %26

26:                                               ; preds = %23, %38
  %27 = load i8, i8* %25, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i64, i64* %21, align 8
  %30 = zext i8 %27 to i64
  %31 = select i1 %28, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %38

33:                                               ; preds = %26
  %34 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 16, i1 false)
  br label %49

38:                                               ; preds = %26, %33
  call void @_ZN3net12HttpVaryData8AddFieldERKNS_15HttpRequestInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEP12md5_state_st(%"struct.net::HttpRequestInfo"* dereferenceable(488) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %struct.md5_state_st* nonnull %4)
  %39 = load i8, i8* %15, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i8*, i8** %12, align 8
  %42 = select i1 %40, i8* %41, i8* %11
  %43 = load i64, i64* %13, align 8
  %44 = zext i8 %39 to i64
  %45 = select i1 %40, i64 %43, i64 %44
  %46 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %2, i64* nonnull %5, i8* %42, i64 %45, %"class.std::__1::basic_string"* nonnull %7) #6
  br i1 %46, label %26, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 0
  call void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"* %48, %struct.md5_state_st* nonnull %4) #6
  br label %49

49:                                               ; preds = %36, %47
  store i8 1, i8* %9, align 1
  br label %50

50:                                               ; preds = %49, %3
  %51 = phi i1 [ false, %3 ], [ true, %49 ]
  %52 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %57) #7
  br label %58

58:                                               ; preds = %50, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #6
  %59 = load i8, i8* %15, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %62) #7
  br label %63

63:                                               ; preds = %58, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %8) #6
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base7MD5InitEP12md5_state_st(%struct.md5_state_st*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i64*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12HttpVaryData8AddFieldERKNS_15HttpRequestInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEP12md5_state_st(%"struct.net::HttpRequestInfo"* dereferenceable(488), %"class.std::__1::basic_string"* dereferenceable(24), %struct.md5_state_st*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6, !noalias !2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #6, !noalias !2
  %14 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 5
  %15 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6, !noalias !2
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1, !noalias !2
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !2
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  store i8* %24, i8** %16, align 8, !noalias !2
  %25 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !2
  %28 = zext i8 %19 to i64
  %29 = select i1 %20, i64 %27, i64 %28
  store i64 %29, i64* %25, align 8, !noalias !2
  %30 = call zeroext i1 @_ZNK3net18HttpRequestHeaders9GetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpRequestHeaders"* %14, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %4) #6, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6, !noalias !2
  br i1 %30, label %31, label %32

31:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %11, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #6, !noalias !2
  br label %39

32:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #6, !alias.scope !2
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1, !noalias !2
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = load i8*, i8** %13, align 8, !noalias !2
  call void @_ZdlPv(i8* %38) #7, !noalias !2
  br label %39

39:                                               ; preds = %31, %32, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6, !noalias !2
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* nonnull %6, i64 1, i8 signext 10) #6
  %41 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #6
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %9, align 8
  %48 = select i1 %46, i8* %47, i8* %8
  store i8* %48, i8** %42, align 8
  %49 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %50 = load i64, i64* %10, align 8
  %51 = zext i8 %45 to i64
  %52 = select i1 %46, i64 %50, i64 %51
  store i64 %52, i64* %49, align 8
  call void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st* %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #6
  %53 = load i8, i8* %44, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %39
  %56 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %56) #7
  br label %57

57:                                               ; preds = %39, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  ret void
}

declare void @_ZN4base8MD5FinalEPNS_9MD5DigestEP12md5_state_st(%"struct.base::MD5Digest"*, %struct.md5_state_st*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net12HttpVaryData14InitFromPickleEPN4base14PickleIteratorE(%"class.net::HttpVaryData"* nocapture, %"class.base::PickleIterator"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 1
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = call zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"* %1, i8** nonnull %3, i32 16) #6
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 0, i32 0, i64 0
  %9 = load i8*, i8** %3, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %9, i64 16, i1 false)
  store i8 1, i8* %4, align 1
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i1 [ true, %7 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  ret i1 %11
}

declare zeroext i1 @_ZN4base14PickleIterator9ReadBytesEPPKci(%"class.base::PickleIterator"*, i8**, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net12HttpVaryData7PersistEPN4base6PickleE(%"class.net::HttpVaryData"*, %"class.base::Pickle"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @_ZN4base6Pickle10WriteBytesEPKvi(%"class.base::Pickle"* %1, i8* %3, i32 16) #6
  ret void
}

declare void @_ZN4base6Pickle10WriteBytesEPKvi(%"class.base::Pickle"*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net12HttpVaryData14MatchesRequestERKNS_15HttpRequestInfoERKNS_19HttpResponseHeadersE(%"class.net::HttpVaryData"* nocapture readonly, %"struct.net::HttpRequestInfo"* dereferenceable(488), %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.net::HttpVaryData", align 1
  %5 = tail call zeroext i1 @_ZNK3net19HttpResponseHeaders14HasHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #6
  br i1 %5, label %16, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 16, i1 false)
  store i8 0, i8* %8, align 1
  %9 = call zeroext i1 @_ZN3net12HttpVaryData4InitERKNS_15HttpRequestInfoERKNS_19HttpResponseHeadersE(%"class.net::HttpVaryData"* nonnull %4, %"struct.net::HttpRequestInfo"* dereferenceable(488) %1, %"class.net::HttpResponseHeaders"* dereferenceable(64) %2)
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.net::HttpVaryData", %"class.net::HttpVaryData"* %0, i64 0, i32 0, i32 0, i64 0
  %12 = call i32 @bcmp(i8* nonnull %7, i8* %11, i64 16)
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %6, %10
  %15 = phi i1 [ %13, %10 ], [ false, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %7) #6
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i1 [ %15, %14 ], [ false, %3 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders14HasHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"*, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12HttpVaryData15GetRequestValueERKNS_15HttpRequestInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias nocapture sret, %"struct.net::HttpRequestInfo"* dereferenceable(488), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #6
  %8 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 5
  %9 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  store i8* %18, i8** %10, align 8
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %13 to i64
  %23 = select i1 %14, i64 %21, i64 %22
  store i64 %23, i64* %19, align 8
  %24 = call zeroext i1 @_ZNK3net18HttpRequestHeaders9GetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpRequestHeaders"* %8, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %24, label %26, label %27

26:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %6, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #6
  br label %34

27:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #6
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %33) #7
  br label %34

34:                                               ; preds = %26, %27, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret void
}

declare zeroext i1 @_ZNK3net18HttpRequestHeaders9GetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #3

declare void @_ZN4base9MD5UpdateEP12md5_state_stRKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%struct.md5_state_st*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12HttpVaryData15GetRequestValueERKNS_15HttpRequestInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN3net12HttpVaryData15GetRequestValueERKNS_15HttpRequestInfoERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE"}
