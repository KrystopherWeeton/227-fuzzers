; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_cursor.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_cursor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::V8PrivateProperty::SymbolKey" = type { i8 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.413", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.413" = type { %"class.base::RefCounted.414" }
%"class.base::RefCounted.414" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.417" }
%"class.blink::HeapHashMap.417" = type { %"class.WTF::HashMap.420" }
%"class.WTF::HashMap.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"struct.WTF::KeyValuePair.423"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.423" = type { %"class.blink::WeakMember.424", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.225", i32, [4 x i8], %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.367", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.397", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.404", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.341", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.261" = type { %"struct.std::__1::__atomic_base.262" }
%"struct.std::__1::__atomic_base.262" = type { %"struct.std::__1::__atomic_base.263" }
%"struct.std::__1::__atomic_base.263" = type { %"struct.std::__1::__cxx_atomic_impl.264" }
%"struct.std::__1::__cxx_atomic_impl.264" = type { %"struct.std::__1::__cxx_atomic_base_impl.265" }
%"struct.std::__1::__cxx_atomic_base_impl.265" = type { i64 }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::Worklist.286"* }
%"class.blink::Worklist.286" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::Worklist.293"* }
%"class.blink::Worklist.293" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::Worklist.300"* }
%"class.blink::Worklist.300" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::Worklist.307"* }
%"class.blink::Worklist.307" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.blink::Worklist.314"* }
%"class.blink::Worklist.314" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.261" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.321", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.335", [4 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { i64 }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { float }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.344", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.353" }
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.367" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371" }
%"class.WTF::VectorBufferBase.371" = type { %"struct.std::__1::pair.372"*, i32, i32 }
%"struct.std::__1::pair.372" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.385" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.272"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.279"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.286"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.293"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.300"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.408" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.403 }
%class.scoped_refptr.403 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.120" }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i32 }
%"class.blink::IDBCursor" = type { %"class.blink::ScriptWrappable", %"class.std::__1::unique_ptr", %"class.blink::Member", i32, %"class.blink::Member.203", %"class.blink::Member.21", i8, i8, i8, i8, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.blink::Member.145" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebIDBCursor"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::IDBRequest"* }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::IDBTransaction"* }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::IDBKey"* }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector.152", %class.scoped_refptr.157, %"class.WTF::String", double, i64 }
%"class.WTF::Vector.152" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"class.std::__1::unique_ptr.149"*, i32, i32 }
%class.scoped_refptr.157 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.158", i64, %"class.WTF::Vector.160", %"class.WTF::Vector.165" }
%"class.WTF::RefCounted.158" = type { %"class.base::RefCounted.159" }
%"class.base::RefCounted.159" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.160" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { i8*, i32, i32 }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.std::__1::unique_ptr.168"*, i32, i32 }
%"class.std::__1::unique_ptr.168" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::IDBAny"* }
%"class.blink::IDBAny" = type { i32, %"class.blink::Member.134", %"class.blink::Member.30", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.174", %"class.WTF::Vector.190", i64 }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::IDBCursor"* }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::IDBDatabase"* }
%"class.blink::IDBDatabase" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.208", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::mojom::blink::IDBDatabaseCallbacks", %"struct.blink::IDBDatabaseMetadata", %"class.std::__1::unique_ptr.209", %"class.blink::Member.21", %"class.blink::HeapHashMap.215", %"class.mojo::PendingRemote.222", i8, %"class.blink::Member.101", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.9" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.6" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::HeapVector.8"* }
%"class.blink::HeapVector.8" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.WTF::Vector.12"* }
%"class.WTF::Vector.12" = type opaque
%"class.blink::ActiveScriptWrappable.208" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.20"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.20" = type opaque
%"class.blink::mojom::blink::IDBDatabaseCallbacks" = type { i32 (...)** }
%"struct.blink::IDBDatabaseMetadata" = type <{ %"class.WTF::String", i64, i64, i64, %"class.WTF::HashMap.96", i8, [7 x i8] }>
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.100" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::WebIDBDatabase"* }
%"class.blink::WebIDBDatabase" = type { i32 (...)** }
%"class.blink::HeapHashMap.215" = type { %"class.WTF::HashMap.218" }
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.221" = type opaque
%"class.mojo::PendingRemote.222" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type <{ %"class.blink::ExecutionContextLifecycleObserver.base", i8, [3 x i8], %"class.blink::HeapLinkedHashSet.105", i8, [7 x i8] }>
%"class.blink::HeapLinkedHashSet.105" = type { %"class.WTF::LinkedHashSet.108" }
%"class.WTF::LinkedHashSet.108" = type { %"class.WTF::HashMap.109", %"class.WTF::VectorBackedLinkedList.113" }
%"class.WTF::HashMap.109" = type { %"class.WTF::HashTable.110" }
%"class.WTF::HashTable.110" = type <{ %"struct.WTF::KeyValuePair.112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.112" = type opaque
%"class.WTF::VectorBackedLinkedList.113" = type { %"class.WTF::Vector.114", i32, i32 }
%"class.WTF::Vector.114" = type { %"class.WTF::VectorBuffer.115" }
%"class.WTF::VectorBuffer.115" = type { %"class.WTF::VectorBufferBase.116" }
%"class.WTF::VectorBufferBase.116" = type { %"class.WTF::VectorBackedLinkedListNode.117"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.117" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.223" }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.119 }
%class.scoped_refptr.119 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.120" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.125" }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i8 }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::IDBValue"* }
%"class.blink::IDBValue" = type { %class.scoped_refptr.157, %"class.WTF::Vector.177", %"class.WTF::Vector.182", %"class.std::__1::unique_ptr.149", %"class.blink::IDBKeyPath", %"class.v8::Isolate"*, i64 }
%"class.WTF::Vector.177" = type { %"class.WTF::VectorBuffer.178" }
%"class.WTF::VectorBuffer.178" = type { %"class.WTF::VectorBufferBase.179" }
%"class.WTF::VectorBufferBase.179" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type opaque
%"class.WTF::Vector.182" = type { %"class.WTF::VectorBuffer.183" }
%"class.WTF::VectorBuffer.183" = type { %"class.WTF::VectorBufferBase.184" }
%"class.WTF::VectorBufferBase.184" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector.75" }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.190" = type { %"class.WTF::VectorBuffer.191" }
%"class.WTF::VectorBuffer.191" = type { %"class.WTF::VectorBufferBase.192" }
%"class.WTF::VectorBufferBase.192" = type { %"class.std::__1::unique_ptr.174"*, i32, i32 }
%"class.blink::WebIDBCursor" = type { i32 (...)** }
%"class.blink::IDBRequest" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.21", i32, i8, %"class.v8::Isolate"*, %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::Member.130", %"class.blink::Member.145", %"class.blink::Member.38", i8, %"class.blink::Member.101", i32, i32, %"class.blink::Member.134", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.174", %"class.WTF::Vector.195", i8, i8, i8, %"class.blink::WebIDBCallbacks"*, %"class.blink::IDBRequestQueueItem"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::IDBRequest::AsyncTraceState" = type { i8*, i64 }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"* }
%"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.134", %"class.blink::Member.93", %"class.blink::Member.136" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::IDBIndex"* }
%"class.blink::IDBIndex" = type <{ %"class.blink::ScriptWrappable", %class.scoped_refptr.205, %"class.blink::Member.136", %"class.blink::Member.21", i8, [7 x i8] }>
%class.scoped_refptr.205 = type { %"class.blink::IDBIndexMetadata"* }
%"class.blink::IDBIndexMetadata" = type <{ %"class.WTF::RefCounted.206", [4 x i8], %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i8, [6 x i8] }>
%"class.WTF::RefCounted.206" = type { %"class.base::RefCounted.207" }
%"class.base::RefCounted.207" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::IDBObjectStore"* }
%"class.blink::IDBObjectStore" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.74, %"class.blink::Member.21", i8, [7 x i8], %"class.blink::HeapHashMap.138" }
%class.scoped_refptr.74 = type { %"class.blink::IDBObjectStoreMetadata"* }
%"class.blink::IDBObjectStoreMetadata" = type { %"class.WTF::RefCounted", %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i64, %"class.WTF::HashMap.80" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.80" = type { %"class.WTF::HashTable.81" }
%"class.WTF::HashTable.81" = type <{ %"struct.WTF::KeyValuePair.84"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.84" = type opaque
%"class.blink::HeapHashMap.138" = type { %"class.WTF::HashMap.141" }
%"class.WTF::HashMap.141" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"struct.WTF::KeyValuePair.144"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.144" = type opaque
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type opaque
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %class.scoped_refptr.198*, i32, i32 }
%class.scoped_refptr.198 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.200", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.199" }
%"class.base::RefCountedThreadSafe.199" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.200" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::WebIDBCallbacks" = type { %"class.blink::mojom::blink::IDBCallbacks" }
%"class.blink::mojom::blink::IDBCallbacks" = type { i32 (...)** }
%"class.blink::IDBRequestQueueItem" = type opaque
%"class.blink::V8UnionIDBIndexOrIDBObjectStore" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.93", %"class.blink::Member.136" }
%"class.blink::IDBTransaction" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.23", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.24", i64, %"class.blink::Member.30", %"class.blink::Member.32", i32, i32, %"class.WTF::HashSet.34", i32, i8, i64, %"class.blink::Member.38", %"class.blink::HeapLinkedHashSet", %"class.WTF::Deque", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.64", %"class.WTF::Vector.71", %"class.blink::HeapVector.87", %"struct.blink::IDBDatabaseMetadata", %"class.blink::Member.101", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ActiveScriptWrappable.23" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::WebIDBTransaction"* }
%"class.blink::WebIDBTransaction" = type { i32 (...)** }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::IDBOpenDBRequest"* }
%"class.blink::IDBOpenDBRequest" = type opaque
%"class.WTF::HashSet.34" = type { %"class.WTF::HashTable.35" }
%"class.WTF::HashTable.35" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.42" }
%"class.WTF::HashTable.42" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.44", i32, i32 }
%"class.WTF::Vector.44" = type { %"class.WTF::VectorBuffer.45" }
%"class.WTF::VectorBuffer.45" = type { %"class.WTF::VectorBufferBase.46" }
%"class.WTF::VectorBufferBase.46" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.std::__1::unique_ptr.52"*, i32, i32 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::IDBRequestQueueItem"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.60" }
%"class.WTF::HashMap.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type opaque
%"class.blink::HeapHashMap.64" = type { %"class.WTF::HashMap.67" }
%"class.WTF::HashMap.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"struct.WTF::KeyValuePair.70"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.70" = type opaque
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %class.scoped_refptr.74*, i32, i32 }
%"class.blink::HeapVector.87" = type { %"class.WTF::Vector.90" }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::Member.93"*, i32, i32 }
%"class.v8::Private" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.432, %"class.blink::Member.433", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.432 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.435" }
%"class.blink::Persistent.435" = type { %"class.blink::PersistentBase.436" }
%"class.blink::PersistentBase.436" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.437", %class.scoped_refptr.440 }
%"class.blink::TraceWrapperV8Reference.437" = type { %"class.v8::TracedReference.438" }
%"class.v8::TracedReference.438" = type { %"class.v8::BasicTracedReference.439" }
%"class.v8::BasicTracedReference.439" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.440 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.437" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink8IDBValue21SetInjectedPrimaryKeyENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEENS_10IDBKeyPathE = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink9IDBCursor18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink9IDBCursor11IsKeyCursorEv = comdat any

$_ZNK5blink9IDBCursor17IsCursorWithValueEv = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink10TraceTraitINS_10IDBRequestEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_31V8UnionIDBIndexOrIDBObjectStoreEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_6IDBAnyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_6IDBAnyEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink9IDBCursorE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::IDBCursor"*)* @_ZN5blink9IDBCursorD2Ev to i8*), i8* bitcast (void (%"class.blink::IDBCursor"*)* @_ZN5blink9IDBCursorD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::IDBCursor"*, %"class.blink::Visitor"*)* @_ZNK5blink9IDBCursor5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::IDBCursor"*)* @_ZNK5blink9IDBCursor18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::IDBCursor"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink9IDBCursor20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i1 (%"class.blink::IDBCursor"*)* @_ZNK5blink9IDBCursor11IsKeyCursorEv to i8*), i8* bitcast (i1 (%"class.blink::IDBCursor"*)* @_ZNK5blink9IDBCursor17IsCursorWithValueEv to i8*)] }, align 8
@_ZZN5blink9IDBCursor20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEEE23kPrivatePropertyRequest = internal constant %"class.blink::V8PrivateProperty::SymbolKey" zeroinitializer, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [30 x i8] c"IDBCursor::updateRequestSetup\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"The record may not be updated inside a read-only transaction.\00", align 1
@_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE = external constant [0 x i8], align 1
@_ZN5blink11IDBDatabase20kNoValueErrorMessageE = external constant [0 x i8], align 1
@_ZN5blink11IDBDatabase24kIsKeyCursorErrorMessageE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"IDBCursor::advanceRequestSetup\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"IDBCursor::advance\00", align 1
@.str.4 = private unnamed_addr constant [75 x i8] c"A count argument with value 0 (zero) was supplied, must be greater than 0.\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"IDBCursor::continueRequestSetup\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"IDBCursor::continue\00", align 1
@_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE = external constant [0 x i8], align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"IDBCursor::continuePrimaryKeyRequestSetup\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"IDBCursor::continuePrimaryKey\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"The cursor's source is not an index.\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"The cursor's direction is not 'next' or 'prev'.\00", align 1
@.str.11 = private unnamed_addr constant [63 x i8] c"The parameter is less than or equal to this cursor's position.\00", align 1
@.str.12 = private unnamed_addr constant [66 x i8] c"The parameter is greater than or equal to this cursor's position.\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"IDBCursor::deleteRequestSetup\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"IDBCursor::delete\00", align 1
@.str.15 = private unnamed_addr constant [62 x i8] c"The record may not be deleted inside a read-only transaction.\00", align 1
@_ZN5blink11IDBDatabase27kDatabaseClosedErrorMessageE = external constant [0 x i8], align 1
@_ZN5blink16indexed_db_names5kNextE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16indexed_db_names11kNextuniqueE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16indexed_db_names5kPrevE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16indexed_db_names11kPrevuniqueE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.16 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.20 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN5blink9IDBCursor18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.23 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink42V8UnionIDBCursorOrIDBIndexOrIDBObjectStoreE = external unnamed_addr constant { [6 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6IDBAnyEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDBAny]\00", align 1
@_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_6IDBAnyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_6IDBAnyEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@switch.table._ZNK5blink9IDBCursor9directionEv = private unnamed_addr constant [4 x %"class.WTF::AtomicString"**] [%"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names5kNextE, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names11kNextuniqueE, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names5kPrevE, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names11kPrevuniqueE], align 8

@_ZN5blink9IDBCursorC1ENSt3__110unique_ptrINS_12WebIDBCursorENS1_14default_deleteIS3_EEEENS_5mojom18IDBCursorDirectionEPNS_10IDBRequestEPKNS_31V8UnionIDBIndexOrIDBObjectStoreEPNS_14IDBTransactionE = hidden unnamed_addr alias void (%"class.blink::IDBCursor"*, %"class.blink::WebIDBCursor"*, i32, %"class.blink::IDBRequest"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::IDBTransaction"*), void (%"class.blink::IDBCursor"*, %"class.blink::WebIDBCursor"*, i32, %"class.blink::IDBRequest"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::IDBTransaction"*)* @_ZN5blink9IDBCursorC2ENSt3__110unique_ptrINS_12WebIDBCursorENS1_14default_deleteIS3_EEEENS_5mojom18IDBCursorDirectionEPNS_10IDBRequestEPKNS_31V8UnionIDBIndexOrIDBObjectStoreEPNS_14IDBTransactionE
@_ZN5blink9IDBCursorD1Ev = hidden unnamed_addr alias void (%"class.blink::IDBCursor"*), void (%"class.blink::IDBCursor"*)* @_ZN5blink9IDBCursorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursorC2ENSt3__110unique_ptrINS_12WebIDBCursorENS1_14default_deleteIS3_EEEENS_5mojom18IDBCursorDirectionEPNS_10IDBRequestEPKNS_31V8UnionIDBIndexOrIDBObjectStoreEPNS_14IDBTransactionE(%"class.blink::IDBCursor"* nocapture, %"class.blink::WebIDBCursor"*, i32, %"class.blink::IDBRequest"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::IDBTransaction"*) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.blink::WebIDBCursor"* %1 to i64
  %8 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink9IDBCursorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::IDBRequest"* %3, %"class.blink::IDBRequest"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 3
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %4, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::IDBTransaction"* %5, %"class.blink::IDBTransaction"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 7
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 8
  store i8 1, i8* %18, align 2
  %19 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 9
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 10
  %21 = bitcast %"class.std::__1::unique_ptr.149"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursorD2Ev(%"class.blink::IDBCursor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink9IDBCursorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %3, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %3, align 8
  %5 = icmp eq %"class.blink::IDBKey"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %4) #10
  %7 = bitcast %"class.blink::IDBKey"* %4 to i8*
  tail call void @free(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %9, align 8
  %11 = icmp eq %"class.blink::IDBKey"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %10) #10
  %13 = bitcast %"class.blink::IDBKey"* %10 to i8*
  tail call void @free(i8* %13) #10
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %15, align 8
  store %"class.blink::WebIDBCursor"* null, %"class.blink::WebIDBCursor"** %15, align 8
  %17 = icmp eq %"class.blink::WebIDBCursor"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::WebIDBCursor"* %16 to void (%"class.blink::WebIDBCursor"*)***
  %20 = load void (%"class.blink::WebIDBCursor"*)**, void (%"class.blink::WebIDBCursor"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %20, i64 1
  %22 = load void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %21, align 8
  tail call void %22(%"class.blink::WebIDBCursor"* nonnull %16) #10
  br label %23

23:                                               ; preds = %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursorD0Ev(%"class.blink::IDBCursor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink9IDBCursorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %3, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %3, align 8
  %5 = icmp eq %"class.blink::IDBKey"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %4) #10
  %7 = bitcast %"class.blink::IDBKey"* %4 to i8*
  tail call void @free(i8* %7) #10
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %9, align 8
  %11 = icmp eq %"class.blink::IDBKey"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %10) #10
  %13 = bitcast %"class.blink::IDBKey"* %10 to i8*
  tail call void @free(i8* %13) #10
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %15, align 8
  store %"class.blink::WebIDBCursor"* null, %"class.blink::WebIDBCursor"** %15, align 8
  %17 = icmp eq %"class.blink::WebIDBCursor"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::WebIDBCursor"* %16 to void (%"class.blink::WebIDBCursor"*)***
  %20 = load void (%"class.blink::WebIDBCursor"*)**, void (%"class.blink::WebIDBCursor"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %20, i64 1
  %22 = load void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %21, align 8
  tail call void %22(%"class.blink::WebIDBCursor"* nonnull %16) #10
  br label %23

23:                                               ; preds = %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9IDBCursor5TraceEPNS_7VisitorE(%"class.blink::IDBCursor"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10IDBRequestEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.203"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_31V8UnionIDBIndexOrIDBObjectStoreEE5TraceEPNS_7VisitorEPKv) #10
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::Member.21"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv) #10
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12
  %37 = bitcast %"class.blink::Member.145"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv) #10
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %47, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink9IDBCursor20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::IDBCursor"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 0
  %6 = tail call %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"* %5, %"class.v8::Isolate"* %1, %"struct.blink::WrapperTypeInfo"* %2, %"class.v8::Object"* %3) #10
  %7 = icmp eq %"class.v8::Object"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %4
  %9 = tail call { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"* %1, %"class.blink::V8PrivateProperty::SymbolKey"* nonnull dereferenceable(1) @_ZZN5blink9IDBCursor20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEEE23kPrivatePropertyRequest) #10
  %10 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %9, 0
  %11 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %9, 1
  %12 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::IDBRequest", %"class.blink::IDBRequest"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = icmp eq %"class.blink::IDBRequest"* %13, null
  br i1 %15, label %16, label %19, !prof !2

16:                                               ; preds = %8
  %17 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %18 = add i64 %17, 176
  br label %35

19:                                               ; preds = %8
  %20 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %14, %"class.v8::Isolate"* %1) #10
  %21 = ptrtoint %"class.v8::Object"* %20 to i64
  %22 = icmp eq %"class.v8::Object"* %20, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %6) #10
  %25 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %24) #10
  %26 = bitcast %"class.blink::IDBRequest"* %13 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %27 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %27, i64 7
  %29 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %28, align 8
  %30 = tail call %"class.v8::Value"* %29(%"class.blink::ScriptWrappable"* nonnull %14, %"class.blink::ScriptState"* %25) #10
  %31 = icmp eq %"class.v8::Value"* %30, null
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %33

33:                                               ; preds = %32, %23
  %34 = ptrtoint %"class.v8::Value"* %30 to i64
  br label %35

35:                                               ; preds = %16, %19, %33
  %36 = phi i64 [ %18, %16 ], [ %34, %33 ], [ %21, %19 ]
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  %38 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %11) #10
  %39 = tail call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %6, %"class.v8::Context"* %38, %"class.v8::Private"* %10, %"class.v8::Value"* %37) #10
  %40 = trunc i16 %39 to i8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  tail call void @_ZN2v82V817FromJustIsNothingEv() #10
  br label %43

43:                                               ; preds = %42, %35, %4
  ret %"class.v8::Object"* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"*, %"class.blink::V8PrivateProperty::SymbolKey"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBRequest"* @_ZN5blink9IDBCursor6updateEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::IDBCursor"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !3

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %11 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %15

15:                                               ; preds = %4, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %4 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %20, i64 0, i32 10
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %26, label %24

24:                                               ; preds = %15
  %25 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* %20) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 31, i8* %25) #10
  br label %103

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %20, i64 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 32, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0)) #10
  br label %103

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %33 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  switch i32 %35, label %49 [
    i32 0, label %42
    i32 1, label %36
  ]

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %33, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %38, i64 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %49, label %48

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %33, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %44, i64 0, i32 4
  %46 = load i8, i8* %45, align 8, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %42, %36
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE, i64 0, i64 0)) #10
  br label %103

49:                                               ; preds = %42, %36, %31
  %50 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  %51 = load i8, i8* %50, align 8, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase20kNoValueErrorMessageE, i64 0, i64 0)) #10
  br label %103

54:                                               ; preds = %49
  %55 = bitcast %"class.blink::IDBCursor"* %0 to i1 (%"class.blink::IDBCursor"*)***
  %56 = load i1 (%"class.blink::IDBCursor"*)**, i1 (%"class.blink::IDBCursor"*)*** %55, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %56, i64 9
  %58 = load i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %57, align 8
  %59 = call zeroext i1 %58(%"class.blink::IDBCursor"* %0) #10
  br i1 %59, label %60, label %61

60:                                               ; preds = %54
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kIsKeyCursorErrorMessageE, i64 0, i64 0)) #10
  br label %103

61:                                               ; preds = %54
  %62 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %32, align 8
  %63 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %74 [
    i32 0, label %65
    i32 1, label %69
  ]

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %62, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %67, i64 0, i32 2, i32 0, i32 0
  br label %71

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %62, i64 0, i32 3, i32 0, i32 0
  br label %71

71:                                               ; preds = %69, %65
  %72 = phi %"class.blink::IDBObjectStore"** [ %68, %65 ], [ %70, %69 ]
  %73 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %72, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = phi %"class.blink::IDBObjectStore"* [ null, %61 ], [ %73, %71 ]
  %76 = ptrtoint %"class.blink::IDBCursor"* %0 to i64
  %77 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #10
  %78 = bitcast i8* %77 to %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"*
  %79 = bitcast i8* %77 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink42V8UnionIDBCursorOrIDBIndexOrIDBObjectStoreE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %77, i64 16
  %83 = bitcast i8* %82 to i64*
  store i64 %76, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %77, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #10
  %85 = getelementptr inbounds i8, i8* %77, i64 -4
  %86 = bitcast i8* %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = or i16 %87, 1
  store atomic i16 %88, i16* %86 release, align 2
  %89 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %90 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %89, align 8
  %91 = icmp eq %"class.blink::IDBKey"* %90, null
  br i1 %91, label %92, label %100

92:                                               ; preds = %74
  %93 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12, i32 0, i32 0
  %94 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %93, align 8
  %95 = icmp eq %"class.blink::IDBAny"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = call %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"* nonnull %94) #10
  %98 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %98, align 8
  br label %100

100:                                              ; preds = %74, %92, %96
  %101 = phi %"class.blink::IDBKey"* [ %99, %96 ], [ null, %92 ], [ %90, %74 ]
  %102 = call %"class.blink::IDBRequest"* @_ZN5blink14IDBObjectStore5DoPutEPNS_11ScriptStateENS_5mojom10IDBPutModeEPKNS_42V8UnionIDBCursorOrIDBIndexOrIDBObjectStoreERKNS_11ScriptValueEPKNS_6IDBKeyERNS_14ExceptionStateE(%"class.blink::IDBObjectStore"* %75, %"class.blink::ScriptState"* %1, i32 2, %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"* %78, %"class.blink::ScriptValue"* dereferenceable(24) %2, %"class.blink::IDBKey"* %101, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  br label %103

103:                                              ; preds = %100, %60, %53, %48, %30, %24
  %104 = phi %"class.blink::IDBRequest"* [ null, %30 ], [ null, %48 ], [ null, %60 ], [ %102, %100 ], [ null, %53 ], [ null, %24 ]
  %105 = icmp eq i8* %17, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = load i8, i8* %17, align 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #10
  br label %110

110:                                              ; preds = %103, %106, %109
  ret %"class.blink::IDBRequest"* %104
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9IDBCursor9IsDeletedEv(%"class.blink::IDBCursor"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %18 [
    i32 0, label %6
    i32 1, label %10
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %8, i64 0, i32 4
  br label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %12, i64 0, i32 3
  br label %14

14:                                               ; preds = %6, %10
  %15 = phi i8* [ %13, %10 ], [ %9, %6 ]
  %16 = load i8, i8* %15, align 8, !range !4
  %17 = icmp ne i8 %16, 0
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i1 [ false, %1 ], [ %17, %14 ]
  ret i1 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::IDBObjectStore"* @_ZNK5blink9IDBCursor20EffectiveObjectStoreEv(%"class.blink::IDBCursor"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %15 [
    i32 0, label %6
    i32 1, label %10
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %8, i64 0, i32 2, i32 0, i32 0
  br label %12

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, i64 0, i32 3, i32 0, i32 0
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi %"class.blink::IDBObjectStore"** [ %11, %10 ], [ %9, %6 ]
  %14 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %13, align 8
  br label %15

15:                                               ; preds = %12, %1
  %16 = phi %"class.blink::IDBObjectStore"* [ null, %1 ], [ %14, %12 ]
  ret %"class.blink::IDBObjectStore"* %16
}

declare %"class.blink::IDBRequest"* @_ZN5blink14IDBObjectStore5DoPutEPNS_11ScriptStateENS_5mojom10IDBPutModeEPKNS_42V8UnionIDBCursorOrIDBIndexOrIDBObjectStoreERKNS_11ScriptValueEPKNS_6IDBKeyERNS_14ExceptionStateE(%"class.blink::IDBObjectStore"*, %"class.blink::ScriptState"*, i32, %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::IDBKey"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBKey"* @_ZNK5blink9IDBCursor13IdbPrimaryKeyEv(%"class.blink::IDBCursor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %2, align 8
  %4 = icmp eq %"class.blink::IDBKey"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12, i32 0, i32 0
  %7 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %6, align 8
  %8 = icmp eq %"class.blink::IDBAny"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = tail call %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"* nonnull %7) #10
  %11 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %11, align 8
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi %"class.blink::IDBKey"* [ %12, %9 ], [ null, %5 ], [ %3, %1 ]
  ret %"class.blink::IDBKey"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor7advanceEjRNS_14ExceptionStateE(%"class.blink::IDBCursor"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.blink::IDBRequest::AsyncTraceState"*
  %7 = alloca %"class.blink::IDBRequest::AsyncTraceState", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !3

11:                                               ; preds = %3
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %17

17:                                               ; preds = %3, %11
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), %11 ]
  %19 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %11 ]
  %20 = phi i64 [ -6148914691236517206, %3 ], [ %16, %11 ]
  %21 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %22 = bitcast <2 x i64>* %5 to i8**
  %23 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 16, i1 false)
  call void @_ZN5blink10IDBRequest15AsyncTraceStateC1EPKc(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #10
  %24 = icmp eq i32 %1, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %17
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %75

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %28, i64 0, i32 10
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* %28) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 31, i8* %33) #10
  br label %75

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %52 [
    i32 0, label %45
    i32 1, label %39
  ]

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %36, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %41, i64 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %52, label %51

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %36, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 8, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %45, %39
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE, i64 0, i64 0)) #10
  br label %75

52:                                               ; preds = %45, %39, %34
  %53 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  %54 = load i8, i8* %53, align 8, !range !4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase20kNoValueErrorMessageE, i64 0, i64 0)) #10
  br label %75

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %58, align 8
  call void @_ZN5blink10IDBRequest16SetPendingCursorEPNS_9IDBCursorE(%"class.blink::IDBRequest"* %59, %"class.blink::IDBCursor"* %0) #10
  %60 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %58, align 8
  %61 = getelementptr inbounds %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::IDBRequest::AsyncTraceState"* %7, i64 0, i32 1
  %62 = load <2 x i64>, <2 x i64>* %5, align 16
  %63 = extractelement <2 x i64> %62, i32 1
  store i64 %63, i64* %61, align 8
  store i8* null, i8** %22, align 16
  %64 = getelementptr inbounds %"class.blink::IDBRequest", %"class.blink::IDBRequest"* %60, i64 0, i32 7
  %65 = getelementptr inbounds %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::IDBRequest::AsyncTraceState"* %7, i64 0, i32 0
  %66 = bitcast %"class.blink::IDBRequest::AsyncTraceState"* %64 to <2 x i64>*
  store <2 x i64> %62, <2 x i64>* %66, align 8
  store i8* null, i8** %65, align 8
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %7) #10
  store i8 0, i8* %53, align 8
  %67 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %67, align 8
  %69 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %58, align 8
  %70 = call %"class.blink::WebIDBCallbacks"* @_ZN5blink10IDBRequest18CreateWebCallbacksEv(%"class.blink::IDBRequest"* %69) #10
  %71 = bitcast %"class.blink::WebIDBCursor"* %68 to void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)***
  %72 = load void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)** %72, i64 2
  %74 = load void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCursor"*, i32, %"class.blink::WebIDBCallbacks"*)** %73, align 8
  call void %74(%"class.blink::WebIDBCursor"* %68, i32 %1, %"class.blink::WebIDBCallbacks"* %70) #10
  br label %75

75:                                               ; preds = %57, %56, %51, %32, %25
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  %76 = icmp eq i8* %19, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %75
  %78 = load i8, i8* %19, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %20) #10
  br label %81

81:                                               ; preds = %75, %77, %80
  ret void
}

declare void @_ZN5blink10IDBRequest15AsyncTraceStateC1EPKc(%"class.blink::IDBRequest::AsyncTraceState"*, i8*) unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink10IDBRequest16SetPendingCursorEPNS_9IDBCursorE(%"class.blink::IDBRequest"*, %"class.blink::IDBCursor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"*) unnamed_addr #4

declare %"class.blink::WebIDBCallbacks"* @_ZN5blink10IDBRequest18CreateWebCallbacksEv(%"class.blink::IDBRequest"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor8ContinueEPNS_11ScriptStateERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::IDBCursor"*, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"class.blink::IDBRequest::AsyncTraceState"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.blink::IDBRequest::AsyncTraceState"*
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !3

13:                                               ; preds = %4
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %15 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %19

19:                                               ; preds = %4, %13
  %20 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), %13 ]
  %22 = phi i64 [ -6148914691236517206, %4 ], [ %18, %13 ]
  %23 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = bitcast <2 x i64>* %6 to i8**
  %25 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 16, i1 false)
  call void @_ZN5blink10IDBRequest15AsyncTraceStateC1EPKc(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)) #10
  %26 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %27, i64 0, i32 10
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %33, label %31

31:                                               ; preds = %19
  %32 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* %27) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 31, i8* %32) #10
  br label %126

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  %35 = load i8, i8* %34, align 8, !range !4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase20kNoValueErrorMessageE, i64 0, i64 0)) #10
  br label %126

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %40 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  switch i32 %42, label %56 [
    i32 0, label %49
    i32 1, label %43
  ]

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %40, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %45, i64 0, i32 3
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %55

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %40, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %51, i64 0, i32 4
  %53 = load i8, i8* %52, align 8, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %49, %43
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE, i64 0, i64 0)) #10
  br label %126

56:                                               ; preds = %49, %43, %38
  %57 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %58 = icmp eq %"class.v8::Value"* %57, null
  br i1 %58, label %81, label %59

59:                                               ; preds = %56
  %60 = bitcast %"class.v8::Value"* %57 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %64, label %81

64:                                               ; preds = %59
  %65 = add i64 %61, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = and i64 %61, -4294967296
  %69 = zext i32 %67 to i64
  %70 = or i64 %68, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %73, 67
  br i1 %74, label %75, label %81

75:                                               ; preds = %64
  %76 = add i64 %61, 23
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, -2
  %80 = icmp eq i32 %79, 10
  br i1 %80, label %111, label %81

81:                                               ; preds = %64, %59, %56, %75
  %82 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %83 = icmp eq %"class.v8::Value"* %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.v8::Value"* %82 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 1
  br i1 %88, label %89, label %106

89:                                               ; preds = %84
  %90 = add i64 %86, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = and i64 %86, -4294967296
  %94 = zext i32 %92 to i64
  %95 = or i64 %93, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 67
  br i1 %99, label %100, label %106

100:                                              ; preds = %89
  %101 = add i64 %86, 23
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, -2
  %105 = icmp eq i32 %104, 6
  br i1 %105, label %111, label %106

106:                                              ; preds = %89, %84, %81, %100
  %107 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %108 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %107, align 8
  %109 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %110 = call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %108, %"class.v8::Value"* %109, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  br label %111

111:                                              ; preds = %75, %100, %106
  %112 = phi %"class.blink::IDBKey"* [ %110, %106 ], [ null, %100 ], [ null, %75 ]
  %113 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  %116 = icmp eq %"class.blink::IDBKey"* %112, null
  br i1 %115, label %117, label %123

117:                                              ; preds = %111
  br i1 %116, label %121, label %118

118:                                              ; preds = %117
  %119 = call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* nonnull %112) #10
  br i1 %119, label %121, label %120

120:                                              ; preds = %118
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #10
  br label %124

121:                                              ; preds = %117, %118
  %122 = load <2 x i64>, <2 x i64>* %6, align 16
  store <2 x i64> %122, <2 x i64>* %8, align 16
  store i8* null, i8** %24, align 16
  call void @_ZN5blink9IDBCursor8ContinueENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS_10IDBRequest15AsyncTraceStateERNS_14ExceptionStateE(%"class.blink::IDBCursor"* %0, %"class.blink::IDBKey"* %112, %"class.blink::IDBKey"* null, %"class.blink::IDBRequest::AsyncTraceState"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %9) #10
  br label %126

123:                                              ; preds = %111
  br i1 %116, label %126, label %124

124:                                              ; preds = %120, %123
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %112) #10
  %125 = bitcast %"class.blink::IDBKey"* %112 to i8*
  call void @free(i8* %125) #10
  br label %126

126:                                              ; preds = %124, %123, %121, %55, %37, %31
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %127 = icmp eq i8* %20, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = load i8, i8* %20, align 1
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %128
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %21, i64 %22) #10
  br label %132

132:                                              ; preds = %126, %128, %131
  ret void
}

declare zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor8ContinueENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS_10IDBRequest15AsyncTraceStateERNS_14ExceptionStateE(%"class.blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::IDBRequest::AsyncTraceState"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::IDBRequest::AsyncTraceState", align 8
  %7 = ptrtoint %"class.blink::IDBKey"* %2 to i64
  %8 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %8, align 8
  %10 = icmp eq %"class.blink::IDBKey"* %9, null
  br i1 %10, label %11, label %19

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %12, align 8
  %14 = icmp eq %"class.blink::IDBAny"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = tail call %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"* nonnull %13) #10
  %17 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %17, align 8
  br label %19

19:                                               ; preds = %5, %11, %15
  %20 = phi %"class.blink::IDBKey"* [ %18, %15 ], [ null, %11 ], [ %9, %5 ]
  %21 = icmp eq %"class.blink::IDBKey"* %1, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = tail call noalias i8* @malloc(i64 56) #10
  %24 = bitcast i8* %23 to %"class.blink::IDBKey"*
  tail call void @_ZN5blink6IDBKeyC1ENS_5mojom10IDBKeyTypeE(%"class.blink::IDBKey"* %24, i32 6) #10
  br label %25

25:                                               ; preds = %19, %22
  %26 = phi %"class.blink::IDBKey"* [ %1, %19 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %56, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %32, 2
  %34 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %35 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %34, align 8
  br i1 %33, label %36, label %46

36:                                               ; preds = %30
  %37 = tail call zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"* %35, %"class.blink::IDBKey"* %26) #10
  br i1 %37, label %56, label %38

38:                                               ; preds = %36
  %39 = icmp eq %"class.blink::IDBKey"* %2, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %38
  %41 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %34, align 8
  %42 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsEqualEPKS0_(%"class.blink::IDBKey"* %41, %"class.blink::IDBKey"* %26) #10
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = tail call zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"* %20, %"class.blink::IDBKey"* nonnull %2) #10
  br i1 %44, label %62, label %45

45:                                               ; preds = %38, %40, %43
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 30, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0)) #10
  br label %85

46:                                               ; preds = %30
  %47 = tail call zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"* %26, %"class.blink::IDBKey"* %35) #10
  br i1 %47, label %56, label %48

48:                                               ; preds = %46
  %49 = icmp eq %"class.blink::IDBKey"* %2, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %34, align 8
  %52 = tail call zeroext i1 @_ZNK5blink6IDBKey7IsEqualEPKS0_(%"class.blink::IDBKey"* %26, %"class.blink::IDBKey"* %51) #10
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = tail call zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"* nonnull %2, %"class.blink::IDBKey"* %20) #10
  br i1 %54, label %62, label %55

55:                                               ; preds = %48, %50, %53
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 30, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0)) #10
  br label %85

56:                                               ; preds = %46, %36, %25
  %57 = icmp eq %"class.blink::IDBKey"* %2, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %56
  %59 = tail call noalias i8* @malloc(i64 56) #10
  %60 = bitcast i8* %59 to %"class.blink::IDBKey"*
  tail call void @_ZN5blink6IDBKeyC1ENS_5mojom10IDBKeyTypeE(%"class.blink::IDBKey"* %60, i32 6) #10
  %61 = ptrtoint i8* %59 to i64
  br label %62

62:                                               ; preds = %56, %43, %53, %58
  %63 = phi i64 [ %7, %56 ], [ %61, %58 ], [ %7, %53 ], [ %7, %43 ]
  %64 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %64, align 8
  tail call void @_ZN5blink10IDBRequest16SetPendingCursorEPNS_9IDBCursorE(%"class.blink::IDBRequest"* %65, %"class.blink::IDBCursor"* %0) #10
  %66 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %64, align 8
  %67 = getelementptr inbounds %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::IDBRequest::AsyncTraceState"* %6, i64 0, i32 1
  %68 = getelementptr inbounds %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::IDBRequest::AsyncTraceState"* %3, i64 0, i32 0
  %69 = bitcast %"class.blink::IDBRequest::AsyncTraceState"* %3 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  %71 = extractelement <2 x i64> %70, i32 1
  store i64 %71, i64* %67, align 8
  store i8* null, i8** %68, align 8
  %72 = getelementptr inbounds %"class.blink::IDBRequest", %"class.blink::IDBRequest"* %66, i64 0, i32 7
  %73 = getelementptr inbounds %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::IDBRequest::AsyncTraceState"* %6, i64 0, i32 0
  %74 = bitcast %"class.blink::IDBRequest::AsyncTraceState"* %72 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8
  store i8* null, i8** %73, align 8
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %6) #10
  %75 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  store i8 0, i8* %75, align 8
  %76 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %76, align 8
  %78 = inttoptr i64 %63 to %"class.blink::IDBKey"*
  %79 = load %"class.blink::IDBRequest"*, %"class.blink::IDBRequest"** %64, align 8
  %80 = call %"class.blink::WebIDBCallbacks"* @_ZN5blink10IDBRequest18CreateWebCallbacksEv(%"class.blink::IDBRequest"* %79) #10
  %81 = bitcast %"class.blink::WebIDBCursor"* %77 to void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)***
  %82 = load void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)** %82, i64 3
  %84 = load void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)** %83, align 8
  call void %84(%"class.blink::WebIDBCursor"* %77, %"class.blink::IDBKey"* %26, %"class.blink::IDBKey"* %78, %"class.blink::WebIDBCallbacks"* %80) #10
  br label %85

85:                                               ; preds = %55, %45, %62
  %86 = phi i64 [ %63, %62 ], [ %7, %45 ], [ %7, %55 ]
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = inttoptr i64 %86 to %"class.blink::IDBKey"*
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %89) #10
  %90 = inttoptr i64 %86 to i8*
  call void @free(i8* %90) #10
  br label %91

91:                                               ; preds = %85, %88
  %92 = icmp eq %"class.blink::IDBKey"* %26, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %26) #10
  %94 = bitcast %"class.blink::IDBKey"* %26 to i8*
  call void @free(i8* %94) #10
  br label %95

95:                                               ; preds = %91, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor18continuePrimaryKeyEPNS_11ScriptStateERKNS_11ScriptValueES5_RNS_14ExceptionStateE(%"class.blink::IDBCursor"*, %"class.blink::ScriptState"* nocapture readonly, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.blink::IDBRequest::AsyncTraceState"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.blink::IDBRequest::AsyncTraceState"*
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !3

14:                                               ; preds = %5
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %16 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %20

20:                                               ; preds = %5, %14
  %21 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %14 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), %14 ]
  %23 = phi i64 [ -6148914691236517206, %5 ], [ %19, %14 ]
  %24 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  %25 = bitcast <2 x i64>* %7 to i8**
  %26 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 16, i1 false)
  call void @_ZN5blink10IDBRequest15AsyncTraceStateC1EPKc(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0)) #10
  %27 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %28, i64 0, i32 10
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %34, label %32

32:                                               ; preds = %20
  %33 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* %28) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 31, i8* %33) #10
  br label %92

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %36 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %52 [
    i32 0, label %45
    i32 1, label %39
  ]

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %36, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %41, i64 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %52, label %51

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %36, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 8, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %45, %39
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE, i64 0, i64 0)) #10
  br label %92

52:                                               ; preds = %39, %34
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #10
  br label %92

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %56 [
    i32 0, label %57
    i32 2, label %57
  ]

56:                                               ; preds = %53
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0)) #10
  br label %92

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  %59 = load i8, i8* %58, align 8, !range !4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase20kNoValueErrorMessageE, i64 0, i64 0)) #10
  br label %92

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %63, align 8
  %65 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %66 = call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %65, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10
  %67 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %88

70:                                               ; preds = %62
  %71 = call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* %66) #10
  br i1 %71, label %73, label %72

72:                                               ; preds = %70
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #10
  br label %88

73:                                               ; preds = %70
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %63, align 8
  %75 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %3) #10
  %76 = call %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %74, %"class.v8::Value"* %75, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10
  %77 = load i32, i32* %67, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %73
  %80 = call zeroext i1 @_ZNK5blink6IDBKey7IsValidEv(%"class.blink::IDBKey"* %76) #10
  br i1 %80, label %82, label %81

81:                                               ; preds = %79
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 30, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kNotValidKeyErrorMessageE, i64 0, i64 0)) #10
  br label %84

82:                                               ; preds = %79
  %83 = load <2 x i64>, <2 x i64>* %7, align 16
  store <2 x i64> %83, <2 x i64>* %9, align 16
  store i8* null, i8** %25, align 16
  call void @_ZN5blink9IDBCursor8ContinueENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS_10IDBRequest15AsyncTraceStateERNS_14ExceptionStateE(%"class.blink::IDBCursor"* %0, %"class.blink::IDBKey"* %66, %"class.blink::IDBKey"* %76, %"class.blink::IDBRequest::AsyncTraceState"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %10) #10
  br label %92

84:                                               ; preds = %73, %81
  %85 = icmp eq %"class.blink::IDBKey"* %76, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %76) #10
  %87 = bitcast %"class.blink::IDBKey"* %76 to i8*
  call void @free(i8* %87) #10
  br label %88

88:                                               ; preds = %62, %86, %84, %72
  %89 = icmp eq %"class.blink::IDBKey"* %66, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %66) #10
  %91 = bitcast %"class.blink::IDBKey"* %66 to i8*
  call void @free(i8* %91) #10
  br label %92

92:                                               ; preds = %90, %88, %82, %61, %56, %52, %51, %32
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  %93 = icmp eq i8* %21, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %92
  %95 = load i8, i8* %21, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %22, i64 %23) #10
  br label %98

98:                                               ; preds = %92, %94, %97
  ret void
}

declare zeroext i1 @_ZNK5blink6IDBKey10IsLessThanEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink6IDBKey7IsEqualEPKS0_(%"class.blink::IDBKey"*, %"class.blink::IDBKey"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBRequest"* @_ZN5blink9IDBCursor6DeleteEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::IDBCursor"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.blink::IDBRequest::AsyncTraceState"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.blink::IDBRequest::AsyncTraceState"*
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !3

12:                                               ; preds = %3
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %14 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), %12 ]
  %20 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %12 ]
  %21 = phi i64 [ -6148914691236517206, %3 ], [ %17, %12 ]
  %22 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #10
  %23 = bitcast <2 x i64>* %5 to i8**
  %24 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 16, i1 false)
  call void @_ZN5blink10IDBRequest15AsyncTraceStateC1EPKc(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0)) #10
  %25 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %26, i64 0, i32 10
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %32, label %30

30:                                               ; preds = %18
  %31 = call i8* @_ZNK5blink14IDBTransaction20InactiveErrorMessageEv(%"class.blink::IDBTransaction"* %26) #10
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 31, i8* %31) #10
  br label %117

32:                                               ; preds = %18
  %33 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %26, i64 0, i32 7
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 32, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i64 0, i64 0)) #10
  br label %117

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %39 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %55 [
    i32 0, label %48
    i32 1, label %42
  ]

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %39, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %44, i64 0, i32 3
  %46 = load i8, i8* %45, align 8, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %55, label %54

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %39, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %50, i64 0, i32 4
  %52 = load i8, i8* %51, align 8, !range !4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %48, %42
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase26kSourceDeletedErrorMessageE, i64 0, i64 0)) #10
  br label %117

55:                                               ; preds = %48, %42, %37
  %56 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  %57 = load i8, i8* %56, align 8, !range !4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase20kNoValueErrorMessageE, i64 0, i64 0)) #10
  br label %117

60:                                               ; preds = %55
  %61 = bitcast %"class.blink::IDBCursor"* %0 to i1 (%"class.blink::IDBCursor"*)***
  %62 = load i1 (%"class.blink::IDBCursor"*)**, i1 (%"class.blink::IDBCursor"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %62, i64 9
  %64 = load i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %63, align 8
  %65 = call zeroext i1 %64(%"class.blink::IDBCursor"* %0) #10
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase24kIsKeyCursorErrorMessageE, i64 0, i64 0)) #10
  br label %117

67:                                               ; preds = %60
  %68 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %25, align 8
  %69 = call %"class.blink::WebIDBDatabase"* @_ZNK5blink14IDBTransaction9BackendDBEv(%"class.blink::IDBTransaction"* %68) #10
  %70 = icmp eq %"class.blink::WebIDBDatabase"* %69, null
  br i1 %70, label %71, label %72

71:                                               ; preds = %67
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11IDBDatabase27kDatabaseClosedErrorMessageE, i64 0, i64 0)) #10
  br label %117

72:                                               ; preds = %67
  %73 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %25, align 8
  %74 = load <2 x i64>, <2 x i64>* %5, align 16
  store <2 x i64> %74, <2 x i64>* %7, align 16
  store i8* null, i8** %23, align 16
  %75 = call %"class.blink::IDBRequest"* @_ZN5blink10IDBRequest6CreateEPNS_11ScriptStateEPNS_9IDBCursorEPNS_14IDBTransactionENS0_15AsyncTraceStateE(%"class.blink::ScriptState"* %1, %"class.blink::IDBCursor"* %0, %"class.blink::IDBTransaction"* %73, %"class.blink::IDBRequest::AsyncTraceState"* nonnull %8) #10
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %8) #10
  %76 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %25, align 8
  %77 = call %"class.blink::WebIDBDatabase"* @_ZNK5blink14IDBTransaction9BackendDBEv(%"class.blink::IDBTransaction"* %76) #10
  %78 = load %"class.blink::IDBTransaction"*, %"class.blink::IDBTransaction"** %25, align 8
  %79 = getelementptr inbounds %"class.blink::IDBTransaction", %"class.blink::IDBTransaction"* %78, i64 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %38, align 8
  %82 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %93 [
    i32 0, label %84
    i32 1, label %88
  ]

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %81, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %86, i64 0, i32 2, i32 0, i32 0
  br label %90

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %81, i64 0, i32 3, i32 0, i32 0
  br label %90

90:                                               ; preds = %88, %84
  %91 = phi %"class.blink::IDBObjectStore"** [ %87, %84 ], [ %89, %88 ]
  %92 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %91, align 8
  br label %93

93:                                               ; preds = %90, %72
  %94 = phi %"class.blink::IDBObjectStore"* [ null, %72 ], [ %92, %90 ]
  %95 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %94, i64 0, i32 1, i32 0
  %96 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %96, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %100 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %99, align 8
  %101 = icmp eq %"class.blink::IDBKey"* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12, i32 0, i32 0
  %104 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %103, align 8
  %105 = icmp eq %"class.blink::IDBAny"* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = call %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"* nonnull %104) #10
  %108 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %107, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %108, align 8
  br label %110

110:                                              ; preds = %106, %102, %93
  %111 = phi %"class.blink::IDBKey"* [ %109, %106 ], [ null, %102 ], [ %100, %93 ]
  %112 = call %"class.blink::WebIDBCallbacks"* @_ZN5blink10IDBRequest18CreateWebCallbacksEv(%"class.blink::IDBRequest"* %75) #10
  %113 = bitcast %"class.blink::WebIDBDatabase"* %77 to void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)***
  %114 = load void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)**, void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)** %114, i64 16
  %116 = load void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)*, void (%"class.blink::WebIDBDatabase"*, i64, i64, %"class.blink::IDBKey"*, %"class.blink::WebIDBCallbacks"*)** %115, align 8
  call void %116(%"class.blink::WebIDBDatabase"* %77, i64 %80, i64 %98, %"class.blink::IDBKey"* %111, %"class.blink::WebIDBCallbacks"* %112) #10
  br label %117

117:                                              ; preds = %110, %71, %66, %59, %54, %36, %30
  %118 = phi %"class.blink::IDBRequest"* [ null, %36 ], [ null, %54 ], [ null, %66 ], [ %75, %110 ], [ null, %71 ], [ null, %59 ], [ null, %30 ]
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #10
  %119 = icmp eq i8* %20, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %117
  %121 = load i8, i8* %20, align 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %21) #10
  br label %124

124:                                              ; preds = %117, %120, %123
  ret %"class.blink::IDBRequest"* %118
}

declare %"class.blink::WebIDBDatabase"* @_ZNK5blink14IDBTransaction9BackendDBEv(%"class.blink::IDBTransaction"*) local_unnamed_addr #1

declare %"class.blink::IDBRequest"* @_ZN5blink10IDBRequest6CreateEPNS_11ScriptStateEPNS_9IDBCursorEPNS_14IDBTransactionENS0_15AsyncTraceStateE(%"class.blink::ScriptState"*, %"class.blink::IDBCursor"*, %"class.blink::IDBTransaction"*, %"class.blink::IDBRequest::AsyncTraceState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor26PostSuccessHandlerCallbackEv(%"class.blink::IDBCursor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %2, align 8
  %4 = icmp eq %"class.blink::WebIDBCursor"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::WebIDBCursor"* %3 to void (%"class.blink::WebIDBCursor"*)***
  %7 = load void (%"class.blink::WebIDBCursor"*)**, void (%"class.blink::WebIDBCursor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %7, i64 4
  %9 = load void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %8, align 8
  tail call void %9(%"class.blink::WebIDBCursor"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor5CloseEv(%"class.blink::IDBCursor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12
  %3 = bitcast %"class.blink::Member.145"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 2, i32 0
  %5 = bitcast %"class.blink::MemberBase"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WebIDBCursor"*, %"class.blink::WebIDBCursor"** %6, align 8
  store %"class.blink::WebIDBCursor"* null, %"class.blink::WebIDBCursor"** %6, align 8
  %8 = icmp eq %"class.blink::WebIDBCursor"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::WebIDBCursor"* %7 to void (%"class.blink::WebIDBCursor"*)***
  %11 = load void (%"class.blink::WebIDBCursor"*)**, void (%"class.blink::WebIDBCursor"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %11, i64 1
  %13 = load void (%"class.blink::WebIDBCursor"*)*, void (%"class.blink::WebIDBCursor"*)** %12, align 8
  tail call void %13(%"class.blink::WebIDBCursor"* nonnull %7) #10
  br label %14

14:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor3keyEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::IDBCursor"* nocapture, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 7
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %6 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8, !noalias !5
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8, !noalias !5
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #10
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %10, %3
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %3 ]
  %19 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %18) #10, !noalias !5
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8, !noalias !5
  %22 = tail call %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBKeyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBKey"* %6, %"class.v8::Object"* %19, %"class.v8::Isolate"* %21) #10, !noalias !5
  %23 = icmp eq %"class.v8::Value"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #10, !alias.scope !5
  br label %30

26:                                               ; preds = %17
  %27 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8, !noalias !5
  %28 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %27, %"class.v8::Isolate"** %28, align 8, !alias.scope !5
  %29 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %29, %"class.v8::Isolate"* %27, %"class.v8::Value"* nonnull %22) #10
  br label %30

30:                                               ; preds = %24, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor10primaryKeyEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::IDBCursor"* nocapture, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 8
  store i8 0, i8* %4, align 2
  %5 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %5, align 8
  %7 = icmp eq %"class.blink::IDBKey"* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 12, i32 0, i32 0
  %10 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %9, align 8
  %11 = tail call %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"* %10) #10
  %12 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %12, align 8
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi %"class.blink::IDBKey"* [ %13, %8 ], [ %6, %3 ]
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.v8::Context"*, %"class.v8::Context"** %16, align 8, !noalias !8
  %18 = icmp eq %"class.v8::Context"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8, !noalias !8
  %22 = bitcast %"class.v8::Context"* %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %21, i64 %23) #10
  %25 = bitcast i64* %24 to %"class.v8::Context"*
  br label %26

26:                                               ; preds = %19, %14
  %27 = phi %"class.v8::Context"* [ %25, %19 ], [ null, %14 ]
  %28 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %27) #10, !noalias !8
  %29 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %30 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8, !noalias !8
  %31 = tail call %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBKeyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBKey"* %15, %"class.v8::Object"* %28, %"class.v8::Isolate"* %30) #10, !noalias !8
  %32 = icmp eq %"class.v8::Value"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10, !alias.scope !8
  br label %39

35:                                               ; preds = %26
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %29, align 8, !noalias !8
  %37 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %37, align 8, !alias.scope !8
  %38 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %38, %"class.v8::Isolate"* %36, %"class.v8::Value"* nonnull %31) #10
  br label %39

39:                                               ; preds = %33, %35
  ret void
}

declare %"class.blink::IDBValue"* @_ZNK5blink6IDBAny5ValueEv(%"class.blink::IDBAny"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor5valueEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::IDBCursor"* nocapture, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %4, align 8
  %6 = icmp eq %"class.blink::IDBAny"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64 64) #10
  %9 = bitcast i8* %8 to %"class.blink::IDBAny"*
  tail call void @_ZN5blink6IDBAnyC1ENS0_4TypeE(%"class.blink::IDBAny"* %9, i32 0) #10
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  br label %14

14:                                               ; preds = %3, %7
  %15 = phi %"class.blink::IDBAny"* [ %9, %7 ], [ %5, %3 ]
  %16 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %1, i64 0, i32 9
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load %"class.v8::Context"*, %"class.v8::Context"** %18, align 8, !noalias !11
  %21 = icmp eq %"class.v8::Context"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %24 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %23, align 8, !noalias !11
  %25 = bitcast %"class.v8::Context"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %24, i64 %26) #10
  %28 = bitcast i64* %27 to %"class.v8::Context"*
  br label %29

29:                                               ; preds = %22, %14
  %30 = phi %"class.v8::Context"* [ %28, %22 ], [ null, %14 ]
  %31 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %30) #10, !noalias !11
  %32 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %33 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8, !noalias !11
  %34 = tail call %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBAnyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBAny"* %15, %"class.v8::Object"* %31, %"class.v8::Isolate"* %33) #10, !noalias !11
  %35 = icmp eq %"class.v8::Value"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10, !alias.scope !11
  br label %41

38:                                               ; preds = %29
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8, !noalias !11
  store %"class.v8::Isolate"* %39, %"class.v8::Isolate"** %17, align 8, !alias.scope !11
  %40 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %40, %"class.v8::Isolate"* %39, %"class.v8::Value"* nonnull %34) #10
  br label %41

41:                                               ; preds = %36, %38
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* @_ZNK5blink9IDBCursor6sourceEv(%"class.blink::IDBCursor"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %2, align 8
  ret %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9IDBCursor13SetValueReadyENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEES6_NS2_INS_8IDBValueENS4_IS7_EEEE(%"class.blink::IDBCursor"*, %"class.blink::IDBKey"*, %"class.blink::IDBKey"*, %"class.blink::IDBValue"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::IDBKeyPath", align 8
  %6 = ptrtoint %"class.blink::IDBKey"* %1 to i64
  %7 = ptrtoint %"class.blink::IDBKey"* %2 to i64
  %8 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %9, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.149"* %8 to i64*
  store i64 %6, i64* %11, align 8
  %12 = icmp eq %"class.blink::IDBKey"* %10, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %10) #10
  %14 = bitcast %"class.blink::IDBKey"* %10 to i8*
  tail call void @free(i8* %14) #10
  br label %15

15:                                               ; preds = %4, %13
  %16 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 7
  store i8 1, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.149"* %17 to i64*
  store i64 %7, i64* %20, align 8
  %21 = icmp eq %"class.blink::IDBKey"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %19) #10
  %23 = bitcast %"class.blink::IDBKey"* %19 to i8*
  tail call void @free(i8* %23) #10
  br label %24

24:                                               ; preds = %15, %22
  %25 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 2
  %26 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 6
  store i8 1, i8* %26, align 8
  %27 = icmp eq %"class.blink::IDBCursor"* %0, null
  br i1 %27, label %212, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::IDBCursor"* %0 to i1 (%"class.blink::IDBCursor"*)***
  %30 = load i1 (%"class.blink::IDBCursor"*)**, i1 (%"class.blink::IDBCursor"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %30, i64 10
  %32 = load i1 (%"class.blink::IDBCursor"*)*, i1 (%"class.blink::IDBCursor"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::IDBCursor"* nonnull %0) #10
  br i1 %33, label %34, label %212

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 9
  store i8 1, i8* %35, align 1
  %36 = icmp eq %"class.blink::IDBValue"* %3, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12
  %39 = bitcast %"class.blink::Member.145"* %38 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  br label %216

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 4, i32 0, i32 0
  %42 = load %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::V8UnionIDBIndexOrIDBObjectStore"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  switch i32 %44, label %54 [
    i32 0, label %45
    i32 1, label %49
  ]

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %42, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::IDBIndex"*, %"class.blink::IDBIndex"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::IDBIndex", %"class.blink::IDBIndex"* %47, i64 0, i32 2, i32 0, i32 0
  br label %51

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.blink::V8UnionIDBIndexOrIDBObjectStore", %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %42, i64 0, i32 3, i32 0, i32 0
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::IDBObjectStore"** [ %48, %45 ], [ %50, %49 ]
  %53 = load %"class.blink::IDBObjectStore"*, %"class.blink::IDBObjectStore"** %52, align 8
  br label %54

54:                                               ; preds = %51, %40
  %55 = phi %"class.blink::IDBObjectStore"* [ null, %40 ], [ %53, %51 ]
  %56 = getelementptr inbounds %"class.blink::IDBObjectStore", %"class.blink::IDBObjectStore"* %55, i64 0, i32 1, i32 0
  %57 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %57, i64 0, i32 4
  %59 = load i8, i8* %58, align 8, !range !4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %198, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %57, i64 0, i32 3, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %198, label %65

65:                                               ; preds = %61
  %66 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %18, align 8
  store %"class.blink::IDBKey"* null, %"class.blink::IDBKey"** %18, align 8
  %67 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %56, align 8
  %68 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %5, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %67, i64 0, i32 3, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %68, align 8
  %71 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %67, i64 0, i32 3, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #10
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %80
  tail call void @llvm.trap() #10
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %90, %75, %65
  %93 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %5, i64 0, i32 2
  %94 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %67, i64 0, i32 3, i32 2, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = getelementptr inbounds %"class.WTF::Vector.75", %"class.WTF::Vector.75"* %93, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %96, align 8
  %97 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %5, i64 0, i32 2, i32 0, i32 0, i32 1
  store i32 0, i32* %97, align 8
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %108, label %99

99:                                               ; preds = %92
  %100 = zext i32 %95 to i64
  %101 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %100) #10
  %102 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %101, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %103 = ptrtoint i8* %102 to i64
  %104 = bitcast %"class.WTF::Vector.75"* %93 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = lshr i64 %101, 3
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %97, align 8
  %107 = bitcast i8* %102 to %"class.WTF::String"*
  br label %108

108:                                              ; preds = %99, %92
  %109 = phi %"class.WTF::String"* [ null, %92 ], [ %107, %99 ]
  %110 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %67, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %5, i64 0, i32 2, i32 0, i32 0, i32 2
  store i32 %111, i32* %112, align 4
  %113 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %67, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::String"*, %"class.WTF::String"** %113, align 8
  %115 = zext i32 %111 to i64
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 %115
  %117 = icmp eq i32 %111, 0
  br i1 %117, label %146, label %118

118:                                              ; preds = %108, %142
  %119 = phi %"class.WTF::String"* [ %143, %142 ], [ %109, %108 ]
  %120 = phi %"class.WTF::String"* [ %144, %142 ], [ %114, %108 ]
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #10
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %130
  tail call void @llvm.trap() #10
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %140, %125, %118
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %120, i64 1
  %145 = icmp eq %"class.WTF::String"* %144, %116
  br i1 %145, label %146, label %118

146:                                              ; preds = %142, %108
  call void @_ZN5blink8IDBValue21SetInjectedPrimaryKeyENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEENS_10IDBKeyPathE(%"class.blink::IDBValue"* nonnull %3, %"class.blink::IDBKey"* %66, %"class.blink::IDBKeyPath"* nonnull %5)
  %147 = load %"class.WTF::String"*, %"class.WTF::String"** %96, align 8
  %148 = icmp eq %"class.WTF::String"* %147, null
  br i1 %148, label %182, label %149, !prof !3

149:                                              ; preds = %146
  %150 = bitcast %"class.WTF::String"* %147 to i8*
  %151 = load i32, i32* %112, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %180, label %153, !prof !2

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 %154
  br label %156

156:                                              ; preds = %174, %153
  %157 = phi %"class.WTF::String"* [ %175, %174 ], [ %147, %153 ]
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #10
  br label %174

174:                                              ; preds = %173, %170, %156
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 1
  %176 = icmp eq %"class.WTF::String"* %175, %155
  br i1 %176, label %177, label %156

177:                                              ; preds = %174
  store i32 0, i32* %112, align 4
  %178 = bitcast %"class.WTF::Vector.75"* %93 to i8**
  %179 = load i8*, i8** %178, align 8
  br label %180

180:                                              ; preds = %177, %149
  %181 = phi i8* [ %179, %177 ], [ %150, %149 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %181) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %96, align 8
  br label %182

182:                                              ; preds = %180, %146
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #10
  br label %198

198:                                              ; preds = %54, %197, %194, %182, %61
  %199 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64 64) #10
  %200 = bitcast i8* %199 to %"class.blink::IDBAny"*
  call void @_ZN5blink6IDBAnyC1ENSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEE(%"class.blink::IDBAny"* %200, %"class.blink::IDBValue"* nonnull %3) #10
  %201 = getelementptr inbounds i8, i8* %199, i64 -4
  %202 = bitcast i8* %201 to i16*
  %203 = load atomic i16, i16* %202 monotonic, align 2
  %204 = or i16 %203, 1
  store atomic i16 %204, i16* %202 release, align 2
  %205 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 12
  %206 = ptrtoint i8* %199 to i64
  %207 = bitcast %"class.blink::Member.145"* %205 to i64*
  store atomic i64 %206, i64* %207 monotonic, align 8
  %208 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %216, label %210

210:                                              ; preds = %198
  %211 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %199) #10
  br label %216

212:                                              ; preds = %24, %28
  %213 = icmp eq %"class.blink::IDBValue"* %3, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  tail call void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"* nonnull %3) #10
  %215 = bitcast %"class.blink::IDBValue"* %3 to i8*
  tail call void @_ZdlPv(i8* %215) #11
  br label %216

216:                                              ; preds = %210, %198, %37, %212, %214
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IDBValue21SetInjectedPrimaryKeyENSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEENS_10IDBKeyPathE(%"class.blink::IDBValue"*, %"class.blink::IDBKey"*, %"class.blink::IDBKeyPath"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.blink::IDBKey"* %1 to i64
  %5 = icmp eq %"class.blink::IDBKey"* %1, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::IDBKey", %"class.blink::IDBKey"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %1) #10
  %11 = bitcast %"class.blink::IDBKey"* %1 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %3, %10, %6
  %13 = phi i64 [ 0, %10 ], [ %4, %6 ], [ %4, %3 ]
  %14 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::IDBKey"*, %"class.blink::IDBKey"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.149"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.blink::IDBKey"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  tail call void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"* nonnull %16) #10
  %20 = bitcast %"class.blink::IDBKey"* %16 to i8*
  tail call void @free(i8* %20) #10
  br label %21

21:                                               ; preds = %12, %19
  %22 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 4, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 4, i32 1
  %26 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %28 = bitcast %"class.WTF::String"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %30 = bitcast %"class.WTF::String"* %25 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %47

47:                                               ; preds = %46, %43, %21
  %48 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 4, i32 2
  %49 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 2
  %50 = bitcast %"class.WTF::Vector.75"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.WTF::Vector.75"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  store atomic i64 %53, i64* %50 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %54 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %56 = load i32, i32* %54, align 4
  %57 = load i32, i32* %55, align 4
  store i32 %57, i32* %54, align 4
  store i32 %56, i32* %55, align 4
  %58 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %59 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %58, align 4
  %61 = load i32, i32* %59, align 4
  store i32 %61, i32* %58, align 4
  store i32 %60, i32* %59, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9IDBCursor17StringToDirectionERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names5kNextE, align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"* %6) #10
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names11kNextuniqueE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %13 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %12) #10
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names5kPrevE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %19 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"* %18) #10
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16indexed_db_names11kPrevuniqueE, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %25 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"* %24) #10
  %26 = select i1 %25, i32 3, i32 0
  br label %27

27:                                               ; preds = %20, %14, %8, %1
  %28 = phi i32 [ 0, %1 ], [ 1, %8 ], [ 2, %14 ], [ %26, %20 ]
  ret i32 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink9IDBCursor9directionEv(%"class.blink::IDBCursor"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBCursor", %"class.blink::IDBCursor"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 4
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [4 x %"class.WTF::AtomicString"**], [4 x %"class.WTF::AtomicString"**]* @switch.table._ZNK5blink9IDBCursor9directionEv, i64 0, i64 %6
  %8 = load %"class.WTF::AtomicString"**, %"class.WTF::AtomicString"*** %7, align 8
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.WTF::AtomicString"** [ %8, %5 ], [ @_ZN5blink16indexed_db_names5kNextE, %1 ]
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0
  ret %"class.WTF::String"* %12
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink9IDBCursor18GetWrapperTypeInfoEv(%"class.blink::IDBCursor"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9IDBCursor18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9IDBCursor11IsKeyCursorEv(%"class.blink::IDBCursor"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9IDBCursor17IsCursorWithValueEv(%"class.blink::IDBCursor"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #10
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #10
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #10
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.420", %"class.WTF::HashMap.420"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.421"* %47, %"class.blink::ScriptWrappable"* %0) #10
  %49 = extractvalue { %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.420", %"class.WTF::HashMap.420"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.423"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.16, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.16, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.421"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.421", %"class.WTF::HashTable.421"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.423"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.421", %"class.WTF::HashTable.421"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.423"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.423"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.423", %"struct.WTF::KeyValuePair.423"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.423"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.423"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"* } undef, %"struct.WTF::KeyValuePair.423"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"* } %78, %"struct.WTF::KeyValuePair.423"* %77, 1
  ret { %"struct.WTF::KeyValuePair.423"*, %"struct.WTF::KeyValuePair.423"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

declare void @_ZN5blink6IDBKeyC1ENS_5mojom10IDBKeyTypeE(%"class.blink::IDBKey"*, i32) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink6IDBKeyD1Ev(%"class.blink::IDBKey"*) unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.20, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10IDBRequestEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBRequest"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDBRequest"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDBRequest"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_31V8UnionIDBIndexOrIDBObjectStoreEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::V8UnionIDBIndexOrIDBObjectStore"*
  tail call void @_ZNK5blink31V8UnionIDBIndexOrIDBObjectStore5TraceEPNS_7VisitorE(%"class.blink::V8UnionIDBIndexOrIDBObjectStore"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink31V8UnionIDBIndexOrIDBObjectStore5TraceEPNS_7VisitorE(%"class.blink::V8UnionIDBIndexOrIDBObjectStore"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14IDBTransactionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBTransaction"*
  tail call void @_ZNK5blink14IDBTransaction5TraceEPNS_7VisitorE(%"class.blink::IDBTransaction"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink14IDBTransaction5TraceEPNS_7VisitorE(%"class.blink::IDBTransaction"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBAny"*
  tail call void @_ZNK5blink6IDBAny5TraceEPNS_7VisitorE(%"class.blink::IDBAny"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink6IDBAny5TraceEPNS_7VisitorE(%"class.blink::IDBAny"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.blink::IDBKey"* @_ZN5blink17NativeValueTraitsINSt3__110unique_ptrINS_6IDBKeyENS1_14default_deleteIS3_EEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBKeyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBKey"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.440, %class.scoped_refptr.440* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #10
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.437"* dereferenceable(8) %9) #10
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #10
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #10
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #10
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.440* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #10
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #10
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #10
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #10
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.440* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #10
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #10
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.437"* dereferenceable(8)) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink6IDBAnyC1ENS0_4TypeE(%"class.blink::IDBAny"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6IDBAnyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_6IDBAnyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDBAny"*
  tail call void @_ZN5blink6IDBAnyD1Ev(%"class.blink::IDBAny"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_6IDBAnyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink6IDBAnyD1Ev(%"class.blink::IDBAny"*) unnamed_addr #4

declare %"class.v8::Value"* @_ZN5blink4ToV8EPKNS_6IDBAnyEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::IDBAny"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink8IDBValueD1Ev(%"class.blink::IDBValue"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN5blink6IDBAnyC1ENSt3__110unique_ptrINS_8IDBValueENS1_14default_deleteIS3_EEEE(%"class.blink::IDBAny"*, %"class.blink::IDBValue"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink11ScriptValue4FromIPNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink11ScriptValue4FromIPNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink11ScriptValue4FromIRPKNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_: argument 0"}
!10 = distinct !{!10, !"_ZN5blink11ScriptValue4FromIRPKNS_6IDBKeyEEES0_PNS_11ScriptStateEOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink11ScriptValue4FromIRPNS_6IDBAnyEEES0_PNS_11ScriptStateEOT_: argument 0"}
!13 = distinct !{!13, !"_ZN5blink11ScriptValue4FromIRPNS_6IDBAnyEEES0_PNS_11ScriptStateEOT_"}
