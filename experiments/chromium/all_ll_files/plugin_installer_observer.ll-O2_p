; ModuleID = '../../chrome/browser/plugins/plugin_installer_observer.cc'
source_filename = "../../chrome/browser/plugins/plugin_installer_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.PluginInstallerObserver = type { i32 (...)**, %class.PluginInstaller* }
%class.PluginInstaller = type { %"class.base::ObserverList", i32, [4 x i8], %"class.base::ObserverList.1" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.1" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.2", i64, i32, [4 x i8] }>
%"class.base::LinkedList.2" = type { %"class.base::LinkNode.3" }
%"class.base::LinkNode.3" = type { %"class.base::internal::LinkNodeBase" }
%class.WeakPluginInstallerObserver = type { %class.PluginInstallerObserver }

@_ZTV23PluginInstallerObserver = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.PluginInstallerObserver*)* @_ZN23PluginInstallerObserverD2Ev to i8*), i8* bitcast (void (%class.PluginInstallerObserver*)* @_ZN23PluginInstallerObserverD0Ev to i8*), i8* bitcast (void (%class.PluginInstallerObserver*)* @_ZN23PluginInstallerObserver16DownloadFinishedEv to i8*)] }, align 8
@_ZTV27WeakPluginInstallerObserver = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.WeakPluginInstallerObserver*)* @_ZN27WeakPluginInstallerObserverD2Ev to i8*), i8* bitcast (void (%class.WeakPluginInstallerObserver*)* @_ZN27WeakPluginInstallerObserverD0Ev to i8*), i8* bitcast (void (%class.PluginInstallerObserver*)* @_ZN23PluginInstallerObserver16DownloadFinishedEv to i8*), i8* bitcast (void (%class.WeakPluginInstallerObserver*)* @_ZN27WeakPluginInstallerObserver21OnlyWeakObserversLeftEv to i8*)] }, align 8

@_ZN23PluginInstallerObserverC1EP15PluginInstaller = hidden unnamed_addr alias void (%class.PluginInstallerObserver*, %class.PluginInstaller*), void (%class.PluginInstallerObserver*, %class.PluginInstaller*)* @_ZN23PluginInstallerObserverC2EP15PluginInstaller
@_ZN23PluginInstallerObserverD1Ev = hidden unnamed_addr alias void (%class.PluginInstallerObserver*), void (%class.PluginInstallerObserver*)* @_ZN23PluginInstallerObserverD2Ev
@_ZN27WeakPluginInstallerObserverC1EP15PluginInstaller = hidden unnamed_addr alias void (%class.WeakPluginInstallerObserver*, %class.PluginInstaller*), void (%class.WeakPluginInstallerObserver*, %class.PluginInstaller*)* @_ZN27WeakPluginInstallerObserverC2EP15PluginInstaller
@_ZN27WeakPluginInstallerObserverD1Ev = hidden unnamed_addr alias void (%class.WeakPluginInstallerObserver*), void (%class.WeakPluginInstallerObserver*)* @_ZN27WeakPluginInstallerObserverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23PluginInstallerObserverC2EP15PluginInstaller(%class.PluginInstallerObserver*, %class.PluginInstaller*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.PluginInstallerObserver, %class.PluginInstallerObserver* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.PluginInstallerObserver, %class.PluginInstallerObserver* %0, i64 0, i32 1
  store %class.PluginInstaller* %1, %class.PluginInstaller** %4, align 8
  %5 = icmp eq %class.PluginInstaller* %1, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN15PluginInstaller11AddObserverEP23PluginInstallerObserver(%class.PluginInstaller* nonnull %1, %class.PluginInstallerObserver* %0) #4
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN15PluginInstaller11AddObserverEP23PluginInstallerObserver(%class.PluginInstaller*, %class.PluginInstallerObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23PluginInstallerObserverD2Ev(%class.PluginInstallerObserver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.PluginInstallerObserver, %class.PluginInstallerObserver* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PluginInstallerObserver, %class.PluginInstallerObserver* %0, i64 0, i32 1
  %4 = load %class.PluginInstaller*, %class.PluginInstaller** %3, align 8
  %5 = icmp eq %class.PluginInstaller* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN15PluginInstaller14RemoveObserverEP23PluginInstallerObserver(%class.PluginInstaller* nonnull %4, %class.PluginInstallerObserver* %0) #4
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN15PluginInstaller14RemoveObserverEP23PluginInstallerObserver(%class.PluginInstaller*, %class.PluginInstallerObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23PluginInstallerObserverD0Ev(%class.PluginInstallerObserver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.PluginInstallerObserver, %class.PluginInstallerObserver* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PluginInstallerObserver, %class.PluginInstallerObserver* %0, i64 0, i32 1
  %4 = load %class.PluginInstaller*, %class.PluginInstaller** %3, align 8
  %5 = icmp eq %class.PluginInstaller* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN15PluginInstaller14RemoveObserverEP23PluginInstallerObserver(%class.PluginInstaller* nonnull %4, %class.PluginInstallerObserver* %0) #4
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.PluginInstallerObserver* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN23PluginInstallerObserver16DownloadFinishedEv(%class.PluginInstallerObserver* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27WeakPluginInstallerObserverC2EP15PluginInstaller(%class.WeakPluginInstallerObserver*, %class.PluginInstaller*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0, i32 1
  store %class.PluginInstaller* %1, %class.PluginInstaller** %4, align 8
  %5 = icmp eq %class.PluginInstaller* %1, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27WeakPluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  br label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0
  tail call void @_ZN15PluginInstaller11AddObserverEP23PluginInstallerObserver(%class.PluginInstaller* nonnull %1, %class.PluginInstallerObserver* %8) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27WeakPluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN15PluginInstaller15AddWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller* nonnull %1, %class.WeakPluginInstallerObserver* %0) #4
  br label %9

9:                                                ; preds = %6, %7
  ret void
}

declare void @_ZN15PluginInstaller15AddWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller*, %class.WeakPluginInstallerObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27WeakPluginInstallerObserverD2Ev(%class.WeakPluginInstallerObserver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27WeakPluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0, i32 1
  %5 = load %class.PluginInstaller*, %class.PluginInstaller** %4, align 8
  %6 = icmp eq %class.PluginInstaller* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  br label %12

8:                                                ; preds = %1
  tail call void @_ZN15PluginInstaller18RemoveWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller* nonnull %5, %class.WeakPluginInstallerObserver* %0) #4
  %9 = load %class.PluginInstaller*, %class.PluginInstaller** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %10 = icmp eq %class.PluginInstaller* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @_ZN15PluginInstaller14RemoveObserverEP23PluginInstallerObserver(%class.PluginInstaller* nonnull %9, %class.PluginInstallerObserver* %3) #4
  br label %12

12:                                               ; preds = %7, %8, %11
  ret void
}

declare void @_ZN15PluginInstaller18RemoveWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller*, %class.WeakPluginInstallerObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27WeakPluginInstallerObserverD0Ev(%class.WeakPluginInstallerObserver*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV27WeakPluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.WeakPluginInstallerObserver, %class.WeakPluginInstallerObserver* %0, i64 0, i32 0, i32 1
  %5 = load %class.PluginInstaller*, %class.PluginInstaller** %4, align 8
  %6 = icmp eq %class.PluginInstaller* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  tail call void @_ZN15PluginInstaller18RemoveWeakObserverEP27WeakPluginInstallerObserver(%class.PluginInstaller* nonnull %5, %class.WeakPluginInstallerObserver* %0) #4
  %8 = load %class.PluginInstaller*, %class.PluginInstaller** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23PluginInstallerObserver, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = icmp eq %class.PluginInstaller* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @_ZN15PluginInstaller14RemoveObserverEP23PluginInstallerObserver(%class.PluginInstaller* nonnull %8, %class.PluginInstallerObserver* %3) #4
  br label %11

11:                                               ; preds = %1, %7, %10
  %12 = bitcast %class.WeakPluginInstallerObserver* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN27WeakPluginInstallerObserver21OnlyWeakObserversLeftEv(%class.WeakPluginInstallerObserver* nocapture) unnamed_addr #3 align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
