; ModuleID = '../../third_party/blink/renderer/platform/exported/web_time_range.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_time_range.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebTimeRanges" = type { %"class.blink::WebVector" }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"*, %"class.std::__1::__compressed_pair" }
%"class.blink::WebTimeRange" = type { double, double }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebTimeRange"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN5blink12WebTimeRangeENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13WebTimeRanges3AddEdd(%"class.blink::WebTimeRanges"*, double, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebTimeRange", align 8
  %5 = bitcast %"class.blink::WebTimeRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %4, i64 0, i32 1
  store double %1, double* %6, align 8
  store double %2, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::WebTimeRange"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::WebTimeRanges"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  %14 = inttoptr i64 %12 to %"class.blink::WebTimeRange"*
  br i1 %13, label %95, label %15

15:                                               ; preds = %3, %79
  %16 = phi i64 [ %80, %79 ], [ %12, %3 ]
  %17 = phi %"class.blink::WebTimeRange"* [ %81, %79 ], [ %14, %3 ]
  %18 = phi i64 [ %82, %79 ], [ %12, %3 ]
  %19 = phi i64 [ %83, %79 ], [ %10, %3 ]
  %20 = phi double [ %84, %79 ], [ %2, %3 ]
  %21 = phi double [ %85, %79 ], [ %1, %3 ]
  %22 = phi %"class.blink::WebTimeRange"* [ %92, %79 ], [ %14, %3 ]
  %23 = phi i64 [ %88, %79 ], [ 0, %3 ]
  %24 = phi i32 [ %87, %79 ], [ 0, %3 ]
  %25 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %22, i64 %23
  %26 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %25, i64 0, i32 0
  %27 = load double, double* %26, align 8
  %28 = fcmp ole double %21, %27
  %29 = fcmp ogt double %20, %27
  %30 = and i1 %28, %29
  %31 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %22, i64 %23, i32 1
  %32 = load double, double* %31, align 8
  br i1 %30, label %45, label %33

33:                                               ; preds = %15
  %34 = fcmp ole double %21, %32
  %35 = fcmp ogt double %20, %32
  %36 = and i1 %34, %35
  br i1 %36, label %45, label %37

37:                                               ; preds = %33
  %38 = fcmp ole double %27, %21
  %39 = fcmp ogt double %32, %21
  %40 = and i1 %38, %39
  %41 = fcmp oeq double %27, %20
  %42 = or i1 %40, %41
  %43 = fcmp oeq double %32, %21
  %44 = or i1 %42, %43
  br i1 %44, label %45, label %65

45:                                               ; preds = %15, %37, %33
  %46 = fcmp olt double %27, %21
  %47 = select i1 %46, double %27, double %21
  %48 = fcmp olt double %20, %32
  %49 = select i1 %48, double %32, double %20
  store double %47, double* %6, align 8
  store double %49, double* %7, align 8
  %50 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %25, i64 1
  %51 = ptrtoint %"class.blink::WebTimeRange"* %50 to i64
  %52 = sub i64 %19, %51
  %53 = ashr exact i64 %52, 4
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %45
  %56 = bitcast %"class.blink::WebTimeRange"* %25 to i8*
  %57 = bitcast %"class.blink::WebTimeRange"* %50 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 %52, i1 false) #8
  %58 = load i64, i64* %11, align 8
  br label %59

59:                                               ; preds = %45, %55
  %60 = phi i64 [ %16, %45 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %25, i64 %53
  store %"class.blink::WebTimeRange"* %61, %"class.blink::WebTimeRange"** %8, align 8
  %62 = add i32 %24, -1
  %63 = ptrtoint %"class.blink::WebTimeRange"* %61 to i64
  %64 = inttoptr i64 %60 to %"class.blink::WebTimeRange"*
  br label %79

65:                                               ; preds = %37
  %66 = icmp eq i32 %24, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %22, i64 0, i32 0
  %69 = load double, double* %68, align 8
  %70 = fcmp ult double %69, %20
  br i1 %70, label %79, label %95

71:                                               ; preds = %65
  %72 = add i32 %24, -1
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %22, i64 %73, i32 1
  %75 = load double, double* %74, align 8
  %76 = fcmp oge double %21, %75
  %77 = fcmp oge double %27, %20
  %78 = and i1 %77, %76
  br i1 %78, label %95, label %79

79:                                               ; preds = %67, %59, %71
  %80 = phi i64 [ %60, %59 ], [ %16, %71 ], [ %16, %67 ]
  %81 = phi %"class.blink::WebTimeRange"* [ %64, %59 ], [ %17, %71 ], [ %17, %67 ]
  %82 = phi i64 [ %60, %59 ], [ %18, %71 ], [ %18, %67 ]
  %83 = phi i64 [ %63, %59 ], [ %19, %71 ], [ %19, %67 ]
  %84 = phi double [ %49, %59 ], [ %20, %71 ], [ %20, %67 ]
  %85 = phi double [ %47, %59 ], [ %21, %71 ], [ %21, %67 ]
  %86 = phi i32 [ %62, %59 ], [ %24, %71 ], [ 0, %67 ]
  %87 = add i32 %86, 1
  %88 = zext i32 %87 to i64
  %89 = sub i64 %83, %82
  %90 = ashr exact i64 %89, 4
  %91 = icmp ugt i64 %90, %88
  %92 = inttoptr i64 %82 to %"class.blink::WebTimeRange"*
  br i1 %91, label %15, label %93

93:                                               ; preds = %79
  %94 = zext i32 %87 to i64
  br label %95

95:                                               ; preds = %67, %71, %93, %3
  %96 = phi %"class.blink::WebTimeRange"* [ %14, %3 ], [ %81, %93 ], [ %17, %71 ], [ %17, %67 ]
  %97 = phi i64 [ 0, %3 ], [ %94, %93 ], [ %23, %71 ], [ %23, %67 ]
  %98 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %96, i64 %97
  %100 = call %"class.blink::WebTimeRange"* @_ZNSt3__16vectorIN5blink12WebTimeRangeENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(%"class.std::__1::vector"* %98, %"class.blink::WebTimeRange"* %99, %"class.blink::WebTimeRange"* nonnull dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13WebTimeRanges7ContainEd(%"class.blink::WebTimeRanges"* nocapture readonly, double) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %5, align 8
  %7 = icmp eq %"class.blink::WebTimeRange"* %4, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %2, %17
  %9 = phi %"class.blink::WebTimeRange"* [ %18, %17 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %9, i64 0, i32 0
  %11 = load double, double* %10, align 8
  %12 = fcmp ugt double %11, %1
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %9, i64 0, i32 1
  %15 = load double, double* %14, align 8
  %16 = fcmp ult double %15, %1
  br i1 %16, label %17, label %20

17:                                               ; preds = %8, %13
  %18 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %9, i64 1
  %19 = icmp eq %"class.blink::WebTimeRange"* %18, %6
  br i1 %19, label %20, label %8

20:                                               ; preds = %13, %17, %2
  %21 = phi i1 [ false, %2 ], [ false, %17 ], [ true, %13 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13WebTimeRanges6InvertEv(%"class.blink::WebTimeRanges"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::WebTimeRanges", align 16
  %3 = bitcast %"class.blink::WebTimeRanges"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 0, i64 24, i1 false) #8
  %6 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.blink::WebTimeRange"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::WebTimeRanges"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  %12 = inttoptr i64 %10 to %"class.blink::WebTimeRange"*
  br i1 %11, label %49, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %12, i64 0, i32 0
  %15 = load double, double* %14, align 8
  %16 = fcmp une double %15, 0xFFF0000000000000
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  call void @_ZN5blink13WebTimeRanges3AddEdd(%"class.blink::WebTimeRanges"* nonnull %2, double 0xFFF0000000000000, double %15)
  %18 = load i64, i64* %7, align 8
  %19 = load i64, i64* %9, align 8
  %20 = inttoptr i64 %19 to %"class.blink::WebTimeRange"*
  br label %21

21:                                               ; preds = %17, %13
  %22 = phi i64 [ %18, %17 ], [ %8, %13 ]
  %23 = phi %"class.blink::WebTimeRange"* [ %20, %17 ], [ %12, %13 ]
  %24 = phi i64 [ %19, %17 ], [ %10, %13 ]
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 4
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %34, label %28

28:                                               ; preds = %34, %21
  %29 = phi i64 [ %22, %21 ], [ %43, %34 ]
  %30 = inttoptr i64 %29 to %"class.blink::WebTimeRange"*
  %31 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %30, i64 -1, i32 1
  %32 = load double, double* %31, align 8
  %33 = fcmp une double %32, 0x7FF0000000000000
  br i1 %33, label %49, label %51

34:                                               ; preds = %21, %34
  %35 = phi %"class.blink::WebTimeRange"* [ %48, %34 ], [ %23, %21 ]
  %36 = phi i64 [ %42, %34 ], [ 1, %21 ]
  %37 = phi i64 [ %36, %34 ], [ 0, %21 ]
  %38 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %35, i64 %37, i32 1
  %39 = load double, double* %38, align 8
  %40 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %35, i64 %36, i32 0
  %41 = load double, double* %40, align 8
  call void @_ZN5blink13WebTimeRanges3AddEdd(%"class.blink::WebTimeRanges"* nonnull %2, double %39, double %41)
  %42 = add nuw i64 %36, 1
  %43 = load i64, i64* %7, align 8
  %44 = load i64, i64* %9, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %42, %46
  %48 = inttoptr i64 %44 to %"class.blink::WebTimeRange"*
  br i1 %47, label %34, label %28

49:                                               ; preds = %28, %1
  %50 = phi double [ 0xFFF0000000000000, %1 ], [ %32, %28 ]
  call void @_ZN5blink13WebTimeRanges3AddEdd(%"class.blink::WebTimeRanges"* nonnull %2, double %50, double 0x7FF0000000000000)
  br label %51

51:                                               ; preds = %49, %28
  %52 = bitcast %"class.blink::WebTimeRanges"* %2 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 16
  %54 = bitcast %"class.blink::WebTimeRanges"* %0 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = bitcast %"class.blink::WebTimeRanges"* %0 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %56, align 8
  %57 = bitcast %"class.blink::WebTimeRanges"* %2 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %57, align 16
  %58 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.blink::WebTimeRange"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::WebTimeRange"** %5 to i64*
  %62 = load i64, i64* %61, align 16
  store i64 %62, i64* %59, align 8
  store i64 %60, i64* %61, align 16
  %63 = extractelement <2 x i64> %55, i32 0
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %51
  %66 = bitcast %"class.blink::WebTimeRange"** %4 to i64*
  store i64 %63, i64* %66, align 8
  %67 = inttoptr i64 %63 to i8*
  call void @_ZdlPv(i8* %67) #9
  br label %68

68:                                               ; preds = %51, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13WebTimeRanges13IntersectWithERKS0_(%"class.blink::WebTimeRanges"*, %"class.blink::WebTimeRanges"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebTimeRanges", align 8
  %4 = bitcast %"class.blink::WebTimeRanges"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::WebTimeRange"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::WebTimeRanges"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 1152921504606846975
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::WebTimeRanges"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %19) #10
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #9
  %22 = bitcast i8* %21 to %"class.blink::WebTimeRange"*
  %23 = bitcast %"class.blink::WebTimeRange"** %6 to i8**
  store i8* %21, i8** %23, align 8
  %24 = bitcast %"class.blink::WebTimeRanges"* %3 to i8**
  store i8* %21, i8** %24, align 8
  %25 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %22, i64 %14
  store %"class.blink::WebTimeRange"* %25, %"class.blink::WebTimeRange"** %7, align 8
  %26 = bitcast %"class.blink::WebTimeRange"** %6 to i64*
  %27 = ptrtoint i8* %21 to i64
  %28 = icmp sgt i64 %13, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %20
  %30 = lshr exact i64 %13, 4
  %31 = inttoptr i64 %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %31, i64 %13, i1 false) #8
  %32 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %22, i64 %30
  %33 = ptrtoint %"class.blink::WebTimeRange"* %32 to i64
  br label %34

34:                                               ; preds = %29, %20
  %35 = phi i64 [ %33, %29 ], [ %27, %20 ]
  store i64 %35, i64* %26, align 8
  br label %36

36:                                               ; preds = %2, %34
  call void @_ZN5blink13WebTimeRanges6InvertEv(%"class.blink::WebTimeRanges"* nonnull %3)
  tail call void @_ZN5blink13WebTimeRanges6InvertEv(%"class.blink::WebTimeRanges"* %0)
  %37 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %5, align 8
  %38 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %6, align 8
  %39 = icmp eq %"class.blink::WebTimeRange"* %37, %38
  br i1 %39, label %48, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"class.blink::WebTimeRange"* [ %46, %40 ], [ %37, %36 ]
  %42 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %41, i64 0, i32 0
  %43 = load double, double* %42, align 8
  %44 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %41, i64 0, i32 1
  %45 = load double, double* %44, align 8
  tail call void @_ZN5blink13WebTimeRanges3AddEdd(%"class.blink::WebTimeRanges"* %0, double %43, double %45) #8
  %46 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %41, i64 1
  %47 = icmp eq %"class.blink::WebTimeRange"* %46, %38
  br i1 %47, label %48, label %40

48:                                               ; preds = %40, %36
  tail call void @_ZN5blink13WebTimeRanges6InvertEv(%"class.blink::WebTimeRanges"* %0)
  %49 = icmp eq %"class.blink::WebTimeRange"* %37, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %48
  %51 = ptrtoint %"class.blink::WebTimeRange"* %37 to i64
  %52 = bitcast %"class.blink::WebTimeRange"** %6 to i64*
  store i64 %51, i64* %52, align 8
  %53 = bitcast %"class.blink::WebTimeRange"* %37 to i8*
  tail call void @_ZdlPv(i8* %53) #9
  br label %54

54:                                               ; preds = %48, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13WebTimeRanges9UnionWithERKS0_(%"class.blink::WebTimeRanges"*, %"class.blink::WebTimeRanges"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %5, align 8
  %7 = icmp eq %"class.blink::WebTimeRange"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.blink::WebTimeRange"* [ %15, %9 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %10, i64 0, i32 0
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %10, i64 0, i32 1
  %14 = load double, double* %13, align 8
  tail call void @_ZN5blink13WebTimeRanges3AddEdd(%"class.blink::WebTimeRanges"* %0, double %12, double %14)
  %15 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %10, i64 1
  %16 = icmp eq %"class.blink::WebTimeRange"* %15, %6
  br i1 %16, label %8, label %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden double @_ZNK5blink13WebTimeRanges7NearestEdd(%"class.blink::WebTimeRanges"* nocapture readonly, double, double) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::WebTimeRanges", %"class.blink::WebTimeRanges"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %6, align 8
  %8 = icmp eq %"class.blink::WebTimeRange"* %5, %7
  br i1 %8, label %46, label %9

9:                                                ; preds = %3
  %10 = insertelement <2 x double> undef, double %2, i32 0
  %11 = shufflevector <2 x double> %10, <2 x double> undef, <2 x i32> zeroinitializer
  br label %12

12:                                               ; preds = %9, %41
  %13 = phi double [ %43, %41 ], [ 0.000000e+00, %9 ]
  %14 = phi double [ %42, %41 ], [ 0x7FF0000000000000, %9 ]
  %15 = phi %"class.blink::WebTimeRange"* [ %44, %41 ], [ %5, %9 ]
  %16 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %15, i64 0, i32 0
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %15, i64 0, i32 1
  %19 = load double, double* %18, align 8
  %20 = fcmp ugt double %17, %1
  %21 = fcmp ult double %19, %1
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %46

23:                                               ; preds = %12
  %24 = fcmp ogt double %17, %1
  %25 = fsub double %17, %1
  %26 = fsub double %1, %19
  %27 = select i1 %24, double %25, double %26
  %28 = select i1 %24, double %17, double %19
  %29 = fcmp olt double %27, %14
  br i1 %29, label %40, label %30

30:                                               ; preds = %23
  %31 = fcmp oeq double %27, %14
  br i1 %31, label %32, label %41

32:                                               ; preds = %30
  %33 = insertelement <2 x double> undef, double %28, i32 0
  %34 = insertelement <2 x double> %33, double %13, i32 1
  %35 = fsub <2 x double> %11, %34
  %36 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %35)
  %37 = extractelement <2 x double> %36, i32 0
  %38 = extractelement <2 x double> %36, i32 1
  %39 = fcmp olt double %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %32, %23
  br label %41

41:                                               ; preds = %40, %32, %30
  %42 = phi double [ %14, %30 ], [ %14, %32 ], [ %27, %40 ]
  %43 = phi double [ %13, %30 ], [ %13, %32 ], [ %28, %40 ]
  %44 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %15, i64 1
  %45 = icmp eq %"class.blink::WebTimeRange"* %44, %7
  br i1 %45, label %46, label %12

46:                                               ; preds = %12, %41, %3
  %47 = phi double [ 0.000000e+00, %3 ], [ %43, %41 ], [ %1, %12 ]
  ret double %47
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebTimeRange"* @_ZNSt3__16vectorIN5blink12WebTimeRangeENS_9allocatorIS2_EEE6insertENS_11__wrap_iterIPKS2_EERS7_(%"class.std::__1::vector"*, %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.blink::WebTimeRange"* %1 to i64
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %8, align 8
  %10 = icmp ult %"class.blink::WebTimeRange"* %7, %9
  %11 = ptrtoint %"class.blink::WebTimeRange"* %7 to i64
  %12 = ptrtoint %"class.blink::WebTimeRange"* %9 to i64
  br i1 %10, label %13, label %97

13:                                               ; preds = %3
  %14 = icmp eq %"class.blink::WebTimeRange"* %7, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %13
  %16 = bitcast %"class.blink::WebTimeRange"* %1 to i8*
  %17 = bitcast %"class.blink::WebTimeRange"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %1, i64 1
  %19 = ptrtoint %"class.blink::WebTimeRange"* %18 to i64
  %20 = bitcast %"class.blink::WebTimeRange"** %6 to i64*
  store i64 %19, i64* %20, align 8
  br label %235

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %1, i64 1
  %23 = ptrtoint %"class.blink::WebTimeRange"* %22 to i64
  %24 = sub i64 %11, %23
  %25 = ashr exact i64 %24, 4
  %26 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %1, i64 %25
  %27 = bitcast %"class.blink::WebTimeRange"** %6 to i64*
  %28 = icmp ult %"class.blink::WebTimeRange"* %26, %7
  br i1 %28, label %29, label %58

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %7, i64 %30, i32 0
  %32 = bitcast double* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 4
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %29, %40
  %41 = phi %"class.blink::WebTimeRange"* [ %47, %40 ], [ %7, %29 ]
  %42 = phi %"class.blink::WebTimeRange"* [ %46, %40 ], [ %26, %29 ]
  %43 = phi i64 [ %48, %40 ], [ %38, %29 ]
  %44 = bitcast %"class.blink::WebTimeRange"* %41 to i8*
  %45 = bitcast %"class.blink::WebTimeRange"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false) #8
  %46 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %42, i64 1
  %47 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %41, i64 1
  %48 = add i64 %43, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %40, !llvm.loop !2

50:                                               ; preds = %40, %29
  %51 = phi %"class.blink::WebTimeRange"* [ %7, %29 ], [ %47, %40 ]
  %52 = phi %"class.blink::WebTimeRange"* [ %26, %29 ], [ %46, %40 ]
  %53 = phi %"class.blink::WebTimeRange"* [ undef, %29 ], [ %47, %40 ]
  %54 = icmp ult i8* %34, inttoptr (i64 48 to i8*)
  br i1 %54, label %55, label %66

55:                                               ; preds = %66, %50
  %56 = phi %"class.blink::WebTimeRange"* [ %53, %50 ], [ %84, %66 ]
  %57 = ptrtoint %"class.blink::WebTimeRange"* %56 to i64
  br label %58

58:                                               ; preds = %55, %21
  %59 = phi i64 [ %57, %55 ], [ %11, %21 ]
  store i64 %59, i64* %27, align 8
  %60 = icmp eq i64 %24, 0
  br i1 %60, label %86, label %61

61:                                               ; preds = %58
  %62 = sub nsw i64 0, %25
  %63 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %7, i64 %62
  %64 = bitcast %"class.blink::WebTimeRange"* %63 to i8*
  %65 = bitcast %"class.blink::WebTimeRange"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %24, i1 false) #8
  br label %86

66:                                               ; preds = %50, %66
  %67 = phi %"class.blink::WebTimeRange"* [ %84, %66 ], [ %51, %50 ]
  %68 = phi %"class.blink::WebTimeRange"* [ %83, %66 ], [ %52, %50 ]
  %69 = bitcast %"class.blink::WebTimeRange"* %67 to i8*
  %70 = bitcast %"class.blink::WebTimeRange"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #8
  %71 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %68, i64 1
  %72 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %67, i64 1
  %73 = bitcast %"class.blink::WebTimeRange"* %72 to i8*
  %74 = bitcast %"class.blink::WebTimeRange"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #8
  %75 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %68, i64 2
  %76 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %67, i64 2
  %77 = bitcast %"class.blink::WebTimeRange"* %76 to i8*
  %78 = bitcast %"class.blink::WebTimeRange"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #8
  %79 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %68, i64 3
  %80 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %67, i64 3
  %81 = bitcast %"class.blink::WebTimeRange"* %80 to i8*
  %82 = bitcast %"class.blink::WebTimeRange"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false) #8
  %83 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %68, i64 4
  %84 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %67, i64 4
  %85 = icmp ult %"class.blink::WebTimeRange"* %83, %7
  br i1 %85, label %66, label %55

86:                                               ; preds = %58, %61
  %87 = icmp ugt %"class.blink::WebTimeRange"* %1, %2
  br i1 %87, label %93, label %88

88:                                               ; preds = %86
  %89 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %6, align 8
  %90 = icmp ugt %"class.blink::WebTimeRange"* %89, %2
  %91 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %2, i64 1
  %92 = select i1 %90, %"class.blink::WebTimeRange"* %91, %"class.blink::WebTimeRange"* %2
  br label %93

93:                                               ; preds = %88, %86
  %94 = phi %"class.blink::WebTimeRange"* [ %2, %86 ], [ %92, %88 ]
  %95 = bitcast %"class.blink::WebTimeRange"* %1 to i8*
  %96 = bitcast %"class.blink::WebTimeRange"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false)
  br label %235

97:                                               ; preds = %3
  %98 = bitcast %"class.blink::WebTimeRange"** %6 to i64*
  %99 = bitcast %"class.std::__1::vector"* %0 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %11, %100
  %102 = ashr exact i64 %101, 4
  %103 = add nsw i64 %102, 1
  %104 = icmp ugt i64 %103, 1152921504606846975
  br i1 %104, label %105, label %107

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %106) #10
  unreachable

107:                                              ; preds = %97
  %108 = bitcast %"class.blink::WebTimeRange"** %8 to i64*
  %109 = sub i64 %12, %100
  %110 = ashr exact i64 %109, 4
  %111 = icmp ult i64 %110, 576460752303423487
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = sub i64 %4, %100
  %114 = ashr exact i64 %113, 4
  br label %125

115:                                              ; preds = %107
  %116 = ashr exact i64 %109, 3
  %117 = icmp ult i64 %116, %103
  %118 = select i1 %117, i64 %103, i64 %116
  %119 = sub i64 %4, %100
  %120 = ashr exact i64 %119, 4
  %121 = icmp eq i64 %118, 0
  br i1 %121, label %131, label %122

122:                                              ; preds = %115
  %123 = icmp ugt i64 %118, 1152921504606846975
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  tail call void @abort() #10
  unreachable

125:                                              ; preds = %112, %122
  %126 = phi i64 [ 1152921504606846975, %112 ], [ %118, %122 ]
  %127 = phi i64 [ %114, %112 ], [ %120, %122 ]
  %128 = shl i64 %126, 4
  %129 = tail call i8* @_Znwm(i64 %128) #9
  %130 = bitcast i8* %129 to %"class.blink::WebTimeRange"*
  br label %131

131:                                              ; preds = %115, %125
  %132 = phi i64 [ %127, %125 ], [ %120, %115 ]
  %133 = phi i64 [ %126, %125 ], [ 0, %115 ]
  %134 = phi i8* [ %129, %125 ], [ null, %115 ]
  %135 = phi %"class.blink::WebTimeRange"* [ %130, %125 ], [ null, %115 ]
  %136 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %135, i64 %132
  %137 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %135, i64 %133
  %138 = ptrtoint %"class.blink::WebTimeRange"* %137 to i64
  %139 = icmp eq i64 %132, %133
  %140 = bitcast %"class.blink::WebTimeRange"* %136 to i8*
  br i1 %139, label %141, label %165

141:                                              ; preds = %131
  %142 = icmp sgt i64 %132, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %141
  %144 = add nuw nsw i64 %132, 1
  %145 = sdiv i64 %144, -2
  %146 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %136, i64 %145
  %147 = bitcast %"class.blink::WebTimeRange"* %146 to i8*
  br label %165

148:                                              ; preds = %141
  %149 = shl nsw i64 %132, 1
  %150 = icmp eq i64 %132, 0
  %151 = select i1 %150, i64 1, i64 %149
  %152 = icmp ugt i64 %151, 1152921504606846975
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  tail call void @abort() #10
  unreachable

154:                                              ; preds = %148
  %155 = lshr i64 %151, 2
  %156 = shl i64 %151, 4
  %157 = tail call i8* @_Znwm(i64 %156) #9
  %158 = bitcast i8* %157 to %"class.blink::WebTimeRange"*
  %159 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %158, i64 %155
  %160 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %158, i64 %151
  %161 = ptrtoint %"class.blink::WebTimeRange"* %160 to i64
  %162 = icmp eq %"class.blink::WebTimeRange"* %135, null
  %163 = bitcast %"class.blink::WebTimeRange"* %159 to i8*
  br i1 %162, label %165, label %164

164:                                              ; preds = %154
  tail call void @_ZdlPv(i8* %134) #9
  br label %165

165:                                              ; preds = %131, %143, %154, %164
  %166 = phi %"class.blink::WebTimeRange"* [ %146, %143 ], [ %159, %154 ], [ %159, %164 ], [ %136, %131 ]
  %167 = phi i64 [ %138, %143 ], [ %161, %154 ], [ %161, %164 ], [ %138, %131 ]
  %168 = phi i8* [ %147, %143 ], [ %163, %154 ], [ %163, %164 ], [ %140, %131 ]
  %169 = bitcast %"class.blink::WebTimeRange"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #8
  %170 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %166, i64 1
  %171 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %5, align 8
  %172 = ptrtoint %"class.blink::WebTimeRange"* %171 to i64
  %173 = sub i64 %4, %172
  %174 = ashr exact i64 %173, 4
  %175 = sub nsw i64 0, %174
  %176 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %166, i64 %175
  %177 = ptrtoint %"class.blink::WebTimeRange"* %176 to i64
  %178 = icmp sgt i64 %173, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %165
  %180 = bitcast %"class.blink::WebTimeRange"* %176 to i8*
  %181 = bitcast %"class.blink::WebTimeRange"* %171 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 %173, i1 false) #8
  br label %182

182:                                              ; preds = %179, %165
  %183 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %6, align 8
  %184 = icmp eq %"class.blink::WebTimeRange"* %183, %1
  br i1 %184, label %228, label %185

185:                                              ; preds = %182
  %186 = getelementptr %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %183, i64 -1, i32 0
  %187 = ptrtoint double* %186 to i64
  %188 = sub i64 %187, %4
  %189 = lshr i64 %188, 4
  %190 = add nuw nsw i64 %189, 1
  %191 = and i64 %190, 3
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %185, %193
  %194 = phi %"class.blink::WebTimeRange"* [ %200, %193 ], [ %170, %185 ]
  %195 = phi %"class.blink::WebTimeRange"* [ %199, %193 ], [ %1, %185 ]
  %196 = phi i64 [ %201, %193 ], [ %191, %185 ]
  %197 = bitcast %"class.blink::WebTimeRange"* %194 to i8*
  %198 = bitcast %"class.blink::WebTimeRange"* %195 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 16, i1 false) #8
  %199 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %195, i64 1
  %200 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %194, i64 1
  %201 = add i64 %196, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %193, !llvm.loop !4

203:                                              ; preds = %193, %185
  %204 = phi %"class.blink::WebTimeRange"* [ undef, %185 ], [ %200, %193 ]
  %205 = phi %"class.blink::WebTimeRange"* [ %170, %185 ], [ %200, %193 ]
  %206 = phi %"class.blink::WebTimeRange"* [ %1, %185 ], [ %199, %193 ]
  %207 = icmp ult i64 %188, 48
  br i1 %207, label %228, label %208

208:                                              ; preds = %203, %208
  %209 = phi %"class.blink::WebTimeRange"* [ %226, %208 ], [ %205, %203 ]
  %210 = phi %"class.blink::WebTimeRange"* [ %225, %208 ], [ %206, %203 ]
  %211 = bitcast %"class.blink::WebTimeRange"* %209 to i8*
  %212 = bitcast %"class.blink::WebTimeRange"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 16, i1 false) #8
  %213 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %210, i64 1
  %214 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %209, i64 1
  %215 = bitcast %"class.blink::WebTimeRange"* %214 to i8*
  %216 = bitcast %"class.blink::WebTimeRange"* %213 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 16, i1 false) #8
  %217 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %210, i64 2
  %218 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %209, i64 2
  %219 = bitcast %"class.blink::WebTimeRange"* %218 to i8*
  %220 = bitcast %"class.blink::WebTimeRange"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 16, i1 false) #8
  %221 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %210, i64 3
  %222 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %209, i64 3
  %223 = bitcast %"class.blink::WebTimeRange"* %222 to i8*
  %224 = bitcast %"class.blink::WebTimeRange"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 16, i1 false) #8
  %225 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %210, i64 4
  %226 = getelementptr inbounds %"class.blink::WebTimeRange", %"class.blink::WebTimeRange"* %209, i64 4
  %227 = icmp eq %"class.blink::WebTimeRange"* %225, %183
  br i1 %227, label %228, label %208

228:                                              ; preds = %203, %208, %182
  %229 = phi %"class.blink::WebTimeRange"* [ %170, %182 ], [ %204, %203 ], [ %226, %208 ]
  %230 = ptrtoint %"class.blink::WebTimeRange"* %229 to i64
  %231 = load %"class.blink::WebTimeRange"*, %"class.blink::WebTimeRange"** %5, align 8
  store i64 %177, i64* %99, align 8
  store i64 %230, i64* %98, align 8
  store i64 %167, i64* %108, align 8
  %232 = icmp eq %"class.blink::WebTimeRange"* %231, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %228
  %234 = bitcast %"class.blink::WebTimeRange"* %231 to i8*
  tail call void @_ZdlPv(i8* %234) #9
  br label %235

235:                                              ; preds = %233, %228, %15, %93
  %236 = phi %"class.blink::WebTimeRange"* [ %1, %15 ], [ %1, %93 ], [ %166, %228 ], [ %166, %233 ]
  ret %"class.blink::WebTimeRange"* %236
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
