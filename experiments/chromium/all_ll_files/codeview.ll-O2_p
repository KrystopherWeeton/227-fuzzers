; ModuleID = '../../third_party/nasm/output/codeview.c'
source_filename = "../../third_party/nasm/output/codeview.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.cv8_state = type { i32, i32, i32, %struct.source_file*, %struct.source_file**, i8*, %struct.source_file*, %struct.hash_table, i32, i32, i32, %struct.SAA*, %struct.cv8_symbol*, [4 x i32], i32, i32, %struct.anon }
%struct.source_file = type { i8*, i8*, i32, %struct.source_file*, i32, i32, %struct.SAA*, i32, [16 x i8] }
%struct.hash_table = type { %struct.hash_node*, i64, i64, i64 }
%struct.hash_node = type { i64, i8*, i64, i8* }
%struct.SAA = type { i64, i64, i64, i64, i64, i64, i8**, i64, i64, i8**, i64, i64, i8** }
%struct.cv8_symbol = type { i32, i8*, i32, i16, i32, i32, i32 }
%struct.anon = type { i8*, i64 }
%struct.coff_Section = type { %struct.SAA*, i32, i32, i32, %struct.coff_Reloc*, %struct.coff_Reloc**, i32, i32, i32, i8*, i32, i32, i32, i64 }
%struct.coff_Reloc = type { %struct.coff_Reloc*, i32, i32, i32, i16 }
%struct.MD5Context = type { [4 x i32], [2 x i32], [64 x i8] }
%struct.hash_insert = type { %struct.hash_table*, %struct.hash_node*, %struct.hash_node }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [12 x i8] c"Codeview 8+\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"cv8\00", align 1
@df_cv8 = hidden local_unnamed_addr constant %struct.dfmt { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), void ()* @cv8_init, void (i8*, i32, i32)* @cv8_linenum, void (i8*, i32, i64, i32, i8*)* @cv8_deflabel, void (i8*, i8*)* @null_debug_directive, void (i32)* @cv8_typevalue, void (i32, i8*)* @cv8_output, void ()* @cv8_cleanup, %struct.pragma_facility* null }, align 8
@cv8_state = common hidden global %struct.cv8_state zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c".debug$S\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c".debug$T\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"unable to hash file %s. Debug information may be unavailable.\00", align 1
@coff_nsects = external local_unnamed_addr global i32, align 4
@coff_sects = external local_unnamed_addr global %struct.coff_Section**, align 8
@.str.5 = private unnamed_addr constant [6 x i8] c".text\00", align 1
@outname = external local_unnamed_addr global i8*, align 8
@.str.6 = private unnamed_addr constant [41 x i8] c"../../third_party/nasm/output/codeview.c\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"cv8_state.source_files != NULL\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"cv8_state.num_files > 0\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"cv8_state.total_filename_len > 0\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"file->filetbl_off > 0\00", align 1
@win64 = external local_unnamed_addr global i8, align 1
@coff_syms = external local_unnamed_addr global %struct.SAA*, align 8
@coff_nsyms = external local_unnamed_addr global i32, align 4
@coff_strs = external local_unnamed_addr global %struct.SAA*, align 8
@.str.11 = private unnamed_addr constant [49 x i8] c"codeview: relocation for unregistered symbol: %s\00", align 1
@write_symbolinfo_table.creator_str = internal constant [33 x i8] c"The Netwide Assembler 2.15.03rc6\00", align 16
@.str.12 = private unnamed_addr constant [28 x i8] c"cv8_state.outfile.namebytes\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"out_len == obj_length\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"out_len == sym_length\00", align 1
@win32 = external local_unnamed_addr global i8, align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"neither win32 nor win64 are set!\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"unknown symbol type\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal void @cv8_init() #0 {
  %1 = tail call i32 @coff_make_section(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 1108344896) #11
  store i32 %1, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 0), align 8
  %2 = tail call i32 @coff_make_section(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32 1108344896) #11
  store i32 %2, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 1), align 4
  store i32 0, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 2), align 8
  store %struct.source_file* null, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), align 8
  store %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), %struct.source_file*** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 4), align 8
  store i32 0, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 8), align 8
  store i32 0, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 9), align 4
  store i32 0, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 10), align 8
  %3 = tail call %struct.SAA* @saa_init(i64 40) #11
  store %struct.SAA* %3, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  store %struct.cv8_symbol* null, %struct.cv8_symbol** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 12), align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cv8_linenum(i8*, i32, i32) #0 {
  %4 = alloca %struct.MD5Context, align 4
  %5 = alloca %struct.hash_insert, align 8
  %6 = bitcast %struct.hash_insert* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false) #11
  %7 = load i8*, i8** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 5), align 8
  %8 = icmp eq i8* %7, %0
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %3
  %10 = load %struct.source_file*, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 6), align 8
  br label %65

11:                                               ; preds = %3
  store i8* %0, i8** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 5), align 8
  %12 = call i8** @hash_find(%struct.hash_table* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 7), i8* %0, %struct.hash_insert* nonnull %5) #11
  %13 = icmp eq i8** %12, null
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %11
  %15 = load i8*, i8** %12, align 8
  br label %62

16:                                               ; preds = %11
  %17 = call noalias i8* @nasm_realpath(i8* %0) #11
  %18 = call noalias i8* @nasm_zalloc(i64 72) #12
  %19 = bitcast i8* %18 to i8**
  store i8* %0, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i8**
  store i8* %17, i8** %21, align 8
  %22 = call i64 @strlen(i8* %17) #13
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = call %struct.SAA* @saa_init(i64 8) #11
  %27 = getelementptr inbounds i8, i8* %18, i64 40
  %28 = bitcast i8* %27 to %struct.SAA**
  store %struct.SAA* %26, %struct.SAA** %28, align 8
  %29 = load i8**, i8*** bitcast (%struct.source_file*** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 4) to i8***), align 8
  store i8* %18, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %18, i64 24
  store i8* %30, i8** bitcast (%struct.source_file*** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 4) to i8**), align 8
  %31 = getelementptr inbounds i8, i8* %18, i64 52
  %32 = bitcast %struct.MD5Context* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -86, i64 88, i1 false) #11
  %33 = call %struct._IO_FILE* @pp_input_fopen(i8* %17, i32 0) #11
  %34 = icmp eq %struct._IO_FILE* %33, null
  br i1 %34, label %53, label %35

35:                                               ; preds = %16
  %36 = call noalias i8* @nasm_zalloc(i64 8192) #12
  call void @MD5Init(%struct.MD5Context* nonnull %4) #11
  %37 = call i32 @feof(%struct._IO_FILE* nonnull %33) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %35, %45
  %40 = call i64 @fread(i8* %36, i64 1, i64 8192, %struct._IO_FILE* nonnull %33) #11
  %41 = call i32 @ferror(%struct._IO_FILE* nonnull %33) #11
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = icmp eq i64 %40, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = trunc i64 %40 to i32
  call void @MD5Update(%struct.MD5Context* nonnull %4, i8* %36, i32 %46) #11
  %47 = call i32 @feof(%struct._IO_FILE* nonnull %33) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %39, label %49

49:                                               ; preds = %45, %43, %35
  call void @MD5Final(i8* %31, %struct.MD5Context* nonnull %4) #11
  call void @nasm_free(i8* %36) #11
  %50 = call i32 @fclose(%struct._IO_FILE* nonnull %33) #11
  br label %54

51:                                               ; preds = %39
  call void @nasm_free(i8* %36) #11
  %52 = call i32 @fclose(%struct._IO_FILE* nonnull %33) #11
  br label %53

53:                                               ; preds = %51, %16
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i8* %17) #11
  br label %54

54:                                               ; preds = %53, %49
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %32) #11
  %55 = call i8** @hash_add(%struct.hash_insert* nonnull %5, i8* %0, i8* %18) #11
  %56 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 8), align 8
  %57 = add i32 %56, 1
  store i32 %57, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 8), align 8
  %58 = load i32, i32* %25, align 8
  %59 = add i32 %58, 1
  %60 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 9), align 4
  %61 = add i32 %59, %60
  store i32 %61, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 9), align 4
  br label %62

62:                                               ; preds = %54, %14
  %63 = phi i8* [ %15, %14 ], [ %18, %54 ]
  %64 = bitcast i8* %63 to %struct.source_file*
  store i8* %63, i8** bitcast (%struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 6) to i8**), align 8
  br label %65

65:                                               ; preds = %9, %62
  %66 = phi %struct.source_file* [ %10, %9 ], [ %64, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  %67 = load i32, i32* @coff_nsects, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %102

69:                                               ; preds = %65
  %70 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %71 = sext i32 %67 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp eq i64 %81, %71
  br i1 %73, label %102, label %74

74:                                               ; preds = %72, %69
  %75 = phi i64 [ 0, %69 ], [ %81, %72 ]
  %76 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %70, i64 %75
  %77 = load %struct.coff_Section*, %struct.coff_Section** %76, align 8
  %78 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %77, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, %2
  %81 = add nuw nsw i64 %75, 1
  br i1 %80, label %82, label %72

82:                                               ; preds = %74
  %83 = icmp eq %struct.coff_Section* %77, null
  br i1 %83, label %102, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %77, i64 0, i32 6
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 536870912
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %102, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.source_file, %struct.source_file* %66, i64 0, i32 6
  %91 = load %struct.SAA*, %struct.SAA** %90, align 8
  %92 = call i8* @saa_wstruct(%struct.SAA* %91) #11
  %93 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 2), align 8
  %94 = bitcast i8* %92 to i32*
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %92, i64 4
  %96 = bitcast i8* %95 to i32*
  store i32 %1, i32* %96, align 4
  %97 = getelementptr inbounds %struct.source_file, %struct.source_file* %66, i64 0, i32 7
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, 1
  store i32 %99, i32* %97, align 8
  %100 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 10), align 8
  %101 = add i32 %100, 1
  store i32 %101, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 10), align 8
  br label %102

102:                                              ; preds = %72, %65, %84, %82, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cv8_deflabel(i8*, i32, i64, i32, i8* nocapture readnone) #0 {
  %6 = load i32, i32* @coff_nsects, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %75

8:                                                ; preds = %5
  %9 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %10 = sext i32 %6 to i64
  br label %13

11:                                               ; preds = %13
  %12 = icmp eq i64 %20, %10
  br i1 %12, label %75, label %13

13:                                               ; preds = %11, %8
  %14 = phi i64 [ 0, %8 ], [ %20, %11 ]
  %15 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %9, i64 %14
  %16 = load %struct.coff_Section*, %struct.coff_Section** %15, align 8
  %17 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, %1
  %20 = add nuw nsw i64 %14, 1
  br i1 %19, label %21, label %11

21:                                               ; preds = %13
  %22 = icmp eq %struct.coff_Section* %16, null
  br i1 %22, label %75, label %23

23:                                               ; preds = %21
  %24 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  %25 = tail call i8* @saa_wstruct(%struct.SAA* %24) #11
  %26 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %16, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 536870912
  %29 = icmp eq i32 %28, 0
  %30 = icmp ne i32 %3, 0
  %31 = select i1 %30, i32 3, i32 2
  %32 = zext i1 %30 to i32
  %33 = select i1 %29, i32 %31, i32 %32
  %34 = select i1 %29, i32 %31, i32 %32
  %35 = bitcast i8* %25 to i32*
  store i32 %33, i32* %35, align 8
  %36 = zext i32 %34 to i64
  %37 = getelementptr inbounds %struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 13, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 15), align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 15), align 4
  %42 = trunc i32 %1 to i16
  %43 = getelementptr inbounds i8, i8* %25, i64 20
  %44 = bitcast i8* %43 to i16*
  store i16 %42, i16* %44, align 4
  %45 = trunc i64 %2 to i32
  %46 = getelementptr inbounds i8, i8* %25, i64 16
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %25, i64 32
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %25, i64 24
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %25, i64 28
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 4
  %54 = tail call noalias i8* @nasm_strdup(i8* %0) #11
  %55 = getelementptr inbounds i8, i8* %25, i64 8
  %56 = bitcast i8* %55 to i8**
  store i8* %54, i8** %56, align 8
  %57 = tail call i64 @strlen(i8* %54) #13
  %58 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 14), align 8
  %59 = trunc i64 %57 to i32
  %60 = add i32 %59, 1
  %61 = add i32 %60, %58
  store i32 %61, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 14), align 8
  %62 = load %struct.cv8_symbol*, %struct.cv8_symbol** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 12), align 8
  %63 = icmp eq %struct.cv8_symbol* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %23
  %65 = getelementptr inbounds %struct.cv8_symbol, %struct.cv8_symbol* %62, i64 0, i32 3
  %66 = load i16, i16* %65, align 4
  %67 = zext i16 %66 to i32
  %68 = icmp eq i32 %67, %1
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.cv8_symbol, %struct.cv8_symbol* %62, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = sub i32 %45, %71
  %73 = getelementptr inbounds %struct.cv8_symbol, %struct.cv8_symbol* %62, i64 0, i32 4
  store i32 %72, i32* %73, align 8
  br label %74

74:                                               ; preds = %23, %69, %64
  store i8* %25, i8** bitcast (%struct.cv8_symbol** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 12) to i8**), align 8
  br label %75

75:                                               ; preds = %11, %5, %21, %74
  ret void
}

declare void @null_debug_directive(i8*, i8*) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @cv8_typevalue(i32) #2 {
  %2 = load %struct.cv8_symbol*, %struct.cv8_symbol** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 12), align 8
  %3 = icmp eq %struct.cv8_symbol* %2, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.cv8_symbol, %struct.cv8_symbol* %2, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = and i32 %0, 248
  %10 = add nsw i32 %9, -16
  %11 = lshr exact i32 %10, 3
  switch i32 %11, label %21 [
    i32 0, label %12
    i32 1, label %13
    i32 2, label %14
    i32 4, label %15
    i32 3, label %16
    i32 5, label %17
    i32 6, label %18
    i32 7, label %19
    i32 8, label %20
  ]

12:                                               ; preds = %8
  store i32 32, i32* %5, align 8
  br label %21

13:                                               ; preds = %8
  store i32 33, i32* %5, align 8
  br label %21

14:                                               ; preds = %8
  store i32 34, i32* %5, align 8
  br label %21

15:                                               ; preds = %8
  store i32 35, i32* %5, align 8
  br label %21

16:                                               ; preds = %8
  store i32 64, i32* %5, align 8
  br label %21

17:                                               ; preds = %8
  store i32 66, i32* %5, align 8
  br label %21

18:                                               ; preds = %8
  store i32 67, i32* %5, align 8
  br label %21

19:                                               ; preds = %8
  store i32 68, i32* %5, align 8
  br label %21

20:                                               ; preds = %8
  store i32 69, i32* %5, align 8
  br label %21

21:                                               ; preds = %4, %1, %8, %20, %19, %18, %17, %16, %15, %14, %13, %12
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @cv8_output(i32, i8* nocapture readonly) #3 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to %struct.coff_Section**
  %5 = load %struct.coff_Section*, %struct.coff_Section** %4, align 8
  %6 = icmp eq %struct.coff_Section* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %5, i64 0, i32 9
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @strncmp(i8* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #13
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %1, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 2), align 8
  %19 = trunc i64 %17 to i32
  %20 = add i32 %18, %19
  store i32 %20, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 2), align 8
  br label %21

21:                                               ; preds = %11, %7, %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cv8_cleanup() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %6 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 0), align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %5, i64 %7
  %9 = load %struct.coff_Section*, %struct.coff_Section** %8, align 8
  %10 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 1), align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %5, i64 %11
  %13 = load %struct.coff_Section*, %struct.coff_Section** %12, align 8
  %14 = load i8*, i8** @outname, align 8
  %15 = tail call noalias i8* @nasm_realpath(i8* %14) #11
  store i8* %15, i8** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 0), align 8
  %16 = tail call i64 @strlen(i8* %15) #13
  %17 = add i64 %16, 1
  store i64 %17, i64* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 1), align 8
  %18 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %9, i64 0, i32 0
  %19 = load %struct.SAA*, %struct.SAA** %18, align 8
  tail call void @saa_write32(%struct.SAA* %19, i32 4) #11
  %20 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %9, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, 4
  store i32 %22, i32* %20, align 8
  %23 = load %struct.source_file*, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), align 8
  %24 = icmp eq %struct.source_file* %23, null
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %0
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 513, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0)) #14
  unreachable

26:                                               ; preds = %0
  %27 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 8), align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %26
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 514, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0)) #14
  unreachable

30:                                               ; preds = %26
  %31 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 9), align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %30
  tail call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 515, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0)) #14
  unreachable

34:                                               ; preds = %30
  %35 = add i32 %31, 1
  %36 = load %struct.SAA*, %struct.SAA** %18, align 8
  tail call void @saa_write32(%struct.SAA* %36, i32 243) #11
  %37 = load i32, i32* %20, align 8
  %38 = add i32 %37, 4
  store i32 %38, i32* %20, align 8
  %39 = load %struct.SAA*, %struct.SAA** %18, align 8
  tail call void @saa_write32(%struct.SAA* %39, i32 %35) #11
  %40 = load i32, i32* %20, align 8
  %41 = add i32 %40, 4
  store i32 %41, i32* %20, align 8
  %42 = load %struct.SAA*, %struct.SAA** %18, align 8
  tail call void @saa_write8(%struct.SAA* %42, i8 zeroext 0) #11
  %43 = load i32, i32* %20, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %20, align 8
  %45 = load %struct.source_file*, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), align 8
  %46 = icmp eq %struct.source_file* %45, null
  br i1 %46, label %66, label %47

47:                                               ; preds = %34, %47
  %48 = phi %struct.source_file* [ %64, %47 ], [ %45, %34 ]
  %49 = phi i32 [ %62, %47 ], [ 1, %34 ]
  %50 = getelementptr inbounds %struct.source_file, %struct.source_file* %48, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.source_file, %struct.source_file* %48, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  %55 = zext i32 %54 to i64
  %56 = load %struct.SAA*, %struct.SAA** %18, align 8
  tail call void @saa_wbytes(%struct.SAA* %56, i8* %51, i64 %55) #11
  %57 = load i32, i32* %20, align 8
  %58 = add i32 %57, %54
  store i32 %58, i32* %20, align 8
  %59 = getelementptr inbounds %struct.source_file, %struct.source_file* %48, i64 0, i32 4
  store i32 %49, i32* %59, align 8
  %60 = load i32, i32* %52, align 8
  %61 = add i32 %49, 1
  %62 = add i32 %61, %60
  %63 = getelementptr inbounds %struct.source_file, %struct.source_file* %48, i64 0, i32 3
  %64 = load %struct.source_file*, %struct.source_file** %63, align 8
  %65 = icmp eq %struct.source_file* %64, null
  br i1 %65, label %66, label %47

66:                                               ; preds = %47, %34
  %67 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #11
  store i32 0, i32* %4, align 4
  %68 = load %struct.SAA*, %struct.SAA** %18, align 8
  %69 = getelementptr inbounds %struct.SAA, %struct.SAA* %68, i64 0, i32 8
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %66
  %74 = trunc i64 %71 to i32
  %75 = sub nuw nsw i32 4, %74
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = zext i32 %75 to i64
  call void @saa_wbytes(%struct.SAA* %68, i8* nonnull %67, i64 %78) #11
  %79 = load i32, i32* %20, align 8
  %80 = add i32 %79, %75
  store i32 %80, i32* %20, align 8
  %81 = load %struct.SAA*, %struct.SAA** %18, align 8
  br label %82

82:                                               ; preds = %77, %73, %66
  %83 = phi %struct.SAA* [ %68, %66 ], [ %68, %73 ], [ %81, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #11
  %84 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 8), align 8
  %85 = mul i32 %84, 24
  call void @saa_write32(%struct.SAA* %83, i32 244) #11
  %86 = load i32, i32* %20, align 8
  %87 = add i32 %86, 4
  store i32 %87, i32* %20, align 8
  %88 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %88, i32 %85) #11
  %89 = load i32, i32* %20, align 8
  %90 = add i32 %89, 4
  store i32 %90, i32* %20, align 8
  %91 = load %struct.source_file*, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), align 8
  %92 = icmp eq %struct.source_file* %91, null
  br i1 %92, label %119, label %93

93:                                               ; preds = %82, %100
  %94 = phi %struct.source_file* [ %117, %100 ], [ %91, %82 ]
  %95 = phi i32 [ %115, %100 ], [ 0, %82 ]
  %96 = getelementptr inbounds %struct.source_file, %struct.source_file* %94, i64 0, i32 4
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100, !prof !3

99:                                               ; preds = %93
  call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 545, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0)) #14
  unreachable

100:                                              ; preds = %93
  %101 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %101, i32 %97) #11
  %102 = load i32, i32* %20, align 8
  %103 = add i32 %102, 4
  store i32 %103, i32* %20, align 8
  %104 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %104, i16 zeroext 272) #11
  %105 = load i32, i32* %20, align 8
  %106 = add i32 %105, 2
  store i32 %106, i32* %20, align 8
  %107 = getelementptr inbounds %struct.source_file, %struct.source_file* %94, i64 0, i32 8, i64 0
  %108 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_wbytes(%struct.SAA* %108, i8* %107, i64 16) #11
  %109 = load i32, i32* %20, align 8
  %110 = add i32 %109, 16
  store i32 %110, i32* %20, align 8
  %111 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %111, i16 zeroext 0) #11
  %112 = load i32, i32* %20, align 8
  %113 = add i32 %112, 2
  store i32 %113, i32* %20, align 8
  %114 = getelementptr inbounds %struct.source_file, %struct.source_file* %94, i64 0, i32 5
  store i32 %95, i32* %114, align 4
  %115 = add i32 %95, 24
  %116 = getelementptr inbounds %struct.source_file, %struct.source_file* %94, i64 0, i32 3
  %117 = load %struct.source_file*, %struct.source_file** %116, align 8
  %118 = icmp eq %struct.source_file* %117, null
  br i1 %118, label %119, label %93

119:                                              ; preds = %100, %82
  %120 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #11
  store i32 0, i32* %3, align 4
  %121 = load %struct.SAA*, %struct.SAA** %18, align 8
  %122 = getelementptr inbounds %struct.SAA, %struct.SAA* %121, i64 0, i32 8
  %123 = load i64, i64* %122, align 8
  %124 = and i64 %123, 3
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %119
  %127 = trunc i64 %124 to i32
  %128 = sub nuw nsw i32 4, %127
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = zext i32 %128 to i64
  call void @saa_wbytes(%struct.SAA* %121, i8* nonnull %120, i64 %131) #11
  %132 = load i32, i32* %20, align 8
  %133 = add i32 %132, %128
  store i32 %133, i32* %20, align 8
  br label %134

134:                                              ; preds = %130, %126, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #11
  %135 = load i32, i32* @coff_nsects, align 4
  %136 = icmp sgt i32 %135, 0
  br i1 %136, label %137, label %155

137:                                              ; preds = %134
  %138 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %139 = sext i32 %135 to i64
  br label %140

140:                                              ; preds = %149, %137
  %141 = phi i64 [ 0, %137 ], [ %150, %149 ]
  %142 = phi i32 [ 0, %137 ], [ %151, %149 ]
  %143 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %138, i64 %141
  %144 = load %struct.coff_Section*, %struct.coff_Section** %143, align 8
  %145 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %144, i64 0, i32 9
  %146 = load i8*, i8** %145, align 8
  %147 = call i32 @strncmp(i8* %146, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #13
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %153, label %149

149:                                              ; preds = %140
  %150 = add nuw nsw i64 %141, 1
  %151 = add nuw nsw i32 %142, 1
  %152 = icmp eq i64 %150, %139
  br i1 %152, label %155, label %140

153:                                              ; preds = %140
  %154 = trunc i64 %141 to i32
  br label %155

155:                                              ; preds = %149, %153, %134
  %156 = phi i32 [ 0, %134 ], [ %154, %153 ], [ %151, %149 ]
  %157 = icmp eq i32 %156, %135
  br i1 %157, label %236, label %158

158:                                              ; preds = %155
  %159 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %160 = zext i32 %156 to i64
  %161 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %159, i64 %160
  %162 = load %struct.coff_Section*, %struct.coff_Section** %161, align 8
  %163 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 8), align 8
  %164 = mul i32 %163, 12
  %165 = add i32 %164, 12
  %166 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 10), align 8
  %167 = shl i32 %166, 3
  %168 = add i32 %165, %167
  %169 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %169, i32 242) #11
  %170 = load i32, i32* %20, align 8
  %171 = add i32 %170, 4
  store i32 %171, i32* %20, align 8
  %172 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %172, i32 %168) #11
  %173 = load i32, i32* %20, align 8
  %174 = add i32 %173, 4
  store i32 %174, i32* %20, align 8
  %175 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %175, i32 0) #11
  %176 = load i32, i32* %20, align 8
  %177 = add i32 %176, 4
  store i32 %177, i32* %20, align 8
  %178 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %178, i16 zeroext 0) #11
  %179 = load i32, i32* %20, align 8
  %180 = add i32 %179, 2
  store i32 %180, i32* %20, align 8
  %181 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %181, i16 zeroext 0) #11
  %182 = load i32, i32* %20, align 8
  %183 = add i32 %182, 2
  store i32 %183, i32* %20, align 8
  %184 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %162, i64 0, i32 1
  %185 = load i32, i32* %184, align 8
  %186 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %186, i32 %185) #11
  %187 = load i32, i32* %20, align 8
  %188 = add i32 %187, 4
  store i32 %188, i32* %20, align 8
  call fastcc void @register_reloc(%struct.coff_Section* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 %174, i16 zeroext 11) #11
  %189 = add i32 %173, 8
  call fastcc void @register_reloc(%struct.coff_Section* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 %189, i16 zeroext 10) #11
  %190 = load %struct.source_file*, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), align 8
  %191 = icmp eq %struct.source_file* %190, null
  br i1 %191, label %236, label %192

192:                                              ; preds = %158, %232
  %193 = phi %struct.source_file* [ %234, %232 ], [ %190, %158 ]
  %194 = getelementptr inbounds %struct.source_file, %struct.source_file* %193, i64 0, i32 5
  %195 = load i32, i32* %194, align 4
  %196 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %196, i32 %195) #11
  %197 = load i32, i32* %20, align 8
  %198 = add i32 %197, 4
  store i32 %198, i32* %20, align 8
  %199 = getelementptr inbounds %struct.source_file, %struct.source_file* %193, i64 0, i32 7
  %200 = load i32, i32* %199, align 8
  %201 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %201, i32 %200) #11
  %202 = load i32, i32* %20, align 8
  %203 = add i32 %202, 4
  store i32 %203, i32* %20, align 8
  %204 = load i32, i32* %199, align 8
  %205 = shl i32 %204, 3
  %206 = add i32 %205, 12
  %207 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %207, i32 %206) #11
  %208 = load i32, i32* %20, align 8
  %209 = add i32 %208, 4
  store i32 %209, i32* %20, align 8
  %210 = getelementptr inbounds %struct.source_file, %struct.source_file* %193, i64 0, i32 6
  %211 = load %struct.SAA*, %struct.SAA** %210, align 8
  call void @saa_rewind(%struct.SAA* %211) #11
  %212 = load %struct.SAA*, %struct.SAA** %210, align 8
  %213 = call i8* @saa_rstruct(%struct.SAA* %212) #11
  %214 = icmp eq i8* %213, null
  br i1 %214, label %232, label %215

215:                                              ; preds = %192, %215
  %216 = phi i8* [ %230, %215 ], [ %213, %192 ]
  %217 = bitcast i8* %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %219, i32 %218) #11
  %220 = load i32, i32* %20, align 8
  %221 = add i32 %220, 4
  store i32 %221, i32* %20, align 8
  %222 = getelementptr inbounds i8, i8* %216, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = or i32 %224, -2147483648
  store i32 %225, i32* %223, align 4
  %226 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %226, i32 %225) #11
  %227 = load i32, i32* %20, align 8
  %228 = add i32 %227, 4
  store i32 %228, i32* %20, align 8
  %229 = load %struct.SAA*, %struct.SAA** %210, align 8
  %230 = call i8* @saa_rstruct(%struct.SAA* %229) #11
  %231 = icmp eq i8* %230, null
  br i1 %231, label %232, label %215

232:                                              ; preds = %215, %192
  %233 = getelementptr inbounds %struct.source_file, %struct.source_file* %193, i64 0, i32 3
  %234 = load %struct.source_file*, %struct.source_file** %233, align 8
  %235 = icmp eq %struct.source_file* %234, null
  br i1 %235, label %236, label %192

236:                                              ; preds = %232, %158, %155
  %237 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %237) #11
  store i32 0, i32* %2, align 4
  %238 = load %struct.SAA*, %struct.SAA** %18, align 8
  %239 = getelementptr inbounds %struct.SAA, %struct.SAA* %238, i64 0, i32 8
  %240 = load i64, i64* %239, align 8
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %236
  %244 = trunc i64 %241 to i32
  %245 = sub nuw nsw i32 4, %244
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %251, label %247

247:                                              ; preds = %243
  %248 = zext i32 %245 to i64
  call void @saa_wbytes(%struct.SAA* %238, i8* nonnull %237, i64 %248) #11
  %249 = load i32, i32* %20, align 8
  %250 = add i32 %249, %245
  store i32 %250, i32* %20, align 8
  br label %251

251:                                              ; preds = %247, %243, %236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %237) #11
  %252 = load i64, i64* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 1), align 8
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %255, !prof !3

254:                                              ; preds = %251
  call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 733, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0)) #14
  unreachable

255:                                              ; preds = %251
  %256 = trunc i64 %252 to i32
  %257 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 13, i64 0), align 8
  %258 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 13, i64 1), align 4
  %259 = add i32 %258, %257
  %260 = mul i32 %259, 7
  %261 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 13, i64 2), align 8
  %262 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 13, i64 3), align 4
  %263 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 14), align 8
  %264 = add i32 %262, %261
  %265 = mul i32 %264, 10
  %266 = add i32 %263, %260
  %267 = add i32 %266, %265
  %268 = add i32 %256, 65
  %269 = load i32, i32* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 15), align 4
  %270 = shl i32 %269, 2
  %271 = add i32 %268, %270
  %272 = add i32 %271, %267
  %273 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %273, i32 241) #11
  %274 = load i32, i32* %20, align 8
  %275 = add i32 %274, 4
  store i32 %275, i32* %20, align 8
  %276 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %276, i32 %272) #11
  %277 = load i32, i32* %20, align 8
  %278 = add i32 %277, 4
  store i32 %278, i32* %20, align 8
  %279 = load i64, i64* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 1), align 8
  %280 = trunc i64 %279 to i32
  %281 = trunc i64 %279 to i16
  %282 = add i16 %281, 6
  %283 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %283, i16 zeroext %282) #11
  %284 = load i32, i32* %20, align 8
  %285 = add i32 %284, 2
  store i32 %285, i32* %20, align 8
  %286 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %286, i16 zeroext 4353) #11
  %287 = load i32, i32* %20, align 8
  %288 = add i32 %287, 2
  store i32 %288, i32* %20, align 8
  %289 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %289, i32 0) #11
  %290 = load i32, i32* %20, align 8
  %291 = add i32 %290, 4
  store i32 %291, i32* %20, align 8
  %292 = load i8*, i8** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 0), align 8
  %293 = load i64, i64* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 1), align 8
  %294 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_wbytes(%struct.SAA* %294, i8* %292, i64 %293) #11
  %295 = load i32, i32* %20, align 8
  %296 = trunc i64 %293 to i32
  %297 = add i32 %295, %296
  store i32 %297, i32* %20, align 8
  %298 = icmp eq i32 %280, %256
  br i1 %298, label %300, label %299, !prof !2

299:                                              ; preds = %255
  call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 755, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #14
  unreachable

300:                                              ; preds = %255
  %301 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %301, i16 zeroext 55) #11
  %302 = load i32, i32* %20, align 8
  %303 = add i32 %302, 2
  store i32 %303, i32* %20, align 8
  %304 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %304, i16 zeroext 4374) #11
  %305 = load i32, i32* %20, align 8
  %306 = add i32 %305, 2
  store i32 %306, i32* %20, align 8
  %307 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %307, i32 78) #11
  %308 = load i32, i32* %20, align 8
  %309 = add i32 %308, 4
  store i32 %309, i32* %20, align 8
  %310 = load i8, i8* @win64, align 1, !range !4
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %316

312:                                              ; preds = %300
  %313 = load i8, i8* @win32, align 1, !range !4
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #14
  unreachable

316:                                              ; preds = %312, %300
  %317 = phi i16 [ 208, %300 ], [ 6, %312 ]
  %318 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %318, i16 zeroext %317) #11
  %319 = load i32, i32* %20, align 8
  %320 = add i32 %319, 2
  store i32 %320, i32* %20, align 8
  %321 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %321, i16 zeroext 0) #11
  %322 = load i32, i32* %20, align 8
  %323 = add i32 %322, 2
  store i32 %323, i32* %20, align 8
  %324 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %324, i16 zeroext 0) #11
  %325 = load i32, i32* %20, align 8
  %326 = add i32 %325, 2
  store i32 %326, i32* %20, align 8
  %327 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %327, i16 zeroext 0) #11
  %328 = load i32, i32* %20, align 8
  %329 = add i32 %328, 2
  store i32 %329, i32* %20, align 8
  %330 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %330, i16 zeroext 2) #11
  %331 = load i32, i32* %20, align 8
  %332 = add i32 %331, 2
  store i32 %332, i32* %20, align 8
  %333 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %333, i16 zeroext 15) #11
  %334 = load i32, i32* %20, align 8
  %335 = add i32 %334, 2
  store i32 %335, i32* %20, align 8
  %336 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %336, i16 zeroext 296) #11
  %337 = load i32, i32* %20, align 8
  %338 = add i32 %337, 2
  store i32 %338, i32* %20, align 8
  %339 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_wbytes(%struct.SAA* %339, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @write_symbolinfo_table.creator_str, i64 0, i64 0), i64 33) #11
  %340 = load i32, i32* %20, align 8
  %341 = add i32 %340, 33
  store i32 %341, i32* %20, align 8
  %342 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %342, i16 zeroext 0) #11
  %343 = load i32, i32* %20, align 8
  %344 = add i32 %343, 2
  store i32 %344, i32* %20, align 8
  %345 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  call void @saa_rewind(%struct.SAA* %345) #11
  %346 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  %347 = call i8* @saa_rstruct(%struct.SAA* %346) #11
  %348 = icmp eq i8* %347, null
  br i1 %348, label %426, label %349

349:                                              ; preds = %316, %405
  %350 = phi i8* [ %424, %405 ], [ %347, %316 ]
  %351 = phi i32 [ %412, %405 ], [ 0, %316 ]
  %352 = bitcast i8* %350 to i32*
  %353 = load i32, i32* %352, align 8
  switch i32 %353, label %404 [
    i32 2, label %354
    i32 3, label %354
    i32 1, label %382
    i32 0, label %382
  ]

354:                                              ; preds = %349, %349
  %355 = getelementptr inbounds i8, i8* %350, i64 8
  %356 = bitcast i8* %355 to i8**
  %357 = load i8*, i8** %356, align 8
  %358 = call i64 @strlen(i8* %357) #13
  %359 = trunc i64 %358 to i32
  %360 = add i32 %359, 11
  %361 = trunc i64 %358 to i16
  %362 = add i16 %361, 13
  %363 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %363, i16 zeroext %362) #11
  %364 = load i32, i32* %20, align 8
  %365 = add i32 %364, 2
  store i32 %365, i32* %20, align 8
  %366 = load i32, i32* %352, align 8
  %367 = icmp eq i32 %366, 2
  %368 = load %struct.SAA*, %struct.SAA** %18, align 8
  %369 = select i1 %367, i16 4364, i16 4365
  call void @saa_write16(%struct.SAA* %368, i16 zeroext %369) #11
  %370 = load i32, i32* %20, align 8
  %371 = add i32 %370, 2
  store i32 %371, i32* %20, align 8
  %372 = getelementptr inbounds i8, i8* %350, i64 32
  %373 = bitcast i8* %372 to i32*
  %374 = load i32, i32* %373, align 8
  %375 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %375, i32 %374) #11
  %376 = load i32, i32* %20, align 8
  %377 = add i32 %376, 4
  store i32 %377, i32* %20, align 8
  %378 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %378, i32 0) #11
  %379 = load i32, i32* %20, align 8
  %380 = add i32 %379, 4
  store i32 %380, i32* %20, align 8
  %381 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %381, i16 zeroext 0) #11
  br label %405

382:                                              ; preds = %349, %349
  %383 = getelementptr inbounds i8, i8* %350, i64 8
  %384 = bitcast i8* %383 to i8**
  %385 = load i8*, i8** %384, align 8
  %386 = call i64 @strlen(i8* %385) #13
  %387 = trunc i64 %386 to i32
  %388 = add i32 %387, 8
  %389 = trunc i64 %386 to i16
  %390 = add i16 %389, 10
  %391 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %391, i16 zeroext %390) #11
  %392 = load i32, i32* %20, align 8
  %393 = add i32 %392, 2
  store i32 %393, i32* %20, align 8
  %394 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %394, i16 zeroext 4357) #11
  %395 = load i32, i32* %20, align 8
  %396 = add i32 %395, 2
  store i32 %396, i32* %20, align 8
  %397 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write32(%struct.SAA* %397, i32 0) #11
  %398 = load i32, i32* %20, align 8
  %399 = add i32 %398, 4
  store i32 %399, i32* %20, align 8
  %400 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write16(%struct.SAA* %400, i16 zeroext 0) #11
  %401 = load i32, i32* %20, align 8
  %402 = add i32 %401, 2
  store i32 %402, i32* %20, align 8
  %403 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_write8(%struct.SAA* %403, i8 zeroext 0) #11
  br label %405

404:                                              ; preds = %349
  call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #14
  unreachable

405:                                              ; preds = %382, %354
  %406 = phi i32 [ 1, %382 ], [ 2, %354 ]
  %407 = phi i8** [ %384, %382 ], [ %356, %354 ]
  %408 = phi i32 [ %388, %382 ], [ %360, %354 ]
  %409 = phi i32 [ %396, %382 ], [ %377, %354 ]
  %410 = load i32, i32* %20, align 8
  %411 = add i32 %410, %406
  store i32 %411, i32* %20, align 8
  %412 = add i32 %408, %351
  %413 = load i8*, i8** %407, align 8
  %414 = call i64 @strlen(i8* %413) #13
  %415 = add i64 %414, 1
  %416 = load %struct.SAA*, %struct.SAA** %18, align 8
  call void @saa_wbytes(%struct.SAA* %416, i8* %413, i64 %415) #11
  %417 = load i32, i32* %20, align 8
  %418 = trunc i64 %415 to i32
  %419 = add i32 %417, %418
  store i32 %419, i32* %20, align 8
  %420 = load i8*, i8** %407, align 8
  call fastcc void @register_reloc(%struct.coff_Section* %9, i8* %420, i32 %409, i16 zeroext 11) #11
  %421 = load i8*, i8** %407, align 8
  %422 = add i32 %409, 4
  call fastcc void @register_reloc(%struct.coff_Section* %9, i8* %421, i32 %422, i16 zeroext 10) #11
  %423 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  %424 = call i8* @saa_rstruct(%struct.SAA* %423) #11
  %425 = icmp eq i8* %424, null
  br i1 %425, label %426, label %349

426:                                              ; preds = %405, %316
  %427 = phi i32 [ 0, %316 ], [ %412, %405 ]
  %428 = icmp eq i32 %427, %267
  br i1 %428, label %430, label %429, !prof !2

429:                                              ; preds = %426
  call void @nasm_assert_failed(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i32 761, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0)) #14
  unreachable

430:                                              ; preds = %426
  %431 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %431) #11
  store i32 0, i32* %1, align 4
  %432 = load %struct.SAA*, %struct.SAA** %18, align 8
  %433 = getelementptr inbounds %struct.SAA, %struct.SAA* %432, i64 0, i32 8
  %434 = load i64, i64* %433, align 8
  %435 = and i64 %434, 3
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %445, label %437

437:                                              ; preds = %430
  %438 = trunc i64 %435 to i32
  %439 = sub nuw nsw i32 4, %438
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %445, label %441

441:                                              ; preds = %437
  %442 = zext i32 %439 to i64
  call void @saa_wbytes(%struct.SAA* %432, i8* nonnull %431, i64 %442) #11
  %443 = load i32, i32* %20, align 8
  %444 = add i32 %443, %439
  store i32 %444, i32* %20, align 8
  br label %445

445:                                              ; preds = %430, %437, %441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %431) #11
  %446 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %13, i64 0, i32 0
  %447 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write32(%struct.SAA* %447, i32 4) #11
  %448 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %13, i64 0, i32 1
  %449 = load i32, i32* %448, align 8
  %450 = add i32 %449, 4
  store i32 %450, i32* %448, align 8
  %451 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write16(%struct.SAA* %451, i16 zeroext 6) #11
  %452 = load i32, i32* %448, align 8
  %453 = add i32 %452, 2
  store i32 %453, i32* %448, align 8
  %454 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write16(%struct.SAA* %454, i16 zeroext 4609) #11
  %455 = load i32, i32* %448, align 8
  %456 = add i32 %455, 2
  store i32 %456, i32* %448, align 8
  %457 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write32(%struct.SAA* %457, i32 0) #11
  %458 = load i32, i32* %448, align 8
  %459 = add i32 %458, 4
  store i32 %459, i32* %448, align 8
  %460 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write16(%struct.SAA* %460, i16 zeroext 14) #11
  %461 = load i32, i32* %448, align 8
  %462 = add i32 %461, 2
  store i32 %462, i32* %448, align 8
  %463 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write16(%struct.SAA* %463, i16 zeroext 4104) #11
  %464 = load i32, i32* %448, align 8
  %465 = add i32 %464, 2
  store i32 %465, i32* %448, align 8
  %466 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write32(%struct.SAA* %466, i32 3) #11
  %467 = load i32, i32* %448, align 8
  %468 = add i32 %467, 4
  store i32 %468, i32* %448, align 8
  %469 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write8(%struct.SAA* %469, i8 zeroext 0) #11
  %470 = load i32, i32* %448, align 8
  %471 = add i32 %470, 1
  store i32 %471, i32* %448, align 8
  %472 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write8(%struct.SAA* %472, i8 zeroext 0) #11
  %473 = load i32, i32* %448, align 8
  %474 = add i32 %473, 1
  store i32 %474, i32* %448, align 8
  %475 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write16(%struct.SAA* %475, i16 zeroext 0) #11
  %476 = load i32, i32* %448, align 8
  %477 = add i32 %476, 2
  store i32 %477, i32* %448, align 8
  %478 = load %struct.SAA*, %struct.SAA** %446, align 8
  call void @saa_write32(%struct.SAA* %478, i32 4096) #11
  %479 = load i32, i32* %448, align 8
  %480 = add i32 %479, 4
  store i32 %480, i32* %448, align 8
  %481 = load %struct.source_file*, %struct.source_file** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 3), align 8
  %482 = icmp eq %struct.source_file* %481, null
  br i1 %482, label %493, label %483

483:                                              ; preds = %445, %483
  %484 = phi %struct.source_file* [ %491, %483 ], [ %481, %445 ]
  %485 = getelementptr inbounds %struct.source_file, %struct.source_file* %484, i64 0, i32 1
  %486 = load i8*, i8** %485, align 8
  call void @nasm_free(i8* %486) #11
  %487 = getelementptr inbounds %struct.source_file, %struct.source_file* %484, i64 0, i32 6
  %488 = load %struct.SAA*, %struct.SAA** %487, align 8
  call void @saa_free(%struct.SAA* %488) #11
  %489 = bitcast %struct.source_file* %484 to i8*
  call void @free(i8* %489) #11
  %490 = getelementptr inbounds %struct.source_file, %struct.source_file* %484, i64 0, i32 3
  %491 = load %struct.source_file*, %struct.source_file** %490, align 8
  %492 = icmp eq %struct.source_file* %491, null
  br i1 %492, label %493, label %483

493:                                              ; preds = %483, %445
  call void @hash_free(%struct.hash_table* getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 7)) #11
  %494 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  call void @saa_rewind(%struct.SAA* %494) #11
  %495 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  %496 = call i8* @saa_rstruct(%struct.SAA* %495) #11
  %497 = icmp eq i8* %496, null
  br i1 %497, label %506, label %498

498:                                              ; preds = %493, %498
  %499 = phi i8* [ %504, %498 ], [ %496, %493 ]
  %500 = getelementptr inbounds i8, i8* %499, i64 8
  %501 = bitcast i8* %500 to i8**
  %502 = load i8*, i8** %501, align 8
  call void @nasm_free(i8* %502) #11
  %503 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  %504 = call i8* @saa_rstruct(%struct.SAA* %503) #11
  %505 = icmp eq i8* %504, null
  br i1 %505, label %506, label %498

506:                                              ; preds = %498, %493
  %507 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 11), align 8
  call void @saa_free(%struct.SAA* %507) #11
  %508 = load i8*, i8** getelementptr inbounds (%struct.cv8_state, %struct.cv8_state* @cv8_state, i64 0, i32 16, i32 0), align 8
  call void @nasm_free(i8* %508) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @coff_make_section(i8*, i32) local_unnamed_addr #1

declare %struct.SAA* @saa_init(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @saa_wstruct(%struct.SAA*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i8** @hash_find(%struct.hash_table*, i8*, %struct.hash_insert*) local_unnamed_addr #1

declare noalias i8* @nasm_realpath(i8*) local_unnamed_addr #1

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_zalloc(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i8** @hash_add(%struct.hash_insert*, i8*, i8*) local_unnamed_addr #1

declare %struct._IO_FILE* @pp_input_fopen(i8*, i32) local_unnamed_addr #1

declare void @MD5Init(%struct.MD5Context*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @feof(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #8

declare void @MD5Update(%struct.MD5Context*, i8*, i32) local_unnamed_addr #1

declare void @MD5Final(i8*, %struct.MD5Context*) local_unnamed_addr #1

declare void @nasm_free(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #7

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #1

declare noalias i8* @nasm_strdup(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

declare void @saa_free(%struct.SAA*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

declare void @hash_free(%struct.hash_table*) local_unnamed_addr #1

declare void @saa_rewind(%struct.SAA*) local_unnamed_addr #1

declare i8* @saa_rstruct(%struct.SAA*) local_unnamed_addr #1

declare void @saa_write32(%struct.SAA*, i32) local_unnamed_addr #1

; Function Attrs: cold noreturn
declare void @nasm_assert_failed(i8*, i32, i8*) local_unnamed_addr #10

declare void @saa_write8(%struct.SAA*, i8 zeroext) local_unnamed_addr #1

declare void @saa_wbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #1

declare void @saa_write16(%struct.SAA*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @register_reloc(%struct.coff_Section* nocapture, i8*, i32, i16 zeroext) unnamed_addr #0 {
  %5 = tail call noalias i8* @nasm_malloc(i64 24) #12
  %6 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %0, i64 0, i32 5
  %7 = bitcast %struct.coff_Reloc*** %6 to i8***
  %8 = load i8**, i8*** %7, align 8
  store i8* %5, i8** %8, align 8
  %9 = bitcast i8* %5 to %struct.coff_Reloc**
  %10 = bitcast %struct.coff_Reloc*** %6 to i8**
  store i8* %5, i8** %10, align 8
  store %struct.coff_Reloc* null, %struct.coff_Reloc** %9, align 8
  %11 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds i8, i8* %5, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %2, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 20
  %19 = bitcast i8* %18 to i16*
  store i16 %3, i16* %19, align 4
  %20 = getelementptr inbounds i8, i8* %5, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = load i32, i32* @coff_nsects, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %4
  %25 = load %struct.coff_Section**, %struct.coff_Section*** @coff_sects, align 8
  %26 = zext i32 %22 to i64
  br label %27

27:                                               ; preds = %24, %36
  %28 = phi i32 [ 0, %24 ], [ %37, %36 ]
  %29 = phi i64 [ 0, %24 ], [ %38, %36 ]
  %30 = getelementptr inbounds %struct.coff_Section*, %struct.coff_Section** %25, i64 %29
  %31 = load %struct.coff_Section*, %struct.coff_Section** %30, align 8
  %32 = getelementptr inbounds %struct.coff_Section, %struct.coff_Section* %31, i64 0, i32 9
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i32 @strcmp(i8* %1, i8* %33) #13
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %80, label %36

36:                                               ; preds = %27
  %37 = add nuw nsw i32 %28, 2
  store i32 %37, i32* %21, align 4
  %38 = add nuw nsw i64 %29, 1
  %39 = icmp ult i64 %38, %26
  br i1 %39, label %27, label %40

40:                                               ; preds = %36, %4
  %41 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  tail call void @saa_rewind(%struct.SAA* %41) #11
  %42 = load i32, i32* @coff_nsyms, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %79, label %44

44:                                               ; preds = %40, %75
  %45 = phi i32 [ %76, %75 ], [ 0, %40 ]
  %46 = load %struct.SAA*, %struct.SAA** @coff_syms, align 8
  %47 = tail call i8* @saa_rstruct(%struct.SAA* %46) #11
  %48 = load i32, i32* %21, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %21, align 4
  %50 = getelementptr inbounds i8, i8* %47, i64 12
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %57

54:                                               ; preds = %44
  %55 = tail call i32 @strcmp(i8* %1, i8* %47) #13
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %80, label %75

57:                                               ; preds = %44
  %58 = getelementptr inbounds i8, i8* %47, i64 28
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, 1
  %62 = sext i32 %61 to i64
  %63 = tail call noalias i8* @nasm_malloc(i64 %62) #12
  %64 = load %struct.SAA*, %struct.SAA** @coff_strs, align 8
  %65 = load i32, i32* %51, align 4
  %66 = add nsw i32 %65, -4
  %67 = sext i32 %66 to i64
  %68 = load i32, i32* %59, align 4
  %69 = sext i32 %68 to i64
  tail call void @saa_fread(%struct.SAA* %64, i64 %67, i8* %63, i64 %69) #11
  %70 = load i32, i32* %59, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %63, i64 %71
  store i8 0, i8* %72, align 1
  %73 = tail call i32 @strcmp(i8* %1, i8* %63) #13
  tail call void @nasm_free(i8* %63) #11
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %57, %54
  %76 = add nuw i32 %45, 1
  %77 = load i32, i32* @coff_nsyms, align 4
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %44, label %79

79:                                               ; preds = %75, %40
  tail call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i64 0, i64 0), i8* %1) #14
  unreachable

80:                                               ; preds = %27, %57, %54
  ret void
}

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

declare void @saa_fread(%struct.SAA*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: cold noreturn
declare void @nasm_panic(i8*, ...) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind allocsize(0) }
attributes #13 = { nounwind readonly }
attributes #14 = { cold noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
