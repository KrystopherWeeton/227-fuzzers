; ModuleID = 'gen/third_party/blink/public/mojom/cache_storage/cache_storage.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/cache_storage/cache_storage.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter" = type { %"class.blink::mojom::blink::CacheStorageCache"* }
%"class.blink::mojom::blink::CacheStorageCache" = type { i32 (...)** }
%"class.blink::mojom::blink::CacheStorageAsyncWaiter" = type { %"class.blink::mojom::blink::CacheStorage"* }
%"class.blink::mojom::blink::CacheStorage" = type { i32 (...)** }
%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting" = type { %"class.blink::mojom::blink::CacheStorageCache" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap", %class.scoped_refptr.5, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.21", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.28", i8, i8, i8, %"class.WTF::String" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.5 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.11, %"class.mojo::PendingRemote.20" }
%class.scoped_refptr.11 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector", i64, %"class.WTF::Vector.12", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.12", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.5, i64, i64, %"class.absl::optional", %class.scoped_refptr.17 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.17 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.20" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.28" = type { %"class.absl::optional_internal::optional_data.29" }
%"class.absl::optional_internal::optional_data.29" = type { %"class.absl::optional_internal::optional_data_base.30" }
%"class.absl::optional_internal::optional_data_base.30" = type { %"class.absl::optional_internal::optional_data_dtor_base.31" }
%"class.absl::optional_internal::optional_data_dtor_base.31" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::CacheQueryOptions", i32 }
%"class.blink::mojom::blink::CacheQueryOptions" = type { i8, i8, i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.37", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.38" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.39" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.40" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.mojo::StructPtr.44"*, i32, i32 }
%"class.mojo::StructPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::mojom::blink::BatchOperation"* }
%"class.blink::mojom::blink::BatchOperation" = type { i32, %"class.mojo::StructPtr", %"class.mojo::StructPtr.48", %"class.mojo::InlinedStructPtr" }
%"class.mojo::StructPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::mojom::blink::FetchAPIResponse"* }
%"class.blink::mojom::blink::FetchAPIResponse" = type { %"class.WTF::Vector.52", i16, %"class.WTF::String", i32, i64, i32, [4 x i8], %"class.WTF::HashMap.57", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.5, i32, %"class.base::Time", %"class.WTF::String", %"class.WTF::Vector.61", %class.scoped_refptr.5, %class.scoped_refptr.5, %"class.mojo::StructPtr.66", i32, %"class.WTF::String", i8, i8, %"class.absl::optional.156" }
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54" }
%"class.WTF::VectorBufferBase.54" = type { %"class.blink::KURL"*, i32, i32 }
%"class.WTF::HashMap.57" = type { %"class.WTF::HashTable.58" }
%"class.WTF::HashTable.58" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63" }
%"class.WTF::VectorBufferBase.63" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::StructPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.70", %"class.mojo::StructPtr.107", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.124", %"class.base::TimeDelta", %"class.absl::optional.124", i32, [4 x i8], %"class.WTF::Vector.134", %"class.mojo::StructPtr.146", i8, [7 x i8] }>
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.mojo::StructPtr.73"*, i32, i32 }
%"class.mojo::StructPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.77", %"class.WTF::HashMap.84", %"class.WTF::HashMap.89", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.94", i8, %"class.WTF::Vector.61", i32, %"class.mojo::StructPtr.95", %"class.WTF::Vector.61" }
%"class.mojo::StructPtr.77" = type { %"class.std::__1::unique_ptr.78" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.84" = type { %"class.WTF::HashTable.85" }
%"class.WTF::HashTable.85" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.WTF::HashMap.89" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"struct.WTF::KeyValuePair.93"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.93" = type opaque
%"class.mojo::InlinedStructPtr.94" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.95" = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.61", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr.107" = type { %"class.std::__1::unique_ptr.108" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.111* }
%class.scoped_refptr.111 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.174", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.161", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.111 }
%"class.WTF::RefCounted.174" = type { %"class.base::RefCounted.175" }
%"class.base::RefCounted.175" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, %union.anon.165 }
%union.anon.165 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.115", i32, %"class.absl::optional.115" }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.122 }
%union.anon.122 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.115", i32, %"class.absl::optional.115" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"class.WTF::Vector.129" }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { i32*, i32, i32 }
%"class.WTF::Vector.134" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"class.mojo::StructPtr.137"*, i32, i32 }
%"class.mojo::StructPtr.137" = type { %"class.std::__1::unique_ptr.138" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.146" = type { %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.61"* }
%"class.absl::optional.156" = type { %"class.absl::optional_internal::optional_data.157" }
%"class.absl::optional_internal::optional_data.157" = type { %"class.absl::optional_internal::optional_data_base.158" }
%"class.absl::optional_internal::optional_data_base.158" = type { %"class.absl::optional_internal::optional_data_dtor_base.159" }
%"class.absl::optional_internal::optional_data_dtor_base.159" = type { i8, %union.anon.160 }
%union.anon.160 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.161" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.base::OnceCallback.176" = type { %"class.base::internal::CallbackBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.177", i64, %"class.absl::optional.183" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { i8* }
%"class.absl::optional.183" = type { %"class.absl::optional_internal::optional_data.184" }
%"class.absl::optional_internal::optional_data.184" = type { %"class.absl::optional_internal::optional_data_base.185" }
%"class.absl::optional_internal::optional_data_base.185" = type { %"class.absl::optional_internal::optional_data_dtor_base.186" }
%"class.absl::optional_internal::optional_data_dtor_base.186" = type { i8, %union.anon.187 }
%union.anon.187 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.188", %"class.std::__1::unique_ptr.189" }
%"class.mojo::ScopedHandleBase.188" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { i8* }
%"class.base::OnceCallback.197" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.198" = type { %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::mojom::blink::MatchResult"* }
%"class.blink::mojom::blink::MatchResult" = type { i32, %"union.blink::mojom::blink::MatchResult::Union_" }
%"union.blink::mojom::blink::MatchResult::Union_" = type { %"class.mojo::StructPtr.48"* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.229, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.222", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.224" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.229 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.216" }>
%"class.base::RefCountedThreadSafe.216" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.231", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.231" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.232" }
%"struct.std::__1::atomic.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.mojo::StructPtr.237" = type { %"class.std::__1::unique_ptr.238" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::mojom::blink::MatchAllResult"* }
%"class.blink::mojom::blink::MatchAllResult" = type { i32, %"union.blink::mojom::blink::MatchAllResult::Union_" }
%"union.blink::mojom::blink::MatchAllResult::Union_" = type { %"class.WTF::Vector.241"* }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"class.mojo::StructPtr.48"*, i32, i32 }
%"class.mojo::StructPtr.251" = type { %"class.std::__1::unique_ptr.252" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::mojom::blink::GetAllMatchedEntriesResult"* }
%"class.blink::mojom::blink::GetAllMatchedEntriesResult" = type { i32, %"union.blink::mojom::blink::GetAllMatchedEntriesResult::Union_" }
%"union.blink::mojom::blink::GetAllMatchedEntriesResult::Union_" = type { %"class.WTF::Vector.255"* }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257" }
%"class.WTF::VectorBufferBase.257" = type { %"class.mojo::StructPtr.258"*, i32, i32 }
%"class.mojo::StructPtr.258" = type { %"class.std::__1::unique_ptr.259" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::mojom::blink::CacheEntry"* }
%"class.blink::mojom::blink::CacheEntry" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr.48" }
%"class.mojo::StructPtr.272" = type { %"class.std::__1::unique_ptr.273" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::mojom::blink::CacheKeysResult"* }
%"class.blink::mojom::blink::CacheKeysResult" = type { i32, %"union.blink::mojom::blink::CacheKeysResult::Union_" }
%"union.blink::mojom::blink::CacheKeysResult::Union_" = type { %"class.WTF::Vector.276"* }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr.286" = type <{ %"class.blink::mojom::blink::CacheStorageVerboseError", i32, [4 x i8] }>
%"class.blink::mojom::blink::CacheStorageVerboseError" = type { i32, %"class.WTF::String" }
%"class.blink::mojom::blink::CacheStorageInterceptorForTesting" = type { %"class.blink::mojom::blink::CacheStorage" }
%"class.base::OnceCallback.292" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.293" = type { %"class.std::__1::unique_ptr.294" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::mojom::blink::MultiCacheQueryOptions"* }
%"class.blink::mojom::blink::MultiCacheQueryOptions" = type { %"class.mojo::InlinedStructPtr", %"class.WTF::String" }
%"class.base::OnceCallback.300" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.309" = type { %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::mojom::blink::OpenResult"* }
%"class.blink::mojom::blink::OpenResult" = type { i32, %"union.blink::mojom::blink::OpenResult::Union_" }
%"union.blink::mojom::blink::OpenResult::Union_" = type { %"class.mojo::PendingAssociatedRemote"* }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink17CacheStorageCacheD2Ev = comdat any

$_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink12CacheStorageD2Ev = comdat any

$_ZN5blink5mojom5blink33CacheStorageInterceptorForTestingD0Ev = comdat any

$_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@.str = private unnamed_addr constant [6 x i8] c"Match\00", align 1
@.str.1 = private unnamed_addr constant [89 x i8] c"gen/third_party/blink/public/mojom/cache_storage/cache_storage.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"MatchAll\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"GetAllMatchedEntries\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Keys\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Batch\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"WriteSideData\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"Has\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"Open\00", align 1
@_ZTVN5blink5mojom5blink38CacheStorageCacheInterceptorForTestingE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCache"*)* @_ZN5blink5mojom5blink17CacheStorageCacheD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEblN4base12OnceCallbackIFvNS4_INS1_11MatchResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting8MatchAllEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_14MatchAllResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting20GetAllMatchedEntriesEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_26GetAllMatchedEntriesResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting4KeysEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_15CacheKeysResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting5BatchEN3WTF6VectorIN4mojo9StructPtrINS1_14BatchOperationEEELj0ENS3_18PartitionAllocatorEEElN4base12OnceCallbackIFvNS5_16InlinedStructPtrINS1_24CacheStorageVerboseErrorEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)* @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting13WriteSideDataERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferElNS6_12OnceCallbackIFvNS0_17CacheStorageErrorEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink33CacheStorageInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::CacheStorage"*)* @_ZN5blink5mojom5blink12CacheStorageD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)* @_ZN5blink5mojom5blink33CacheStorageInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)* @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting3HasERKN3WTF6StringElN4base12OnceCallbackIFvNS0_17CacheStorageErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)* @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting6DeleteERKN3WTF6StringElN4base12OnceCallbackIFvNS0_17CacheStorageErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, i64, %"class.base::OnceCallback.292"*)* @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting4KeysElN4base12OnceCallbackIFvRKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS4_INS1_22MultiCacheQueryOptionsEEEblN4base12OnceCallbackIFvNS4_INS1_11MatchResultEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)* @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting4OpenERKN3WTF6StringElN4base12OnceCallbackIFvN4mojo9StructPtrINS1_10OpenResultEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiterC1EPNS1_17CacheStorageCacheE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"*, %"class.blink::mojom::blink::CacheStorageCache"*), void (%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"*, %"class.blink::mojom::blink::CacheStorageCache"*)* @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiterC2EPNS1_17CacheStorageCacheE
@_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"*), void (%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"*)* @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiterD2Ev
@_ZN5blink5mojom5blink23CacheStorageAsyncWaiterC1EPNS1_12CacheStorageE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CacheStorageAsyncWaiter"*, %"class.blink::mojom::blink::CacheStorage"*), void (%"class.blink::mojom::blink::CacheStorageAsyncWaiter"*, %"class.blink::mojom::blink::CacheStorage"*)* @_ZN5blink5mojom5blink23CacheStorageAsyncWaiterC2EPNS1_12CacheStorageE
@_ZN5blink5mojom5blink23CacheStorageAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CacheStorageAsyncWaiter"*), void (%"class.blink::mojom::blink::CacheStorageAsyncWaiter"*)* @_ZN5blink5mojom5blink23CacheStorageAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEblN4base12OnceCallbackIFvNS4_INS1_11MatchResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i1 zeroext, i64, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr", align 4
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = bitcast %"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)***
  %12 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %12, i64 8
  %14 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %13, align 8
  %15 = tail call %"class.blink::mojom::blink::CacheStorageCache"* %14(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0) #11
  %16 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 1
  store i32 0, i32* %21, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %22 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 4 %23, i64 3, i1 false) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 1 %24, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %22, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %22) #11
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %26 = load i32, i32* %21, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %21, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %15 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)***
  %33 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)** %33, i64 2
  %35 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)** %34, align 8
  call void %35(%"class.blink::mojom::blink::CacheStorageCache"* %15, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::InlinedStructPtr"* nonnull %9, i1 zeroext %3, i64 %4, %"class.base::OnceCallback"* nonnull %10) #11
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %37 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  %38 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %37) #11
  %40 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %37 to i8*
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %6, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting8MatchAllEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_14MatchAllResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i64, %"class.base::OnceCallback.38"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::InlinedStructPtr", align 4
  %9 = alloca %"class.base::OnceCallback.38", align 8
  %10 = bitcast %"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %11, i64 8
  %13 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::CacheStorageCache"* %13(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0) #11
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  store i32 0, i32* %20, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %21 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* nonnull align 4 %22, i64 3, i1 false) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 1 %23, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %21, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %21) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %25 = load i32, i32* %20, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %20, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.base::OnceCallback.38", %"class.base::OnceCallback.38"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback.38"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback.38"* %9 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %14 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)***
  %32 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)** %32, i64 3
  %34 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::CacheStorageCache"* %14, %"class.mojo::StructPtr"* nonnull %7, %"class.mojo::InlinedStructPtr"* nonnull %8, i64 %3, %"class.base::OnceCallback.38"* nonnull %9) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.38", %"class.base::OnceCallback.38"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %36 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  %37 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %36) #11
  %39 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %5, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting20GetAllMatchedEntriesEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_26GetAllMatchedEntriesResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i64, %"class.base::OnceCallback.39"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::InlinedStructPtr", align 4
  %9 = alloca %"class.base::OnceCallback.39", align 8
  %10 = bitcast %"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %11, i64 8
  %13 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::CacheStorageCache"* %13(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0) #11
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  store i32 0, i32* %20, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %21 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* nonnull align 4 %22, i64 3, i1 false) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 1 %23, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %21, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %21) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %25 = load i32, i32* %20, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %20, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.base::OnceCallback.39", %"class.base::OnceCallback.39"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback.39"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback.39"* %9 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %14 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)***
  %32 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)** %32, i64 4
  %34 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::CacheStorageCache"* %14, %"class.mojo::StructPtr"* nonnull %7, %"class.mojo::InlinedStructPtr"* nonnull %8, i64 %3, %"class.base::OnceCallback.39"* nonnull %9) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.39", %"class.base::OnceCallback.39"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %36 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  %37 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %36) #11
  %39 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %5, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting4KeysEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElN4base12OnceCallbackIFvNS4_INS1_15CacheKeysResultEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i64, %"class.base::OnceCallback.40"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::InlinedStructPtr", align 4
  %9 = alloca %"class.base::OnceCallback.40", align 8
  %10 = bitcast %"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %11, i64 8
  %13 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::CacheStorageCache"* %13(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0) #11
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  store i32 0, i32* %20, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %21 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* nonnull align 4 %22, i64 3, i1 false) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 1 %23, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %21, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %21) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %25 = load i32, i32* %20, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %20, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback.40"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback.40"* %9 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %14 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)***
  %32 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)** %32, i64 5
  %34 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::CacheStorageCache"* %14, %"class.mojo::StructPtr"* nonnull %7, %"class.mojo::InlinedStructPtr"* nonnull %8, i64 %3, %"class.base::OnceCallback.40"* nonnull %9) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %36 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  %37 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %36) #11
  %39 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %5, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting5BatchEN3WTF6VectorIN4mojo9StructPtrINS1_14BatchOperationEEELj0ENS3_18PartitionAllocatorEEElN4base12OnceCallbackIFvNS5_16InlinedStructPtrINS1_24CacheStorageVerboseErrorEEEEEE(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.WTF::Vector.41"* nocapture, i64, %"class.base::OnceCallback.176"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.41", align 8
  %6 = alloca %"class.base::OnceCallback.176", align 8
  %7 = bitcast %"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %8, i64 8
  %10 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::CacheStorageCache"* %10(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0) #11
  %12 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.41"* %1 to i64*
  %15 = bitcast %"class.WTF::Vector.41"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector.41"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.base::OnceCallback.176", %"class.base::OnceCallback.176"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.176"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.176"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %11 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)***
  %27 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)** %27, i64 6
  %29 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::CacheStorageCache"* %11, %"class.WTF::Vector.41"* nonnull %5, i64 %2, %"class.base::OnceCallback.176"* nonnull %6) #11
  %30 = getelementptr inbounds %"class.base::OnceCallback.176", %"class.base::OnceCallback.176"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  %31 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %31, align 8
  %33 = icmp eq %"class.mojo::StructPtr.44"* %32, null
  br i1 %33, label %56, label %34, !prof !2

34:                                               ; preds = %4
  %35 = bitcast %"class.mojo::StructPtr.44"* %32 to i8*
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38, !prof !3

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %32, i64 %39
  br label %41

41:                                               ; preds = %48, %38
  %42 = phi %"class.mojo::StructPtr.44"* [ %49, %48 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %43, align 8
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %43, align 8
  %45 = icmp eq %"class.blink::mojom::blink::BatchOperation"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  call void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"* nonnull %44) #11
  %47 = bitcast %"class.blink::mojom::blink::BatchOperation"* %44 to i8*
  call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %42, i64 1
  %50 = icmp eq %"class.mojo::StructPtr.44"* %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48
  store i32 0, i32* %13, align 4
  %52 = bitcast %"class.WTF::Vector.41"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #11
  store %"class.mojo::StructPtr.44"* null, %"class.mojo::StructPtr.44"** %31, align 8
  br label %56

56:                                               ; preds = %4, %54
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTesting13WriteSideDataERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferElNS6_12OnceCallbackIFvNS0_17CacheStorageErrorEEEE(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo_base::BigBuffer", align 8
  %8 = alloca %"class.base::OnceCallback.197", align 8
  %9 = bitcast %"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %10, i64 8
  %12 = load %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorageCache"* (%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::CacheStorageCache"* %12(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"* %0) #11
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %7, %"class.mojo_base::BigBuffer"* dereferenceable(56) %3) #11
  %14 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback.197"* %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback.197"* %8 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %13 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)***
  %19 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)** %19, i64 7
  %21 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::CacheStorageCache"* %13, %"class.blink::KURL"* dereferenceable(112) %1, i64 %2, %"class.mojo_base::BigBuffer"* nonnull %7, i64 %4, %"class.base::OnceCallback.197"* nonnull %8) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiterC2EPNS1_17CacheStorageCacheE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture, %"class.blink::mojom::blink::CacheStorageCache"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::CacheStorageCache"* %1, %"class.blink::mojom::blink::CacheStorageCache"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiterD2Ev(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEblPNS4_INS1_11MatchResultEEE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i1 zeroext, i64, %"class.mojo::StructPtr.198"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %8 = alloca %"class.base::RunLoop", align 8
  %9 = alloca %"class.mojo::StructPtr", align 8
  %10 = alloca %"class.mojo::InlinedStructPtr", align 4
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = ptrtoint %"class.mojo::StructPtr.198"* %5 to i64
  %14 = bitcast %"class.base::RunLoop"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %8, i32 0) #11
  %15 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  %16 = load %"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::mojom::blink::CacheStorageCache"** %15, align 8
  %17 = bitcast %"class.mojo::StructPtr"* %9 to i64*
  %18 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 0, i64* %19, align 8
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %10, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %21) #11
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %10, i64 0, i32 1
  store i32 0, i32* %22, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %21) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %21) #11
  %23 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %10, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* nonnull align 4 %24, i64 3, i1 false) #11
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 1 %25, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* nonnull align 1 %23, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %23) #11
  %26 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %27 = load i32, i32* %22, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %22, align 4
  store i32 %27, i32* %26, align 4
  %29 = ptrtoint %"class.base::RunLoop"* %8 to i64
  %30 = call i8* @_Znwm(i64 56) #12, !noalias !4
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.198"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_0JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEEblPNS7_INS4_11MatchResultEEEE3$_0JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !4
  %32 = getelementptr inbounds i8, i8* %30, i64 40
  %33 = bitcast i8* %32 to i64*
  store i64 %29, i64* %33, align 8, !noalias !4
  %34 = getelementptr inbounds i8, i8* %30, i64 48
  %35 = bitcast i8* %34 to i64*
  store i64 %13, i64* %35, align 8, !noalias !4
  %36 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %30, i8** %36, align 8, !alias.scope !4
  %37 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %16 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)***
  %38 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)** %38, i64 2
  %40 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i1, i64, %"class.base::OnceCallback"*)** %39, align 8
  call void %40(%"class.blink::mojom::blink::CacheStorageCache"* %16, %"class.mojo::StructPtr"* nonnull %9, %"class.mojo::InlinedStructPtr"* nonnull %10, i1 zeroext %3, i64 %4, %"class.base::OnceCallback"* nonnull %11) #11
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %21) #11
  %42 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %18, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %18, align 8
  %43 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %42) #11
  %45 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %42 to i8*
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %6, %44
  %47 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 77) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElPNS4_INS1_14MatchAllResultEEE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i64, %"class.mojo::StructPtr.237"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr", align 4
  %10 = alloca %"class.base::OnceCallback.38", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.mojo::StructPtr.237"* %4 to i64
  %13 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %14 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::mojom::blink::CacheStorageCache"** %14, align 8
  %16 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 1
  store i32 0, i32* %21, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %22 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 4 %23, i64 3, i1 false) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 1 %24, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %22, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %22) #11
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %26 = load i32, i32* %21, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %21, align 4
  store i32 %26, i32* %25, align 4
  %28 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %29 = call i8* @_Znwm(i64 56) #12, !noalias !9
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.237"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_14MatchAllResultEEEE3$_1JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEElPNS7_INS4_14MatchAllResultEEEE3$_1JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !9
  %31 = getelementptr inbounds i8, i8* %29, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %28, i64* %32, align 8, !noalias !9
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %12, i64* %34, align 8, !noalias !9
  %35 = bitcast %"class.base::OnceCallback.38"* %10 to i8**
  store i8* %29, i8** %35, align 8, !alias.scope !9
  %36 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %15 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)***
  %37 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)** %37, i64 3
  %39 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.38"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::CacheStorageCache"* %15, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::InlinedStructPtr"* nonnull %9, i64 %3, %"class.base::OnceCallback.38"* nonnull %10) #11
  %40 = getelementptr inbounds %"class.base::OnceCallback.38", %"class.base::OnceCallback.38"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %41 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  %42 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %41) #11
  %44 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %41 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %5, %43
  %46 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 92) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElPNS4_INS1_26GetAllMatchedEntriesResultEEE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i64, %"class.mojo::StructPtr.251"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr", align 4
  %10 = alloca %"class.base::OnceCallback.39", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.mojo::StructPtr.251"* %4 to i64
  %13 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %14 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::mojom::blink::CacheStorageCache"** %14, align 8
  %16 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 1
  store i32 0, i32* %21, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %22 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 4 %23, i64 3, i1 false) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 1 %24, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %22, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %22) #11
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %26 = load i32, i32* %21, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %21, align 4
  store i32 %26, i32* %25, align 4
  %28 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %29 = call i8* @_Znwm(i64 56) #12, !noalias !14
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.251"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEElPNS7_INS4_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !14
  %31 = getelementptr inbounds i8, i8* %29, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %28, i64* %32, align 8, !noalias !14
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %12, i64* %34, align 8, !noalias !14
  %35 = bitcast %"class.base::OnceCallback.39"* %10 to i8**
  store i8* %29, i8** %35, align 8, !alias.scope !14
  %36 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %15 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)***
  %37 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)** %37, i64 4
  %39 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.39"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::CacheStorageCache"* %15, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::InlinedStructPtr"* nonnull %9, i64 %3, %"class.base::OnceCallback.39"* nonnull %10) #11
  %40 = getelementptr inbounds %"class.base::OnceCallback.39", %"class.base::OnceCallback.39"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %41 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  %42 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %41) #11
  %44 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %41 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %5, %43
  %46 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 107) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEElPNS4_INS1_15CacheKeysResultEEE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture, i64, %"class.mojo::StructPtr.272"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr", align 4
  %10 = alloca %"class.base::OnceCallback.40", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.mojo::StructPtr.272"* %4 to i64
  %13 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %14 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::mojom::blink::CacheStorageCache"** %14, align 8
  %16 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 1
  store i32 0, i32* %21, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %22 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %9, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 4 %23, i64 3, i1 false) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 1 %24, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %22, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %22) #11
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  %26 = load i32, i32* %21, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %21, align 4
  store i32 %26, i32* %25, align 4
  %28 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %29 = call i8* @_Znwm(i64 56) #12, !noalias !19
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.272"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_15CacheKeysResultEEEE3$_3JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEElPNS7_INS4_15CacheKeysResultEEEE3$_3JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !19
  %31 = getelementptr inbounds i8, i8* %29, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %28, i64* %32, align 8, !noalias !19
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %12, i64* %34, align 8, !noalias !19
  %35 = bitcast %"class.base::OnceCallback.40"* %10 to i8**
  store i8* %29, i8** %35, align 8, !alias.scope !19
  %36 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %15 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)***
  %37 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)** %37, i64 5
  %39 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr"*, i64, %"class.base::OnceCallback.40"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::CacheStorageCache"* %15, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::InlinedStructPtr"* nonnull %9, i64 %3, %"class.base::OnceCallback.40"* nonnull %10) #11
  %40 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %41 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  %42 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %41) #11
  %44 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %41 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %5, %43
  %46 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 122) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS1_14BatchOperationEEELj0ENS3_18PartitionAllocatorEEElPNS5_16InlinedStructPtrINS1_24CacheStorageVerboseErrorEEE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture readonly, %"class.WTF::Vector.41"* nocapture, i64, %"class.mojo::InlinedStructPtr.286"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.WTF::Vector.41", align 8
  %7 = alloca %"class.base::OnceCallback.176", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint %"class.mojo::InlinedStructPtr.286"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::mojom::blink::CacheStorageCache"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %6, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %6, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector.41"* %1 to i64*
  %16 = bitcast %"class.WTF::Vector.41"* %6 to i64*
  store i64 0, i64* %16, align 8
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.WTF::Vector.41"* %6 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %13, align 8
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %1, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %14, align 4
  store i32 0, i32* %21, align 4
  %23 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %24 = call i8* @_Znwm(i64 56) #12, !noalias !24
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::InlinedStructPtr.286"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS5_14BatchOperationEEELj0ENS7_18PartitionAllocatorEEElPNS9_16InlinedStructPtrINS5_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopESI_EEEFvSH_EE7RunOnceEPNS0_13BindStateBaseEOSH_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS4_14BatchOperationEEELj0ENS6_18PartitionAllocatorEEElPNS8_16InlinedStructPtrINS4_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopESH_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !24
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !24
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8, !noalias !24
  %30 = bitcast %"class.base::OnceCallback.176"* %7 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !24
  %31 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %12 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)***
  %32 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)** %32, i64 6
  %34 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.WTF::Vector.41"*, i64, %"class.base::OnceCallback.176"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::CacheStorageCache"* %12, %"class.WTF::Vector.41"* nonnull %6, i64 %2, %"class.base::OnceCallback.176"* nonnull %7) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.176", %"class.base::OnceCallback.176"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  %36 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %36, align 8
  %38 = icmp eq %"class.mojo::StructPtr.44"* %37, null
  br i1 %38, label %61, label %39, !prof !2

39:                                               ; preds = %4
  %40 = bitcast %"class.mojo::StructPtr.44"* %37 to i8*
  %41 = load i32, i32* %14, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %59, label %43, !prof !3

43:                                               ; preds = %39
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %37, i64 %44
  br label %46

46:                                               ; preds = %53, %43
  %47 = phi %"class.mojo::StructPtr.44"* [ %54, %53 ], [ %37, %43 ]
  %48 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::BatchOperation"*, %"class.blink::mojom::blink::BatchOperation"** %48, align 8
  store %"class.blink::mojom::blink::BatchOperation"* null, %"class.blink::mojom::blink::BatchOperation"** %48, align 8
  %50 = icmp eq %"class.blink::mojom::blink::BatchOperation"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  call void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"* nonnull %49) #11
  %52 = bitcast %"class.blink::mojom::blink::BatchOperation"* %49 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %51, %46
  %54 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %47, i64 1
  %55 = icmp eq %"class.mojo::StructPtr.44"* %54, %45
  br i1 %55, label %56, label %46

56:                                               ; preds = %53
  store i32 0, i32* %14, align 4
  %57 = bitcast %"class.WTF::Vector.41"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %39
  %60 = phi i8* [ %58, %56 ], [ %40, %39 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #11
  store %"class.mojo::StructPtr.44"* null, %"class.mojo::StructPtr.44"** %36, align 8
  br label %61

61:                                               ; preds = %4, %59
  %62 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 137) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferElPNS0_17CacheStorageErrorE(%"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), i64, %"class.mojo_base::BigBuffer"*, i64, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo_base::BigBuffer", align 8
  %9 = alloca %"class.base::OnceCallback.197", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = ptrtoint i32* %5 to i64
  %12 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %13 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter", %"class.blink::mojom::blink::CacheStorageCacheAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::mojom::blink::CacheStorageCache"** %13, align 8
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %8, %"class.mojo_base::BigBuffer"* dereferenceable(56) %3) #11
  %15 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %16 = call i8* @_Znwm(i64 56) #12, !noalias !29
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS3_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS4_17CacheStorageErrorEE3$_5JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS2_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS3_17CacheStorageErrorEE3$_5JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !29
  %18 = getelementptr inbounds i8, i8* %16, i64 40
  %19 = bitcast i8* %18 to i64*
  store i64 %15, i64* %19, align 8, !noalias !29
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %11, i64* %21, align 8, !noalias !29
  %22 = bitcast %"class.base::OnceCallback.197"* %9 to i8**
  store i8* %16, i8** %22, align 8, !alias.scope !29
  %23 = bitcast %"class.blink::mojom::blink::CacheStorageCache"* %14 to void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)***
  %24 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)**, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)** %24, i64 7
  %26 = load void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorageCache"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, i64, %"class.base::OnceCallback.197"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::CacheStorageCache"* %14, %"class.blink::KURL"* dereferenceable(112) %1, i64 %2, %"class.mojo_base::BigBuffer"* nonnull %8, i64 %4, %"class.base::OnceCallback.197"* nonnull %9) #11
  %27 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %8) #11
  %28 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 152) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting3HasERKN3WTF6StringElN4base12OnceCallbackIFvNS0_17CacheStorageErrorEEEE(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), i64, %"class.base::OnceCallback.197"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.197", align 8
  %6 = bitcast %"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::CacheStorage"* %9(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.197"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.197"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::CacheStorage"* %10 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)***
  %16 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %16, i64 2
  %18 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::CacheStorage"* %10, %"class.WTF::String"* dereferenceable(8) %1, i64 %2, %"class.base::OnceCallback.197"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting6DeleteERKN3WTF6StringElN4base12OnceCallbackIFvNS0_17CacheStorageErrorEEEE(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), i64, %"class.base::OnceCallback.197"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.197", align 8
  %6 = bitcast %"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::CacheStorage"* %9(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.197"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.197"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::CacheStorage"* %10 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)***
  %16 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::CacheStorage"* %10, %"class.WTF::String"* dereferenceable(8) %1, i64 %2, %"class.base::OnceCallback.197"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting4KeysElN4base12OnceCallbackIFvRKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, i64, %"class.base::OnceCallback.292"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.292", align 8
  %5 = bitcast %"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::CacheStorage"* %8(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.292", %"class.base::OnceCallback.292"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.292"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.292"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::CacheStorage"* %9 to void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)***
  %15 = load void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)** %15, i64 4
  %17 = load void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::CacheStorage"* %9, i64 %1, %"class.base::OnceCallback.292"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.292", %"class.base::OnceCallback.292"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS4_INS1_22MultiCacheQueryOptionsEEEblN4base12OnceCallbackIFvNS4_INS1_11MatchResultEEEEEE(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.293"* nocapture, i1 zeroext, i64, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::StructPtr.293", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = bitcast %"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %11, i64 7
  %13 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::CacheStorage"* %13(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0) #11
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = bitcast %"class.mojo::StructPtr.293"* %8 to i64*
  %20 = getelementptr inbounds %"class.mojo::StructPtr.293", %"class.mojo::StructPtr.293"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.mojo::StructPtr.293"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 0, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = bitcast %"class.blink::mojom::blink::CacheStorage"* %14 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)***
  %28 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)** %28, i64 5
  %30 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)** %29, align 8
  call void %30(%"class.blink::mojom::blink::CacheStorage"* %14, %"class.mojo::StructPtr"* nonnull %7, %"class.mojo::StructPtr.293"* nonnull %8, i1 zeroext %3, i64 %4, %"class.base::OnceCallback"* nonnull %9) #11
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #11
  %32 = load %"class.blink::mojom::blink::MultiCacheQueryOptions"*, %"class.blink::mojom::blink::MultiCacheQueryOptions"** %20, align 8
  store %"class.blink::mojom::blink::MultiCacheQueryOptions"* null, %"class.blink::mojom::blink::MultiCacheQueryOptions"** %20, align 8
  %33 = icmp eq %"class.blink::mojom::blink::MultiCacheQueryOptions"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsD1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"* nonnull %32) #11
  %35 = getelementptr inbounds %"class.blink::mojom::blink::MultiCacheQueryOptions", %"class.blink::mojom::blink::MultiCacheQueryOptions"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %6, %34
  %37 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  %38 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %37) #11
  %40 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %37 to i8*
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33CacheStorageInterceptorForTesting4OpenERKN3WTF6StringElN4base12OnceCallbackIFvN4mojo9StructPtrINS1_10OpenResultEEEEEE(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), i64, %"class.base::OnceCallback.300"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.300", align 8
  %6 = bitcast %"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)**, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)*, %"class.blink::mojom::blink::CacheStorage"* (%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::CacheStorage"* %9(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback.300", %"class.base::OnceCallback.300"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.300"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.300"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::CacheStorage"* %10 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)***
  %16 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)** %16, i64 6
  %18 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::CacheStorage"* %10, %"class.WTF::String"* dereferenceable(8) %1, i64 %2, %"class.base::OnceCallback.300"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.300", %"class.base::OnceCallback.300"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiterC2EPNS1_12CacheStorageE(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture, %"class.blink::mojom::blink::CacheStorage"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageAsyncWaiter", %"class.blink::mojom::blink::CacheStorageAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::CacheStorage"* %1, %"class.blink::mojom::blink::CacheStorage"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiterD2Ev(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS0_17CacheStorageErrorE(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i64, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.197", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageAsyncWaiter", %"class.blink::mojom::blink::CacheStorageAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #12, !noalias !34
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_6JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS3_17CacheStorageErrorEE3$_6JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !34
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !34
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !34
  %19 = bitcast %"class.base::OnceCallback.197"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !34
  %20 = bitcast %"class.blink::mojom::blink::CacheStorage"* %11 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)***
  %21 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %21, i64 2
  %23 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::CacheStorage"* %11, %"class.WTF::String"* dereferenceable(8) %1, i64 %2, %"class.base::OnceCallback.197"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 190) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS0_17CacheStorageErrorE(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i64, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.197", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageAsyncWaiter", %"class.blink::mojom::blink::CacheStorageAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #12, !noalias !39
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_7JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS3_17CacheStorageErrorEE3$_7JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !39
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !39
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !39
  %19 = bitcast %"class.base::OnceCallback.197"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !39
  %20 = bitcast %"class.blink::mojom::blink::CacheStorage"* %11 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)***
  %21 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %21, i64 3
  %23 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.197"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::CacheStorage"* %11, %"class.WTF::String"* dereferenceable(8) %1, i64 %2, %"class.base::OnceCallback.197"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.197", %"class.base::OnceCallback.197"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 205) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture readonly, i64, %"class.WTF::Vector.61"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback.292", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::Vector.61"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #11
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageAsyncWaiter", %"class.blink::mojom::blink::CacheStorageAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #12, !noalias !44
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.61"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopESC_EEEFvRKSB_EE7RunOnceEPNS0_13BindStateBaseESI_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !44
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !44
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !44
  %18 = bitcast %"class.base::OnceCallback.292"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !44
  %19 = bitcast %"class.blink::mojom::blink::CacheStorage"* %10 to void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)***
  %20 = load void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)** %20, i64 4
  %22 = load void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, i64, %"class.base::OnceCallback.292"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::CacheStorage"* %10, i64 %1, %"class.base::OnceCallback.292"* nonnull %5) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback.292", %"class.base::OnceCallback.292"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 220) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS4_INS1_22MultiCacheQueryOptionsEEEblPNS4_INS1_11MatchResultEEE(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.293"* nocapture, i1 zeroext, i64, %"class.mojo::StructPtr.198"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::StructPtr.293", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.mojo::StructPtr.198"* %5 to i64
  %13 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %14 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageAsyncWaiter", %"class.blink::mojom::blink::CacheStorageAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %14, align 8
  %16 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = bitcast %"class.mojo::StructPtr.293"* %9 to i64*
  %21 = getelementptr inbounds %"class.mojo::StructPtr.293", %"class.mojo::StructPtr.293"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.mojo::StructPtr.293"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %20, align 8
  store i64 0, i64* %22, align 8
  %24 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %25 = call i8* @_Znwm(i64 56) #12, !noalias !49
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.198"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS8_INS5_22MultiCacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_9JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS7_INS4_22MultiCacheQueryOptionsEEEblPNS7_INS4_11MatchResultEEEE3$_9JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !49
  %27 = getelementptr inbounds i8, i8* %25, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8, !noalias !49
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to i64*
  store i64 %12, i64* %30, align 8, !noalias !49
  %31 = bitcast %"class.base::OnceCallback"* %10 to i8**
  store i8* %25, i8** %31, align 8, !alias.scope !49
  %32 = bitcast %"class.blink::mojom::blink::CacheStorage"* %15 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)***
  %33 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)** %33, i64 5
  %35 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.293"*, i1, i64, %"class.base::OnceCallback"*)** %34, align 8
  call void %35(%"class.blink::mojom::blink::CacheStorage"* %15, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::StructPtr.293"* nonnull %9, i1 zeroext %3, i64 %4, %"class.base::OnceCallback"* nonnull %10) #11
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #11
  %37 = load %"class.blink::mojom::blink::MultiCacheQueryOptions"*, %"class.blink::mojom::blink::MultiCacheQueryOptions"** %21, align 8
  store %"class.blink::mojom::blink::MultiCacheQueryOptions"* null, %"class.blink::mojom::blink::MultiCacheQueryOptions"** %21, align 8
  %38 = icmp eq %"class.blink::mojom::blink::MultiCacheQueryOptions"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsD1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"* nonnull %37) #11
  %40 = getelementptr inbounds %"class.blink::mojom::blink::MultiCacheQueryOptions", %"class.blink::mojom::blink::MultiCacheQueryOptions"* %37, i64 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %6, %39
  %42 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  %43 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %42) #11
  %45 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %42 to i8*
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %41, %44
  %47 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 235) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS1_10OpenResultEEE(%"class.blink::mojom::blink::CacheStorageAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i64, %"class.mojo::StructPtr.309"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.300", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.mojo::StructPtr.309"* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageAsyncWaiter", %"class.blink::mojom::blink::CacheStorageAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::CacheStorage"*, %"class.blink::mojom::blink::CacheStorage"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #12, !noalias !54
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.309"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS5_10OpenResultEEEE4$_10JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS4_10OpenResultEEEE4$_10JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !54
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !54
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !54
  %19 = bitcast %"class.base::OnceCallback.300"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !54
  %20 = bitcast %"class.blink::mojom::blink::CacheStorage"* %11 to void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)***
  %21 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)**, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)** %21, i64 6
  %23 = load void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)*, void (%"class.blink::mojom::blink::CacheStorage"*, %"class.WTF::String"*, i64, %"class.base::OnceCallback.300"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::CacheStorage"* %11, %"class.WTF::String"* dereferenceable(8) %1, i64 %2, %"class.base::OnceCallback.300"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.300", %"class.base::OnceCallback.300"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 250) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink17CacheStorageCacheD2Ev(%"class.blink::mojom::blink::CacheStorageCache"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink38CacheStorageCacheInterceptorForTestingD0Ev(%"class.blink::mojom::blink::CacheStorageCacheInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink12CacheStorageD2Ev(%"class.blink::mojom::blink::CacheStorage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink33CacheStorageInterceptorForTestingD0Ev(%"class.blink::mojom::blink::CacheStorageInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14BatchOperationD1Ev(%"class.blink::mojom::blink::BatchOperation"*) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink22MultiCacheQueryOptionsD1Ev(%"class.blink::mojom::blink::MultiCacheQueryOptions"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_0JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.198"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.198"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.198"*, %"class.mojo::StructPtr.198"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.198"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.198", %"class.mojo::StructPtr.198"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::MatchResult"*, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  store %"class.blink::mojom::blink::MatchResult"* null, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::MatchResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.198"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::MatchResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::MatchResult"*, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.198"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::MatchResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::MatchResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEEblPNS7_INS4_11MatchResultEEEE3$_0JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_14MatchAllResultEEEE3$_1JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.237"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.237"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.237"*, %"class.mojo::StructPtr.237"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.237"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.237", %"class.mojo::StructPtr.237"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::MatchAllResult"*, %"class.blink::mojom::blink::MatchAllResult"** %11, align 8
  store %"class.blink::mojom::blink::MatchAllResult"* null, %"class.blink::mojom::blink::MatchAllResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::MatchAllResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.237"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink14MatchAllResultD1Ev(%"class.blink::mojom::blink::MatchAllResult"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::MatchAllResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::MatchAllResult"*, %"class.blink::mojom::blink::MatchAllResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.237"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::MatchAllResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::MatchAllResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink14MatchAllResultD1Ev(%"class.blink::mojom::blink::MatchAllResult"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink14MatchAllResultD1Ev(%"class.blink::mojom::blink::MatchAllResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEElPNS7_INS4_14MatchAllResultEEEE3$_1JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.251"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.251"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.251"*, %"class.mojo::StructPtr.251"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.251"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.251", %"class.mojo::StructPtr.251"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::GetAllMatchedEntriesResult"*, %"class.blink::mojom::blink::GetAllMatchedEntriesResult"** %11, align 8
  store %"class.blink::mojom::blink::GetAllMatchedEntriesResult"* null, %"class.blink::mojom::blink::GetAllMatchedEntriesResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::GetAllMatchedEntriesResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.251"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink26GetAllMatchedEntriesResultD1Ev(%"class.blink::mojom::blink::GetAllMatchedEntriesResult"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::GetAllMatchedEntriesResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::GetAllMatchedEntriesResult"*, %"class.blink::mojom::blink::GetAllMatchedEntriesResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.251"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::GetAllMatchedEntriesResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::GetAllMatchedEntriesResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink26GetAllMatchedEntriesResultD1Ev(%"class.blink::mojom::blink::GetAllMatchedEntriesResult"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink26GetAllMatchedEntriesResultD1Ev(%"class.blink::mojom::blink::GetAllMatchedEntriesResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEElPNS7_INS4_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_15CacheKeysResultEEEE3$_3JPNS_7RunLoopESG_EEEFvSF_EE7RunOnceEPNS0_13BindStateBaseEOSF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.272"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.272"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.272"*, %"class.mojo::StructPtr.272"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.272"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.272", %"class.mojo::StructPtr.272"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::CacheKeysResult"*, %"class.blink::mojom::blink::CacheKeysResult"** %11, align 8
  store %"class.blink::mojom::blink::CacheKeysResult"* null, %"class.blink::mojom::blink::CacheKeysResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::CacheKeysResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.272"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink15CacheKeysResultD1Ev(%"class.blink::mojom::blink::CacheKeysResult"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::CacheKeysResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::CacheKeysResult"*, %"class.blink::mojom::blink::CacheKeysResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.272"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::CacheKeysResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::CacheKeysResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink15CacheKeysResultD1Ev(%"class.blink::mojom::blink::CacheKeysResult"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15CacheKeysResultD1Ev(%"class.blink::mojom::blink::CacheKeysResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEElPNS7_INS4_15CacheKeysResultEEEE3$_3JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS5_14BatchOperationEEELj0ENS7_18PartitionAllocatorEEElPNS9_16InlinedStructPtrINS5_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopESI_EEEFvSH_EE7RunOnceEPNS0_13BindStateBaseEOSH_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::InlinedStructPtr.286"* dereferenceable(24)) #0 align 2 {
  %3 = alloca %"class.mojo::InlinedStructPtr.286", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.mojo::InlinedStructPtr.286"**
  %8 = bitcast %"class.mojo::InlinedStructPtr.286"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %10 = load %"class.mojo::InlinedStructPtr.286"*, %"class.mojo::InlinedStructPtr.286"** %7, align 8
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr.286", %"class.mojo::InlinedStructPtr.286"* %3, i64 0, i32 0
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %11) #11
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr.286", %"class.mojo::InlinedStructPtr.286"* %3, i64 0, i32 1
  store i32 0, i32* %12, align 8
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %11) #11
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %11) #11
  %13 = getelementptr inbounds %"class.mojo::InlinedStructPtr.286", %"class.mojo::InlinedStructPtr.286"* %1, i64 0, i32 0
  call void @_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull dereferenceable(16) %11, %"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16) %13) #11
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr.286", %"class.mojo::InlinedStructPtr.286"* %1, i64 0, i32 1
  %15 = load i32, i32* %12, align 8
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %12, align 8
  store i32 %15, i32* %14, align 4
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr.286", %"class.mojo::InlinedStructPtr.286"* %10, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.mojo::InlinedStructPtr.286", %"class.mojo::InlinedStructPtr.286"* %10, i64 0, i32 0
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* %18) #11
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* %18) #11
  call void @_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16) %18, %"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull dereferenceable(16) %11) #11
  %19 = load i32, i32* %17, align 4
  %20 = load i32, i32* %12, align 8
  store i32 %20, i32* %17, align 4
  store i32 %19, i32* %12, align 8
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %9) #11
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorC1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink5mojom5blink24CacheStorageVerboseErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16), %"class.blink::mojom::blink::CacheStorageVerboseError"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.blink::mojom::blink::CacheStorageVerboseError", align 8
  %4 = bitcast %"class.blink::mojom::blink::CacheStorageVerboseError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = bitcast %"class.blink::mojom::blink::CacheStorageVerboseError"* %3 to i64*
  store i64 -6148914691236517206, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %2, %13, %28
  %31 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %1, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %7, align 8
  %33 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #11
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %30
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.WTF::String"* %33 to i64*
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #11
  br label %73

73:                                               ; preds = %54, %69, %72
  %74 = load i32, i32* %6, align 8
  store i32 %74, i32* %31, align 8
  %75 = getelementptr inbounds %"class.blink::mojom::blink::CacheStorageVerboseError", %"class.blink::mojom::blink::CacheStorageVerboseError"* %1, i64 0, i32 1
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  tail call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %73
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.WTF::String"* %75 to i64*
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  store i64 %96, i64* %97, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #11
  br label %114

114:                                              ; preds = %95, %110, %113
  call void @_ZN5blink5mojom5blink24CacheStorageVerboseErrorD1Ev(%"class.blink::mojom::blink::CacheStorageVerboseError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS4_14BatchOperationEEELj0ENS6_18PartitionAllocatorEEElPNS8_16InlinedStructPtrINS4_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopESH_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS3_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS4_17CacheStorageErrorEE3$_5JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS2_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS3_17CacheStorageErrorEE3$_5JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_6JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS3_17CacheStorageErrorEE3$_6JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_7JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS3_17CacheStorageErrorEE3$_7JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopESC_EEEFvRKSB_EE7RunOnceEPNS0_13BindStateBaseESI_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.61"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector.61"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector.61"*, %"class.WTF::Vector.61"** %6, align 8
  %9 = tail call dereferenceable(16) %"class.WTF::Vector.61"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.61"* %8, %"class.WTF::Vector.61"* dereferenceable(16) %1) #11
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.61"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.61"*, %"class.WTF::Vector.61"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.61"* %1, %0
  br i1 %3, label %219, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #11
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !2

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #11
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !2

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #11
  %108 = bitcast %"class.WTF::Vector.61"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #11
  %112 = bitcast %"class.WTF::Vector.61"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #11
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !3

145:                                              ; preds = %136
  tail call void @llvm.trap() #11
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #11
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  tail call void @llvm.trap() #11
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.61"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS8_INS5_22MultiCacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_9JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.198"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.198"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.198"*, %"class.mojo::StructPtr.198"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.198"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.198", %"class.mojo::StructPtr.198"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::MatchResult"*, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  store %"class.blink::mojom::blink::MatchResult"* null, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::MatchResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.198"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::MatchResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::MatchResult"*, %"class.blink::mojom::blink::MatchResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.198"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::MatchResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::MatchResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink11MatchResultD1Ev(%"class.blink::mojom::blink::MatchResult"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS7_INS4_22MultiCacheQueryOptionsEEEblPNS7_INS4_11MatchResultEEEE3$_9JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS5_10OpenResultEEEE4$_10JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseEOSE_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.mojo::StructPtr.309"* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.mojo::StructPtr.309"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.mojo::StructPtr.309"*, %"class.mojo::StructPtr.309"** %6, align 8
  %9 = bitcast %"class.mojo::StructPtr.309"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 0, i64* %9, align 8
  %11 = getelementptr inbounds %"class.mojo::StructPtr.309", %"class.mojo::StructPtr.309"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::mojom::blink::OpenResult"*, %"class.blink::mojom::blink::OpenResult"** %11, align 8
  store %"class.blink::mojom::blink::OpenResult"* null, %"class.blink::mojom::blink::OpenResult"** %11, align 8
  %13 = icmp eq %"class.blink::mojom::blink::OpenResult"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.mojo::StructPtr.309"* %8 to i64*
  store i64 %10, i64* %15, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  br label %23

16:                                               ; preds = %2
  tail call void @_ZN5blink5mojom5blink10OpenResultD1Ev(%"class.blink::mojom::blink::OpenResult"* nonnull %12) #11
  %17 = bitcast %"class.blink::mojom::blink::OpenResult"* %12 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = load %"class.blink::mojom::blink::OpenResult"*, %"class.blink::mojom::blink::OpenResult"** %11, align 8
  %19 = bitcast %"class.mojo::StructPtr.309"* %8 to i64*
  store i64 %10, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = icmp eq %"class.blink::mojom::blink::OpenResult"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::mojom::blink::OpenResult"* %18 to i8*
  tail call void @_ZN5blink5mojom5blink10OpenResultD1Ev(%"class.blink::mojom::blink::OpenResult"* nonnull %18) #11
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %14, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink10OpenResultD1Ev(%"class.blink::mojom::blink::OpenResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS4_10OpenResultEEEE4$_10JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_0JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_0JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEEblPNS6_INS3_11MatchResultEEEE3$_0JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5MatchEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEEblPNS6_INS3_11MatchResultEEEE3$_0JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_14MatchAllResultEEEE3$_1JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_14MatchAllResultEEEE3$_1JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEElPNS6_INS3_14MatchAllResultEEEE3$_1JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter8MatchAllEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEElPNS6_INS3_14MatchAllResultEEEE3$_1JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEElPNS6_INS3_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter20GetAllMatchedEntriesEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEElPNS6_INS3_26GetAllMatchedEntriesResultEEEE3$_2JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_15CacheKeysResultEEEE3$_3JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEElPNS8_INS5_15CacheKeysResultEEEE3$_3JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEElPNS6_INS3_15CacheKeysResultEEEE3$_3JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter4KeysEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEElPNS6_INS3_15CacheKeysResultEEEE3$_3JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS5_14BatchOperationEEELj0ENS7_18PartitionAllocatorEEElPNS9_16InlinedStructPtrINS5_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopERSI_EEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS5_14BatchOperationEEELj0ENS7_18PartitionAllocatorEEElPNS9_16InlinedStructPtrINS5_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopERSI_EEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS3_14BatchOperationEEELj0ENS5_18PartitionAllocatorEEElPNS7_16InlinedStructPtrINS3_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopERSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter5BatchEN3WTF6VectorIN4mojo9StructPtrINS3_14BatchOperationEEELj0ENS5_18PartitionAllocatorEEElPNS7_16InlinedStructPtrINS3_24CacheStorageVerboseErrorEEEE3$_4JPNS_7RunLoopERSG_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS3_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS4_17CacheStorageErrorEE3$_5JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS3_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS4_17CacheStorageErrorEE3$_5JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS1_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS2_17CacheStorageErrorEE3$_5JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8BindOnceIZN5blink5mojom5blink28CacheStorageCacheAsyncWaiter13WriteSideDataERKNS1_4KURLENS_4TimeEN9mojo_base9BigBufferElPNS2_17CacheStorageErrorEE3$_5JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_6JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_6JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS2_17CacheStorageErrorEE3$_6JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter3HasERKN3WTF6StringElPNS2_17CacheStorageErrorEE3$_6JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_7JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS4_17CacheStorageErrorEE3$_7JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!42 = distinct !{!42, !43, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS2_17CacheStorageErrorEE3$_7JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter6DeleteERKN3WTF6StringElPNS2_17CacheStorageErrorEE3$_7JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!47 = distinct !{!47, !48, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter4KeysElPN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEE3$_8JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS8_INS5_22MultiCacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_9JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS8_INS5_22MultiCacheQueryOptionsEEEblPNS8_INS5_11MatchResultEEEE3$_9JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!52 = distinct !{!52, !53, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS6_INS3_22MultiCacheQueryOptionsEEEblPNS6_INS3_11MatchResultEEEE3$_9JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter5MatchEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS6_INS3_22MultiCacheQueryOptionsEEEblPNS6_INS3_11MatchResultEEEE3$_9JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!54 = !{!55, !57}
!55 = distinct !{!55, !56, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS5_10OpenResultEEEE4$_10JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!56 = distinct !{!56, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS5_10OpenResultEEEE4$_10JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!57 = distinct !{!57, !58, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS3_10OpenResultEEEE4$_10JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!58 = distinct !{!58, !"_ZN4base8BindOnceIZN5blink5mojom5blink23CacheStorageAsyncWaiter4OpenERKN3WTF6StringElPN4mojo9StructPtrINS3_10OpenResultEEEE4$_10JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
