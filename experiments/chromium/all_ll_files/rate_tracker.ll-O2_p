; ModuleID = '../../third_party/webrtc/rtc_base/rate_tracker.cc'
source_filename = "../../third_party/webrtc/rtc_base/rate_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::RateTracker" = type { i32 (...)**, i64, i64, i64*, i64, i64, i64, i64 }

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

@_ZTVN3rtc11RateTrackerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::RateTracker"*)* @_ZN3rtc11RateTrackerD2Ev to i8*), i8* bitcast (void (%"class.rtc::RateTracker"*)* @_ZN3rtc11RateTrackerD0Ev to i8*), i8* bitcast (i64 (%"class.rtc::RateTracker"*)* @_ZNK3rtc11RateTracker4TimeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [50 x i8] c"../../third_party/webrtc/rtc_base/rate_tracker.cc\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"bucket_milliseconds > 0\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"bucket_count > 0\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1

@_ZN3rtc11RateTrackerC1Elm = hidden unnamed_addr alias void (%"class.rtc::RateTracker"*, i64, i64), void (%"class.rtc::RateTracker"*, i64, i64)* @_ZN3rtc11RateTrackerC2Elm
@_ZN3rtc11RateTrackerD1Ev = hidden unnamed_addr alias void (%"class.rtc::RateTracker"*), void (%"class.rtc::RateTracker"*)* @_ZN3rtc11RateTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11RateTrackerC2Elm(%"class.rtc::RateTracker"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3rtc11RateTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %8 = add i64 %2, 1
  %9 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %8, i64 8)
  %10 = extractvalue { i64, i1 } %9, 1
  %11 = extractvalue { i64, i1 } %9, 0
  %12 = select i1 %10, i64 -1, i64 %11
  %13 = tail call i8* @_Znam(i64 %12) #7
  %14 = bitcast i64** %7 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 4
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 6
  store i64 -1, i64* %16, align 8
  %17 = icmp sgt i64 %1, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %3
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #8
  unreachable

19:                                               ; preds = %3
  %20 = icmp eq i64 %2, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 29, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #8
  unreachable

22:                                               ; preds = %19
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11RateTrackerD2Ev(%"class.rtc::RateTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3rtc11RateTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %6, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11RateTrackerD0Ev(%"class.rtc::RateTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3rtc11RateTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.rtc::RateTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK3rtc11RateTracker22ComputeRateForIntervalEl(%"class.rtc::RateTracker"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 6
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, -1
  br i1 %5, label %83, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.rtc::RateTracker"* %0 to i64 (%"class.rtc::RateTracker"*)***
  %8 = load i64 (%"class.rtc::RateTracker"*)**, i64 (%"class.rtc::RateTracker"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %8, i64 2
  %10 = load i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %9, align 8
  %11 = tail call i64 %10(%"class.rtc::RateTracker"* %0) #9
  %12 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = mul nsw i64 %15, %13
  %17 = icmp slt i64 %16, %1
  %18 = select i1 %17, i64 %16, i64 %1
  %19 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 7
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %18, %20
  %22 = icmp sgt i64 %11, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %6
  %24 = load i64, i64* %3, align 8
  %25 = add i64 %16, %11
  %26 = sub i64 %25, %18
  %27 = sub i64 %26, %24
  %28 = sdiv i64 %27, %13
  %29 = srem i64 %27, %13
  br label %39

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = tail call i64 @_ZN3rtc8TimeDiffEll(i64 %11, i64 %20) #9
  %34 = load i64, i64* %12, align 8
  %35 = icmp slt i64 %33, %34
  br i1 %35, label %83, label %36

36:                                               ; preds = %30
  %37 = sub i64 %15, %32
  %38 = load i64, i64* %14, align 8
  br label %39

39:                                               ; preds = %36, %23
  %40 = phi i64 [ %13, %23 ], [ %34, %36 ]
  %41 = phi i64 [ %15, %23 ], [ %38, %36 ]
  %42 = phi i64 [ %18, %23 ], [ %33, %36 ]
  %43 = phi i64 [ %28, %23 ], [ %37, %36 ]
  %44 = phi i64 [ %29, %23 ], [ 0, %36 ]
  %45 = icmp ugt i64 %43, %41
  %46 = icmp eq i64 %42, 0
  %47 = or i1 %46, %45
  br i1 %47, label %83, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  %52 = add i64 %51, %43
  %53 = add i64 %41, 1
  %54 = urem i64 %52, %53
  %55 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 %54
  %58 = load i64, i64* %57, align 8
  %59 = sub nsw i64 %40, %44
  %60 = mul nsw i64 %59, %58
  %61 = ashr i64 %40, 1
  %62 = add nsw i64 %60, %61
  %63 = sdiv i64 %62, %40
  %64 = add nuw i64 %54, 1
  %65 = urem i64 %64, %53
  %66 = urem i64 %51, %53
  %67 = icmp eq i64 %65, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %74, %48
  %69 = phi i64 [ %63, %48 ], [ %79, %74 ]
  %70 = mul nsw i64 %69, 1000
  %71 = sitofp i64 %70 to double
  %72 = sitofp i64 %42 to double
  %73 = fdiv double %71, %72
  br label %83

74:                                               ; preds = %48, %74
  %75 = phi i64 [ %81, %74 ], [ %65, %48 ]
  %76 = phi i64 [ %79, %74 ], [ %63, %48 ]
  %77 = getelementptr inbounds i64, i64* %56, i64 %75
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, %76
  %80 = add i64 %75, 1
  %81 = urem i64 %80, %53
  %82 = icmp eq i64 %81, %66
  br i1 %82, label %68, label %74

83:                                               ; preds = %68, %30, %39, %2
  %84 = phi double [ 0.000000e+00, %2 ], [ %73, %68 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %39 ]
  ret double %84
}

declare i64 @_ZN3rtc8TimeDiffEll(i64, i64) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3rtc11RateTracker15NextBucketIndexEm(%"class.rtc::RateTracker"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = add i64 %1, 1
  %4 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  %7 = urem i64 %3, %6
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK3rtc11RateTracker16ComputeTotalRateEv(%"class.rtc::RateTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.rtc::RateTracker"* %0 to i64 (%"class.rtc::RateTracker"*)***
  %7 = load i64 (%"class.rtc::RateTracker"*)**, i64 (%"class.rtc::RateTracker"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %7, i64 2
  %9 = load i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %8, align 8
  %10 = tail call i64 %9(%"class.rtc::RateTracker"* %0) #9
  %11 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = icmp sgt i64 %10, %12
  br i1 %13, label %14, label %22

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %16, 1000
  %18 = uitofp i64 %17 to double
  %19 = tail call i64 @_ZN3rtc8TimeDiffEll(i64 %10, i64 %12) #9
  %20 = sitofp i64 %19 to double
  %21 = fdiv double %18, %20
  br label %22

22:                                               ; preds = %14, %5, %1
  %23 = phi double [ 0.000000e+00, %1 ], [ %21, %14 ], [ 0.000000e+00, %5 ]
  ret double %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3rtc11RateTracker16TotalSampleCountEv(%"class.rtc::RateTracker"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11RateTracker10AddSamplesEl(%"class.rtc::RateTracker"*, i64) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.rtc::RateTracker"* %0 to i64 (%"class.rtc::RateTracker"*)***
  %4 = load i64 (%"class.rtc::RateTracker"*)**, i64 (%"class.rtc::RateTracker"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %4, i64 2
  %6 = load i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %5, align 8
  %7 = tail call i64 %6(%"class.rtc::RateTracker"* %0) #9
  %8 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %11, label %20

11:                                               ; preds = %2
  %12 = load i64 (%"class.rtc::RateTracker"*)**, i64 (%"class.rtc::RateTracker"*)*** %3, align 8
  %13 = getelementptr inbounds i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %12, i64 2
  %14 = load i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %13, align 8
  %15 = tail call i64 %14(%"class.rtc::RateTracker"* %0) #9
  %16 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 7
  store i64 %15, i64* %16, align 8
  store i64 %15, i64* %8, align 8
  %17 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %19 = load i64*, i64** %18, align 8
  store i64 0, i64* %19, align 8
  br label %20

20:                                               ; preds = %11, %2
  %21 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  br label %26

26:                                               ; preds = %33, %20
  %27 = phi i64 [ %22, %20 ], [ %41, %33 ]
  %28 = phi i64 [ 0, %20 ], [ %40, %33 ]
  %29 = load i64, i64* %8, align 8
  %30 = load i64, i64* %23, align 8
  %31 = add nsw i64 %30, %29
  %32 = icmp sgt i64 %31, %7
  br i1 %32, label %46, label %33

33:                                               ; preds = %26
  store i64 %31, i64* %8, align 8
  %34 = load i64, i64* %24, align 8
  %35 = add i64 %34, 1
  %36 = add i64 %27, 1
  %37 = urem i64 %35, %36
  store i64 %37, i64* %24, align 8
  %38 = load i64*, i64** %25, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 %37
  store i64 0, i64* %39, align 8
  %40 = add i64 %28, 1
  %41 = load i64, i64* %21, align 8
  %42 = icmp ugt i64 %40, %41
  br i1 %42, label %43, label %26

43:                                               ; preds = %33
  %44 = load i64, i64* %23, align 8
  %45 = load i64, i64* %8, align 8
  br label %46

46:                                               ; preds = %26, %43
  %47 = phi i64 [ %45, %43 ], [ %29, %26 ]
  %48 = phi i64 [ %44, %43 ], [ %30, %26 ]
  %49 = sub nsw i64 %7, %47
  %50 = srem i64 %49, %48
  %51 = sub i64 %7, %50
  store i64 %51, i64* %8, align 8
  %52 = load i64*, i64** %25, align 8
  %53 = load i64, i64* %24, align 8
  %54 = getelementptr inbounds i64, i64* %52, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, %1
  store i64 %56, i64* %54, align 8
  %57 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, %1
  store i64 %59, i64* %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11RateTracker16AddSamplesAtTimeEll(%"class.rtc::RateTracker"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 6
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, -1
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = bitcast %"class.rtc::RateTracker"* %0 to i64 (%"class.rtc::RateTracker"*)***
  %9 = load i64 (%"class.rtc::RateTracker"*)**, i64 (%"class.rtc::RateTracker"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %9, i64 2
  %11 = load i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %10, align 8
  %12 = tail call i64 %11(%"class.rtc::RateTracker"* %0) #9
  %13 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 7
  store i64 %12, i64* %13, align 8
  store i64 %12, i64* %4, align 8
  %14 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %16 = load i64*, i64** %15, align 8
  store i64 0, i64* %16, align 8
  br label %17

17:                                               ; preds = %3, %7
  %18 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  br label %23

23:                                               ; preds = %17, %45
  %24 = phi i64 [ %19, %17 ], [ %53, %45 ]
  %25 = phi i64 [ 0, %17 ], [ %52, %45 ]
  %26 = load i64, i64* %4, align 8
  %27 = load i64, i64* %20, align 8
  %28 = add nsw i64 %27, %26
  %29 = icmp sgt i64 %28, %1
  br i1 %29, label %30, label %45

30:                                               ; preds = %23, %55
  %31 = phi i64 [ %57, %55 ], [ %26, %23 ]
  %32 = phi i64 [ %56, %55 ], [ %27, %23 ]
  %33 = sub nsw i64 %1, %31
  %34 = srem i64 %33, %32
  %35 = sub i64 %31, %34
  %36 = add i64 %35, %33
  store i64 %36, i64* %4, align 8
  %37 = load i64*, i64** %22, align 8
  %38 = load i64, i64* %21, align 8
  %39 = getelementptr inbounds i64, i64* %37, i64 %38
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, %2
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 4
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, %2
  store i64 %44, i64* %42, align 8
  ret void

45:                                               ; preds = %23
  store i64 %28, i64* %4, align 8
  %46 = load i64, i64* %21, align 8
  %47 = add i64 %46, 1
  %48 = add i64 %24, 1
  %49 = urem i64 %47, %48
  store i64 %49, i64* %21, align 8
  %50 = load i64*, i64** %22, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 %49
  store i64 0, i64* %51, align 8
  %52 = add i64 %25, 1
  %53 = load i64, i64* %18, align 8
  %54 = icmp ugt i64 %52, %53
  br i1 %54, label %55, label %23

55:                                               ; preds = %45
  %56 = load i64, i64* %20, align 8
  %57 = load i64, i64* %4, align 8
  br label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc11RateTracker17EnsureInitializedEv(%"class.rtc::RateTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = bitcast %"class.rtc::RateTracker"* %0 to i64 (%"class.rtc::RateTracker"*)***
  %7 = load i64 (%"class.rtc::RateTracker"*)**, i64 (%"class.rtc::RateTracker"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %7, i64 2
  %9 = load i64 (%"class.rtc::RateTracker"*)*, i64 (%"class.rtc::RateTracker"*)** %8, align 8
  %10 = tail call i64 %9(%"class.rtc::RateTracker"* %0) #9
  %11 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 7
  store i64 %10, i64* %11, align 8
  store i64 %10, i64* %2, align 8
  %12 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 5
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.rtc::RateTracker", %"class.rtc::RateTracker"* %0, i64 0, i32 3
  %14 = load i64*, i64** %13, align 8
  store i64 0, i64* %14, align 8
  br label %15

15:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3rtc11RateTracker4TimeEv(%"class.rtc::RateTracker"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN3rtc10TimeMillisEv() #9
  ret i64 %2
}

declare i64 @_ZN3rtc10TimeMillisEv() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
