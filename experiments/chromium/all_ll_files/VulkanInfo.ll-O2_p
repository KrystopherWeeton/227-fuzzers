; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/VulkanInfo.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/VulkanInfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.dawn_native::vulkan::VulkanGlobalKnobs" = type { %"class.ityp::bitset", %"class.ityp::array", %"class.ityp::bitset.0" }
%"class.ityp::bitset" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x %"class.ityp::bitset.0"] }
%"class.ityp::bitset.0" = type { %"class.std::__1::bitset.1" }
%"class.std::__1::bitset.1" = type { %"class.std::__1::__bitset.2" }
%"class.std::__1::__bitset.2" = type { i64 }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset.3" }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset.3" = type { %"class.std::__1::bitset.4" }
%"class.std::__1::bitset.4" = type { %"class.std::__1::__bitset.5" }
%"class.std::__1::__bitset.5" = type { i64 }
%class.Result = type { i32, %"class.std::__1::unique_ptr", %"struct.dawn_native::vulkan::VulkanGlobalInfo" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.14" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.16" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.dawn_native::vulkan::VulkanGlobalInfo" = type <{ %"struct.dawn_native::vulkan::VulkanGlobalKnobs", i32, [4 x i8] }>
%"class.dawn_native::vulkan::Backend" = type { %"class.dawn_native::BackendConnection.base", %class.DynamicLib, %"struct.dawn_native::vulkan::VulkanGlobalInfo", %struct.VkInstance_T*, %"struct.dawn_native::vulkan::VulkanFunctions", %"class.dawn_native::vulkan::detail::VkHandle", %"class.std::__1::vector" }
%"class.dawn_native::BackendConnection.base" = type <{ i32 (...)**, %"class.dawn_native::InstanceBase"*, i32 }>
%"class.dawn_native::InstanceBase" = type opaque
%class.DynamicLib = type { i8* }
%struct.VkInstance_T = type opaque
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkDevice_T = type opaque
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkDebugUtilsMessengerEXT_T* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.VkPhysicalDevice_T** }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%class.Result.29 = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.46", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float }
%"class.std::__1::unordered_map.49" = type { %"class.std::__1::__hash_table.50" }
%"class.std::__1::__hash_table.50" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base.54"** }
%"struct.std::__1::__hash_node_base.54" = type { %"struct.std::__1::__hash_node_base.54"* }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::__bucket_list_deallocator.56" }
%"class.std::__1::__bucket_list_deallocator.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.54" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%class.Result.73 = type { i32, %"class.std::__1::unique_ptr", %"class.ityp::bitset.0" }
%"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator" = type { %"class.std::__1::bitset", i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.dawn_native::vulkan::VulkanLayerInfo" = type { i32, i8* }
%class.Result.74 = type { i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector" }
%class.Result.98 = type { i32, %"class.std::__1::unique_ptr", %"struct.dawn_native::vulkan::VulkanDeviceInfo" }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector.77", %"class.std::__1::vector.84", %"class.std::__1::vector.91", %"class.std::__1::vector.22" }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.VkLayerProperties* }
%"class.dawn_native::vulkan::Adapter" = type { %"class.dawn_native::AdapterBase.base", %struct.VkPhysicalDevice_T*, %"class.dawn_native::vulkan::Backend"*, %"struct.dawn_native::vulkan::VulkanDeviceInfo" }
%"class.dawn_native::AdapterBase.base" = type <{ i32 (...)**, %"struct.dawn_native::PCIInfo", i32, [4 x i8], %"class.std::__1::basic_string", %"struct.dawn_native::ExtensionsSet", %"class.dawn_native::InstanceBase"*, i32 }>
%"struct.dawn_native::PCIInfo" = type { i32, i32, %"class.std::__1::basic_string" }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.75" }
%"class.std::__1::bitset.75" = type { %"class.std::__1::__bitset.76" }
%"class.std::__1::__bitset.76" = type { i64 }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %struct.VkExtensionProperties* }
%"class.std::__1::unordered_map.106" = type { %"class.std::__1::__hash_table.107" }
%"class.std::__1::__hash_table.107" = type <{ %"class.std::__1::unique_ptr.108", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.126", [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base.111"** }
%"struct.std::__1::__hash_node_base.111" = type { %"struct.std::__1::__hash_node_base.111"* }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__bucket_list_deallocator.113" }
%"class.std::__1::__bucket_list_deallocator.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base.111" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%struct.VkBaseOutStructure = type { i32, %struct.VkBaseOutStructure* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.Result.136 = type { i32, %"class.std::__1::unique_ptr", %"struct.dawn_native::vulkan::VulkanSurfaceInfo" }
%"struct.dawn_native::vulkan::VulkanSurfaceInfo" = type { %struct.VkSurfaceCapabilitiesKHR, %"class.std::__1::vector.137", %"class.std::__1::vector.144", %"class.std::__1::vector.151" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %struct.VkSurfaceFormatKHR* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { i32*, i32*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { i32* }
%"class.std::__1::vector.151" = type { i64*, i64, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__bit_iterator.178" = type <{ i64*, i32, [4 x i8] }>

$_ZNSt3__16vectorI12VkMemoryTypeNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorI12VkMemoryHeapNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_ = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__16vectorI18VkSurfaceFormatKHRNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI16VkPresentModeKHRNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZZN14BitSetIteratorILm4EN11dawn_native6vulkan11VulkanLayerEE8Iterator10getNextBitEvE8wordMask = comdat any

@.str = private unnamed_addr constant [35 x i8] c"vkEnumerateInstanceLayerProperties\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/VulkanInfo.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE = private unnamed_addr constant [17 x i8] c"GatherGlobalInfo\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"vkEnumeratePhysicalDevices\00", align 1
@__func__._ZN11dawn_native6vulkan18GetPhysicalDevicesERKNS0_7BackendE = private unnamed_addr constant [19 x i8] c"GetPhysicalDevices\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"vkEnumerateDeviceLayerProperties\00", align 1
@__func__._ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE = private unnamed_addr constant [17 x i8] c"GatherDeviceInfo\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"vkEnumerateDeviceExtensionProperties\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"vkGetPhysicalDeviceSurfaceCapabilitiesKHR\00", align 1
@__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE = private unnamed_addr constant [18 x i8] c"GatherSurfaceInfo\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceSurfaceSupportKHR\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"vkGetPhysicalDeviceSurfaceFormatsKHR\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"vkGetPhysicalDeviceSurfacePresentModesKHR\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"vkEnumerateInstanceExtensionProperties\00", align 1
@__func__._ZN11dawn_native6vulkan12_GLOBAL__N_124GatherInstanceExtensionsEPKcRKNS0_15VulkanFunctionsERKNSt3__113unordered_mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS0_11InstanceExtENS7_4hashISE_EENS7_8equal_toISE_EENSC_INS7_4pairIKSE_SF_EEEEEE = private unnamed_addr constant [25 x i8] c"GatherInstanceExtensions\00", align 1
@_ZZN14BitSetIteratorILm4EN11dawn_native6vulkan11VulkanLayerEE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native6vulkan17VulkanGlobalKnobs6HasExtENS0_11InstanceExtE(%"struct.dawn_native::vulkan::VulkanGlobalKnobs"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalKnobs", %"struct.dawn_native::vulkan::VulkanGlobalKnobs"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = shl i64 1, %3
  %6 = load i64, i64* %4, align 8
  %7 = and i64 %6, %5
  %8 = icmp ne i64 %7, 0
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native6vulkan17VulkanDeviceKnobs6HasExtENS0_9DeviceExtE(%"struct.dawn_native::vulkan::VulkanDeviceKnobs"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %"struct.dawn_native::vulkan::VulkanDeviceKnobs"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = shl i64 1, %3
  %6 = load i64, i64* %4, align 8
  %7 = and i64 %6, %5
  %8 = icmp ne i64 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::Backend"* dereferenceable(1536)) local_unnamed_addr #1 {
  %3 = alloca %"class.std::__1::__bit_iterator", align 8
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"struct.dawn_native::vulkan::VulkanGlobalInfo", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %class.Result.29, align 8
  %16 = alloca %"class.std::__1::unordered_map", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::unordered_map.49", align 8
  %19 = alloca %class.Result.73, align 8
  %20 = alloca %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator", align 8
  %21 = alloca %class.Result.73, align 8
  %22 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #12
  %23 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 56, i1 false)
  %24 = tail call dereferenceable(1408) %"struct.dawn_native::vulkan::VulkanFunctions"* @_ZNK11dawn_native6vulkan7Backend12GetFunctionsEv(%"class.dawn_native::vulkan::Backend"* %1) #12
  %25 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #12
  store i32 4194304, i32* %12, align 4
  %26 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %24, i64 0, i32 5
  %27 = load i32 (i32*)*, i32 (i32*)** %26, align 8
  %28 = icmp eq i32 (i32*)* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %2
  %30 = call i32 %27(i32* nonnull %12) #12
  %31 = load i32, i32* %12, align 4
  %32 = icmp ugt i32 %31, 4198399
  %33 = select i1 %32, i32 4198400, i32 4194304
  br label %34

34:                                               ; preds = %29, %2
  %35 = phi i32 [ 4194304, %2 ], [ %33, %29 ]
  %36 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 1
  store i32 %35, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #12
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #12
  store i32 0, i32* %13, align 4
  %38 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %24, i64 0, i32 3
  %39 = load i32 (i32*, %struct.VkLayerProperties*)*, i32 (i32*, %struct.VkLayerProperties*)** %38, align 8
  %40 = call i32 %39(i32* nonnull %13, %struct.VkLayerProperties* null) #12
  switch i32 %40, label %41 [
    i32 0, label %60
    i32 5, label %60
  ]

41:                                               ; preds = %34
  %42 = call i8* @_Znwm(i64 48) #13
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast i64* %44 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 34, i1 false) #12
  %46 = getelementptr inbounds i8, i8* %42, i64 34
  store i8 0, i8* %46, align 1
  %47 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE, i64 0, i64 0), i32 90) #12
  %48 = ptrtoint %"class.dawn_native::ErrorData"* %47 to i64
  %49 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %49, align 8
  %50 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %48, i64* %51, align 8
  %52 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %53 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 48, i1 false) #12
  %54 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %208

58:                                               ; preds = %41
  %59 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %59) #13
  br label %208

60:                                               ; preds = %34, %34
  %61 = load i32, i32* %13, align 4
  %62 = zext i32 %61 to i64
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %78, label %64

64:                                               ; preds = %60
  %65 = mul nuw nsw i64 %62, 520
  %66 = call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to %struct.VkLayerProperties*
  %68 = ptrtoint i8* %66 to i64
  %69 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %67, i64 %62
  %70 = add nsw i64 %62, -1
  %71 = sub i64 0, %68
  %72 = getelementptr %struct.VkLayerProperties, %struct.VkLayerProperties* %67, i64 %70, i32 0, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = urem i64 %73, 520
  %75 = add i64 %73, 520
  %76 = sub i64 %75, %74
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 0, i64 %76, i1 false) #12
  %77 = ptrtoint %struct.VkLayerProperties* %69 to i64
  br label %78

78:                                               ; preds = %60, %64
  %79 = phi i64 [ 0, %60 ], [ %77, %64 ]
  %80 = phi %struct.VkLayerProperties* [ null, %60 ], [ %67, %64 ]
  %81 = bitcast %class.Result.29* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  %82 = getelementptr inbounds %class.Result.29, %class.Result.29* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %82, align 8
  %83 = load i32 (i32*, %struct.VkLayerProperties*)*, i32 (i32*, %struct.VkLayerProperties*)** %38, align 8
  %84 = call i32 %83(i32* nonnull %13, %struct.VkLayerProperties* %80) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %15, i32 %84, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #12
  %85 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %82, align 8
  %86 = icmp eq %"class.dawn_native::ErrorData"* %85, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %82, align 8
  br i1 %86, label %117, label %87, !prof !2

87:                                               ; preds = %78
  %88 = ptrtoint %"class.dawn_native::ErrorData"* %85 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %85, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE, i64 0, i64 0), i32 96) #12
  %89 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %89, align 8
  %90 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %91 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  store i64 %88, i64* %91, align 8
  %92 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %93 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 48, i1 false) #12
  %94 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %82, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %82, align 8
  %95 = icmp eq %"class.dawn_native::ErrorData"* %94, null
  br i1 %95, label %116, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 2, i32 0, i32 0
  %98 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %97, align 8
  %99 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %98 to i64
  %102 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 2, i32 0, i32 1
  %103 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %98 to i8*
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %100, %96
  %106 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #13
  br label %114

114:                                              ; preds = %111, %105
  %115 = bitcast %"class.dawn_native::ErrorData"* %94 to i8*
  call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %87, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  br label %203

117:                                              ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  %118 = bitcast %"class.std::__1::unordered_map"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %118) #12
  %119 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0, i32 3, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unordered_map"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0, i32 4, i64 0
  %124 = bitcast i8* %123 to i32*
  store i32 -1431655766, i32* %124, align 4
  call void @_ZN11dawn_native6vulkan24CreateVulkanLayerNameMapEv(%"class.std::__1::unordered_map"* nonnull sret %16) #12
  %125 = inttoptr i64 %79 to %struct.VkLayerProperties*
  %126 = icmp eq %struct.VkLayerProperties* %80, %125
  br i1 %126, label %136, label %127

127:                                              ; preds = %117
  %128 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %16, i64 0, i32 0
  %135 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %160

136:                                              ; preds = %200, %117
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base"* %137, null
  br i1 %138, label %154, label %139

139:                                              ; preds = %136, %151
  %140 = phi %"struct.std::__1::__hash_node_base"* [ %142, %151 ], [ %137, %136 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %140, i64 0, i32 0
  %142 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %140, i64 2
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %139
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %143 to i8**
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %148, %139
  %152 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i8*
  call void @_ZdlPv(i8* %152) #13
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %142, null
  br i1 %153, label %154, label %139

154:                                              ; preds = %151, %136
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %119, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %119, align 8
  %156 = icmp eq %"struct.std::__1::__hash_node_base"** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast %"struct.std::__1::__hash_node_base"** %155 to i8*
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %118) #12
  br label %203

160:                                              ; preds = %127, %200
  %161 = phi %struct.VkLayerProperties* [ %80, %127 ], [ %201, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #12
  %162 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %161, i64 0, i32 0, i64 0
  %163 = call i64 @strlen(i8* %162) #12
  %164 = icmp ugt i64 %163, -17
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  %166 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %166) #14
  unreachable

167:                                              ; preds = %160
  %168 = icmp ult i64 %163, 23
  br i1 %168, label %174, label %169

169:                                              ; preds = %167
  %170 = add nuw i64 %163, 16
  %171 = and i64 %170, -16
  %172 = call i8* @_Znwm(i64 %171) #13
  store i8* %172, i8** %129, align 8
  %173 = or i64 %171, -9223372036854775808
  store i64 %173, i64* %130, align 8
  store i64 %163, i64* %131, align 8
  br label %177

174:                                              ; preds = %167
  %175 = trunc i64 %163 to i8
  store i8 %175, i8* %133, align 1
  %176 = icmp eq i64 %163, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %174, %169
  %178 = phi i8* [ %172, %169 ], [ %128, %174 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %178, i8* align 1 %162, i64 %163, i1 false) #12
  br label %179

179:                                              ; preds = %174, %177
  %180 = phi i8* [ %128, %174 ], [ %178, %177 ]
  %181 = getelementptr inbounds i8, i8* %180, i64 %163
  store i8 0, i8* %181, align 1
  %182 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table"* nonnull %134, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #12
  %183 = load i8, i8* %133, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  %186 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %186) #13
  br label %187

187:                                              ; preds = %179, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #12
  %188 = icmp eq %"struct.std::__1::__hash_node_base"* %182, null
  br i1 %188, label %200, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %182, i64 5
  %191 = bitcast %"struct.std::__1::__hash_node_base"* %190 to i32*
  %192 = load i32, i32* %191, align 8
  %193 = icmp ugt i32 %192, 3
  br i1 %193, label %194, label %195

194:                                              ; preds = %189
  call void @abort() #14
  unreachable

195:                                              ; preds = %189
  %196 = sext i32 %192 to i64
  %197 = shl i64 1, %196
  %198 = load i64, i64* %135, align 8
  %199 = or i64 %198, %197
  store i64 %199, i64* %135, align 8
  br label %200

200:                                              ; preds = %187, %195
  %201 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %161, i64 1
  %202 = icmp eq %struct.VkLayerProperties* %201, %125
  br i1 %202, label %136, label %160

203:                                              ; preds = %116, %159
  %204 = phi i32 [ 0, %159 ], [ 1, %116 ]
  %205 = icmp eq %struct.VkLayerProperties* %80, null
  br i1 %205, label %209, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %80, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %207) #13
  br label %209

208:                                              ; preds = %41, %58
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  br label %449

209:                                              ; preds = %206, %203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #12
  %210 = icmp eq i32 %204, 0
  br i1 %210, label %211, label %449

211:                                              ; preds = %209
  %212 = bitcast %"class.std::__1::unordered_map.49"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %212) #12
  %213 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %18, i64 0, i32 0, i32 3, i32 0, i32 0
  %216 = bitcast %"class.std::__1::unordered_map.49"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %215, align 8
  %217 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %18, i64 0, i32 0, i32 4, i64 0
  %218 = bitcast i8* %217 to i32*
  store i32 -1431655766, i32* %218, align 4
  call void @_ZN11dawn_native6vulkan24CreateInstanceExtNameMapEv(%"class.std::__1::unordered_map.49"* nonnull sret %18) #12
  %219 = bitcast %class.Result.73* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN11dawn_native6vulkan12_GLOBAL__N_124GatherInstanceExtensionsEPKcRKNS0_15VulkanFunctionsERKNSt3__113unordered_mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS0_11InstanceExtENS7_4hashISE_EENS7_8equal_toISE_EENSC_INS7_4pairIKSE_SF_EEEEEE(%class.Result.73* nonnull sret %19, i8* null, %"struct.dawn_native::vulkan::VulkanFunctions"* dereferenceable(1408) %24, %"class.std::__1::unordered_map.49"* nonnull dereferenceable(40) %18)
  %220 = getelementptr inbounds %class.Result.73, %class.Result.73* %19, i64 0, i32 0
  %221 = load i32, i32* %220, align 8
  %222 = icmp eq i32 %221, 1
  store i32 2, i32* %220, align 8
  br i1 %222, label %251, label %223, !prof !3

223:                                              ; preds = %211
  %224 = getelementptr inbounds %class.Result.73, %class.Result.73* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %226 = load i64, i64* %224, align 8
  store i64 %226, i64* %225, align 8
  %227 = getelementptr inbounds %class.Result.73, %class.Result.73* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %228 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %227, align 8
  %229 = bitcast %"class.dawn_native::ErrorData"* %228 to i8*
  %230 = getelementptr inbounds %class.Result.73, %class.Result.73* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %230, align 8
  %231 = icmp eq %"class.dawn_native::ErrorData"* %228, null
  br i1 %231, label %260, label %232

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %228, i64 0, i32 2, i32 0, i32 0
  %234 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %233, align 8
  %235 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %234, null
  br i1 %235, label %241, label %236

236:                                              ; preds = %232
  %237 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %234 to i64
  %238 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %228, i64 0, i32 2, i32 0, i32 1
  %239 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %238 to i64*
  store i64 %237, i64* %239, align 8
  %240 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %234 to i8*
  call void @_ZdlPv(i8* %240) #13
  br label %241

241:                                              ; preds = %236, %232
  %242 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %228, i64 0, i32 1
  %243 = bitcast %"class.std::__1::basic_string"* %242 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %243, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %249) #13
  br label %250

250:                                              ; preds = %247, %241
  call void @_ZdlPv(i8* %229) #13
  br label %260

251:                                              ; preds = %211
  %252 = getelementptr inbounds %class.Result.73, %class.Result.73* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %253 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %252, align 8
  %254 = ptrtoint %"class.dawn_native::ErrorData"* %253 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %253, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE, i64 0, i64 0), i32 112) #12
  %255 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %255, align 8
  %256 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %257 = bitcast %"class.std::__1::unique_ptr"* %256 to i64*
  store i64 %254, i64* %257, align 8
  %258 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %259 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %258 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 48, i1 false) #12
  br label %416

260:                                              ; preds = %223, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #12
  %261 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 2
  %262 = load i32, i32* %36, align 8
  call void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_11InstanceExtELm12EEEj(%"class.ityp::bitset.0"* %261, i32 %262) #12
  %263 = call i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_11InstanceExtELm12EEE(%"class.ityp::bitset.0"* dereferenceable(8) %261) #12
  %264 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load i64, i64* %265, align 8, !noalias !4
  %267 = bitcast %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #12
  %268 = getelementptr inbounds %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator", %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator"* %20, i64 0, i32 0, i32 0, i32 0
  %269 = getelementptr inbounds %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator", %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator"* %20, i64 0, i32 1
  %270 = getelementptr inbounds %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator", %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator"* %20, i64 0, i32 2
  store i64 %266, i64* %268, align 8, !alias.scope !7
  %271 = bitcast i64* %269 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %271, i8 0, i64 16, i1 false) #12, !alias.scope !7
  %272 = and i64 %266, 15
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %307, label %274

274:                                              ; preds = %260
  %275 = ptrtoint %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator"* %20 to i64
  %276 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %277 = bitcast %"class.std::__1::__bit_iterator"* %3 to i8*
  %278 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %279 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %280 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %281 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %282 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %283 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %284 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %285 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  br label %286

286:                                              ; preds = %298, %274
  %287 = phi i64 [ %266, %274 ], [ %300, %298 ]
  %288 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EN11dawn_native6vulkan11VulkanLayerEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %289 = and i64 %288, %287
  %290 = and i64 %289, 4294967295
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %286
  %293 = trunc i64 %289 to i32
  %294 = call i32 @_Z11ScanForwardj(i32 %293) #12
  %295 = zext i32 %294 to i64
  %296 = load i64, i64* %270, align 8, !alias.scope !7
  %297 = add i64 %296, %295
  br label %304

298:                                              ; preds = %286
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %276) #12, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %277) #12, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #12, !noalias !7
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %279) #12, !noalias !7
  store i64 %275, i64* %280, align 8, !noalias !10
  store i32 4, i32* %281, align 8, !noalias !10
  store i64 %275, i64* %282, align 8, !noalias !10
  store i32 4, i32* %283, align 8, !noalias !10
  store i64 %275, i64* %284, align 8, !noalias !10
  store i32 0, i32* %285, align 8, !noalias !10
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %6, %"class.std::__1::__bit_iterator"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %277) #12, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #12, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %279) #12, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %276) #12, !noalias !7
  %299 = load i64, i64* %268, align 8, !alias.scope !7
  %300 = and i64 %299, -16
  store i64 %300, i64* %268, align 8, !alias.scope !7
  %301 = load i64, i64* %270, align 8, !alias.scope !7
  %302 = add i64 %301, 32
  store i64 %302, i64* %270, align 8, !alias.scope !7
  %303 = icmp ult i64 %302, 4
  br i1 %303, label %286, label %304

304:                                              ; preds = %298, %292
  %305 = phi i64 [ %296, %292 ], [ %302, %298 ]
  %306 = phi i64 [ %297, %292 ], [ 0, %298 ]
  store i64 %306, i64* %269, align 8, !alias.scope !7
  br label %309

307:                                              ; preds = %260
  store i64 32, i64* %270, align 8, !alias.scope !7
  %308 = ptrtoint %"class.BitSetIterator<4, dawn_native::vulkan::VulkanLayer>::Iterator"* %20 to i64
  br label %309

309:                                              ; preds = %304, %307
  %310 = phi i64 [ %275, %304 ], [ %308, %307 ]
  %311 = phi i64 [ %306, %304 ], [ 0, %307 ]
  %312 = phi i64 [ %305, %304 ], [ 32, %307 ]
  %313 = bitcast %class.Result.73* %21 to i8*
  %314 = getelementptr inbounds %class.Result.73, %class.Result.73* %21, i64 0, i32 0
  %315 = getelementptr inbounds %class.Result.73, %class.Result.73* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %316 = getelementptr inbounds %class.Result.73, %class.Result.73* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %317 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  %318 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %319 = bitcast %"class.std::__1::unique_ptr"* %318 to i64*
  %320 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %321 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %320 to i8*
  %322 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %323 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %324 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %325 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %326 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  %327 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  %328 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %329 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %330 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %331 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  br label %332

332:                                              ; preds = %410, %309
  %333 = phi i64 [ %412, %410 ], [ %311, %309 ]
  %334 = phi i64 [ %411, %410 ], [ %312, %309 ]
  %335 = icmp eq i64 %334, 32
  br i1 %335, label %336, label %340

336:                                              ; preds = %332
  %337 = load i64, i64* %268, align 8
  %338 = and i64 %337, 15
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %416, label %340

340:                                              ; preds = %336, %332
  %341 = trunc i64 %333 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 -86, i64 24, i1 false)
  %342 = call dereferenceable(16) %"struct.dawn_native::vulkan::VulkanLayerInfo"* @_ZN11dawn_native6vulkan18GetVulkanLayerInfoENS0_11VulkanLayerE(i32 %341) #12
  %343 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanLayerInfo", %"struct.dawn_native::vulkan::VulkanLayerInfo"* %342, i64 0, i32 1
  %344 = load i8*, i8** %343, align 8
  call fastcc void @_ZN11dawn_native6vulkan12_GLOBAL__N_124GatherInstanceExtensionsEPKcRKNS0_15VulkanFunctionsERKNSt3__113unordered_mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS0_11InstanceExtENS7_4hashISE_EENS7_8equal_toISE_EENSC_INS7_4pairIKSE_SF_EEEEEE(%class.Result.73* nonnull sret %21, i8* %344, %"struct.dawn_native::vulkan::VulkanFunctions"* dereferenceable(1408) %24, %"class.std::__1::unordered_map.49"* nonnull dereferenceable(40) %18)
  %345 = load i32, i32* %314, align 8
  %346 = icmp eq i32 %345, 1
  store i32 2, i32* %314, align 8
  br i1 %346, label %413, label %347, !prof !3

347:                                              ; preds = %340
  %348 = shl i64 %333, 32
  %349 = ashr exact i64 %348, 32
  %350 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %349, i32 0, i32 0, i32 0
  %351 = load i64, i64* %315, align 8
  store i64 %351, i64* %350, align 8
  %352 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %316, align 8
  %353 = bitcast %"class.dawn_native::ErrorData"* %352 to i8*
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %316, align 8
  %354 = icmp eq %"class.dawn_native::ErrorData"* %352, null
  br i1 %354, label %374, label %355

355:                                              ; preds = %347
  %356 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %352, i64 0, i32 2, i32 0, i32 0
  %357 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %356, align 8
  %358 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %357, null
  br i1 %358, label %364, label %359

359:                                              ; preds = %355
  %360 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %357 to i64
  %361 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %352, i64 0, i32 2, i32 0, i32 1
  %362 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %361 to i64*
  store i64 %360, i64* %362, align 8
  %363 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %357 to i8*
  call void @_ZdlPv(i8* %363) #13
  br label %364

364:                                              ; preds = %359, %355
  %365 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %352, i64 0, i32 1
  %366 = bitcast %"class.std::__1::basic_string"* %365 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %367 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %366, i64 0, i32 1, i32 0
  %368 = load i8, i8* %367, align 1
  %369 = icmp slt i8 %368, 0
  br i1 %369, label %370, label %373

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %365, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load i8*, i8** %371, align 8
  call void @_ZdlPv(i8* %372) #13
  br label %373

373:                                              ; preds = %370, %364
  call void @_ZdlPv(i8* %353) #13
  br label %374

374:                                              ; preds = %347, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #12
  %375 = shl i64 %333, 32
  %376 = ashr exact i64 %375, 32
  %377 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i64 %376
  %378 = load i32, i32* %36, align 8
  call void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_11InstanceExtELm12EEEj(%"class.ityp::bitset.0"* %377, i32 %378) #12
  %379 = call i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_11InstanceExtELm12EEE(%"class.ityp::bitset.0"* dereferenceable(8) %377) #12
  %380 = getelementptr inbounds %"class.ityp::bitset.0", %"class.ityp::bitset.0"* %377, i64 0, i32 0, i32 0, i32 0
  store i64 %379, i64* %380, align 8
  %381 = load i64, i64* %269, align 8
  %382 = load i64, i64* %270, align 8
  %383 = sub i64 %381, %382
  %384 = icmp ugt i64 %383, 3
  br i1 %384, label %385, label %386

385:                                              ; preds = %374
  call void @abort() #14
  unreachable

386:                                              ; preds = %374
  %387 = shl i64 1, %383
  %388 = xor i64 %387, -1
  %389 = load i64, i64* %268, align 8
  %390 = and i64 %389, %388
  store i64 %390, i64* %268, align 8
  %391 = icmp ult i64 %382, 4
  br i1 %391, label %392, label %410

392:                                              ; preds = %386, %404
  %393 = phi i64 [ %406, %404 ], [ %390, %386 ]
  %394 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EN11dawn_native6vulkan11VulkanLayerEE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %395 = and i64 %394, %393
  %396 = and i64 %395, 4294967295
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %404, label %398

398:                                              ; preds = %392
  %399 = trunc i64 %395 to i32
  %400 = call i32 @_Z11ScanForwardj(i32 %399) #12
  %401 = zext i32 %400 to i64
  %402 = load i64, i64* %270, align 8
  %403 = add i64 %402, %401
  br label %410

404:                                              ; preds = %392
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %322) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %323) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325) #12
  store i64 %310, i64* %326, align 8, !noalias !13
  store i32 4, i32* %327, align 8, !noalias !13
  store i64 %310, i64* %328, align 8, !noalias !13
  store i32 4, i32* %329, align 8, !noalias !13
  store i64 %310, i64* %330, align 8, !noalias !13
  store i32 0, i32* %331, align 8, !noalias !13
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %10, %"class.std::__1::__bit_iterator"* nonnull %7, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %323) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %322) #12
  %405 = load i64, i64* %268, align 8
  %406 = and i64 %405, -16
  store i64 %406, i64* %268, align 8
  %407 = load i64, i64* %270, align 8
  %408 = add i64 %407, 32
  store i64 %408, i64* %270, align 8
  %409 = icmp ult i64 %408, 4
  br i1 %409, label %392, label %410

410:                                              ; preds = %404, %386, %398
  %411 = phi i64 [ %402, %398 ], [ %382, %386 ], [ %408, %404 ]
  %412 = phi i64 [ %403, %398 ], [ 0, %386 ], [ 0, %404 ]
  store i64 %412, i64* %269, align 8
  br label %332

413:                                              ; preds = %340
  %414 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %316, align 8
  %415 = ptrtoint %"class.dawn_native::ErrorData"* %414 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %414, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherGlobalInfoERKNS0_7BackendE, i64 0, i64 0), i32 119) #12
  store i32 1, i32* %317, align 8
  store i64 %415, i64* %319, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 48, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #12
  br label %416

416:                                              ; preds = %336, %251, %413
  %417 = phi i8* [ %219, %251 ], [ %267, %413 ], [ %267, %336 ]
  %418 = phi i32 [ 1, %251 ], [ 1, %413 ], [ 0, %336 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %417) #12
  %419 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %214, align 8
  %420 = icmp eq %"struct.std::__1::__hash_node_base.54"* %419, null
  br i1 %420, label %436, label %421

421:                                              ; preds = %416, %433
  %422 = phi %"struct.std::__1::__hash_node_base.54"* [ %424, %433 ], [ %419, %416 ]
  %423 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %422, i64 0, i32 0
  %424 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %423, align 8
  %425 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %422, i64 2
  %426 = bitcast %"struct.std::__1::__hash_node_base.54"* %425 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %427 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %426, i64 0, i32 1, i32 0
  %428 = load i8, i8* %427, align 1
  %429 = icmp slt i8 %428, 0
  br i1 %429, label %430, label %433

430:                                              ; preds = %421
  %431 = bitcast %"struct.std::__1::__hash_node_base.54"* %425 to i8**
  %432 = load i8*, i8** %431, align 8
  call void @_ZdlPv(i8* %432) #13
  br label %433

433:                                              ; preds = %430, %421
  %434 = bitcast %"struct.std::__1::__hash_node_base.54"* %422 to i8*
  call void @_ZdlPv(i8* %434) #13
  %435 = icmp eq %"struct.std::__1::__hash_node_base.54"* %424, null
  br i1 %435, label %436, label %421

436:                                              ; preds = %433, %416
  %437 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %213, align 8
  store %"struct.std::__1::__hash_node_base.54"** null, %"struct.std::__1::__hash_node_base.54"*** %213, align 8
  %438 = icmp eq %"struct.std::__1::__hash_node_base.54"** %437, null
  br i1 %438, label %441, label %439

439:                                              ; preds = %436
  %440 = bitcast %"struct.std::__1::__hash_node_base.54"** %437 to i8*
  call void @_ZdlPv(i8* %440) #13
  br label %441

441:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %212) #12
  %442 = icmp eq i32 %418, 0
  br i1 %442, label %443, label %449

443:                                              ; preds = %441
  %444 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 0, i32* %444, align 8
  %445 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %446 = bitcast %"class.std::__1::unique_ptr"* %445 to i64*
  store i64 0, i64* %446, align 8
  %447 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %448 = bitcast %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %448, i8* nonnull align 8 %22, i64 56, i1 false) #12
  br label %449

449:                                              ; preds = %208, %441, %209, %443
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(1408) %"struct.dawn_native::vulkan::VulkanFunctions"* @_ZNK11dawn_native6vulkan7Backend12GetFunctionsEv(%"class.dawn_native::vulkan::Backend"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* sret, i32, i8*) local_unnamed_addr #3

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan24CreateVulkanLayerNameMapEv(%"class.std::__1::unordered_map"* sret) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan24CreateInstanceExtNameMapEv(%"class.std::__1::unordered_map.49"* sret) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN11dawn_native6vulkan12_GLOBAL__N_124GatherInstanceExtensionsEPKcRKNS0_15VulkanFunctionsERKNSt3__113unordered_mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS0_11InstanceExtENS7_4hashISE_EENS7_8equal_toISE_EENSC_INS7_4pairIKSE_SF_EEEEEE(%class.Result.73* noalias nocapture sret, i8*, %"struct.dawn_native::vulkan::VulkanFunctions"* nocapture readonly dereferenceable(1408), %"class.std::__1::unordered_map.49"* dereferenceable(40)) unnamed_addr #1 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %class.Result.29, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  store i32 0, i32* %5, align 4
  %10 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %2, i64 0, i32 2
  %11 = load i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)** %10, align 8
  %12 = call i32 %11(i8* %1, i32* nonnull %5, %struct.VkExtensionProperties* null) #12
  switch i32 %12, label %13 [
    i32 0, label %31
    i32 5, label %31
  ]

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 48) #13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0), i64 38, i1 false) #12
  %18 = getelementptr inbounds i8, i8* %14, i64 38
  store i8 0, i8* %18, align 1
  %19 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__._ZN11dawn_native6vulkan12_GLOBAL__N_124GatherInstanceExtensionsEPKcRKNS0_15VulkanFunctionsERKNSt3__113unordered_mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS0_11InstanceExtENS7_4hashISE_EENS7_8equal_toISE_EENSC_INS7_4pairIKSE_SF_EEEEEE, i64 0, i64 0), i32 35) #12
  %20 = ptrtoint %"class.dawn_native::ErrorData"* %19 to i64
  %21 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 0
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 0, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %150

29:                                               ; preds = %13
  %30 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %30) #13
  br label %150

31:                                               ; preds = %4, %4
  %32 = load i32, i32* %5, align 4
  %33 = zext i32 %32 to i64
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = mul nuw nsw i64 %33, 260
  %37 = call i8* @_Znwm(i64 %36) #13
  %38 = bitcast i8* %37 to %struct.VkExtensionProperties*
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %38, i64 %33
  %41 = add nsw i64 %33, -1
  %42 = sub i64 0, %39
  %43 = getelementptr %struct.VkExtensionProperties, %struct.VkExtensionProperties* %38, i64 %41, i32 0, i64 %42
  %44 = ptrtoint i8* %43 to i64
  %45 = urem i64 %44, 260
  %46 = add i64 %44, 260
  %47 = sub i64 %46, %45
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 %47, i1 false) #12
  br label %48

48:                                               ; preds = %31, %35
  %49 = phi %struct.VkExtensionProperties* [ null, %31 ], [ %40, %35 ]
  %50 = phi %struct.VkExtensionProperties* [ null, %31 ], [ %38, %35 ]
  %51 = bitcast %class.Result.29* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  %52 = getelementptr inbounds %class.Result.29, %class.Result.29* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %52, align 8
  %53 = load i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)** %10, align 8
  %54 = call i32 %53(i8* %1, i32* nonnull %5, %struct.VkExtensionProperties* %50) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %7, i32 %54, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0)) #12
  %55 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %52, align 8
  %56 = icmp eq %"class.dawn_native::ErrorData"* %55, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %52, align 8
  br i1 %56, label %86, label %57, !prof !2

57:                                               ; preds = %48
  %58 = ptrtoint %"class.dawn_native::ErrorData"* %55 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %55, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__._ZN11dawn_native6vulkan12_GLOBAL__N_124GatherInstanceExtensionsEPKcRKNS0_15VulkanFunctionsERKNSt3__113unordered_mapINS7_12basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEENS0_11InstanceExtENS7_4hashISE_EENS7_8equal_toISE_EENSC_INS7_4pairIKSE_SF_EEEEEE, i64 0, i64 0), i32 41) #12
  %59 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 0
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 1
  %61 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 %58, i64* %61, align 8
  %62 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 0, i64* %62, align 8
  %63 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %52, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %52, align 8
  %64 = icmp eq %"class.dawn_native::ErrorData"* %63, null
  br i1 %64, label %85, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %63, i64 0, i32 2, i32 0, i32 0
  %67 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %66, align 8
  %68 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %67 to i64
  %71 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %63, i64 0, i32 2, i32 0, i32 1
  %72 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %67 to i8*
  call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %69, %65
  %75 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %63, i64 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %80, %74
  %84 = bitcast %"class.dawn_native::ErrorData"* %63 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %57, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %146

86:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  %87 = icmp eq %struct.VkExtensionProperties* %50, %49
  br i1 %87, label %96, label %88

88:                                               ; preds = %86
  %89 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.std::__1::unordered_map.49", %"class.std::__1::unordered_map.49"* %3, i64 0, i32 0
  br label %102

96:                                               ; preds = %142, %86
  %97 = phi i64 [ 0, %86 ], [ %143, %142 ]
  %98 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 0
  store i32 0, i32* %98, align 8
  %99 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 1
  %100 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %class.Result.73, %class.Result.73* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %97, i64* %101, align 8
  br label %146

102:                                              ; preds = %88, %142
  %103 = phi %struct.VkExtensionProperties* [ %50, %88 ], [ %144, %142 ]
  %104 = phi i64 [ 0, %88 ], [ %143, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #12
  %105 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %103, i64 0, i32 0, i64 0
  %106 = call i64 @strlen(i8* %105) #12
  %107 = icmp ugt i64 %106, -17
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %109) #14
  unreachable

110:                                              ; preds = %102
  %111 = icmp ult i64 %106, 23
  br i1 %111, label %117, label %112

112:                                              ; preds = %110
  %113 = add nuw i64 %106, 16
  %114 = and i64 %113, -16
  %115 = call i8* @_Znwm(i64 %114) #13
  store i8* %115, i8** %90, align 8
  %116 = or i64 %114, -9223372036854775808
  store i64 %116, i64* %91, align 8
  store i64 %106, i64* %92, align 8
  br label %120

117:                                              ; preds = %110
  %118 = trunc i64 %106 to i8
  store i8 %118, i8* %94, align 1
  %119 = icmp eq i64 %106, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %117, %112
  %121 = phi i8* [ %115, %112 ], [ %89, %117 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %121, i8* align 1 %105, i64 %106, i1 false) #12
  br label %122

122:                                              ; preds = %117, %120
  %123 = phi i8* [ %89, %117 ], [ %121, %120 ]
  %124 = getelementptr inbounds i8, i8* %123, i64 %106
  store i8 0, i8* %124, align 1
  %125 = call %"struct.std::__1::__hash_node_base.54"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.50"* %95, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %126 = load i8, i8* %94, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %122
  %129 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %129) #13
  br label %130

130:                                              ; preds = %122, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #12
  %131 = icmp eq %"struct.std::__1::__hash_node_base.54"* %125, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %125, i64 5
  %134 = bitcast %"struct.std::__1::__hash_node_base.54"* %133 to i32*
  %135 = load i32, i32* %134, align 8
  %136 = icmp ugt i32 %135, 11
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  call void @abort() #14
  unreachable

138:                                              ; preds = %132
  %139 = sext i32 %135 to i64
  %140 = shl i64 1, %139
  %141 = or i64 %140, %104
  br label %142

142:                                              ; preds = %130, %138
  %143 = phi i64 [ %141, %138 ], [ %104, %130 ]
  %144 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %103, i64 1
  %145 = icmp eq %struct.VkExtensionProperties* %144, %49
  br i1 %145, label %96, label %102

146:                                              ; preds = %85, %96
  %147 = icmp eq %struct.VkExtensionProperties* %50, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %50, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %148, %146, %29, %13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  ret void
}

declare void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_11InstanceExtELm12EEEj(%"class.ityp::bitset.0"*, i32) local_unnamed_addr #3

declare i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_11InstanceExtELm12EEE(%"class.ityp::bitset.0"* dereferenceable(8)) local_unnamed_addr #3

declare dereferenceable(16) %"struct.dawn_native::vulkan::VulkanLayerInfo"* @_ZN11dawn_native6vulkan18GetVulkanLayerInfoENS0_11VulkanLayerE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan18GetPhysicalDevicesERKNS0_7BackendE(%class.Result.74* noalias nocapture sret, %"class.dawn_native::vulkan::Backend"* dereferenceable(1536)) local_unnamed_addr #1 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %class.Result.29, align 8
  %6 = tail call %struct.VkInstance_T* @_ZNK11dawn_native6vulkan7Backend13GetVkInstanceEv(%"class.dawn_native::vulkan::Backend"* %1) #12
  %7 = tail call dereferenceable(1408) %"struct.dawn_native::vulkan::VulkanFunctions"* @_ZNK11dawn_native6vulkan7Backend12GetFunctionsEv(%"class.dawn_native::vulkan::Backend"* %1) #12
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #12
  store i32 0, i32* %3, align 4
  %9 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %7, i64 0, i32 9
  %10 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %9, align 8
  %11 = call i32 %10(%struct.VkInstance_T* %6, i32* nonnull %3, %struct.VkPhysicalDevice_T** null) #12
  switch i32 %11, label %12 [
    i32 0, label %31
    i32 5, label %31
  ]

12:                                               ; preds = %2
  %13 = call i8* @_Znwm(i64 32) #13
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 26, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %13, i64 26
  store i8 0, i8* %17, align 1
  %18 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN11dawn_native6vulkan18GetPhysicalDevicesERKNS0_7BackendE, i64 0, i64 0), i32 136) #12
  %19 = ptrtoint %"class.dawn_native::ErrorData"* %18 to i64
  %20 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 0
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %19, i64* %22, align 8
  %23 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 2
  %24 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %101

29:                                               ; preds = %12
  %30 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %30) #13
  br label %101

31:                                               ; preds = %2, %2
  %32 = load i32, i32* %3, align 4
  %33 = zext i32 %32 to i64
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = shl nuw nsw i64 %33, 3
  %37 = call i8* @_Znwm(i64 %36) #13
  %38 = bitcast i8* %37 to %struct.VkPhysicalDevice_T**
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %38, i64 %33
  %41 = ptrtoint %struct.VkPhysicalDevice_T** %40 to i64
  %42 = add nsw i64 %33, -1
  %43 = getelementptr %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %38, i64 %42
  %44 = ptrtoint %struct.VkPhysicalDevice_T** %43 to i64
  %45 = sub i64 8, %39
  %46 = add i64 %45, %44
  %47 = and i64 %46, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 %47, i1 false) #12
  br label %48

48:                                               ; preds = %31, %35
  %49 = phi i64 [ 0, %31 ], [ %41, %35 ]
  %50 = phi i64 [ 0, %31 ], [ %39, %35 ]
  %51 = bitcast %class.Result.29* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  %52 = getelementptr inbounds %class.Result.29, %class.Result.29* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %52, align 8
  %53 = load i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)** %9, align 8
  %54 = inttoptr i64 %50 to %struct.VkPhysicalDevice_T**
  %55 = call i32 %53(%struct.VkInstance_T* %6, i32* nonnull %3, %struct.VkPhysicalDevice_T** %54) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %5, i32 %55, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #12
  %56 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %52, align 8
  %57 = icmp eq %"class.dawn_native::ErrorData"* %56, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %52, align 8
  br i1 %57, label %87, label %58, !prof !2

58:                                               ; preds = %48
  %59 = ptrtoint %"class.dawn_native::ErrorData"* %56 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %56, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN11dawn_native6vulkan18GetPhysicalDevicesERKNS0_7BackendE, i64 0, i64 0), i32 142) #12
  %60 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 0
  store i32 1, i32* %60, align 8
  %61 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 1
  %62 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %59, i64* %62, align 8
  %63 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 2
  %64 = bitcast %"class.std::__1::vector"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %52, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %52, align 8
  %66 = icmp eq %"class.dawn_native::ErrorData"* %65, null
  br i1 %66, label %97, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %65, i64 0, i32 2, i32 0, i32 0
  %69 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %68, align 8
  %70 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %69 to i64
  %73 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %65, i64 0, i32 2, i32 0, i32 1
  %74 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %69 to i8*
  call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %71, %67
  %77 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %65, i64 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %82, %76
  %86 = bitcast %"class.dawn_native::ErrorData"* %65 to i8*
  call void @_ZdlPv(i8* %86) #13
  br label %97

87:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  %88 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 0
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 1
  %90 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 2
  %91 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 0, i64* %91, align 8
  %92 = bitcast %"class.std::__1::vector"* %90 to i64*
  store i64 %50, i64* %92, align 8
  %93 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 2, i32 0, i32 1
  %94 = bitcast %struct.VkPhysicalDevice_T*** %93 to i64*
  store i64 %49, i64* %94, align 8
  %95 = getelementptr inbounds %class.Result.74, %class.Result.74* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %struct.VkPhysicalDevice_T*** %95 to i64*
  store i64 %49, i64* %96, align 8
  br label %101

97:                                               ; preds = %85, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  %98 = icmp eq i64 %50, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = inttoptr i64 %50 to i8*
  call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %99, %97, %87, %29, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #12
  ret void
}

declare %struct.VkInstance_T* @_ZNK11dawn_native6vulkan7Backend13GetVkInstanceEv(%"class.dawn_native::vulkan::Backend"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE(%class.Result.98* noalias sret, %"class.dawn_native::vulkan::Adapter"* dereferenceable(1912)) local_unnamed_addr #1 {
  %3 = alloca %"struct.dawn_native::vulkan::VulkanDeviceInfo", align 8
  %4 = alloca %struct.VkPhysicalDeviceMemoryProperties, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %class.Result.29, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::vector.99", align 8
  %12 = alloca %class.Result.29, align 8
  %13 = alloca %"class.std::__1::unordered_map.106", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %struct.VkPhysicalDeviceFeatures2, align 8
  %16 = alloca %struct.VkPhysicalDeviceProperties2, align 8
  %17 = bitcast %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1800, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 4
  %20 = bitcast %"class.std::__1::vector.77"* %19 to i8*
  %21 = bitcast %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 1800, i1 false)
  %22 = tail call %struct.VkPhysicalDevice_T* @_ZNK11dawn_native6vulkan7Adapter17GetPhysicalDeviceEv(%"class.dawn_native::vulkan::Adapter"* %1) #12
  %23 = tail call %"class.dawn_native::vulkan::Backend"* @_ZNK11dawn_native6vulkan7Adapter10GetBackendEv(%"class.dawn_native::vulkan::Adapter"* %1) #12
  %24 = tail call dereferenceable(56) %"struct.dawn_native::vulkan::VulkanGlobalInfo"* @_ZNK11dawn_native6vulkan7Backend13GetGlobalInfoEv(%"class.dawn_native::vulkan::Backend"* %23) #12
  %25 = tail call %"class.dawn_native::vulkan::Backend"* @_ZNK11dawn_native6vulkan7Adapter10GetBackendEv(%"class.dawn_native::vulkan::Adapter"* %1) #12
  %26 = tail call dereferenceable(1408) %"struct.dawn_native::vulkan::VulkanFunctions"* @_ZNK11dawn_native6vulkan7Backend12GetFunctionsEv(%"class.dawn_native::vulkan::Backend"* %25) #12
  %27 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 15
  %28 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %27, align 8
  %29 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 1
  call void %28(%struct.VkPhysicalDevice_T* %22, %struct.VkPhysicalDeviceProperties* %29) #12
  %30 = bitcast %struct.VkPhysicalDeviceMemoryProperties* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 520, i8* nonnull %30) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 520, i1 false)
  %31 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 14
  %32 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %31, align 8
  call void %32(%struct.VkPhysicalDevice_T* %22, %struct.VkPhysicalDeviceMemoryProperties* nonnull %4) #12
  %33 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 5
  %34 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %4, i64 0, i32 1, i64 0
  %35 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %4, i64 0, i32 1, i64 %37
  call void @_ZNSt3__16vectorI12VkMemoryTypeNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.84"* %33, %struct.VkMemoryType* %34, %struct.VkMemoryType* %38)
  %39 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 6
  %40 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %4, i64 0, i32 3, i64 0
  %41 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %4, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %4, i64 0, i32 3, i64 %43
  call void @_ZNSt3__16vectorI12VkMemoryHeapNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.91"* %39, %struct.VkMemoryHeap* %40, %struct.VkMemoryHeap* %44)
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %30) #12
  %45 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #12
  store i32 0, i32* %5, align 4
  %46 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 16
  %47 = load void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %46, align 8
  call void %47(%struct.VkPhysicalDevice_T* %22, i32* nonnull %5, %struct.VkQueueFamilyProperties* null) #12
  %48 = load i32, i32* %5, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 4, i32 0, i32 1
  %51 = bitcast %struct.VkQueueFamilyProperties** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.77"* %19 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = sdiv exact i64 %55, 24
  %57 = icmp ult i64 %56, %49
  %58 = inttoptr i64 %54 to %struct.VkQueueFamilyProperties*
  br i1 %57, label %59, label %63

59:                                               ; preds = %2
  %60 = sub nsw i64 %49, %56
  call void @_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.77"* %19, i64 %60) #12
  %61 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %19, i64 0, i32 0, i32 0
  %62 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %61, align 8
  br label %67

63:                                               ; preds = %2
  %64 = icmp ugt i64 %56, %49
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %58, i64 %49
  store %struct.VkQueueFamilyProperties* %66, %struct.VkQueueFamilyProperties** %50, align 8
  br label %67

67:                                               ; preds = %59, %63, %65
  %68 = phi %struct.VkQueueFamilyProperties* [ %62, %59 ], [ %58, %63 ], [ %58, %65 ]
  %69 = load void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)** %46, align 8
  call void %69(%struct.VkPhysicalDevice_T* %22, i32* nonnull %5, %struct.VkQueueFamilyProperties* %68) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #12
  %70 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #12
  store i32 0, i32* %6, align 4
  %71 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 8
  %72 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)** %71, align 8
  %73 = call i32 %72(%struct.VkPhysicalDevice_T* %22, i32* nonnull %6, %struct.VkLayerProperties* null) #12
  switch i32 %73, label %74 [
    i32 0, label %94
    i32 5, label %94
  ]

74:                                               ; preds = %67
  %75 = call i8* @_Znwm(i64 48) #13
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %78, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 32, i1 false) #12
  %79 = getelementptr inbounds i8, i8* %75, i64 32
  store i8 0, i8* %79, align 1
  %80 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE, i64 0, i64 0), i32 183) #12
  %81 = ptrtoint %"class.dawn_native::ErrorData"* %80 to i64
  %82 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 0
  store i32 1, i32* %82, align 8
  %83 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 1
  %84 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %81, i64* %84, align 8
  %85 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 4
  %87 = bitcast %"class.std::__1::vector.77"* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 96, i1 false) #12
  %88 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %153

92:                                               ; preds = %74
  %93 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %93) #13
  br label %153

94:                                               ; preds = %67, %67
  %95 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 7
  %96 = load i32, i32* %6, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 7, i32 0, i32 1
  %99 = bitcast %struct.VkLayerProperties** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector.22"* %95 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = sdiv exact i64 %103, 520
  %105 = icmp ult i64 %104, %97
  %106 = inttoptr i64 %102 to %struct.VkLayerProperties*
  br i1 %105, label %107, label %111

107:                                              ; preds = %94
  %108 = sub nsw i64 %97, %104
  call void @_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.22"* %95, i64 %108) #12
  %109 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %95, i64 0, i32 0, i32 0
  %110 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %109, align 8
  br label %115

111:                                              ; preds = %94
  %112 = icmp ugt i64 %104, %97
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %106, i64 %97
  store %struct.VkLayerProperties* %114, %struct.VkLayerProperties** %98, align 8
  br label %115

115:                                              ; preds = %107, %111, %113
  %116 = phi %struct.VkLayerProperties* [ %110, %107 ], [ %106, %111 ], [ %106, %113 ]
  %117 = bitcast %class.Result.29* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #12
  %118 = getelementptr inbounds %class.Result.29, %class.Result.29* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %118, align 8
  %119 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)** %71, align 8
  %120 = call i32 %119(%struct.VkPhysicalDevice_T* %22, i32* nonnull %6, %struct.VkLayerProperties* %116) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %8, i32 %120, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #12
  %121 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %118, align 8
  %122 = icmp eq %"class.dawn_native::ErrorData"* %121, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %118, align 8
  br i1 %122, label %155, label %123, !prof !2

123:                                              ; preds = %115
  %124 = ptrtoint %"class.dawn_native::ErrorData"* %121 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %121, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE, i64 0, i64 0), i32 189) #12
  %125 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 0
  store i32 1, i32* %125, align 8
  %126 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 1
  %127 = bitcast %"class.std::__1::unique_ptr"* %126 to i64*
  store i64 %124, i64* %127, align 8
  %128 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 4
  %130 = bitcast %"class.std::__1::vector.77"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 96, i1 false) #12
  %131 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %118, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %118, align 8
  %132 = icmp eq %"class.dawn_native::ErrorData"* %131, null
  br i1 %132, label %154, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %131, i64 0, i32 2, i32 0, i32 0
  %135 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %134, align 8
  %136 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %135 to i64
  %139 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %131, i64 0, i32 2, i32 0, i32 1
  %140 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %135 to i8*
  call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %137, %133
  %143 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %131, i64 0, i32 1
  %144 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %148, %142
  %152 = bitcast %"class.dawn_native::ErrorData"* %131 to i8*
  call void @_ZdlPv(i8* %152) #13
  br label %154

153:                                              ; preds = %74, %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #12
  br label %458

154:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #12
  br label %458

155:                                              ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #12
  %156 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #12
  store i32 0, i32* %9, align 4
  %157 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 7
  %158 = load i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %157, align 8
  %159 = call i32 %158(%struct.VkPhysicalDevice_T* %22, i8* null, i32* nonnull %9, %struct.VkExtensionProperties* null) #12
  switch i32 %159, label %160 [
    i32 0, label %180
    i32 5, label %180
  ]

160:                                              ; preds = %155
  %161 = call i8* @_Znwm(i64 48) #13
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %161, i8** %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = bitcast i64* %163 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %164, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %161, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i64 36, i1 false) #12
  %165 = getelementptr inbounds i8, i8* %161, i64 36
  store i8 0, i8* %165, align 1
  %166 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE, i64 0, i64 0), i32 198) #12
  %167 = ptrtoint %"class.dawn_native::ErrorData"* %166 to i64
  %168 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 0
  store i32 1, i32* %168, align 8
  %169 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 1
  %170 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  store i64 %167, i64* %170, align 8
  %171 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 0, i64* %171, align 8
  %172 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 4
  %173 = bitcast %"class.std::__1::vector.77"* %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 96, i1 false) #12
  %174 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %174, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %328

178:                                              ; preds = %160
  %179 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %179) #13
  br label %328

180:                                              ; preds = %155, %155
  %181 = bitcast %"class.std::__1::vector.99"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #12
  %182 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %11, i64 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %11, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 0, i64 24, i1 false) #12
  %184 = load i32, i32* %9, align 4
  %185 = bitcast %struct.VkExtensionProperties** %183 to i64*
  %186 = icmp eq i32 %184, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %180
  %188 = zext i32 %184 to i64
  call void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.99"* nonnull %11, i64 %188) #12
  %189 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %182, align 8
  br label %190

190:                                              ; preds = %180, %187
  %191 = phi %struct.VkExtensionProperties* [ %189, %187 ], [ null, %180 ]
  %192 = bitcast %class.Result.29* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #12
  %193 = getelementptr inbounds %class.Result.29, %class.Result.29* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %193, align 8
  %194 = load i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)** %157, align 8
  %195 = call i32 %194(%struct.VkPhysicalDevice_T* %22, i8* null, i32* nonnull %9, %struct.VkExtensionProperties* %191) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %12, i32 %195, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0)) #12
  %196 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %193, align 8
  %197 = icmp eq %"class.dawn_native::ErrorData"* %196, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %193, align 8
  br i1 %197, label %229, label %198, !prof !2

198:                                              ; preds = %190
  %199 = ptrtoint %"class.dawn_native::ErrorData"* %196 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %196, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZN11dawn_native6vulkan16GatherDeviceInfoERKNS0_7AdapterE, i64 0, i64 0), i32 206) #12
  %200 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 0
  store i32 1, i32* %200, align 8
  %201 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 1
  %202 = bitcast %"class.std::__1::unique_ptr"* %201 to i64*
  store i64 %199, i64* %202, align 8
  %203 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 0, i32 4, i32 0, i32 0, i32 0
  store i64 0, i64* %203, align 8
  %204 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 4
  %205 = bitcast %"class.std::__1::vector.77"* %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %205, i8 0, i64 96, i1 false) #12
  %206 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %193, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %193, align 8
  %207 = icmp eq %"class.dawn_native::ErrorData"* %206, null
  br i1 %207, label %228, label %208

208:                                              ; preds = %198
  %209 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %206, i64 0, i32 2, i32 0, i32 0
  %210 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %209, align 8
  %211 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %210 to i64
  %214 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %206, i64 0, i32 2, i32 0, i32 1
  %215 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %210 to i8*
  call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %212, %208
  %218 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %206, i64 0, i32 1
  %219 = bitcast %"class.std::__1::basic_string"* %218 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %217
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #13
  br label %226

226:                                              ; preds = %223, %217
  %227 = bitcast %"class.dawn_native::ErrorData"* %206 to i8*
  call void @_ZdlPv(i8* %227) #13
  br label %228

228:                                              ; preds = %198, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #12
  br label %321

229:                                              ; preds = %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #12
  %230 = bitcast %"class.std::__1::unordered_map.106"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %230) #12
  %231 = getelementptr inbounds %"class.std::__1::unordered_map.106", %"class.std::__1::unordered_map.106"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = getelementptr inbounds %"class.std::__1::unordered_map.106", %"class.std::__1::unordered_map.106"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.std::__1::unordered_map.106", %"class.std::__1::unordered_map.106"* %13, i64 0, i32 0, i32 3, i32 0, i32 0
  %234 = bitcast %"class.std::__1::unordered_map.106"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %233, align 8
  %235 = getelementptr inbounds %"class.std::__1::unordered_map.106", %"class.std::__1::unordered_map.106"* %13, i64 0, i32 0, i32 4, i64 0
  %236 = bitcast i8* %235 to i32*
  store i32 -1431655766, i32* %236, align 4
  call void @_ZN11dawn_native6vulkan22CreateDeviceExtNameMapEv(%"class.std::__1::unordered_map.106"* nonnull sret %13) #12
  %237 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %182, align 8
  %238 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %183, align 8
  %239 = icmp eq %struct.VkExtensionProperties* %237, %238
  br i1 %239, label %248, label %240

240:                                              ; preds = %229
  %241 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %247 = getelementptr inbounds %"class.std::__1::unordered_map.106", %"class.std::__1::unordered_map.106"* %13, i64 0, i32 0
  br label %278

248:                                              ; preds = %318, %229
  %249 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 4
  %250 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %29, i64 0, i32 0
  %251 = load i32, i32* %250, align 8
  call void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_9DeviceExtELm22EEEj(%"class.ityp::bitset.3"* %249, i32 %251) #12
  %252 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanGlobalInfo", %"struct.dawn_native::vulkan::VulkanGlobalInfo"* %24, i64 0, i32 0, i32 2
  %253 = load i32, i32* %250, align 8
  %254 = call i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_9DeviceExtELm22EEERKNS2_INS0_11InstanceExtELm12EEEj(%"class.ityp::bitset.3"* dereferenceable(8) %249, %"class.ityp::bitset.0"* dereferenceable(8) %252, i32 %253) #12
  store i64 %254, i64* %18, align 8
  %255 = load %"struct.std::__1::__hash_node_base.111"*, %"struct.std::__1::__hash_node_base.111"** %232, align 8
  %256 = icmp eq %"struct.std::__1::__hash_node_base.111"* %255, null
  br i1 %256, label %272, label %257

257:                                              ; preds = %248, %269
  %258 = phi %"struct.std::__1::__hash_node_base.111"* [ %260, %269 ], [ %255, %248 ]
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %258, i64 0, i32 0
  %260 = load %"struct.std::__1::__hash_node_base.111"*, %"struct.std::__1::__hash_node_base.111"** %259, align 8
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %258, i64 2
  %262 = bitcast %"struct.std::__1::__hash_node_base.111"* %261 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %257
  %267 = bitcast %"struct.std::__1::__hash_node_base.111"* %261 to i8**
  %268 = load i8*, i8** %267, align 8
  call void @_ZdlPv(i8* %268) #13
  br label %269

269:                                              ; preds = %266, %257
  %270 = bitcast %"struct.std::__1::__hash_node_base.111"* %258 to i8*
  call void @_ZdlPv(i8* %270) #13
  %271 = icmp eq %"struct.std::__1::__hash_node_base.111"* %260, null
  br i1 %271, label %272, label %257

272:                                              ; preds = %269, %248
  %273 = load %"struct.std::__1::__hash_node_base.111"**, %"struct.std::__1::__hash_node_base.111"*** %231, align 8
  store %"struct.std::__1::__hash_node_base.111"** null, %"struct.std::__1::__hash_node_base.111"*** %231, align 8
  %274 = icmp eq %"struct.std::__1::__hash_node_base.111"** %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = bitcast %"struct.std::__1::__hash_node_base.111"** %273 to i8*
  call void @_ZdlPv(i8* %276) #13
  br label %277

277:                                              ; preds = %272, %275
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %230) #12
  br label %321

278:                                              ; preds = %240, %318
  %279 = phi %struct.VkExtensionProperties* [ %237, %240 ], [ %319, %318 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #12
  %280 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %279, i64 0, i32 0, i64 0
  %281 = call i64 @strlen(i8* %280) #12
  %282 = icmp ugt i64 %281, -17
  br i1 %282, label %283, label %285

283:                                              ; preds = %278
  %284 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %284) #14
  unreachable

285:                                              ; preds = %278
  %286 = icmp ult i64 %281, 23
  br i1 %286, label %292, label %287

287:                                              ; preds = %285
  %288 = add nuw i64 %281, 16
  %289 = and i64 %288, -16
  %290 = call i8* @_Znwm(i64 %289) #13
  store i8* %290, i8** %242, align 8
  %291 = or i64 %289, -9223372036854775808
  store i64 %291, i64* %243, align 8
  store i64 %281, i64* %244, align 8
  br label %295

292:                                              ; preds = %285
  %293 = trunc i64 %281 to i8
  store i8 %293, i8* %246, align 1
  %294 = icmp eq i64 %281, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %292, %287
  %296 = phi i8* [ %290, %287 ], [ %241, %292 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %296, i8* align 1 %280, i64 %281, i1 false) #12
  br label %297

297:                                              ; preds = %292, %295
  %298 = phi i8* [ %241, %292 ], [ %296, %295 ]
  %299 = getelementptr inbounds i8, i8* %298, i64 %281
  store i8 0, i8* %299, align 1
  %300 = call %"struct.std::__1::__hash_node_base.111"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.107"* nonnull %247, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #12
  %301 = load i8, i8* %246, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %297
  %304 = load i8*, i8** %242, align 8
  call void @_ZdlPv(i8* %304) #13
  br label %305

305:                                              ; preds = %297, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #12
  %306 = icmp eq %"struct.std::__1::__hash_node_base.111"* %300, null
  br i1 %306, label %318, label %307

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %300, i64 5
  %309 = bitcast %"struct.std::__1::__hash_node_base.111"* %308 to i32*
  %310 = load i32, i32* %309, align 8
  %311 = icmp ugt i32 %310, 21
  br i1 %311, label %312, label %313

312:                                              ; preds = %307
  call void @abort() #14
  unreachable

313:                                              ; preds = %307
  %314 = sext i32 %310 to i64
  %315 = shl i64 1, %314
  %316 = load i64, i64* %18, align 8
  %317 = or i64 %316, %315
  store i64 %317, i64* %18, align 8
  br label %318

318:                                              ; preds = %305, %313
  %319 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %279, i64 1
  %320 = icmp eq %struct.VkExtensionProperties* %319, %238
  br i1 %320, label %248, label %278

321:                                              ; preds = %228, %277
  %322 = phi i32 [ 0, %277 ], [ 1, %228 ]
  %323 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %182, align 8
  %324 = icmp eq %struct.VkExtensionProperties* %323, null
  br i1 %324, label %329, label %325

325:                                              ; preds = %321
  %326 = ptrtoint %struct.VkExtensionProperties* %323 to i64
  store i64 %326, i64* %185, align 8
  %327 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %323, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %327) #13
  br label %329

328:                                              ; preds = %160, %178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #12
  br label %458

329:                                              ; preds = %325, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #12
  %330 = icmp eq i32 %322, 0
  br i1 %330, label %331, label %458

331:                                              ; preds = %329
  %332 = bitcast %struct.VkPhysicalDeviceFeatures2* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %332) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 240, i1 false)
  %333 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %15, i64 0, i32 0
  store i32 1000059000, i32* %333, align 8
  %334 = ptrtoint %struct.VkPhysicalDeviceFeatures2* %15 to i64
  %335 = bitcast %struct.VkPhysicalDeviceProperties2* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 840, i8* nonnull %335) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 0, i64 840, i1 false)
  %336 = getelementptr inbounds %struct.VkPhysicalDeviceProperties2, %struct.VkPhysicalDeviceProperties2* %16, i64 0, i32 0
  store i32 1000059001, i32* %336, align 8
  %337 = ptrtoint %struct.VkPhysicalDeviceProperties2* %16 to i64
  %338 = load i64, i64* %18, align 8
  %339 = and i64 %338, 8192
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %349, label %341

341:                                              ; preds = %331
  %342 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 1
  %343 = getelementptr inbounds %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceShaderFloat16Int8Features* %342, i64 0, i32 0
  store i32 1000082000, i32* %343, align 8
  %344 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 1, i32 1
  store i8* null, i8** %344, align 8
  %345 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %15, i64 0, i32 1
  %346 = bitcast i8** %345 to %struct.VkPhysicalDeviceShaderFloat16Int8Features**
  store %struct.VkPhysicalDeviceShaderFloat16Int8Features* %342, %struct.VkPhysicalDeviceShaderFloat16Int8Features** %346, align 8
  %347 = ptrtoint %struct.VkPhysicalDeviceShaderFloat16Int8Features* %342 to i64
  %348 = load i64, i64* %18, align 8
  br label %349

349:                                              ; preds = %331, %341
  %350 = phi i64 [ %348, %341 ], [ %338, %331 ]
  %351 = phi i64 [ %347, %341 ], [ %334, %331 ]
  %352 = and i64 %350, 512
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %363, label %354

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 2
  %356 = getelementptr inbounds %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDevice16BitStorageFeatures* %355, i64 0, i32 0
  store i32 1000083000, i32* %356, align 8
  %357 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 2, i32 1
  store i8* null, i8** %357, align 8
  %358 = inttoptr i64 %351 to %struct.VkBaseOutStructure*
  %359 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %358, i64 0, i32 1
  %360 = bitcast %struct.VkBaseOutStructure** %359 to %struct.VkPhysicalDevice16BitStorageFeatures**
  store %struct.VkPhysicalDevice16BitStorageFeatures* %355, %struct.VkPhysicalDevice16BitStorageFeatures** %360, align 8
  %361 = ptrtoint %struct.VkPhysicalDevice16BitStorageFeatures* %355 to i64
  %362 = load i64, i64* %18, align 8
  br label %363

363:                                              ; preds = %349, %354
  %364 = phi i64 [ %362, %354 ], [ %350, %349 ]
  %365 = phi i64 [ %361, %354 ], [ %351, %349 ]
  %366 = and i64 %364, 2097152
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %382, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 3
  %370 = getelementptr inbounds %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT* %369, i64 0, i32 0
  store i32 1000225002, i32* %370, align 8
  %371 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 3, i32 1
  store i8* null, i8** %371, align 8
  %372 = inttoptr i64 %365 to %struct.VkBaseOutStructure*
  %373 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %372, i64 0, i32 1
  %374 = bitcast %struct.VkBaseOutStructure** %373 to %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT**
  store %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT* %369, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT** %374, align 8
  %375 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 3
  %376 = getelementptr inbounds %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT* %375, i64 0, i32 0
  store i32 1000225000, i32* %376, align 8
  %377 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 3, i32 1
  store i8* null, i8** %377, align 8
  %378 = getelementptr inbounds %struct.VkPhysicalDeviceProperties2, %struct.VkPhysicalDeviceProperties2* %16, i64 0, i32 1
  %379 = bitcast i8** %378 to %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT**
  store %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT* %375, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT** %379, align 8
  %380 = ptrtoint %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT* %375 to i64
  %381 = load i64, i64* %18, align 8
  br label %382

382:                                              ; preds = %363, %368
  %383 = phi i64 [ %381, %368 ], [ %364, %363 ]
  %384 = phi i64 [ %380, %368 ], [ %337, %363 ]
  %385 = and i64 %383, 2048
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %395, label %387

387:                                              ; preds = %382
  %388 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 2
  %389 = getelementptr inbounds %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceDriverProperties* %388, i64 0, i32 0
  store i32 1000196000, i32* %389, align 8
  %390 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 2, i32 1
  store i8* null, i8** %390, align 8
  %391 = inttoptr i64 %384 to %struct.VkBaseOutStructure*
  %392 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %391, i64 0, i32 1
  %393 = bitcast %struct.VkBaseOutStructure** %392 to %struct.VkPhysicalDeviceDriverProperties**
  store %struct.VkPhysicalDeviceDriverProperties* %388, %struct.VkPhysicalDeviceDriverProperties** %393, align 8
  %394 = load i64, i64* %18, align 8
  br label %395

395:                                              ; preds = %382, %387
  %396 = phi i64 [ %383, %382 ], [ %394, %387 ]
  %397 = and i64 %396, 8
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %406, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 38
  %401 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)** %400, align 8
  call void %401(%struct.VkPhysicalDevice_T* %22, %struct.VkPhysicalDeviceProperties2* nonnull %16) #12
  %402 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 37
  %403 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)** %402, align 8
  call void %403(%struct.VkPhysicalDevice_T* %22, %struct.VkPhysicalDeviceFeatures2* nonnull %15) #12
  %404 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %15, i64 0, i32 2
  %405 = bitcast %struct.VkPhysicalDeviceFeatures* %404 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %405, i64 220, i1 false)
  br label %410

406:                                              ; preds = %395
  %407 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %26, i64 0, i32 11
  %408 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)** %407, align 8
  %409 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 0, i32 0
  call void %408(%struct.VkPhysicalDevice_T* %22, %struct.VkPhysicalDeviceFeatures* nonnull %409) #12
  br label %410

410:                                              ; preds = %406, %399
  %411 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 0
  store i32 0, i32* %411, align 8
  %412 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 1
  %413 = bitcast %"class.std::__1::unique_ptr"* %412 to i64*
  store i64 0, i64* %413, align 8
  %414 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2
  %415 = bitcast %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %414 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %415, i8* nonnull align 8 %17, i64 312, i1 false) #12
  %416 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 1
  %417 = bitcast %struct.VkPhysicalDeviceProperties* %416 to i8*
  %418 = bitcast %struct.VkPhysicalDeviceProperties* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %417, i8* align 8 %418, i64 1392, i1 false) #12
  %419 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 4
  %420 = bitcast %"class.std::__1::vector.77"* %19 to <2 x i64>*
  %421 = load <2 x i64>, <2 x i64>* %420, align 8
  %422 = bitcast %"class.std::__1::vector.77"* %419 to <2 x i64>*
  store <2 x i64> %421, <2 x i64>* %422, align 8
  %423 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %424 = bitcast %struct.VkQueueFamilyProperties** %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 4, i32 0, i32 2, i32 0, i32 0
  %427 = bitcast %struct.VkQueueFamilyProperties** %426 to i64*
  store i64 %425, i64* %427, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #12
  %428 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 5
  %429 = bitcast %"class.std::__1::vector.84"* %33 to <2 x i64>*
  %430 = load <2 x i64>, <2 x i64>* %429, align 8
  %431 = bitcast %"class.std::__1::vector.84"* %428 to <2 x i64>*
  store <2 x i64> %430, <2 x i64>* %431, align 8
  %432 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %433 = bitcast %struct.VkMemoryType** %432 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 5, i32 0, i32 2, i32 0, i32 0
  %436 = bitcast %struct.VkMemoryType** %435 to i64*
  store i64 %434, i64* %436, align 8
  %437 = bitcast %"class.std::__1::vector.84"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %437, i8 0, i64 24, i1 false) #12
  %438 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 6
  %439 = bitcast %"class.std::__1::vector.91"* %39 to <2 x i64>*
  %440 = load <2 x i64>, <2 x i64>* %439, align 8
  %441 = bitcast %"class.std::__1::vector.91"* %438 to <2 x i64>*
  store <2 x i64> %440, <2 x i64>* %441, align 8
  %442 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %443 = bitcast %struct.VkMemoryHeap** %442 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 6, i32 0, i32 2, i32 0, i32 0
  %446 = bitcast %struct.VkMemoryHeap** %445 to i64*
  store i64 %444, i64* %446, align 8
  %447 = bitcast %"class.std::__1::vector.91"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %447, i8 0, i64 24, i1 false) #12
  %448 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 7
  %449 = bitcast %"class.std::__1::vector.22"* %95 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8
  %451 = bitcast %"class.std::__1::vector.22"* %448 to <2 x i64>*
  store <2 x i64> %450, <2 x i64>* %451, align 8
  %452 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %453 = bitcast %struct.VkLayerProperties** %452 to i64*
  %454 = load i64, i64* %453, align 8
  %455 = getelementptr inbounds %class.Result.98, %class.Result.98* %0, i64 0, i32 2, i32 7, i32 0, i32 2, i32 0, i32 0
  %456 = bitcast %struct.VkLayerProperties** %455 to i64*
  store i64 %454, i64* %456, align 8
  %457 = bitcast %"class.std::__1::vector.22"* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 840, i8* nonnull %335) #12
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %332) #12
  br label %458

458:                                              ; preds = %328, %154, %153, %329, %410
  %459 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 7, i32 0, i32 0
  %460 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %459, align 8
  %461 = icmp eq %struct.VkLayerProperties* %460, null
  br i1 %461, label %467, label %462

462:                                              ; preds = %458
  %463 = ptrtoint %struct.VkLayerProperties* %460 to i64
  %464 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 7, i32 0, i32 1
  %465 = bitcast %struct.VkLayerProperties** %464 to i64*
  store i64 %463, i64* %465, align 8
  %466 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %460, i64 0, i32 0, i64 0
  call void @_ZdlPv(i8* %466) #13
  br label %467

467:                                              ; preds = %462, %458
  %468 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 6, i32 0, i32 0
  %469 = load %struct.VkMemoryHeap*, %struct.VkMemoryHeap** %468, align 8
  %470 = icmp eq %struct.VkMemoryHeap* %469, null
  br i1 %470, label %476, label %471

471:                                              ; preds = %467
  %472 = ptrtoint %struct.VkMemoryHeap* %469 to i64
  %473 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 6, i32 0, i32 1
  %474 = bitcast %struct.VkMemoryHeap** %473 to i64*
  store i64 %472, i64* %474, align 8
  %475 = bitcast %struct.VkMemoryHeap* %469 to i8*
  call void @_ZdlPv(i8* %475) #13
  br label %476

476:                                              ; preds = %471, %467
  %477 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 5, i32 0, i32 0
  %478 = load %struct.VkMemoryType*, %struct.VkMemoryType** %477, align 8
  %479 = icmp eq %struct.VkMemoryType* %478, null
  br i1 %479, label %485, label %480

480:                                              ; preds = %476
  %481 = ptrtoint %struct.VkMemoryType* %478 to i64
  %482 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 5, i32 0, i32 1
  %483 = bitcast %struct.VkMemoryType** %482 to i64*
  store i64 %481, i64* %483, align 8
  %484 = bitcast %struct.VkMemoryType* %478 to i8*
  call void @_ZdlPv(i8* %484) #13
  br label %485

485:                                              ; preds = %480, %476
  %486 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %3, i64 0, i32 4, i32 0, i32 0
  %487 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %486, align 8
  %488 = icmp eq %struct.VkQueueFamilyProperties* %487, null
  br i1 %488, label %492, label %489

489:                                              ; preds = %485
  %490 = ptrtoint %struct.VkQueueFamilyProperties* %487 to i64
  store i64 %490, i64* %51, align 8
  %491 = bitcast %struct.VkQueueFamilyProperties* %487 to i8*
  call void @_ZdlPv(i8* %491) #13
  br label %492

492:                                              ; preds = %485, %489
  call void @llvm.lifetime.end.p0i8(i64 1800, i8* nonnull %17) #12
  ret void
}

declare %struct.VkPhysicalDevice_T* @_ZNK11dawn_native6vulkan7Adapter17GetPhysicalDeviceEv(%"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #3

declare %"class.dawn_native::vulkan::Backend"* @_ZNK11dawn_native6vulkan7Adapter10GetBackendEv(%"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #3

declare dereferenceable(56) %"struct.dawn_native::vulkan::VulkanGlobalInfo"* @_ZNK11dawn_native6vulkan7Backend13GetGlobalInfoEv(%"class.dawn_native::vulkan::Backend"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12VkMemoryTypeNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.84"*, %struct.VkMemoryType*, %struct.VkMemoryType*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %struct.VkMemoryType* %2 to i64
  %5 = ptrtoint %struct.VkMemoryType* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.VkMemoryType** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.VkMemoryType*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.VkMemoryType** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.VkMemoryType, %struct.VkMemoryType* %1, i64 %22
  %25 = select i1 %23, %struct.VkMemoryType* %24, %struct.VkMemoryType* %2
  %26 = ptrtoint %struct.VkMemoryType* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %struct.VkMemoryType* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %struct.VkMemoryType* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %struct.VkMemoryType*
  %43 = getelementptr inbounds %struct.VkMemoryType, %struct.VkMemoryType* %42, i64 %39
  %44 = ptrtoint %struct.VkMemoryType* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.VkMemoryType, %struct.VkMemoryType* %16, i64 %28
  store %struct.VkMemoryType* %48, %struct.VkMemoryType** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %struct.VkMemoryType** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.84"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %struct.VkMemoryType*
  %76 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %struct.VkMemoryType** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.84"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %struct.VkMemoryType, %struct.VkMemoryType* %75, i64 %72
  store %struct.VkMemoryType* %79, %struct.VkMemoryType** %8, align 8
  %80 = bitcast %struct.VkMemoryType** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %struct.VkMemoryType* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds %struct.VkMemoryType, %struct.VkMemoryType* %75, i64 %84
  %87 = ptrtoint %struct.VkMemoryType* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12VkMemoryHeapNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.91"*, %struct.VkMemoryHeap*, %struct.VkMemoryHeap*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %struct.VkMemoryHeap* %2 to i64
  %5 = ptrtoint %struct.VkMemoryHeap* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.VkMemoryHeap** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.91"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.VkMemoryHeap*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.VkMemoryHeap** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.VkMemoryHeap, %struct.VkMemoryHeap* %1, i64 %22
  %25 = select i1 %23, %struct.VkMemoryHeap* %24, %struct.VkMemoryHeap* %2
  %26 = ptrtoint %struct.VkMemoryHeap* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %struct.VkMemoryHeap* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %struct.VkMemoryHeap* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %struct.VkMemoryHeap*
  %43 = getelementptr inbounds %struct.VkMemoryHeap, %struct.VkMemoryHeap* %42, i64 %39
  %44 = ptrtoint %struct.VkMemoryHeap* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.VkMemoryHeap, %struct.VkMemoryHeap* %16, i64 %28
  store %struct.VkMemoryHeap* %48, %struct.VkMemoryHeap** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %struct.VkMemoryHeap** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.91"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.91"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.91"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %struct.VkMemoryHeap*
  %76 = getelementptr inbounds %"class.std::__1::vector.91", %"class.std::__1::vector.91"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %struct.VkMemoryHeap** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.91"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %struct.VkMemoryHeap, %struct.VkMemoryHeap* %75, i64 %72
  store %struct.VkMemoryHeap* %79, %struct.VkMemoryHeap** %8, align 8
  %80 = bitcast %struct.VkMemoryHeap** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %struct.VkMemoryHeap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds %struct.VkMemoryHeap, %struct.VkMemoryHeap* %75, i64 %84
  %87 = ptrtoint %struct.VkMemoryHeap* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

declare void @_ZN11dawn_native6vulkan22CreateDeviceExtNameMapEv(%"class.std::__1::unordered_map.106"* sret) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan22MarkPromotedExtensionsEPN4ityp6bitsetINS0_9DeviceExtELm22EEEj(%"class.ityp::bitset.3"*, i32) local_unnamed_addr #3

declare i64 @_ZN11dawn_native6vulkan18EnsureDependenciesERKN4ityp6bitsetINS0_9DeviceExtELm22EEERKNS2_INS0_11InstanceExtELm12EEEj(%"class.ityp::bitset.3"* dereferenceable(8), %"class.ityp::bitset.0"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE(%class.Result.136* noalias sret, %"class.dawn_native::vulkan::Adapter"* dereferenceable(1912), %struct.VkSurfaceKHR_T*) local_unnamed_addr #1 {
  %4 = alloca %"struct.dawn_native::vulkan::VulkanSurfaceInfo", align 8
  %5 = alloca %class.Result.29, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.Result.29, align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %class.Result.29, align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %class.Result.29, align 8
  %14 = bitcast %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 52, i1 false)
  %16 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 1
  %17 = bitcast %"class.std::__1::vector.137"* %16 to i8*
  %18 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 2
  %19 = bitcast %"class.std::__1::vector.144"* %18 to i8*
  %20 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 3
  %21 = bitcast %"class.std::__1::vector.151"* %20 to i8*
  %22 = bitcast %"class.std::__1::vector.137"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 72, i1 false)
  %23 = tail call %struct.VkPhysicalDevice_T* @_ZNK11dawn_native6vulkan7Adapter17GetPhysicalDeviceEv(%"class.dawn_native::vulkan::Adapter"* %1) #12
  %24 = tail call %"class.dawn_native::vulkan::Backend"* @_ZNK11dawn_native6vulkan7Adapter10GetBackendEv(%"class.dawn_native::vulkan::Adapter"* %1) #12
  %25 = tail call dereferenceable(1408) %"struct.dawn_native::vulkan::VulkanFunctions"* @_ZNK11dawn_native6vulkan7Backend12GetFunctionsEv(%"class.dawn_native::vulkan::Backend"* %24) #12
  %26 = bitcast %class.Result.29* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %class.Result.29, %class.Result.29* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %27, align 8
  %28 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %25, i64 0, i32 32
  %29 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %28, align 8
  %30 = call i32 %29(%struct.VkPhysicalDevice_T* %23, %struct.VkSurfaceKHR_T* %2, %struct.VkSurfaceCapabilitiesKHR* nonnull %15) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %5, i32 %30, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #12
  %31 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %27, align 8
  %32 = icmp eq %"class.dawn_native::ErrorData"* %31, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %27, align 8
  br i1 %32, label %63, label %33, !prof !2

33:                                               ; preds = %3
  %34 = ptrtoint %"class.dawn_native::ErrorData"* %31 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %31, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE, i64 0, i64 0), i32 288) #12
  %35 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %39 = bitcast %"class.std::__1::vector.137"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 72, i1 false) #12
  %40 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %27, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %27, align 8
  %41 = icmp eq %"class.dawn_native::ErrorData"* %40, null
  br i1 %41, label %62, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %40, i64 0, i32 2, i32 0, i32 0
  %44 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %43, align 8
  %45 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %44 to i64
  %48 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %40, i64 0, i32 2, i32 0, i32 1
  %49 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %44 to i8*
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %46, %42
  %52 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %40, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %57, %51
  %61 = bitcast %"class.dawn_native::ErrorData"* %40 to i8*
  call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %33, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %334

63:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  %64 = call dereferenceable(1800) %"struct.dawn_native::vulkan::VulkanDeviceInfo"* @_ZNK11dawn_native6vulkan7Adapter13GetDeviceInfoEv(%"class.dawn_native::vulkan::Adapter"* %1) #12
  %65 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %64, i64 0, i32 4
  %66 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanDeviceInfo", %"struct.dawn_native::vulkan::VulkanDeviceInfo"* %64, i64 0, i32 4, i32 0, i32 1
  %67 = bitcast %struct.VkQueueFamilyProperties** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector.77"* %65 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = sdiv exact i64 %71, 24
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.151"* %20, i64 %72, i1 zeroext false)
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %137, label %74

74:                                               ; preds = %63
  %75 = bitcast i32* %6 to i8*
  %76 = bitcast %class.Result.29* %7 to i8*
  %77 = getelementptr inbounds %class.Result.29, %class.Result.29* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %25, i64 0, i32 31
  %79 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %20, i64 0, i32 0
  br label %80

80:                                               ; preds = %74, %131
  %81 = phi i64 [ 0, %74 ], [ %134, %131 ]
  %82 = phi i32 [ 0, %74 ], [ %133, %131 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #12
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %77, align 8
  %83 = load i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)** %78, align 8
  %84 = call i32 %83(%struct.VkPhysicalDevice_T* %23, i32 %82, %struct.VkSurfaceKHR_T* %2, i32* nonnull %6) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %7, i32 %84, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0)) #12
  %85 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %77, align 8
  %86 = icmp eq %"class.dawn_native::ErrorData"* %85, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %77, align 8
  br i1 %86, label %116, label %87, !prof !2

87:                                               ; preds = %80
  %88 = ptrtoint %"class.dawn_native::ErrorData"* %85 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %85, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE, i64 0, i64 0), i32 299) #12
  %89 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 1, i32* %89, align 8
  %90 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %91 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  store i64 %88, i64* %91, align 8
  %92 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %93 = bitcast %"class.std::__1::vector.137"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 72, i1 false) #12
  %94 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %77, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %77, align 8
  %95 = icmp eq %"class.dawn_native::ErrorData"* %94, null
  br i1 %95, label %136, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 2, i32 0, i32 0
  %98 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %97, align 8
  %99 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %98 to i64
  %102 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 2, i32 0, i32 1
  %103 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %98 to i8*
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %100, %96
  %106 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %94, i64 0, i32 1
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #13
  br label %114

114:                                              ; preds = %111, %105
  %115 = bitcast %"class.dawn_native::ErrorData"* %94 to i8*
  call void @_ZdlPv(i8* %115) #13
  br label %136

116:                                              ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #12
  %117 = load i32, i32* %6, align 4
  %118 = icmp eq i32 %117, 1
  %119 = load i64*, i64** %79, align 8
  %120 = lshr i64 %81, 6
  %121 = getelementptr inbounds i64, i64* %119, i64 %120
  %122 = and i64 %81, 63
  %123 = shl i64 1, %122
  br i1 %118, label %124, label %127

124:                                              ; preds = %116
  %125 = load i64, i64* %121, align 8
  %126 = or i64 %125, %123
  br label %131

127:                                              ; preds = %116
  %128 = xor i64 %123, -1
  %129 = load i64, i64* %121, align 8
  %130 = and i64 %129, %128
  br label %131

131:                                              ; preds = %124, %127
  %132 = phi i64 [ %130, %127 ], [ %126, %124 ]
  store i64 %132, i64* %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #12
  %133 = add i32 %82, 1
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %72, %134
  br i1 %135, label %80, label %137

136:                                              ; preds = %87, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #12
  br label %334

137:                                              ; preds = %131, %63
  %138 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138) #12
  store i32 0, i32* %8, align 4
  %139 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %25, i64 0, i32 33
  %140 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %139, align 8
  %141 = call i32 %140(%struct.VkPhysicalDevice_T* %23, %struct.VkSurfaceKHR_T* %2, i32* nonnull %8, %struct.VkSurfaceFormatKHR* null) #12
  switch i32 %141, label %142 [
    i32 0, label %161
    i32 5, label %161
  ]

142:                                              ; preds = %137
  %143 = call i8* @_Znwm(i64 48) #13
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %143, i8** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %146 = bitcast i64* %145 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %146, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i64 36, i1 false) #12
  %147 = getelementptr inbounds i8, i8* %143, i64 36
  store i8 0, i8* %147, align 1
  %148 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE, i64 0, i64 0), i32 311) #12
  %149 = ptrtoint %"class.dawn_native::ErrorData"* %148 to i64
  %150 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 1, i32* %150, align 8
  %151 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %152 = bitcast %"class.std::__1::unique_ptr"* %151 to i64*
  store i64 %149, i64* %152, align 8
  %153 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %154 = bitcast %"class.std::__1::vector.137"* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 72, i1 false) #12
  %155 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %218

159:                                              ; preds = %142
  %160 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %160) #13
  br label %218

161:                                              ; preds = %137, %137
  %162 = load i32, i32* %8, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 1, i32 0, i32 1
  %165 = bitcast %struct.VkSurfaceFormatKHR** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.std::__1::vector.137"* %16 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %166, %168
  %170 = ashr exact i64 %169, 3
  %171 = icmp ult i64 %170, %163
  %172 = inttoptr i64 %168 to %struct.VkSurfaceFormatKHR*
  br i1 %171, label %173, label %177

173:                                              ; preds = %161
  %174 = sub nsw i64 %163, %170
  call void @_ZNSt3__16vectorI18VkSurfaceFormatKHRNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.137"* %16, i64 %174) #12
  %175 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %16, i64 0, i32 0, i32 0
  %176 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %175, align 8
  br label %181

177:                                              ; preds = %161
  %178 = icmp ugt i64 %170, %163
  br i1 %178, label %179, label %181

179:                                              ; preds = %177
  %180 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %172, i64 %163
  store %struct.VkSurfaceFormatKHR* %180, %struct.VkSurfaceFormatKHR** %164, align 8
  br label %181

181:                                              ; preds = %173, %177, %179
  %182 = phi %struct.VkSurfaceFormatKHR* [ %176, %173 ], [ %172, %177 ], [ %172, %179 ]
  %183 = bitcast %class.Result.29* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #12
  %184 = getelementptr inbounds %class.Result.29, %class.Result.29* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %184, align 8
  %185 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %139, align 8
  %186 = call i32 %185(%struct.VkPhysicalDevice_T* %23, %struct.VkSurfaceKHR_T* %2, i32* nonnull %8, %struct.VkSurfaceFormatKHR* %182) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %10, i32 %186, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0)) #12
  %187 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %184, align 8
  %188 = icmp eq %"class.dawn_native::ErrorData"* %187, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %184, align 8
  br i1 %188, label %220, label %189, !prof !2

189:                                              ; preds = %181
  %190 = ptrtoint %"class.dawn_native::ErrorData"* %187 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %187, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE, i64 0, i64 0), i32 317) #12
  %191 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 1, i32* %191, align 8
  %192 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %193 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  store i64 %190, i64* %193, align 8
  %194 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %195 = bitcast %"class.std::__1::vector.137"* %194 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 72, i1 false) #12
  %196 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %184, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %184, align 8
  %197 = icmp eq %"class.dawn_native::ErrorData"* %196, null
  br i1 %197, label %219, label %198

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %196, i64 0, i32 2, i32 0, i32 0
  %200 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %199, align 8
  %201 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %200, null
  br i1 %201, label %207, label %202

202:                                              ; preds = %198
  %203 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %200 to i64
  %204 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %196, i64 0, i32 2, i32 0, i32 1
  %205 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %204 to i64*
  store i64 %203, i64* %205, align 8
  %206 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %200 to i8*
  call void @_ZdlPv(i8* %206) #13
  br label %207

207:                                              ; preds = %202, %198
  %208 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %196, i64 0, i32 1
  %209 = bitcast %"class.std::__1::basic_string"* %208 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #13
  br label %216

216:                                              ; preds = %213, %207
  %217 = bitcast %"class.dawn_native::ErrorData"* %196 to i8*
  call void @_ZdlPv(i8* %217) #13
  br label %219

218:                                              ; preds = %142, %159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #12
  br label %334

219:                                              ; preds = %189, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #12
  br label %334

220:                                              ; preds = %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138) #12
  %221 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #12
  store i32 0, i32* %11, align 4
  %222 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanFunctions"* %25, i64 0, i32 34
  %223 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)** %222, align 8
  %224 = call i32 %223(%struct.VkPhysicalDevice_T* %23, %struct.VkSurfaceKHR_T* %2, i32* nonnull %11, i32* null) #12
  switch i32 %224, label %225 [
    i32 0, label %244
    i32 5, label %244
  ]

225:                                              ; preds = %220
  %226 = call i8* @_Znwm(i64 48) #13
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %226, i8** %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = bitcast i64* %228 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %229, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %226, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i64 41, i1 false) #12
  %230 = getelementptr inbounds i8, i8* %226, i64 41
  store i8 0, i8* %230, align 1
  %231 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 2, %"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE, i64 0, i64 0), i32 327) #12
  %232 = ptrtoint %"class.dawn_native::ErrorData"* %231 to i64
  %233 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 1, i32* %233, align 8
  %234 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %235 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  store i64 %232, i64* %235, align 8
  %236 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %237 = bitcast %"class.std::__1::vector.137"* %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 72, i1 false) #12
  %238 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %301

242:                                              ; preds = %225
  %243 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %243) #13
  br label %301

244:                                              ; preds = %220, %220
  %245 = load i32, i32* %11, align 4
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 2, i32 0, i32 1
  %248 = bitcast i32** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.std::__1::vector.144"* %18 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = sub i64 %249, %251
  %253 = ashr exact i64 %252, 2
  %254 = icmp ult i64 %253, %246
  %255 = inttoptr i64 %251 to i32*
  br i1 %254, label %256, label %260

256:                                              ; preds = %244
  %257 = sub nsw i64 %246, %253
  call void @_ZNSt3__16vectorI16VkPresentModeKHRNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.144"* %18, i64 %257) #12
  %258 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %18, i64 0, i32 0, i32 0
  %259 = load i32*, i32** %258, align 8
  br label %264

260:                                              ; preds = %244
  %261 = icmp ugt i64 %253, %246
  br i1 %261, label %262, label %264

262:                                              ; preds = %260
  %263 = getelementptr inbounds i32, i32* %255, i64 %246
  store i32* %263, i32** %247, align 8
  br label %264

264:                                              ; preds = %256, %260, %262
  %265 = phi i32* [ %259, %256 ], [ %255, %260 ], [ %255, %262 ]
  %266 = bitcast %class.Result.29* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #12
  %267 = getelementptr inbounds %class.Result.29, %class.Result.29* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %267, align 8
  %268 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)** %222, align 8
  %269 = call i32 %268(%struct.VkPhysicalDevice_T* %23, %struct.VkSurfaceKHR_T* %2, i32* nonnull %11, i32* %265) #12
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.29* nonnull sret %13, i32 %269, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0)) #12
  %270 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %267, align 8
  %271 = icmp eq %"class.dawn_native::ErrorData"* %270, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %267, align 8
  br i1 %271, label %303, label %272, !prof !2

272:                                              ; preds = %264
  %273 = ptrtoint %"class.dawn_native::ErrorData"* %270 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %270, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE, i64 0, i64 0), i32 333) #12
  %274 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 1, i32* %274, align 8
  %275 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %276 = bitcast %"class.std::__1::unique_ptr"* %275 to i64*
  store i64 %273, i64* %276, align 8
  %277 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %278 = bitcast %"class.std::__1::vector.137"* %277 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 72, i1 false) #12
  %279 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %267, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %267, align 8
  %280 = icmp eq %"class.dawn_native::ErrorData"* %279, null
  br i1 %280, label %302, label %281

281:                                              ; preds = %272
  %282 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %279, i64 0, i32 2, i32 0, i32 0
  %283 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %282, align 8
  %284 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %283, null
  br i1 %284, label %290, label %285

285:                                              ; preds = %281
  %286 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %283 to i64
  %287 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %279, i64 0, i32 2, i32 0, i32 1
  %288 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %287 to i64*
  store i64 %286, i64* %288, align 8
  %289 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %283 to i8*
  call void @_ZdlPv(i8* %289) #13
  br label %290

290:                                              ; preds = %285, %281
  %291 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %279, i64 0, i32 1
  %292 = bitcast %"class.std::__1::basic_string"* %291 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %293 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %294 = load i8, i8* %293, align 1
  %295 = icmp slt i8 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %290
  %297 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  call void @_ZdlPv(i8* %298) #13
  br label %299

299:                                              ; preds = %296, %290
  %300 = bitcast %"class.dawn_native::ErrorData"* %279 to i8*
  call void @_ZdlPv(i8* %300) #13
  br label %302

301:                                              ; preds = %225, %242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #12
  br label %334

302:                                              ; preds = %272, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #12
  br label %334

303:                                              ; preds = %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #12
  %304 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 0
  store i32 0, i32* %304, align 8
  %305 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 1
  %306 = bitcast %"class.std::__1::unique_ptr"* %305 to i64*
  store i64 0, i64* %306, align 8
  %307 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2
  %308 = bitcast %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %307 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* nonnull align 8 %14, i64 52, i1 false) #12
  %309 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1
  %310 = bitcast %"class.std::__1::vector.137"* %16 to <2 x i64>*
  %311 = load <2 x i64>, <2 x i64>* %310, align 8
  %312 = bitcast %"class.std::__1::vector.137"* %309 to <2 x i64>*
  store <2 x i64> %311, <2 x i64>* %312, align 8
  %313 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %314 = bitcast %struct.VkSurfaceFormatKHR** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 1, i32 0, i32 2, i32 0, i32 0
  %317 = bitcast %struct.VkSurfaceFormatKHR** %316 to i64*
  store i64 %315, i64* %317, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  %318 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 2
  %319 = bitcast %"class.std::__1::vector.144"* %18 to <2 x i64>*
  %320 = load <2 x i64>, <2 x i64>* %319, align 8
  %321 = bitcast %"class.std::__1::vector.144"* %318 to <2 x i64>*
  store <2 x i64> %320, <2 x i64>* %321, align 8
  %322 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %323 = bitcast i32** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 2, i32 0, i32 2, i32 0, i32 0
  %326 = bitcast i32** %325 to i64*
  store i64 %324, i64* %326, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  %327 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 3
  %328 = bitcast %"class.std::__1::vector.151"* %20 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8
  %330 = bitcast %"class.std::__1::vector.151"* %327 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %330, align 8
  %331 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 3, i32 2, i32 0, i32 0
  %332 = getelementptr inbounds %class.Result.136, %class.Result.136* %0, i64 0, i32 2, i32 3, i32 2, i32 0, i32 0
  %333 = load i64, i64* %331, align 8
  store i64 %333, i64* %332, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  br label %334

334:                                              ; preds = %302, %301, %219, %218, %136, %62, %303
  %335 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 3, i32 0
  %336 = load i64*, i64** %335, align 8
  %337 = icmp eq i64* %336, null
  br i1 %337, label %340, label %338

338:                                              ; preds = %334
  %339 = bitcast i64* %336 to i8*
  call void @_ZdlPv(i8* %339) #13
  br label %340

340:                                              ; preds = %338, %334
  %341 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 2, i32 0, i32 0
  %342 = load i32*, i32** %341, align 8
  %343 = icmp eq i32* %342, null
  br i1 %343, label %349, label %344

344:                                              ; preds = %340
  %345 = ptrtoint i32* %342 to i64
  %346 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 2, i32 0, i32 1
  %347 = bitcast i32** %346 to i64*
  store i64 %345, i64* %347, align 8
  %348 = bitcast i32* %342 to i8*
  call void @_ZdlPv(i8* %348) #13
  br label %349

349:                                              ; preds = %344, %340
  %350 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 1, i32 0, i32 0
  %351 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %350, align 8
  %352 = icmp eq %struct.VkSurfaceFormatKHR* %351, null
  br i1 %352, label %358, label %353

353:                                              ; preds = %349
  %354 = ptrtoint %struct.VkSurfaceFormatKHR* %351 to i64
  %355 = getelementptr inbounds %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %4, i64 0, i32 1, i32 0, i32 1
  %356 = bitcast %struct.VkSurfaceFormatKHR** %355 to i64*
  store i64 %354, i64* %356, align 8
  %357 = bitcast %struct.VkSurfaceFormatKHR* %351 to i8*
  call void @_ZdlPv(i8* %357) #13
  br label %358

358:                                              ; preds = %349, %353
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %14) #12
  ret void
}

declare dereferenceable(1800) %"struct.dawn_native::vulkan::VulkanDeviceInfo"* @_ZNK11dawn_native6vulkan7Adapter13GetDeviceInfoEv(%"class.dawn_native::vulkan::Adapter"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.151"*, i64, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.151", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !16
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.151"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #12
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.151"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #14
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.151"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector.151"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !21
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #12, !noalias !26
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !29
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !26
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !26
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector.151"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector.151"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector.151"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector.151"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #12
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #12
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.54"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11InstanceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.50"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #12, !range !32
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.50", %"class.std::__1::__hash_table.50"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.54"**, %"struct.std::__1::__hash_node_base.54"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.54"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.54"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.54"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.54"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.54"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.54"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.54"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.54"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.54", %"struct.std::__1::__hash_node_base.54"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.54"*, %"struct.std::__1::__hash_node_base.54"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.54"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.54"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.54"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan11VulkanLayerEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #12, !range !32
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #1 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.77"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.VkQueueFamilyProperties** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.VkQueueFamilyProperties** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.VkQueueFamilyProperties*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %26, i1 false) #12
  %27 = ptrtoint %struct.VkQueueFamilyProperties* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.77"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.77"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #14
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #13
  %52 = bitcast i8* %51 to %struct.VkQueueFamilyProperties*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %struct.VkQueueFamilyProperties* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %55, i64 %34
  %57 = bitcast %struct.VkQueueFamilyProperties* %56 to i8*
  %58 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %55, i64 %54
  %59 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %56, i64 %1
  %60 = mul nsw i64 %1, 24
  %61 = add i64 %60, -24
  %62 = urem i64 %61, 24
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 24
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %struct.VkQueueFamilyProperties* %58 to i64
  %66 = ptrtoint %struct.VkQueueFamilyProperties* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 0
  %68 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %struct.VkQueueFamilyProperties* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -24
  %73 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %56, i64 %72
  %74 = ptrtoint %struct.VkQueueFamilyProperties* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %struct.VkQueueFamilyProperties* %73 to i8*
  %78 = bitcast %struct.VkQueueFamilyProperties* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %71, i1 false) #12
  %79 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %struct.VkQueueFamilyProperties* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %struct.VkQueueFamilyProperties* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %struct.VkQueueFamilyProperties* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.22"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.VkLayerProperties** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.VkLayerProperties** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 520
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.VkLayerProperties*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %13, i64 %1
  %17 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %13, i64 0, i32 0, i64 0
  %18 = add i64 %1, -1
  %19 = sub i64 0, %8
  %20 = getelementptr %struct.VkLayerProperties, %struct.VkLayerProperties* %13, i64 %18, i32 0, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = urem i64 %21, 520
  %23 = add i64 %21, 520
  %24 = sub i64 %23, %22
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %24, i1 false) #12
  %25 = ptrtoint %struct.VkLayerProperties* %16 to i64
  br label %26

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %25, %15 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %86

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 520
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 35474507834056830
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #14
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 520
  %40 = icmp ult i64 %39, 17737253917028415
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 35474507834056830, %37 ]
  %48 = mul i64 %47, 520
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %struct.VkLayerProperties*
  br label %51

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %struct.VkLayerProperties* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %53, i64 %32
  %55 = ptrtoint %struct.VkLayerProperties* %54 to i64
  %56 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %53, i64 %52
  %57 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %54, i64 %1
  %58 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %54, i64 0, i32 0, i64 0
  %59 = add i64 %1, -1
  %60 = sub i64 0, %55
  %61 = getelementptr %struct.VkLayerProperties, %struct.VkLayerProperties* %54, i64 %59, i32 0, i64 %60
  %62 = ptrtoint i8* %61 to i64
  %63 = urem i64 %62, 520
  %64 = add i64 %62, 520
  %65 = sub i64 %64, %63
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %65, i1 false) #12
  %66 = ptrtoint %struct.VkLayerProperties* %56 to i64
  %67 = ptrtoint %struct.VkLayerProperties* %57 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 0
  %69 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %68, align 8
  %70 = load i64, i64* %7, align 8
  %71 = ptrtoint %struct.VkLayerProperties* %69 to i64
  %72 = sub i64 %70, %71
  %73 = sdiv exact i64 %72, -520
  %74 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %54, i64 %73
  %75 = ptrtoint %struct.VkLayerProperties* %74 to i64
  %76 = icmp sgt i64 %72, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %51
  %78 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %74, i64 0, i32 0, i64 0
  %79 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %69, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %72, i1 false) #12
  %80 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %68, align 8
  br label %81

81:                                               ; preds = %51, %77
  %82 = phi %struct.VkLayerProperties* [ %69, %51 ], [ %80, %77 ]
  store i64 %75, i64* %29, align 8
  store i64 %67, i64* %7, align 8
  store i64 %66, i64* %4, align 8
  %83 = icmp eq %struct.VkLayerProperties* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %82, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %84, %81, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.99"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.VkExtensionProperties** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.VkExtensionProperties** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 260
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.VkExtensionProperties*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %13, i64 %1
  %17 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %13, i64 0, i32 0, i64 0
  %18 = add i64 %1, -1
  %19 = sub i64 0, %8
  %20 = getelementptr %struct.VkExtensionProperties, %struct.VkExtensionProperties* %13, i64 %18, i32 0, i64 %19
  %21 = ptrtoint i8* %20 to i64
  %22 = urem i64 %21, 260
  %23 = add i64 %21, 260
  %24 = sub i64 %23, %22
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %24, i1 false) #12
  %25 = ptrtoint %struct.VkExtensionProperties* %16 to i64
  br label %26

26:                                               ; preds = %12, %15
  %27 = phi i64 [ %25, %15 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %86

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.99"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 260
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 70949015668113660
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.99"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #14
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 260
  %40 = icmp ult i64 %39, 35474507834056830
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 70949015668113660, %37 ]
  %48 = mul i64 %47, 260
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %struct.VkExtensionProperties*
  br label %51

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %struct.VkExtensionProperties* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %53, i64 %32
  %55 = ptrtoint %struct.VkExtensionProperties* %54 to i64
  %56 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %53, i64 %52
  %57 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %54, i64 %1
  %58 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %54, i64 0, i32 0, i64 0
  %59 = add i64 %1, -1
  %60 = sub i64 0, %55
  %61 = getelementptr %struct.VkExtensionProperties, %struct.VkExtensionProperties* %54, i64 %59, i32 0, i64 %60
  %62 = ptrtoint i8* %61 to i64
  %63 = urem i64 %62, 260
  %64 = add i64 %62, 260
  %65 = sub i64 %64, %63
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 %65, i1 false) #12
  %66 = ptrtoint %struct.VkExtensionProperties* %56 to i64
  %67 = ptrtoint %struct.VkExtensionProperties* %57 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.99", %"class.std::__1::vector.99"* %0, i64 0, i32 0, i32 0
  %69 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %68, align 8
  %70 = load i64, i64* %7, align 8
  %71 = ptrtoint %struct.VkExtensionProperties* %69 to i64
  %72 = sub i64 %70, %71
  %73 = sdiv exact i64 %72, -260
  %74 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %54, i64 %73
  %75 = ptrtoint %struct.VkExtensionProperties* %74 to i64
  %76 = icmp sgt i64 %72, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %51
  %78 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %74, i64 0, i32 0, i64 0
  %79 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %69, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 %72, i1 false) #12
  %80 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %68, align 8
  br label %81

81:                                               ; preds = %51, %77
  %82 = phi %struct.VkExtensionProperties* [ %69, %51 ], [ %80, %77 ]
  store i64 %75, i64* %29, align 8
  store i64 %67, i64* %7, align 8
  store i64 %66, i64* %4, align 8
  %83 = icmp eq %struct.VkExtensionProperties* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %82, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %84, %81, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.111"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN11dawn_native6vulkan9DeviceExtEEENS_22__unordered_map_hasherIS7_SB_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SB_SG_SE_Lb1EEENS5_ISB_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEERKT_(%"class.std::__1::__hash_table.107"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.107", %"class.std::__1::__hash_table.107"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #12, !range !32
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.107", %"class.std::__1::__hash_table.107"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.111"**, %"struct.std::__1::__hash_node_base.111"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111"*, %"struct.std::__1::__hash_node_base.111"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.111"*, %"struct.std::__1::__hash_node_base.111"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.111"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.111"*, %"struct.std::__1::__hash_node_base.111"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.111"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.111"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.111"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.111"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.111"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.111"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.111"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.111", %"struct.std::__1::__hash_node_base.111"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.111"*, %"struct.std::__1::__hash_node_base.111"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.111"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.111"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.111"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.151"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.151", align 16
  %4 = alloca %"class.std::__1::__bit_iterator.178", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.178", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.151"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #12
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.151"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #14
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast %"class.std::__1::vector.151"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.151"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !33
  %26 = bitcast %"class.std::__1::__bit_iterator.178"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !33
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !33
  %28 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !38
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !41
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !41
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.151"* nonnull %3, %"class.std::__1::__bit_iterator.178"* nonnull %4, %"class.std::__1::__bit_iterator.178"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.151"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.151"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.151"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.151"*, %"class.std::__1::__bit_iterator.178"*, %"class.std::__1::__bit_iterator.178"*) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator.178", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.178", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.178", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.178", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator.178"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator.178"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !44
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator.178"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  %52 = bitcast %"class.std::__1::__bit_iterator.178"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator.178"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator.178"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !47
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !47
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !47
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #12, !noalias !47
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !47
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !47
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !47
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator.178"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !50
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !50
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator.178"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !53
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !53
  %126 = bitcast %"class.std::__1::__bit_iterator.178"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !53
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !53
  %128 = bitcast %"class.std::__1::__bit_iterator.178"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !53
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !53
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.178"* nonnull sret %7, %"class.std::__1::__bit_iterator.178"* nonnull %4, %"class.std::__1::__bit_iterator.178"* nonnull %5, %"class.std::__1::__bit_iterator.178"* nonnull %6) #12
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.178"* noalias sret, %"class.std::__1::__bit_iterator.178"*, %"class.std::__1::__bit_iterator.178"*, %"class.std::__1::__bit_iterator.178"*) local_unnamed_addr #1 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.178"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.178"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.178"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.178"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.178", %"class.std::__1::__bit_iterator.178"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI18VkSurfaceFormatKHRNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.137"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.VkSurfaceFormatKHR** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.VkSurfaceFormatKHR** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.VkSurfaceFormatKHR*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %struct.VkSurfaceFormatKHR* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.137"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.137"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %struct.VkSurfaceFormatKHR*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %struct.VkSurfaceFormatKHR* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %57, i64 %33
  %59 = bitcast %struct.VkSurfaceFormatKHR* %58 to i8*
  %60 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %57, i64 %56
  %61 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %struct.VkSurfaceFormatKHR* %60 to i64
  %64 = ptrtoint %struct.VkSurfaceFormatKHR* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %struct.VkSurfaceFormatKHR* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %58, i64 %71
  %73 = ptrtoint %struct.VkSurfaceFormatKHR* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %struct.VkSurfaceFormatKHR* %72 to i8*
  %77 = bitcast %struct.VkSurfaceFormatKHR* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %struct.VkSurfaceFormatKHR* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %struct.VkSurfaceFormatKHR* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.VkSurfaceFormatKHR* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI16VkPresentModeKHRNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.144"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.144"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.144"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #12
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIN11dawn_native6vulkan11VulkanLayerELm4EEE: argument 0"}
!6 = distinct !{!6, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIN11dawn_native6vulkan11VulkanLayerELm4EEE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK14BitSetIteratorILm4EN11dawn_native6vulkan11VulkanLayerEE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK14BitSetIteratorILm4EN11dawn_native6vulkan11VulkanLayerEE5beginEv"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!19 = distinct !{!19, !20, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!24 = distinct !{!24, !25, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!29 = !{!27, !30}
!30 = distinct !{!30, !31, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!32 = !{i64 0, i64 65}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!36 = distinct !{!36, !37, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!41 = !{!42, !39}
!42 = distinct !{!42, !43, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!50 = !{!48, !51}
!51 = distinct !{!51, !52, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!53 = !{!51}
