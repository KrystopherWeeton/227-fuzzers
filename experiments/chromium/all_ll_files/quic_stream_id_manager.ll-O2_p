; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_stream_id_manager.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_stream_id_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"struct.quic::QuicStreamsBlockedFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE5eraseIjEEmRKj = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@.str = private unnamed_addr constant [36 x i8] c"StreamsBlockedFrame's stream count \00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c" exceeds incoming max stream \00", align 1
@.str.2 = private unnamed_addr constant [69 x i8] c"../../net/third_party/quiche/src/quic/core/quic_stream_id_manager.cc\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"non-zero incoming stream count \00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c" when setting max incoming stream to \00", align 1
@FLAGS_quic_max_streams_window_divisor = external local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [72 x i8] c"Attempt to allocate a new outgoing stream that would exceed the limit (\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"Stream id \00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c" would exceed stream count limit \00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN4quic19QuicStreamIdManagerC1EPNS0_17DelegateInterfaceEbNS_11PerspectiveENS_17ParsedQuicVersionEjj = hidden unnamed_addr alias void (%"class.quic::QuicStreamIdManager"*, %"class.quic::QuicStreamIdManager::DelegateInterface"*, i1, i8, %"struct.quic::ParsedQuicVersion"*, i32, i32), void (%"class.quic::QuicStreamIdManager"*, %"class.quic::QuicStreamIdManager::DelegateInterface"*, i1, i8, %"struct.quic::ParsedQuicVersion"*, i32, i32)* @_ZN4quic19QuicStreamIdManagerC2EPNS0_17DelegateInterfaceEbNS_11PerspectiveENS_17ParsedQuicVersionEjj
@_ZN4quic19QuicStreamIdManagerD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicStreamIdManager"*), void (%"class.quic::QuicStreamIdManager"*)* @_ZN4quic19QuicStreamIdManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicStreamIdManagerC2EPNS0_17DelegateInterfaceEbNS_11PerspectiveENS_17ParsedQuicVersionEjj(%"class.quic::QuicStreamIdManager"* nocapture, %"class.quic::QuicStreamIdManager::DelegateInterface"*, i1 zeroext, i8 zeroext, %"struct.quic::ParsedQuicVersion"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %8 = zext i1 %2 to i8
  %9 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 0
  store %"class.quic::QuicStreamIdManager::DelegateInterface"* %1, %"class.quic::QuicStreamIdManager::DelegateInterface"** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  store i8 %8, i8* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 2
  store i8 %3, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 0
  store i32 %13, i32* %16, align 4
  %17 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  store i32 %15, i32* %17, align 4
  %18 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 5
  store i32 %5, i32* %18, align 4
  %19 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 6
  br i1 %2, label %20, label %22

20:                                               ; preds = %7
  %21 = tail call i32 @_ZN4quic9QuicUtils30GetFirstUnidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %15, i8 zeroext %3) #9
  br label %24

22:                                               ; preds = %7
  %23 = tail call i32 @_ZN4quic9QuicUtils29GetFirstBidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %15, i8 zeroext %3) #9
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i32 [ %21, %20 ], [ %23, %22 ]
  store i32 %25, i32* %19, align 8
  %26 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 7
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  store i32 %6, i32* %27, align 8
  %28 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  store i32 %6, i32* %28, align 4
  %29 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 10
  store i32 %6, i32* %29, align 8
  %30 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 11
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 1
  %33 = bitcast i32** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #9
  %34 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 13
  %35 = load i32, i32* %14, align 4
  %36 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %35) #9
  store i32 %36, i32* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic19QuicStreamIdManager24GetFirstOutgoingStreamIdEv(%"class.quic::QuicStreamIdManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  br i1 %4, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN4quic9QuicUtils30GetFirstUnidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %6, i8 zeroext %8) #9
  br label %13

11:                                               ; preds = %1
  %12 = tail call i32 @_ZN4quic9QuicUtils29GetFirstBidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %6, i8 zeroext %8) #9
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %10, %9 ], [ %12, %11 ]
  ret i32 %14
}

declare i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicStreamIdManagerD2Ev(%"class.quic::QuicStreamIdManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 1
  %7 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZdlPv(i8* %8) #12
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %7, align 8
  %9 = bitcast i32** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #9
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic19QuicStreamIdManager21OnStreamsBlockedFrameERKNS_23QuicStreamsBlockedFrameEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QuicStreamIdManager"* nocapture, %"struct.quic::QuicStreamsBlockedFrame"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = getelementptr inbounds %"struct.quic::QuicStreamsBlockedFrame", %"struct.quic::QuicStreamsBlockedFrame"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %11, %13
  br i1 %14, label %15, label %55

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 35, i64* %19, align 8
  %20 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 1, i64 0
  %22 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %11, i8* %21) #9
  %23 = ptrtoint i8* %22 to i64
  %24 = ptrtoint i8* %21 to i64
  %25 = sub i64 %23, %24
  %26 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %21, i8** %26, align 8
  %27 = icmp sgt i64 %25, -1
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %15
  call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 %25, i64* %30, align 8
  %31 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 29, i64* %33, align 8
  %34 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #9
  %35 = load i32, i32* %12, align 4
  %36 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 1, i64 0
  %37 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %35, i8* %36) #9
  %38 = ptrtoint i8* %37 to i64
  %39 = ptrtoint i8* %36 to i64
  %40 = sub i64 %38, %39
  %41 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 0
  store i8* %36, i8** %41, align 8
  %42 = icmp sgt i64 %40, -1
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %29
  call void @llvm.trap() #9
  unreachable

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 1
  store i64 %40, i64* %45, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9) #9
  %46 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %50, %44
  %54 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %16, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  br label %80

55:                                               ; preds = %3
  %56 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  %57 = load i32, i32* %56, align 8
  %58 = icmp ne i32 %13, %57
  %59 = icmp ult i32 %11, %57
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %80

61:                                               ; preds = %55
  %62 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %62, label %63, label %69

63:                                               ; preds = %61
  %64 = load i32, i32* %12, align 4
  %65 = load i32, i32* %56, align 8
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %68) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 117, i32 2) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %68) #9
  br label %69

69:                                               ; preds = %61, %63, %67
  %70 = load i32, i32* %56, align 8
  store i32 %70, i32* %12, align 4
  %71 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 0
  %72 = load %"class.quic::QuicStreamIdManager::DelegateInterface"*, %"class.quic::QuicStreamIdManager::DelegateInterface"** %71, align 8
  %73 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp ne i8 %74, 0
  %76 = bitcast %"class.quic::QuicStreamIdManager::DelegateInterface"* %72 to void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)***
  %77 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)**, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %77, i64 2
  %79 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %78, align 8
  call void %79(%"class.quic::QuicStreamIdManager::DelegateInterface"* %72, i32 %70, i1 zeroext %75) #9
  br label %80

80:                                               ; preds = %55, %69, %53
  %81 = phi i1 [ false, %53 ], [ true, %55 ], [ true, %69 ]
  ret i1 %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicStreamIdManager19SendMaxStreamsFrameEv(%"class.quic::QuicStreamIdManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %3, label %4, label %12

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 117, i32 2) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #9
  br label %12

12:                                               ; preds = %1, %4, %10
  %13 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 0
  %17 = load %"class.quic::QuicStreamIdManager::DelegateInterface"*, %"class.quic::QuicStreamIdManager::DelegateInterface"** %16, align 8
  %18 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp ne i8 %19, 0
  %21 = bitcast %"class.quic::QuicStreamIdManager::DelegateInterface"* %17 to void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)***
  %22 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)**, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %22, i64 2
  %24 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %23, align 8
  call void %24(%"class.quic::QuicStreamIdManager::DelegateInterface"* %17, i32 %14, i1 zeroext %20) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic19QuicStreamIdManager28MaybeAllowNewOutgoingStreamsEj(%"class.quic::QuicStreamIdManager"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = tail call i32 @_ZN4quic9QuicUtils17GetMaxStreamCountEv() #9
  %8 = icmp ult i32 %7, %1
  %9 = select i1 %8, i32 %7, i32 %1
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %11
}

declare i32 @_ZN4quic9QuicUtils17GetMaxStreamCountEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicStreamIdManager25SetMaxOpenIncomingStreamsEj(%"class.quic::QuicStreamIdManager"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %10) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 89, i32 2) #9
  %11 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %11 to %"class.std::__1::basic_ostream"*
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i64 31) #9
  %14 = load i32, i32* %6, align 4
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %13, i32 %14) #9
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 37) #9
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %16, i32 %1) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %10) #9
  br label %18

18:                                               ; preds = %2, %5, %9
  %19 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  store i32 %1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 10
  store i32 %1, i32* %21, align 8
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicStreamIdManager24MaybeSendMaxStreamsFrameEv(%"class.quic::QuicStreamIdManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = load i32, i32* @FLAGS_quic_max_streams_window_divisor, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %7, %9
  %11 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 10
  %12 = load i32, i32* %11, align 8
  %13 = udiv i32 %12, %3
  %14 = icmp ugt i32 %10, %13
  br i1 %14, label %38, label %15

15:                                               ; preds = %5, %1
  %16 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %19, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 117, i32 2) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #9
  br label %25

25:                                               ; preds = %15, %17, %23
  %26 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 0
  %30 = load %"class.quic::QuicStreamIdManager::DelegateInterface"*, %"class.quic::QuicStreamIdManager::DelegateInterface"** %29, align 8
  %31 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp ne i8 %32, 0
  %34 = bitcast %"class.quic::QuicStreamIdManager::DelegateInterface"* %30 to void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)***
  %35 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)**, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %35, i64 2
  %37 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %36, align 8
  call void %37(%"class.quic::QuicStreamIdManager::DelegateInterface"* %30, i32 %27, i1 zeroext %33) #9
  br label %38

38:                                               ; preds = %5, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic19QuicStreamIdManager14OnStreamClosedEj(%"class.quic::QuicStreamIdManager"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %5 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 0
  store i32 %6, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 1
  store i32 %8, i32* %10, align 4
  %11 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = call zeroext i1 @_ZN4quic9QuicUtils18IsOutgoingStreamIdENS_17ParsedQuicVersionEjNS_11PerspectiveE(%"struct.quic::ParsedQuicVersion"* nonnull %4, i32 %1, i8 zeroext %12) #9
  br i1 %13, label %55, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = call i32 @_ZN4quic9QuicUtils17GetMaxStreamCountEv() #9
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %55, label %19

19:                                               ; preds = %14
  %20 = load i32, i32* %15, align 8
  %21 = add i32 %20, 1
  store i32 %21, i32* %15, align 8
  %22 = load i32, i32* @FLAGS_quic_max_streams_window_divisor, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 11
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 %26, %28
  %30 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 10
  %31 = load i32, i32* %30, align 8
  %32 = udiv i32 %31, %22
  %33 = icmp ugt i32 %29, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %24, %19
  %35 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %15, align 8
  %40 = icmp ult i32 %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %42) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 117, i32 2) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %42) #9
  br label %43

43:                                               ; preds = %41, %36, %34
  %44 = load i32, i32* %15, align 8
  %45 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 0
  %47 = load %"class.quic::QuicStreamIdManager::DelegateInterface"*, %"class.quic::QuicStreamIdManager::DelegateInterface"** %46, align 8
  %48 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = bitcast %"class.quic::QuicStreamIdManager::DelegateInterface"* %47 to void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)***
  %52 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)**, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %52, i64 2
  %54 = load void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)*, void (%"class.quic::QuicStreamIdManager::DelegateInterface"*, i32, i1)** %53, align 8
  call void %54(%"class.quic::QuicStreamIdManager::DelegateInterface"* %47, i32 %44, i1 zeroext %50) #9
  br label %55

55:                                               ; preds = %43, %24, %14, %2
  ret void
}

declare zeroext i1 @_ZN4quic9QuicUtils18IsOutgoingStreamIdENS_17ParsedQuicVersionEjNS_11PerspectiveE(%"struct.quic::ParsedQuicVersion"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4quic19QuicStreamIdManager23GetNextOutgoingStreamIdEv(%"class.quic::QuicStreamIdManager"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %3, label %4, label %18

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.2, i64 0, i64 0), i32 142, i32 2) #9
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i64 0, i64 0), i64 71) #9
  %15 = load i32, i32* %7, align 4
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %14, i32 %15) #9
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #9
  br label %18

18:                                               ; preds = %1, %4, %10
  %19 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = call i32 @_ZN4quic9QuicUtils13StreamIdDeltaENS_20QuicTransportVersionE(i32 %22) #9
  %24 = load i32, i32* %19, align 8
  %25 = add i32 %24, %23
  store i32 %25, i32* %19, align 8
  %26 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 4
  ret i32 %20
}

declare i32 @_ZN4quic9QuicUtils13StreamIdDeltaENS_20QuicTransportVersionE(i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic19QuicStreamIdManager25CanOpenNextOutgoingStreamEv(%"class.quic::QuicStreamIdManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic19QuicStreamIdManager32MaybeIncreaseLargestPeerStreamIdEjPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.quic::QuicStreamIdManager"*, i32, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #5 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  store i32 %1, i32* %4, align 4
  %10 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0
  %11 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE5eraseIjEEmRKj(%"class.absl::container_internal::raw_hash_set"* %10, i32* nonnull dereferenceable(4) %4)
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %173, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %16) #9
  %18 = load i32, i32* %15, align 4
  %19 = call i32 @_ZN4quic9QuicUtils13StreamIdDeltaENS_20QuicTransportVersionE(i32 %18) #9
  %20 = load i32, i32* %14, align 8
  %21 = load i32, i32* %15, align 4
  %22 = call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %21) #9
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = load i32, i32* %15, align 4
  %29 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = icmp ne i8 %30, 1
  %32 = zext i1 %31 to i8
  br i1 %27, label %35, label %33

33:                                               ; preds = %24
  %34 = call i32 @_ZN4quic9QuicUtils30GetFirstUnidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %28, i8 zeroext %32) #9
  br label %40

35:                                               ; preds = %24
  %36 = call i32 @_ZN4quic9QuicUtils29GetFirstBidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %28, i8 zeroext %32) #9
  br label %40

37:                                               ; preds = %13
  %38 = load i32, i32* %14, align 8
  %39 = add i32 %38, %19
  br label %40

40:                                               ; preds = %35, %33, %37
  %41 = phi i32 [ %39, %37 ], [ %34, %33 ], [ %36, %35 ]
  %42 = load i32, i32* %4, align 4
  %43 = sub i32 %42, %41
  %44 = udiv i32 %43, %19
  %45 = add i32 %44, 1
  %46 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 11
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %50 = load i32, i32* %49, align 4
  %51 = icmp ugt i32 %48, %50
  br i1 %51, label %60, label %52

52:                                               ; preds = %40
  %53 = icmp ugt i32 %42, %41
  br i1 %53, label %54, label %103

54:                                               ; preds = %52
  %55 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !4
  %56 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %10, i64 0, i32 0
  %57 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 3
  %58 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 1
  %59 = load i8*, i8** %56, align 8, !noalias !4
  br label %106

60:                                               ; preds = %40
  %61 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #9
  %62 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 10, i64* %64, align 8
  %65 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #9
  %66 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 1, i64 0
  %67 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %42, i8* %66) #9
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %66 to i64
  %70 = sub i64 %68, %69
  %71 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %66, i8** %71, align 8
  %72 = icmp sgt i64 %70, -1
  br i1 %72, label %74, label %73, !prof !3

73:                                               ; preds = %60
  call void @llvm.trap() #9
  unreachable

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 %70, i64* %75, align 8
  %76 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76) #9
  %77 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i8** %77, align 8
  %78 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 33, i64* %78, align 8
  %79 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %79) #9
  %80 = load i32, i32* %49, align 4
  %81 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 1, i64 0
  %82 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %80, i8* %81) #9
  %83 = ptrtoint i8* %82 to i64
  %84 = ptrtoint i8* %81 to i64
  %85 = sub i64 %83, %84
  %86 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 0
  store i8* %81, i8** %86, align 8
  %87 = icmp sgt i64 %85, -1
  br i1 %87, label %89, label %88, !prof !3

88:                                               ; preds = %74
  call void @llvm.trap() #9
  unreachable

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 1
  store i64 %85, i64* %90, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_S2_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %7, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9) #9
  %91 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #12
  br label %98

98:                                               ; preds = %95, %89
  %99 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %61, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %79) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %62) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #9
  br label %173

100:                                              ; preds = %165
  %101 = load i32, i32* %46, align 4
  %102 = add i32 %101, %45
  br label %103

103:                                              ; preds = %100, %52
  %104 = phi i32 [ %102, %100 ], [ %48, %52 ]
  %105 = phi i32 [ %166, %100 ], [ %42, %52 ]
  store i32 %104, i32* %46, align 4
  store i32 %105, i32* %14, align 8
  br label %173

106:                                              ; preds = %54, %165
  %107 = phi i32 [ %42, %54 ], [ %166, %165 ]
  %108 = phi i8* [ %59, %54 ], [ %167, %165 ]
  %109 = phi i32 [ %41, %54 ], [ %171, %165 ]
  %110 = zext i32 %109 to i64
  %111 = add i64 %55, %110
  %112 = zext i64 %111 to i128
  %113 = mul nuw i128 %112, 11376068507788127593
  %114 = lshr i128 %113, 64
  %115 = xor i128 %114, %113
  %116 = trunc i128 %115 to i64
  %117 = load i64, i64* %57, align 8, !noalias !4
  %118 = lshr i64 %116, 7
  %119 = ptrtoint i8* %108 to i64
  %120 = lshr i64 %119, 12
  %121 = xor i64 %118, %120
  %122 = trunc i128 %115 to i8
  %123 = and i8 %122, 127
  %124 = insertelement <16 x i8> undef, i8 %123, i32 0
  %125 = shufflevector <16 x i8> %124, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %126

126:                                              ; preds = %156, %106
  %127 = phi i64 [ %121, %106 ], [ %158, %156 ]
  %128 = phi i64 [ 0, %106 ], [ %157, %156 ]
  %129 = and i64 %127, %117
  %130 = getelementptr inbounds i8, i8* %108, i64 %129
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1, !noalias !4
  %133 = icmp eq <16 x i8> %125, %132
  %134 = bitcast <16 x i1> %133 to i16
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %126
  %137 = zext i16 %134 to i32
  %138 = load i32*, i32** %58, align 8, !noalias !4
  br label %139

139:                                              ; preds = %148, %136
  %140 = phi i32 [ %137, %136 ], [ %150, %148 ]
  %141 = call i32 @llvm.cttz.i32(i32 %140, i1 false) #9, !range !11
  %142 = zext i32 %141 to i64
  %143 = add i64 %129, %142
  %144 = and i64 %143, %117
  %145 = getelementptr inbounds i32, i32* %138, i64 %144
  %146 = load i32, i32* %145, align 4, !noalias !4
  %147 = icmp eq i32 %146, %109
  br i1 %147, label %165, label %148, !prof !3

148:                                              ; preds = %139
  %149 = add i32 %140, -1
  %150 = and i32 %149, %140
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %139

152:                                              ; preds = %148, %126
  %153 = icmp eq <16 x i8> %132, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %154 = bitcast <16 x i1> %153 to i16
  %155 = icmp eq i16 %154, 0
  br i1 %155, label %156, label %159, !prof !12

156:                                              ; preds = %152
  %157 = add i64 %128, 16
  %158 = add i64 %157, %129
  br label %126

159:                                              ; preds = %152
  %160 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %10, i64 %116) #9, !noalias !4
  %161 = load i32*, i32** %58, align 8, !noalias !4
  %162 = getelementptr inbounds i32, i32* %161, i64 %160
  store i32 %109, i32* %162, align 4, !noalias !4
  %163 = load i8*, i8** %56, align 8, !noalias !4
  %164 = load i32, i32* %4, align 4
  br label %165

165:                                              ; preds = %139, %159
  %166 = phi i32 [ %164, %159 ], [ %107, %139 ]
  %167 = phi i8* [ %163, %159 ], [ %108, %139 ]
  %168 = phi i64 [ %160, %159 ], [ %144, %139 ]
  %169 = getelementptr inbounds i8, i8* %167, i64 %168
  %170 = icmp ne i8* %169, null
  call void @llvm.assume(i1 %170) #9, !noalias !4
  %171 = add i32 %109, %19
  %172 = icmp ult i32 %171, %166
  br i1 %172, label %106, label %100

173:                                              ; preds = %98, %103, %3
  %174 = phi i1 [ true, %3 ], [ false, %98 ], [ true, %103 ]
  ret i1 %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE5eraseIjEEmRKj(%"class.absl::container_internal::raw_hash_set"*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %3 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i64 [ %19, %2 ], [ %57, %55 ]
  %27 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load i32*, i32** %24, align 8
  br label %38

38:                                               ; preds = %47, %35
  %39 = phi i32 [ %36, %35 ], [ %49, %47 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #9, !range !11
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds i32, i32* %37, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %3
  br i1 %46, label %58, label %47, !prof !3

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %105, !prof !12

55:                                               ; preds = %51
  %56 = add i64 %27, 16
  %57 = add i64 %56, %28
  br label %25

58:                                               ; preds = %38
  %59 = getelementptr inbounds i8, i8* %13, i64 %43
  %60 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %60) #9
  %61 = load i8, i8* %59, align 1
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %58
  tail call void @llvm.trap() #9
  unreachable

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = add i64 %43, -16
  %69 = and i64 %68, %15
  %70 = bitcast i8* %59 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp eq <16 x i8> %71, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = getelementptr inbounds i8, i8* %13, i64 %69
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1
  %77 = icmp eq <16 x i8> %76, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %78 = bitcast <16 x i1> %77 to i16
  %79 = icmp ne i16 %78, 0
  %80 = icmp ne i16 %73, 0
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %92

82:                                               ; preds = %64
  %83 = zext i16 %73 to i32
  %84 = zext i16 %78 to i32
  %85 = tail call i32 @llvm.cttz.i32(i32 %83, i1 false) #9, !range !11
  %86 = shl nuw i32 %84, 16
  %87 = tail call i32 @llvm.ctlz.i32(i32 %86, i1 false) #9, !range !11
  %88 = add nuw nsw i32 %87, %85
  %89 = icmp ult i32 %88, 16
  %90 = zext i1 %89 to i64
  %91 = select i1 %89, i8 -128, i8 -2
  br label %92

92:                                               ; preds = %64, %82
  %93 = phi i64 [ 0, %64 ], [ %90, %82 ]
  %94 = phi i8 [ -2, %64 ], [ %91, %82 ]
  store i8 %94, i8* %59, align 1
  %95 = load i8*, i8** %12, align 8
  %96 = add i64 %43, -15
  %97 = load i64, i64* %14, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, %93
  store i64 %104, i64* %102, align 8
  br label %105

105:                                              ; preds = %51, %92
  %106 = phi i64 [ 1, %92 ], [ 0, %51 ]
  ret i64 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4quic19QuicStreamIdManager24GetFirstIncomingStreamIdEv(%"class.quic::QuicStreamIdManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 1
  %10 = zext i1 %9 to i8
  br i1 %4, label %13, label %11

11:                                               ; preds = %1
  %12 = tail call i32 @_ZN4quic9QuicUtils30GetFirstUnidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %6, i8 zeroext %10) #9
  br label %15

13:                                               ; preds = %1
  %14 = tail call i32 @_ZN4quic9QuicUtils29GetFirstBidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32 %6, i8 zeroext %10) #9
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi i32 [ %12, %11 ], [ %14, %13 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic19QuicStreamIdManager17IsAvailableStreamEj(%"class.quic::QuicStreamIdManager"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %4 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 4, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 0
  store i32 %5, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %3, i64 0, i32 1
  store i32 %7, i32* %9, align 4
  %10 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = call zeroext i1 @_ZN4quic9QuicUtils18IsOutgoingStreamIdENS_17ParsedQuicVersionEjNS_11PerspectiveE(%"struct.quic::ParsedQuicVersion"* nonnull %3, i32 %1, i8 zeroext %11) #9
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp ule i32 %15, %1
  br label %90

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 13
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %20) #9
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %90, label %23

23:                                               ; preds = %17
  %24 = load i32, i32* %18, align 8
  %25 = icmp ult i32 %24, %1
  br i1 %25, label %90, label %26

26:                                               ; preds = %23
  %27 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %28 = zext i32 %1 to i64
  %29 = add i64 %27, %28
  %30 = zext i64 %29 to i128
  %31 = mul nuw i128 %30, 11376068507788127593
  %32 = lshr i128 %31, 64
  %33 = xor i128 %32, %31
  %34 = trunc i128 %33 to i64
  %35 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 3
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %34, 7
  %40 = ptrtoint i8* %36 to i64
  %41 = lshr i64 %40, 12
  %42 = xor i64 %39, %41
  %43 = trunc i128 %33 to i8
  %44 = and i8 %43, 127
  %45 = insertelement <16 x i8> undef, i8 %44, i32 0
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <16 x i32> zeroinitializer
  %47 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 12, i32 0, i32 1
  %48 = load i32*, i32** %47, align 8
  br label %49

49:                                               ; preds = %78, %26
  %50 = phi i64 [ %42, %26 ], [ %80, %78 ]
  %51 = phi i64 [ 0, %26 ], [ %79, %78 ]
  %52 = and i64 %50, %38
  %53 = getelementptr inbounds i8, i8* %36, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp eq <16 x i8> %46, %55
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %49
  %60 = zext i16 %57 to i32
  br label %61

61:                                               ; preds = %70, %59
  %62 = phi i32 [ %60, %59 ], [ %72, %70 ]
  %63 = call i32 @llvm.cttz.i32(i32 %62, i1 false) #9, !range !11
  %64 = zext i32 %63 to i64
  %65 = add i64 %52, %64
  %66 = and i64 %65, %38
  %67 = getelementptr inbounds i32, i32* %48, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %1
  br i1 %69, label %81, label %70, !prof !3

70:                                               ; preds = %61
  %71 = add i32 %62, -1
  %72 = and i32 %71, %62
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %61

74:                                               ; preds = %70, %49
  %75 = icmp eq <16 x i8> %55, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %76 = bitcast <16 x i1> %75 to i16
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %78, label %87, !prof !12

78:                                               ; preds = %74
  %79 = add i64 %51, 16
  %80 = add i64 %79, %52
  br label %49

81:                                               ; preds = %61
  %82 = getelementptr inbounds i8, i8* %36, i64 %66
  %83 = icmp ne i8* %82, null
  call void @llvm.assume(i1 %83) #9
  %84 = load i8, i8* %82, align 1
  %85 = icmp sgt i8 %84, -1
  br i1 %85, label %87, label %86, !prof !3

86:                                               ; preds = %81
  call void @llvm.trap() #9
  unreachable

87:                                               ; preds = %74, %81
  %88 = phi i8* [ %82, %81 ], [ null, %74 ]
  %89 = icmp ne i8* %88, null
  br label %90

90:                                               ; preds = %17, %23, %87, %13
  %91 = phi i1 [ %16, %13 ], [ true, %23 ], [ true, %17 ], [ %89, %87 ]
  ret i1 %91
}

declare i32 @_ZN4quic9QuicUtils30GetFirstUnidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32, i8 zeroext) local_unnamed_addr #1

declare i32 @_ZN4quic9QuicUtils29GetFirstBidirectionalStreamIdENS_20QuicTransportVersionENS_11PerspectiveE(i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4quic19QuicStreamIdManager26available_incoming_streamsEv(%"class.quic::QuicStreamIdManager"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %3, %5
  ret i32 %6
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #9, !range !11
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #9
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #9
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #9
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #9, !range !11
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 19
  %11 = and i64 %10, -4
  %12 = shl i64 %1, 2
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #12
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast i32** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #9
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %93, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %89
  br i1 %24, label %93, label %92

28:                                               ; preds = %25, %89
  %29 = phi i64 [ 0, %25 ], [ %90, %89 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %89

33:                                               ; preds = %28
  %34 = getelementptr inbounds i32, i32* %6, i64 %29
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #9, !range !11
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load i32*, i32** %5, align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 %75
  %88 = load i32, i32* %34, align 4
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %28, %68
  %90 = add nuw i64 %29, 1
  %91 = icmp eq i64 %90, %8
  br i1 %91, label %27, label %28

92:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #12
  br label %93

93:                                               ; preds = %2, %27, %92
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #9
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %118, %1
  %12 = phi i64 [ 0, %1 ], [ %120, %118 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %118
  %20 = phi i64 [ %6, %8 ], [ %121, %118 ]
  %21 = phi i64 [ 0, %8 ], [ %120, %118 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %118

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load i32*, i32** %9, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 %21
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #9, !range !11
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %118

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load i32*, i32** %9, align 8
  br i1 %86, label %97, label %110

97:                                               ; preds = %83
  %98 = getelementptr inbounds i32, i32* %96, i64 %67
  %99 = getelementptr inbounds i32, i32* %96, i64 %21
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %98, align 4
  %101 = load i8*, i8** %2, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %21
  store i8 -128, i8* %102, align 1
  %103 = load i8*, i8** %2, align 8
  %104 = add i64 %21, -15
  %105 = load i64, i64* %4, align 8
  %106 = and i64 %105, %104
  %107 = and i64 %105, 15
  %108 = add i64 %106, %107
  %109 = getelementptr inbounds i8, i8* %103, i64 %108
  store i8 -128, i8* %109, align 1
  br label %118

110:                                              ; preds = %83
  %111 = getelementptr inbounds i32, i32* %96, i64 %21
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds i32, i32* %96, i64 %67
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %111, align 4
  %115 = load i32*, i32** %9, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 %67
  store i32 %112, i32* %116, align 4
  %117 = add i64 %21, -1
  br label %118

118:                                              ; preds = %73, %110, %97, %19
  %119 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %117, %110 ]
  %120 = add i64 %119, 1
  %121 = load i64, i64* %4, align 8
  %122 = icmp eq i64 %120, %121
  br i1 %122, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE19EmplaceDecomposableclIjJRKjEEENS7_4pairINSC_8iteratorEbEERKT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE19EmplaceDecomposableclIjJRKjEEENS7_4pairINSC_8iteratorEbEERKT_DpOT0_"}
!7 = distinct !{!7, !8, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE7emplaceIJRKjELi0EEENS7_4pairINSC_8iteratorEbEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE7emplaceIJRKjELi0EEENS7_4pairINSC_8iteratorEbEEDpOT_"}
!9 = distinct !{!9, !10, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE6insertIjLi0ELi0EEENS7_4pairINSC_8iteratorEbEERKT_: argument 0"}
!10 = distinct !{!10, !"_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashSetPolicyIjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorIjEEE6insertIjLi0ELi0EEENS7_4pairINSC_8iteratorEbEERKT_"}
!11 = !{i32 0, i32 33}
!12 = !{!"branch_weights", i32 1, i32 2000}
