; ModuleID = '../../base/process/memory_linux.cc'
source_filename = "../../base/process/memory_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedAllowBlocking" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [15 x i8] c"AdjustOOMScore\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../base/process/memory_linux.cc\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"oom_score_adj\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"oom_adj\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base33EnableTerminationOnHeapCorruptionEv() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base30EnableTerminationOnOutOfMemoryEv() local_unnamed_addr #1 {
  %1 = tail call void ()* @_ZSt15set_new_handlerPFvvE(void ()* nonnull @_ZN4base12_GLOBAL__N_129ReleaseReservationOrTerminateEv) #6
  tail call void @_ZN4base9allocator32SetCallNewHandlerOnMallocFailureEb(i1 zeroext true) #6
  ret void
}

; Function Attrs: nounwind
declare void ()* @_ZSt15set_new_handlerPFvvE(void ()*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_129ReleaseReservationOrTerminateEv() #1 {
  %1 = tail call zeroext i1 @_ZN4base8internal30ReleaseAddressSpaceReservationEv() #6
  br i1 %1, label %3, label %2

2:                                                ; preds = %0
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 0) #6
  br label %3

3:                                                ; preds = %0, %2
  ret void
}

declare void @_ZN4base9allocator32SetCallNewHandlerOnMallocFailureEb(i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base20AdjustOOMScoreHelper14AdjustOOMScoreEii(i32, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca %"class.base::ScopedAllowBlocking", align 1
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::FilePath", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = icmp ugt i32 %1, 1000
  br i1 %10, label %72, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN4base8internal13GetProcPidDirEi(%"class.base::FilePath"* nonnull sret %3, i32 %0) #6
  %14 = getelementptr inbounds %"class.base::ScopedAllowBlocking", %"class.base::ScopedAllowBlocking"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #6
  store i8 -86, i8* %14, align 1
  %15 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 78) #6
  call void @_ZN4base19ScopedAllowBlockingC1ERKNS_8LocationE(%"class.base::ScopedAllowBlocking"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  %16 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #6
  %17 = bitcast %"class.base::FilePath"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %6, %"class.base::FilePath"* nonnull %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #6
  %18 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %6) #6
  br i1 %18, label %19, label %40

19:                                               ; preds = %11
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %7, i32 %1) #6
  %24 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i64, i64* %22, align 8
  %29 = trunc i64 %28 to i32
  %30 = load i8*, i8** %21, align 8
  %31 = zext i8 %26 to i32
  %32 = select i1 %27, i32 %29, i32 %31
  %33 = select i1 %27, i8* %30, i8* %20
  %34 = call i32 @_ZN4base9WriteFileERKNS_8FilePathEPKci(%"class.base::FilePath"* nonnull dereferenceable(24) %6, i8* %33, i32 %32) #6
  %35 = icmp eq i32 %34, %32
  %36 = load i8, i8* %25, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %39) #7
  br label %67

40:                                               ; preds = %11
  %41 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #6
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %8, %"class.base::FilePath"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #6
  %42 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* nonnull %6, %"class.base::FilePath"* nonnull dereferenceable(24) %8) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #6
  %43 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %6) #6
  br i1 %43, label %44, label %70

44:                                               ; preds = %40
  %45 = mul nsw i32 %1, 15
  %46 = sdiv i32 %45, 1000
  %47 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #6
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %9, i32 %46) #6
  %51 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i64, i64* %49, align 8
  %56 = trunc i64 %55 to i32
  %57 = load i8*, i8** %48, align 8
  %58 = zext i8 %53 to i32
  %59 = select i1 %54, i32 %56, i32 %58
  %60 = select i1 %54, i8* %57, i8* %47
  %61 = call i32 @_ZN4base9WriteFileERKNS_8FilePathEPKci(%"class.base::FilePath"* nonnull dereferenceable(24) %6, i8* %60, i32 %59) #6
  %62 = icmp eq i32 %61, %59
  %63 = load i8, i8* %52, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %44
  %66 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %66) #7
  br label %67

67:                                               ; preds = %65, %44, %38, %19
  %68 = phi i8* [ %20, %19 ], [ %20, %38 ], [ %47, %44 ], [ %47, %65 ]
  %69 = phi i1 [ %35, %19 ], [ %35, %38 ], [ %62, %44 ], [ %62, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #6
  br label %70

70:                                               ; preds = %67, %40
  %71 = phi i1 [ false, %40 ], [ %69, %67 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #6
  call void @_ZN4base19ScopedAllowBlockingD1Ev(%"class.base::ScopedAllowBlocking"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %72

72:                                               ; preds = %2, %70
  %73 = phi i1 [ %71, %70 ], [ false, %2 ]
  ret i1 %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8internal13GetProcPidDirEi(%"class.base::FilePath"* sret, i32) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN4base19ScopedAllowBlockingC1ERKNS_8LocationE(%"class.base::ScopedAllowBlocking"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

declare i32 @_ZN4base9WriteFileERKNS_8FilePathEPKci(%"class.base::FilePath"* dereferenceable(24), i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base19ScopedAllowBlockingD1Ev(%"class.base::ScopedAllowBlocking"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base14AdjustOOMScoreEii(i32, i32) local_unnamed_addr #1 {
  %3 = tail call zeroext i1 @_ZN4base20AdjustOOMScoreHelper14AdjustOOMScoreEii(i32 %0, i32 %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64, i8** nocapture) local_unnamed_addr #1 {
  %3 = tail call i8* @_ZN4base9allocator14UncheckedAllocEm(i64 %0) #6
  store i8* %3, i8** %1, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

declare i8* @_ZN4base9allocator14UncheckedAllocEm(i64) local_unnamed_addr #3

declare zeroext i1 @_ZN4base8internal30ReleaseAddressSpaceReservationEv() local_unnamed_addr #3

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
