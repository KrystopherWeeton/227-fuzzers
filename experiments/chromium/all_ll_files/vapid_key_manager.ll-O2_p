; ModuleID = '../../chrome/browser/sharing/vapid_key_manager.cc'
source_filename = "../../chrome/browser/sharing/vapid_key_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.VapidKeyManager = type { i32 (...)**, %class.SharingSyncPreference*, %"class.syncer::SyncService"*, %"class.std::__1::unique_ptr", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.crypto::ECPrivateKey"* }
%"class.crypto::ECPrivateKey" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i8* }
%class.SharingSyncPreference = type { %class.PrefService*, %"class.syncer::DeviceInfoSyncService"*, %"class.syncer::LocalDeviceInfoProvider"*, %class.PrefChangeRegistrar }
%class.PrefService = type opaque
%"class.syncer::DeviceInfoSyncService" = type opaque
%"class.syncer::LocalDeviceInfoProvider" = type opaque
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.syncer::SyncService" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }

@_ZTV15VapidKeyManager = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.VapidKeyManager*)* @_ZN15VapidKeyManagerD2Ev to i8*), i8* bitcast (void (%class.VapidKeyManager*)* @_ZN15VapidKeyManagerD0Ev to i8*), i8* bitcast (%"class.crypto::ECPrivateKey"* (%class.VapidKeyManager*)* @_ZN15VapidKeyManager14GetOrCreateKeyEv to i8*)] }, align 8

@_ZN15VapidKeyManagerC1EP21SharingSyncPreferencePN6syncer11SyncServiceE = hidden unnamed_addr alias void (%class.VapidKeyManager*, %class.SharingSyncPreference*, %"class.syncer::SyncService"*), void (%class.VapidKeyManager*, %class.SharingSyncPreference*, %"class.syncer::SyncService"*)* @_ZN15VapidKeyManagerC2EP21SharingSyncPreferencePN6syncer11SyncServiceE
@_ZN15VapidKeyManagerD1Ev = hidden unnamed_addr alias void (%class.VapidKeyManager*), void (%class.VapidKeyManager*)* @_ZN15VapidKeyManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15VapidKeyManagerC2EP21SharingSyncPreferencePN6syncer11SyncServiceE(%class.VapidKeyManager* nocapture, %class.SharingSyncPreference*, %"class.syncer::SyncService"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15VapidKeyManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 1
  store %class.SharingSyncPreference* %1, %class.SharingSyncPreference** %5, align 8
  %6 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 2
  store %"class.syncer::SyncService"* %2, %"class.syncer::SyncService"** %6, align 8
  %7 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15VapidKeyManagerD2Ev(%class.VapidKeyManager* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15VapidKeyManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #6
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %11, align 8
  store %"class.crypto::ECPrivateKey"* null, %"class.crypto::ECPrivateKey"** %11, align 8
  %13 = icmp eq %"class.crypto::ECPrivateKey"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  tail call void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"* nonnull %12) #7
  %15 = bitcast %"class.crypto::ECPrivateKey"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15VapidKeyManagerD0Ev(%class.VapidKeyManager*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15VapidKeyManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #6
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %11, align 8
  store %"class.crypto::ECPrivateKey"* null, %"class.crypto::ECPrivateKey"** %11, align 8
  %13 = icmp eq %"class.crypto::ECPrivateKey"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  tail call void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"* nonnull %12) #7
  %15 = bitcast %"class.crypto::ECPrivateKey"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %10, %14
  %17 = bitcast %class.VapidKeyManager* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.crypto::ECPrivateKey"* @_ZN15VapidKeyManager14GetOrCreateKeyEv(%class.VapidKeyManager*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %2, align 8
  %4 = icmp eq %"class.crypto::ECPrivateKey"* %3, null
  br i1 %4, label %5, label %25

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN15VapidKeyManager18InitWithPreferenceEv(%class.VapidKeyManager* %0) #7
  br i1 %6, label %25, label %7

7:                                                ; preds = %5
  %8 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %2, align 8
  %9 = icmp eq %"class.crypto::ECPrivateKey"* %8, null
  br i1 %9, label %10, label %25

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 2
  %12 = load %"class.syncer::SyncService"*, %"class.syncer::SyncService"** %11, align 8
  %13 = bitcast %"class.syncer::SyncService"* %12 to i64 (%"class.syncer::SyncService"*)***
  %14 = load i64 (%"class.syncer::SyncService"*)**, i64 (%"class.syncer::SyncService"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %14, i64 16
  %16 = load i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %15, align 8
  %17 = tail call i64 %16(%"class.syncer::SyncService"* %12) #7
  %18 = and i64 %17, 2
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %10
  %21 = tail call %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey6CreateEv() #7
  %22 = icmp eq %"class.crypto::ECPrivateKey"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = tail call zeroext i1 @_ZN15VapidKeyManager15UpdateCachedKeyENSt3__110unique_ptrIN6crypto12ECPrivateKeyENS0_14default_deleteIS3_EEEE(%class.VapidKeyManager* %0, %"class.crypto::ECPrivateKey"* nonnull %21) #7
  br label %25

25:                                               ; preds = %1, %23, %20, %10, %7, %5
  %26 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %2, align 8
  ret %"class.crypto::ECPrivateKey"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15VapidKeyManager16RefreshCachedKeyEv(%class.VapidKeyManager*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN15VapidKeyManager18InitWithPreferenceEv(%class.VapidKeyManager* %0)
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %4, align 8
  %6 = icmp eq %"class.crypto::ECPrivateKey"* %5, null
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 2
  %9 = load %"class.syncer::SyncService"*, %"class.syncer::SyncService"** %8, align 8
  %10 = bitcast %"class.syncer::SyncService"* %9 to i64 (%"class.syncer::SyncService"*)***
  %11 = load i64 (%"class.syncer::SyncService"*)**, i64 (%"class.syncer::SyncService"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %11, i64 16
  %13 = load i64 (%"class.syncer::SyncService"*)*, i64 (%"class.syncer::SyncService"*)** %12, align 8
  %14 = tail call i64 %13(%"class.syncer::SyncService"* %9) #7
  %15 = and i64 %14, 2
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %7
  %18 = tail call %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey6CreateEv() #7
  %19 = icmp eq %"class.crypto::ECPrivateKey"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = tail call zeroext i1 @_ZN15VapidKeyManager15UpdateCachedKeyENSt3__110unique_ptrIN6crypto12ECPrivateKeyENS0_14default_deleteIS3_EEEE(%class.VapidKeyManager* %0, %"class.crypto::ECPrivateKey"* nonnull %18)
  br label %22

22:                                               ; preds = %17, %7, %3, %20, %1
  %23 = phi i1 [ true, %1 ], [ false, %3 ], [ false, %7 ], [ %21, %20 ], [ false, %17 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15VapidKeyManager18InitWithPreferenceEv(%class.VapidKeyManager* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional", align 8
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 32, i1 false)
  %4 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 1
  %5 = load %class.SharingSyncPreference*, %class.SharingSyncPreference** %4, align 8
  call void @_ZNK21SharingSyncPreference11GetVapidKeyEv(%"class.absl::optional"* nonnull sret %2, %class.SharingSyncPreference* %5) #7
  %6 = load i8, i8* %3, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %86, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to i8*
  %25 = inttoptr i64 %13 to i8*
  %26 = inttoptr i64 %21 to i8*
  br i1 %23, label %27, label %39

27:                                               ; preds = %8
  %28 = icmp eq i8* %24, %25
  br i1 %28, label %76, label %29

29:                                               ; preds = %27, %35
  %30 = phi i8* [ %37, %35 ], [ %26, %27 ]
  %31 = phi i8* [ %36, %35 ], [ %24, %27 ]
  %32 = load i8, i8* %31, align 1
  %33 = load i8, i8* %30, align 1
  %34 = icmp eq i8 %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %29
  %36 = getelementptr inbounds i8, i8* %31, i64 1
  %37 = getelementptr inbounds i8, i8* %30, i64 1
  %38 = icmp eq i8* %36, %25
  br i1 %38, label %72, label %29

39:                                               ; preds = %29, %8
  %40 = call %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey24CreateFromPrivateKeyInfoEN4base4spanIKhLm18446744073709551615EEE(i64 %22, i8* %26) #7
  %41 = ptrtoint %"class.crypto::ECPrivateKey"* %40 to i64
  %42 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %43, align 8
  %45 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %41, i64* %45, align 8
  %46 = icmp eq %"class.crypto::ECPrivateKey"* %44, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  call void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"* nonnull %44) #7
  %48 = bitcast %"class.crypto::ECPrivateKey"* %44 to i8*
  call void @_ZdlPv(i8* %48) #6
  br label %49

49:                                               ; preds = %47, %39
  %50 = load i8, i8* %3, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %49
  call void @llvm.trap() #7
  unreachable

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = ptrtoint i8* %55 to i64
  store i64 %58, i64* %12, align 8
  call void @_ZdlPv(i8* nonnull %55) #6
  %59 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #7
  %60 = load i8, i8* %3, align 8, !range !2
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i8 [ 1, %53 ], [ %60, %57 ]
  %63 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  %65 = bitcast %"class.std::__1::vector"* %9 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast i8** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #7
  br label %72

72:                                               ; preds = %35, %61
  %73 = phi i8 [ %62, %61 ], [ %6, %35 ]
  %74 = phi i1 [ true, %61 ], [ false, %35 ]
  %75 = icmp eq i8 %73, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %27, %72
  %77 = phi i1 [ %74, %72 ], [ false, %27 ]
  %78 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = ptrtoint i8* %79 to i64
  %83 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %84 = bitcast i8** %83 to i64*
  store i64 %82, i64* %84, align 8
  call void @_ZdlPv(i8* nonnull %79) #6
  br label %85

85:                                               ; preds = %81, %76
  store i8 0, i8* %3, align 8
  br label %86

86:                                               ; preds = %1, %72, %85
  %87 = phi i1 [ %74, %72 ], [ %77, %85 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #7
  ret i1 %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey6CreateEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15VapidKeyManager15UpdateCachedKeyENSt3__110unique_ptrIN6crypto12ECPrivateKeyENS0_14default_deleteIS3_EEEE(%class.VapidKeyManager*, %"class.crypto::ECPrivateKey"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = ptrtoint %"class.crypto::ECPrivateKey"* %1 to i64
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #7
  %9 = call zeroext i1 @_ZNK6crypto12ECPrivateKey16ExportPrivateKeyEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crypto::ECPrivateKey"* %1, %"class.std::__1::vector"* nonnull %3) #7
  br i1 %9, label %10, label %66

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4
  %12 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = bitcast i8** %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %3 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %17, %22
  %24 = inttoptr i64 %16 to i8*
  %25 = inttoptr i64 %14 to i8*
  br i1 %23, label %26, label %40

26:                                               ; preds = %10
  %27 = icmp eq i8* %24, %25
  br i1 %27, label %66, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to i8*
  br label %30

30:                                               ; preds = %28, %36
  %31 = phi i8* [ %38, %36 ], [ %29, %28 ]
  %32 = phi i8* [ %37, %36 ], [ %24, %28 ]
  %33 = load i8, i8* %32, align 1
  %34 = load i8, i8* %31, align 1
  %35 = icmp eq i8 %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds i8, i8* %32, i64 1
  %38 = getelementptr inbounds i8, i8* %31, i64 1
  %39 = icmp eq i8* %37, %25
  br i1 %39, label %66, label %30

40:                                               ; preds = %30, %10
  %41 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.crypto::ECPrivateKey"*, %"class.crypto::ECPrivateKey"** %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  store i64 %4, i64* %44, align 8
  %45 = icmp eq %"class.crypto::ECPrivateKey"* %43, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  call void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"* nonnull %43) #7
  %47 = bitcast %"class.crypto::ECPrivateKey"* %43 to i8*
  call void @_ZdlPv(i8* %47) #6
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %40, %46
  %51 = phi i8* [ %24, %40 ], [ %49, %46 ]
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = ptrtoint i8* %51 to i64
  store i64 %54, i64* %13, align 8
  call void @_ZdlPv(i8* nonnull %51) #6
  %55 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #7
  br label %56

56:                                               ; preds = %50, %53
  %57 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 16
  %59 = bitcast %"class.std::__1::vector"* %11 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %59, align 8
  %60 = bitcast i8** %8 to i64*
  %61 = load i64, i64* %60, align 16
  %62 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #7
  %64 = getelementptr inbounds %class.VapidKeyManager, %class.VapidKeyManager* %0, i64 0, i32 1
  %65 = load %class.SharingSyncPreference*, %class.SharingSyncPreference** %64, align 8
  call void @_ZNK21SharingSyncPreference11SetVapidKeyERKNSt3__16vectorIhNS0_9allocatorIhEEEE(%class.SharingSyncPreference* %65, %"class.std::__1::vector"* dereferenceable(24) %11) #7
  br label %66

66:                                               ; preds = %36, %26, %2, %56
  %67 = phi i64 [ 0, %56 ], [ %4, %2 ], [ %4, %26 ], [ %4, %36 ]
  %68 = phi i1 [ true, %56 ], [ false, %2 ], [ false, %26 ], [ false, %36 ]
  %69 = load i8*, i8** %6, align 16
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %7 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #6
  br label %74

74:                                               ; preds = %66, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  %75 = icmp eq i64 %67, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %74
  %77 = inttoptr i64 %67 to %"class.crypto::ECPrivateKey"*
  call void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"* nonnull %77) #7
  %78 = inttoptr i64 %67 to i8*
  call void @_ZdlPv(i8* %78) #6
  br label %79

79:                                               ; preds = %74, %76
  ret i1 %68
}

declare zeroext i1 @_ZNK6crypto12ECPrivateKey16ExportPrivateKeyEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.crypto::ECPrivateKey"*, %"class.std::__1::vector"*) local_unnamed_addr #3

declare void @_ZNK21SharingSyncPreference11SetVapidKeyERKNSt3__16vectorIhNS0_9allocatorIhEEEE(%class.SharingSyncPreference*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZNK21SharingSyncPreference11GetVapidKeyEv(%"class.absl::optional"* sret, %class.SharingSyncPreference*) local_unnamed_addr #3

declare %"class.crypto::ECPrivateKey"* @_ZN6crypto12ECPrivateKey24CreateFromPrivateKeyInfoEN4base4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6crypto12ECPrivateKeyD1Ev(%"class.crypto::ECPrivateKey"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
