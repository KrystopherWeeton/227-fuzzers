; ModuleID = '../../third_party/lzma_sdk/Bcj2.c'
source_filename = "../../third_party/lzma_sdk/Bcj2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CBcj2Dec = type { [4 x i8*], [4 x i8*], i8*, i8*, i32, i32, [4 x i8], i32, i32, [258 x i16] }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @Bcj2Dec_Init(%struct.CBcj2Dec* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 4
  store i32 9, i32* %2, align 8
  %3 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 5
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 3
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 9, i1 false)
  %5 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 0
  %6 = bitcast i16* %5 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %6, align 2
  %7 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 8
  %8 = bitcast i16* %7 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %8, align 2
  %9 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 16
  %10 = bitcast i16* %9 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %10, align 2
  %11 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 24
  %12 = bitcast i16* %11 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %12, align 2
  %13 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 32
  %14 = bitcast i16* %13 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %14, align 2
  %15 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 40
  %16 = bitcast i16* %15 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %16, align 2
  %17 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 48
  %18 = bitcast i16* %17 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %18, align 2
  %19 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 56
  %20 = bitcast i16* %19 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %20, align 2
  %21 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 64
  %22 = bitcast i16* %21 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %22, align 2
  %23 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 72
  %24 = bitcast i16* %23 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %24, align 2
  %25 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 80
  %26 = bitcast i16* %25 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %26, align 2
  %27 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 88
  %28 = bitcast i16* %27 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %28, align 2
  %29 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 96
  %30 = bitcast i16* %29 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %30, align 2
  %31 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 104
  %32 = bitcast i16* %31 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %32, align 2
  %33 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 112
  %34 = bitcast i16* %33 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %34, align 2
  %35 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 120
  %36 = bitcast i16* %35 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %36, align 2
  %37 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 128
  %38 = bitcast i16* %37 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %38, align 2
  %39 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 136
  %40 = bitcast i16* %39 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %40, align 2
  %41 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 144
  %42 = bitcast i16* %41 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %42, align 2
  %43 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 152
  %44 = bitcast i16* %43 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %44, align 2
  %45 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 160
  %46 = bitcast i16* %45 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %46, align 2
  %47 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 168
  %48 = bitcast i16* %47 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %48, align 2
  %49 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 176
  %50 = bitcast i16* %49 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %50, align 2
  %51 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 184
  %52 = bitcast i16* %51 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %52, align 2
  %53 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 192
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %54, align 2
  %55 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 200
  %56 = bitcast i16* %55 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %56, align 2
  %57 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 208
  %58 = bitcast i16* %57 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %58, align 2
  %59 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 216
  %60 = bitcast i16* %59 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %60, align 2
  %61 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 224
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %62, align 2
  %63 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 232
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %64, align 2
  %65 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 240
  %66 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %66, align 2
  %67 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 248
  %68 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> <i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024, i16 1024>, <8 x i16>* %68, align 2
  %69 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 256
  store i16 1024, i16* %69, align 2
  %70 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 257
  store i16 1024, i16* %70, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @Bcj2Dec_Decode(%struct.CBcj2Dec*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 6
  %5 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 4
  br i1 %4, label %6, label %32

6:                                                ; preds = %1
  store i32 9, i32* %5, align 8
  %7 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 8
  %8 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 0, i64 3
  %9 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 1, i64 3
  br label %10

10:                                               ; preds = %20, %6
  %11 = phi i32 [ %27, %20 ], [ %3, %6 ]
  switch i32 %11, label %15 [
    i32 5, label %28
    i32 1, label %12
  ]

12:                                               ; preds = %10
  %13 = load i32, i32* %7, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %394

15:                                               ; preds = %10, %12
  %16 = load i8*, i8** %8, align 8
  %17 = load i8*, i8** %9, align 8
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store i32 3, i32* %5, align 8
  br label %394

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 8
  %22 = shl i32 %21, 8
  %23 = getelementptr inbounds i8, i8* %16, i64 1
  store i8* %23, i8** %8, align 8
  %24 = load i8, i8* %16, align 1
  %25 = zext i8 %24 to i32
  %26 = or i32 %22, %25
  store i32 %26, i32* %7, align 8
  %27 = add i32 %11, 1
  store i32 %27, i32* %2, align 4
  br label %10

28:                                               ; preds = %10
  %29 = load i32, i32* %7, align 8
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %394, label %31

31:                                               ; preds = %28
  store i32 -1, i32* %2, align 4
  br label %54

32:                                               ; preds = %1
  %33 = load i32, i32* %5, align 8
  %34 = and i32 %33, -4
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %36, label %54

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 2
  %38 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 3
  %39 = load i8*, i8** %37, align 8
  br label %40

40:                                               ; preds = %36, %45
  %41 = phi i8* [ %39, %36 ], [ %51, %45 ]
  %42 = phi i32 [ %33, %36 ], [ %52, %45 ]
  %43 = load i8*, i8** %38, align 8
  %44 = icmp eq i8* %41, %43
  br i1 %44, label %394, label %45

45:                                               ; preds = %40
  %46 = add nuw nsw i32 %42, 1
  store i32 %46, i32* %5, align 8
  %47 = add nsw i32 %42, -4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %41, align 1
  %51 = getelementptr inbounds i8, i8* %41, i64 1
  store i8* %51, i8** %37, align 8
  %52 = load i32, i32* %5, align 8
  %53 = icmp ult i32 %52, 8
  br i1 %53, label %40, label %54

54:                                               ; preds = %45, %32, %31
  %55 = phi i32 [ %33, %32 ], [ 9, %31 ], [ %52, %45 ]
  %56 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 0, i64 3
  %57 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 1, i64 3
  %58 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 8
  %59 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 0, i64 0
  %60 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 1, i64 0
  %61 = bitcast i8** %60 to i64*
  %62 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 2
  %63 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 3
  %64 = bitcast i8** %63 to i64*
  %65 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 3
  %66 = bitcast %struct.CBcj2Dec* %0 to i64*
  %67 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 5
  br label %68

68:                                               ; preds = %376, %54
  %69 = phi i32 [ %377, %376 ], [ %55, %54 ]
  %70 = add i32 %69, -1
  %71 = icmp ult i32 %70, 2
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  store i32 9, i32* %5, align 8
  %73 = load i8, i8* %65, align 1
  br label %200

74:                                               ; preds = %68
  %75 = load i32, i32* %2, align 4
  %76 = icmp ult i32 %75, 16777216
  br i1 %76, label %77, label %90

77:                                               ; preds = %74
  %78 = load i8*, i8** %56, align 8
  %79 = load i8*, i8** %57, align 8
  %80 = icmp eq i8* %78, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  store i32 3, i32* %5, align 8
  br label %394

82:                                               ; preds = %77
  %83 = shl i32 %75, 8
  store i32 %83, i32* %2, align 4
  %84 = load i32, i32* %58, align 8
  %85 = shl i32 %84, 8
  %86 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %86, i8** %56, align 8
  %87 = load i8, i8* %78, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  store i32 %89, i32* %58, align 8
  br label %90

90:                                               ; preds = %82, %74
  %91 = load i8*, i8** %59, align 8
  %92 = load i64, i64* %61, align 8
  %93 = ptrtoint i8* %91 to i64
  %94 = sub i64 %92, %93
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %90
  store i32 0, i32* %5, align 8
  br label %394

97:                                               ; preds = %90
  %98 = load i8*, i8** %62, align 8
  %99 = load i64, i64* %64, align 8
  %100 = ptrtoint i8* %98 to i64
  %101 = sub i64 %99, %100
  %102 = icmp ugt i64 %94, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = icmp eq i64 %101, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %103
  store i32 8, i32* %5, align 8
  br label %394

106:                                              ; preds = %103, %97
  %107 = phi i64 [ %101, %103 ], [ %94, %97 ]
  %108 = getelementptr inbounds i8, i8* %91, i64 %107
  %109 = load i8, i8* %65, align 1
  %110 = icmp eq i8 %109, 15
  br i1 %110, label %112, label %111

111:                                              ; preds = %112, %106
  br label %117

112:                                              ; preds = %106
  %113 = load i8, i8* %91, align 1
  %114 = and i8 %113, -16
  %115 = icmp eq i8 %114, -128
  br i1 %115, label %116, label %111

116:                                              ; preds = %112
  store i8 %113, i8* %98, align 1
  br label %145

117:                                              ; preds = %129, %111
  %118 = phi i8* [ %91, %111 ], [ %130, %129 ]
  %119 = phi i8* [ %98, %111 ], [ %131, %129 ]
  %120 = load i8, i8* %118, align 1
  store i8 %120, i8* %119, align 1
  %121 = icmp eq i8 %120, 15
  br i1 %121, label %132, label %122

122:                                              ; preds = %117
  %123 = and i8 %120, -2
  %124 = icmp eq i8 %123, -24
  br i1 %124, label %145, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds i8, i8* %119, i64 1
  %127 = getelementptr inbounds i8, i8* %118, i64 1
  %128 = icmp eq i8* %127, %108
  br i1 %128, label %141, label %129

129:                                              ; preds = %125, %136
  %130 = phi i8* [ %127, %125 ], [ %134, %136 ]
  %131 = phi i8* [ %126, %125 ], [ %133, %136 ]
  br label %117

132:                                              ; preds = %117
  %133 = getelementptr inbounds i8, i8* %119, i64 1
  %134 = getelementptr inbounds i8, i8* %118, i64 1
  %135 = icmp eq i8* %134, %108
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = load i8, i8* %134, align 1
  %138 = and i8 %137, -16
  %139 = icmp eq i8 %138, -128
  br i1 %139, label %140, label %129

140:                                              ; preds = %136
  store i8 %137, i8* %133, align 1
  br label %145

141:                                              ; preds = %125, %132
  %142 = load i64, i64* %66, align 8
  %143 = ptrtoint i8* %108 to i64
  %144 = sub i64 %143, %142
  br label %151

145:                                              ; preds = %122, %140, %116
  %146 = phi i8* [ %91, %116 ], [ %134, %140 ], [ %118, %122 ]
  %147 = load i64, i64* %66, align 8
  %148 = ptrtoint i8* %146 to i64
  %149 = sub i64 %148, %147
  %150 = icmp eq i8* %146, %108
  br i1 %150, label %151, label %163

151:                                              ; preds = %145, %141
  %152 = phi i64 [ %144, %141 ], [ %149, %145 ]
  %153 = getelementptr inbounds i8, i8* %108, i64 -1
  %154 = load i8, i8* %153, align 1
  store i8 %154, i8* %65, align 1
  store i8* %108, i8** %59, align 8
  %155 = trunc i64 %152 to i32
  %156 = load i32, i32* %67, align 4
  %157 = add i32 %156, %155
  store i32 %157, i32* %67, align 4
  %158 = load i8*, i8** %62, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 %152
  store i8* %159, i8** %62, align 8
  %160 = load i8*, i8** %60, align 8
  %161 = icmp eq i8* %108, %160
  %162 = select i1 %161, i32 0, i32 8
  store i32 %162, i32* %5, align 8
  br label %394

163:                                              ; preds = %145
  %164 = load i8, i8* %146, align 1
  %165 = icmp eq i64 %149, 0
  %166 = getelementptr inbounds i8, i8* %146, i64 -1
  %167 = select i1 %165, i8* %65, i8* %166
  %168 = load i8, i8* %167, align 1
  store i8 %164, i8* %65, align 1
  %169 = getelementptr inbounds i8, i8* %146, i64 1
  store i8* %169, i8** %59, align 8
  %170 = add i64 %149, 1
  %171 = trunc i64 %170 to i32
  %172 = load i32, i32* %67, align 4
  %173 = add i32 %172, %171
  store i32 %173, i32* %67, align 4
  %174 = load i8*, i8** %62, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 %170
  store i8* %175, i8** %62, align 8
  %176 = icmp eq i8 %164, -24
  %177 = zext i8 %168 to i64
  %178 = add nuw nsw i64 %177, 2
  %179 = icmp eq i8 %164, -23
  %180 = zext i1 %179 to i64
  %181 = select i1 %176, i64 %178, i64 %180
  %182 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 9, i64 %181
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i32
  %185 = load i32, i32* %2, align 4
  %186 = lshr i32 %185, 11
  %187 = mul i32 %186, %184
  %188 = load i32, i32* %58, align 8
  %189 = icmp ult i32 %188, %187
  br i1 %189, label %195, label %190

190:                                              ; preds = %163
  %191 = sub i32 %185, %187
  store i32 %191, i32* %2, align 4
  %192 = sub i32 %188, %187
  store i32 %192, i32* %58, align 8
  %193 = lshr i16 %183, 5
  %194 = sub i16 %183, %193
  store i16 %194, i16* %182, align 2
  br label %200

195:                                              ; preds = %163
  store i32 %187, i32* %2, align 4
  %196 = sub nsw i32 2048, %184
  %197 = lshr i32 %196, 5
  %198 = trunc i32 %197 to i16
  %199 = add i16 %183, %198
  store i16 %199, i16* %182, align 2
  br label %376

200:                                              ; preds = %190, %72
  %201 = phi i8 [ %164, %190 ], [ %73, %72 ]
  %202 = icmp eq i8 %201, -24
  %203 = select i1 %202, i32 1, i32 2
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 0, i64 %204
  %206 = load i8*, i8** %205, align 8
  %207 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 1, i64 %204
  %208 = load i8*, i8** %207, align 8
  %209 = icmp eq i8* %206, %208
  br i1 %209, label %378, label %210

210:                                              ; preds = %200
  %211 = load i8, i8* %206, align 1
  %212 = zext i8 %211 to i32
  %213 = shl nuw i32 %212, 24
  %214 = getelementptr inbounds i8, i8* %206, i64 1
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = shl nuw nsw i32 %216, 16
  %218 = or i32 %217, %213
  %219 = getelementptr inbounds i8, i8* %206, i64 2
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl nuw nsw i32 %221, 8
  %223 = or i32 %218, %222
  %224 = getelementptr inbounds i8, i8* %206, i64 3
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = or i32 %223, %226
  %228 = getelementptr inbounds i8, i8* %206, i64 4
  store i8* %228, i8** %205, align 8
  %229 = load i32, i32* %67, align 4
  %230 = add i32 %229, 4
  store i32 %230, i32* %67, align 4
  %231 = sub i32 %227, %230
  %232 = load i8*, i8** %62, align 8
  %233 = load i8*, i8** %63, align 8
  %234 = ptrtoint i8* %233 to i64
  %235 = ptrtoint i8* %232 to i64
  %236 = sub i64 %234, %235
  %237 = icmp ult i64 %236, 4
  br i1 %237, label %238, label %371

238:                                              ; preds = %210
  %239 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6
  %240 = bitcast [4 x i8]* %239 to i32*
  store i32 %231, i32* %240, align 8
  %241 = icmp eq i64 %236, 0
  br i1 %241, label %368, label %242

242:                                              ; preds = %238
  %243 = icmp ult i64 %236, 32
  br i1 %243, label %331, label %244

244:                                              ; preds = %242
  %245 = getelementptr %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 0
  %246 = getelementptr %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 0, i64 11
  %247 = bitcast i8** %246 to i8*
  %248 = getelementptr i8, i8* %247, i64 %236
  %249 = icmp ult i8* %232, %248
  %250 = icmp ult i8* %245, %233
  %251 = and i1 %249, %250
  br i1 %251, label %331, label %252

252:                                              ; preds = %244
  %253 = and i64 %236, -32
  %254 = add i64 %253, -32
  %255 = lshr exact i64 %254, 5
  %256 = add nuw nsw i64 %255, 1
  %257 = and i64 %256, 3
  %258 = icmp ult i64 %254, 96
  br i1 %258, label %310, label %259

259:                                              ; preds = %252
  %260 = sub nsw i64 %256, %257
  br label %261

261:                                              ; preds = %261, %259
  %262 = phi i64 [ 0, %259 ], [ %307, %261 ]
  %263 = phi i64 [ %260, %259 ], [ %308, %261 ]
  %264 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %262
  %265 = bitcast i8* %264 to <16 x i8>*
  %266 = load <16 x i8>, <16 x i8>* %265, align 1, !alias.scope !2
  %267 = getelementptr inbounds i8, i8* %264, i64 16
  %268 = bitcast i8* %267 to <16 x i8>*
  %269 = load <16 x i8>, <16 x i8>* %268, align 1, !alias.scope !2
  %270 = getelementptr inbounds i8, i8* %232, i64 %262
  %271 = bitcast i8* %270 to <16 x i8>*
  store <16 x i8> %266, <16 x i8>* %271, align 1, !alias.scope !5, !noalias !2
  %272 = getelementptr inbounds i8, i8* %270, i64 16
  %273 = bitcast i8* %272 to <16 x i8>*
  store <16 x i8> %269, <16 x i8>* %273, align 1, !alias.scope !5, !noalias !2
  %274 = or i64 %262, 32
  %275 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %274
  %276 = bitcast i8* %275 to <16 x i8>*
  %277 = load <16 x i8>, <16 x i8>* %276, align 1, !alias.scope !2
  %278 = getelementptr inbounds i8, i8* %275, i64 16
  %279 = bitcast i8* %278 to <16 x i8>*
  %280 = load <16 x i8>, <16 x i8>* %279, align 1, !alias.scope !2
  %281 = getelementptr inbounds i8, i8* %232, i64 %274
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %277, <16 x i8>* %282, align 1, !alias.scope !5, !noalias !2
  %283 = getelementptr inbounds i8, i8* %281, i64 16
  %284 = bitcast i8* %283 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %284, align 1, !alias.scope !5, !noalias !2
  %285 = or i64 %262, 64
  %286 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %285
  %287 = bitcast i8* %286 to <16 x i8>*
  %288 = load <16 x i8>, <16 x i8>* %287, align 1, !alias.scope !2
  %289 = getelementptr inbounds i8, i8* %286, i64 16
  %290 = bitcast i8* %289 to <16 x i8>*
  %291 = load <16 x i8>, <16 x i8>* %290, align 1, !alias.scope !2
  %292 = getelementptr inbounds i8, i8* %232, i64 %285
  %293 = bitcast i8* %292 to <16 x i8>*
  store <16 x i8> %288, <16 x i8>* %293, align 1, !alias.scope !5, !noalias !2
  %294 = getelementptr inbounds i8, i8* %292, i64 16
  %295 = bitcast i8* %294 to <16 x i8>*
  store <16 x i8> %291, <16 x i8>* %295, align 1, !alias.scope !5, !noalias !2
  %296 = or i64 %262, 96
  %297 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %296
  %298 = bitcast i8* %297 to <16 x i8>*
  %299 = load <16 x i8>, <16 x i8>* %298, align 1, !alias.scope !2
  %300 = getelementptr inbounds i8, i8* %297, i64 16
  %301 = bitcast i8* %300 to <16 x i8>*
  %302 = load <16 x i8>, <16 x i8>* %301, align 1, !alias.scope !2
  %303 = getelementptr inbounds i8, i8* %232, i64 %296
  %304 = bitcast i8* %303 to <16 x i8>*
  store <16 x i8> %299, <16 x i8>* %304, align 1, !alias.scope !5, !noalias !2
  %305 = getelementptr inbounds i8, i8* %303, i64 16
  %306 = bitcast i8* %305 to <16 x i8>*
  store <16 x i8> %302, <16 x i8>* %306, align 1, !alias.scope !5, !noalias !2
  %307 = add i64 %262, 128
  %308 = add i64 %263, -4
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %261, !llvm.loop !7

310:                                              ; preds = %261, %252
  %311 = phi i64 [ 0, %252 ], [ %307, %261 ]
  %312 = icmp eq i64 %257, 0
  br i1 %312, label %329, label %313

313:                                              ; preds = %310, %313
  %314 = phi i64 [ %326, %313 ], [ %311, %310 ]
  %315 = phi i64 [ %327, %313 ], [ %257, %310 ]
  %316 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %314
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1, !alias.scope !2
  %319 = getelementptr inbounds i8, i8* %316, i64 16
  %320 = bitcast i8* %319 to <16 x i8>*
  %321 = load <16 x i8>, <16 x i8>* %320, align 1, !alias.scope !2
  %322 = getelementptr inbounds i8, i8* %232, i64 %314
  %323 = bitcast i8* %322 to <16 x i8>*
  store <16 x i8> %318, <16 x i8>* %323, align 1, !alias.scope !5, !noalias !2
  %324 = getelementptr inbounds i8, i8* %322, i64 16
  %325 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %321, <16 x i8>* %325, align 1, !alias.scope !5, !noalias !2
  %326 = add i64 %314, 32
  %327 = add i64 %315, -1
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %313, !llvm.loop !9

329:                                              ; preds = %313, %310
  %330 = icmp eq i64 %236, %253
  br i1 %330, label %368, label %331

331:                                              ; preds = %329, %244, %242
  %332 = phi i64 [ 0, %244 ], [ 0, %242 ], [ %253, %329 ]
  %333 = xor i64 %332, -1
  %334 = add i64 %236, %333
  %335 = and i64 %236, 3
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %346, label %337

337:                                              ; preds = %331, %337
  %338 = phi i64 [ %343, %337 ], [ %332, %331 ]
  %339 = phi i64 [ %344, %337 ], [ %335, %331 ]
  %340 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %338
  %341 = load i8, i8* %340, align 1
  %342 = getelementptr inbounds i8, i8* %232, i64 %338
  store i8 %341, i8* %342, align 1
  %343 = add nuw i64 %338, 1
  %344 = add i64 %339, -1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %337, !llvm.loop !11

346:                                              ; preds = %337, %331
  %347 = phi i64 [ %332, %331 ], [ %343, %337 ]
  %348 = icmp ult i64 %334, 3
  br i1 %348, label %368, label %349

349:                                              ; preds = %346, %349
  %350 = phi i64 [ %366, %349 ], [ %347, %346 ]
  %351 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = getelementptr inbounds i8, i8* %232, i64 %350
  store i8 %352, i8* %353, align 1
  %354 = add nuw i64 %350, 1
  %355 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %354
  %356 = load i8, i8* %355, align 1
  %357 = getelementptr inbounds i8, i8* %232, i64 %354
  store i8 %356, i8* %357, align 1
  %358 = add nuw i64 %350, 2
  %359 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %358
  %360 = load i8, i8* %359, align 1
  %361 = getelementptr inbounds i8, i8* %232, i64 %358
  store i8 %360, i8* %361, align 1
  %362 = add nuw i64 %350, 3
  %363 = getelementptr inbounds %struct.CBcj2Dec, %struct.CBcj2Dec* %0, i64 0, i32 6, i64 %362
  %364 = load i8, i8* %363, align 1
  %365 = getelementptr inbounds i8, i8* %232, i64 %362
  store i8 %364, i8* %365, align 1
  %366 = add nuw i64 %350, 4
  %367 = icmp eq i64 %366, %236
  br i1 %367, label %368, label %349, !llvm.loop !12

368:                                              ; preds = %346, %349, %329, %238
  store i8* %233, i8** %62, align 8
  %369 = trunc i64 %236 to i32
  %370 = add i32 %369, 4
  br label %378

371:                                              ; preds = %210
  %372 = bitcast i8* %232 to i32*
  store i32 %231, i32* %372, align 4
  %373 = lshr i32 %231, 24
  %374 = trunc i32 %373 to i8
  store i8 %374, i8* %65, align 1
  %375 = getelementptr inbounds i8, i8* %232, i64 4
  store i8* %375, i8** %62, align 8
  br label %376

376:                                              ; preds = %371, %195
  %377 = load i32, i32* %5, align 8
  br label %68

378:                                              ; preds = %200, %368
  %379 = phi i32 [ %370, %368 ], [ %203, %200 ]
  store i32 %379, i32* %5, align 8
  %380 = load i32, i32* %2, align 4
  %381 = icmp ult i32 %380, 16777216
  br i1 %381, label %382, label %394

382:                                              ; preds = %378
  %383 = load i8*, i8** %56, align 8
  %384 = load i8*, i8** %57, align 8
  %385 = icmp eq i8* %383, %384
  br i1 %385, label %394, label %386

386:                                              ; preds = %382
  %387 = shl i32 %380, 8
  store i32 %387, i32* %2, align 4
  %388 = load i32, i32* %58, align 8
  %389 = shl i32 %388, 8
  %390 = getelementptr inbounds i8, i8* %383, i64 1
  store i8* %390, i8** %56, align 8
  %391 = load i8, i8* %383, align 1
  %392 = zext i8 %391 to i32
  %393 = or i32 %389, %392
  store i32 %393, i32* %58, align 8
  br label %394

394:                                              ; preds = %40, %12, %151, %105, %96, %378, %386, %382, %28, %81, %19
  %395 = phi i32 [ 0, %19 ], [ 0, %81 ], [ 1, %28 ], [ 0, %382 ], [ 0, %386 ], [ 0, %378 ], [ 0, %96 ], [ 0, %105 ], [ 0, %151 ], [ 1, %12 ], [ 0, %40 ]
  ret i32 %395
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
