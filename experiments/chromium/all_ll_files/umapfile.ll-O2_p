; ModuleID = '../../third_party/icu/source/common/umapfile.cpp'
source_filename = "../../third_party/icu/source/common/umapfile.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.UDataMemory = type { %struct.commonDataFuncs*, %struct.DataHeader*, i8*, i8, i8*, i8*, i32 }
%struct.commonDataFuncs = type { %struct.DataHeader* (%struct.UDataMemory*, i8*, i32*, i32*)*, i32 (%struct.UDataMemory*)* }
%struct.DataHeader = type { %struct.MappedData, %struct.UDataInfo }
%struct.MappedData = type { i16, i8, i8 }
%struct.UDataInfo = type { i16, i16, i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @uprv_mapFile_69(%struct.UDataMemory*, i8*, i32* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %struct.stat, align 8
  %5 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 144, i1 false)
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  tail call void @UDataMemory_init_69(%struct.UDataMemory* %0) #5
  %9 = bitcast %struct.stat* %4 to %struct.stat64*
  %10 = call i32 @__xstat64(i32 1, i8* %1, %struct.stat64* nonnull %9) #5
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %31

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %4, i64 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, 1
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = call i32 (i8*, i32, ...) @open64(i8* %1, i32 0) #5
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = shl i64 %14, 32
  %21 = ashr exact i64 %20, 32
  %22 = call i8* @mmap64(i8* null, i64 %21, i32 1, i32 1, i32 %17, i64 0) #5
  %23 = call i32 @close(i32 %17) #5
  %24 = icmp eq i8* %22, inttoptr (i64 -1 to i8*)
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %22, i64 %21
  %27 = getelementptr inbounds %struct.UDataMemory, %struct.UDataMemory* %0, i64 0, i32 5
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %struct.UDataMemory, %struct.UDataMemory* %0, i64 0, i32 1
  %29 = bitcast %struct.DataHeader** %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds %struct.UDataMemory, %struct.UDataMemory* %0, i64 0, i32 4
  store i8* %22, i8** %30, align 8
  br label %31

31:                                               ; preds = %19, %16, %12, %8, %3, %25
  %32 = phi i8 [ 1, %25 ], [ 0, %3 ], [ 0, %8 ], [ 0, %12 ], [ 0, %16 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %5) #5
  ret i8 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @UDataMemory_init_69(%struct.UDataMemory*) local_unnamed_addr #2

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #4

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @uprv_unmapFile_69(%struct.UDataMemory*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UDataMemory* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.UDataMemory, %struct.UDataMemory* %0, i64 0, i32 5
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UDataMemory, %struct.UDataMemory* %0, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %5 to i64
  %11 = ptrtoint i8* %9 to i64
  %12 = sub i64 %10, %11
  %13 = tail call i32 @munmap(i8* %9, i64 %12) #5
  %14 = getelementptr inbounds %struct.UDataMemory, %struct.UDataMemory* %0, i64 0, i32 1
  store %struct.DataHeader* null, %struct.DataHeader** %14, align 8
  %15 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  br label %16

16:                                               ; preds = %3, %1, %7
  ret void
}

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
