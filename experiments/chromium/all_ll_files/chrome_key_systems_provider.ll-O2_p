; ModuleID = '../../chrome/renderer/media/chrome_key_systems_provider.cc'
source_filename = "../../chrome/renderer/media/chrome_key_systems_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ChromeKeySystemsProvider = type { i8, i8, %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::ThreadChecker", %"class.base::RepeatingCallback" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::KeySystemProperties"* }
%"class.media::KeySystemProperties" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::unique_ptr"* }
%"class.base::TimeDelta" = type { i64 }

@_ZN24ChromeKeySystemsProviderC1Ev = hidden unnamed_addr alias void (%class.ChromeKeySystemsProvider*), void (%class.ChromeKeySystemsProvider*)* @_ZN24ChromeKeySystemsProviderC2Ev
@_ZN24ChromeKeySystemsProviderD1Ev = hidden unnamed_addr alias void (%class.ChromeKeySystemsProvider*), void (%class.ChromeKeySystemsProvider*)* @_ZN24ChromeKeySystemsProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ChromeKeySystemsProviderC2Ev(%class.ChromeKeySystemsProvider* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 1
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 3
  %6 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #5
  %7 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %6, i64 0, i32 0
  store %"class.base::TickClock"* %7, %"class.base::TickClock"** %5, align 8
  %8 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ChromeKeySystemsProviderD2Ev(%class.ChromeKeySystemsProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ChromeKeySystemsProvider22AddSupportedKeySystemsEPNSt3__16vectorINS0_10unique_ptrIN5media19KeySystemPropertiesENS0_14default_deleteIS4_EEEENS0_9allocatorIS7_EEEE(%class.ChromeKeySystemsProvider* nocapture, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %8 = bitcast void ()** %7 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %9 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %8, align 8
  tail call void %9(%"class.base::internal::BindStateBase"* nonnull %4, %"class.std::__1::vector"* %1) #5
  br label %11

10:                                               ; preds = %2
  tail call void @_Z19AddChromeKeySystemsPNSt3__16vectorINS_10unique_ptrIN5media19KeySystemPropertiesENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEEE(%"class.std::__1::vector"* %1) #5
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 0
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 3
  %14 = load %"class.base::TickClock"*, %"class.base::TickClock"** %13, align 8
  %15 = bitcast %"class.base::TickClock"* %14 to i64 (%"class.base::TickClock"*)***
  %16 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, i64 2
  %18 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::TickClock"* %14) #5
  %20 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 1
  store i8 0, i8* %21, align 1
  ret void
}

declare void @_Z19AddChromeKeySystemsPNSt3__16vectorINS_10unique_ptrIN5media19KeySystemPropertiesENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEEE(%"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24ChromeKeySystemsProvider24IsKeySystemsUpdateNeededEv(%class.ChromeKeySystemsProvider* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  %12 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 3
  %13 = load %"class.base::TickClock"*, %"class.base::TickClock"** %12, align 8
  %14 = bitcast %"class.base::TickClock"* %13 to i64 (%"class.base::TickClock"*)***
  %15 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, i64 2
  %17 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %16, align 8
  %18 = tail call i64 %17(%"class.base::TickClock"* %13) #5
  %19 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = sub nsw i64 %18, %20
  %22 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %21, i64* %22, align 8
  %23 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %2) #5
  %24 = icmp sgt i64 %23, 999
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  br label %25

25:                                               ; preds = %10, %6, %1
  %26 = phi i1 [ true, %1 ], [ false, %6 ], [ %24, %10 ]
  ret i1 %26
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN24ChromeKeySystemsProvider22SetTickClockForTestingEPKN4base9TickClockE(%class.ChromeKeySystemsProvider* nocapture, %"class.base::TickClock"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 3
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24ChromeKeySystemsProvider29SetProviderDelegateForTestingEN4base17RepeatingCallbackIFvPNSt3__16vectorINS2_10unique_ptrIN5media19KeySystemPropertiesENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEEEEE(%class.ChromeKeySystemsProvider*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ChromeKeySystemsProvider, %class.ChromeKeySystemsProvider* %0, i64 0, i32 5, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #5
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
