; ModuleID = '../../third_party/blink/renderer/platform/graphics/platform_paint_worklet_layer_painter.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/platform_paint_worklet_layer_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::PlatformPaintWorkletLayerPainter" = type { %"class.cc::PaintWorkletLayerPainter", %"class.std::__1::unique_ptr" }
%"class.cc::PaintWorkletLayerPainter" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PaintWorkletPaintDispatcher"* }
%"class.blink::PaintWorkletPaintDispatcher" = type { %"class.WTF::HashMap", %"class.base::flat_map", %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"struct.std::__1::pair.12" }
%"struct.std::__1::pair.12" = type { %"class.blink::CrossThreadPersistent", %class.scoped_refptr.198 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PaintWorkletPainter"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::PaintWorkletPainter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.17", i32, [4 x i8], %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.194", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.160" }
%"class.WTF::VectorBuffer.160" = type { %"class.WTF::VectorBufferBase.161" }
%"class.WTF::VectorBufferBase.161" = type { %"struct.std::__1::pair.162"*, i32, i32 }
%"struct.std::__1::pair.162" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.200", i64 }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.202" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.198 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.199" }>
%"class.base::RefCountedThreadSafe.199" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type { i32, %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.208", %"class.std::__1::vector.209" }
%"class.base::RefCountedThreadSafe.208" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"*, %"class.std::__1::__compressed_pair.227" }
%"class.cc::PaintWorkletJob" = type { i32, %class.scoped_refptr.211, %"class.base::flat_map.213", %class.sk_sp }
%class.scoped_refptr.211 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.212", [4 x i8] }>
%"class.base::RefCountedThreadSafe.212" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::flat_map.213" = type { %"class.base::internal::flat_tree.214" }
%"class.base::internal::flat_tree.214" = type { %"class.std::__1::vector.215" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"struct.std::__1::pair.217"*, %"struct.std::__1::pair.217"*, %"class.std::__1::__compressed_pair.218" }
%"struct.std::__1::pair.217" = type opaque
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::pair.217"* }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.223", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { i8* }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.cc::PaintWorkletJob"* }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.5", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::default_delete" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.199", [4 x i8] }>
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }

$_ZNKSt3__114default_deleteIN5blink27PaintWorkletPaintDispatcherEEclEPS2_ = comdat any

$_ZN3WTF7HashMapIiNSt3__14pairIN5blink21CrossThreadPersistentINS3_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_7IntHashIiEENS_10HashTraitsIiEENSE_ISB_EENS_18PartitionAllocatorEED2Ev = comdat any

@_ZTVN5blink32PlatformPaintWorkletLayerPainterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PlatformPaintWorkletLayerPainter"*)* @_ZN5blink32PlatformPaintWorkletLayerPainterD2Ev to i8*), i8* bitcast (void (%"class.blink::PlatformPaintWorkletLayerPainter"*)* @_ZN5blink32PlatformPaintWorkletLayerPainterD0Ev to i8*), i8* bitcast (void (%"class.blink::PlatformPaintWorkletLayerPainter"*, %"class.base::flat_map"*, %"class.base::OnceCallback"*)* @_ZN5blink32PlatformPaintWorkletLayerPainter16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS1_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS5_9allocatorIS8_EEEEEEENS5_4lessIvEENS6_INS5_4pairIiSD_EENS9_ISH_EEEEEENS1_12OnceCallbackIFvSK_EEE to i8*), i8* bitcast (i1 (%"class.blink::PlatformPaintWorkletLayerPainter"*)* @_ZNK5blink32PlatformPaintWorkletLayerPainter18HasOngoingDispatchEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [67 x i8] c"PlatformPaintWorkletLayerPainter::PlatformPaintWorkletLayerPainter\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"PlatformPaintWorkletLayerPainter::~PlatformPaintWorkletLayerPainter\00", align 1

@_ZN5blink32PlatformPaintWorkletLayerPainterC1ENSt3__110unique_ptrINS_27PaintWorkletPaintDispatcherENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.blink::PlatformPaintWorkletLayerPainter"*, %"class.blink::PaintWorkletPaintDispatcher"*), void (%"class.blink::PlatformPaintWorkletLayerPainter"*, %"class.blink::PaintWorkletPaintDispatcher"*)* @_ZN5blink32PlatformPaintWorkletLayerPainterC2ENSt3__110unique_ptrINS_27PaintWorkletPaintDispatcherENS1_14default_deleteIS3_EEEE
@_ZN5blink32PlatformPaintWorkletLayerPainterD1Ev = hidden unnamed_addr alias void (%"class.blink::PlatformPaintWorkletLayerPainter"*), void (%"class.blink::PlatformPaintWorkletLayerPainter"*)* @_ZN5blink32PlatformPaintWorkletLayerPainterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32PlatformPaintWorkletLayerPainterC2ENSt3__110unique_ptrINS_27PaintWorkletPaintDispatcherENS1_14default_deleteIS3_EEEE(%"class.blink::PlatformPaintWorkletLayerPainter"* nocapture, %"class.blink::PaintWorkletPaintDispatcher"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::PlatformPaintWorkletLayerPainter", %"class.blink::PlatformPaintWorkletLayerPainter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32PlatformPaintWorkletLayerPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::PlatformPaintWorkletLayerPainter", %"class.blink::PlatformPaintWorkletLayerPainter"* %0, i64 0, i32 1
  %8 = ptrtoint %"class.blink::PaintWorkletPaintDispatcher"* %1 to i64
  store %"class.blink::PaintWorkletPaintDispatcher"* null, %"class.blink::PaintWorkletPaintDispatcher"** %5, align 8
  %9 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13, !prof !2

13:                                               ; preds = %2
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %15 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  %19 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), align 16
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i64 %18) #6
  br label %22

22:                                               ; preds = %2, %13, %21
  %23 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %5, align 8
  store %"class.blink::PaintWorkletPaintDispatcher"* null, %"class.blink::PaintWorkletPaintDispatcher"** %5, align 8
  %24 = icmp eq %"class.blink::PaintWorkletPaintDispatcher"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::unique_ptr"* %4 to %"struct.std::__1::default_delete"*
  call void @_ZNKSt3__114default_deleteIN5blink27PaintWorkletPaintDispatcherEEclEPS2_(%"struct.std::__1::default_delete"* nonnull %26, %"class.blink::PaintWorkletPaintDispatcher"* nonnull %23) #6
  br label %27

27:                                               ; preds = %22, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32PlatformPaintWorkletLayerPainterD2Ev(%"class.blink::PlatformPaintWorkletLayerPainter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = getelementptr inbounds %"class.blink::PlatformPaintWorkletLayerPainter", %"class.blink::PlatformPaintWorkletLayerPainter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32PlatformPaintWorkletLayerPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7, !prof !2

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %9 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), align 16
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 156, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i64 %12) #6
  br label %16

16:                                               ; preds = %1, %7, %15
  %17 = getelementptr inbounds %"class.blink::PlatformPaintWorkletLayerPainter", %"class.blink::PlatformPaintWorkletLayerPainter"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %18, align 8
  store %"class.blink::PaintWorkletPaintDispatcher"* null, %"class.blink::PaintWorkletPaintDispatcher"** %18, align 8
  %20 = icmp eq %"class.blink::PaintWorkletPaintDispatcher"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr"* %17 to %"struct.std::__1::default_delete"*
  call void @_ZNKSt3__114default_deleteIN5blink27PaintWorkletPaintDispatcherEEclEPS2_(%"struct.std::__1::default_delete"* %22, %"class.blink::PaintWorkletPaintDispatcher"* nonnull %19) #6
  br label %23

23:                                               ; preds = %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32PlatformPaintWorkletLayerPainterD0Ev(%"class.blink::PlatformPaintWorkletLayerPainter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink32PlatformPaintWorkletLayerPainterD2Ev(%"class.blink::PlatformPaintWorkletLayerPainter"* %0) #6
  %2 = bitcast %"class.blink::PlatformPaintWorkletLayerPainter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32PlatformPaintWorkletLayerPainter16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS1_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS5_9allocatorIS8_EEEEEEENS5_4lessIvEENS6_INS5_4pairIiSD_EENS9_ISH_EEEEEENS1_12OnceCallbackIFvSK_EEE(%"class.blink::PlatformPaintWorkletLayerPainter"* nocapture readonly, %"class.base::flat_map"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::flat_map", align 16
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.blink::PlatformPaintWorkletLayerPainter", %"class.blink::PlatformPaintWorkletLayerPainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %6, align 8
  %8 = bitcast %"class.base::flat_map"* %1 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.base::flat_map"* %4 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 16
  %12 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  store i64 %14, i64* %16, align 16
  %17 = bitcast %"class.base::flat_map"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #6
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  call void @_ZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS1_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS5_9allocatorIS8_EEEEEEENS5_4lessIvEENS6_INS5_4pairIiSD_EENS9_ISH_EEEEEENS1_12OnceCallbackIFvSK_EEE(%"class.blink::PaintWorkletPaintDispatcher"* %7, %"class.base::flat_map"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #6
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #6
  %23 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 16
  %25 = icmp eq %"struct.std::__1::pair"* %24, null
  br i1 %25, label %70, label %26

26:                                               ; preds = %3
  %27 = bitcast %"struct.std::__1::pair"* %24 to i8*
  %28 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %29 = icmp eq %"struct.std::__1::pair"* %28, %24
  br i1 %29, label %68, label %30

30:                                               ; preds = %26, %63
  %31 = phi %"struct.std::__1::pair"* [ %32, %63 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 -1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 -1, i32 1, i32 0
  %34 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %33, align 8
  %35 = icmp eq %"class.base::RefCountedData"* %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %63

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.208", %"class.base::RefCountedThreadSafe.208"* %37, i64 2
  %43 = bitcast %"class.base::RefCountedThreadSafe.208"* %42 to %"class.cc::PaintWorkletJob"**
  %44 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %43, align 8
  %45 = icmp eq %"class.cc::PaintWorkletJob"* %44, null
  br i1 %45, label %61, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.cc::PaintWorkletJob"* %44 to i8*
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.208", %"class.base::RefCountedThreadSafe.208"* %37, i64 4
  %49 = bitcast %"class.base::RefCountedThreadSafe.208"* %48 to %"class.cc::PaintWorkletJob"**
  %50 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %49, align 8
  %51 = icmp eq %"class.cc::PaintWorkletJob"* %50, %44
  br i1 %51, label %59, label %52

52:                                               ; preds = %46, %52
  %53 = phi %"class.cc::PaintWorkletJob"* [ %54, %52 ], [ %50, %46 ]
  %54 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %53, i64 -1
  call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %54) #6
  %55 = icmp eq %"class.cc::PaintWorkletJob"* %54, %44
  br i1 %55, label %56, label %52

56:                                               ; preds = %52
  %57 = bitcast %"class.base::RefCountedThreadSafe.208"* %42 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %46
  %60 = phi i8* [ %58, %56 ], [ %47, %46 ]
  store %"class.cc::PaintWorkletJob"* %44, %"class.cc::PaintWorkletJob"** %49, align 8
  call void @_ZdlPv(i8* %60) #7
  br label %61

61:                                               ; preds = %59, %41
  %62 = bitcast %"class.base::RefCountedData"* %34 to i8*
  call void @_ZdlPv(i8* %62) #7
  br label %63

63:                                               ; preds = %61, %36, %30
  %64 = icmp eq %"struct.std::__1::pair"* %32, %24
  br i1 %64, label %65, label %30

65:                                               ; preds = %63
  %66 = bitcast %"class.base::flat_map"* %4 to i8**
  %67 = load i8*, i8** %66, align 16
  br label %68

68:                                               ; preds = %26, %65
  %69 = phi i8* [ %67, %65 ], [ %27, %26 ]
  store %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"** %10, align 8
  call void @_ZdlPv(i8* %69) #7
  br label %70

70:                                               ; preds = %3, %68
  ret void
}

declare void @_ZN5blink27PaintWorkletPaintDispatcher16DispatchWorkletsEN4base8flat_mapIi13scoped_refptrINS1_14RefCountedDataINSt3__16vectorIN2cc15PaintWorkletJobENS5_9allocatorIS8_EEEEEEENS5_4lessIvEENS6_INS5_4pairIiSD_EENS9_ISH_EEEEEENS1_12OnceCallbackIFvSK_EEE(%"class.blink::PaintWorkletPaintDispatcher"*, %"class.base::flat_map"*, %"class.base::OnceCallback"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink32PlatformPaintWorkletLayerPainter18HasOngoingDispatchEv(%"class.blink::PlatformPaintWorkletLayerPainter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PlatformPaintWorkletLayerPainter", %"class.blink::PlatformPaintWorkletLayerPainter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PaintWorkletPaintDispatcher"*, %"class.blink::PaintWorkletPaintDispatcher"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink27PaintWorkletPaintDispatcher18HasOngoingDispatchEv(%"class.blink::PaintWorkletPaintDispatcher"* %3) #6
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink27PaintWorkletPaintDispatcher18HasOngoingDispatchEv(%"class.blink::PaintWorkletPaintDispatcher"*) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink27PaintWorkletPaintDispatcherEEclEPS2_(%"struct.std::__1::default_delete"*, %"class.blink::PaintWorkletPaintDispatcher"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::PaintWorkletPaintDispatcher"* %1, null
  br i1 %3, label %59, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %1, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %5) #6
  %6 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %1, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #6
  %7 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %1, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair"* %9, null
  br i1 %10, label %56, label %11

11:                                               ; preds = %4
  %12 = bitcast %"struct.std::__1::pair"* %9 to i8*
  %13 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, %9
  br i1 %15, label %54, label %16

16:                                               ; preds = %11, %49
  %17 = phi %"struct.std::__1::pair"* [ %18, %49 ], [ %14, %11 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 -1
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 -1, i32 1, i32 0
  %20 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %19, align 8
  %21 = icmp eq %"class.base::RefCountedData"* %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %20, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %49

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.208", %"class.base::RefCountedThreadSafe.208"* %23, i64 2
  %29 = bitcast %"class.base::RefCountedThreadSafe.208"* %28 to %"class.cc::PaintWorkletJob"**
  %30 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %29, align 8
  %31 = icmp eq %"class.cc::PaintWorkletJob"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.cc::PaintWorkletJob"* %30 to i8*
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.208", %"class.base::RefCountedThreadSafe.208"* %23, i64 4
  %35 = bitcast %"class.base::RefCountedThreadSafe.208"* %34 to %"class.cc::PaintWorkletJob"**
  %36 = load %"class.cc::PaintWorkletJob"*, %"class.cc::PaintWorkletJob"** %35, align 8
  %37 = icmp eq %"class.cc::PaintWorkletJob"* %36, %30
  br i1 %37, label %45, label %38

38:                                               ; preds = %32, %38
  %39 = phi %"class.cc::PaintWorkletJob"* [ %40, %38 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.cc::PaintWorkletJob", %"class.cc::PaintWorkletJob"* %39, i64 -1
  tail call void @_ZN2cc15PaintWorkletJobD1Ev(%"class.cc::PaintWorkletJob"* %40) #6
  %41 = icmp eq %"class.cc::PaintWorkletJob"* %40, %30
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.base::RefCountedThreadSafe.208"* %28 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %32
  %46 = phi i8* [ %44, %42 ], [ %33, %32 ]
  store %"class.cc::PaintWorkletJob"* %30, %"class.cc::PaintWorkletJob"** %35, align 8
  tail call void @_ZdlPv(i8* %46) #7
  br label %47

47:                                               ; preds = %45, %27
  %48 = bitcast %"class.base::RefCountedData"* %20 to i8*
  tail call void @_ZdlPv(i8* %48) #7
  br label %49

49:                                               ; preds = %47, %22, %16
  %50 = icmp eq %"struct.std::__1::pair"* %18, %9
  br i1 %50, label %51, label %16

51:                                               ; preds = %49
  %52 = bitcast %"class.base::internal::flat_tree"* %7 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %11, %51
  %55 = phi i8* [ %53, %51 ], [ %12, %11 ]
  store %"struct.std::__1::pair"* %9, %"struct.std::__1::pair"** %13, align 8
  tail call void @_ZdlPv(i8* %55) #7
  br label %56

56:                                               ; preds = %4, %54
  %57 = getelementptr inbounds %"class.blink::PaintWorkletPaintDispatcher", %"class.blink::PaintWorkletPaintDispatcher"* %1, i64 0, i32 0
  tail call void @_ZN3WTF7HashMapIiNSt3__14pairIN5blink21CrossThreadPersistentINS3_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_7IntHashIiEENS_10HashTraitsIiEENSE_ISB_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap"* %57) #6
  %58 = bitcast %"class.blink::PaintWorkletPaintDispatcher"* %1 to i8*
  tail call void @_ZdlPv(i8* %58) #7
  br label %59

59:                                               ; preds = %56, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIiNSt3__14pairIN5blink21CrossThreadPersistentINS3_19PaintWorkletPainterEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_7IntHashIiEENS_10HashTraitsIiEENSE_ISB_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %52, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %47, %9
  %12 = phi i64 [ 0, %9 ], [ %48, %47 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 1, i32 0
  %18 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %17, align 8
  %19 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.199", %"class.base::RefCountedThreadSafe.199"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.199", %"class.base::RefCountedThreadSafe.199"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.199"* %26 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #6
  br label %28

28:                                               ; preds = %25, %20, %16
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %29 to i64*
  %31 = load atomic i64, i64* %30 acquire, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #6
  %35 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %34, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %35) #6
  %36 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %37 = load atomic i64, i64* %30 monotonic, align 8
  %38 = inttoptr i64 %37 to %"class.blink::PersistentNode"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %36, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::CrossThreadPersistentRegion"* %36 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = inttoptr i64 %37 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %45, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %41, align 8
  br label %46

46:                                               ; preds = %40, %33
  store atomic i64 0, i64* %30 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %35) #6
  br label %47

47:                                               ; preds = %46, %28, %11
  %48 = add nuw nsw i64 %12, 1
  %49 = icmp eq i64 %48, %10
  br i1 %49, label %50, label %11

50:                                               ; preds = %47, %5
  %51 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #6
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %52

52:                                               ; preds = %1, %50
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #3

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
