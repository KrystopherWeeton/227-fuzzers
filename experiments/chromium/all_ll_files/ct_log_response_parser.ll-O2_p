; ModuleID = '../../net/cert/ct_log_response_parser.cc'
source_filename = "../../net/cert/ct_log_response_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"struct.net::ct::SignedTreeHead" = type { i32, %"class.base::Time", i64, [32 x i8], %"struct.net::ct::DigitallySigned", %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.base::internal::FieldConverterBase"* }
%"class.base::internal::FieldConverterBase" = type { i32 (...)**, %"class.std::__1::basic_string" }
%"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead" = type { i32, double, %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned" }
%"class.base::JSONValueConverter" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::unique_ptr"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::basic_string"* }
%"struct.net::ct::(anonymous namespace)::JsonConsistencyProof" = type { %"class.std::__1::vector.42" }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::unique_ptr.44"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::internal::FieldConverterBase.68" = type { i32 (...)**, %"class.std::__1::basic_string" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::FieldConverter" = type { %"class.base::internal::FieldConverterBase", i64, %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.base::internal::ValueConverter"* }
%"class.base::internal::ValueConverter" = type { i32 (...)** }
%"class.base::internal::FieldConverter.89" = type { %"class.base::internal::FieldConverterBase", i64, %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.base::internal::ValueConverter.93"* }
%"class.base::internal::ValueConverter.93" = type { i32 (...)** }
%"class.base::internal::FieldConverter.104" = type { %"class.base::internal::FieldConverterBase", i64, %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.base::internal::ValueConverter.108"* }
%"class.base::internal::ValueConverter.108" = type { i32 (...)** }
%"class.base::internal::CustomFieldConverter" = type { %"class.base::internal::ValueConverter.108", i1 (i8*, i64, %"class.std::__1::basic_string"*)* }
%"class.base::internal::FieldConverter.118" = type { %"class.base::internal::FieldConverterBase", i64, %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.base::internal::ValueConverter.122"* }
%"class.base::internal::ValueConverter.122" = type { i32 (...)** }
%"class.base::internal::CustomFieldConverter.129" = type { %"class.base::internal::ValueConverter.122", i1 (i8*, i64, %"struct.net::ct::DigitallySigned"*)* }
%"class.base::internal::FieldConverter.133" = type { %"class.base::internal::FieldConverterBase.68", i64, %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.base::internal::ValueConverter.137"* }
%"class.base::internal::ValueConverter.137" = type { i32 (...)** }
%"class.base::internal::RepeatedCustomValueConverter" = type { %"class.base::internal::ValueConverter.137", i1 (%"class.base::Value"*, %"class.std::__1::basic_string"*)* }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::Value"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZN4base8internal14ValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev = comdat any

$_ZN4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev = comdat any

$_ZNK4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7ConvertERKNS_5ValueEPS8_ = comdat any

$_ZN4base8internal14ValueConverterIN3net2ct15DigitallySignedEED2Ev = comdat any

$_ZN4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEED0Ev = comdat any

$_ZNK4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEE7ConvertERKNS_5ValueEPS4_ = comdat any

$_ZN4base8internal14ValueConverterINSt3__16vectorINS2_10unique_ptrINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_14default_deleteISA_EEEENS8_ISD_EEEEED2Ev = comdat any

$_ZN4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev = comdat any

$_ZNK4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7ConvertERKNS_5ValueEPNS2_6vectorINS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEENS6_ISH_EEEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS7_EEEENS5_ISA_EEE7reserveEm = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS7_EEEENS5_ISA_EEE21__push_back_slow_pathISA_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZTVN4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = comdat any

$_ZTVN4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEEE = comdat any

$_ZTVN4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = comdat any

@__const._ZN3net2ct18FillSignedTreeHeadERKN4base5ValueEPNS0_14SignedTreeHeadE.parsed_sth = private unnamed_addr constant { i32, [4 x i8], double, %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"struct.net::ct::DigitallySigned" { i32 -1431655766, i32 -1431655766, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, align 8
@.str = private unnamed_addr constant [12 x i8] c"consistency\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"tree_size\00", align 8
@.str.4 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 8
@.str.5 = private unnamed_addr constant [17 x i8] c"sha256_root_hash\00", align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"tree_head_signature\00", align 8
@_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverter"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverter"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::FieldConverter"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)* @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiE12ConvertFieldERKNS_5ValueEPS5_ to i8*)] }, align 8
@_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverterBase"*)* @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverterBase"*)* @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4base8internal19BasicValueConverterIiEE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverter.89"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverter.89"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::FieldConverter.89"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)* @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdE12ConvertFieldERKNS_5ValueEPS5_ to i8*)] }, align 8
@_ZTVN4base8internal19BasicValueConverterIdEE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverter.104"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverter.104"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::FieldConverter.104"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)* @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE12ConvertFieldERKNS_5ValueEPS5_ to i8*)] }, align 8
@_ZTVN4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ValueConverter.108"*)* @_ZN4base8internal14ValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::CustomFieldConverter"*)* @_ZN4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::CustomFieldConverter"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)* @_ZNK4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7ConvertERKNS_5ValueEPS8_ to i8*)] }, comdat, align 8
@_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverter.118"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverter.118"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::FieldConverter.118"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)* @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEE12ConvertFieldERKNS_5ValueEPS5_ to i8*)] }, align 8
@_ZTVN4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ValueConverter.122"*)* @_ZN4base8internal14ValueConverterIN3net2ct15DigitallySignedEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::CustomFieldConverter.129"*)* @_ZN4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::CustomFieldConverter.129"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)* @_ZNK4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEE7ConvertERKNS_5ValueEPS4_ to i8*)] }, comdat, align 8
@_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverter.133"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverter.133"*)* @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::FieldConverter.133"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)* @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEE12ConvertFieldERKNS_5ValueEPS5_ to i8*)] }, align 8
@_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEEE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::FieldConverterBase.68"*)* @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::FieldConverterBase.68"*)* @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ValueConverter.137"*)* @_ZN4base8internal14ValueConverterINSt3__16vectorINS2_10unique_ptrINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_14default_deleteISA_EEEENS8_ISD_EEEEED2Ev to i8*), i8* bitcast (void (%"class.base::internal::RepeatedCustomValueConverter"*)* @_ZN4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::RepeatedCustomValueConverter"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)* @_ZNK4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7ConvertERKNS_5ValueEPNS2_6vectorINS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEENS6_ISH_EEEE to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct18FillSignedTreeHeadERKN4base5ValueEPNS0_14SignedTreeHeadE(%"class.base::Value"* dereferenceable(32), %"struct.net::ct::SignedTreeHead"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", align 8
  %8 = alloca %"class.base::JSONValueConverter", align 8
  %9 = bitcast %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast ({ i32, [4 x i8], double, %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned" }* @__const._ZN3net2ct18FillSignedTreeHeadERKN4base5ValueEPNS0_14SignedTreeHeadE.parsed_sth to i8*), i64 72, i1 false)
  %10 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 3
  call void @_ZN3net2ct15DigitallySignedC1Ev(%"struct.net::ct::DigitallySigned"* %12) #11
  %13 = bitcast %"class.base::JSONValueConverter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::JSONValueConverter", %"class.base::JSONValueConverter"* %8, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.base::JSONValueConverter", %"class.base::JSONValueConverter"* %8, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::JSONValueConverter", %"class.base::JSONValueConverter"* %8, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #11
  %17 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = call i8* @_Znwm(i64 8) #12
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal19BasicValueConverterIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = ptrtoint i8* %18 to i64
  %21 = call i8* @_Znwm(i64 48) #12
  %22 = bitcast i8* %21 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9, i1 false) #11
  %24 = getelementptr inbounds i8, i8* %21, i64 17
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds i8, i8* %21, i64 31
  store i8 9, i8* %25, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 32
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 40
  %29 = bitcast i8* %28 to i64*
  store i64 %20, i64* %29, align 8
  %30 = ptrtoint i8* %21 to i64
  %31 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %30, i64* %31, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEENS_14default_deleteIS9_EEEENS_9allocatorISC_EEE9push_backEOSC_(%"class.std::__1::vector.28"* nonnull %16, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #11
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %32, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %32, align 8
  %34 = icmp eq %"class.base::internal::FieldConverterBase"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %2
  %36 = bitcast %"class.base::internal::FieldConverterBase"* %33 to void (%"class.base::internal::FieldConverterBase"*)***
  %37 = load void (%"class.base::internal::FieldConverterBase"*)**, void (%"class.base::internal::FieldConverterBase"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %37, i64 1
  %39 = load void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %38, align 8
  call void %39(%"class.base::internal::FieldConverterBase"* nonnull %33) #11
  br label %40

40:                                               ; preds = %35, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %41 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = call i8* @_Znwm(i64 8) #12
  %43 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal19BasicValueConverterIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = ptrtoint i8* %42 to i64
  %45 = call i8* @_Znwm(i64 48) #12
  %46 = bitcast i8* %45 to i32 (...)***
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9, i1 false) #11
  %48 = getelementptr inbounds i8, i8* %45, i64 17
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds i8, i8* %45, i64 31
  store i8 9, i8* %49, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %50 = getelementptr inbounds i8, i8* %45, i64 32
  %51 = bitcast i8* %50 to i64*
  store i64 8, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %45, i64 40
  %53 = bitcast i8* %52 to i64*
  store i64 %44, i64* %53, align 8
  %54 = ptrtoint i8* %45 to i64
  %55 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %54, i64* %55, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEENS_14default_deleteIS9_EEEENS_9allocatorISC_EEE9push_backEOSC_(%"class.std::__1::vector.28"* nonnull %16, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #11
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %56, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %56, align 8
  %58 = icmp eq %"class.base::internal::FieldConverterBase"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %40
  %60 = bitcast %"class.base::internal::FieldConverterBase"* %57 to void (%"class.base::internal::FieldConverterBase"*)***
  %61 = load void (%"class.base::internal::FieldConverterBase"*)**, void (%"class.base::internal::FieldConverterBase"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %61, i64 1
  %63 = load void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %62, align 8
  call void %63(%"class.base::internal::FieldConverterBase"* nonnull %57) #11
  br label %64

64:                                               ; preds = %59, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  %65 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = call i8* @_Znwm(i64 16) #12
  %67 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 8
  %69 = bitcast i8* %68 to i1 (i8*, i64, %"class.std::__1::basic_string"*)**
  store i1 (i8*, i64, %"class.std::__1::basic_string"*)* @_ZN3net2ct12_GLOBAL__N_121ConvertSHA256RootHashEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE, i1 (i8*, i64, %"class.std::__1::basic_string"*)** %69, align 8
  %70 = ptrtoint i8* %66 to i64
  %71 = call i8* @_Znwm(i64 48) #12
  %72 = bitcast i8* %71 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %71, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i64 16, i1 false) #11
  %74 = getelementptr inbounds i8, i8* %71, i64 24
  store i8 0, i8* %74, align 8
  %75 = getelementptr inbounds i8, i8* %71, i64 31
  store i8 16, i8* %75, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %76 = getelementptr inbounds i8, i8* %71, i64 32
  %77 = bitcast i8* %76 to i64*
  store i64 16, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %71, i64 40
  %79 = bitcast i8* %78 to i64*
  store i64 %70, i64* %79, align 8
  %80 = ptrtoint i8* %71 to i64
  %81 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %80, i64* %81, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEENS_14default_deleteIS9_EEEENS_9allocatorISC_EEE9push_backEOSC_(%"class.std::__1::vector.28"* nonnull %16, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #11
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %82, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %82, align 8
  %84 = icmp eq %"class.base::internal::FieldConverterBase"* %83, null
  br i1 %84, label %90, label %85

85:                                               ; preds = %64
  %86 = bitcast %"class.base::internal::FieldConverterBase"* %83 to void (%"class.base::internal::FieldConverterBase"*)***
  %87 = load void (%"class.base::internal::FieldConverterBase"*)**, void (%"class.base::internal::FieldConverterBase"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %87, i64 1
  %89 = load void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %88, align 8
  call void %89(%"class.base::internal::FieldConverterBase"* nonnull %83) #11
  br label %90

90:                                               ; preds = %85, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  %91 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %92 = call i8* @_Znwm(i64 16) #12
  %93 = bitcast i8* %92 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  %95 = bitcast i8* %94 to i1 (i8*, i64, %"struct.net::ct::DigitallySigned"*)**
  store i1 (i8*, i64, %"struct.net::ct::DigitallySigned"*)* @_ZN3net2ct12_GLOBAL__N_124ConvertTreeHeadSignatureEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS0_15DigitallySignedE, i1 (i8*, i64, %"struct.net::ct::DigitallySigned"*)** %95, align 8
  %96 = ptrtoint i8* %92 to i64
  %97 = call i8* @_Znwm(i64 48) #12
  %98 = bitcast i8* %97 to i32 (...)***
  %99 = getelementptr inbounds i8, i8* %97, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i64 19, i1 false) #11
  %100 = getelementptr inbounds i8, i8* %97, i64 27
  store i8 0, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %97, i64 31
  store i8 19, i8* %101, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %102 = getelementptr inbounds i8, i8* %97, i64 32
  %103 = bitcast i8* %102 to i64*
  store i64 40, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %97, i64 40
  %105 = bitcast i8* %104 to i64*
  store i64 %96, i64* %105, align 8
  %106 = ptrtoint i8* %97 to i64
  %107 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %106, i64* %107, align 8
  call fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEENS_14default_deleteIS9_EEEENS_9allocatorISC_EEE9push_backEOSC_(%"class.std::__1::vector.28"* nonnull %16, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %108, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %108, align 8
  %110 = icmp eq %"class.base::internal::FieldConverterBase"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %90
  %112 = bitcast %"class.base::internal::FieldConverterBase"* %109 to void (%"class.base::internal::FieldConverterBase"*)***
  %113 = load void (%"class.base::internal::FieldConverterBase"*)**, void (%"class.base::internal::FieldConverterBase"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %113, i64 1
  %115 = load void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %114, align 8
  call void %115(%"class.base::internal::FieldConverterBase"* nonnull %109) #11
  br label %116

116:                                              ; preds = %90, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  %117 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = trunc i64 %118 to i8
  %120 = icmp eq i8 %119, 6
  br i1 %120, label %121, label %234

121:                                              ; preds = %116
  %122 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.base::JSONValueConverter"* %8 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %123, %125
  br i1 %126, label %161, label %127

127:                                              ; preds = %121, %154
  %128 = phi i64 [ %157, %154 ], [ %125, %121 ]
  %129 = phi i64 [ %155, %154 ], [ 0, %121 ]
  %130 = inttoptr i64 %128 to %"class.std::__1::unique_ptr"*
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 %129, i32 0, i32 0, i32 0
  %132 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %131, align 8
  %133 = getelementptr inbounds %"class.base::internal::FieldConverterBase", %"class.base::internal::FieldConverterBase"* %132, i64 0, i32 1
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  %141 = select i1 %137, i8* %139, i8* %140
  %142 = getelementptr inbounds %"class.base::internal::FieldConverterBase", %"class.base::internal::FieldConverterBase"* %132, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = zext i8 %136 to i64
  %145 = select i1 %137, i64 %143, i64 %144
  %146 = call %"class.base::Value"* @_ZNK4base5Value8FindPathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* %141, i64 %145) #11
  %147 = icmp eq %"class.base::Value"* %146, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %127
  %149 = bitcast %"class.base::internal::FieldConverterBase"* %132 to i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)***
  %150 = load i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)**, i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)*** %149, align 8
  %151 = getelementptr inbounds i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)*, i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)** %150, i64 2
  %152 = load i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)*, i1 (%"class.base::internal::FieldConverterBase"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*)** %151, align 8
  %153 = call zeroext i1 %152(%"class.base::internal::FieldConverterBase"* %132, %"class.base::Value"* nonnull dereferenceable(32) %146, %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* nonnull %7) #11
  br i1 %153, label %154, label %234

154:                                              ; preds = %148, %127
  %155 = add nuw i64 %129, 1
  %156 = load i64, i64* %122, align 8
  %157 = load i64, i64* %124, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 3
  %160 = icmp ult i64 %155, %159
  br i1 %160, label %127, label %161

161:                                              ; preds = %154, %121
  %162 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = icmp slt i32 %163, 0
  br i1 %164, label %234, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 1
  %167 = load double, double* %166, align 8
  %168 = fcmp olt double %167, 0.000000e+00
  br i1 %168, label %234, label %169

169:                                              ; preds = %165
  %170 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  %174 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = zext i8 %172 to i64
  %177 = select i1 %173, i64 %175, i64 %176
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %234, label %179

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 3, i32 2
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead", %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %7, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = zext i8 %183 to i64
  %188 = select i1 %184, i64 %186, i64 %187
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %234, label %190

190:                                              ; preds = %179
  %191 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 0
  store i32 0, i32* %191, align 8
  %192 = sext i32 %163 to i64
  %193 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 2
  store i64 %192, i64* %193, align 8
  %194 = call i64 @_ZN4base4Time10FromJsTimeEd(double %167) #11
  %195 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 1, i32 0, i32 0
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 4
  %197 = bitcast %"struct.net::ct::DigitallySigned"* %12 to i64*
  %198 = bitcast %"struct.net::ct::DigitallySigned"* %196 to i64*
  %199 = load i64, i64* %197, align 8
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 4, i32 2
  %201 = icmp eq %"struct.net::ct::DigitallySigned"* %196, %12
  br i1 %201, label %227, label %202

202:                                              ; preds = %190
  %203 = bitcast %"class.std::__1::basic_string"* %200 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  %207 = load i8, i8* %182, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %206, label %218, label %209

209:                                              ; preds = %202
  br i1 %208, label %213, label %210

210:                                              ; preds = %209
  %211 = bitcast %"class.std::__1::basic_string"* %200 to i8*
  %212 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 24, i1 false) #11
  br label %227

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  %216 = load i64, i64* %185, align 8
  %217 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %200, i8* %215, i64 %216) #11
  br label %227

218:                                              ; preds = %202
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = load i64, i64* %185, align 8
  %222 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %223 = zext i8 %207 to i64
  %224 = select i1 %208, i8* %220, i8* %222
  %225 = select i1 %208, i64 %221, i64 %223
  %226 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %200, i8* %224, i64 %225) #11
  br label %227

227:                                              ; preds = %190, %210, %213, %218
  %228 = getelementptr inbounds %"struct.net::ct::SignedTreeHead", %"struct.net::ct::SignedTreeHead"* %1, i64 0, i32 3, i64 0
  %229 = load i8, i8* %171, align 1
  %230 = icmp slt i8 %229, 0
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = select i1 %230, i8* %232, i8* %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 1 %233, i64 32, i1 false)
  br label %234

234:                                              ; preds = %148, %179, %169, %165, %161, %116, %227
  %235 = phi i1 [ true, %227 ], [ false, %179 ], [ false, %116 ], [ false, %161 ], [ false, %165 ], [ false, %169 ], [ false, %148 ]
  %236 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %237 = icmp eq %"class.std::__1::unique_ptr"* %236, null
  br i1 %237, label %260, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.std::__1::unique_ptr"* %236 to i8*
  %240 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %241 = icmp eq %"class.std::__1::unique_ptr"* %240, %236
  br i1 %241, label %258, label %242

242:                                              ; preds = %238, %253
  %243 = phi %"class.std::__1::unique_ptr"* [ %244, %253 ], [ %240, %238 ]
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %243, i64 -1
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %244, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %245, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %245, align 8
  %247 = icmp eq %"class.base::internal::FieldConverterBase"* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %242
  %249 = bitcast %"class.base::internal::FieldConverterBase"* %246 to void (%"class.base::internal::FieldConverterBase"*)***
  %250 = load void (%"class.base::internal::FieldConverterBase"*)**, void (%"class.base::internal::FieldConverterBase"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %250, i64 1
  %252 = load void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %251, align 8
  call void %252(%"class.base::internal::FieldConverterBase"* nonnull %246) #11
  br label %253

253:                                              ; preds = %248, %242
  %254 = icmp eq %"class.std::__1::unique_ptr"* %244, %236
  br i1 %254, label %255, label %242

255:                                              ; preds = %253
  %256 = bitcast %"class.base::JSONValueConverter"* %8 to i8**
  %257 = load i8*, i8** %256, align 8
  br label %258

258:                                              ; preds = %255, %238
  %259 = phi i8* [ %257, %255 ], [ %239, %238 ]
  store %"class.std::__1::unique_ptr"* %236, %"class.std::__1::unique_ptr"** %15, align 8
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %234, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  call void @_ZN3net2ct15DigitallySignedD1Ev(%"struct.net::ct::DigitallySigned"* %12) #11
  %261 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #12
  br label %268

268:                                              ; preds = %260, %265
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #11
  ret i1 %235
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN4base4Time10FromJsTimeEd(double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net2ct20FillConsistencyProofERKN4base5ValueEPNSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEE(%"class.base::Value"* dereferenceable(32), %"class.std::__1::vector.35"*) local_unnamed_addr #0 {
  %3 = alloca %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof", align 8
  %4 = alloca %"class.base::DictionaryValue"*, align 8
  %5 = bitcast %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof", %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof", %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* %3, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %8 = tail call i8* @_Znwm(i64 16) #12
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i1 (%"class.base::Value"*, %"class.std::__1::basic_string"*)**
  store i1 (%"class.base::Value"*, %"class.std::__1::basic_string"*)* @_ZN3net2ct12_GLOBAL__N_126ConvertIndividualProofNodeEPKN4base5ValueEPNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE, i1 (%"class.base::Value"*, %"class.std::__1::basic_string"*)** %11, align 8
  %12 = ptrtoint i8* %8 to i64
  %13 = tail call i8* @_Znwm(i64 48) #12
  %14 = bitcast i8* %13 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 7310594991874535267, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 8), i64 3, i1 false) #11
  %18 = getelementptr inbounds i8, i8* %13, i64 19
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds i8, i8* %13, i64 31
  store i8 11, i8* %19, align 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 32
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 40
  %23 = bitcast i8* %22 to i64*
  store i64 %12, i64* %23, align 8
  %24 = ptrtoint i8* %13 to i64
  %25 = tail call i8* @_Znwm(i64 8) #12
  %26 = bitcast i8* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i8
  %30 = icmp eq i8 %29, 6
  %31 = bitcast i8* %13 to %"class.base::internal::FieldConverterBase.68"*
  br i1 %30, label %32, label %102

32:                                               ; preds = %2
  %33 = getelementptr inbounds i8, i8* %13, i64 8
  %34 = getelementptr inbounds i8, i8* %13, i64 31
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast i8* %33 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %36, i8* %38, i8* %33
  %40 = getelementptr inbounds i8, i8* %13, i64 16
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %35 to i64
  %44 = select i1 %36, i64 %42, i64 %43
  %45 = tail call %"class.base::Value"* @_ZNK4base5Value8FindPathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %0, i8* %39, i64 %44) #11
  %46 = icmp eq %"class.base::Value"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %32
  %48 = bitcast i8* %13 to i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)***
  %49 = load i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)**, i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)*, i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)** %49, i64 2
  %51 = load i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)*, i1 (%"class.base::internal::FieldConverterBase.68"*, %"class.base::Value"*, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*)** %50, align 8
  %52 = call zeroext i1 %51(%"class.base::internal::FieldConverterBase.68"* nonnull %31, %"class.base::Value"* nonnull dereferenceable(32) %45, %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* nonnull %3) #11
  br i1 %52, label %53, label %102

53:                                               ; preds = %47, %32
  %54 = bitcast %"class.base::DictionaryValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %4, align 8
  %55 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* %0, %"class.base::DictionaryValue"** nonnull %4) #11
  br i1 %55, label %56, label %100

56:                                               ; preds = %53
  %57 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %58 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* %57, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i64 11) #11
  br i1 %58, label %59, label %100

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::unique_ptr.44"** %7 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* %3 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 3
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.35"* %1, i64 %65)
  %66 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %6, align 8
  %67 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %7, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr.44"* %66, %67
  br i1 %68, label %100, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"class.std::__1::basic_string"** %70 to i64*
  br label %73

73:                                               ; preds = %69, %97
  %74 = phi %"class.std::__1::unique_ptr.44"* [ %66, %69 ], [ %98, %97 ]
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %75, align 8
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %79 = icmp eq %"class.std::__1::basic_string"* %77, %78
  br i1 %79, label %96, label %80

80:                                               ; preds = %73
  %81 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %80
  %86 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #11
  br label %93

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %77, i8* %90, i64 %92) #11
  br label %93

93:                                               ; preds = %88, %85
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %95 = ptrtoint %"class.std::__1::basic_string"* %94 to i64
  store i64 %95, i64* %72, align 8
  br label %97

96:                                               ; preds = %73
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.35"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %76) #11
  br label %97

97:                                               ; preds = %93, %96
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %74, i64 1
  %99 = icmp eq %"class.std::__1::unique_ptr.44"* %98, %67
  br i1 %99, label %100, label %73

100:                                              ; preds = %97, %59, %53, %56
  %101 = phi i1 [ false, %56 ], [ false, %53 ], [ true, %59 ], [ true, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  br label %102

102:                                              ; preds = %47, %2, %100
  %103 = phi i1 [ %101, %100 ], [ false, %2 ], [ false, %47 ]
  %104 = bitcast i8* %25 to %"class.base::internal::FieldConverterBase.68"**
  %105 = load %"class.base::internal::FieldConverterBase.68"*, %"class.base::internal::FieldConverterBase.68"** %104, align 8
  store %"class.base::internal::FieldConverterBase.68"* null, %"class.base::internal::FieldConverterBase.68"** %104, align 8
  %106 = icmp eq %"class.base::internal::FieldConverterBase.68"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.base::internal::FieldConverterBase.68"* %105 to void (%"class.base::internal::FieldConverterBase.68"*)***
  %109 = load void (%"class.base::internal::FieldConverterBase.68"*)**, void (%"class.base::internal::FieldConverterBase.68"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase.68"*)*, void (%"class.base::internal::FieldConverterBase.68"*)** %109, i64 1
  %111 = load void (%"class.base::internal::FieldConverterBase.68"*)*, void (%"class.base::internal::FieldConverterBase.68"*)** %110, align 8
  call void %111(%"class.base::internal::FieldConverterBase.68"* nonnull %105) #11
  br label %112

112:                                              ; preds = %107, %102
  call void @_ZdlPv(i8* nonnull %25) #12
  %113 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %6, align 8
  %114 = icmp eq %"class.std::__1::unique_ptr.44"* %113, null
  br i1 %114, label %142, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.std::__1::unique_ptr.44"* %113 to i8*
  %117 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %7, align 8
  %118 = icmp eq %"class.std::__1::unique_ptr.44"* %117, %113
  br i1 %118, label %140, label %119

119:                                              ; preds = %115, %135
  %120 = phi %"class.std::__1::unique_ptr.44"* [ %121, %135 ], [ %117, %115 ]
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %120, i64 -1
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %122, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %122, align 8
  %124 = icmp eq %"class.std::__1::basic_string"* %123, null
  br i1 %124, label %135, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.std::__1::basic_string"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #12
  br label %133

133:                                              ; preds = %130, %125
  %134 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %133, %119
  %136 = icmp eq %"class.std::__1::unique_ptr.44"* %121, %113
  br i1 %136, label %137, label %119

137:                                              ; preds = %135
  %138 = bitcast %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* %3 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %115
  %141 = phi i8* [ %139, %137 ], [ %116, %115 ]
  store %"class.std::__1::unique_ptr.44"* %113, %"class.std::__1::unique_ptr.44"** %7, align 8
  call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %112, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %103
}

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.35"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

declare void @_ZN3net2ct15DigitallySignedC1Ev(%"struct.net::ct::DigitallySigned"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net2ct15DigitallySignedD1Ev(%"struct.net::ct::DigitallySigned"*) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3net2ct12_GLOBAL__N_121ConvertSHA256RootHashEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.std::__1::basic_string"* %2) #11
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %8
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = icmp eq i64 %19, 32
  br label %21

21:                                               ; preds = %18, %3
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3net2ct12_GLOBAL__N_124ConvertTreeHeadSignatureEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS0_15DigitallySignedE(i8*, i64, %"struct.net::ct::DigitallySigned"*) #0 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %11 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.std::__1::basic_string"* nonnull %5) #11
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %29

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i8*, i8** %10, align 8
  %24 = select i1 %22, i8* %23, i8* %9
  store i8* %24, i8** %17, align 8
  %25 = load i64, i64* %15, align 8
  %26 = zext i8 %21 to i64
  %27 = select i1 %22, i64 %25, i64 %26
  store i64 %27, i64* %18, align 8
  %28 = call zeroext i1 @_ZN3net2ct21DecodeDigitallySignedEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS0_15DigitallySignedE(%"class.base::BasicStringPiece"* nonnull %6, %"struct.net::ct::DigitallySigned"* %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  br label %29

29:                                               ; preds = %12, %14
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %13, %12 ], [ %19, %14 ]
  %31 = phi i1 [ false, %12 ], [ %28, %14 ]
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %29, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret i1 %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEENS_14default_deleteIS9_EEEENS_9allocatorISC_EEE9push_backEOSC_(%"class.std::__1::vector.28"*, %"class.std::__1::unique_ptr"* nocapture dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp ult %"class.std::__1::unique_ptr"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %6 to i64
  br i1 %7, label %9, label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %10, align 8
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %15 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %16 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  store i64 %15, i64* %16, align 8
  br label %168

17:                                               ; preds = %2
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %20 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 2305843009213693951
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #13
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %30 = sub i64 %8, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 1152921504606846975
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 2305843009213693951, %28 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.std::__1::unique_ptr"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"class.std::__1::unique_ptr"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %23
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %47
  %51 = ptrtoint %"class.std::__1::unique_ptr"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %54 = load i64, i64* %53, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %52, align 8
  %55 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %60 = ptrtoint %"class.std::__1::unique_ptr"* %59 to i64
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr"* %61, %59
  br i1 %62, label %144, label %63

63:                                               ; preds = %46
  %64 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1, i32 0, i32 0, i32 0
  %65 = ptrtoint %"class.base::internal::FieldConverterBase"** %64 to i64
  %66 = sub i64 %65, %60
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %83, label %71

71:                                               ; preds = %63, %71
  %72 = phi %"class.std::__1::unique_ptr"* [ %75, %71 ], [ %49, %63 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %76, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %81, %71 ], [ %69, %63 ]
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 -1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %77, align 8
  %80 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = add i64 %74, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %71, !llvm.loop !2

83:                                               ; preds = %71, %63
  %84 = phi %"class.std::__1::unique_ptr"* [ undef, %63 ], [ %75, %71 ]
  %85 = phi %"class.std::__1::unique_ptr"* [ %49, %63 ], [ %75, %71 ]
  %86 = phi %"class.std::__1::unique_ptr"* [ %61, %63 ], [ %76, %71 ]
  %87 = icmp ult i64 %66, 56
  br i1 %87, label %140, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::unique_ptr"* [ %133, %88 ], [ %85, %83 ]
  %90 = phi %"class.std::__1::unique_ptr"* [ %134, %88 ], [ %86, %83 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -1
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -2
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -2
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -3
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -3
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -4
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -5
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -6
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -7
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -7
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 -8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 -8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr"* %134, %59
  br i1 %139, label %140, label %88

140:                                              ; preds = %88, %83
  %141 = phi %"class.std::__1::unique_ptr"* [ %84, %83 ], [ %133, %88 ]
  %142 = load i64, i64* %20, align 8
  %143 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %144

144:                                              ; preds = %46, %140
  %145 = phi %"class.std::__1::unique_ptr"* [ %143, %140 ], [ %59, %46 ]
  %146 = phi %"class.std::__1::unique_ptr"* [ %141, %140 ], [ %49, %46 ]
  %147 = phi i64 [ %142, %140 ], [ %60, %46 ]
  %148 = ptrtoint %"class.std::__1::unique_ptr"* %146 to i64
  store i64 %148, i64* %20, align 8
  store i64 %57, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %149 = inttoptr i64 %147 to %"class.std::__1::unique_ptr"*
  %150 = icmp eq %"class.std::__1::unique_ptr"* %145, %149
  br i1 %150, label %164, label %151

151:                                              ; preds = %144, %162
  %152 = phi %"class.std::__1::unique_ptr"* [ %153, %162 ], [ %145, %144 ]
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 -1
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.base::internal::FieldConverterBase"*, %"class.base::internal::FieldConverterBase"** %154, align 8
  store %"class.base::internal::FieldConverterBase"* null, %"class.base::internal::FieldConverterBase"** %154, align 8
  %156 = icmp eq %"class.base::internal::FieldConverterBase"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %151
  %158 = bitcast %"class.base::internal::FieldConverterBase"* %155 to void (%"class.base::internal::FieldConverterBase"*)***
  %159 = load void (%"class.base::internal::FieldConverterBase"*)**, void (%"class.base::internal::FieldConverterBase"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %159, i64 1
  %161 = load void (%"class.base::internal::FieldConverterBase"*)*, void (%"class.base::internal::FieldConverterBase"*)** %160, align 8
  tail call void %161(%"class.base::internal::FieldConverterBase"* nonnull %155) #11
  br label %162

162:                                              ; preds = %157, %151
  %163 = icmp eq %"class.std::__1::unique_ptr"* %153, %149
  br i1 %163, label %164, label %151

164:                                              ; preds = %162, %144
  %165 = icmp eq i64 %147, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %164
  %167 = inttoptr i64 %147 to i8*
  tail call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %166, %164, %9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiED2Ev(%"class.base::internal::FieldConverter"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter"*, %"class.base::internal::ValueConverter"** %3, align 8
  store %"class.base::internal::ValueConverter"* null, %"class.base::internal::ValueConverter"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter"* %4 to void (%"class.base::internal::ValueConverter"*)***
  %8 = load void (%"class.base::internal::ValueConverter"*)**, void (%"class.base::internal::ValueConverter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter"*)*, void (%"class.base::internal::ValueConverter"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter"*)*, void (%"class.base::internal::ValueConverter"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiED0Ev(%"class.base::internal::FieldConverter"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter"*, %"class.base::internal::ValueConverter"** %3, align 8
  store %"class.base::internal::ValueConverter"* null, %"class.base::internal::ValueConverter"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter"* %4 to void (%"class.base::internal::ValueConverter"*)***
  %8 = load void (%"class.base::internal::ValueConverter"*)**, void (%"class.base::internal::ValueConverter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter"*)*, void (%"class.base::internal::ValueConverter"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter"*)*, void (%"class.base::internal::ValueConverter"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.base::internal::FieldConverter"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEiE12ConvertFieldERKNS_5ValueEPS5_(%"class.base::internal::FieldConverter"* nocapture readonly, %"class.base::Value"* dereferenceable(32), %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::ValueConverter"*, %"class.base::internal::ValueConverter"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::FieldConverter", %"class.base::internal::FieldConverter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = bitcast i8* %9 to i32*
  %11 = bitcast %"class.base::internal::ValueConverter"* %5 to i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)***
  %12 = load i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)**, i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)*, i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)** %12, i64 2
  %14 = load i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)*, i1 (%"class.base::internal::ValueConverter"*, %"class.base::Value"*, i32*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::ValueConverter"* %5, %"class.base::Value"* dereferenceable(32) %1, i32* %10) #11
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEED2Ev(%"class.base::internal::FieldConverterBase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverterBase", %"class.base::internal::FieldConverterBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverterBase", %"class.base::internal::FieldConverterBase"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEED0Ev(%"class.base::internal::FieldConverterBase"* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdED2Ev(%"class.base::internal::FieldConverter.89"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.93"*, %"class.base::internal::ValueConverter.93"** %3, align 8
  store %"class.base::internal::ValueConverter.93"* null, %"class.base::internal::ValueConverter.93"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.93"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.93"* %4 to void (%"class.base::internal::ValueConverter.93"*)***
  %8 = load void (%"class.base::internal::ValueConverter.93"*)**, void (%"class.base::internal::ValueConverter.93"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.93"*)*, void (%"class.base::internal::ValueConverter.93"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.93"*)*, void (%"class.base::internal::ValueConverter.93"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.93"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdED0Ev(%"class.base::internal::FieldConverter.89"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.93"*, %"class.base::internal::ValueConverter.93"** %3, align 8
  store %"class.base::internal::ValueConverter.93"* null, %"class.base::internal::ValueConverter.93"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.93"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.93"* %4 to void (%"class.base::internal::ValueConverter.93"*)***
  %8 = load void (%"class.base::internal::ValueConverter.93"*)**, void (%"class.base::internal::ValueConverter.93"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.93"*)*, void (%"class.base::internal::ValueConverter.93"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.93"*)*, void (%"class.base::internal::ValueConverter.93"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.93"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.base::internal::FieldConverter.89"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEdE12ConvertFieldERKNS_5ValueEPS5_(%"class.base::internal::FieldConverter.89"* nocapture readonly, %"class.base::Value"* dereferenceable(32), %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::ValueConverter.93"*, %"class.base::internal::ValueConverter.93"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::FieldConverter.89", %"class.base::internal::FieldConverter.89"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = bitcast i8* %9 to double*
  %11 = bitcast %"class.base::internal::ValueConverter.93"* %5 to i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)***
  %12 = load i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)**, i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)*, i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)** %12, i64 2
  %14 = load i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)*, i1 (%"class.base::internal::ValueConverter.93"*, %"class.base::Value"*, double*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::ValueConverter.93"* %5, %"class.base::Value"* dereferenceable(32) %1, double* %10) #11
  ret i1 %15
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEED2Ev(%"class.base::internal::FieldConverter.104"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.108"*, %"class.base::internal::ValueConverter.108"** %3, align 8
  store %"class.base::internal::ValueConverter.108"* null, %"class.base::internal::ValueConverter.108"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.108"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.108"* %4 to void (%"class.base::internal::ValueConverter.108"*)***
  %8 = load void (%"class.base::internal::ValueConverter.108"*)**, void (%"class.base::internal::ValueConverter.108"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.108"*)*, void (%"class.base::internal::ValueConverter.108"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.108"*)*, void (%"class.base::internal::ValueConverter.108"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.108"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEED0Ev(%"class.base::internal::FieldConverter.104"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.108"*, %"class.base::internal::ValueConverter.108"** %3, align 8
  store %"class.base::internal::ValueConverter.108"* null, %"class.base::internal::ValueConverter.108"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.108"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.108"* %4 to void (%"class.base::internal::ValueConverter.108"*)***
  %8 = load void (%"class.base::internal::ValueConverter.108"*)**, void (%"class.base::internal::ValueConverter.108"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.108"*)*, void (%"class.base::internal::ValueConverter.108"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.108"*)*, void (%"class.base::internal::ValueConverter.108"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.108"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.base::internal::FieldConverter.104"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEE12ConvertFieldERKNS_5ValueEPS5_(%"class.base::internal::FieldConverter.104"* nocapture readonly, %"class.base::Value"* dereferenceable(32), %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::ValueConverter.108"*, %"class.base::internal::ValueConverter.108"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::FieldConverter.104", %"class.base::internal::FieldConverter.104"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = bitcast i8* %9 to %"class.std::__1::basic_string"*
  %11 = bitcast %"class.base::internal::ValueConverter.108"* %5 to i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)***
  %12 = load i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)**, i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)** %12, i64 2
  %14 = load i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.base::internal::ValueConverter.108"*, %"class.base::Value"*, %"class.std::__1::basic_string"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::ValueConverter.108"* %5, %"class.base::Value"* dereferenceable(32) %1, %"class.std::__1::basic_string"* %10) #11
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal14ValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED2Ev(%"class.base::internal::ValueConverter.108"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev(%"class.base::internal::CustomFieldConverter"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.base::internal::CustomFieldConverter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4base8internal20CustomFieldConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7ConvertERKNS_5ValueEPS8_(%"class.base::internal::CustomFieldConverter"*, %"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %7 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %1, %"class.std::__1::basic_string"* nonnull %4) #11
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::internal::CustomFieldConverter", %"class.base::internal::CustomFieldConverter"* %0, i64 0, i32 1
  %13 = load i1 (i8*, i64, %"class.std::__1::basic_string"*)*, i1 (i8*, i64, %"class.std::__1::basic_string"*)** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = select i1 %17, i8* %18, i8* %5
  %20 = load i64, i64* %11, align 8
  %21 = zext i8 %16 to i64
  %22 = select i1 %17, i64 %20, i64 %21
  %23 = call zeroext i1 %13(i8* %19, i64 %22, %"class.std::__1::basic_string"* %2) #11
  br label %24

24:                                               ; preds = %8, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %9, %8 ], [ %14, %10 ]
  %26 = phi i1 [ false, %8 ], [ %23, %10 ]
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %24, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %26
}

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEED2Ev(%"class.base::internal::FieldConverter.118"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.122"*, %"class.base::internal::ValueConverter.122"** %3, align 8
  store %"class.base::internal::ValueConverter.122"* null, %"class.base::internal::ValueConverter.122"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.122"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.122"* %4 to void (%"class.base::internal::ValueConverter.122"*)***
  %8 = load void (%"class.base::internal::ValueConverter.122"*)**, void (%"class.base::internal::ValueConverter.122"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.122"*)*, void (%"class.base::internal::ValueConverter.122"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.122"*)*, void (%"class.base::internal::ValueConverter.122"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.122"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEED0Ev(%"class.base::internal::FieldConverter.118"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.122"*, %"class.base::internal::ValueConverter.122"** %3, align 8
  store %"class.base::internal::ValueConverter.122"* null, %"class.base::internal::ValueConverter.122"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.122"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.122"* %4 to void (%"class.base::internal::ValueConverter.122"*)***
  %8 = load void (%"class.base::internal::ValueConverter.122"*)**, void (%"class.base::internal::ValueConverter.122"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.122"*)*, void (%"class.base::internal::ValueConverter.122"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.122"*)*, void (%"class.base::internal::ValueConverter.122"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.122"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.base::internal::FieldConverter.118"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_118JsonSignedTreeHeadENS3_15DigitallySignedEE12ConvertFieldERKNS_5ValueEPS5_(%"class.base::internal::FieldConverter.118"* nocapture readonly, %"class.base::Value"* dereferenceable(32), %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::ValueConverter.122"*, %"class.base::internal::ValueConverter.122"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::FieldConverter.118", %"class.base::internal::FieldConverter.118"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.net::ct::(anonymous namespace)::JsonSignedTreeHead"* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = bitcast i8* %9 to %"struct.net::ct::DigitallySigned"*
  %11 = bitcast %"class.base::internal::ValueConverter.122"* %5 to i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)***
  %12 = load i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)**, i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)*, i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)** %12, i64 2
  %14 = load i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)*, i1 (%"class.base::internal::ValueConverter.122"*, %"class.base::Value"*, %"struct.net::ct::DigitallySigned"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::ValueConverter.122"* %5, %"class.base::Value"* dereferenceable(32) %1, %"struct.net::ct::DigitallySigned"* %10) #11
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal14ValueConverterIN3net2ct15DigitallySignedEED2Ev(%"class.base::internal::ValueConverter.122"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEED0Ev(%"class.base::internal::CustomFieldConverter.129"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.base::internal::CustomFieldConverter.129"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4base8internal20CustomFieldConverterIN3net2ct15DigitallySignedEE7ConvertERKNS_5ValueEPS4_(%"class.base::internal::CustomFieldConverter.129"*, %"class.base::Value"* dereferenceable(32), %"struct.net::ct::DigitallySigned"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %7 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %1, %"class.std::__1::basic_string"* nonnull %4) #11
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::internal::CustomFieldConverter.129", %"class.base::internal::CustomFieldConverter.129"* %0, i64 0, i32 1
  %13 = load i1 (i8*, i64, %"struct.net::ct::DigitallySigned"*)*, i1 (i8*, i64, %"struct.net::ct::DigitallySigned"*)** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i8*, i8** %6, align 8
  %19 = select i1 %17, i8* %18, i8* %5
  %20 = load i64, i64* %11, align 8
  %21 = zext i8 %16 to i64
  %22 = select i1 %17, i64 %20, i64 %21
  %23 = call zeroext i1 %13(i8* %19, i64 %22, %"struct.net::ct::DigitallySigned"* %2) #11
  br label %24

24:                                               ; preds = %8, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %9, %8 ], [ %14, %10 ]
  %26 = phi i1 [ false, %8 ], [ %23, %10 ]
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %24, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %26
}

declare zeroext i1 @_ZN3net2ct21DecodeDigitallySignedEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS0_15DigitallySignedE(%"class.base::BasicStringPiece"*, %"struct.net::ct::DigitallySigned"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZNK4base5Value8FindPathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3net2ct12_GLOBAL__N_126ConvertIndividualProofNodeEPKN4base5ValueEPNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %7 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %0, %"class.std::__1::basic_string"* nonnull %4) #11
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %39

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i8*, i8** %6, align 8
  %17 = select i1 %15, i8* %16, i8* %5
  %18 = load i64, i64* %11, align 8
  %19 = zext i8 %14 to i64
  %20 = select i1 %15, i64 %18, i64 %19
  %21 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %17, i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %20, i64* %23, align 8
  %24 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, %"class.std::__1::basic_string"* %1) #11
  br i1 %24, label %26, label %25

25:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  br label %39

26:                                               ; preds = %10
  %27 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %36

34:                                               ; preds = %26
  %35 = zext i8 %29 to i64
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i64 [ %33, %31 ], [ %35, %34 ]
  %38 = icmp eq i64 %37, 32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  br label %39

39:                                               ; preds = %8, %36, %25
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %9, %8 ], [ %12, %36 ], [ %12, %25 ]
  %41 = phi i1 [ false, %8 ], [ %38, %36 ], [ false, %25 ]
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %41
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEED2Ev(%"class.base::internal::FieldConverter.133"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.137"*, %"class.base::internal::ValueConverter.137"** %3, align 8
  store %"class.base::internal::ValueConverter.137"* null, %"class.base::internal::ValueConverter.137"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.137"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.137"* %4 to void (%"class.base::internal::ValueConverter.137"*)***
  %8 = load void (%"class.base::internal::ValueConverter.137"*)**, void (%"class.base::internal::ValueConverter.137"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.137"*)*, void (%"class.base::internal::ValueConverter.137"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.137"*)*, void (%"class.base::internal::ValueConverter.137"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.137"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEED0Ev(%"class.base::internal::FieldConverter.133"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::ValueConverter.137"*, %"class.base::internal::ValueConverter.137"** %3, align 8
  store %"class.base::internal::ValueConverter.137"* null, %"class.base::internal::ValueConverter.137"** %3, align 8
  %5 = icmp eq %"class.base::internal::ValueConverter.137"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::internal::ValueConverter.137"* %4 to void (%"class.base::internal::ValueConverter.137"*)***
  %8 = load void (%"class.base::internal::ValueConverter.137"*)**, void (%"class.base::internal::ValueConverter.137"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.base::internal::ValueConverter.137"*)*, void (%"class.base::internal::ValueConverter.137"*)** %8, i64 1
  %10 = load void (%"class.base::internal::ValueConverter.137"*)*, void (%"class.base::internal::ValueConverter.137"*)** %9, align 8
  tail call void %10(%"class.base::internal::ValueConverter.137"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %12 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %"class.base::internal::FieldConverter.133"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK4base8internal14FieldConverterIN3net2ct12_GLOBAL__N_120JsonConsistencyProofENSt3__16vectorINS6_10unique_ptrINS6_12basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS6_14default_deleteISE_EEEENSC_ISH_EEEEE12ConvertFieldERKNS_5ValueEPS5_(%"class.base::internal::FieldConverter.133"* nocapture readonly, %"class.base::Value"* dereferenceable(32), %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::ValueConverter.137"*, %"class.base::internal::ValueConverter.137"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::FieldConverter.133", %"class.base::internal::FieldConverter.133"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.net::ct::(anonymous namespace)::JsonConsistencyProof"* %2 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %7
  %10 = bitcast i8* %9 to %"class.std::__1::vector.42"*
  %11 = bitcast %"class.base::internal::ValueConverter.137"* %5 to i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)***
  %12 = load i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)**, i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)*, i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)** %12, i64 2
  %14 = load i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)*, i1 (%"class.base::internal::ValueConverter.137"*, %"class.base::Value"*, %"class.std::__1::vector.42"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.base::internal::ValueConverter.137"* %5, %"class.base::Value"* dereferenceable(32) %1, %"class.std::__1::vector.42"* %10) #11
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEED2Ev(%"class.base::internal::FieldConverterBase.68"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::FieldConverterBase.68", %"class.base::internal::FieldConverterBase.68"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::FieldConverterBase.68", %"class.base::internal::FieldConverterBase.68"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZN4base8internal18FieldConverterBaseIN3net2ct12_GLOBAL__N_120JsonConsistencyProofEED0Ev(%"class.base::internal::FieldConverterBase.68"* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal14ValueConverterINSt3__16vectorINS2_10unique_ptrINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_14default_deleteISA_EEEENS8_ISD_EEEEED2Ev(%"class.base::internal::ValueConverter.137"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEED0Ev(%"class.base::internal::RepeatedCustomValueConverter"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.base::internal::RepeatedCustomValueConverter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4base8internal28RepeatedCustomValueConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE7ConvertERKNS_5ValueEPNS2_6vectorINS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEENS6_ISH_EEEE(%"class.base::internal::RepeatedCustomValueConverter"*, %"class.base::Value"* dereferenceable(32), %"class.std::__1::vector.42"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.std::__1::unique_ptr.44", align 8
  %7 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i8
  %10 = icmp eq i8 %9, 7
  br i1 %10, label %11, label %111

11:                                               ; preds = %3
  %12 = tail call %"class.std::__1::vector.20"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %1) #11
  %13 = icmp eq %"class.std::__1::vector.20"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %12, i64 0, i32 0, i32 1
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.20"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 5
  br label %22

22:                                               ; preds = %11, %14
  %23 = phi i64 [ %21, %14 ], [ 0, %11 ]
  tail call void @_ZNSt3__16vectorINS_10unique_ptrINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS7_EEEENS5_ISA_EEE7reserveEm(%"class.std::__1::vector.42"* %2, i64 %23)
  %24 = tail call %"class.std::__1::vector.20"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %1) #11
  %25 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %27 = icmp eq %"class.std::__1::vector.20"* %24, null
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  br i1 %27, label %38, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %24, i64 0, i32 0, i32 0
  %31 = load %"class.base::Value"*, %"class.base::Value"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %24, i64 0, i32 0, i32 1
  %33 = bitcast %"class.base::Value"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = ptrtoint %"class.base::Value"* %31 to i64
  %36 = sub i64 %34, %35
  %37 = ashr exact i64 %36, 5
  br label %38

38:                                               ; preds = %22, %29
  %39 = phi %"class.base::Value"* [ %31, %29 ], [ null, %22 ]
  %40 = phi i64 [ %37, %29 ], [ 0, %22 ]
  %41 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %39, i64 %40
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::Value"* %39, %"class.base::Value"* %39, %"class.base::Value"* %41) #11
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %44 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false)
  br i1 %27, label %55, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %24, i64 0, i32 0, i32 0
  %47 = load %"class.base::Value"*, %"class.base::Value"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %24, i64 0, i32 0, i32 1
  %49 = bitcast %"class.base::Value"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"class.base::Value"* %47 to i64
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 5
  %54 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %47, i64 %53
  br label %55

55:                                               ; preds = %38, %45
  %56 = phi %"class.base::Value"* [ %47, %45 ], [ null, %38 ]
  %57 = phi %"class.base::Value"* [ %54, %45 ], [ null, %38 ]
  %58 = phi i64 [ %53, %45 ], [ 0, %38 ]
  %59 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %56, i64 %58
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %56, %"class.base::Value"* %57, %"class.base::Value"* %59) #11
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %60 = load %"class.base::Value"*, %"class.base::Value"** %26, align 8
  %61 = load %"class.base::Value"*, %"class.base::Value"** %43, align 8
  %62 = icmp eq %"class.base::Value"* %60, %61
  br i1 %62, label %109, label %63

63:                                               ; preds = %55
  %64 = bitcast %"class.std::__1::unique_ptr.44"* %6 to i8*
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %6, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.44"* %6 to i8**
  %67 = getelementptr inbounds %"class.base::internal::RepeatedCustomValueConverter", %"class.base::internal::RepeatedCustomValueConverter"* %0, i64 0, i32 1
  %68 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %2, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.44"* %6 to i64*
  %71 = bitcast %"class.std::__1::unique_ptr.44"** %68 to i64*
  br label %72

72:                                               ; preds = %63, %104
  %73 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %74 = call i8* @_Znwm(i64 24) #12
  %75 = bitcast i8* %74 to %"class.std::__1::basic_string"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #11
  store i8* %74, i8** %66, align 8
  %76 = load i1 (%"class.base::Value"*, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Value"*, %"class.std::__1::basic_string"*)** %67, align 8
  %77 = call zeroext i1 %76(%"class.base::Value"* %73, %"class.std::__1::basic_string"* nonnull %75) #11
  br i1 %77, label %78, label %88

78:                                               ; preds = %72
  %79 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %68, align 8
  %80 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %69, align 8
  %81 = icmp ult %"class.std::__1::unique_ptr.44"* %79, %80
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = load i64, i64* %70, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %65, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.44"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %79, i64 1
  %86 = ptrtoint %"class.std::__1::unique_ptr.44"* %85 to i64
  store i64 %86, i64* %71, align 8
  br label %88

87:                                               ; preds = %78
  call void @_ZNSt3__16vectorINS_10unique_ptrINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS7_EEEENS5_ISA_EEE21__push_back_slow_pathISA_EEvOT_(%"class.std::__1::vector.42"* %2, %"class.std::__1::unique_ptr.44"* nonnull dereferenceable(8) %6) #11
  br label %88

88:                                               ; preds = %87, %82, %72
  %89 = phi i32 [ 1, %72 ], [ 0, %82 ], [ 0, %87 ]
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %65, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %65, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %97, %92
  %101 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %88, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %103 = icmp eq i32 %89, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %102
  %105 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #11
  %106 = load %"class.base::Value"*, %"class.base::Value"** %26, align 8
  %107 = load %"class.base::Value"*, %"class.base::Value"** %43, align 8
  %108 = icmp eq %"class.base::Value"* %106, %107
  br i1 %108, label %109, label %72

109:                                              ; preds = %104, %102, %55
  %110 = phi i1 [ true, %55 ], [ true, %104 ], [ false, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  br label %111

111:                                              ; preds = %109, %3
  %112 = phi i1 [ false, %3 ], [ %110, %109 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS7_EEEENS5_ISA_EEE7reserveEm(%"class.std::__1::vector.42"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.44"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.42"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.44"*
  br i1 %10, label %12, label %140

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.44"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.44"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr.44"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr.44"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.44"*
  %29 = icmp eq %"class.std::__1::unique_ptr.44"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::basic_string"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr.44"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr.44"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.44"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.44"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !4

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr.44"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr.44"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.44"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %135

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr.44"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr.44"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.44"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.44"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.44"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.44"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.44"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.44"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.44"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.44"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.44"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.44"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.44"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.44"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.44"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.44"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.44"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.44"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.44"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr.44"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr.44"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr.44"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.44"* %114, %115
  br i1 %116, label %135, label %117

117:                                              ; preds = %110, %133
  %118 = phi %"class.std::__1::unique_ptr.44"* [ %119, %133 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %120, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %120, align 8
  %122 = icmp eq %"class.std::__1::basic_string"* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %128, %123
  %132 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  tail call void @_ZdlPv(i8* %132) #12
  br label %133

133:                                              ; preds = %131, %117
  %134 = icmp eq %"class.std::__1::unique_ptr.44"* %119, %115
  br i1 %134, label %135, label %117

135:                                              ; preds = %133, %57, %110
  %136 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %133 ]
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %138, %135, %2
  ret void
}

declare %"class.std::__1::vector.20"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %29, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %48, i8* %50) #11
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #11
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %20, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i8* %41, i8* %43) #11
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_14default_deleteIS7_EEEENS5_ISA_EEE21__push_back_slow_pathISA_EEvOT_(%"class.std::__1::vector.42"*, %"class.std::__1::unique_ptr.44"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.44"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.42"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.42"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.44"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.44"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.44"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.44"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.44"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.44"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.44"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.44"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.44"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.std::__1::basic_string"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.44"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.44"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.44"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.44"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.44"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.44"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.44"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.44"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.44"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.44"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.44"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.44"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.44"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.44"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.44"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.44"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.44"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.44"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.44"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.44"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.44"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.44"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.44"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.44"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.44"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.44"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.44"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.44"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.44"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.44"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.44"*
  %138 = icmp eq %"class.std::__1::unique_ptr.44"* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %"class.std::__1::unique_ptr.44"* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %142, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %142, align 8
  %144 = icmp eq %"class.std::__1::basic_string"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %150, %145
  %154 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  tail call void @_ZdlPv(i8* %154) #12
  br label %155

155:                                              ; preds = %153, %139
  %156 = icmp eq %"class.std::__1::unique_ptr.44"* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.35"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
