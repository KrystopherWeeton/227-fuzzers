; ModuleID = '../../third_party/icu/source/common/ucnv_err.cpp'
source_filename = "../../third_party/icu/source/common/ucnv_err.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UConverterFromUnicodeArgs = type { i16, i8, %struct.UConverter*, i16*, i16*, i8*, i8*, i32* }
%struct.UConverter = type opaque
%struct.UConverterToUnicodeArgs = type { i16, i8, %struct.UConverter*, i8*, i8*, i16*, i16*, i32* }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @UCNV_FROM_U_CALLBACK_STOP_69(i8* nocapture readnone, %struct.UConverterFromUnicodeArgs* nocapture readnone, i16* nocapture readnone, i32, i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %34

9:                                                ; preds = %7
  switch i32 %4, label %10 [
    i32 4448, label %33
    i32 4447, label %33
    i32 1564, label %33
    i32 847, label %33
    i32 173, label %33
    i32 8238, label %33
    i32 8237, label %33
    i32 8236, label %33
    i32 8235, label %33
    i32 8234, label %33
    i32 8207, label %33
    i32 8206, label %33
    i32 8205, label %33
    i32 8204, label %33
    i32 8203, label %33
    i32 6158, label %33
    i32 6157, label %33
    i32 6156, label %33
    i32 6155, label %33
    i32 6069, label %33
    i32 6068, label %33
  ]

10:                                               ; preds = %9
  %11 = and i32 %4, -16
  %12 = icmp eq i32 %11, 8288
  %13 = icmp eq i32 %4, 12644
  %14 = or i1 %13, %12
  br i1 %14, label %33, label %15

15:                                               ; preds = %10
  %16 = icmp eq i32 %11, 65024
  %17 = icmp eq i32 %4, 65279
  %18 = or i1 %17, %16
  %19 = icmp eq i32 %4, 65440
  %20 = or i1 %19, %18
  %21 = add i32 %4, -65520
  %22 = icmp ult i32 %21, 9
  %23 = or i1 %22, %20
  %24 = and i32 %4, -4
  %25 = icmp eq i32 %24, 113824
  %26 = or i1 %25, %23
  %27 = add i32 %4, -119155
  %28 = icmp ult i32 %27, 8
  %29 = or i1 %28, %26
  %30 = and i32 %4, -4096
  %31 = icmp eq i32 %30, 917504
  %32 = or i1 %31, %29
  br i1 %32, label %33, label %34

33:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %15, %10
  store i32 0, i32* %6, align 4
  br label %34

34:                                               ; preds = %15, %33, %7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @UCNV_TO_U_CALLBACK_STOP_69(i8* nocapture, %struct.UConverterToUnicodeArgs* nocapture, i8* nocapture, i32, i32, i32* nocapture) local_unnamed_addr #1 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @UCNV_FROM_U_CALLBACK_SKIP_69(i8* readonly, %struct.UConverterFromUnicodeArgs* nocapture readnone, i16* nocapture readnone, i32, i32, i32, i32* nocapture) local_unnamed_addr #2 {
  %8 = icmp slt i32 %5, 3
  br i1 %8, label %9, label %43

9:                                                ; preds = %7
  %10 = icmp eq i32 %5, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %9
  switch i32 %4, label %12 [
    i32 4448, label %35
    i32 4447, label %35
    i32 1564, label %35
    i32 847, label %35
    i32 173, label %35
    i32 8238, label %35
    i32 8237, label %35
    i32 8236, label %35
    i32 8235, label %35
    i32 8234, label %35
    i32 8207, label %35
    i32 8206, label %35
    i32 8205, label %35
    i32 8204, label %35
    i32 8203, label %35
    i32 6158, label %35
    i32 6157, label %35
    i32 6156, label %35
    i32 6155, label %35
    i32 6069, label %35
    i32 6068, label %35
  ]

12:                                               ; preds = %11
  %13 = and i32 %4, -16
  %14 = icmp eq i32 %13, 8288
  %15 = icmp eq i32 %4, 12644
  %16 = or i1 %15, %14
  br i1 %16, label %35, label %17

17:                                               ; preds = %12
  %18 = icmp eq i32 %13, 65024
  %19 = icmp eq i32 %4, 65279
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %4, 65440
  %22 = or i1 %21, %20
  %23 = add i32 %4, -65520
  %24 = icmp ult i32 %23, 9
  %25 = or i1 %24, %22
  %26 = and i32 %4, -4
  %27 = icmp eq i32 %26, 113824
  %28 = or i1 %27, %25
  %29 = add i32 %4, -119155
  %30 = icmp ult i32 %29, 8
  %31 = or i1 %30, %28
  %32 = and i32 %4, -4096
  %33 = icmp eq i32 %32, 917504
  %34 = or i1 %33, %31
  br i1 %34, label %35, label %36

35:                                               ; preds = %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %17, %12
  store i32 0, i32* %6, align 4
  br label %43

36:                                               ; preds = %17, %9
  %37 = icmp eq i8* %0, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %36
  %39 = load i8, i8* %0, align 1
  %40 = icmp eq i8 %39, 105
  %41 = and i1 %10, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %36
  store i32 0, i32* %6, align 4
  br label %43

43:                                               ; preds = %35, %42, %38, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69(i8* readonly, %struct.UConverterFromUnicodeArgs*, i16* nocapture readnone, i32, i32, i32, i32*) #3 {
  %8 = icmp slt i32 %5, 3
  br i1 %8, label %9, label %43

9:                                                ; preds = %7
  %10 = icmp eq i32 %5, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %9
  switch i32 %4, label %12 [
    i32 4448, label %35
    i32 4447, label %35
    i32 1564, label %35
    i32 847, label %35
    i32 173, label %35
    i32 8238, label %35
    i32 8237, label %35
    i32 8236, label %35
    i32 8235, label %35
    i32 8234, label %35
    i32 8207, label %35
    i32 8206, label %35
    i32 8205, label %35
    i32 8204, label %35
    i32 8203, label %35
    i32 6158, label %35
    i32 6157, label %35
    i32 6156, label %35
    i32 6155, label %35
    i32 6069, label %35
    i32 6068, label %35
  ]

12:                                               ; preds = %11
  %13 = and i32 %4, -16
  %14 = icmp eq i32 %13, 8288
  %15 = icmp eq i32 %4, 12644
  %16 = or i1 %15, %14
  br i1 %16, label %35, label %17

17:                                               ; preds = %12
  %18 = icmp eq i32 %13, 65024
  %19 = icmp eq i32 %4, 65279
  %20 = or i1 %19, %18
  %21 = icmp eq i32 %4, 65440
  %22 = or i1 %21, %20
  %23 = add i32 %4, -65520
  %24 = icmp ult i32 %23, 9
  %25 = or i1 %24, %22
  %26 = and i32 %4, -4
  %27 = icmp eq i32 %26, 113824
  %28 = or i1 %27, %25
  %29 = add i32 %4, -119155
  %30 = icmp ult i32 %29, 8
  %31 = or i1 %30, %28
  %32 = and i32 %4, -4096
  %33 = icmp eq i32 %32, 917504
  %34 = or i1 %33, %31
  br i1 %34, label %35, label %36

35:                                               ; preds = %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %11, %17, %12
  store i32 0, i32* %6, align 4
  br label %43

36:                                               ; preds = %17, %9
  %37 = icmp eq i8* %0, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %36
  %39 = load i8, i8* %0, align 1
  %40 = icmp eq i8 %39, 105
  %41 = and i1 %10, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %36
  store i32 0, i32* %6, align 4
  tail call void @ucnv_cbFromUWriteSub_69(%struct.UConverterFromUnicodeArgs* %1, i32 0, i32* %6) #6
  br label %43

43:                                               ; preds = %35, %42, %38, %7
  ret void
}

declare void @ucnv_cbFromUWriteSub_69(%struct.UConverterFromUnicodeArgs*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @UCNV_FROM_U_CALLBACK_ESCAPE_69(i8* readonly, %struct.UConverterFromUnicodeArgs*, i16* nocapture readonly, i32, i32, i32, i32*) local_unnamed_addr #3 {
  %8 = alloca [48 x i16], align 16
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  %11 = alloca void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, align 8
  %14 = alloca i8*, align 8
  %15 = bitcast [48 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 96, i1 false)
  %16 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  store i16* null, i16** %9, align 8
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #6
  store i32 0, i32* %10, align 4
  %18 = bitcast void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  store void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* null, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %11, align 8
  %19 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %20 = bitcast void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  store void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* null, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %13, align 8
  %21 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %22 = icmp sgt i32 %5, 2
  br i1 %22, label %210, label %23

23:                                               ; preds = %7
  %24 = icmp eq i32 %5, 0
  br i1 %24, label %25, label %50

25:                                               ; preds = %23
  switch i32 %4, label %26 [
    i32 4448, label %49
    i32 4447, label %49
    i32 1564, label %49
    i32 847, label %49
    i32 173, label %49
    i32 8238, label %49
    i32 8237, label %49
    i32 8236, label %49
    i32 8235, label %49
    i32 8234, label %49
    i32 8207, label %49
    i32 8206, label %49
    i32 8205, label %49
    i32 8204, label %49
    i32 8203, label %49
    i32 6158, label %49
    i32 6157, label %49
    i32 6156, label %49
    i32 6155, label %49
    i32 6069, label %49
    i32 6068, label %49
  ]

26:                                               ; preds = %25
  %27 = and i32 %4, -16
  %28 = icmp eq i32 %27, 8288
  %29 = icmp eq i32 %4, 12644
  %30 = or i1 %29, %28
  br i1 %30, label %49, label %31

31:                                               ; preds = %26
  %32 = icmp eq i32 %27, 65024
  %33 = icmp eq i32 %4, 65279
  %34 = or i1 %33, %32
  %35 = icmp eq i32 %4, 65440
  %36 = or i1 %35, %34
  %37 = add i32 %4, -65520
  %38 = icmp ult i32 %37, 9
  %39 = or i1 %38, %36
  %40 = and i32 %4, -4
  %41 = icmp eq i32 %40, 113824
  %42 = or i1 %41, %39
  %43 = add i32 %4, -119155
  %44 = icmp ult i32 %43, 8
  %45 = or i1 %44, %42
  %46 = and i32 %4, -4096
  %47 = icmp eq i32 %46, 917504
  %48 = or i1 %47, %45
  br i1 %48, label %49, label %50

49:                                               ; preds = %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %25, %31, %26
  store i32 0, i32* %6, align 4
  br label %210

50:                                               ; preds = %31, %23
  %51 = getelementptr inbounds %struct.UConverterFromUnicodeArgs, %struct.UConverterFromUnicodeArgs* %1, i64 0, i32 2
  %52 = load %struct.UConverter*, %struct.UConverter** %51, align 8
  call void @ucnv_setFromUCallBack_69(%struct.UConverter* %52, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* nonnull @UCNV_FROM_U_CALLBACK_SUBSTITUTE_69, i8* null, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** nonnull %11, i8** nonnull %12, i32* nonnull %10) #6
  %53 = load i32, i32* %10, align 4
  %54 = icmp slt i32 %53, 1
  br i1 %54, label %56, label %55

55:                                               ; preds = %50
  store i32 %53, i32* %6, align 4
  br label %210

56:                                               ; preds = %50
  %57 = icmp eq i8* %0, null
  br i1 %57, label %58, label %81

58:                                               ; preds = %56
  %59 = icmp sgt i32 %3, 0
  br i1 %59, label %60, label %199

60:                                               ; preds = %58
  %61 = zext i32 %3 to i64
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %74, %62 ]
  %64 = phi i32 [ 0, %60 ], [ %79, %62 ]
  %65 = add nsw i32 %64, 1
  %66 = sext i32 %64 to i64
  %67 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %66
  store i16 37, i16* %67, align 2
  %68 = add nsw i32 %64, 2
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %69
  store i16 85, i16* %70, align 2
  %71 = sext i32 %68 to i64
  %72 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %71
  %73 = sub i32 46, %64
  %74 = add nuw nsw i64 %63, 1
  %75 = getelementptr inbounds i16, i16* %2, i64 %63
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = call i32 @uprv_itou_69(i16* %72, i32 %73, i32 %77, i32 16, i32 4) #6
  %79 = add nsw i32 %78, %68
  %80 = icmp eq i64 %74, %61
  br i1 %80, label %199, label %62

81:                                               ; preds = %56
  %82 = load i8, i8* %0, align 1
  %83 = sext i8 %82 to i32
  switch i32 %83, label %88 [
    i32 74, label %84
    i32 67, label %111
    i32 68, label %125
    i32 88, label %140
    i32 85, label %156
    i32 83, label %172
  ]

84:                                               ; preds = %81
  %85 = icmp sgt i32 %3, 0
  br i1 %85, label %86, label %199

86:                                               ; preds = %84
  %87 = zext i32 %3 to i64
  br label %92

88:                                               ; preds = %81
  %89 = icmp sgt i32 %3, 0
  br i1 %89, label %90, label %199

90:                                               ; preds = %88
  %91 = zext i32 %3 to i64
  br label %180

92:                                               ; preds = %92, %86
  %93 = phi i64 [ 0, %86 ], [ %104, %92 ]
  %94 = phi i32 [ 0, %86 ], [ %109, %92 ]
  %95 = add nsw i32 %94, 1
  %96 = sext i32 %94 to i64
  %97 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %96
  store i16 92, i16* %97, align 2
  %98 = add nsw i32 %94, 2
  %99 = sext i32 %95 to i64
  %100 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %99
  store i16 117, i16* %100, align 2
  %101 = sext i32 %98 to i64
  %102 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %101
  %103 = sub i32 46, %94
  %104 = add nuw nsw i64 %93, 1
  %105 = getelementptr inbounds i16, i16* %2, i64 %93
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = call i32 @uprv_itou_69(i16* %102, i32 %103, i32 %107, i32 16, i32 4) #6
  %109 = add nsw i32 %108, %98
  %110 = icmp eq i64 %104, %87
  br i1 %110, label %199, label %92

111:                                              ; preds = %81
  %112 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 0
  store i16 92, i16* %112, align 16
  %113 = icmp eq i32 %3, 2
  %114 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 1
  br i1 %113, label %115, label %119

115:                                              ; preds = %111
  store i16 85, i16* %114, align 2
  %116 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 2
  %117 = call i32 @uprv_itou_69(i16* %116, i32 46, i32 %4, i32 16, i32 8) #6
  %118 = add nsw i32 %117, 2
  br label %199

119:                                              ; preds = %111
  store i16 117, i16* %114, align 2
  %120 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 2
  %121 = load i16, i16* %2, align 2
  %122 = zext i16 %121 to i32
  %123 = call i32 @uprv_itou_69(i16* %120, i32 46, i32 %122, i32 16, i32 4) #6
  %124 = add nsw i32 %123, 2
  br label %199

125:                                              ; preds = %81
  %126 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 0
  store i16 38, i16* %126, align 16
  %127 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 1
  store i16 35, i16* %127, align 2
  %128 = icmp eq i32 %3, 2
  %129 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 2
  br i1 %128, label %133, label %130

130:                                              ; preds = %125
  %131 = load i16, i16* %2, align 2
  %132 = zext i16 %131 to i32
  br label %133

133:                                              ; preds = %125, %130
  %134 = phi i32 [ %132, %130 ], [ %4, %125 ]
  %135 = call i32 @uprv_itou_69(i16* %129, i32 46, i32 %134, i32 10, i32 0) #6
  %136 = add nsw i32 %135, 2
  %137 = add nsw i32 %135, 3
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %138
  store i16 59, i16* %139, align 2
  br label %199

140:                                              ; preds = %81
  %141 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 0
  store i16 38, i16* %141, align 16
  %142 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 1
  store i16 35, i16* %142, align 2
  %143 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 2
  store i16 120, i16* %143, align 4
  %144 = icmp eq i32 %3, 2
  %145 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 3
  br i1 %144, label %149, label %146

146:                                              ; preds = %140
  %147 = load i16, i16* %2, align 2
  %148 = zext i16 %147 to i32
  br label %149

149:                                              ; preds = %140, %146
  %150 = phi i32 [ %148, %146 ], [ %4, %140 ]
  %151 = call i32 @uprv_itou_69(i16* %145, i32 45, i32 %150, i32 16, i32 0) #6
  %152 = add nsw i32 %151, 3
  %153 = add nsw i32 %151, 4
  %154 = sext i32 %152 to i64
  %155 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %154
  store i16 59, i16* %155, align 2
  br label %199

156:                                              ; preds = %81
  %157 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 0
  store i16 123, i16* %157, align 16
  %158 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 1
  store i16 85, i16* %158, align 2
  %159 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 2
  store i16 43, i16* %159, align 4
  %160 = icmp eq i32 %3, 2
  %161 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 3
  br i1 %160, label %165, label %162

162:                                              ; preds = %156
  %163 = load i16, i16* %2, align 2
  %164 = zext i16 %163 to i32
  br label %165

165:                                              ; preds = %156, %162
  %166 = phi i32 [ %164, %162 ], [ %4, %156 ]
  %167 = call i32 @uprv_itou_69(i16* %161, i32 45, i32 %166, i32 16, i32 4) #6
  %168 = add nsw i32 %167, 3
  %169 = add nsw i32 %167, 4
  %170 = sext i32 %168 to i64
  %171 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %170
  store i16 125, i16* %171, align 2
  br label %199

172:                                              ; preds = %81
  %173 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 0
  store i16 92, i16* %173, align 16
  %174 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 1
  %175 = call i32 @uprv_itou_69(i16* %174, i32 47, i32 %4, i32 16, i32 0) #6
  %176 = add nsw i32 %175, 1
  %177 = add nsw i32 %175, 2
  %178 = sext i32 %176 to i64
  %179 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %178
  store i16 32, i16* %179, align 2
  br label %199

180:                                              ; preds = %180, %90
  %181 = phi i64 [ 0, %90 ], [ %192, %180 ]
  %182 = phi i32 [ 0, %90 ], [ %197, %180 ]
  %183 = add nsw i32 %182, 1
  %184 = sext i32 %182 to i64
  %185 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %184
  store i16 37, i16* %185, align 2
  %186 = add nsw i32 %182, 2
  %187 = sext i32 %183 to i64
  %188 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %187
  store i16 85, i16* %188, align 2
  %189 = sext i32 %186 to i64
  %190 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %189
  %191 = sub i32 46, %182
  %192 = add nuw nsw i64 %181, 1
  %193 = getelementptr inbounds i16, i16* %2, i64 %181
  %194 = load i16, i16* %193, align 2
  %195 = zext i16 %194 to i32
  %196 = call i32 @uprv_itou_69(i16* %190, i32 %191, i32 %195, i32 16, i32 4) #6
  %197 = add nsw i32 %196, %186
  %198 = icmp eq i64 %192, %91
  br i1 %198, label %199, label %180

199:                                              ; preds = %92, %180, %62, %84, %88, %58, %133, %149, %165, %172, %119, %115
  %200 = phi i32 [ %177, %172 ], [ %169, %165 ], [ %153, %149 ], [ %137, %133 ], [ %118, %115 ], [ %124, %119 ], [ 0, %58 ], [ 0, %88 ], [ 0, %84 ], [ %79, %62 ], [ %197, %180 ], [ %109, %92 ]
  %201 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 0
  store i16* %201, i16** %9, align 8
  store i32 0, i32* %6, align 4
  %202 = sext i32 %200 to i64
  %203 = getelementptr inbounds [48 x i16], [48 x i16]* %8, i64 0, i64 %202
  call void @ucnv_cbFromUWriteUChars_69(%struct.UConverterFromUnicodeArgs* %1, i16** nonnull %9, i16* %203, i32 0, i32* %6) #6
  %204 = load %struct.UConverter*, %struct.UConverter** %51, align 8
  %205 = load void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** %11, align 8
  %206 = load i8*, i8** %12, align 8
  call void @ucnv_setFromUCallBack_69(%struct.UConverter* %204, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)* %205, i8* %206, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)** nonnull %13, i8** nonnull %14, i32* nonnull %10) #6
  %207 = load i32, i32* %10, align 4
  %208 = icmp slt i32 %207, 1
  br i1 %208, label %210, label %209

209:                                              ; preds = %199
  store i32 %207, i32* %6, align 4
  br label %210

210:                                              ; preds = %199, %7, %209, %55, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @ucnv_setFromUCallBack_69(%struct.UConverter*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)*, i8*, void (i8*, %struct.UConverterFromUnicodeArgs*, i16*, i32, i32, i32, i32*)**, i8**, i32*) local_unnamed_addr #4

declare i32 @uprv_itou_69(i16*, i32, i32, i32, i32) local_unnamed_addr #4

declare void @ucnv_cbFromUWriteUChars_69(%struct.UConverterFromUnicodeArgs*, i16**, i16*, i32, i32*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @UCNV_TO_U_CALLBACK_SKIP_69(i8* readonly, %struct.UConverterToUnicodeArgs* nocapture readnone, i8* nocapture readnone, i32, i32, i32* nocapture) local_unnamed_addr #2 {
  %7 = icmp slt i32 %4, 3
  br i1 %7, label %8, label %16

8:                                                ; preds = %6
  %9 = icmp eq i8* %0, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %0, align 1
  %12 = icmp eq i8 %11, 105
  %13 = icmp eq i32 %4, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %10, %8
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %10, %15, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @UCNV_TO_U_CALLBACK_SUBSTITUTE_69(i8* readonly, %struct.UConverterToUnicodeArgs*, i8* nocapture readnone, i32, i32, i32*) local_unnamed_addr #3 {
  %7 = icmp slt i32 %4, 3
  br i1 %7, label %8, label %16

8:                                                ; preds = %6
  %9 = icmp eq i8* %0, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = load i8, i8* %0, align 1
  %12 = icmp eq i8 %11, 105
  %13 = icmp eq i32 %4, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %10, %8
  store i32 0, i32* %5, align 4
  tail call void @ucnv_cbToUWriteSub_69(%struct.UConverterToUnicodeArgs* %1, i32 0, i32* %5) #6
  br label %16

16:                                               ; preds = %10, %15, %6
  ret void
}

declare void @ucnv_cbToUWriteSub_69(%struct.UConverterToUnicodeArgs*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @UCNV_TO_U_CALLBACK_ESCAPE_69(i8* readonly, %struct.UConverterToUnicodeArgs*, i8* nocapture readonly, i32, i32, i32*) local_unnamed_addr #3 {
  %7 = alloca [48 x i16], align 16
  %8 = bitcast [48 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 96, i1 false)
  %9 = icmp sgt i32 %4, 2
  br i1 %9, label %142, label %10

10:                                               ; preds = %6
  %11 = icmp eq i8* %0, null
  br i1 %11, label %12, label %35

12:                                               ; preds = %10
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %139

14:                                               ; preds = %12
  %15 = zext i32 %3 to i64
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %28, %16 ]
  %18 = phi i32 [ 0, %14 ], [ %33, %16 ]
  %19 = add nsw i32 %18, 1
  %20 = sext i32 %18 to i64
  %21 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %20
  store i16 37, i16* %21, align 2
  %22 = add nsw i32 %18, 2
  %23 = sext i32 %19 to i64
  %24 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %23
  store i16 88, i16* %24, align 2
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %25
  %27 = sub i32 46, %18
  %28 = add nuw nsw i64 %17, 1
  %29 = getelementptr inbounds i8, i8* %2, i64 %17
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = call i32 @uprv_itou_69(i16* %26, i32 %27, i32 %31, i32 16, i32 2) #6
  %33 = add nsw i32 %32, %22
  %34 = icmp eq i64 %28, %15
  br i1 %34, label %139, label %16

35:                                               ; preds = %10
  %36 = load i8, i8* %0, align 1
  %37 = sext i8 %36 to i32
  switch i32 %37, label %50 [
    i32 68, label %46
    i32 88, label %42
    i32 67, label %38
  ]

38:                                               ; preds = %35
  %39 = icmp sgt i32 %3, 0
  br i1 %39, label %40, label %139

40:                                               ; preds = %38
  %41 = zext i32 %3 to i64
  br label %101

42:                                               ; preds = %35
  %43 = icmp sgt i32 %3, 0
  br i1 %43, label %44, label %139

44:                                               ; preds = %42
  %45 = zext i32 %3 to i64
  br label %76

46:                                               ; preds = %35
  %47 = icmp sgt i32 %3, 0
  br i1 %47, label %48, label %139

48:                                               ; preds = %46
  %49 = zext i32 %3 to i64
  br label %54

50:                                               ; preds = %35
  %51 = icmp sgt i32 %3, 0
  br i1 %51, label %52, label %139

52:                                               ; preds = %50
  %53 = zext i32 %3 to i64
  br label %120

54:                                               ; preds = %54, %48
  %55 = phi i64 [ 0, %48 ], [ %66, %54 ]
  %56 = phi i32 [ 0, %48 ], [ %72, %54 ]
  %57 = add nsw i32 %56, 1
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %58
  store i16 38, i16* %59, align 2
  %60 = add nsw i32 %56, 2
  %61 = sext i32 %57 to i64
  %62 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %61
  store i16 35, i16* %62, align 2
  %63 = sext i32 %60 to i64
  %64 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %63
  %65 = sub i32 46, %56
  %66 = add nuw nsw i64 %55, 1
  %67 = getelementptr inbounds i8, i8* %2, i64 %55
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = call i32 @uprv_itou_69(i16* %64, i32 %65, i32 %69, i32 10, i32 0) #6
  %71 = add nsw i32 %70, %60
  %72 = add nsw i32 %71, 1
  %73 = sext i32 %71 to i64
  %74 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %73
  store i16 59, i16* %74, align 2
  %75 = icmp eq i64 %66, %49
  br i1 %75, label %139, label %54

76:                                               ; preds = %76, %44
  %77 = phi i64 [ 0, %44 ], [ %91, %76 ]
  %78 = phi i32 [ 0, %44 ], [ %97, %76 ]
  %79 = add nsw i32 %78, 1
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %80
  store i16 38, i16* %81, align 2
  %82 = add nsw i32 %78, 2
  %83 = sext i32 %79 to i64
  %84 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %83
  store i16 35, i16* %84, align 2
  %85 = add nsw i32 %78, 3
  %86 = sext i32 %82 to i64
  %87 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %86
  store i16 120, i16* %87, align 2
  %88 = sext i32 %85 to i64
  %89 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %88
  %90 = sub i32 45, %78
  %91 = add nuw nsw i64 %77, 1
  %92 = getelementptr inbounds i8, i8* %2, i64 %77
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = call i32 @uprv_itou_69(i16* %89, i32 %90, i32 %94, i32 16, i32 0) #6
  %96 = add nsw i32 %95, %85
  %97 = add nsw i32 %96, 1
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %98
  store i16 59, i16* %99, align 2
  %100 = icmp eq i64 %91, %45
  br i1 %100, label %139, label %76

101:                                              ; preds = %101, %40
  %102 = phi i64 [ 0, %40 ], [ %113, %101 ]
  %103 = phi i32 [ 0, %40 ], [ %118, %101 ]
  %104 = add nsw i32 %103, 1
  %105 = sext i32 %103 to i64
  %106 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %105
  store i16 92, i16* %106, align 2
  %107 = add nsw i32 %103, 2
  %108 = sext i32 %104 to i64
  %109 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %108
  store i16 120, i16* %109, align 2
  %110 = sext i32 %107 to i64
  %111 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %110
  %112 = sub i32 46, %103
  %113 = add nuw nsw i64 %102, 1
  %114 = getelementptr inbounds i8, i8* %2, i64 %102
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = call i32 @uprv_itou_69(i16* %111, i32 %112, i32 %116, i32 16, i32 2) #6
  %118 = add nsw i32 %117, %107
  %119 = icmp eq i64 %113, %41
  br i1 %119, label %139, label %101

120:                                              ; preds = %120, %52
  %121 = phi i64 [ 0, %52 ], [ %135, %120 ]
  %122 = phi i64 [ 0, %52 ], [ %130, %120 ]
  %123 = or i64 %121, 1
  %124 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %121
  store i16 37, i16* %124, align 8
  %125 = or i64 %121, 2
  %126 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %123
  store i16 88, i16* %126, align 2
  %127 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 %125
  %128 = trunc i64 %121 to i32
  %129 = sub nsw i32 46, %128
  %130 = add nuw nsw i64 %122, 1
  %131 = getelementptr inbounds i8, i8* %2, i64 %122
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = call i32 @uprv_itou_69(i16* %127, i32 %129, i32 %133, i32 16, i32 2) #6
  %135 = add nuw nsw i64 %121, 4
  %136 = icmp eq i64 %130, %53
  br i1 %136, label %137, label %120

137:                                              ; preds = %120
  %138 = trunc i64 %135 to i32
  br label %139

139:                                              ; preds = %101, %76, %54, %16, %137, %38, %42, %46, %50, %12
  %140 = phi i32 [ 0, %12 ], [ 0, %50 ], [ 0, %46 ], [ 0, %42 ], [ 0, %38 ], [ %138, %137 ], [ %33, %16 ], [ %72, %54 ], [ %97, %76 ], [ %118, %101 ]
  store i32 0, i32* %5, align 4
  %141 = getelementptr inbounds [48 x i16], [48 x i16]* %7, i64 0, i64 0
  call void @ucnv_cbToUWriteUChars_69(%struct.UConverterToUnicodeArgs* %1, i16* nonnull %141, i32 %140, i32 0, i32* %5) #6
  br label %142

142:                                              ; preds = %6, %139
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #6
  ret void
}

declare void @ucnv_cbToUWriteUChars_69(%struct.UConverterToUnicodeArgs*, i16*, i32, i32, i32*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
