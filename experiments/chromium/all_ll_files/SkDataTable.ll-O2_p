; ModuleID = '../../third_party/skia/src/core/SkDataTable.cpp'
source_filename = "../../third_party/skia/src/core/SkDataTable.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkDataTable = type { %class.SkRefCnt.base, i32, i64, %union.anon, void (i8*)*, i8* }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"struct.SkDataTable::Dir"* }
%"struct.SkDataTable::Dir" = type { i8*, i64 }
%class.sk_sp = type { %class.SkDataTable* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTV11SkDataTable = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkDataTable*)* @_ZN11SkDataTableD2Ev to i8*), i8* bitcast (void (%class.SkDataTable*)* @_ZN11SkDataTableD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8
@_ZZN11SkDataTable9MakeEmptyEvE9singleton = internal unnamed_addr global %class.SkDataTable* null, align 8
@_ZZN11SkDataTable9MakeEmptyEvE4once = internal global { { { i8 } } } zeroinitializer, align 1

@_ZN11SkDataTableC1Ev = hidden unnamed_addr alias void (%class.SkDataTable*), void (%class.SkDataTable*)* @_ZN11SkDataTableC2Ev
@_ZN11SkDataTableC1EPKvmiPFvPvES2_ = hidden unnamed_addr alias void (%class.SkDataTable*, i8*, i64, i32, void (i8*)*, i8*), void (%class.SkDataTable*, i8*, i64, i32, void (i8*)*, i8*)* @_ZN11SkDataTableC2EPKvmiPFvPvES2_
@_ZN11SkDataTableC1EPKNS_3DirEiPFvPvES3_ = hidden unnamed_addr alias void (%class.SkDataTable*, %"struct.SkDataTable::Dir"*, i32, void (i8*)*, i8*), void (%class.SkDataTable*, %"struct.SkDataTable::Dir"*, i32, void (i8*)*, i8*)* @_ZN11SkDataTableC2EPKNS_3DirEiPFvPvES3_
@_ZN11SkDataTableD1Ev = hidden unnamed_addr alias void (%class.SkDataTable*), void (%class.SkDataTable*)* @_ZN11SkDataTableD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11SkDataTableC2Ev(%class.SkDataTable* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 1
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11SkDataTableC2EPKvmiPFvPvES2_(%class.SkDataTable* nocapture, i8*, i64, i32, void (i8*)*, i8*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 1
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 2
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 3
  %12 = bitcast %union.anon* %11 to i8**
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 4
  store void (i8*)* %4, void (i8*)** %13, align 8
  %14 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 5
  store i8* %5, i8** %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11SkDataTableC2EPKNS_3DirEiPFvPvES3_(%class.SkDataTable* nocapture, %"struct.SkDataTable::Dir"*, i32, void (i8*)*, i8*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 3, i32 0
  store %"struct.SkDataTable::Dir"* %1, %"struct.SkDataTable::Dir"** %10, align 8
  %11 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 4
  store void (i8*)* %3, void (i8*)** %11, align 8
  %12 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 5
  store i8* %4, i8** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkDataTableD2Ev(%class.SkDataTable* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 4
  %4 = load void (i8*)*, void (i8*)** %3, align 8
  %5 = icmp eq void (i8*)* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 5
  %8 = load i8*, i8** %7, align 8
  tail call void %4(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkDataTableD0Ev(%class.SkDataTable*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 4
  %4 = load void (i8*)*, void (i8*)** %3, align 8
  %5 = icmp eq void (i8*)* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 5
  %8 = load i8*, i8** %7, align 8
  tail call void %4(i8* %8) #8
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %class.SkDataTable* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11SkDataTable6atSizeEi(%class.SkDataTable* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 3, i32 0
  %8 = load %"struct.SkDataTable::Dir"*, %"struct.SkDataTable::Dir"** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %"struct.SkDataTable::Dir", %"struct.SkDataTable::Dir"* %8, i64 %9, i32 1
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i64 [ %11, %6 ], [ %4, %2 ]
  ret i64 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZNK11SkDataTable2atEiPm(%class.SkDataTable* nocapture readonly, i32, i64*) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = icmp ne i64* %2, null
  br i1 %6, label %19, label %8

8:                                                ; preds = %3
  br i1 %7, label %9, label %11

9:                                                ; preds = %8
  store i64 %5, i64* %2, align 8
  %10 = load i64, i64* %4, align 8
  br label %11

11:                                               ; preds = %9, %8
  %12 = phi i64 [ %10, %9 ], [ %5, %8 ]
  %13 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 3
  %14 = bitcast %union.anon* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = sext i32 %1 to i64
  %17 = mul i64 %12, %16
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  br label %34

19:                                               ; preds = %3
  br i1 %7, label %22, label %20

20:                                               ; preds = %19
  %21 = sext i32 %1 to i64
  br label %28

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 3, i32 0
  %24 = load %"struct.SkDataTable::Dir"*, %"struct.SkDataTable::Dir"** %23, align 8
  %25 = sext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.SkDataTable::Dir", %"struct.SkDataTable::Dir"* %24, i64 %25, i32 1
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %2, align 8
  br label %28

28:                                               ; preds = %20, %22
  %29 = phi i64 [ %21, %20 ], [ %25, %22 ]
  %30 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %0, i64 0, i32 3, i32 0
  %31 = load %"struct.SkDataTable::Dir"*, %"struct.SkDataTable::Dir"** %30, align 8
  %32 = getelementptr inbounds %"struct.SkDataTable::Dir", %"struct.SkDataTable::Dir"* %31, i64 %29, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %28, %11
  %35 = phi i8* [ %18, %11 ], [ %33, %28 ]
  ret i8* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkDataTable9MakeEmptyEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %2, label %3 [
    i8 2, label %17
    i8 0, label %4
  ]

3:                                                ; preds = %4, %1
  br label %14

4:                                                ; preds = %1
  %5 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %6 = extractvalue { i8, i1 } %5, 1
  br i1 %6, label %7, label %3

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 48) #9
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 36, i1 false) #8
  store i8* %8, i8** bitcast (%class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton to i8**), align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  %13 = bitcast i8* %8 to %class.SkDataTable*
  br label %20

14:                                               ; preds = %3, %14
  %15 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %16 = icmp eq i8 %15, 2
  br i1 %16, label %17, label %14

17:                                               ; preds = %14, %1
  %18 = load %class.SkDataTable*, %class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton, align 8
  %19 = icmp eq %class.SkDataTable* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %7, %17
  %21 = phi %class.SkDataTable* [ %13, %7 ], [ %18, %17 ]
  %22 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !2
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi %class.SkDataTable* [ null, %17 ], [ %21, %20 ]
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkDataTable* %25, %class.SkDataTable** %26, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkDataTable14MakeCopyArraysEPKPKvPKmi(%class.sk_sp* noalias nocapture sret, i8** nocapture readonly, i64* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %5 = icmp slt i32 %3, 1
  br i1 %5, label %95, label %6

6:                                                ; preds = %4
  %7 = zext i32 %3 to i64
  %8 = icmp ult i32 %3, 4
  br i1 %8, label %9, label %12

9:                                                ; preds = %87, %6
  %10 = phi i64 [ 0, %6 ], [ %13, %87 ]
  %11 = phi i64 [ 0, %6 ], [ %93, %87 ]
  br label %133

12:                                               ; preds = %6
  %13 = and i64 %7, 4294967292
  %14 = add nsw i64 %13, -4
  %15 = lshr exact i64 %14, 2
  %16 = add nuw nsw i64 %15, 1
  %17 = and i64 %16, 3
  %18 = icmp ult i64 %14, 12
  br i1 %18, label %64, label %19

19:                                               ; preds = %12
  %20 = sub nsw i64 %16, %17
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %61, %21 ]
  %23 = phi <2 x i64> [ zeroinitializer, %19 ], [ %59, %21 ]
  %24 = phi <2 x i64> [ zeroinitializer, %19 ], [ %60, %21 ]
  %25 = phi i64 [ %20, %19 ], [ %62, %21 ]
  %26 = getelementptr inbounds i64, i64* %2, i64 %22
  %27 = bitcast i64* %26 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = getelementptr inbounds i64, i64* %26, i64 2
  %30 = bitcast i64* %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  %32 = add <2 x i64> %28, %23
  %33 = add <2 x i64> %31, %24
  %34 = or i64 %22, 4
  %35 = getelementptr inbounds i64, i64* %2, i64 %34
  %36 = bitcast i64* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = getelementptr inbounds i64, i64* %35, i64 2
  %39 = bitcast i64* %38 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  %41 = add <2 x i64> %37, %32
  %42 = add <2 x i64> %40, %33
  %43 = or i64 %22, 8
  %44 = getelementptr inbounds i64, i64* %2, i64 %43
  %45 = bitcast i64* %44 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8
  %47 = getelementptr inbounds i64, i64* %44, i64 2
  %48 = bitcast i64* %47 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = add <2 x i64> %46, %41
  %51 = add <2 x i64> %49, %42
  %52 = or i64 %22, 12
  %53 = getelementptr inbounds i64, i64* %2, i64 %52
  %54 = bitcast i64* %53 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = getelementptr inbounds i64, i64* %53, i64 2
  %57 = bitcast i64* %56 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = add <2 x i64> %55, %50
  %60 = add <2 x i64> %58, %51
  %61 = add i64 %22, 16
  %62 = add i64 %25, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %21, !llvm.loop !5

64:                                               ; preds = %21, %12
  %65 = phi <2 x i64> [ undef, %12 ], [ %59, %21 ]
  %66 = phi <2 x i64> [ undef, %12 ], [ %60, %21 ]
  %67 = phi i64 [ 0, %12 ], [ %61, %21 ]
  %68 = phi <2 x i64> [ zeroinitializer, %12 ], [ %59, %21 ]
  %69 = phi <2 x i64> [ zeroinitializer, %12 ], [ %60, %21 ]
  %70 = icmp eq i64 %17, 0
  br i1 %70, label %87, label %71

71:                                               ; preds = %64, %71
  %72 = phi i64 [ %84, %71 ], [ %67, %64 ]
  %73 = phi <2 x i64> [ %82, %71 ], [ %68, %64 ]
  %74 = phi <2 x i64> [ %83, %71 ], [ %69, %64 ]
  %75 = phi i64 [ %85, %71 ], [ %17, %64 ]
  %76 = getelementptr inbounds i64, i64* %2, i64 %72
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  %79 = getelementptr inbounds i64, i64* %76, i64 2
  %80 = bitcast i64* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8
  %82 = add <2 x i64> %78, %73
  %83 = add <2 x i64> %81, %74
  %84 = add i64 %72, 4
  %85 = add i64 %75, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %71, !llvm.loop !7

87:                                               ; preds = %71, %64
  %88 = phi <2 x i64> [ %65, %64 ], [ %82, %71 ]
  %89 = phi <2 x i64> [ %66, %64 ], [ %83, %71 ]
  %90 = add <2 x i64> %89, %88
  %91 = shufflevector <2 x i64> %90, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %92 = add <2 x i64> %90, %91
  %93 = extractelement <2 x i64> %92, i32 0
  %94 = icmp eq i64 %13, %7
  br i1 %94, label %121, label %9

95:                                               ; preds = %4
  %96 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !9
  switch i8 %96, label %97 [
    i8 2, label %111
    i8 0, label %98
  ]

97:                                               ; preds = %98, %95
  br label %108

98:                                               ; preds = %95
  %99 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !9
  %100 = extractvalue { i8, i1 } %99, 1
  br i1 %100, label %101, label %97

101:                                              ; preds = %98
  %102 = tail call i8* @_Znwm(i64 48) #9, !noalias !9
  %103 = getelementptr inbounds i8, i8* %102, i64 8
  %104 = bitcast i8* %103 to i32*
  store i32 1, i32* %104, align 4, !noalias !9
  %105 = bitcast i8* %102 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8, !noalias !9
  %106 = getelementptr inbounds i8, i8* %102, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %106, i8 0, i64 36, i1 false) #8, !noalias !9
  store i8* %102, i8** bitcast (%class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton to i8**), align 8, !noalias !9
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !9
  %107 = bitcast i8* %102 to %class.SkDataTable*
  br label %114

108:                                              ; preds = %97, %108
  %109 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !9
  %110 = icmp eq i8 %109, 2
  br i1 %110, label %111, label %108

111:                                              ; preds = %108, %95
  %112 = load %class.SkDataTable*, %class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton, align 8, !noalias !9
  %113 = icmp eq %class.SkDataTable* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %111, %101
  %115 = phi %class.SkDataTable* [ %107, %101 ], [ %112, %111 ]
  %116 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %115, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 1 monotonic, !noalias !12
  br label %118

118:                                              ; preds = %111, %114
  %119 = phi %class.SkDataTable* [ null, %111 ], [ %115, %114 ]
  %120 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkDataTable* %119, %class.SkDataTable** %120, align 8, !alias.scope !12
  br label %171

121:                                              ; preds = %133, %87
  %122 = phi i64 [ %93, %87 ], [ %138, %133 ]
  %123 = sext i32 %3 to i64
  %124 = shl nsw i64 %123, 4
  %125 = add i64 %122, %124
  %126 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %125, i32 2) #8
  %127 = bitcast i8* %126 to %"struct.SkDataTable::Dir"*
  %128 = icmp sgt i32 %3, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"struct.SkDataTable::Dir", %"struct.SkDataTable::Dir"* %127, i64 %123
  %131 = bitcast %"struct.SkDataTable::Dir"* %130 to i8*
  %132 = zext i32 %3 to i64
  br label %157

133:                                              ; preds = %9, %133
  %134 = phi i64 [ %139, %133 ], [ %10, %9 ]
  %135 = phi i64 [ %138, %133 ], [ %11, %9 ]
  %136 = getelementptr inbounds i64, i64* %2, i64 %134
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, %135
  %139 = add nuw nsw i64 %134, 1
  %140 = icmp eq i64 %139, %7
  br i1 %140, label %121, label %133, !llvm.loop !15

141:                                              ; preds = %157, %121
  %142 = tail call i8* @_Znwm(i64 48) #9
  %143 = getelementptr inbounds i8, i8* %142, i64 8
  %144 = bitcast i8* %143 to i32*
  store i32 1, i32* %144, align 4
  %145 = bitcast i8* %142 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds i8, i8* %142, i64 12
  %147 = bitcast i8* %146 to i32*
  store i32 %3, i32* %147, align 4
  %148 = getelementptr inbounds i8, i8* %142, i64 16
  %149 = bitcast i8* %148 to i64*
  store i64 0, i64* %149, align 8
  %150 = getelementptr inbounds i8, i8* %142, i64 24
  %151 = bitcast i8* %150 to i8**
  store i8* %126, i8** %151, align 8
  %152 = getelementptr inbounds i8, i8* %142, i64 32
  %153 = bitcast i8* %152 to void (i8*)**
  store void (i8*)* @_ZL15malloc_freeprocPv, void (i8*)** %153, align 8
  %154 = getelementptr inbounds i8, i8* %142, i64 40
  %155 = bitcast i8* %154 to i8**
  store i8* %126, i8** %155, align 8
  %156 = bitcast %class.sk_sp* %0 to i8**
  store i8* %142, i8** %156, align 8
  br label %171

157:                                              ; preds = %157, %129
  %158 = phi i64 [ 0, %129 ], [ %169, %157 ]
  %159 = phi i8* [ %131, %129 ], [ %168, %157 ]
  %160 = getelementptr inbounds %"struct.SkDataTable::Dir", %"struct.SkDataTable::Dir"* %127, i64 %158, i32 0
  store i8* %159, i8** %160, align 8
  %161 = getelementptr inbounds i64, i64* %2, i64 %158
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.SkDataTable::Dir", %"struct.SkDataTable::Dir"* %127, i64 %158, i32 1
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds i8*, i8** %1, i64 %158
  %165 = load i8*, i8** %164, align 8
  %166 = load i64, i64* %161, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* align 1 %165, i64 %166, i1 false)
  %167 = load i64, i64* %161, align 8
  %168 = getelementptr inbounds i8, i8* %159, i64 %167
  %169 = add nuw nsw i64 %158, 1
  %170 = icmp eq i64 %169, %132
  br i1 %170, label %141, label %157

171:                                              ; preds = %141, %118
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL15malloc_freeprocPv(i8*) #1 {
  tail call void @_Z7sk_freePv(i8* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkDataTable13MakeCopyArrayEPKvmi(%class.sk_sp* noalias nocapture sret, i8* nocapture readonly, i64, i32) local_unnamed_addr #1 align 2 {
  %5 = icmp slt i32 %3, 1
  br i1 %5, label %6, label %32

6:                                                ; preds = %4
  %7 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !17
  switch i8 %7, label %8 [
    i8 2, label %22
    i8 0, label %9
  ]

8:                                                ; preds = %9, %6
  br label %19

9:                                                ; preds = %6
  %10 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !17
  %11 = extractvalue { i8, i1 } %10, 1
  br i1 %11, label %12, label %8

12:                                               ; preds = %9
  %13 = tail call i8* @_Znwm(i64 48) #9, !noalias !17
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4, !noalias !17
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !17
  %17 = getelementptr inbounds i8, i8* %13, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 36, i1 false) #8, !noalias !17
  store i8* %13, i8** bitcast (%class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton to i8**), align 8, !noalias !17
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !17
  %18 = bitcast i8* %13 to %class.SkDataTable*
  br label %25

19:                                               ; preds = %8, %19
  %20 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !17
  %21 = icmp eq i8 %20, 2
  br i1 %21, label %22, label %19

22:                                               ; preds = %19, %6
  %23 = load %class.SkDataTable*, %class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton, align 8, !noalias !17
  %24 = icmp eq %class.SkDataTable* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %22, %12
  %26 = phi %class.SkDataTable* [ %18, %12 ], [ %23, %22 ]
  %27 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic, !noalias !20
  br label %29

29:                                               ; preds = %22, %25
  %30 = phi %class.SkDataTable* [ null, %22 ], [ %26, %25 ]
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkDataTable* %30, %class.SkDataTable** %31, align 8, !alias.scope !20
  br label %51

32:                                               ; preds = %4
  %33 = sext i32 %3 to i64
  %34 = mul i64 %33, %2
  %35 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %34, i32 2) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %1, i64 %34, i1 false)
  %36 = tail call i8* @_Znwm(i64 48) #9
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 1, i32* %38, align 4
  %39 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 %3, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %36, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 %2, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 24
  %45 = bitcast i8* %44 to i8**
  store i8* %35, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %36, i64 32
  %47 = bitcast i8* %46 to void (i8*)**
  store void (i8*)* @_ZL15malloc_freeprocPv, void (i8*)** %47, align 8
  %48 = getelementptr inbounds i8, i8* %36, i64 40
  %49 = bitcast i8* %48 to i8**
  store i8* %35, i8** %49, align 8
  %50 = bitcast %class.sk_sp* %0 to i8**
  store i8* %36, i8** %50, align 8
  br label %51

51:                                               ; preds = %32, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkDataTable13MakeArrayProcEPKvmiPFvPvES2_(%class.sk_sp* noalias nocapture sret, i8*, i64, i32, void (i8*)*, i8*) local_unnamed_addr #1 align 2 {
  %7 = icmp slt i32 %3, 1
  br i1 %7, label %8, label %34

8:                                                ; preds = %6
  %9 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !23
  switch i8 %9, label %10 [
    i8 2, label %24
    i8 0, label %11
  ]

10:                                               ; preds = %11, %8
  br label %21

11:                                               ; preds = %8
  %12 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic, !noalias !23
  %13 = extractvalue { i8, i1 } %12, 1
  br i1 %13, label %14, label %10

14:                                               ; preds = %11
  %15 = tail call i8* @_Znwm(i64 48) #9, !noalias !23
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4, !noalias !23
  %18 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !noalias !23
  %19 = getelementptr inbounds i8, i8* %15, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 36, i1 false) #8, !noalias !23
  store i8* %15, i8** bitcast (%class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton to i8**), align 8, !noalias !23
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1, !noalias !23
  %20 = bitcast i8* %15 to %class.SkDataTable*
  br label %27

21:                                               ; preds = %10, %21
  %22 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN11SkDataTable9MakeEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1, !noalias !23
  %23 = icmp eq i8 %22, 2
  br i1 %23, label %24, label %21

24:                                               ; preds = %21, %8
  %25 = load %class.SkDataTable*, %class.SkDataTable** @_ZZN11SkDataTable9MakeEmptyEvE9singleton, align 8, !noalias !23
  %26 = icmp eq %class.SkDataTable* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24, %14
  %28 = phi %class.SkDataTable* [ %20, %14 ], [ %25, %24 ]
  %29 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic, !noalias !26
  br label %31

31:                                               ; preds = %24, %27
  %32 = phi %class.SkDataTable* [ null, %24 ], [ %28, %27 ]
  %33 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkDataTable* %32, %class.SkDataTable** %33, align 8, !alias.scope !26
  br label %50

34:                                               ; preds = %6
  %35 = tail call i8* @_Znwm(i64 48) #9
  %36 = getelementptr inbounds i8, i8* %35, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37, align 4
  %38 = bitcast i8* %35 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11SkDataTable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %35, i64 12
  %40 = bitcast i8* %39 to i32*
  store i32 %3, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %35, i64 16
  %42 = bitcast i8* %41 to i64*
  store i64 %2, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %35, i64 24
  %44 = bitcast i8* %43 to i8**
  store i8* %1, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %35, i64 32
  %46 = bitcast i8* %45 to void (i8*)**
  store void (i8*)* %4, void (i8*)** %46, align 8
  %47 = getelementptr inbounds i8, i8* %35, i64 40
  %48 = bitcast i8* %47 to i8**
  store i8* %5, i8** %48, align 8
  %49 = bitcast %class.sk_sp* %0 to i8**
  store i8* %35, i8** %49, align 8
  br label %50

50:                                               ; preds = %34, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #7

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN11SkDataTable9MakeEmptyEv: argument 0"}
!11 = distinct !{!11, !"_ZN11SkDataTable9MakeEmptyEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_: argument 0"}
!14 = distinct !{!14, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_"}
!15 = distinct !{!15, !16, !6}
!16 = !{!"llvm.loop.unroll.runtime.disable"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN11SkDataTable9MakeEmptyEv: argument 0"}
!19 = distinct !{!19, !"_ZN11SkDataTable9MakeEmptyEv"}
!20 = !{!21, !18}
!21 = distinct !{!21, !22, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_: argument 0"}
!22 = distinct !{!22, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN11SkDataTable9MakeEmptyEv: argument 0"}
!25 = distinct !{!25, !"_ZN11SkDataTable9MakeEmptyEv"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_: argument 0"}
!28 = distinct !{!28, !"_Z9sk_ref_spI11SkDataTableE5sk_spIT_EPS2_"}
