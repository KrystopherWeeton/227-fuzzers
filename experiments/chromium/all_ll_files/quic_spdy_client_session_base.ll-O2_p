; ModuleID = '../../net/third_party/quiche/src/quic/core/http/quic_spdy_client_session_base.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/http/quic_spdy_client_session_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicSpdyClientSessionBase" = type <{ %"class.quic::QuicSpdySession", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.quic::QuicClientPushPromiseIndex"*, %"class.absl::flat_hash_map.642", i32, [4 x i8] }>
%"class.quic::QuicSpdySession" = type { %"class.quic::QuicSession.base", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.489", %"class.quic::QuicHeadersStream"*, %"class.quic::QuicSendControlStream"*, %"class.quic::QuicReceiveControlStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackReceiveStream"*, %"class.quic::QpackSendStream"*, %"class.quic::QpackSendStream"*, %"struct.quic::SettingsFrame", i64, i64, i64, i64, i32, i32, i64, i8, [7 x i8], %"class.spdy::SpdyFramer", %"class.http2::Http2DecoderAdapter", %"class.std::__1::unique_ptr.602", %"class.absl::optional.129", %"class.quic::Http3DebugVisitor"*, %"class.absl::flat_hash_map.608", i32, %"class.absl::optional.129", %"class.absl::optional.129", i64, i8, i8, %"class.absl::flat_hash_map.617", i8, %"class.absl::flat_hash_set", %"class.std::__1::list.626" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.296", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.359", %"class.absl::flat_hash_map.368", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.155", %"class.std::__1::vector", %"class.absl::optional.415", i8, i8, i8, i8 }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.52", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.26", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.186", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.208", %"class.quiche::QuicheCircularDeque.214", %"class.quiche::QuicheCircularDeque.217", %"class.std::__1::vector.220", %"class.absl::optional.227", %"class.quic::QuicConnectionId", %"class.absl::optional.227", %"class.std::__1::list", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector", [4 x %"class.std::__1::unique_ptr"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.18"], i8, i8, %"struct.std::__1::array", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.26", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.40" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.34", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.34"*, i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::vector.55"* }
%"class.std::__1::vector.55" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.59", %"class.absl::optional.59", %"class.absl::optional.59" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.68", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple.75", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple.75" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.76" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.76" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.81" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.81" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.82", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.110" }
%"struct.quic::QuicFrame" = type { %union.anon.84 }
%union.anon.84 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.82", %"class.std::__1::vector.82", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.27", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.134", %"class.std::__1::vector.141", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.148", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.115", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.115" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.82", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.118", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.124", %"class.absl::optional.129" }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { i32 }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.136" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.143" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.148" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.151"*, i64 }
%"struct.std::__1::pair.151" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.24, i32 }
%union.anon.24 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.25 }
%union.anon.25 = type { [4 x i32] }
%"struct.std::__1::array.26" = type { [16 x i8] }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::vector.162", %"class.std::__1::vector.162", %"class.std::__1::vector.162", %"class.quic::QuicIntervalSet.169", i64 }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.164" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.26" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.169" = type { %"class.absl::btree_set.170" }
%"class.absl::btree_set.170" = type { %"class.absl::container_internal::btree_set_container.171" }
%"class.absl::container_internal::btree_set_container.171" = type { %"class.absl::container_internal::btree_container.172" }
%"class.absl::container_internal::btree_container.172" = type { %"class.absl::container_internal::btree.173" }
%"class.absl::container_internal::btree.173" = type { %"class.absl::container_internal::CompressedTuple.174", %"class.absl::container_internal::btree_node.181"*, i64 }
%"class.absl::container_internal::CompressedTuple.174" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.175" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.175" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.180" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.180" = type { %"class.absl::container_internal::btree_node.181"* }
%"class.absl::container_internal::btree_node.181" = type { i8 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.189", %"class.std::__1::vector.197", %"class.std::__1::unique_ptr.155", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.std::__1::pair.199"*, %"struct.std::__1::pair.199"*, %"class.std::__1::__compressed_pair.200" }
%"struct.std::__1::pair.199" = type opaque
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::pair.199"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::array.101"* }
%"struct.std::__1::array.101" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.214" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.101"*, i64 }
%"class.quiche::QuicheCircularDeque.217" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.101", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.7 }
%union.anon.7 = type { %struct.anon.9 }
%struct.anon.9 = type { i8, i8* }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%union.anon.231 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.232" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.242", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.std::__1::array.101"*, %"struct.std::__1::array.101"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.26", i8, i8, i64, i64, %"class.std::__1::unique_ptr.27", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.33 }
%union.anon.33 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.258", i64 }
%"class.std::__1::deque.258" = type { %"class.std::__1::__deque_base.259" }
%"class.std::__1::__deque_base.259" = type { %"struct.std::__1::__split_buffer.260", i64, %"class.std::__1::__compressed_pair.266" }
%"struct.std::__1::__split_buffer.260" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.261" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.270", %"class.std::__1::__compressed_pair.278", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.286", [4 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.289" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.291" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.std::__1::unique_ptr.298"*, %"class.std::__1::unique_ptr.298"*, %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.308", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.301", i64, %"class.quic::QuicIntervalSet.169" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.296", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.359", %"class.absl::flat_hash_map.368", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.155", %"class.std::__1::vector", %"class.absl::optional.415", i8, i8, i8, i8, [4 x i8] }>
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.169", %"class.quic::QuicIntervalSet.169", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.315", %"class.absl::optional.129" }
%"class.quiche::QuicheCircularDeque.315" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.std::__1::unique_ptr.298"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.333", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.338", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.326", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::optional.227", %"class.absl::flat_hash_map.344", %"class.absl::flat_hash_map.344" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.326", %"class.std::__1::vector.326" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.338" = type { %"class.absl::optional_internal::optional_data.339" }
%"class.absl::optional_internal::optional_data.339" = type { %"class.absl::optional_internal::optional_data_base.340" }
%"class.absl::optional_internal::optional_data_base.340" = type { %"class.absl::optional_internal::optional_data_dtor_base.341" }
%"class.absl::optional_internal::optional_data_dtor_base.341" = type { i8, %union.anon.342 }
%union.anon.342 = type { %"struct.std::__1::pair.343" }
%"struct.std::__1::pair.343" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.26" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.26", %"struct.std::__1::array.26", i8 }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { i32*, i32*, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type opaque
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.359" = type { %"class.absl::container_internal::raw_hash_map.360" }
%"class.absl::container_internal::raw_hash_map.360" = type { %"class.absl::container_internal::raw_hash_set.361" }
%"class.absl::container_internal::raw_hash_set.361" = type { i8*, %"union.absl::container_internal::map_slot_type.362"*, i64, i64, %"class.absl::container_internal::CompressedTuple.363" }
%"union.absl::container_internal::map_slot_type.362" = type opaque
%"class.absl::container_internal::CompressedTuple.363" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.364" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.364" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.368" = type { %"class.absl::container_internal::raw_hash_map.369" }
%"class.absl::container_internal::raw_hash_map.369" = type { %"class.absl::container_internal::raw_hash_set.370" }
%"class.absl::container_internal::raw_hash_set.370" = type { i8*, %"union.absl::container_internal::map_slot_type.371"*, i64, i64, %"class.absl::container_internal::CompressedTuple.372" }
%"union.absl::container_internal::map_slot_type.371" = type opaque
%"class.absl::container_internal::CompressedTuple.372" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.373" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.381", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.397" }
%"class.quiche::QuicheCircularDeque.381" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.397" = type { %"class.absl::container_internal::raw_hash_map.398" }
%"class.absl::container_internal::raw_hash_map.398" = type { %"class.absl::container_internal::raw_hash_set.399" }
%"class.absl::container_internal::raw_hash_set.399" = type { i8*, %"union.absl::container_internal::map_slot_type.400"*, i64, i64, %"class.absl::container_internal::CompressedTuple.401" }
%"union.absl::container_internal::map_slot_type.400" = type opaque
%"class.absl::container_internal::CompressedTuple.401" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.402" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.402" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.406", %"class.std::__1::unique_ptr.409" }
%"class.quiche::QuicheCircularDeque.406" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.390" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.382" }
%"class.absl::container_internal::raw_hash_map.382" = type { %"class.absl::container_internal::raw_hash_set.383" }
%"class.absl::container_internal::raw_hash_set.383" = type { i8*, %"struct.std::__1::pair.384"**, i64, i64, %"class.absl::container_internal::CompressedTuple.385" }
%"struct.std::__1::pair.384" = type opaque
%"class.absl::container_internal::CompressedTuple.385" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.386" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.386" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.390" = type { %"class.std::__1::__list_imp.391" }
%"class.std::__1::__list_imp.391" = type { %"struct.std::__1::__list_node_base.392", %"class.std::__1::__compressed_pair.393" }
%"struct.std::__1::__list_node_base.392" = type { %"struct.std::__1::__list_node_base.392"*, %"struct.std::__1::__list_node_base.392"* }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.158", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.158" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.std::__1::basic_string" }
%"class.quic::QpackEncoder::DecoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.quic::QpackEncoder"* }
%"class.quic::QpackEncoder" = type <{ %"class.quic::QpackDecoderStreamReceiver::Delegate", %"class.quic::QpackEncoder::DecoderStreamErrorDelegate"*, %"class.quic::QpackDecoderStreamReceiver", %"class.quic::QpackEncoderStreamSender", %"class.quic::QpackEncoderHeaderTable", i64, %"class.quic::QpackBlockingManager", i32, [4 x i8] }>
%"class.quic::QpackDecoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackDecoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector.423"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.423" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.424" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.424" = type { %"class.std::__1::__vector_base.425" }
%"class.std::__1::__vector_base.425" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.426" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackEncoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.quic::QpackEncoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.absl::flat_hash_map.443"*, %"class.absl::flat_hash_map.458"*, %"class.absl::flat_hash_map.443", %"class.absl::flat_hash_map.458" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.std::__1::deque.431", i64, i64, i64, i64, i64, i8 }>
%"class.std::__1::deque.431" = type { %"class.std::__1::__deque_base.432" }
%"class.std::__1::__deque_base.432" = type { %"struct.std::__1::__split_buffer.433", i64, %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__split_buffer.433" = type { %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.spdy::HpackEntry"**, %"class.std::__1::__compressed_pair.434" }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.spdy::HpackEntry"** }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.absl::flat_hash_map.443" = type { %"class.absl::container_internal::raw_hash_map.444" }
%"class.absl::container_internal::raw_hash_map.444" = type { %"class.absl::container_internal::raw_hash_set.445" }
%"class.absl::container_internal::raw_hash_set.445" = type { i8*, %"union.absl::container_internal::map_slot_type.446"*, i64, i64, %"class.absl::container_internal::CompressedTuple.447" }
%"union.absl::container_internal::map_slot_type.446" = type opaque
%"class.absl::container_internal::CompressedTuple.447" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.448" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.448" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.458" = type { %"class.absl::container_internal::raw_hash_map.459" }
%"class.absl::container_internal::raw_hash_map.459" = type { %"class.absl::container_internal::raw_hash_set.460" }
%"class.absl::container_internal::raw_hash_set.460" = type { i8*, %"union.absl::container_internal::map_slot_type.461"*, i64, i64, %"class.absl::container_internal::CompressedTuple.462" }
%"union.absl::container_internal::map_slot_type.461" = type opaque
%"class.absl::container_internal::CompressedTuple.462" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.463" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.463" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.quic::QpackBlockingManager" = type { %"class.absl::flat_hash_map.469", %"class.std::__1::map", i64 }
%"class.absl::flat_hash_map.469" = type { %"class.absl::container_internal::raw_hash_map.470" }
%"class.absl::container_internal::raw_hash_map.470" = type { %"class.absl::container_internal::raw_hash_set.471" }
%"class.absl::container_internal::raw_hash_set.471" = type { i8*, %"union.absl::container_internal::map_slot_type.472"*, i64, i64, %"class.absl::container_internal::CompressedTuple.473" }
%"union.absl::container_internal::map_slot_type.472" = type opaque
%"class.absl::container_internal::CompressedTuple.473" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.474" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.474" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.478", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.489" = type { %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %"class.quic::QpackDecoder"* }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base.494", %"class.std::__1::vector.495"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base.494" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque.493", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque.493" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.std::__1::vector.495" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.504" }
%"class.std::__1::__tree.504" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.quic::QuicHeadersStream" = type { %"class.quic::QuicStream.base", %"class.quic::QuicSpdySession"*, %"class.quiche::QuicheCircularDeque.515" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.308", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"class.quiche::QuicheCircularDeque.515" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicHeadersStream::CompressedHeaderInfo, 3, std::__1::allocator<quic::QuicHeadersStream::CompressedHeaderInfo> >::AllocatorAndData" = type { %"struct.quic::QuicHeadersStream::CompressedHeaderInfo"*, i64 }
%"struct.quic::QuicHeadersStream::CompressedHeaderInfo" = type { i64, i64, i64, %"class.quic::QuicReferenceCountedPointer" }
%"class.quic::QuicReferenceCountedPointer" = type { %"class.quic::QuicReferenceCountedPointerImpl" }
%"class.quic::QuicReferenceCountedPointerImpl" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.quic::QuicAckListenerInterface"* }
%"class.quic::QuicAckListenerInterface" = type { %"class.quic::QuicReferenceCounted.base", [4 x i8] }
%"class.quic::QuicReferenceCounted.base" = type { %"class.quic::QuicReferenceCountedImpl.base" }
%"class.quic::QuicReferenceCountedImpl.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.519" }>
%"class.base::RefCountedThreadSafe.519" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicSendControlStream" = type { %"class.quic::QuicStream.base", i8, %"struct.quic::SettingsFrame", %"class.quic::QuicSpdySession"* }
%"class.quic::QuicReceiveControlStream" = type { %"class.quic::QuicStream.base", %"class.quic::HttpDecoder::Visitor", i8, [7 x i8], %"class.quic::HttpDecoder", %"class.quic::QuicSpdySession"* }
%"class.quic::HttpDecoder::Visitor" = type { i32 (...)** }
%"class.quic::HttpDecoder" = type <{ %"class.quic::HttpDecoder::Visitor"*, i8, [3 x i8], i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.std::__1::array.534", %"struct.std::__1::array.534", %"struct.std::__1::array.534", i8, i8, [6 x i8] }>
%"struct.std::__1::array.534" = type { [8 x i8] }
%"class.quic::QpackReceiveStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackStreamReceiver"* }
%"class.quic::QpackSendStream" = type <{ %"class.quic::QuicStream.base", [7 x i8], %"class.quic::QpackStreamSenderDelegate", i64, i8, [7 x i8] }>
%"struct.quic::SettingsFrame" = type { %"class.absl::flat_hash_map.520" }
%"class.absl::flat_hash_map.520" = type { %"class.absl::container_internal::raw_hash_map.521" }
%"class.absl::container_internal::raw_hash_map.521" = type { %"class.absl::container_internal::raw_hash_set.522" }
%"class.absl::container_internal::raw_hash_set.522" = type { i8*, %"union.absl::container_internal::map_slot_type.523"*, i64, i64, %"class.absl::container_internal::CompressedTuple.524" }
%"union.absl::container_internal::map_slot_type.523" = type { %"struct.std::__1::pair.771" }
%"struct.std::__1::pair.771" = type { i64, i64 }
%"class.absl::container_internal::CompressedTuple.524" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.525" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.525" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.spdy::SpdyFramer" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.535", %"class.spdy::SpdyFramerDebugVisitorInterface"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.spdy::HpackEncoder"* }
%"class.spdy::HpackEncoder" = type <{ %"class.spdy::HpackHeaderTable", %"class.spdy::HpackOutputStream", i64, %"class.std::__1::function.538", %"class.std::__1::function.544", i8, i8, [6 x i8] }>
%"class.spdy::HpackHeaderTable" = type { %"class.std::__1::vector.495"*, %"class.std::__1::deque.431", %"class.absl::flat_hash_map.443"*, %"class.absl::flat_hash_map.458"*, %"class.absl::flat_hash_map.443", %"class.absl::flat_hash_map.458", i64, i64, i64, i64 }
%"class.spdy::HpackOutputStream" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::function.538" = type { %"class.std::__1::__function::__policy_func.542" }
%"class.std::__1::__function::__policy_func.542" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.543", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.543" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.std::__1::function.544" = type { %"class.std::__1::__function::__policy_func.548" }
%"class.std::__1::__function::__policy_func.548" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.549", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.549" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.absl::string_view"*, %"class.absl::string_view"*)* }
%"class.spdy::SpdyFramerDebugVisitorInterface" = type { i32 (...)** }
%"class.http2::Http2DecoderAdapter" = type { %"class.http2::Http2FrameDecoderListener", %"struct.http2::Http2FrameHeader", %"struct.http2::Http2FrameHeader", %"class.absl::optional.129", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.http2::Http2FrameDecoderNoOpListener", %"class.spdy::SpdyFramerVisitorInterface"*, %"class.spdy::SpdyFramerDebugVisitorInterface"*, %"class.spdy::ExtensionVisitorInterface"*, %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.595", i8, i32, i32, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.http2::Http2FrameDecoderListener" = type { i32 (...)** }
%"struct.http2::Http2FrameHeader" = type { i32, i32, i8, i32 }
%"class.http2::Http2FrameDecoderNoOpListener" = type { %"class.http2::Http2FrameDecoderListener" }
%"class.spdy::SpdyFramerVisitorInterface" = type { i32 (...)** }
%"class.spdy::ExtensionVisitorInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.spdy::HpackDecoderAdapter"* }
%"class.spdy::HpackDecoderAdapter" = type { %"class.spdy::HpackDecoderAdapter::ListenerAdapter", %"class.http2::HpackDecoder", i64, i64, i8, i32, %"class.std::__1::basic_string" }
%"class.spdy::HpackDecoderAdapter::ListenerAdapter" = type { %"class.http2::HpackDecoderListener", %"class.spdy::Http2HeaderBlock", %"class.spdy::SpdyHeadersHandlerInterface"*, i64, i64 }
%"class.http2::HpackDecoderListener" = type { i32 (...)** }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap.556", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap.556" = type { %"class.absl::node_hash_map.557", %"class.std::__1::list.568" }
%"class.absl::node_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"struct.std::__1::pair.560"**, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"struct.std::__1::pair.560" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base.570"* }
%"struct.std::__1::__list_node_base.570" = type { %"struct.std::__1::__list_node_base.570"*, %"struct.std::__1::__list_node_base.570"* }
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.568" = type { %"class.std::__1::__list_imp.569" }
%"class.std::__1::__list_imp.569" = type { %"struct.std::__1::__list_node_base.570", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector.575", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.583" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr.577", i64, i64 }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { i8* }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.http2::HpackDecoder" = type { i32 (...)**, %"class.http2::HpackDecoderState", %"class.http2::HpackWholeEntryBuffer", %"class.http2::HpackBlockDecoder", i32, %"class.std::__1::basic_string" }
%"class.http2::HpackDecoderState" = type { %"class.http2::HpackWholeEntryListener", %"class.http2::HpackDecoderTables", %"class.http2::HpackDecoderListener"*, i32, i32, i8, i8, i8, i32, %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryListener" = type { i32 (...)** }
%"class.http2::HpackDecoderTables" = type { %"class.http2::HpackDecoderStaticTable", %"class.http2::HpackDecoderDynamicTable" }
%"class.http2::HpackDecoderStaticTable" = type { %"class.std::__1::vector.588"* }
%"class.std::__1::vector.588" = type opaque
%"class.http2::HpackDecoderDynamicTable" = type { %"class.quiche::QuicheCircularDeque.589", i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.589" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<http2::HpackStringPair, 3, std::__1::allocator<http2::HpackStringPair> >::AllocatorAndData" = type { %"struct.http2::HpackStringPair"*, i64 }
%"struct.http2::HpackStringPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.http2::HpackWholeEntryBuffer" = type <{ %"class.http2::HpackEntryDecoderListener", %"class.http2::HpackWholeEntryListener"*, %"class.http2::HpackDecoderStringBuffer", %"class.http2::HpackDecoderStringBuffer", i64, i64, i32, i8, [3 x i8] }>
%"class.http2::HpackEntryDecoderListener" = type { i32 (...)** }
%"class.http2::HpackDecoderStringBuffer" = type <{ %"class.std::__1::basic_string", %"class.absl::string_view", %"class.http2::HpackHuffmanDecoder", i64, i8, i8, i8, [5 x i8] }>
%"class.http2::HpackBlockDecoder" = type <{ %"class.http2::HpackEntryDecoder", %"class.http2::HpackEntryDecoderListener"*, i8, [7 x i8] }>
%"class.http2::HpackEntryDecoder" = type { %"class.http2::HpackEntryTypeDecoder", %"class.http2::HpackStringDecoder", i32, i32 }
%"class.http2::HpackEntryTypeDecoder" = type { %"class.http2::HpackVarintDecoder", i32, [4 x i8] }
%"class.http2::HpackStringDecoder" = type <{ %"class.http2::HpackVarintDecoder", i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.http2::Http2FrameDecoder"* }
%"class.http2::Http2FrameDecoder" = type { %"class.http2::FrameDecoderState", %union.anon.598, i32, i64, %"class.http2::Http2FrameDecoderNoOpListener" }
%"class.http2::FrameDecoderState" = type { %"class.http2::Http2FrameDecoderListener"*, %"struct.http2::Http2FrameHeader", i32, i32, %"class.http2::Http2StructureDecoder" }
%"class.http2::Http2StructureDecoder" = type <{ i32, [9 x i8], [3 x i8] }>
%union.anon.598 = type { %"class.http2::HeadersPayloadDecoder" }
%"class.http2::HeadersPayloadDecoder" = type { i32, %"struct.http2::Http2PriorityFields" }
%"struct.http2::Http2PriorityFields" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.quic::QuicSpdySession::SpdyFramerVisitor"* }
%"class.quic::QuicSpdySession::SpdyFramerVisitor" = type opaque
%"class.quic::Http3DebugVisitor" = type { i32 (...)** }
%"class.absl::flat_hash_map.608" = type { %"class.absl::container_internal::raw_hash_map.609" }
%"class.absl::container_internal::raw_hash_map.609" = type { %"class.absl::container_internal::raw_hash_set.610" }
%"class.absl::container_internal::raw_hash_set.610" = type { i8*, %"union.absl::container_internal::map_slot_type.611"*, i64, i64, %"class.absl::container_internal::CompressedTuple.612" }
%"union.absl::container_internal::map_slot_type.611" = type opaque
%"class.absl::container_internal::CompressedTuple.612" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.613" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { i64 }
%"class.absl::flat_hash_map.617" = type { %"class.absl::container_internal::raw_hash_map.618" }
%"class.absl::container_internal::raw_hash_map.618" = type { %"class.absl::container_internal::raw_hash_set.619" }
%"class.absl::container_internal::raw_hash_set.619" = type { i8*, %"union.absl::container_internal::map_slot_type.620"*, i64, i64, %"class.absl::container_internal::CompressedTuple.621" }
%"union.absl::container_internal::map_slot_type.620" = type opaque
%"class.absl::container_internal::CompressedTuple.621" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.622" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.378" }
%"class.absl::container_internal::CompressedTuple.378" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list.626" = type { %"class.std::__1::__list_imp.627" }
%"class.std::__1::__list_imp.627" = type { %"struct.std::__1::__list_node_base.628", %"class.std::__1::__compressed_pair.629" }
%"struct.std::__1::__list_node_base.628" = type { %"struct.std::__1::__list_node_base.628"*, %"struct.std::__1::__list_node_base.628"* }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.quic::QuicClientPushPromiseIndex" = type { i32 (...)**, %"class.absl::flat_hash_map.633" }
%"class.absl::flat_hash_map.633" = type { %"class.absl::container_internal::raw_hash_map.634" }
%"class.absl::container_internal::raw_hash_map.634" = type { %"class.absl::container_internal::raw_hash_set.635" }
%"class.absl::container_internal::raw_hash_set.635" = type { i8*, %"union.absl::container_internal::map_slot_type.636"*, i64, i64, %"class.absl::container_internal::CompressedTuple.637" }
%"union.absl::container_internal::map_slot_type.636" = type { %"struct.std::__1::pair.715" }
%"struct.std::__1::pair.715" = type { %"class.std::__1::basic_string", %"class.quic::QuicClientPromisedInfo"* }
%"class.quic::QuicClientPromisedInfo" = type { %"class.quic::QuicClientPushPromiseIndex::TryHandle", %"class.quic::QuicSpdyClientSessionBase"*, i32, %"class.std::__1::basic_string", %"class.spdy::Http2HeaderBlock", %"class.std::__1::unique_ptr.656", %"class.spdy::Http2HeaderBlock", %"class.quic::QuicClientPushPromiseIndex::Delegate"*, %"class.std::__1::unique_ptr.155" }
%"class.quic::QuicClientPushPromiseIndex::TryHandle" = type { i32 (...)** }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.spdy::Http2HeaderBlock"* }
%"class.quic::QuicClientPushPromiseIndex::Delegate" = type { i32 (...)** }
%"class.absl::container_internal::CompressedTuple.637" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.638" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.638" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.642" = type { %"class.absl::container_internal::raw_hash_map.643" }
%"class.absl::container_internal::raw_hash_map.643" = type { %"class.absl::container_internal::raw_hash_set.644" }
%"class.absl::container_internal::raw_hash_set.644" = type { i8*, %"union.absl::container_internal::map_slot_type.645"*, i64, i64, %"class.absl::container_internal::CompressedTuple.646" }
%"union.absl::container_internal::map_slot_type.645" = type { %"struct.std::__1::pair.652" }
%"struct.std::__1::pair.652" = type { i32, %"class.std::__1::unique_ptr.653" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.quic::QuicClientPromisedInfo"* }
%"class.absl::container_internal::CompressedTuple.646" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.647" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.647" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.quic::QuicHeaderList" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.quiche::QuicheCircularDeque.665", i64, i64, i64, i64 }
%"class.quiche::QuicheCircularDeque.665" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" = type { %"struct.std::__1::pair.668"*, i64 }
%"struct.std::__1::pair.668" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.quic::QuicSpdyStream" = type { %"class.quic::QuicStream.base", %"class.quic::QpackDecodedHeadersAccumulator::Visitor", %"class.quic::QuicSpdySession"*, i8, %"class.quic::QuicSpdyStream::Visitor"*, i8, i8, i8, %"class.quic::QuicHeaderList", i64, i8, i8, %"class.spdy::Http2HeaderBlock", %"class.std::__1::unique_ptr.669", %"class.std::__1::unique_ptr.687", %"class.quic::HttpDecoder", %"class.quic::QuicSpdyStreamBodyManager", i64, i8, %"class.quic::QuicReferenceCountedPointer", %"class.quic::QuicIntervalSet.169", i32, %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.702" }
%"class.quic::QpackDecodedHeadersAccumulator::Visitor" = type { i32 (...)** }
%"class.quic::QuicSpdyStream::Visitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.quic::QpackDecodedHeadersAccumulator"* }
%"class.quic::QpackDecodedHeadersAccumulator" = type <{ %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface", %"class.std::__1::unique_ptr.672", %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64, i64, %"class.quic::QuicHeaderList", i64, i64, i8, i8, i8, [5 x i8] }>
%"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.quic::QpackProgressiveDecoder"* }
%"class.quic::QpackProgressiveDecoder" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackDecoderHeaderTable::Observer", i32, [4 x i8], %"class.std::__1::unique_ptr.675", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer"*, %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor"*, %"class.quic::QpackDecoderHeaderTable"*, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"*, i64, i64, i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.quic::QpackDecoderHeaderTable::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.quic::QpackInstructionDecoder"* }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.quic::QuicSpdyStream::HttpDecoderVisitor"* }
%"class.quic::QuicSpdyStream::HttpDecoderVisitor" = type opaque
%"class.quic::QuicSpdyStreamBodyManager" = type { %"class.quiche::QuicheCircularDeque.693", i64 }
%"class.quiche::QuicheCircularDeque.693" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicSpdyStreamBodyManager::Fragment, 3, std::__1::allocator<quic::QuicSpdyStreamBodyManager::Fragment> >::AllocatorAndData" = type { %"struct.quic::QuicSpdyStreamBodyManager::Fragment"*, i64 }
%"struct.quic::QuicSpdyStreamBodyManager::Fragment" = type { %"class.absl::string_view", i64 }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.quic::WebTransportHttp3"* }
%"class.quic::WebTransportHttp3" = type opaque
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"struct.quic::QuicSpdyStream::WebTransportDataStream"* }
%"struct.quic::QuicSpdyStream::WebTransportDataStream" = type { i64, %"class.quic::WebTransportStreamAdapter" }
%"class.quic::WebTransportStreamAdapter" = type <{ %"class.quic::WebTransportStream", %"class.quic::QuicSession"*, %"class.quic::QuicStream"*, %"class.quic::QuicStreamSequencer"*, %"class.std::__1::unique_ptr.705", i8, [7 x i8] }>
%"class.quic::WebTransportStream" = type { i32 (...)** }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.quic::WebTransportStreamVisitor"* }
%"class.quic::WebTransportStreamVisitor" = type { i32 (...)** }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.720" = type { %"class.std::__1::__vector_base.721" }
%"class.std::__1::__vector_base.721" = type { i8*, i8*, %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.quic::QuicCryptoStream" = type { %"class.quic::QuicStream.base", [4 x %"class.quic::QuicIntervalSet.169"], %"struct.std::__1::array.730" }
%"struct.std::__1::array.730" = type { [4 x %"struct.quic::QuicCryptoStream::CryptoSubstream"] }
%"struct.quic::QuicCryptoStream::CryptoSubstream" = type { %"class.quic::QuicStreamSequencer", %"class.quic::QuicStreamSendBuffer" }
%"struct.quic::QuicCryptoFrame" = type { i8, i16, i8*, i64 }
%"struct.quic::QuicWindowUpdateFrame" = type { i32, i32, i64 }
%"struct.quic::QuicBlockedFrame" = type { i32, i32, i64 }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"struct.quic::QuicGoAwayFrame" = type { i32, i32, i32, %"class.std::__1::basic_string" }
%"struct.quic::QuicMaxStreamsFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.quic::QuicStreamsBlockedFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.quic::QuicAckFrequencyFrame" = type { i32, i8, i64, i64, %"class.quic::QuicTime::Delta" }
%"struct.quic::QuicNewConnectionIdFrame" = type { i32, %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.26", i64 }
%"struct.quic::QuicStopSendingFrame" = type { i32, i32, i32, i64 }
%"class.quic::QuicDataWriter" = type { %"class.quiche::QuicheDataWriter.base", [4 x i8] }
%"class.quiche::QuicheDataWriter.base" = type <{ i8*, i64, i64, i32 }>
%"class.quic::QuicReceivedPacket" = type <{ %"class.quic::QuicEncryptedPacket.base", [7 x i8], %"class.quic::QuicTime", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.quic::QuicEncryptedPacket.base" = type { %"class.quic::QuicData.base" }
%"struct.quic::TransportParameters" = type { i8, i32, %"class.std::__1::vector.326", %"class.absl::optional.227", %"class.quic::TransportParameters::IntegerParameter", %"class.std::__1::vector.720", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", i8, %"class.std::__1::unique_ptr.731", %"class.quic::TransportParameters::IntegerParameter", %"class.absl::optional.227", %"class.absl::optional.227", %"class.quic::TransportParameters::IntegerParameter", %"class.quic::TransportParameters::IntegerParameter", %"class.absl::optional.737", %"class.absl::optional.415", i8, %"class.absl::flat_hash_map.344" }
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"struct.quic::TransportParameters::PreferredAddress"* }
%"struct.quic::TransportParameters::PreferredAddress" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.std::__1::vector.720" }
%"class.quic::TransportParameters::IntegerParameter" = type <{ i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.absl::optional.737" = type { %"class.absl::optional_internal::optional_data.738" }
%"class.absl::optional_internal::optional_data.738" = type { %"class.absl::optional_internal::optional_data_base.739" }
%"class.absl::optional_internal::optional_data_base.739" = type { %"class.absl::optional_internal::optional_data_dtor_base.740" }
%"class.absl::optional_internal::optional_data_dtor_base.740" = type { i8, %union.anon.741 }
%union.anon.741 = type { %"class.std::__1::vector.326" }
%"class.quic::CryptoHandshakeMessage" = type { i32, %"class.std::__1::map.742", i64, %"class.std::__1::unique_ptr.751" }
%"class.std::__1::map.742" = type { %"class.std::__1::__tree.743" }
%"class.std::__1::__tree.743" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.quic::QuicData"* }
%"class.quic::QuicData" = type <{ i32 (...)**, i8*, i64, i8, [7 x i8] }>
%"class.std::__1::vector.757" = type { %"class.std::__1::__vector_base.758" }
%"class.std::__1::__vector_base.758" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.std::__1::basic_string"* }
%"class.quic::PendingStream" = type { %"class.quic::QuicStreamSequencer::StreamInterface", i32, %"struct.quic::ParsedQuicVersion", %"class.quic::StreamDelegateInterface"*, i64, i8, %"class.quic::QuicFlowController"*, %"class.quic::QuicFlowController", %"class.quic::QuicStreamSequencer" }
%"struct.quic::AcceptChFrame" = type { %"class.std::__1::vector.764" }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"struct.spdy::AcceptChOriginValuePair"*, %"struct.spdy::AcceptChOriginValuePair"*, %"class.std::__1::__compressed_pair.766" }
%"struct.spdy::AcceptChOriginValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.spdy::AcceptChOriginValuePair"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE5eraseIS9_EEmRKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE5eraseIjEEmRSI_ = comdat any

$_ZN4quic11QuicSession22ValidateStatelessResetERKNS_17QuicSocketAddressES3_ = comdat any

$_ZN4quic11QuicSession24OnCongestionWindowChangeENS_8QuicTimeE = comdat any

$_ZN4quic11QuicSession21OnConnectionMigrationENS_17AddressChangeTypeE = comdat any

$_ZN4quic11QuicSession11OnKeyUpdateENS_15KeyUpdateReasonE = comdat any

$_ZNK4quic11QuicSession20IsKnownServerAddressERKNS_17QuicSocketAddressE = comdat any

$_ZNK4quic11QuicSession15GetAlpnsToOfferEv = comdat any

$_ZN4quic15QuicSpdySession15OnAcceptChFrameERKNS_13AcceptChFrameE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE22find_or_prepare_insertIS9_EENSH_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE14prepare_insertEm = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE4findIS9_EENSL_8iteratorERKT_m = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN4quic25QuicSpdyClientSessionBaseE = hidden unnamed_addr constant { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] } { [141 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZN4quic25QuicSpdyClientSessionBaseD2Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZN4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicStreamFrame"*)* @_ZN4quic11QuicSession13OnStreamFrameERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicCryptoFrame"*)* @_ZN4quic11QuicSession13OnCryptoFrameERKNS_15QuicCryptoFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicWindowUpdateFrame"*)* @_ZN4quic11QuicSession19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicBlockedFrame"*)* @_ZN4quic11QuicSession14OnBlockedFrameERKNS_16QuicBlockedFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN4quic11QuicSession11OnRstStreamERKNS_18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicGoAwayFrame"*)* @_ZN4quic11QuicSession8OnGoAwayERKNS_15QuicGoAwayFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i8*, i64)* @_ZN4quic15QuicSpdySession17OnMessageReceivedEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession23OnHandshakeDoneReceivedEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8*, i64)* @_ZN4quic11QuicSession18OnNewTokenReceivedEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicMaxStreamsFrame"*)* @_ZN4quic11QuicSession17OnMaxStreamsFrameERKNS_19QuicMaxStreamsFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdySession"*, %"struct.quic::QuicStreamsBlockedFrame"*)* @_ZN4quic15QuicSpdySession21OnStreamsBlockedFrameERKNS_23QuicStreamsBlockedFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicConnectionCloseFrame"*, i32)* @_ZN4quic11QuicSession18OnConnectionClosedERKNS_24QuicConnectionCloseFrameENS_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession14OnWriteBlockedEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::ParsedQuicVersion"*)* @_ZN4quic11QuicSession30OnSuccessfulVersionNegotiationERKNS_17ParsedQuicVersionE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, i1)* @_ZN4quic11QuicSession16OnPacketReceivedERKNS_17QuicSocketAddressES3_b to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession10OnCanWriteEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession15SendProbingDataEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*)* @_ZN4quic11QuicSession22ValidateStatelessResetERKNS_17QuicSocketAddressES3_ to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i64)* @_ZN4quic11QuicSession24OnCongestionWindowChangeENS_8QuicTimeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZN4quic11QuicSession21OnConnectionMigrationENS_17AddressChangeTypeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession15OnPathDegradingEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession39OnForwardProgressMadeAfterPathDegradingEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession30OnAckNeedsRetransmittableFrameEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicAckFrequencyFrame"*)* @_ZN4quic11QuicSession16SendAckFrequencyERKNS_21QuicAckFrequencyFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicNewConnectionIdFrame"*)* @_ZN4quic11QuicSession19SendNewConnectionIdERKNS_24QuicNewConnectionIdFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i64)* @_ZN4quic11QuicSession22SendRetireConnectionIdEm to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::QuicConnectionId"*)* @_ZN4quic11QuicSession26OnServerConnectionIdIssuedERKNS_16QuicConnectionIdE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::QuicConnectionId"*)* @_ZN4quic11QuicSession27OnServerConnectionIdRetiredERKNS_16QuicConnectionIdE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession21WillingAndAbleToWriteEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZNK4quic25QuicSpdyClientSessionBase25ShouldKeepConnectionAliveEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession24GetStreamsInfoForLoggingEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession22AllowSelfAddressChangeEv to i8*), i8* bitcast (i32 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession17GetHandshakeStateEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicStopSendingFrame"*)* @_ZN4quic11QuicSession18OnStopSendingFrameERKNS_20QuicStopSendingFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZN4quic11QuicSession17OnPacketDecryptedENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession26OnOneRttPacketAcknowledgedEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession21OnHandshakePacketSentEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession11OnKeyUpdateENS_15KeyUpdateReasonE to i8*), i8* bitcast (%"class.quic::QuicDecrypter"* (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession42AdvanceKeysAndCreateCurrentOneRttDecrypterEv to i8*), i8* bitcast (%"class.quic::QuicEncrypter"* (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession28CreateCurrentOneRttEncrypterEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*)* @_ZN4quic15QuicSpdySession25BeforeConnectionCloseSentEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i8*, i64)* @_ZNK4quic11QuicSession13ValidateTokenEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession21MaybeSendAddressTokenEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*)* @_ZNK4quic11QuicSession20IsKnownServerAddressERKNS_17QuicSocketAddressE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*)* @_ZN4quic15QuicSpdySession10InitializeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.quic::QuicSession"*, i32, i64, i64, %"class.quic::QuicDataWriter"*)* @_ZN4quic11QuicSession15WriteStreamDataEjmmPNS_14QuicDataWriterE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i8, i64, i64, %"class.quic::QuicDataWriter"*)* @_ZN4quic11QuicSession15WriteCryptoDataENS_15EncryptionLevelEmmPNS_14QuicDataWriterE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*, i64, i64)* @_ZN4quic11QuicSession12OnFrameAckedERKNS_9QuicFrameENS_8QuicTime5DeltaES4_ to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicStreamFrame"*)* @_ZN4quic11QuicSession26OnStreamFrameRetransmittedERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*)* @_ZN4quic11QuicSession11OnFrameLostERKNS_9QuicFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.std::__1::vector.82"*, i8)* @_ZN4quic11QuicSession16RetransmitFramesERKNSt3__16vectorINS_9QuicFrameENS1_9allocatorIS3_EEEENS_16TransmissionTypeE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*)* @_ZNK4quic11QuicSession18IsFrameOutstandingERKNS_9QuicFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession20HasUnackedCryptoDataEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession20HasUnackedStreamDataEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i1)* @_ZN4quic11QuicSession14SendMaxStreamsEjb to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i1)* @_ZN4quic15QuicSpdySession28OnCanCreateNewOutgoingStreamEb to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)* @_ZN4quic11QuicSession16ProcessUdpPacketERKNS_17QuicSocketAddressES3_RKNS_18QuicReceivedPacketE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i64)* @_ZN4quic11QuicSession14OnMessageAckedEjNS_8QuicTimeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession13OnMessageLostEj to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic11QuicSession26OnControlFrameManagerErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*, i8)* @_ZN4quic11QuicSession17WriteControlFrameERKNS_9QuicFrameENS_16TransmissionTypeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i32)* @_ZN4quic11QuicSession11ResetStreamEjNS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic11QuicSession10SendGoAwayENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession11SendBlockedEj to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i64)* @_ZN4quic11QuicSession16SendWindowUpdateEjm to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*, i32)* @_ZN4quic25QuicSpdyClientSessionBase14OnStreamClosedEj to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession23IsEncryptionEstablishedEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZN4quic25QuicSpdyClientSessionBase18OnConfigNegotiatedEv to i8*), i8* bitcast (void (%"class.absl::optional.415"*, %"class.quic::QuicSpdySession"*, i8*, i64)* @_ZN4quic15QuicSpdySession10OnAlpsDataEPKhm to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i8, %"class.quic::QuicDecrypter"*, i1, i1)* @_ZN4quic11QuicSession27OnNewDecryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicDecrypterENS2_14default_deleteIS4_EEEEbb to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i8, %"class.quic::QuicEncrypter"*)* @_ZN4quic15QuicSpdySession27OnNewEncryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicEncrypterENS2_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZN4quic11QuicSession25SetDefaultEncryptionLevelENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession22OnTlsHandshakeCompleteEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZN4quic11QuicSession23DiscardOldDecryptionKeyENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZN4quic11QuicSession23DiscardOldEncryptionKeyENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession21NeuterUnencryptedDataEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession19NeuterHandshakeDataEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession17OnZeroRttRejectedEi to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"*)* @_ZN4quic11QuicSession23FillTransportParametersEPNS_19TransportParametersE to i8*), i8* bitcast (i32 (%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"*, i1, %"class.std::__1::basic_string"*)* @_ZN4quic11QuicSession26ProcessTransportParametersERKNS_19TransportParametersEbPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZN4quic11QuicSession23OnHandshakeCallbackDoneEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession21PacketFlusherAttachedEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*)* @_ZN4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i64, %"class.std::__1::basic_string"*)* @_ZN4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i1, %"class.spdy::StreamPrecedence"*)* @_ZN4quic11QuicSession22RegisterStreamPriorityEjbRKN4spdy16StreamPrecedenceIjEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i1)* @_ZN4quic11QuicSession24UnregisterStreamPriorityEjb to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.spdy::StreamPrecedence"*)* @_ZN4quic11QuicSession20UpdateStreamPriorityEjRKN4spdy16StreamPrecedenceIjEE to i8*), i8* bitcast (void ()* @_ZN4quic11QuicSession10WritevDataEjmmNS_18StreamSendingStateENS_16TransmissionTypeEN4absl8optionalINS_15EncryptionLevelEEE to i8*), i8* bitcast (i64 (%"class.quic::QuicSession"*, i8, i64, i64, i8)* @_ZN4quic11QuicSession14SendCryptoDataENS_15EncryptionLevelEmmNS_16TransmissionTypeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::CryptoHandshakeMessage"*)* @_ZN4quic11QuicSession28OnCryptoHandshakeMessageSentERKNS_22CryptoHandshakeMessageE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::CryptoHandshakeMessage"*)* @_ZN4quic11QuicSession32OnCryptoHandshakeMessageReceivedERKNS_22CryptoHandshakeMessageE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession31MarkConnectionLevelWriteBlockedEj to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession11ShouldYieldEj to i8*), i8* bitcast (void (%"class.std::__1::vector.757"*, %"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession15GetAlpnsToOfferEv to i8*), i8* bitcast (void ()* @_ZNK4quic11QuicSession10SelectAlpnERKNSt3__16vectorIN4absl11string_viewENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8*, i64)* @_ZN4quic11QuicSession14OnAlpnSelectedEN4absl11string_viewE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdySession"*, %"class.std::__1::vector.720"*)* @_ZN4quic15QuicSpdySession22ResumeApplicationStateEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i32, i64)* @_ZN4quic11QuicSession23MaybeSendRstStreamFrameEjNS_22QuicRstStreamErrorCodeEm to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i32)* @_ZN4quic11QuicSession25MaybeSendStopSendingFrameEjNS_22QuicRstStreamErrorCodeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.quic::QuicStream"*)* @_ZN4quic11QuicSession14ActivateStreamENSt3__110unique_ptrINS_10QuicStreamENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i64)* @_ZN4quic11QuicSession25OnFinalByteOffsetReceivedEjm to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdySession"*)* @_ZNK4quic15QuicSpdySession18UsesPendingStreamsEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession38HandleFrameOnNonexistentOutgoingStreamEj to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i32)* @_ZN4quic11QuicSession32MaybeIncreaseLargestPeerStreamIdEj to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN4quic11QuicSession33HandleRstOnValidNonexistentStreamERKNS_18QuicRstStreamFrameE to i8*), i8* bitcast ({ i64, i64 } (%"class.quic::QuicSession"*)* @_ZNK4quic11QuicSession22GetStatelessResetTokenEv to i8*), i8* bitcast (%"class.quic::QuicStream"* (%"class.quic::QuicSpdySession"*, %"class.quic::PendingStream"*)* @_ZN4quic15QuicSpdySession20ProcessPendingStreamEPNS_13PendingStreamE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, i8*, i64)* @_ZN4quic15QuicSpdySession20OnDecoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, i8*, i64)* @_ZN4quic15QuicSpdySession20OnEncoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::StreamPrecedence"*)* @_ZN4quic15QuicSpdySession23OnStreamHeadersPriorityEjRKN4spdy16StreamPrecedenceIjEE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, i1, i64, %"class.quic::QuicHeaderList"*)* @_ZN4quic15QuicSpdySession18OnStreamHeaderListEjbmRKNS_14QuicHeaderListE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*, i32, i32, i64, %"class.quic::QuicHeaderList"*)* @_ZN4quic25QuicSpdyClientSessionBase19OnPromiseHeaderListEjjmRKNS_14QuicHeaderListE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::StreamPrecedence"*)* @_ZN4quic15QuicSpdySession15OnPriorityFrameEjRKN4spdy16StreamPrecedenceIjEE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, %"struct.quic::AcceptChFrame"*)* @_ZN4quic15QuicSpdySession15OnAcceptChFrameERKNS_13AcceptChFrameE to i8*), i8* bitcast (i64 (%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1, %"class.spdy::StreamPrecedence"*, %"class.quic::QuicReferenceCountedPointer"*)* @_ZN4quic15QuicSpdySession27WriteHeadersOnHeadersStreamEjN4spdy16Http2HeaderBlockEbRKNS1_16StreamPrecedenceIjEENS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i64)* @_ZN4quic15QuicSpdySession13OnHttp3GoAwayEm to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, i32, %"class.spdy::Http2HeaderBlock"*)* @_ZN4quic15QuicSpdySession16WritePushPromiseEjjN4spdy16Http2HeaderBlockE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyClientSessionBase"*, %"struct.quic::SettingsFrame"*)* @_ZN4quic25QuicSpdyClientSessionBase15OnSettingsFrameERKNS_13SettingsFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZN4quic25QuicSpdyClientSessionBase41ShouldReleaseHeadersStreamSequencerBufferEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, %"struct.quic::AcceptChFrame"*)* @_ZN4quic15QuicSpdySession30OnAcceptChFrameReceivedViaAlpsERKNS_13AcceptChFrameE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdySession"*)* @_ZN4quic15QuicSpdySession27ShouldNegotiateWebTransportEv to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*)* @_ZN4quic15QuicSpdySession41MaybeInitializeHttp3UnidirectionalStreamsEv to i8*), i8* bitcast (void ()* @_ZN4quic15QuicSpdySession19OnDatagramProcessedEN4absl8optionalINS_13MessageStatusEEE to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdySession"*)* @_ZN4quic15QuicSpdySession28ShouldNegotiateHttp3DatagramEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSpdyClientSessionBase"*, i32, i32, %"class.spdy::Http2HeaderBlock"*)* @_ZN4quic25QuicSpdyClientSessionBase14HandlePromisedEjjRKN4spdy16Http2HeaderBlockE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*, %"class.quic::QuicClientPromisedInfo"*)* @_ZN4quic25QuicSpdyClientSessionBase14DeletePromisedEPNS_22QuicClientPromisedInfoE to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*, i32)* @_ZN4quic25QuicSpdyClientSessionBase20OnPushStreamTimedOutEj to i8*)], [11 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn8_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn8_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*, i64, i64)* @_ZThn8_N4quic11QuicSession12OnFrameAckedERKNS_9QuicFrameENS_8QuicTime5DeltaES4_ to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicStreamFrame"*)* @_ZThn8_N4quic11QuicSession26OnStreamFrameRetransmittedERKNS_15QuicStreamFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*)* @_ZThn8_N4quic11QuicSession11OnFrameLostERKNS_9QuicFrameE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, %"class.std::__1::vector.82"*, i8)* @_ZThn8_N4quic11QuicSession16RetransmitFramesERKNSt3__16vectorINS_9QuicFrameENS1_9allocatorIS3_EEEENS_16TransmissionTypeE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*)* @_ZThn8_NK4quic11QuicSession18IsFrameOutstandingERKNS_9QuicFrameE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZThn8_NK4quic11QuicSession20HasUnackedCryptoDataEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZThn8_NK4quic11QuicSession20HasUnackedStreamDataEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn16_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn16_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (i32 (%"class.quic::QuicSession"*, i32, i64, i64, %"class.quic::QuicDataWriter"*)* @_ZThn16_N4quic11QuicSession15WriteStreamDataEjmmPNS_14QuicDataWriterE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i8, i64, i64, %"class.quic::QuicDataWriter"*)* @_ZThn16_N4quic11QuicSession15WriteCryptoDataENS_15EncryptionLevelEmmPNS_14QuicDataWriterE to i8*)], [5 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn24_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn24_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i1)* @_ZThn24_N4quic11QuicSession14SendMaxStreamsEjb to i8*)], [17 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn32_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn32_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, i8, %"class.quic::QuicDecrypter"*, i1, i1)* @_ZThn32_N4quic11QuicSession27OnNewDecryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicDecrypterENS2_14default_deleteIS4_EEEEbb to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i8, %"class.quic::QuicEncrypter"*)* @_ZThn32_N4quic15QuicSpdySession27OnNewEncryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicEncrypterENS2_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZThn32_N4quic11QuicSession25SetDefaultEncryptionLevelENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZThn32_N4quic11QuicSession22OnTlsHandshakeCompleteEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZThn32_N4quic11QuicSession23DiscardOldDecryptionKeyENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i8)* @_ZThn32_N4quic11QuicSession23DiscardOldEncryptionKeyENS_15EncryptionLevelE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZThn32_N4quic11QuicSession21NeuterUnencryptedDataEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZThn32_N4quic11QuicSession19NeuterHandshakeDataEv to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32)* @_ZThn32_N4quic11QuicSession17OnZeroRttRejectedEi to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"*)* @_ZThn32_N4quic11QuicSession23FillTransportParametersEPNS_19TransportParametersE to i8*), i8* bitcast (i32 (%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"*, i1, %"class.std::__1::basic_string"*)* @_ZThn32_N4quic11QuicSession26ProcessTransportParametersERKNS_19TransportParametersEbPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*)* @_ZThn32_N4quic11QuicSession23OnHandshakeCallbackDoneEv to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*)* @_ZThn32_NK4quic11QuicSession21PacketFlusherAttachedEv to i8*)], [11 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn40_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn40_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*)* @_ZThn40_N4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i64, %"class.std::__1::basic_string"*)* @_ZThn40_N4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (void ()* @_ZThn40_N4quic11QuicSession10WritevDataEjmmNS_18StreamSendingStateENS_16TransmissionTypeEN4absl8optionalINS_15EncryptionLevelEEE to i8*), i8* bitcast (i64 (%"class.quic::QuicSession"*, i8, i64, i64, i8)* @_ZThn40_N4quic11QuicSession14SendCryptoDataENS_15EncryptionLevelEmmNS_16TransmissionTypeE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i1, %"class.spdy::StreamPrecedence"*)* @_ZThn40_N4quic11QuicSession22RegisterStreamPriorityEjbRKN4spdy16StreamPrecedenceIjEE to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, i1)* @_ZThn40_N4quic11QuicSession24UnregisterStreamPriorityEjb to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.spdy::StreamPrecedence"*)* @_ZThn40_N4quic11QuicSession20UpdateStreamPriorityEjRKN4spdy16StreamPrecedenceIjEE to i8*)], [6 x i8*] [i8* inttoptr (i64 -48 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn48_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn48_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*)* @_ZThn48_N4quic11QuicSession26OnControlFrameManagerErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"*, i8)* @_ZThn48_N4quic11QuicSession17WriteControlFrameERKNS_9QuicFrameENS_16TransmissionTypeE to i8*)], [5 x i8*] [i8* inttoptr (i64 -2864 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn2864_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn2864_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, i8*, i64)* @_ZThn2864_N4quic15QuicSpdySession20OnDecoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE to i8*)], [5 x i8*] [i8* inttoptr (i64 -2872 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn2872_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn2872_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdySession"*, i32, i8*, i64)* @_ZThn2872_N4quic15QuicSpdySession20OnEncoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE to i8*)], [6 x i8*] [i8* inttoptr (i64 -3536 to i8*), i8* null, i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn3536_N4quic25QuicSpdyClientSessionBaseD1Ev to i8*), i8* bitcast (void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZThn3536_N4quic25QuicSpdyClientSessionBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"stream is static\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"Received push stream id lesser or equal to the last accepted before\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"Received push stream id for outgoing stream.\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"Received push stream id higher than MAX_PUSH_ID.\00", align 1
@.str.4 = private unnamed_addr constant [81 x i8] c"../../net/third_party/quiche/src/quic/core/http/quic_spdy_client_session_base.cc\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Duplicate promise for id \00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"Server accepted 0-RTT but omitted non-default SETTINGS_MAX_FIELD_SECTION_SIZE\00", align 1
@.str.7 = private unnamed_addr constant [77 x i8] c"Server accepted 0-RTT but omitted non-default SETTINGS_QPACK_BLOCKED_STREAMS\00", align 1
@.str.8 = private unnamed_addr constant [80 x i8] c"Server accepted 0-RTT but omitted non-default SETTINGS_QPACK_MAX_TABLE_CAPACITY\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN4quic25QuicSpdyClientSessionBaseD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicSpdyClientSessionBase"*), void (%"class.quic::QuicSpdyClientSessionBase"*)* @_ZN4quic25QuicSpdyClientSessionBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBaseC2EPNS_14QuicConnectionEPNS_26QuicClientPushPromiseIndexERKNS_10QuicConfigERKNSt3__16vectorINS_17ParsedQuicVersionENS8_9allocatorISA_EEEE(%"class.quic::QuicSpdyClientSessionBase"*, %"class.quic::QuicConnection"*, %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicConfig"* dereferenceable(1112), %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  tail call void @_ZN4quic15QuicSpdySessionC2EPNS_14QuicConnectionEPNS_11QuicSession7VisitorERKNS_10QuicConfigERKNSt3__16vectorINS_17ParsedQuicVersionENS9_9allocatorISB_EEEE(%"class.quic::QuicSpdySession"* %6, %"class.quic::QuicConnection"* %1, %"class.quic::QuicSession::Visitor"* null, %"class.quic::QuicConfig"* dereferenceable(1112) %3, %"class.std::__1::vector"* dereferenceable(24) %4) #11
  %7 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %10 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %12 = bitcast i32 (...)*** %11 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %12, align 8
  %13 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 6, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 1, i32 0
  %15 = bitcast i32 (...)*** %14 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 8, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 9, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %16 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 2
  store %"class.quic::QuicClientPushPromiseIndex"* %2, %"class.quic::QuicClientPushPromiseIndex"** %16, align 8
  %17 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %19 = bitcast %"union.absl::container_internal::map_slot_type.645"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #11
  %20 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %1, i64 0, i32 8, i32 8, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %22) #11
  store i32 %23, i32* %20, align 8
  ret void
}

declare void @_ZN4quic15QuicSpdySessionC2EPNS_14QuicConnectionEPNS_11QuicSession7VisitorERKNS_10QuicConfigERKNSt3__16vectorINS_17ParsedQuicVersionENS9_9allocatorISB_EEEE(%"class.quic::QuicSpdySession"*, %"class.quic::QuicConnection"*, %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicConfig"* dereferenceable(1112), %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #1

declare i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %5 = bitcast i32 (...)*** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %7 = bitcast i32 (...)*** %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 5, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 6, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 6, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 7, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 8, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }, { [141 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [17 x i8*], [11 x i8*], [6 x i8*], [5 x i8*], [5 x i8*], [6 x i8*] }* @_ZTVN4quic25QuicSpdyClientSessionBaseE, i64 0, inrange i32 9, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %15 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %14, align 8
  %16 = icmp ne i8* %13, null
  tail call void @llvm.assume(i1 %16) #11
  %17 = load i8, i8* %13, align 1
  %18 = icmp slt i8 %17, -1
  br i1 %18, label %19, label %34

19:                                               ; preds = %1, %19
  %20 = phi %"union.absl::container_internal::map_slot_type.645"* [ %31, %19 ], [ %15, %1 ]
  %21 = phi i8* [ %30, %19 ], [ %13, %1 ]
  %22 = bitcast i8* %21 to <16 x i8>*
  %23 = load <16 x i8>, <16 x i8>* %22, align 1
  %24 = icmp slt <16 x i8> %23, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %25 = bitcast <16 x i1> %24 to i16
  %26 = zext i16 %25 to i32
  %27 = add nuw nsw i32 %26, 1
  %28 = tail call i32 @llvm.cttz.i32(i32 %27, i1 true) #11, !range !2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %21, i64 %29
  %31 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %20, i64 %29
  %32 = load i8, i8* %30, align 1
  %33 = icmp slt i8 %32, -1
  br i1 %33, label %19, label %34

34:                                               ; preds = %19, %1
  %35 = phi %"union.absl::container_internal::map_slot_type.645"* [ %15, %1 ], [ %31, %19 ]
  %36 = phi i8* [ %13, %1 ], [ %30, %19 ]
  %37 = phi i8 [ %17, %1 ], [ %32, %19 ]
  %38 = icmp eq i8 %37, -1
  %39 = icmp eq i8* %36, null
  %40 = or i1 %38, %39
  br i1 %40, label %49, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 2
  %43 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = icmp sgt i8 %37, -1
  br i1 %47, label %79, label %48, !prof !3

48:                                               ; preds = %135, %41
  call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %128, %34
  %50 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  call void @_ZN4quic11QuicSession16DeleteConnectionEv(%"class.quic::QuicSession"* %50) #11
  %51 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %77, label %57

54:                                               ; preds = %73
  %55 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %55) #15
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %12, align 8
  %56 = bitcast %"union.absl::container_internal::map_slot_type.645"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #11
  br label %77

57:                                               ; preds = %49, %73
  %58 = phi i64 [ %74, %73 ], [ 0, %49 ]
  %59 = load i8*, i8** %12, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %63, label %73

63:                                               ; preds = %57
  %64 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %14, align 8
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %64, i64 %58, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %65, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %65, align 8
  %67 = icmp eq %"class.quic::QuicClientPromisedInfo"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.quic::QuicClientPromisedInfo"* %66 to void (%"class.quic::QuicClientPromisedInfo"*)***
  %70 = load void (%"class.quic::QuicClientPromisedInfo"*)**, void (%"class.quic::QuicClientPromisedInfo"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %70, i64 2
  %72 = load void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %71, align 8
  call void %72(%"class.quic::QuicClientPromisedInfo"* nonnull %66) #11
  br label %73

73:                                               ; preds = %68, %63, %57
  %74 = add i64 %58, 1
  %75 = load i64, i64* %51, align 8
  %76 = icmp eq i64 %74, %75
  br i1 %76, label %54, label %57

77:                                               ; preds = %49, %54
  %78 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  call void @_ZN4quic15QuicSpdySessionD2Ev(%"class.quic::QuicSpdySession"* %78) #11
  ret void

79:                                               ; preds = %41, %135
  %80 = phi i8* [ %133, %135 ], [ %36, %41 ]
  %81 = phi %"union.absl::container_internal::map_slot_type.645"* [ %130, %135 ], [ %35, %41 ]
  %82 = load %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex"** %42, align 8
  %83 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %82, i64 0, i32 1, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %84 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %81, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %84, align 8
  %86 = getelementptr inbounds %"class.quic::QuicClientPromisedInfo", %"class.quic::QuicClientPromisedInfo"* %85, i64 0, i32 3
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !4
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %79
  %92 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %92, i64 24, i1 false) #11
  br label %98

93:                                               ; preds = %79
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8, !noalias !4
  %96 = getelementptr inbounds %"class.quic::QuicClientPromisedInfo", %"class.quic::QuicClientPromisedInfo"* %85, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8, !noalias !4
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %95, i64 %97) #11
  br label %98

98:                                               ; preds = %91, %93
  %99 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE5eraseIS9_EEmRKT_(%"class.absl::container_internal::raw_hash_set.635"* %83, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %100 = load i8, i8* %45, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %102, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  %105 = load i8, i8* %80, align 1
  %106 = icmp sgt i8 %105, -1
  br i1 %106, label %108, label %107, !prof !3

107:                                              ; preds = %104
  call void @llvm.trap() #11
  unreachable

108:                                              ; preds = %104
  %109 = getelementptr inbounds i8, i8* %80, i64 1
  %110 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %81, i64 1
  %111 = load i8, i8* %109, align 1
  %112 = icmp slt i8 %111, -1
  br i1 %112, label %113, label %128

113:                                              ; preds = %108, %113
  %114 = phi %"union.absl::container_internal::map_slot_type.645"* [ %125, %113 ], [ %110, %108 ]
  %115 = phi i8* [ %124, %113 ], [ %109, %108 ]
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1
  %118 = icmp slt <16 x i8> %117, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %119 = bitcast <16 x i1> %118 to i16
  %120 = zext i16 %119 to i32
  %121 = add nuw nsw i32 %120, 1
  %122 = call i32 @llvm.cttz.i32(i32 %121, i1 true) #11, !range !2
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %115, i64 %123
  %125 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %114, i64 %123
  %126 = load i8, i8* %124, align 1
  %127 = icmp slt i8 %126, -1
  br i1 %127, label %113, label %128

128:                                              ; preds = %113, %108
  %129 = phi i8* [ %109, %108 ], [ %124, %113 ]
  %130 = phi %"union.absl::container_internal::map_slot_type.645"* [ %110, %108 ], [ %125, %113 ]
  %131 = phi i8 [ %111, %108 ], [ %126, %113 ]
  %132 = icmp eq i8 %131, -1
  %133 = select i1 %132, i8* null, i8* %129, !prof !7
  %134 = icmp eq i8* %133, null
  br i1 %134, label %49, label %135

135:                                              ; preds = %128
  %136 = load i8, i8* %133, align 1
  %137 = icmp sgt i8 %136, -1
  br i1 %137, label %79, label %48, !prof !3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE5eraseIS9_EEmRKT_(%"class.absl::container_internal::raw_hash_set.635"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %17

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %7, %10
  %18 = phi i64 [ %12, %10 ], [ %9, %7 ]
  %19 = phi i64 [ %14, %10 ], [ %8, %7 ]
  %20 = inttoptr i64 %18 to i8*
  %21 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %22 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %21, i8* %20, i64 %19) #11
  %23 = add i64 %22, %19
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  %29 = tail call { i8*, %"union.absl::container_internal::map_slot_type.636"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE4findIS9_EENSL_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.635"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %28) #11
  %30 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %29, 0
  %31 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %29, 1
  %32 = icmp eq i8* %30, null
  br i1 %32, label %95, label %33

33:                                               ; preds = %17
  %34 = load i8, i8* %30, align 1
  %35 = icmp sgt i8 %34, -1
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  tail call void @llvm.trap() #11
  unreachable

37:                                               ; preds = %33
  %38 = bitcast %"union.absl::container_internal::map_slot_type.636"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #15
  br label %45

45:                                               ; preds = %42, %37
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 0
  %50 = bitcast %"class.absl::container_internal::raw_hash_set.635"* %0 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = ptrtoint i8* %30 to i64
  %53 = sub i64 %52, %51
  %54 = add i64 %53, -16
  %55 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %54, %56
  %58 = bitcast i8* %30 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1
  %60 = icmp eq <16 x i8> %59, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %61 = bitcast <16 x i1> %60 to i16
  %62 = inttoptr i64 %51 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %57
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp eq <16 x i8> %65, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp ne i16 %67, 0
  %69 = icmp ne i16 %61, 0
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %81

71:                                               ; preds = %45
  %72 = zext i16 %61 to i32
  %73 = zext i16 %67 to i32
  %74 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %75 = shl nuw i32 %73, 16
  %76 = tail call i32 @llvm.ctlz.i32(i32 %75, i1 false) #11, !range !2
  %77 = add nuw nsw i32 %76, %74
  %78 = icmp ult i32 %77, 16
  %79 = zext i1 %78 to i64
  %80 = select i1 %78, i8 -128, i8 -2
  br label %81

81:                                               ; preds = %45, %71
  %82 = phi i64 [ 0, %45 ], [ %79, %71 ]
  %83 = phi i8 [ -2, %45 ], [ %80, %71 ]
  %84 = getelementptr inbounds i8, i8* %62, i64 %53
  store i8 %83, i8* %84, align 1
  %85 = load i8*, i8** %49, align 8
  %86 = add i64 %53, -15
  %87 = load i64, i64* %55, align 8
  %88 = and i64 %87, %86
  %89 = and i64 %87, 15
  %90 = add i64 %88, %89
  %91 = getelementptr inbounds i8, i8* %85, i64 %90
  store i8 %83, i8* %91, align 1
  %92 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, %82
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %17, %81
  %96 = phi i64 [ 1, %81 ], [ 0, %17 ]
  ret i64 %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4quic11QuicSession16DeleteConnectionEv(%"class.quic::QuicSession"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic15QuicSpdySessionD2Ev(%"class.quic::QuicSpdySession"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 4
  %3 = bitcast i32* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 3, i32 0, i32 0, i32 4
  %3 = bitcast %"class.absl::container_internal::CompressedTuple.646"* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 3, i32 0, i32 0, i32 3
  %3 = bitcast i64* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 3, i32 0, i32 0, i32 2
  %3 = bitcast i64* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn40_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast %"union.absl::container_internal::map_slot_type.645"** %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn48_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 3
  %3 = bitcast %"class.absl::flat_hash_map.642"* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn2864_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 0, i32 0, i32 12, i32 4
  %3 = bitcast %"class.quic::QuicWriteBlockedList::StaticStreamCollection"* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn2872_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 0, i32 0, i32 12, i32 3
  %3 = bitcast i8* %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn3536_N4quic25QuicSpdyClientSessionBaseD1Ev(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 -1, i32 0, i32 0, i32 7, i32 0, i32 0, i32 1
  %3 = bitcast %"union.absl::container_internal::map_slot_type"** %2 to %"class.quic::QuicSpdyClientSessionBase"*
  tail call void @_ZN4quic25QuicSpdyClientSessionBaseD2Ev(%"class.quic::QuicSpdyClientSessionBase"* %3) #11
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn8_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn16_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn24_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn32_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn40_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn48_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn2864_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn2872_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn3536_N4quic25QuicSpdyClientSessionBaseD0Ev(%"class.quic::QuicSpdyClientSessionBase"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase18OnConfigNegotiatedEv(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  tail call void @_ZN4quic11QuicSession18OnConfigNegotiatedEv(%"class.quic::QuicSession"* %2) #11
  ret void
}

declare void @_ZN4quic11QuicSession18OnConfigNegotiatedEv(%"class.quic::QuicSession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase24OnInitialHeadersCompleteEjRKN4spdy16Http2HeaderBlockE(%"class.quic::QuicSpdyClientSessionBase"* nocapture readonly, i32, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #2 align 2 {
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %1 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %25

25:                                               ; preds = %55, %3
  %26 = phi i64 [ %19, %3 ], [ %57, %55 ]
  %27 = phi i64 [ 0, %3 ], [ %56, %55 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %24, align 8
  br label %38

38:                                               ; preds = %47, %35
  %39 = phi i32 [ %36, %35 ], [ %49, %47 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %37, i64 %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %1
  br i1 %46, label %58, label %47, !prof !3

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %69, !prof !7

55:                                               ; preds = %51
  %56 = add i64 %27, 16
  %57 = add i64 %56, %28
  br label %25

58:                                               ; preds = %38
  %59 = getelementptr inbounds i8, i8* %13, i64 %43
  %60 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %60) #11
  %61 = load i8, i8* %59, align 1
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %58
  tail call void @llvm.trap() #11
  unreachable

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %37, i64 %43, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %65, align 8
  %67 = icmp eq %"class.quic::QuicClientPromisedInfo"* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  tail call void @_ZN4quic22QuicClientPromisedInfo17OnResponseHeadersERKN4spdy16Http2HeaderBlockE(%"class.quic::QuicClientPromisedInfo"* nonnull %66, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %2) #11
  br label %69

69:                                               ; preds = %51, %64, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicClientPromisedInfo"* @_ZN4quic25QuicSpdyClientSessionBase15GetPromisedByIdEj(%"class.quic::QuicSpdyClientSessionBase"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %4 = zext i32 %1 to i64
  %5 = add i64 %3, %4
  %6 = zext i64 %5 to i128
  %7 = mul nuw i128 %6, 11376068507788127593
  %8 = lshr i128 %7, 64
  %9 = xor i128 %8, %7
  %10 = trunc i128 %9 to i64
  %11 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %10, 7
  %16 = ptrtoint i8* %12 to i64
  %17 = lshr i64 %16, 12
  %18 = xor i64 %15, %17
  %19 = trunc i128 %9 to i8
  %20 = and i8 %19, 127
  %21 = insertelement <16 x i8> undef, i8 %20, i32 0
  %22 = shufflevector <16 x i8> %21, <16 x i8> undef, <16 x i32> zeroinitializer
  %23 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %24

24:                                               ; preds = %54, %2
  %25 = phi i64 [ %18, %2 ], [ %56, %54 ]
  %26 = phi i64 [ 0, %2 ], [ %55, %54 ]
  %27 = and i64 %25, %14
  %28 = getelementptr inbounds i8, i8* %12, i64 %27
  %29 = bitcast i8* %28 to <16 x i8>*
  %30 = load <16 x i8>, <16 x i8>* %29, align 1
  %31 = icmp eq <16 x i8> %22, %30
  %32 = bitcast <16 x i1> %31 to i16
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %24
  %35 = zext i16 %32 to i32
  %36 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %23, align 8
  br label %37

37:                                               ; preds = %46, %34
  %38 = phi i32 [ %35, %34 ], [ %48, %46 ]
  %39 = tail call i32 @llvm.cttz.i32(i32 %38, i1 false) #11, !range !2
  %40 = zext i32 %39 to i64
  %41 = add i64 %27, %40
  %42 = and i64 %41, %14
  %43 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %36, i64 %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %1
  br i1 %45, label %57, label %46, !prof !3

46:                                               ; preds = %37
  %47 = add i32 %38, -1
  %48 = and i32 %47, %38
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %37

50:                                               ; preds = %46, %24
  %51 = icmp eq <16 x i8> %30, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %52 = bitcast <16 x i1> %51 to i16
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %66, !prof !7

54:                                               ; preds = %50
  %55 = add i64 %26, 16
  %56 = add i64 %55, %27
  br label %24

57:                                               ; preds = %37
  %58 = getelementptr inbounds i8, i8* %12, i64 %42
  %59 = icmp ne i8* %58, null
  tail call void @llvm.assume(i1 %59) #11
  %60 = load i8, i8* %58, align 1
  %61 = icmp sgt i8 %60, -1
  br i1 %61, label %63, label %62, !prof !3

62:                                               ; preds = %57
  tail call void @llvm.trap() #11
  unreachable

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %36, i64 %42, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %64, align 8
  br label %66

66:                                               ; preds = %50, %63
  %67 = phi %"class.quic::QuicClientPromisedInfo"* [ %65, %63 ], [ null, %50 ]
  ret %"class.quic::QuicClientPromisedInfo"* %67
}

declare void @_ZN4quic22QuicClientPromisedInfo17OnResponseHeadersERKN4spdy16Http2HeaderBlockE(%"class.quic::QuicClientPromisedInfo"*, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase19OnPromiseHeaderListEjjmRKNS_14QuicHeaderListE(%"class.quic::QuicSpdyClientSessionBase"*, i32, i32, i64, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  %11 = tail call zeroext i1 @_ZNK4quic11QuicSession14IsStaticStreamEj(%"class.quic::QuicSession"* %10, i32 %1) #11
  %12 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 8
  %13 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  br i1 %11, label %14, label %30

14:                                               ; preds = %5
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 16, i8* %17, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i64* %18 to i8*
  store i8 0, i8* %19, align 8
  %20 = bitcast %"class.quic::QuicConnection"* %13 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %21 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %21, i64 55
  %23 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %22, align 8
  call void %23(%"class.quic::QuicConnection"* %13, i32 56, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 2) #11
  %24 = load i8, i8* %17, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %14, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  br label %125

30:                                               ; preds = %5
  %31 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %13, i64 0, i32 8, i32 8, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 51
  br i1 %33, label %67, label %34

34:                                               ; preds = %30
  %35 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %32) #11
  %36 = icmp eq i32 %35, %2
  br i1 %36, label %67, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  %41 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %40, i64 0, i32 8, i32 8, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = tail call i32 @_ZN4quic9QuicUtils18GetInvalidStreamIdENS_20QuicTransportVersionE(i32 %42) #11
  %44 = icmp eq i32 %39, %43
  br i1 %44, label %67, label %45

45:                                               ; preds = %37
  %46 = load i32, i32* %38, align 8
  %47 = icmp ult i32 %46, %2
  br i1 %47, label %67, label %48

48:                                               ; preds = %45
  %49 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  %51 = tail call i8* @_Znwm(i64 80) #15
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast i64* %53 to <2 x i64>*
  store <2 x i64> <i64 67, i64 -9223372036854775728>, <2 x i64>* %54, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i64 67, i1 false) #11
  %55 = getelementptr inbounds i8, i8* %51, i64 67
  store i8 0, i8* %55, align 1
  %56 = bitcast %"class.quic::QuicConnection"* %49 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %57 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %57, i64 55
  %59 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %58, align 8
  call void %59(%"class.quic::QuicConnection"* %49, i32 17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i32 2) #11
  %60 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %48
  %65 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %48, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #11
  br label %125

67:                                               ; preds = %45, %37, %34, %30
  %68 = tail call zeroext i1 @_ZNK4quic11QuicSession16IsIncomingStreamEj(%"class.quic::QuicSession"* %10, i32 %2) #11
  %69 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  br i1 %68, label %88, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  %72 = tail call i8* @_Znwm(i64 48) #15
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %72, i8** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast i64* %74 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %75, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %72, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 44, i1 false) #11
  %76 = getelementptr inbounds i8, i8* %72, i64 44
  store i8 0, i8* %76, align 1
  %77 = bitcast %"class.quic::QuicConnection"* %69 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %78 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %78, i64 55
  %80 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %79, align 8
  call void %80(%"class.quic::QuicConnection"* %69, i32 17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i32 2) #11
  %81 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %70
  %86 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %70, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  br label %125

88:                                               ; preds = %67
  %89 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %69, i64 0, i32 8, i32 8, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 51
  br i1 %91, label %92, label %115

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  %94 = zext i32 %2 to i64
  %95 = tail call zeroext i1 @_ZN4quic15QuicSpdySession25CanCreatePushStreamWithIdEm(%"class.quic::QuicSpdySession"* %93, i64 %94) #11
  br i1 %95, label %115, label %96

96:                                               ; preds = %92
  %97 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #11
  %99 = tail call i8* @_Znwm(i64 64) #15
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast i64* %101 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %102, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %99, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i64 48, i1 false) #11
  %103 = getelementptr inbounds i8, i8* %99, i64 48
  store i8 0, i8* %103, align 1
  %104 = bitcast %"class.quic::QuicConnection"* %97 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %105 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %105, i64 55
  %107 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %106, align 8
  call void %107(%"class.quic::QuicConnection"* %97, i32 17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 2) #11
  %108 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %96
  %113 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %96, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #11
  br label %125

115:                                              ; preds = %92, %88
  %116 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 4
  store i32 %2, i32* %116, align 8
  %117 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  %118 = tail call %"class.quic::QuicSpdyStream"* @_ZN4quic15QuicSpdySession25GetOrCreateSpdyDataStreamEj(%"class.quic::QuicSpdySession"* %117, i32 %1) #11
  %119 = icmp eq %"class.quic::QuicSpdyStream"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.quic::QuicSpdyStream"* %118 to void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)***
  %122 = load void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)**, void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)** %122, i64 32
  %124 = load void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)*, void (%"class.quic::QuicSpdyStream"*, i32, i64, %"class.quic::QuicHeaderList"*)** %123, align 8
  tail call void %124(%"class.quic::QuicSpdyStream"* nonnull %118, i32 %2, i64 %3, %"class.quic::QuicHeaderList"* dereferenceable(72) %4) #11
  br label %125

125:                                              ; preds = %120, %115, %29, %66, %87, %114
  ret void
}

declare zeroext i1 @_ZNK4quic11QuicSession14IsStaticStreamEj(%"class.quic::QuicSession"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession16IsIncomingStreamEj(%"class.quic::QuicSession"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession25CanCreatePushStreamWithIdEm(%"class.quic::QuicSpdySession"*, i64) local_unnamed_addr #1

declare %"class.quic::QuicSpdyStream"* @_ZN4quic15QuicSpdySession25GetOrCreateSpdyDataStreamEj(%"class.quic::QuicSpdySession"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic25QuicSpdyClientSessionBase14HandlePromisedEjjRKN4spdy16Http2HeaderBlockE(%"class.quic::QuicSpdyClientSessionBase"*, i32, i32, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  %9 = tail call zeroext i1 @_ZN4quic11QuicSession14IsClosedStreamEj(%"class.quic::QuicSession"* %8, i32 %2) #11
  br i1 %9, label %295, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 2
  %12 = load %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex"** %11, align 8
  %13 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %12, i64 0, i32 1, i32 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64 @_ZNK4quic11QuicSession40max_open_incoming_unidirectional_streamsEv(%"class.quic::QuicSession"* %8) #11
  %16 = mul i64 %15, 9
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to void (%"class.quic::QuicSession"*, i32, i32)***
  %20 = load void (%"class.quic::QuicSession"*, i32, i32)**, void (%"class.quic::QuicSession"*, i32, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i32)*, void (%"class.quic::QuicSession"*, i32, i32)** %20, i64 64
  %22 = load void (%"class.quic::QuicSession"*, i32, i32)*, void (%"class.quic::QuicSession"*, i32, i32)** %21, align 8
  tail call void %22(%"class.quic::QuicSession"* %8, i32 %2, i32 8) #11
  %23 = tail call zeroext i1 @_ZN4quic11QuicSession12IsOpenStreamEj(%"class.quic::QuicSession"* %8, i32 %2) #11
  br i1 %23, label %295, label %24

24:                                               ; preds = %18
  %25 = tail call zeroext i1 @_ZN4quic11QuicSession14IsClosedStreamEj(%"class.quic::QuicSession"* %8, i32 %2) #11
  br i1 %25, label %295, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to i1 (%"class.quic::QuicSession"*, i32)***
  %28 = load i1 (%"class.quic::QuicSession"*, i32)**, i1 (%"class.quic::QuicSession"*, i32)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.quic::QuicSession"*, i32)*, i1 (%"class.quic::QuicSession"*, i32)** %28, i64 109
  %30 = load i1 (%"class.quic::QuicSession"*, i32)*, i1 (%"class.quic::QuicSession"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.quic::QuicSession"* %8, i32 %2) #11
  br label %295

32:                                               ; preds = %10
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZN4quic19SpdyServerPushUtils25GetPromisedUrlFromHeadersERKN4spdy16Http2HeaderBlockE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %3) #11
  %37 = load %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex"** %11, align 8
  %38 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %37, i64 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %32
  %44 = zext i8 %41 to i64
  %45 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  br label %52

46:                                               ; preds = %32
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %35, align 8
  %50 = icmp sgt i64 %49, -1
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %46
  call void @llvm.trap() #11
  unreachable

52:                                               ; preds = %46, %43
  %53 = phi i64 [ %48, %46 ], [ %45, %43 ]
  %54 = phi i64 [ %49, %46 ], [ %44, %43 ]
  %55 = inttoptr i64 %53 to i8*
  %56 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %57 = call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %56, i8* %55, i64 %54) #11
  %58 = add i64 %57, %54
  %59 = zext i64 %58 to i128
  %60 = mul nuw i128 %59, 11376068507788127593
  %61 = lshr i128 %60, 64
  %62 = xor i128 %61, %60
  %63 = trunc i128 %62 to i64
  %64 = call { i8*, %"union.absl::container_internal::map_slot_type.636"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE4findIS9_EENSL_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.635"* %38, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 %63) #11
  %65 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %64, 0
  %66 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %64, 1
  %67 = icmp eq i8* %65, null
  br i1 %67, label %90, label %68

68:                                               ; preds = %52
  %69 = load i8, i8* %65, align 1
  %70 = icmp sgt i8 %69, -1
  br i1 %70, label %72, label %71, !prof !3

71:                                               ; preds = %68
  call void @llvm.trap() #11
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %66, i64 0, i32 0, i32 1
  %74 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %73, align 8
  %75 = icmp eq %"class.quic::QuicClientPromisedInfo"* %74, null
  br i1 %75, label %90, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to void (%"class.quic::QuicSession"*, i32, i32)***
  %78 = load void (%"class.quic::QuicSession"*, i32, i32)**, void (%"class.quic::QuicSession"*, i32, i32)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i32)*, void (%"class.quic::QuicSession"*, i32, i32)** %78, i64 64
  %80 = load void (%"class.quic::QuicSession"*, i32, i32)*, void (%"class.quic::QuicSession"*, i32, i32)** %79, align 8
  call void %80(%"class.quic::QuicSession"* %8, i32 %2, i32 11) #11
  %81 = call zeroext i1 @_ZN4quic11QuicSession12IsOpenStreamEj(%"class.quic::QuicSession"* %8, i32 %2) #11
  br i1 %81, label %288, label %82

82:                                               ; preds = %76
  %83 = call zeroext i1 @_ZN4quic11QuicSession14IsClosedStreamEj(%"class.quic::QuicSession"* %8, i32 %2) #11
  br i1 %83, label %288, label %84

84:                                               ; preds = %82
  %85 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to i1 (%"class.quic::QuicSession"*, i32)***
  %86 = load i1 (%"class.quic::QuicSession"*, i32)**, i1 (%"class.quic::QuicSession"*, i32)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.quic::QuicSession"*, i32)*, i1 (%"class.quic::QuicSession"*, i32)** %86, i64 109
  %88 = load i1 (%"class.quic::QuicSession"*, i32)*, i1 (%"class.quic::QuicSession"*, i32)** %87, align 8
  %89 = call zeroext i1 %88(%"class.quic::QuicSession"* %8, i32 %2) #11
  br label %288

90:                                               ; preds = %52, %72
  %91 = zext i32 %2 to i64
  %92 = add i64 %56, %91
  %93 = zext i64 %92 to i128
  %94 = mul nuw i128 %93, 11376068507788127593
  %95 = lshr i128 %94, 64
  %96 = xor i128 %95, %94
  %97 = trunc i128 %96 to i64
  %98 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 3
  %101 = load i64, i64* %100, align 8
  %102 = lshr i64 %97, 7
  %103 = ptrtoint i8* %99 to i64
  %104 = lshr i64 %103, 12
  %105 = xor i64 %104, %102
  %106 = trunc i128 %96 to i8
  %107 = and i8 %106, 127
  %108 = insertelement <16 x i8> undef, i8 %107, i32 0
  %109 = shufflevector <16 x i8> %108, <16 x i8> undef, <16 x i32> zeroinitializer
  %110 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  br label %111

111:                                              ; preds = %141, %90
  %112 = phi i64 [ %105, %90 ], [ %143, %141 ]
  %113 = phi i64 [ 0, %90 ], [ %142, %141 ]
  %114 = and i64 %112, %101
  %115 = getelementptr inbounds i8, i8* %99, i64 %114
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1
  %118 = icmp eq <16 x i8> %109, %117
  %119 = bitcast <16 x i1> %118 to i16
  %120 = icmp eq i16 %119, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %111
  %122 = zext i16 %119 to i32
  %123 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %110, align 8
  br label %124

124:                                              ; preds = %133, %121
  %125 = phi i32 [ %122, %121 ], [ %135, %133 ]
  %126 = call i32 @llvm.cttz.i32(i32 %125, i1 false) #11, !range !2
  %127 = zext i32 %126 to i64
  %128 = add i64 %114, %127
  %129 = and i64 %128, %101
  %130 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %123, i64 %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, %2
  br i1 %132, label %144, label %133, !prof !3

133:                                              ; preds = %124
  %134 = add i32 %125, -1
  %135 = and i32 %134, %125
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %124

137:                                              ; preds = %133, %111
  %138 = icmp eq <16 x i8> %117, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %139 = bitcast <16 x i1> %138 to i16
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %141, label %162, !prof !7

141:                                              ; preds = %137
  %142 = add i64 %113, 16
  %143 = add i64 %142, %114
  br label %111

144:                                              ; preds = %124
  %145 = getelementptr inbounds i8, i8* %99, i64 %129
  %146 = icmp ne i8* %145, null
  call void @llvm.assume(i1 %146) #11
  %147 = load i8, i8* %145, align 1
  %148 = icmp sgt i8 %147, -1
  br i1 %148, label %150, label %149, !prof !3

149:                                              ; preds = %144
  call void @llvm.trap() #11
  unreachable

150:                                              ; preds = %144
  %151 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %123, i64 %129, i32 0, i32 1, i32 0, i32 0, i32 0
  %152 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %151, align 8
  %153 = icmp eq %"class.quic::QuicClientPromisedInfo"* %152, null
  br i1 %153, label %162, label %154

154:                                              ; preds = %150
  %155 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %155, label %156, label %288

156:                                              ; preds = %154
  %157 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %157) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.4, i64 0, i64 0), i32 145, i32 2) #11
  %158 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %159 = bitcast %"class.std::__1::basic_ostringstream"* %158 to %"class.std::__1::basic_ostream"*
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %159, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i64 25) #11
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %160, i32 %2) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %157) #11
  br label %288

162:                                              ; preds = %137, %150
  %163 = call i8* @_Znwm(i64 312) #15
  %164 = bitcast i8* %163 to %"class.quic::QuicClientPromisedInfo"*
  %165 = load i8, i8* %40, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %162
  %168 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %168, i8* nonnull align 8 %33, i64 24, i1 false) #11
  br label %172

169:                                              ; preds = %162
  %170 = load i8*, i8** %34, align 8
  %171 = load i64, i64* %35, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %170, i64 %171) #11
  br label %172

172:                                              ; preds = %167, %169
  call void @_ZN4quic22QuicClientPromisedInfoC1EPNS_25QuicSpdyClientSessionBaseEjNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicClientPromisedInfo"* nonnull %164, %"class.quic::QuicSpdyClientSessionBase"* %0, i32 %2, %"class.std::__1::basic_string"* nonnull %7) #11
  %173 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %179) #15
  br label %180

180:                                              ; preds = %172, %177
  %181 = ptrtoint i8* %163 to i64
  call void @_ZN4quic22QuicClientPromisedInfo4InitEv(%"class.quic::QuicClientPromisedInfo"* nonnull %164) #11
  %182 = load %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex"** %11, align 8
  %183 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %182, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.634", %"class.absl::container_internal::raw_hash_map.634"* %183, i64 0, i32 0
  %185 = call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE22find_or_prepare_insertIS9_EENSH_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.635"* %184, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11, !noalias !8
  %186 = extractvalue { i64, i8 } %185, 0
  %187 = extractvalue { i64, i8 } %185, 1
  %188 = and i8 %187, 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %204, label %190

190:                                              ; preds = %180
  %191 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %182, i64 0, i32 1, i32 0, i32 0, i32 1
  %192 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %191, align 8, !noalias !8
  %193 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %192, i64 %186
  %194 = load i8, i8* %40, align 1, !noalias !8
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %190
  %197 = bitcast %"union.absl::container_internal::map_slot_type.636"* %193 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* nonnull align 8 %33, i64 24, i1 false) #11, !noalias !8
  br label %202

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %193, i64 0, i32 0, i32 0
  %200 = load i8*, i8** %34, align 8, !noalias !8
  %201 = load i64, i64* %35, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %199, i8* %200, i64 %201) #11, !noalias !8
  br label %202

202:                                              ; preds = %198, %196
  %203 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %192, i64 %186, i32 0, i32 1
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %203, align 8, !noalias !8
  br label %204

204:                                              ; preds = %202, %180
  %205 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.634", %"class.absl::container_internal::raw_hash_map.634"* %183, i64 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8, !noalias !8
  %207 = getelementptr inbounds i8, i8* %206, i64 %186
  %208 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %182, i64 0, i32 1, i32 0, i32 0, i32 1
  %209 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %208, align 8, !noalias !8
  %210 = icmp ne i8* %207, null
  call void @llvm.assume(i1 %210) #11, !noalias !8
  %211 = load i8, i8* %207, align 1
  %212 = icmp sgt i8 %211, -1
  br i1 %212, label %214, label %213, !prof !3

213:                                              ; preds = %204
  call void @llvm.trap() #11
  unreachable

214:                                              ; preds = %204
  %215 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %209, i64 %186, i32 0, i32 1
  %216 = bitcast %"class.quic::QuicClientPromisedInfo"** %215 to i8**
  store i8* %163, i8** %216, align 8
  %217 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0
  %218 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.643", %"class.absl::container_internal::raw_hash_map.643"* %217, i64 0, i32 0
  %219 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.643", %"class.absl::container_internal::raw_hash_map.643"* %217, i64 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8, !noalias !13
  %221 = load i64, i64* %100, align 8, !noalias !13
  %222 = ptrtoint i8* %220 to i64
  %223 = lshr i64 %222, 12
  %224 = xor i64 %223, %102
  br label %225

225:                                              ; preds = %255, %214
  %226 = phi i64 [ %224, %214 ], [ %257, %255 ]
  %227 = phi i64 [ 0, %214 ], [ %256, %255 ]
  %228 = and i64 %226, %221
  %229 = getelementptr inbounds i8, i8* %220, i64 %228
  %230 = bitcast i8* %229 to <16 x i8>*
  %231 = load <16 x i8>, <16 x i8>* %230, align 1, !noalias !13
  %232 = icmp eq <16 x i8> %109, %231
  %233 = bitcast <16 x i1> %232 to i16
  %234 = icmp eq i16 %233, 0
  br i1 %234, label %251, label %235

235:                                              ; preds = %225
  %236 = zext i16 %233 to i32
  %237 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %110, align 8, !noalias !13
  br label %238

238:                                              ; preds = %247, %235
  %239 = phi i32 [ %236, %235 ], [ %249, %247 ]
  %240 = call i32 @llvm.cttz.i32(i32 %239, i1 false) #11, !range !2
  %241 = zext i32 %240 to i64
  %242 = add i64 %228, %241
  %243 = and i64 %242, %221
  %244 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %237, i64 %243, i32 0, i32 0
  %245 = load i32, i32* %244, align 4, !noalias !13
  %246 = icmp eq i32 %245, %2
  br i1 %246, label %266, label %247, !prof !3

247:                                              ; preds = %238
  %248 = add i32 %239, -1
  %249 = and i32 %248, %239
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %238

251:                                              ; preds = %247, %225
  %252 = icmp eq <16 x i8> %231, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %253 = bitcast <16 x i1> %252 to i16
  %254 = icmp eq i16 %253, 0
  br i1 %254, label %255, label %258, !prof !7

255:                                              ; preds = %251
  %256 = add i64 %227, 16
  %257 = add i64 %256, %228
  br label %225

258:                                              ; preds = %251
  %259 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.644"* %218, i64 %97) #11, !noalias !13
  %260 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %110, align 8, !noalias !13
  %261 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %260, i64 %259, i32 0, i32 0
  store i32 %2, i32* %261, align 8, !noalias !13
  %262 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %260, i64 %259, i32 0, i32 1
  %263 = bitcast %"class.std::__1::unique_ptr.653"* %262 to i64*
  store i64 0, i64* %263, align 8, !noalias !13
  %264 = load i8*, i8** %219, align 8, !noalias !13
  %265 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %110, align 8, !noalias !13
  br label %266

266:                                              ; preds = %238, %258
  %267 = phi %"union.absl::container_internal::map_slot_type.645"* [ %265, %258 ], [ %237, %238 ]
  %268 = phi i8* [ %264, %258 ], [ %220, %238 ]
  %269 = phi i64 [ %259, %258 ], [ %243, %238 ]
  %270 = getelementptr inbounds i8, i8* %268, i64 %269
  %271 = icmp ne i8* %270, null
  call void @llvm.assume(i1 %271) #11, !noalias !13
  %272 = load i8, i8* %270, align 1
  %273 = icmp sgt i8 %272, -1
  br i1 %273, label %275, label %274, !prof !3

274:                                              ; preds = %266
  call void @llvm.trap() #11
  unreachable

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %267, i64 %269, i32 0, i32 1
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.653"* %276, i64 0, i32 0, i32 0, i32 0
  %278 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %277, align 8
  %279 = bitcast %"class.std::__1::unique_ptr.653"* %276 to i64*
  store i64 %181, i64* %279, align 8
  %280 = icmp eq %"class.quic::QuicClientPromisedInfo"* %278, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %275
  %282 = bitcast %"class.quic::QuicClientPromisedInfo"* %278 to void (%"class.quic::QuicClientPromisedInfo"*)***
  %283 = load void (%"class.quic::QuicClientPromisedInfo"*)**, void (%"class.quic::QuicClientPromisedInfo"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %283, i64 2
  %285 = load void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %284, align 8
  call void %285(%"class.quic::QuicClientPromisedInfo"* nonnull %278) #11
  br label %286

286:                                              ; preds = %281, %275
  %287 = call zeroext i1 @_ZN4quic22QuicClientPromisedInfo16OnPromiseHeadersERKN4spdy16Http2HeaderBlockE(%"class.quic::QuicClientPromisedInfo"* nonnull %164, %"class.spdy::Http2HeaderBlock"* dereferenceable(120) %3) #11
  br label %288

288:                                              ; preds = %156, %154, %84, %82, %76, %286
  %289 = phi i1 [ %287, %286 ], [ false, %76 ], [ false, %82 ], [ false, %84 ], [ false, %154 ], [ false, %156 ]
  %290 = load i8, i8* %40, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %292, label %294

292:                                              ; preds = %288
  %293 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %293) #15
  br label %294

294:                                              ; preds = %288, %292
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  br label %295

295:                                              ; preds = %26, %24, %18, %4, %294
  %296 = phi i1 [ %289, %294 ], [ false, %4 ], [ false, %18 ], [ false, %24 ], [ false, %26 ]
  ret i1 %296
}

declare zeroext i1 @_ZN4quic11QuicSession14IsClosedStreamEj(%"class.quic::QuicSession"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase13ResetPromisedEjNS_22QuicRstStreamErrorCodeE(%"class.quic::QuicSpdyClientSessionBase"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  %5 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to void (%"class.quic::QuicSession"*, i32, i32)***
  %6 = load void (%"class.quic::QuicSession"*, i32, i32)**, void (%"class.quic::QuicSession"*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.quic::QuicSession"*, i32, i32)*, void (%"class.quic::QuicSession"*, i32, i32)** %6, i64 64
  %8 = load void (%"class.quic::QuicSession"*, i32, i32)*, void (%"class.quic::QuicSession"*, i32, i32)** %7, align 8
  tail call void %8(%"class.quic::QuicSession"* %4, i32 %1, i32 %2) #11
  %9 = tail call zeroext i1 @_ZN4quic11QuicSession12IsOpenStreamEj(%"class.quic::QuicSession"* %4, i32 %1) #11
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN4quic11QuicSession14IsClosedStreamEj(%"class.quic::QuicSession"* %4, i32 %1) #11
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to i1 (%"class.quic::QuicSession"*, i32)***
  %14 = load i1 (%"class.quic::QuicSession"*, i32)**, i1 (%"class.quic::QuicSession"*, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.quic::QuicSession"*, i32)*, i1 (%"class.quic::QuicSession"*, i32)** %14, i64 109
  %16 = load i1 (%"class.quic::QuicSession"*, i32)*, i1 (%"class.quic::QuicSession"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.quic::QuicSession"* %4, i32 %1) #11
  br label %18

18:                                               ; preds = %12, %10, %3
  ret void
}

declare void @_ZN4quic19SpdyServerPushUtils25GetPromisedUrlFromHeadersERKN4spdy16Http2HeaderBlockE(%"class.std::__1::basic_string"* sret, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicClientPromisedInfo"* @_ZN4quic25QuicSpdyClientSessionBase16GetPromisedByUrlERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.quic::QuicSpdyClientSessionBase"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 2
  %4 = load %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex"** %3, align 8
  %5 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = zext i8 %8 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, -1
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %13
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10, %13
  %21 = phi i64 [ %15, %13 ], [ %12, %10 ]
  %22 = phi i64 [ %17, %13 ], [ %11, %10 ]
  %23 = inttoptr i64 %21 to i8*
  %24 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %25 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %24, i8* %23, i64 %22) #11
  %26 = add i64 %25, %22
  %27 = zext i64 %26 to i128
  %28 = mul nuw i128 %27, 11376068507788127593
  %29 = lshr i128 %28, 64
  %30 = xor i128 %29, %28
  %31 = trunc i128 %30 to i64
  %32 = tail call { i8*, %"union.absl::container_internal::map_slot_type.636"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE4findIS9_EENSL_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.635"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %31) #11
  %33 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %32, 0
  %34 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %32, 1
  %35 = icmp eq i8* %33, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %20
  %37 = load i8, i8* %33, align 1
  %38 = icmp sgt i8 %37, -1
  br i1 %38, label %40, label %39, !prof !3

39:                                               ; preds = %36
  tail call void @llvm.trap() #11
  unreachable

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %34, i64 0, i32 0, i32 1
  %42 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %41, align 8
  br label %43

43:                                               ; preds = %20, %40
  %44 = phi %"class.quic::QuicClientPromisedInfo"* [ %42, %40 ], [ null, %20 ]
  ret %"class.quic::QuicClientPromisedInfo"* %44
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4quic22QuicClientPromisedInfoC1EPNS_25QuicSpdyClientSessionBaseEjNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicSpdyClientSessionBase"*, i32, %"class.std::__1::basic_string"*) unnamed_addr #1

declare void @_ZN4quic22QuicClientPromisedInfo4InitEv(%"class.quic::QuicClientPromisedInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic22QuicClientPromisedInfo16OnPromiseHeadersERKN4spdy16Http2HeaderBlockE(%"class.quic::QuicClientPromisedInfo"*, %"class.spdy::Http2HeaderBlock"* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicSpdyStream"* @_ZN4quic25QuicSpdyClientSessionBase17GetPromisedStreamEj(%"class.quic::QuicSpdyClientSessionBase"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  %4 = tail call %"class.quic::QuicStream"* @_ZNK4quic11QuicSession15GetActiveStreamEj(%"class.quic::QuicSession"* %3, i32 %1) #11
  %5 = bitcast %"class.quic::QuicStream"* %4 to %"class.quic::QuicSpdyStream"*
  ret %"class.quic::QuicSpdyStream"* %5
}

declare %"class.quic::QuicStream"* @_ZNK4quic11QuicSession15GetActiveStreamEj(%"class.quic::QuicSession"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase14DeletePromisedEPNS_22QuicClientPromisedInfoE(%"class.quic::QuicSpdyClientSessionBase"*, %"class.quic::QuicClientPromisedInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 2
  %6 = load %"class.quic::QuicClientPushPromiseIndex"*, %"class.quic::QuicClientPushPromiseIndex"** %5, align 8
  %7 = getelementptr inbounds %"class.quic::QuicClientPushPromiseIndex", %"class.quic::QuicClientPushPromiseIndex"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.quic::QuicClientPromisedInfo", %"class.quic::QuicClientPromisedInfo"* %1, i64 0, i32 3
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !16
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %15, i64 24, i1 false) #11
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8, !noalias !16
  %19 = getelementptr inbounds %"class.quic::QuicClientPromisedInfo", %"class.quic::QuicClientPromisedInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %18, i64 %20) #11
  br label %21

21:                                               ; preds = %14, %16
  %22 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE5eraseIS9_EEmRKT_(%"class.absl::container_internal::raw_hash_set.635"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %21, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %31 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.quic::QuicClientPromisedInfo", %"class.quic::QuicClientPromisedInfo"* %1, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %4, align 4
  %35 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE5eraseIjEEmRSI_(%"class.absl::container_internal::raw_hash_set.644"* %31, i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  %36 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 8
  %37 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %36, align 8
  %38 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %37, i64 0, i32 8, i32 8, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 51
  br i1 %40, label %44, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 5
  %43 = load %"class.quic::QuicHeadersStream"*, %"class.quic::QuicHeadersStream"** %42, align 8
  call void @_ZN4quic17QuicHeadersStream27MaybeReleaseSequencerBufferEv(%"class.quic::QuicHeadersStream"* %43) #11
  br label %44

44:                                               ; preds = %41, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE5eraseIjEEmRSI_(%"class.absl::container_internal::raw_hash_set.644"*, i32* dereferenceable(4)) local_unnamed_addr #2 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %3 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i64 [ %19, %2 ], [ %57, %55 ]
  %27 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %24, align 8
  br label %38

38:                                               ; preds = %47, %35
  %39 = phi i32 [ %36, %35 ], [ %49, %47 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #11, !range !2
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %37, i64 %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %3
  br i1 %46, label %58, label %47, !prof !3

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %121, !prof !7

55:                                               ; preds = %51
  %56 = add i64 %27, 16
  %57 = add i64 %56, %28
  br label %25

58:                                               ; preds = %38
  %59 = getelementptr inbounds i8, i8* %13, i64 %43
  %60 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %60) #11
  %61 = load i8, i8* %59, align 1
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %58
  tail call void @llvm.trap() #11
  unreachable

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %37, i64 %43, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %65, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %65, align 8
  %67 = icmp eq %"class.quic::QuicClientPromisedInfo"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.quic::QuicClientPromisedInfo"* %66 to void (%"class.quic::QuicClientPromisedInfo"*)***
  %70 = load void (%"class.quic::QuicClientPromisedInfo"*)**, void (%"class.quic::QuicClientPromisedInfo"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %70, i64 2
  %72 = load void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %71, align 8
  tail call void %72(%"class.quic::QuicClientPromisedInfo"* nonnull %66) #11
  br label %73

73:                                               ; preds = %68, %64
  %74 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, -1
  store i64 %76, i64* %74, align 8
  %77 = bitcast %"class.absl::container_internal::raw_hash_set.644"* %0 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = ptrtoint i8* %59 to i64
  %80 = sub i64 %79, %78
  %81 = add i64 %80, -16
  %82 = load i64, i64* %14, align 8
  %83 = and i64 %81, %82
  %84 = bitcast i8* %59 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1
  %86 = icmp eq <16 x i8> %85, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %87 = bitcast <16 x i1> %86 to i16
  %88 = inttoptr i64 %78 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %83
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1
  %92 = icmp eq <16 x i8> %91, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %93 = bitcast <16 x i1> %92 to i16
  %94 = icmp ne i16 %93, 0
  %95 = icmp ne i16 %87, 0
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %107

97:                                               ; preds = %73
  %98 = zext i16 %87 to i32
  %99 = zext i16 %93 to i32
  %100 = tail call i32 @llvm.cttz.i32(i32 %98, i1 false) #11, !range !2
  %101 = shl nuw i32 %99, 16
  %102 = tail call i32 @llvm.ctlz.i32(i32 %101, i1 false) #11, !range !2
  %103 = add nuw nsw i32 %102, %100
  %104 = icmp ult i32 %103, 16
  %105 = zext i1 %104 to i64
  %106 = select i1 %104, i8 -128, i8 -2
  br label %107

107:                                              ; preds = %73, %97
  %108 = phi i64 [ 0, %73 ], [ %105, %97 ]
  %109 = phi i8 [ -2, %73 ], [ %106, %97 ]
  %110 = getelementptr inbounds i8, i8* %88, i64 %80
  store i8 %109, i8* %110, align 1
  %111 = load i8*, i8** %12, align 8
  %112 = add i64 %80, -15
  %113 = load i64, i64* %14, align 8
  %114 = and i64 %113, %112
  %115 = and i64 %113, 15
  %116 = add i64 %114, %115
  %117 = getelementptr inbounds i8, i8* %111, i64 %116
  store i8 %109, i8* %117, align 1
  %118 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, %108
  store i64 %120, i64* %118, align 8
  br label %121

121:                                              ; preds = %51, %107
  %122 = phi i64 [ 1, %107 ], [ 0, %51 ]
  ret i64 %122
}

declare void @_ZN4quic17QuicHeadersStream27MaybeReleaseSequencerBufferEv(%"class.quic::QuicHeadersStream"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase20OnPushStreamTimedOutEj(%"class.quic::QuicSpdyClientSessionBase"* nocapture, i32) unnamed_addr #8 align 2 {
  ret void
}

declare zeroext i1 @_ZN4quic11QuicSession12IsOpenStreamEj(%"class.quic::QuicSession"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25QuicSpdyClientSessionBase14OnStreamClosedEj(%"class.quic::QuicSpdyClientSessionBase"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  tail call void @_ZN4quic11QuicSession14OnStreamClosedEj(%"class.quic::QuicSession"* %3, i32 %1) #11
  %4 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 8
  %5 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %4, align 8
  %6 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %5, i64 0, i32 8, i32 8, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 51
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 5
  %11 = load %"class.quic::QuicHeadersStream"*, %"class.quic::QuicHeadersStream"** %10, align 8
  tail call void @_ZN4quic17QuicHeadersStream27MaybeReleaseSequencerBufferEv(%"class.quic::QuicHeadersStream"* %11) #11
  br label %12

12:                                               ; preds = %9, %2
  ret void
}

declare void @_ZN4quic11QuicSession14OnStreamClosedEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic25QuicSpdyClientSessionBase41ShouldReleaseHeadersStreamSequencerBufferEv(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK4quic15QuicSpdySession23HasActiveRequestStreamsEv(%"class.quic::QuicSpdySession"* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ false, %1 ], [ %7, %4 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK4quic15QuicSpdySession23HasActiveRequestStreamsEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic25QuicSpdyClientSessionBase25ShouldKeepConnectionAliveEv(%"class.quic::QuicSpdyClientSessionBase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK4quic15QuicSpdySession25ShouldKeepConnectionAliveEv(%"class.quic::QuicSpdySession"* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 20
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ true, %1 ], [ %7, %4 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK4quic15QuicSpdySession25ShouldKeepConnectionAliveEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic25QuicSpdyClientSessionBase15OnSettingsFrameERKNS_13SettingsFrameE(%"class.quic::QuicSpdyClientSessionBase"*, %"struct.quic::SettingsFrame"* dereferenceable(40)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::unique_ptr.577", align 8
  %7 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicSession"*
  %8 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 0, i32 38
  %9 = load i8, i8* %8, align 1, !range !19
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %248

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0, i32 16
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, -1
  br i1 %15, label %90, label %16

16:                                               ; preds = %11
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, 6
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = load %"union.absl::container_internal::map_slot_type.523"*, %"union.absl::container_internal::map_slot_type.523"** %36, align 8
  br label %38

38:                                               ; preds = %67, %16
  %39 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %40 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %41 = and i64 %39, %27
  %42 = getelementptr inbounds i8, i8* %25, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp eq <16 x i8> %35, %44
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %38
  %49 = zext i16 %46 to i32
  br label %50

50:                                               ; preds = %59, %48
  %51 = phi i32 [ %49, %48 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #11, !range !2
  %53 = zext i32 %52 to i64
  %54 = add i64 %41, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.523", %"union.absl::container_internal::map_slot_type.523"* %37, i64 %55, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 6
  br i1 %58, label %70, label %59, !prof !3

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %38
  %64 = icmp eq <16 x i8> %44, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %76, !prof !7

67:                                               ; preds = %63
  %68 = add i64 %40, 16
  %69 = add i64 %68, %41
  br label %38

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #11
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %90, label %75, !prof !3

75:                                               ; preds = %70
  tail call void @llvm.trap() #11
  unreachable

76:                                               ; preds = %63
  %77 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #11
  %78 = tail call i8* @_Znwm(i64 80) #15
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> <i64 77, i64 -9223372036854775728>, <2 x i64>* %81, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* align 1 getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i64 77, i1 false) #11
  %82 = getelementptr inbounds i8, i8* %78, i64 77
  store i8 0, i8* %82, align 1
  call void @_ZN4quic15QuicSpdySession26CloseConnectionWithDetailsENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSpdySession"* %12, i32 164, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %83 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %76
  %88 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %76, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  br label %388

90:                                               ; preds = %11, %70
  %91 = tail call %"class.quic::QpackEncoder"* @_ZN4quic15QuicSpdySession13qpack_encoderEv(%"class.quic::QuicSpdySession"* %12) #11
  %92 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %91, i64 0, i32 5
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %169, label %95

95:                                               ; preds = %90
  %96 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %97 = add i64 %96, 7
  %98 = zext i64 %97 to i128
  %99 = mul nuw i128 %98, 11376068507788127593
  %100 = lshr i128 %99, 64
  %101 = xor i128 %100, %99
  %102 = trunc i128 %101 to i64
  %103 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 3
  %106 = load i64, i64* %105, align 8
  %107 = lshr i64 %102, 7
  %108 = ptrtoint i8* %104 to i64
  %109 = lshr i64 %108, 12
  %110 = xor i64 %107, %109
  %111 = trunc i128 %101 to i8
  %112 = and i8 %111, 127
  %113 = insertelement <16 x i8> undef, i8 %112, i32 0
  %114 = shufflevector <16 x i8> %113, <16 x i8> undef, <16 x i32> zeroinitializer
  %115 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %116 = load %"union.absl::container_internal::map_slot_type.523"*, %"union.absl::container_internal::map_slot_type.523"** %115, align 8
  br label %117

117:                                              ; preds = %146, %95
  %118 = phi i64 [ %110, %95 ], [ %148, %146 ]
  %119 = phi i64 [ 0, %95 ], [ %147, %146 ]
  %120 = and i64 %118, %106
  %121 = getelementptr inbounds i8, i8* %104, i64 %120
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1
  %124 = icmp eq <16 x i8> %114, %123
  %125 = bitcast <16 x i1> %124 to i16
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %142, label %127

127:                                              ; preds = %117
  %128 = zext i16 %125 to i32
  br label %129

129:                                              ; preds = %138, %127
  %130 = phi i32 [ %128, %127 ], [ %140, %138 ]
  %131 = tail call i32 @llvm.cttz.i32(i32 %130, i1 false) #11, !range !2
  %132 = zext i32 %131 to i64
  %133 = add i64 %120, %132
  %134 = and i64 %133, %106
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.523", %"union.absl::container_internal::map_slot_type.523"* %116, i64 %134, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = icmp eq i64 %136, 7
  br i1 %137, label %149, label %138, !prof !3

138:                                              ; preds = %129
  %139 = add i32 %130, -1
  %140 = and i32 %139, %130
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %129

142:                                              ; preds = %138, %117
  %143 = icmp eq <16 x i8> %123, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %144 = bitcast <16 x i1> %143 to i16
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %146, label %155, !prof !7

146:                                              ; preds = %142
  %147 = add i64 %119, 16
  %148 = add i64 %147, %120
  br label %117

149:                                              ; preds = %129
  %150 = getelementptr inbounds i8, i8* %104, i64 %134
  %151 = icmp ne i8* %150, null
  tail call void @llvm.assume(i1 %151) #11
  %152 = load i8, i8* %150, align 1
  %153 = icmp sgt i8 %152, -1
  br i1 %153, label %169, label %154, !prof !3

154:                                              ; preds = %149
  tail call void @llvm.trap() #11
  unreachable

155:                                              ; preds = %142
  %156 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #11
  %157 = tail call i8* @_Znwm(i64 80) #15
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %157, i8** %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = bitcast i64* %159 to <2 x i64>*
  store <2 x i64> <i64 76, i64 -9223372036854775728>, <2 x i64>* %160, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %157, i8* align 1 getelementptr inbounds ([77 x i8], [77 x i8]* @.str.7, i64 0, i64 0), i64 76, i1 false) #11
  %161 = getelementptr inbounds i8, i8* %157, i64 76
  store i8 0, i8* %161, align 1
  call void @_ZN4quic15QuicSpdySession26CloseConnectionWithDetailsENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSpdySession"* %12, i32 164, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %162 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %155
  %167 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %167) #15
  br label %168

168:                                              ; preds = %155, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #11
  br label %388

169:                                              ; preds = %90, %149
  %170 = tail call %"class.quic::QpackEncoder"* @_ZN4quic15QuicSpdySession13qpack_encoderEv(%"class.quic::QuicSpdySession"* %12) #11
  %171 = getelementptr inbounds %"class.quic::QpackEncoder", %"class.quic::QpackEncoder"* %170, i64 0, i32 4, i32 0, i32 4
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %248, label %174

174:                                              ; preds = %169
  %175 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %176 = add i64 %175, 1
  %177 = zext i64 %176 to i128
  %178 = mul nuw i128 %177, 11376068507788127593
  %179 = lshr i128 %178, 64
  %180 = xor i128 %179, %178
  %181 = trunc i128 %180 to i64
  %182 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 3
  %185 = load i64, i64* %184, align 8
  %186 = lshr i64 %181, 7
  %187 = ptrtoint i8* %183 to i64
  %188 = lshr i64 %187, 12
  %189 = xor i64 %186, %188
  %190 = trunc i128 %180 to i8
  %191 = and i8 %190, 127
  %192 = insertelement <16 x i8> undef, i8 %191, i32 0
  %193 = shufflevector <16 x i8> %192, <16 x i8> undef, <16 x i32> zeroinitializer
  %194 = getelementptr inbounds %"struct.quic::SettingsFrame", %"struct.quic::SettingsFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %195 = load %"union.absl::container_internal::map_slot_type.523"*, %"union.absl::container_internal::map_slot_type.523"** %194, align 8
  br label %196

196:                                              ; preds = %225, %174
  %197 = phi i64 [ %189, %174 ], [ %227, %225 ]
  %198 = phi i64 [ 0, %174 ], [ %226, %225 ]
  %199 = and i64 %197, %185
  %200 = getelementptr inbounds i8, i8* %183, i64 %199
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1
  %203 = icmp eq <16 x i8> %193, %202
  %204 = bitcast <16 x i1> %203 to i16
  %205 = icmp eq i16 %204, 0
  br i1 %205, label %221, label %206

206:                                              ; preds = %196
  %207 = zext i16 %204 to i32
  br label %208

208:                                              ; preds = %217, %206
  %209 = phi i32 [ %207, %206 ], [ %219, %217 ]
  %210 = tail call i32 @llvm.cttz.i32(i32 %209, i1 false) #11, !range !2
  %211 = zext i32 %210 to i64
  %212 = add i64 %199, %211
  %213 = and i64 %212, %185
  %214 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.523", %"union.absl::container_internal::map_slot_type.523"* %195, i64 %213, i32 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, 1
  br i1 %216, label %228, label %217, !prof !3

217:                                              ; preds = %208
  %218 = add i32 %209, -1
  %219 = and i32 %218, %209
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %208

221:                                              ; preds = %217, %196
  %222 = icmp eq <16 x i8> %202, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %223 = bitcast <16 x i1> %222 to i16
  %224 = icmp eq i16 %223, 0
  br i1 %224, label %225, label %234, !prof !7

225:                                              ; preds = %221
  %226 = add i64 %198, 16
  %227 = add i64 %226, %199
  br label %196

228:                                              ; preds = %208
  %229 = getelementptr inbounds i8, i8* %183, i64 %213
  %230 = icmp ne i8* %229, null
  tail call void @llvm.assume(i1 %230) #11
  %231 = load i8, i8* %229, align 1
  %232 = icmp sgt i8 %231, -1
  br i1 %232, label %248, label %233, !prof !3

233:                                              ; preds = %228
  tail call void @llvm.trap() #11
  unreachable

234:                                              ; preds = %221
  %235 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #11
  %236 = tail call i8* @_Znwm(i64 80) #15
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %236, i8** %237, align 8
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %239 = bitcast i64* %238 to <2 x i64>*
  store <2 x i64> <i64 79, i64 -9223372036854775728>, <2 x i64>* %239, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %236, i8* align 1 getelementptr inbounds ([80 x i8], [80 x i8]* @.str.8, i64 0, i64 0), i64 79, i1 false) #11
  %240 = getelementptr inbounds i8, i8* %236, i64 79
  store i8 0, i8* %240, align 1
  call void @_ZN4quic15QuicSpdySession26CloseConnectionWithDetailsENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSpdySession"* %12, i32 164, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #11
  %241 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %234
  %246 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %246) #15
  br label %247

247:                                              ; preds = %234, %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #11
  br label %388

248:                                              ; preds = %2, %169, %228
  %249 = getelementptr inbounds %"class.quic::QuicSpdyClientSessionBase", %"class.quic::QuicSpdyClientSessionBase"* %0, i64 0, i32 0
  %250 = tail call zeroext i1 @_ZN4quic15QuicSpdySession15OnSettingsFrameERKNS_13SettingsFrameE(%"class.quic::QuicSpdySession"* %249, %"struct.quic::SettingsFrame"* dereferenceable(40) %1) #11
  br i1 %250, label %251, label %388

251:                                              ; preds = %248
  %252 = bitcast %"class.std::__1::unique_ptr.577"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #11
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %6, i64 0, i32 0, i32 0, i32 0
  %254 = bitcast %"class.std::__1::unique_ptr.577"* %6 to i64*
  store i64 0, i64* %254, align 8
  %255 = call i64 @_ZN4quic11HttpEncoder22SerializeSettingsFrameERKNS_13SettingsFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::SettingsFrame"* dereferenceable(40) %1, %"class.std::__1::unique_ptr.577"* nonnull %6) #11
  %256 = load i8*, i8** %253, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 %255
  %258 = call i8* @_Znwm(i64 24) #15
  %259 = bitcast i8* %258 to %"class.std::__1::vector.720"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 0, i64 24, i1 false) #11
  %260 = icmp eq i64 %255, 0
  br i1 %260, label %374, label %261

261:                                              ; preds = %251
  %262 = icmp slt i64 %255, 0
  br i1 %262, label %263, label %265

263:                                              ; preds = %261
  %264 = bitcast i8* %258 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %264) #16
  unreachable

265:                                              ; preds = %261
  %266 = call i8* @_Znwm(i64 %255) #15
  %267 = getelementptr inbounds i8, i8* %258, i64 8
  %268 = bitcast i8* %267 to i8**
  store i8* %266, i8** %268, align 8
  %269 = bitcast i8* %258 to i8**
  store i8* %266, i8** %269, align 8
  %270 = getelementptr inbounds i8, i8* %266, i64 %255
  %271 = getelementptr inbounds i8, i8* %258, i64 16
  %272 = bitcast i8* %271 to i8**
  store i8* %270, i8** %272, align 8
  %273 = bitcast i8* %267 to i64*
  %274 = icmp ult i64 %255, 32
  br i1 %274, label %361, label %275

275:                                              ; preds = %265
  %276 = getelementptr i8, i8* %266, i64 %255
  %277 = icmp ult i8* %266, %257
  %278 = icmp ult i8* %256, %276
  %279 = and i1 %277, %278
  br i1 %279, label %361, label %280

280:                                              ; preds = %275
  %281 = and i64 %255, -32
  %282 = getelementptr i8, i8* %266, i64 %281
  %283 = getelementptr i8, i8* %256, i64 %281
  %284 = add i64 %281, -32
  %285 = lshr exact i64 %284, 5
  %286 = add nuw nsw i64 %285, 1
  %287 = and i64 %286, 3
  %288 = icmp ult i64 %284, 96
  br i1 %288, label %340, label %289

289:                                              ; preds = %280
  %290 = sub nsw i64 %286, %287
  br label %291

291:                                              ; preds = %291, %289
  %292 = phi i64 [ 0, %289 ], [ %337, %291 ]
  %293 = phi i64 [ %290, %289 ], [ %338, %291 ]
  %294 = getelementptr i8, i8* %266, i64 %292
  %295 = getelementptr i8, i8* %256, i64 %292
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !20
  %298 = getelementptr i8, i8* %295, i64 16
  %299 = bitcast i8* %298 to <16 x i8>*
  %300 = load <16 x i8>, <16 x i8>* %299, align 1, !alias.scope !20
  %301 = bitcast i8* %294 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %301, align 1, !alias.scope !23, !noalias !20
  %302 = getelementptr i8, i8* %294, i64 16
  %303 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %300, <16 x i8>* %303, align 1, !alias.scope !23, !noalias !20
  %304 = or i64 %292, 32
  %305 = getelementptr i8, i8* %266, i64 %304
  %306 = getelementptr i8, i8* %256, i64 %304
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !20
  %309 = getelementptr i8, i8* %306, i64 16
  %310 = bitcast i8* %309 to <16 x i8>*
  %311 = load <16 x i8>, <16 x i8>* %310, align 1, !alias.scope !20
  %312 = bitcast i8* %305 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %312, align 1, !alias.scope !23, !noalias !20
  %313 = getelementptr i8, i8* %305, i64 16
  %314 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %311, <16 x i8>* %314, align 1, !alias.scope !23, !noalias !20
  %315 = or i64 %292, 64
  %316 = getelementptr i8, i8* %266, i64 %315
  %317 = getelementptr i8, i8* %256, i64 %315
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !20
  %320 = getelementptr i8, i8* %317, i64 16
  %321 = bitcast i8* %320 to <16 x i8>*
  %322 = load <16 x i8>, <16 x i8>* %321, align 1, !alias.scope !20
  %323 = bitcast i8* %316 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %323, align 1, !alias.scope !23, !noalias !20
  %324 = getelementptr i8, i8* %316, i64 16
  %325 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %322, <16 x i8>* %325, align 1, !alias.scope !23, !noalias !20
  %326 = or i64 %292, 96
  %327 = getelementptr i8, i8* %266, i64 %326
  %328 = getelementptr i8, i8* %256, i64 %326
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !20
  %331 = getelementptr i8, i8* %328, i64 16
  %332 = bitcast i8* %331 to <16 x i8>*
  %333 = load <16 x i8>, <16 x i8>* %332, align 1, !alias.scope !20
  %334 = bitcast i8* %327 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %334, align 1, !alias.scope !23, !noalias !20
  %335 = getelementptr i8, i8* %327, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  store <16 x i8> %333, <16 x i8>* %336, align 1, !alias.scope !23, !noalias !20
  %337 = add i64 %292, 128
  %338 = add i64 %293, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %291, !llvm.loop !25

340:                                              ; preds = %291, %280
  %341 = phi i64 [ 0, %280 ], [ %337, %291 ]
  %342 = icmp eq i64 %287, 0
  br i1 %342, label %359, label %343

343:                                              ; preds = %340, %343
  %344 = phi i64 [ %356, %343 ], [ %341, %340 ]
  %345 = phi i64 [ %357, %343 ], [ %287, %340 ]
  %346 = getelementptr i8, i8* %266, i64 %344
  %347 = getelementptr i8, i8* %256, i64 %344
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !20
  %350 = getelementptr i8, i8* %347, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  %352 = load <16 x i8>, <16 x i8>* %351, align 1, !alias.scope !20
  %353 = bitcast i8* %346 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %353, align 1, !alias.scope !23, !noalias !20
  %354 = getelementptr i8, i8* %346, i64 16
  %355 = bitcast i8* %354 to <16 x i8>*
  store <16 x i8> %352, <16 x i8>* %355, align 1, !alias.scope !23, !noalias !20
  %356 = add i64 %344, 32
  %357 = add i64 %345, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %343, !llvm.loop !27

359:                                              ; preds = %343, %340
  %360 = icmp eq i64 %255, %281
  br i1 %360, label %371, label %361

361:                                              ; preds = %359, %275, %265
  %362 = phi i8* [ %266, %275 ], [ %266, %265 ], [ %282, %359 ]
  %363 = phi i8* [ %256, %275 ], [ %256, %265 ], [ %283, %359 ]
  br label %364

364:                                              ; preds = %361, %364
  %365 = phi i8* [ %369, %364 ], [ %362, %361 ]
  %366 = phi i8* [ %368, %364 ], [ %363, %361 ]
  %367 = load i8, i8* %366, align 1
  store i8 %367, i8* %365, align 1
  %368 = getelementptr inbounds i8, i8* %366, i64 1
  %369 = getelementptr inbounds i8, i8* %365, i64 1
  %370 = icmp eq i8* %368, %257
  br i1 %370, label %371, label %364, !llvm.loop !29

371:                                              ; preds = %364, %359
  %372 = phi i8* [ %282, %359 ], [ %369, %364 ]
  %373 = ptrtoint i8* %372 to i64
  store i64 %373, i64* %273, align 8
  br label %374

374:                                              ; preds = %371, %251
  %375 = bitcast %"class.quic::QuicSpdyClientSessionBase"* %0 to %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)***
  %376 = load %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)**, %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)*** %375, align 8
  %377 = getelementptr inbounds %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)*, %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)** %376, i64 104
  %378 = load %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)*, %"class.quic::QuicCryptoStream"* (%"class.quic::QuicSession"*)** %377, align 8
  %379 = call %"class.quic::QuicCryptoStream"* %378(%"class.quic::QuicSession"* %7) #11
  %380 = bitcast %"class.quic::QuicCryptoStream"* %379 to void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)***
  %381 = load void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)**, void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)*** %380, align 8
  %382 = getelementptr inbounds void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)*, void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)** %381, i64 44
  %383 = load void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)*, void (%"class.quic::QuicCryptoStream"*, %"class.std::__1::vector.720"*)** %382, align 8
  call void %383(%"class.quic::QuicCryptoStream"* %379, %"class.std::__1::vector.720"* nonnull %259) #11
  %384 = load i8*, i8** %253, align 8
  store i8* null, i8** %253, align 8
  %385 = icmp eq i8* %384, null
  br i1 %385, label %387, label %386

386:                                              ; preds = %374
  call void @_ZdaPv(i8* nonnull %384) #15
  br label %387

387:                                              ; preds = %374, %386
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #11
  br label %388

388:                                              ; preds = %248, %387, %247, %168, %89
  %389 = phi i1 [ true, %387 ], [ false, %89 ], [ false, %168 ], [ false, %247 ], [ false, %248 ]
  ret i1 %389
}

declare void @_ZN4quic15QuicSpdySession26CloseConnectionWithDetailsENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSpdySession"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.quic::QpackEncoder"* @_ZN4quic15QuicSpdySession13qpack_encoderEv(%"class.quic::QuicSpdySession"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession15OnSettingsFrameERKNS_13SettingsFrameE(%"class.quic::QuicSpdySession"*, %"struct.quic::SettingsFrame"* dereferenceable(40)) unnamed_addr #1

declare i64 @_ZN4quic11HttpEncoder22SerializeSettingsFrameERKNS_13SettingsFrameEPNSt3__110unique_ptrIA_cNS4_14default_deleteIS6_EEEE(%"struct.quic::SettingsFrame"* dereferenceable(40), %"class.std::__1::unique_ptr.577"*) local_unnamed_addr #1

declare void @_ZN4quic11QuicSession13OnStreamFrameERKNS_15QuicStreamFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic11QuicSession13OnCryptoFrameERKNS_15QuicCryptoFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicCryptoFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic11QuicSession19OnWindowUpdateFrameERKNS_21QuicWindowUpdateFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicWindowUpdateFrame"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic11QuicSession14OnBlockedFrameERKNS_16QuicBlockedFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicBlockedFrame"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic11QuicSession11OnRstStreamERKNS_18QuicRstStreamFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN4quic11QuicSession8OnGoAwayERKNS_15QuicGoAwayFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicGoAwayFrame"* dereferenceable(40)) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession17OnMessageReceivedEN4absl11string_viewE(%"class.quic::QuicSpdySession"*, i8*, i64) unnamed_addr #1

declare void @_ZN4quic11QuicSession23OnHandshakeDoneReceivedEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession18OnNewTokenReceivedEN4absl11string_viewE(%"class.quic::QuicSession"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession17OnMaxStreamsFrameERKNS_19QuicMaxStreamsFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicMaxStreamsFrame"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession21OnStreamsBlockedFrameERKNS_23QuicStreamsBlockedFrameE(%"class.quic::QuicSpdySession"*, %"struct.quic::QuicStreamsBlockedFrame"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic11QuicSession18OnConnectionClosedERKNS_24QuicConnectionCloseFrameENS_21ConnectionCloseSourceE(%"class.quic::QuicSession"*, %"struct.quic::QuicConnectionCloseFrame"* dereferenceable(56), i32) unnamed_addr #1

declare void @_ZN4quic11QuicSession14OnWriteBlockedEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession30OnSuccessfulVersionNegotiationERKNS_17ParsedQuicVersionE(%"class.quic::QuicSession"*, %"struct.quic::ParsedQuicVersion"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4quic11QuicSession16OnPacketReceivedERKNS_17QuicSocketAddressES3_b(%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24), i1 zeroext) unnamed_addr #1

declare void @_ZN4quic11QuicSession10OnCanWriteEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession15SendProbingDataEv(%"class.quic::QuicSession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic11QuicSession22ValidateStatelessResetERKNS_17QuicSocketAddressES3_(%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11QuicSession24OnCongestionWindowChangeENS_8QuicTimeE(%"class.quic::QuicSession"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11QuicSession21OnConnectionMigrationENS_17AddressChangeTypeE(%"class.quic::QuicSession"*, i8 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4quic11QuicSession15OnPathDegradingEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession39OnForwardProgressMadeAfterPathDegradingEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession30OnAckNeedsRetransmittableFrameEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession16SendAckFrequencyERKNS_21QuicAckFrequencyFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicAckFrequencyFrame"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN4quic11QuicSession19SendNewConnectionIdERKNS_24QuicNewConnectionIdFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicNewConnectionIdFrame"* dereferenceable(56)) unnamed_addr #1

declare void @_ZN4quic11QuicSession22SendRetireConnectionIdEm(%"class.quic::QuicSession"*, i64) unnamed_addr #1

declare void @_ZN4quic11QuicSession26OnServerConnectionIdIssuedERKNS_16QuicConnectionIdE(%"class.quic::QuicSession"*, %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic11QuicSession27OnServerConnectionIdRetiredERKNS_16QuicConnectionIdE(%"class.quic::QuicSession"*, %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession21WillingAndAbleToWriteEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZNK4quic11QuicSession24GetStreamsInfoForLoggingEv(%"class.std::__1::basic_string"* sret, %"class.quic::QuicSession"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession22AllowSelfAddressChangeEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare i32 @_ZNK4quic11QuicSession17GetHandshakeStateEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession18OnStopSendingFrameERKNS_20QuicStopSendingFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicStopSendingFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic11QuicSession17OnPacketDecryptedENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #1

declare void @_ZN4quic11QuicSession26OnOneRttPacketAcknowledgedEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession21OnHandshakePacketSentEv(%"class.quic::QuicSession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic11QuicSession11OnKeyUpdateENS_15KeyUpdateReasonE(%"class.quic::QuicSession"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.quic::QuicDecrypter"* @_ZN4quic11QuicSession42AdvanceKeysAndCreateCurrentOneRttDecrypterEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare %"class.quic::QuicEncrypter"* @_ZN4quic11QuicSession28CreateCurrentOneRttEncrypterEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession25BeforeConnectionCloseSentEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession13ValidateTokenEN4absl11string_viewE(%"class.quic::QuicSession"*, i8*, i64) unnamed_addr #1

declare void @_ZN4quic11QuicSession21MaybeSendAddressTokenEv(%"class.quic::QuicSession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4quic11QuicSession20IsKnownServerAddressERKNS_17QuicSocketAddressE(%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN4quic15QuicSpdySession10InitializeEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZN4quic11QuicSession15WriteStreamDataEjmmPNS_14QuicDataWriterE(%"class.quic::QuicSession"*, i32, i64, i64, %"class.quic::QuicDataWriter"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession15WriteCryptoDataENS_15EncryptionLevelEmmPNS_14QuicDataWriterE(%"class.quic::QuicSession"*, i8 signext, i64, i64, %"class.quic::QuicDataWriter"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession12OnFrameAckedERKNS_9QuicFrameENS_8QuicTime5DeltaES4_(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24), i64, i64) unnamed_addr #1

declare void @_ZN4quic11QuicSession26OnStreamFrameRetransmittedERKNS_15QuicStreamFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic11QuicSession11OnFrameLostERKNS_9QuicFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic11QuicSession16RetransmitFramesERKNSt3__16vectorINS_9QuicFrameENS1_9allocatorIS3_EEEENS_16TransmissionTypeE(%"class.quic::QuicSession"*, %"class.std::__1::vector.82"* dereferenceable(24), i8 signext) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession18IsFrameOutstandingERKNS_9QuicFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession20HasUnackedCryptoDataEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession20HasUnackedStreamDataEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession14SendMaxStreamsEjb(%"class.quic::QuicSession"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession28OnCanCreateNewOutgoingStreamEb(%"class.quic::QuicSpdySession"*, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic11QuicSession16ProcessUdpPacketERKNS_17QuicSocketAddressES3_RKNS_18QuicReceivedPacketE(%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicReceivedPacket"* dereferenceable(64)) unnamed_addr #1

declare void @_ZN4quic11QuicSession14OnMessageAckedEjNS_8QuicTimeE(%"class.quic::QuicSession"*, i32, i64) unnamed_addr #1

declare void @_ZN4quic11QuicSession13OnMessageLostEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

declare void @_ZN4quic11QuicSession26OnControlFrameManagerErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession17WriteControlFrameERKNS_9QuicFrameENS_16TransmissionTypeE(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24), i8 signext) unnamed_addr #1

declare void @_ZN4quic11QuicSession11ResetStreamEjNS_22QuicRstStreamErrorCodeE(%"class.quic::QuicSession"*, i32, i32) unnamed_addr #1

declare void @_ZN4quic11QuicSession10SendGoAwayENS_13QuicErrorCodeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic11QuicSession11SendBlockedEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

declare void @_ZN4quic11QuicSession16SendWindowUpdateEjm(%"class.quic::QuicSession"*, i32, i64) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession23IsEncryptionEstablishedEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession10OnAlpsDataEPKhm(%"class.absl::optional.415"* sret, %"class.quic::QuicSpdySession"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession27OnNewDecryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicDecrypterENS2_14default_deleteIS4_EEEEbb(%"class.quic::QuicSession"*, i8 signext, %"class.quic::QuicDecrypter"*, i1 zeroext, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession27OnNewEncryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicEncrypterENS2_14default_deleteIS4_EEEE(%"class.quic::QuicSpdySession"*, i8 signext, %"class.quic::QuicEncrypter"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession25SetDefaultEncryptionLevelENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #1

declare void @_ZN4quic11QuicSession22OnTlsHandshakeCompleteEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession23DiscardOldDecryptionKeyENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #1

declare void @_ZN4quic11QuicSession23DiscardOldEncryptionKeyENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #1

declare void @_ZN4quic11QuicSession21NeuterUnencryptedDataEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession19NeuterHandshakeDataEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession17OnZeroRttRejectedEi(%"class.quic::QuicSession"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession23FillTransportParametersEPNS_19TransportParametersE(%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"*) unnamed_addr #1

declare i32 @_ZN4quic11QuicSession26ProcessTransportParametersERKNS_19TransportParametersEbPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"* dereferenceable(928), i1 zeroext, %"class.std::__1::basic_string"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession23OnHandshakeCallbackDoneEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic11QuicSession21PacketFlusherAttachedEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, i64, %"class.std::__1::basic_string"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession22RegisterStreamPriorityEjbRKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSession"*, i32, i1 zeroext, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic11QuicSession24UnregisterStreamPriorityEjb(%"class.quic::QuicSession"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic11QuicSession20UpdateStreamPriorityEjRKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSession"*, i32, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic11QuicSession10WritevDataEjmmNS_18StreamSendingStateENS_16TransmissionTypeEN4absl8optionalINS_15EncryptionLevelEEE() unnamed_addr

declare i64 @_ZN4quic11QuicSession14SendCryptoDataENS_15EncryptionLevelEmmNS_16TransmissionTypeE(%"class.quic::QuicSession"*, i8 signext, i64, i64, i8 signext) unnamed_addr #1

declare void @_ZN4quic11QuicSession28OnCryptoHandshakeMessageSentERKNS_22CryptoHandshakeMessageE(%"class.quic::QuicSession"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN4quic11QuicSession32OnCryptoHandshakeMessageReceivedERKNS_22CryptoHandshakeMessageE(%"class.quic::QuicSession"*, %"class.quic::CryptoHandshakeMessage"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN4quic11QuicSession31MarkConnectionLevelWriteBlockedEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession11ShouldYieldEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4quic11QuicSession15GetAlpnsToOfferEv(%"class.std::__1::vector.757"* noalias sret, %"class.quic::QuicSession"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %"class.std::__1::basic_string"], align 8
  %4 = alloca %"struct.quic::ParsedQuicVersion", align 4
  %5 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0
  %7 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %1, i64 0, i32 8
  %8 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %7, align 8
  %9 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %8, i64 0, i32 8, i32 8, i32 0
  %10 = load i32, i32* %9, align 4, !noalias !30
  %11 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %8, i64 0, i32 8, i32 8, i32 1
  %12 = load i32, i32* %11, align 4, !noalias !30
  %13 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 0
  store i32 %10, i32* %13, align 4, !alias.scope !30
  %14 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %4, i64 0, i32 1
  store i32 %12, i32* %14, align 4, !alias.scope !30
  call void @_ZN4quic14AlpnForVersionENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* nonnull sret %6, %"struct.quic::ParsedQuicVersion"* nonnull %4) #11
  %15 = call i8* @_Znwm(i64 24) #15
  %16 = getelementptr inbounds %"class.std::__1::vector.757", %"class.std::__1::vector.757"* %0, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast %"class.std::__1::vector.757"* %0 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 24
  %20 = getelementptr inbounds %"class.std::__1::vector.757", %"class.std::__1::vector.757"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %2
  %27 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %27, i64 24, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %15, i64 24
  %29 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %30 = ptrtoint i8* %28 to i64
  store i64 %30, i64* %29, align 8
  br label %47

31:                                               ; preds = %2
  %32 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %33 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %32, i8* %34, i64 %36) #11
  %37 = bitcast [1 x %"class.std::__1::basic_string"]* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %15, i64 24
  %41 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %42 = ptrtoint i8* %40 to i64
  store i64 %42, i64* %41, align 8
  %43 = icmp slt i8 %39, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = getelementptr inbounds [1 x %"class.std::__1::basic_string"], [1 x %"class.std::__1::basic_string"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %26, %31, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

declare void @_ZNK4quic11QuicSession10SelectAlpnERKNSt3__16vectorIN4absl11string_viewENS1_9allocatorIS4_EEEE() unnamed_addr

declare void @_ZN4quic11QuicSession14OnAlpnSelectedEN4absl11string_viewE(%"class.quic::QuicSession"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession22ResumeApplicationStateEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.quic::QuicSpdySession"*, %"class.std::__1::vector.720"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession23MaybeSendRstStreamFrameEjNS_22QuicRstStreamErrorCodeEm(%"class.quic::QuicSession"*, i32, i32, i64) unnamed_addr #1

declare void @_ZN4quic11QuicSession25MaybeSendStopSendingFrameEjNS_22QuicRstStreamErrorCodeE(%"class.quic::QuicSession"*, i32, i32) unnamed_addr #1

declare void @_ZN4quic11QuicSession14ActivateStreamENSt3__110unique_ptrINS_10QuicStreamENS1_14default_deleteIS3_EEEE(%"class.quic::QuicSession"*, %"class.quic::QuicStream"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession25OnFinalByteOffsetReceivedEjm(%"class.quic::QuicSession"*, i32, i64) unnamed_addr #1

declare zeroext i1 @_ZNK4quic15QuicSpdySession18UsesPendingStreamsEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

declare void @_ZN4quic11QuicSession38HandleFrameOnNonexistentOutgoingStreamEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN4quic11QuicSession32MaybeIncreaseLargestPeerStreamIdEj(%"class.quic::QuicSession"*, i32) unnamed_addr #1

declare void @_ZN4quic11QuicSession33HandleRstOnValidNonexistentStreamERKNS_18QuicRstStreamFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #1

declare { i64, i64 } @_ZNK4quic11QuicSession22GetStatelessResetTokenEv(%"class.quic::QuicSession"*) unnamed_addr #1

declare %"class.quic::QuicStream"* @_ZN4quic15QuicSpdySession20ProcessPendingStreamEPNS_13PendingStreamE(%"class.quic::QuicSpdySession"*, %"class.quic::PendingStream"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession20OnDecoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE(%"class.quic::QuicSpdySession"*, i32, i8*, i64) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession20OnEncoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE(%"class.quic::QuicSpdySession"*, i32, i8*, i64) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession23OnStreamHeadersPriorityEjRKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSpdySession"*, i32, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession18OnStreamHeaderListEjbmRKNS_14QuicHeaderListE(%"class.quic::QuicSpdySession"*, i32, i1 zeroext, i64, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession15OnPriorityFrameEjRKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSpdySession"*, i32, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic15QuicSpdySession15OnAcceptChFrameERKNS_13AcceptChFrameE(%"class.quic::QuicSpdySession"*, %"struct.quic::AcceptChFrame"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i64 @_ZN4quic15QuicSpdySession27WriteHeadersOnHeadersStreamEjN4spdy16Http2HeaderBlockEbRKNS1_16StreamPrecedenceIjEENS_27QuicReferenceCountedPointerINS_24QuicAckListenerInterfaceEEE(%"class.quic::QuicSpdySession"*, i32, %"class.spdy::Http2HeaderBlock"*, i1 zeroext, %"class.spdy::StreamPrecedence"* dereferenceable(16), %"class.quic::QuicReferenceCountedPointer"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession13OnHttp3GoAwayEm(%"class.quic::QuicSpdySession"*, i64) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession16WritePushPromiseEjjN4spdy16Http2HeaderBlockE(%"class.quic::QuicSpdySession"*, i32, i32, %"class.spdy::Http2HeaderBlock"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession30OnAcceptChFrameReceivedViaAlpsERKNS_13AcceptChFrameE(%"class.quic::QuicSpdySession"*, %"struct.quic::AcceptChFrame"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN4quic15QuicSpdySession27ShouldNegotiateWebTransportEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession41MaybeInitializeHttp3UnidirectionalStreamsEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

declare void @_ZN4quic15QuicSpdySession19OnDatagramProcessedEN4absl8optionalINS_13MessageStatusEEE() unnamed_addr

declare zeroext i1 @_ZN4quic15QuicSpdySession28ShouldNegotiateHttp3DatagramEv(%"class.quic::QuicSpdySession"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N4quic11QuicSession12OnFrameAckedERKNS_9QuicFrameENS_8QuicTime5DeltaES4_(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24), i64, i64) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn8_N4quic11QuicSession26OnStreamFrameRetransmittedERKNS_15QuicStreamFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicStreamFrame"* dereferenceable(24)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn8_N4quic11QuicSession11OnFrameLostERKNS_9QuicFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn8_N4quic11QuicSession16RetransmitFramesERKNSt3__16vectorINS_9QuicFrameENS1_9allocatorIS3_EEEENS_16TransmissionTypeE(%"class.quic::QuicSession"*, %"class.std::__1::vector.82"* dereferenceable(24), i8 signext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_NK4quic11QuicSession18IsFrameOutstandingERKNS_9QuicFrameE(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_NK4quic11QuicSession20HasUnackedCryptoDataEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_NK4quic11QuicSession20HasUnackedStreamDataEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn16_N4quic11QuicSession15WriteStreamDataEjmmPNS_14QuicDataWriterE(%"class.quic::QuicSession"*, i32, i64, i64, %"class.quic::QuicDataWriter"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_N4quic11QuicSession15WriteCryptoDataENS_15EncryptionLevelEmmPNS_14QuicDataWriterE(%"class.quic::QuicSession"*, i8 signext, i64, i64, %"class.quic::QuicDataWriter"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn24_N4quic11QuicSession14SendMaxStreamsEjb(%"class.quic::QuicSession"*, i32, i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn32_N4quic11QuicSession27OnNewDecryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicDecrypterENS2_14default_deleteIS4_EEEEbb(%"class.quic::QuicSession"*, i8 signext, %"class.quic::QuicDecrypter"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic15QuicSpdySession27OnNewEncryptionKeyAvailableENS_15EncryptionLevelENSt3__110unique_ptrINS_13QuicEncrypterENS2_14default_deleteIS4_EEEE(%"class.quic::QuicSpdySession"*, i8 signext, %"class.quic::QuicEncrypter"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession25SetDefaultEncryptionLevelENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession22OnTlsHandshakeCompleteEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession23DiscardOldDecryptionKeyENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession23DiscardOldEncryptionKeyENS_15EncryptionLevelE(%"class.quic::QuicSession"*, i8 signext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession21NeuterUnencryptedDataEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession19NeuterHandshakeDataEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession17OnZeroRttRejectedEi(%"class.quic::QuicSession"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn32_N4quic11QuicSession23FillTransportParametersEPNS_19TransportParametersE(%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn32_N4quic11QuicSession26ProcessTransportParametersERKNS_19TransportParametersEbPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QuicSession"*, %"struct.quic::TransportParameters"* dereferenceable(928), i1 zeroext, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn32_N4quic11QuicSession23OnHandshakeCallbackDoneEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn32_NK4quic11QuicSession21PacketFlusherAttachedEv(%"class.quic::QuicSession"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N4quic11QuicSession13OnStreamErrorENS_13QuicErrorCodeENS_27QuicIetfTransportErrorCodesENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, i64, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2

declare void @_ZThn40_N4quic11QuicSession10WritevDataEjmmNS_18StreamSendingStateENS_16TransmissionTypeEN4absl8optionalINS_15EncryptionLevelEEE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
declare i64 @_ZThn40_N4quic11QuicSession14SendCryptoDataENS_15EncryptionLevelEmmNS_16TransmissionTypeE(%"class.quic::QuicSession"*, i8 signext, i64, i64, i8 signext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N4quic11QuicSession22RegisterStreamPriorityEjbRKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSession"*, i32, i1 zeroext, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N4quic11QuicSession24UnregisterStreamPriorityEjb(%"class.quic::QuicSession"*, i32, i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn40_N4quic11QuicSession20UpdateStreamPriorityEjRKN4spdy16StreamPrecedenceIjEE(%"class.quic::QuicSession"*, i32, %"class.spdy::StreamPrecedence"* dereferenceable(16)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn48_N4quic11QuicSession26OnControlFrameManagerErrorENS_13QuicErrorCodeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicSession"*, i32, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn48_N4quic11QuicSession17WriteControlFrameERKNS_9QuicFrameENS_16TransmissionTypeE(%"class.quic::QuicSession"*, %"struct.quic::QuicFrame"* dereferenceable(24), i8 signext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn2864_N4quic15QuicSpdySession20OnDecoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE(%"class.quic::QuicSpdySession"*, i32, i8*, i64) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn2872_N4quic15QuicSpdySession20OnEncoderStreamErrorENS_13QuicErrorCodeEN4absl11string_viewE(%"class.quic::QuicSpdySession"*, i32, i8*, i64) unnamed_addr #0 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare i64 @_ZNK4quic11QuicSession40max_open_incoming_unidirectional_streamsEv(%"class.quic::QuicSession"*) local_unnamed_addr #1

declare void @_ZN4quic14AlpnForVersionENS_17ParsedQuicVersionE(%"class.std::__1::basic_string"* sret, %"struct.quic::ParsedQuicVersion"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !19
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @llvm.assume(i1) #11

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE22find_or_prepare_insertIS9_EENSH_ImbEERKT_(%"class.absl::container_internal::raw_hash_set.635"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !3

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #11
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %112, %20
  %59 = phi i64 [ %41, %20 ], [ %114, %112 ]
  %60 = phi i64 [ 0, %20 ], [ %113, %112 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %46, align 8
  br label %71

71:                                               ; preds = %68, %104
  %72 = phi i32 [ %69, %68 ], [ %106, %104 ]
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #11, !range !2
  %74 = zext i32 %73 to i64
  %75 = add i64 %61, %74
  %76 = and i64 %75, %37
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %70, i64 %76, i32 0
  %78 = bitcast %"struct.std::__1::pair.715"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %71
  %83 = zext i8 %80 to i64
  %84 = ptrtoint %"struct.std::__1::pair.715"* %77 to i64
  br label %92

85:                                               ; preds = %71
  %86 = bitcast %"struct.std::__1::pair.715"* %77 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %70, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %85
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %85, %82
  %93 = phi i64 [ %87, %85 ], [ %84, %82 ]
  %94 = phi i64 [ %89, %85 ], [ %83, %82 ]
  br i1 %54, label %96, label %95, !prof !35

95:                                               ; preds = %92
  tail call void @llvm.trap() #11
  unreachable

96:                                               ; preds = %92
  %97 = inttoptr i64 %93 to i8*
  %98 = icmp eq i64 %94, %55
  br i1 %98, label %99, label %104, !prof !36

99:                                               ; preds = %96
  %100 = icmp eq i64 %94, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %99
  %102 = tail call i32 @bcmp(i8* %97, i8* %57, i64 %94) #11
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %117, label %104, !prof !3

104:                                              ; preds = %96, %101
  %105 = add i32 %72, -1
  %106 = and i32 %105, %72
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %71

108:                                              ; preds = %104, %58
  %109 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %115, !prof !7

112:                                              ; preds = %108
  %113 = add i64 %60, 16
  %114 = add i64 %113, %61
  br label %58

115:                                              ; preds = %108
  %116 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.635"* %0, i64 %33)
  br label %117

117:                                              ; preds = %101, %99, %115
  %118 = phi i64 [ %116, %115 ], [ %76, %99 ], [ %76, %101 ]
  %119 = phi i8 [ 1, %115 ], [ 0, %99 ], [ 0, %101 ]
  %120 = insertvalue { i64, i8 } undef, i64 %118, 0
  %121 = insertvalue { i64, i8 } %120, i8 %119, 1
  ret { i64, i8 } %121
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.635"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.635"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.635"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.635"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !7

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #11
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #11
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #1

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.635"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 5
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #15
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.636"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %121, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %117
  br i1 %24, label %121, label %120

28:                                               ; preds = %25, %117
  %29 = phi i64 [ 0, %25 ], [ %118, %117 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %117

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %6, i64 %29
  %35 = bitcast %"union.absl::container_internal::map_slot_type.636"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = zext i8 %37 to i64
  %41 = ptrtoint %"union.absl::container_internal::map_slot_type.636"* %34 to i64
  br label %49

42:                                               ; preds = %33
  %43 = bitcast %"union.absl::container_internal::map_slot_type.636"* %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %6, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp sgt i64 %46, -1
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %39, %42
  %50 = phi i64 [ %44, %42 ], [ %41, %39 ]
  %51 = phi i64 [ %46, %42 ], [ %40, %39 ]
  %52 = inttoptr i64 %50 to i8*
  %53 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %52, i64 %51) #11
  %54 = add i64 %53, %51
  %55 = zext i64 %54 to i128
  %56 = mul nuw i128 %55, 11376068507788127593
  %57 = lshr i128 %56, 64
  %58 = xor i128 %57, %56
  %59 = trunc i128 %58 to i64
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %7, align 8
  %62 = lshr i64 %59, 7
  %63 = ptrtoint i8* %60 to i64
  %64 = lshr i64 %63, 12
  %65 = xor i64 %62, %64
  %66 = and i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %60, i64 %66
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1
  %70 = icmp slt <16 x i8> %69, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %71 = bitcast <16 x i1> %70 to i16
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %49, %73
  %74 = phi i64 [ %78, %73 ], [ %66, %49 ]
  %75 = phi i64 [ %76, %73 ], [ 0, %49 ]
  %76 = add i64 %75, 16
  %77 = add i64 %76, %74
  %78 = and i64 %77, %61
  %79 = getelementptr inbounds i8, i8* %60, i64 %78
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1
  %82 = icmp slt <16 x i8> %81, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %83 = bitcast <16 x i1> %82 to i16
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %73, label %85

85:                                               ; preds = %73, %49
  %86 = phi i64 [ %66, %49 ], [ %78, %73 ]
  %87 = phi i16 [ %71, %49 ], [ %83, %73 ]
  %88 = zext i16 %87 to i32
  %89 = tail call i32 @llvm.cttz.i32(i32 %88, i1 false) #11, !range !2
  %90 = zext i32 %89 to i64
  %91 = add i64 %86, %90
  %92 = and i64 %91, %61
  %93 = trunc i128 %58 to i8
  %94 = and i8 %93, 127
  %95 = getelementptr inbounds i8, i8* %60, i64 %92
  store i8 %94, i8* %95, align 1
  %96 = load i8*, i8** %3, align 8
  %97 = add i64 %92, -15
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %97, %98
  %100 = and i64 %98, 15
  %101 = add i64 %99, %100
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  store i8 %94, i8* %102, align 1
  %103 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %5, align 8
  %104 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %103, i64 %92
  %105 = bitcast %"union.absl::container_internal::map_slot_type.636"* %104 to i8*
  %106 = bitcast %"union.absl::container_internal::map_slot_type.636"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #11
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %103, i64 %92, i32 0, i32 1
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %6, i64 %29, i32 0, i32 1
  %109 = bitcast %"class.quic::QuicClientPromisedInfo"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.quic::QuicClientPromisedInfo"** %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = load i8, i8* %36, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %85
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #15
  br label %117

117:                                              ; preds = %114, %85, %28
  %118 = add nuw i64 %29, 1
  %119 = icmp eq i64 %118, %8
  br i1 %119, label %27, label %28

120:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #15
  br label %121

121:                                              ; preds = %2, %27, %120
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.635"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %212, %1
  %12 = phi i64 [ 0, %1 ], [ %214, %212 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %212
  %20 = phi i64 [ 0, %8 ], [ %214, %212 ]
  %21 = load i8*, i8** %2, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, -2
  br i1 %24, label %25, label %212

25:                                               ; preds = %19
  %26 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %9, align 8
  %27 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %26, i64 %20, i32 0
  %28 = bitcast %"struct.std::__1::pair.715"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = zext i8 %30 to i64
  %34 = ptrtoint %"struct.std::__1::pair.715"* %27 to i64
  br label %42

35:                                               ; preds = %25
  %36 = bitcast %"struct.std::__1::pair.715"* %27 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %26, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, -1
  br i1 %40, label %42, label %41, !prof !3

41:                                               ; preds = %35
  tail call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %32, %35
  %43 = phi i64 [ %37, %35 ], [ %34, %32 ]
  %44 = phi i64 [ %39, %35 ], [ %33, %32 ]
  %45 = inttoptr i64 %43 to i8*
  %46 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %10, i8* %45, i64 %44) #11
  %47 = add i64 %46, %44
  %48 = zext i64 %47 to i128
  %49 = mul nuw i128 %48, 11376068507788127593
  %50 = lshr i128 %49, 64
  %51 = xor i128 %50, %49
  %52 = trunc i128 %51 to i64
  %53 = load i8*, i8** %2, align 8
  %54 = load i64, i64* %4, align 8
  %55 = lshr i64 %52, 7
  %56 = ptrtoint i8* %53 to i64
  %57 = lshr i64 %56, 12
  %58 = xor i64 %55, %57
  %59 = and i64 %58, %54
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = icmp slt <16 x i8> %62, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %64 = bitcast <16 x i1> %63 to i16
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %42, %66
  %67 = phi i64 [ %71, %66 ], [ %59, %42 ]
  %68 = phi i64 [ %69, %66 ], [ 0, %42 ]
  %69 = add i64 %68, 16
  %70 = add i64 %69, %67
  %71 = and i64 %70, %54
  %72 = getelementptr inbounds i8, i8* %53, i64 %71
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 1
  %75 = icmp slt <16 x i8> %74, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %76 = bitcast <16 x i1> %75 to i16
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %66, label %78

78:                                               ; preds = %66, %42
  %79 = phi i64 [ %59, %42 ], [ %71, %66 ]
  %80 = phi i16 [ %64, %42 ], [ %76, %66 ]
  %81 = zext i16 %80 to i32
  %82 = tail call i32 @llvm.cttz.i32(i32 %81, i1 false) #11, !range !2
  %83 = zext i32 %82 to i64
  %84 = add i64 %79, %83
  %85 = and i64 %84, %54
  %86 = sub i64 %85, %59
  %87 = sub i64 %20, %59
  %88 = xor i64 %86, %87
  %89 = and i64 %88, %54
  %90 = icmp ult i64 %89, 16
  br i1 %90, label %91, label %102, !prof !3

91:                                               ; preds = %78
  %92 = trunc i128 %51 to i8
  %93 = and i8 %92, 127
  %94 = getelementptr inbounds i8, i8* %53, i64 %20
  store i8 %93, i8* %94, align 1
  %95 = load i8*, i8** %2, align 8
  %96 = add i64 %20, -15
  %97 = load i64, i64* %4, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %93, i8* %101, align 1
  br label %212

102:                                              ; preds = %78
  %103 = getelementptr inbounds i8, i8* %53, i64 %85
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, -128
  %106 = trunc i128 %51 to i8
  %107 = and i8 %106, 127
  store i8 %107, i8* %103, align 1
  %108 = load i8*, i8** %2, align 8
  %109 = add i64 %85, -15
  %110 = load i64, i64* %4, align 8
  %111 = and i64 %110, %109
  %112 = and i64 %110, 15
  %113 = add i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  store i8 %107, i8* %114, align 1
  %115 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %9, align 8
  br i1 %105, label %116, label %135

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %85
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %20
  %119 = bitcast %"union.absl::container_internal::map_slot_type.636"* %117 to i8*
  %120 = bitcast %"union.absl::container_internal::map_slot_type.636"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #11
  %121 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %85, i32 0, i32 1
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %20, i32 0, i32 1
  %123 = bitcast %"class.quic::QuicClientPromisedInfo"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.quic::QuicClientPromisedInfo"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load i8*, i8** %2, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %20
  store i8 -128, i8* %127, align 1
  %128 = load i8*, i8** %2, align 8
  %129 = add i64 %20, -15
  %130 = load i64, i64* %4, align 8
  %131 = and i64 %130, %129
  %132 = and i64 %130, 15
  %133 = add i64 %131, %132
  %134 = getelementptr inbounds i8, i8* %128, i64 %133
  store i8 -128, i8* %134, align 1
  br label %212

135:                                              ; preds = %102
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %20
  %137 = bitcast %"union.absl::container_internal::map_slot_type.636"* %136 to i8*
  %138 = bitcast %"union.absl::container_internal::map_slot_type.636"* %136 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast i64* %140 to i8*
  %142 = load i8, i8* %141, align 8
  %143 = getelementptr inbounds i8, i8* %137, i64 9
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %137, i64 10
  %146 = load i8, i8* %145, align 2
  %147 = getelementptr inbounds i8, i8* %137, i64 11
  %148 = load i8, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %137, i64 12
  %150 = load i8, i8* %149, align 4
  %151 = getelementptr inbounds i8, i8* %137, i64 13
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds i8, i8* %137, i64 14
  %154 = load i8, i8* %153, align 2
  %155 = getelementptr inbounds i8, i8* %137, i64 15
  %156 = load i8, i8* %155, align 1
  %157 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %158 = bitcast i64* %157 to i8*
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds i8, i8* %137, i64 17
  %161 = load i8, i8* %160, align 1
  %162 = getelementptr inbounds i8, i8* %137, i64 18
  %163 = load i8, i8* %162, align 2
  %164 = getelementptr inbounds i8, i8* %137, i64 19
  %165 = load i8, i8* %164, align 1
  %166 = getelementptr inbounds i8, i8* %137, i64 20
  %167 = load i8, i8* %166, align 4
  %168 = getelementptr inbounds i8, i8* %137, i64 21
  %169 = load i8, i8* %168, align 1
  %170 = getelementptr inbounds i8, i8* %137, i64 22
  %171 = load i8, i8* %170, align 2
  %172 = getelementptr inbounds i8, i8* %137, i64 23
  %173 = load i8, i8* %172, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 24, i1 false) #11
  %174 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %115, i64 %20, i32 0, i32 1
  %175 = bitcast %"class.quic::QuicClientPromisedInfo"** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %9, align 8
  %178 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %177, i64 %85, i32 0, i32 1
  %179 = bitcast %"class.quic::QuicClientPromisedInfo"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %177, i64 %20
  %182 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %177, i64 %85
  %183 = bitcast %"union.absl::container_internal::map_slot_type.636"* %181 to i8*
  %184 = bitcast %"union.absl::container_internal::map_slot_type.636"* %182 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 24, i1 false) #11
  %185 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %177, i64 %20, i32 0, i32 1
  %186 = bitcast %"class.quic::QuicClientPromisedInfo"** %185 to i64*
  store i64 %180, i64* %186, align 8
  %187 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %9, align 8
  %188 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %187, i64 %85
  %189 = bitcast %"union.absl::container_internal::map_slot_type.636"* %188 to i64*
  store i64 %139, i64* %189, align 8
  %190 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %187, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %191 = bitcast i64* %190 to i8*
  store i8 %142, i8* %191, align 8
  %192 = bitcast %"union.absl::container_internal::map_slot_type.636"* %188 to i8*
  %193 = getelementptr inbounds i8, i8* %192, i64 9
  store i8 %144, i8* %193, align 1
  %194 = getelementptr inbounds i8, i8* %192, i64 10
  store i8 %146, i8* %194, align 2
  %195 = getelementptr inbounds i8, i8* %192, i64 11
  store i8 %148, i8* %195, align 1
  %196 = getelementptr inbounds i8, i8* %192, i64 12
  store i8 %150, i8* %196, align 4
  %197 = getelementptr inbounds i8, i8* %192, i64 13
  store i8 %152, i8* %197, align 1
  %198 = getelementptr inbounds i8, i8* %192, i64 14
  store i8 %154, i8* %198, align 2
  %199 = getelementptr inbounds i8, i8* %192, i64 15
  store i8 %156, i8* %199, align 1
  %200 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %187, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %201 = bitcast i64* %200 to i8*
  store i8 %159, i8* %201, align 8
  %202 = getelementptr inbounds i8, i8* %192, i64 17
  store i8 %161, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %192, i64 18
  store i8 %163, i8* %203, align 2
  %204 = getelementptr inbounds i8, i8* %192, i64 19
  store i8 %165, i8* %204, align 1
  %205 = getelementptr inbounds i8, i8* %192, i64 20
  store i8 %167, i8* %205, align 4
  %206 = getelementptr inbounds i8, i8* %192, i64 21
  store i8 %169, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %192, i64 22
  store i8 %171, i8* %207, align 2
  %208 = getelementptr inbounds i8, i8* %192, i64 23
  store i8 %173, i8* %208, align 1
  %209 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %187, i64 %85, i32 0, i32 1
  %210 = bitcast %"class.quic::QuicClientPromisedInfo"** %209 to i64*
  store i64 %176, i64* %210, align 8
  %211 = add i64 %20, -1
  br label %212

212:                                              ; preds = %91, %135, %116, %19
  %213 = phi i64 [ %20, %19 ], [ %20, %91 ], [ %20, %116 ], [ %211, %135 ]
  %214 = add i64 %213, 1
  %215 = load i64, i64* %4, align 8
  %216 = icmp eq i64 %214, %215
  br i1 %216, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.644"*, i64) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #11, !range !2
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !3

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.644"* %0, i64 1) #11
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.644"* %0) #11
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.644"* %0, i64 %58) #11
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #11, !range !2
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.644"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 4
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #15
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.645"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %107, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %103
  br i1 %24, label %107, label %106

28:                                               ; preds = %25, %103
  %29 = phi i64 [ 0, %25 ], [ %104, %103 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %103

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %6, i64 %29, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #11, !range !2
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %86, i64 %75, i32 0, i32 0
  %88 = load i32, i32* %34, align 8
  store i32 %88, i32* %87, align 8
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %86, i64 %75, i32 0, i32 1
  %90 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %6, i64 %29, i32 0, i32 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.653"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.653"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.653"* %89 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %6, i64 %29, i32 0, i32 1, i32 0, i32 0, i32 0
  %96 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %95, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %95, align 8
  %97 = icmp eq %"class.quic::QuicClientPromisedInfo"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %68
  %99 = bitcast %"class.quic::QuicClientPromisedInfo"* %96 to void (%"class.quic::QuicClientPromisedInfo"*)***
  %100 = load void (%"class.quic::QuicClientPromisedInfo"*)**, void (%"class.quic::QuicClientPromisedInfo"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %100, i64 2
  %102 = load void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %101, align 8
  tail call void %102(%"class.quic::QuicClientPromisedInfo"* nonnull %96) #11
  br label %103

103:                                              ; preds = %98, %68, %28
  %104 = add nuw i64 %29, 1
  %105 = icmp eq i64 %104, %8
  br i1 %105, label %27, label %28

106:                                              ; preds = %27
  tail call void @_ZdlPv(i8* %4) #15
  br label %107

107:                                              ; preds = %2, %27, %106
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.644"*) local_unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #11
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %156, %1
  %12 = phi i64 [ 0, %1 ], [ %158, %156 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.644", %"class.absl::container_internal::raw_hash_set.644"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %156
  %20 = phi i64 [ %6, %8 ], [ %159, %156 ]
  %21 = phi i64 [ 0, %8 ], [ %158, %156 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %156

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #11, !range !2
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !3

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %156

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %9, align 8
  br i1 %86, label %97, label %125

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %67, i32 0, i32 0
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %21, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %98, align 8
  %101 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %67, i32 0, i32 1
  %102 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %21, i32 0, i32 1
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.653"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.653"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.653"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %21, i32 0, i32 1, i32 0, i32 0, i32 0
  %108 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %107, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %107, align 8
  %109 = icmp eq %"class.quic::QuicClientPromisedInfo"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %97
  %111 = bitcast %"class.quic::QuicClientPromisedInfo"* %108 to void (%"class.quic::QuicClientPromisedInfo"*)***
  %112 = load void (%"class.quic::QuicClientPromisedInfo"*)**, void (%"class.quic::QuicClientPromisedInfo"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %112, i64 2
  %114 = load void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %113, align 8
  tail call void %114(%"class.quic::QuicClientPromisedInfo"* nonnull %108) #11
  br label %115

115:                                              ; preds = %97, %110
  %116 = load i8*, i8** %2, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %21
  store i8 -128, i8* %117, align 1
  %118 = load i8*, i8** %2, align 8
  %119 = add i64 %21, -15
  %120 = load i64, i64* %4, align 8
  %121 = and i64 %120, %119
  %122 = and i64 %120, 15
  %123 = add i64 %121, %122
  %124 = getelementptr inbounds i8, i8* %118, i64 %123
  store i8 -128, i8* %124, align 1
  br label %156

125:                                              ; preds = %83
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %21, i32 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %21, i32 0, i32 1
  %129 = bitcast %"class.std::__1::unique_ptr.653"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %96, i64 %21, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %131, align 8
  %132 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %9, align 8
  %133 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %132, i64 %67, i32 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %132, i64 %67, i32 0, i32 1
  %136 = bitcast %"class.std::__1::unique_ptr.653"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %132, i64 %21, i32 0, i32 0
  store i32 %134, i32* %138, align 8
  %139 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %132, i64 %21, i32 0, i32 1
  %140 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %132, i64 %67, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %140, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.653"* %139 to i64*
  store i64 %137, i64* %141, align 8
  %142 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %132, i64 %67, i32 0, i32 1, i32 0, i32 0, i32 0
  %143 = load %"class.quic::QuicClientPromisedInfo"*, %"class.quic::QuicClientPromisedInfo"** %142, align 8
  store %"class.quic::QuicClientPromisedInfo"* null, %"class.quic::QuicClientPromisedInfo"** %142, align 8
  %144 = icmp eq %"class.quic::QuicClientPromisedInfo"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %125
  %146 = bitcast %"class.quic::QuicClientPromisedInfo"* %143 to void (%"class.quic::QuicClientPromisedInfo"*)***
  %147 = load void (%"class.quic::QuicClientPromisedInfo"*)**, void (%"class.quic::QuicClientPromisedInfo"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %147, i64 2
  %149 = load void (%"class.quic::QuicClientPromisedInfo"*)*, void (%"class.quic::QuicClientPromisedInfo"*)** %148, align 8
  tail call void %149(%"class.quic::QuicClientPromisedInfo"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %125
  %151 = load %"union.absl::container_internal::map_slot_type.645"*, %"union.absl::container_internal::map_slot_type.645"** %9, align 8
  %152 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %151, i64 %67, i32 0, i32 0
  store i32 %127, i32* %152, align 8
  %153 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.645", %"union.absl::container_internal::map_slot_type.645"* %151, i64 %67, i32 0, i32 1
  %154 = bitcast %"class.std::__1::unique_ptr.653"* %153 to i64*
  store i64 %130, i64* %154, align 8
  %155 = add i64 %21, -1
  br label %156

156:                                              ; preds = %73, %150, %115, %19
  %157 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %115 ], [ %155, %150 ]
  %158 = add i64 %157, 1
  %159 = load i64, i64* %4, align 8
  %160 = icmp eq i64 %158, %159
  br i1 %160, label %11, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type.636"* } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE4findIS9_EENSL_8iteratorERKT_m(%"class.absl::container_internal::raw_hash_set.635"*, %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %2, 7
  %9 = ptrtoint i8* %5 to i64
  %10 = lshr i64 %9, 12
  %11 = xor i64 %10, %8
  %12 = trunc i64 %2 to i8
  %13 = and i8 %12, 127
  %14 = insertelement <16 x i8> undef, i8 %13, i32 0
  %15 = shufflevector <16 x i8> %14, <16 x i8> undef, <16 x i32> zeroinitializer
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.635", %"class.absl::container_internal::raw_hash_set.635"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, -1
  %21 = zext i8 %19 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp sgt i64 %26, -1
  %28 = or i1 %20, %27
  %29 = select i1 %20, i64 %21, i64 %26
  %30 = select i1 %20, i64 %22, i64 %24
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %89, %3
  %33 = phi i64 [ %11, %3 ], [ %91, %89 ]
  %34 = phi i64 [ 0, %3 ], [ %90, %89 ]
  %35 = and i64 %33, %7
  %36 = getelementptr inbounds i8, i8* %5, i64 %35
  %37 = bitcast i8* %36 to <16 x i8>*
  %38 = load <16 x i8>, <16 x i8>* %37, align 1
  %39 = icmp eq <16 x i8> %15, %38
  %40 = bitcast <16 x i1> %39 to i16
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %32
  %43 = zext i16 %40 to i32
  %44 = load %"union.absl::container_internal::map_slot_type.636"*, %"union.absl::container_internal::map_slot_type.636"** %16, align 8
  br label %45

45:                                               ; preds = %42, %78
  %46 = phi i32 [ %43, %42 ], [ %80, %78 ]
  %47 = tail call i32 @llvm.cttz.i32(i32 %46, i1 false) #11, !range !2
  %48 = zext i32 %47 to i64
  %49 = add i64 %35, %48
  %50 = and i64 %49, %7
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %44, i64 %50
  %52 = bitcast %"union.absl::container_internal::map_slot_type.636"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %45
  %57 = zext i8 %54 to i64
  %58 = ptrtoint %"union.absl::container_internal::map_slot_type.636"* %51 to i64
  br label %66

59:                                               ; preds = %45
  %60 = bitcast %"union.absl::container_internal::map_slot_type.636"* %51 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.636", %"union.absl::container_internal::map_slot_type.636"* %44, i64 %50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = icmp sgt i64 %63, -1
  br i1 %64, label %66, label %65, !prof !3

65:                                               ; preds = %59
  tail call void @llvm.trap() #11
  unreachable

66:                                               ; preds = %59, %56
  %67 = phi i64 [ %61, %59 ], [ %58, %56 ]
  %68 = phi i64 [ %63, %59 ], [ %57, %56 ]
  br i1 %28, label %70, label %69, !prof !35

69:                                               ; preds = %66
  tail call void @llvm.trap() #11
  unreachable

70:                                               ; preds = %66
  %71 = inttoptr i64 %67 to i8*
  %72 = icmp eq i64 %68, %29
  br i1 %72, label %73, label %78, !prof !36

73:                                               ; preds = %70
  %74 = icmp eq i64 %68, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %73
  %76 = tail call i32 @bcmp(i8* %71, i8* %31, i64 %68) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78, !prof !3

78:                                               ; preds = %70, %75
  %79 = add i32 %46, -1
  %80 = and i32 %79, %46
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %45

82:                                               ; preds = %73, %75
  %83 = getelementptr inbounds i8, i8* %5, i64 %50
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #11
  br label %92

85:                                               ; preds = %78, %32
  %86 = icmp eq <16 x i8> %38, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %87 = bitcast <16 x i1> %86 to i16
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %92, !prof !7

89:                                               ; preds = %85
  %90 = add i64 %34, 16
  %91 = add i64 %90, %35
  br label %32

92:                                               ; preds = %85, %82
  %93 = phi %"union.absl::container_internal::map_slot_type.636"* [ %51, %82 ], [ undef, %85 ]
  %94 = phi i8* [ %83, %82 ], [ null, %85 ]
  %95 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } undef, i8* %94, 0
  %96 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type.636"* } %95, %"union.absl::container_internal::map_slot_type.636"* %93, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type.636"* } %96
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4quic22QuicClientPromisedInfo3urlEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4quic22QuicClientPromisedInfo3urlEv"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE16try_emplace_implIRSI_JEEENSH_INS0_12raw_hash_setISD_SE_SG_SK_E8iteratorEbEEOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE16try_emplace_implIRSI_JEEENSH_INS0_12raw_hash_setISD_SE_SG_SK_E8iteratorEbEEOT_DpOT0_"}
!11 = distinct !{!11, !12, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE11try_emplaceIS9_JELi0EEENSH_INS0_12raw_hash_setISD_SE_SG_SK_E8iteratorEbEERKT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4quic22QuicClientPromisedInfoEEENS0_10StringHashENS0_12StringHashEq2EqENS7_INS3_4pairIKS9_SC_EEEEE11try_emplaceIS9_JELi0EEENSH_INS0_12raw_hash_setISD_SE_SG_SK_E8iteratorEbEERKT_DpOT0_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE16try_emplace_implIRSI_JEEENSH_INS0_12raw_hash_setISA_SD_SF_SK_E8iteratorEbEEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjNSt3__110unique_ptrIN4quic22QuicClientPromisedInfoENS3_14default_deleteIS6_EEEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS3_4pairIKjS9_EEEEE16try_emplace_implIRSI_JEEENSH_INS0_12raw_hash_setISA_SD_SF_SK_E8iteratorEbEEOT_DpOT0_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4quic22QuicClientPromisedInfo3urlEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4quic22QuicClientPromisedInfo3urlEv"}
!19 = !{i8 0, i8 2}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.isvectorized", i32 1}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.unroll.disable"}
!29 = distinct !{!29, !26}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZNK4quic10QuicFramer7versionEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4quic10QuicFramer7versionEv"}
!33 = distinct !{!33, !34, !"_ZNK4quic14QuicConnection7versionEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4quic14QuicConnection7versionEv"}
!35 = !{!"branch_weights", i32 4001, i32 1}
!36 = !{!"branch_weights", i32 2146410443, i32 1073205}
