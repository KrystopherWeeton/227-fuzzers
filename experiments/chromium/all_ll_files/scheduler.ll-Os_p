; ModuleID = '../../third_party/swiftshader/third_party/marl/src/scheduler.cpp'
source_filename = "../../third_party/swiftshader/third_party/marl/src/scheduler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.marl::Scheduler" = type { %"struct.marl::Scheduler::Config", %"struct.std::__1::array", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::array.6", %"struct.marl::Scheduler::SingleThreadedWorkers" }
%"struct.marl::Scheduler::Config" = type { %"struct.marl::Scheduler::Config::WorkerThread", %"class.marl::Allocator"*, i64 }
%"struct.marl::Scheduler::Config::WorkerThread" = type { i32, %"class.std::__1::function", %"class.std::__1::shared_ptr" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::shared_ptr" = type { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Thread::Affinity::Policy" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.marl::Allocator" = type { i32 (...)** }
%"struct.std::__1::array" = type { [8 x %"struct.std::__1::atomic"] }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"struct.std::__1::array.6" = type { [256 x %"class.marl::Scheduler::Worker"*] }
%"class.marl::Scheduler::Worker" = type <{ i32, i32, %"class.marl::Scheduler"*, %"class.std::__1::unique_ptr", %"class.marl::Scheduler::Fiber"*, %"class.marl::Thread", %"struct.marl::Scheduler::Worker::Work", %"class.std::__1::unordered_set", %"class.marl::containers::vector", %"class.marl::Scheduler::Worker::FastRnd", i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.marl::Scheduler::Fiber"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.marl::Allocator::Deleter" }
%"struct.marl::Allocator::Deleter" = type { %"class.marl::Allocator"*, i64 }
%"class.marl::Scheduler::Fiber" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.7", %"class.marl::Scheduler::Worker"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.marl::OSFiber"* }
%"class.marl::OSFiber" = type { %"class.marl::Allocator"*, %struct.marl_fiber_context, %"class.std::__1::function.10", %"struct.marl::Allocation" }
%struct.marl_fiber_context = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.std::__1::function.10" = type { %"class.std::__1::__function::__policy_func.13" }
%"class.std::__1::__function::__policy_func.13" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.14", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.14" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.marl::Allocation" = type { i8*, %"struct.marl::Allocation::Request" }
%"struct.marl::Allocation::Request" = type <{ i64, i64, i8, i8, [6 x i8] }>
%"class.marl::Thread" = type { %"class.marl::Thread::Impl"* }
%"class.marl::Thread::Impl" = type opaque
%"struct.marl::Scheduler::Worker::Work" = type { %"struct.std::__1::atomic.16", i64, %"class.std::__1::deque", %"class.std::__1::deque.28", %"struct.marl::Scheduler::WaitingFibers", i8, %"class.std::__1::condition_variable", %"class.marl::mutex" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::__split_buffer" = type { %"class.marl::Task"**, %"class.marl::Task"**, %"class.marl::Task"**, %"class.std::__1::__compressed_pair.21" }
%"class.marl::Task" = type <{ %"class.std::__1::function.10", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.marl::Task"** }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.marl::StlAllocator" }
%"struct.marl::StlAllocator" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.marl::StlAllocator.27" }
%"struct.marl::StlAllocator.27" = type { %"class.marl::Allocator"* }
%"class.std::__1::deque.28" = type { %"class.std::__1::__deque_base.29" }
%"class.std::__1::__deque_base.29" = type { %"struct.std::__1::__split_buffer.30", i64, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::__split_buffer.30" = type { %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.marl::Scheduler::Fiber"*** }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.marl::StlAllocator.34" }
%"struct.marl::StlAllocator.34" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.marl::StlAllocator.37" }
%"struct.marl::StlAllocator.37" = type { %"class.marl::Allocator"* }
%"struct.marl::Scheduler::WaitingFibers" = type { %"class.std::__1::set", %"class.std::__1::unordered_map" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.marl::StlAllocator.41" }
%"struct.marl::StlAllocator.41" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.44", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.58", [4 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.marl::StlAllocator.50" }
%"struct.marl::StlAllocator.50" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.marl::StlAllocator.54" }
%"struct.marl::StlAllocator.54" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { float }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.62, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.62 = type { i64 }
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.64" }
%"class.std::__1::__hash_table.64" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.80", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.68"** }
%"struct.std::__1::__hash_node_base.68" = type { %"struct.std::__1::__hash_node_base.68"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__bucket_list_deallocator.70" }
%"class.std::__1::__bucket_list_deallocator.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.marl::StlAllocator.73" }
%"struct.marl::StlAllocator.73" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.68" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.marl::StlAllocator.77" }
%"struct.marl::StlAllocator.77" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.marl::containers::vector" = type { %"class.marl::Allocator"*, i64, i64, [16 x %"struct.marl::aligned_storage<24, 8>::type"], %"struct.marl::aligned_storage<24, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"class.marl::Scheduler::Worker::FastRnd" = type { i64 }
%"struct.marl::Scheduler::SingleThreadedWorkers" = type { %"class.marl::mutex", %"class.std::__1::condition_variable", %"class.std::__1::unordered_map.83" }
%"class.std::__1::unordered_map.83" = type { %"class.std::__1::__hash_table.84" }
%"class.std::__1::__hash_table.84" = type <{ %"class.std::__1::unique_ptr.85", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87", %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::__hash_node_base.88"** }
%"struct.std::__1::__hash_node_base.88" = type { %"struct.std::__1::__hash_node_base.88"* }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::__bucket_list_deallocator.90" }
%"class.std::__1::__bucket_list_deallocator.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.marl::StlAllocator.93" }
%"struct.marl::StlAllocator.93" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.88" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.marl::StlAllocator.97" }
%"struct.marl::StlAllocator.97" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.marl::Scheduler::Worker"* }
%"class.std::__1::__thread_id" = type { i64 }
%"struct.marl::Thread::Affinity" = type { %"class.marl::containers::vector.117" }
%"class.marl::containers::vector.117" = type { %"class.marl::Allocator"*, i64, i64, [32 x %"struct.marl::aligned_storage<2, 2>::type"], %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<2, 2>::type" = type { [2 x i8] }
%"class.marl::lock" = type { %"class.std::__1::unique_lock" }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"struct.marl::Scheduler::WaitingFibers::Timeout" = type { %"class.std::__1::chrono::time_point", %"class.marl::Scheduler::Fiber"* }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%"class.std::__1::function.112" = type { %"class.std::__1::__function::__policy_func.115" }
%"class.std::__1::__function::__policy_func.115" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.116", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.116" = type { i1 (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.marl::Scheduler::WaitingFibers::Timeout" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__hash_node.146" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.144" }
%"struct.std::__1::__hash_value_type.144" = type { %"struct.std::__1::pair.145" }
%"struct.std::__1::pair.145" = type { %"class.marl::Scheduler::Fiber"*, %"class.std::__1::chrono::time_point" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node.146"* }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"struct.marl::StlAllocator.54"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.88", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.128" }
%"struct.std::__1::pair.128" = type { %"class.std::__1::__thread_id", %"class.std::__1::unique_ptr.109" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__hash_node_destructor.170" }
%"class.std::__1::__hash_node_destructor.170" = type <{ %"struct.marl::StlAllocator.97"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180", %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node.160"* }
%"struct.std::__1::__hash_node.160" = type { %"struct.std::__1::__hash_node_base.68", i64, %"class.marl::Scheduler::Fiber"* }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::__hash_node_destructor.182" }
%"class.std::__1::__hash_node_destructor.182" = type <{ %"struct.marl::StlAllocator.77"*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.184" = type { %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.marl::StlAllocator.34"* }
%"struct.std::__1::__split_buffer.191" = type { %"class.marl::Task"**, %"class.marl::Task"**, %"class.marl::Task"**, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.marl::StlAllocator"* }

$_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE9push_backERKS4_ = comdat any

$_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9push_backEOS2_ = comdat any

$_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE12emplace_backIJS2_EEERS2_DpOT_ = comdat any

$_ZN4marl10containers6vectorINSt3__110unique_ptrINS_9Scheduler5FiberENS_9Allocator7DeleterEEELi16EE12emplace_backEOS8_ = comdat any

$_ZNSt3__110shared_ptrIN4marl6Thread8Affinity6PolicyEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetEDn = comdat any

$_ZNSt3__110__function16__policy_invokerIFviEE12__call_emptyEPKNS0_16__policy_storageEi = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__18functionIFvvEEaSERKS2_ = comdat any

$_ZN4marl7OSFiber3runEPS0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__111unique_lockINS_5mutexEE6unlockEv = comdat any

$_ZNSt3__111unique_lockINS_5mutexEE4lockEv = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEmEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_ = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE25__emplace_unique_key_argsIS5_JRS5_RKSD_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE8__rehashEm = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetIPSL_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESV_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_ = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE14__erase_uniqueIS4_EEmRKT_ = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE4findIS4_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEmEERKT_ = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE21__remove_node_pointerEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE14__erase_uniqueIS5_EEmRKT_ = comdat any

$_ZNSt3__110unique_ptrIN4marl7OSFiberENS1_9Allocator7DeleterEE5resetEPS2_ = comdat any

$_ZNSt3__110unique_ptrIN4marl9Scheduler6WorkerENS1_9Allocator7DeleterEE5resetEPS3_ = comdat any

$_ZN4marl9Scheduler6WorkerD2Ev = comdat any

$_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEED2Ev = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetEDn = comdat any

$_ZNSt3__112__deque_baseIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEED2Ev = comdat any

$_ZNSt3__112__deque_baseIN4marl4TaskENS1_12StlAllocatorIS2_EEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEED2Ev = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetEDn = comdat any

$_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__112__deque_baseIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE5clearEv = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__112__deque_baseIN4marl4TaskENS1_12StlAllocatorIS2_EEE5clearEv = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE25__emplace_unique_key_argsIS2_JRS2_S9_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE8__rehashEm = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetIPSG_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESQ_ = comdat any

$_ZNSt3__122__hash_node_destructorIN4marl12StlAllocatorINS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrINS1_9Scheduler6WorkerENS1_9Allocator7DeleterEEEEEPvEEEEEclEPSE_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_ = comdat any

$_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE26__maybe_remove_front_spareEb = comdat any

$_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE = comdat any

$_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE = comdat any

$_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backERKS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backERKS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE10push_frontEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEE9push_backEOS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEE10push_frontERKS3_ = comdat any

$_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev = comdat any

$_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9pop_frontEv = comdat any

$_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE26__maybe_remove_front_spareEb = comdat any

$_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE = comdat any

$_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE25__emplace_unique_key_argsIS4_JRS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetIPSB_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESL_ = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZN4marl9Scheduler5boundE = hidden thread_local global %"class.marl::Scheduler"* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"Idle\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Yielded\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Queued\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Running\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Waiting\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@_ZN4marl9Scheduler6Worker7currentE = hidden thread_local global %"class.marl::Scheduler::Worker"* null, align 8
@_ZN4marl9Allocator7DefaultE = external local_unnamed_addr global %"class.marl::Allocator"*, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@.str.6 = private unnamed_addr constant [32 x i8] c"unique_lock::unlock: not locked\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"unique_lock::lock: references null mutex\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"unique_lock::lock: already locked\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"Thread<%.2d>\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker5startEvE3$_1FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker4stopEvE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker17createWorkerFiberEvE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@switch.table._ZN4marl9Scheduler5Fiber8toStringENS1_5StateE = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)], align 8

@_ZN4marl9SchedulerC1ERKNS0_6ConfigE = unnamed_addr alias void (%"class.marl::Scheduler"*, %"struct.marl::Scheduler::Config"*), void (%"class.marl::Scheduler"*, %"struct.marl::Scheduler::Config"*)* @_ZN4marl9SchedulerC2ERKNS0_6ConfigE
@_ZN4marl9SchedulerD1Ev = unnamed_addr alias void (%"class.marl::Scheduler"*), void (%"class.marl::Scheduler"*)* @_ZN4marl9SchedulerD2Ev
@_ZN4marl9Scheduler5FiberC1EONSt3__110unique_ptrINS_7OSFiberENS_9Allocator7DeleterEEEj = hidden unnamed_addr alias void (%"class.marl::Scheduler::Fiber"*, %"class.std::__1::unique_ptr.7"*, i32), void (%"class.marl::Scheduler::Fiber"*, %"class.std::__1::unique_ptr.7"*, i32)* @_ZN4marl9Scheduler5FiberC2EONSt3__110unique_ptrINS_7OSFiberENS_9Allocator7DeleterEEEj
@_ZN4marl9Scheduler6WorkerC1EPS0_NS1_4ModeEj = hidden unnamed_addr alias void (%"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler"*, i32, i32), void (%"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler"*, i32, i32)* @_ZN4marl9Scheduler6WorkerC2EPS0_NS1_4ModeEj

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define %"class.marl::Scheduler"* @_ZN4marl9Scheduler3getEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  ret %"class.marl::Scheduler"* %1
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden %"class.marl::Scheduler"** @_ZTWN4marl9Scheduler5boundE() local_unnamed_addr #1 {
  ret %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9Scheduler4bindEv(%"class.marl::Scheduler"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.marl::Allocation::Request", align 16
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"class.std::__1::unique_ptr.109", align 8
  %5 = alloca %"class.std::__1::__thread_id", align 8
  store %"class.marl::Scheduler"* %0, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  %6 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #15
  %7 = bitcast %"class.std::__1::unique_ptr.109"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 1
  %11 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %10, align 8
  %12 = bitcast %"struct.marl::Allocation::Request"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 24, i1 false) #16, !noalias !2
  %13 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %2, i64 0, i32 2
  %14 = bitcast i8* %13 to i16*
  store i16 512, i16* %14, align 16, !noalias !2
  %15 = bitcast %"struct.marl::Allocation::Request"* %2 to <2 x i64>*
  store <2 x i64> <i64 904, i64 8>, <2 x i64>* %15, align 16, !noalias !2
  %16 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16, !noalias !2
  %17 = bitcast %"class.marl::Allocator"* %11 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false) #16, !noalias !2
  %18 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %17, align 8, !noalias !2
  %19 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %18, i64 2
  %20 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, align 8, !noalias !2
  call void %20(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %11, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %2) #15, !noalias !2
  %21 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Worker"**
  %22 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %21, align 8, !noalias !2
  call void @_ZN4marl9Scheduler6WorkerC2EPS0_NS1_4ModeEj(%"class.marl::Scheduler::Worker"* %22, %"class.marl::Scheduler"* %0, i32 1, i32 -1) #15, !noalias !2
  %23 = bitcast %"struct.marl::Allocation"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !2
  %25 = bitcast %"class.std::__1::unique_ptr.109"* %4 to i64*
  store i64 %24, i64* %25, align 8, !alias.scope !2
  store %"class.marl::Allocator"* %11, %"class.marl::Allocator"** %8, align 8, !alias.scope !2
  store i64 1, i64* %9, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16, !noalias !2
  %26 = inttoptr i64 %24 to %"class.marl::Scheduler::Worker"*
  call void @_ZN4marl9Scheduler6Worker5startEv(%"class.marl::Scheduler::Worker"* %26) #17
  %27 = bitcast %"class.std::__1::__thread_id"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %5, i64 0, i32 0
  %29 = tail call i64 @pthread_self() #18
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0
  %31 = call { %"struct.std::__1::__hash_node_base.88"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE25__emplace_unique_key_argsIS2_JRS2_S9_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.84"* %30, %"class.std::__1::__thread_id"* nonnull dereferenceable(8) %5, %"class.std::__1::__thread_id"* nonnull dereferenceable(8) %5, %"class.std::__1::unique_ptr.109"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler6WorkerENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr.109"* nonnull %4, %"class.marl::Scheduler::Worker"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker5startEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.marl::Thread::Affinity", align 8
  %3 = alloca %"class.marl::Thread", align 8
  %4 = alloca %"class.std::__1::function.10", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %69 [
    i32 0, label %8
    i32 1, label %52
  ]

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 2
  %10 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %9, align 8
  %11 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %10, i64 0, i32 0, i32 1
  %12 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %11, align 8
  %13 = bitcast %"struct.marl::Thread::Affinity"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %13) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 128, i1 false)
  %14 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %10, i64 0, i32 0, i32 0, i32 2, i32 0
  %15 = load %"class.marl::Thread::Affinity::Policy"*, %"class.marl::Thread::Affinity::Policy"** %14, align 8
  %16 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.marl::Thread::Affinity::Policy"* %15 to void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)***
  %19 = load void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)**, void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)*, void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)** %19, i64 2
  %21 = load void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)*, void (%"struct.marl::Thread::Affinity"*, %"class.marl::Thread::Affinity::Policy"*, i32, %"class.marl::Allocator"*)** %20, align 8
  call void %21(%"struct.marl::Thread::Affinity"* nonnull sret %2, %"class.marl::Thread::Affinity::Policy"* %15, i32 %17, %"class.marl::Allocator"* %12) #15
  %22 = bitcast %"class.marl::Thread"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = bitcast %"class.std::__1::function.10"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #16
  %24 = ptrtoint %"class.marl::Scheduler::Worker"* %0 to i64
  %25 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %4, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker5startEvE3$_1S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %25, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker5startEvE3$_1FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %26, align 8
  %27 = bitcast %"class.std::__1::function.10"* %4 to i64*
  store i64 %24, i64* %27, align 8
  call void @_ZN4marl6ThreadC1EONS0_8AffinityEONSt3__18functionIFvvEEE(%"class.marl::Thread"* nonnull %3, %"struct.marl::Thread::Affinity"* nonnull dereferenceable(128) %2, %"class.std::__1::function.10"* nonnull dereferenceable(32) %4) #15
  %28 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 5
  %29 = call dereferenceable(8) %"class.marl::Thread"* @_ZN4marl6ThreadaSEOS0_(%"class.marl::Thread"* %28, %"class.marl::Thread"* nonnull dereferenceable(8) %3) #15
  call void @_ZN4marl6ThreadD1Ev(%"class.marl::Thread"* nonnull %3) #15
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %26, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %4, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void %32(i8* %36) #15
  br label %37

37:                                               ; preds = %8, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  %38 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %2, i64 0, i32 0, i32 5
  %39 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %51, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %2, i64 0, i32 0, i32 0
  %44 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %43, align 8
  %45 = bitcast %"class.marl::Allocator"* %44 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %46 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %46, i64 3
  %48 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %47, align 8
  call void %48(%"class.marl::Allocator"* %44, %"struct.marl::Allocation"* dereferenceable(32) %38) #15
  %49 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %2, i64 0, i32 0, i32 4
  %50 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 34, i1 false) #16
  br label %51

51:                                               ; preds = %37, %42
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %13) #16
  br label %69

52:                                               ; preds = %1
  store %"class.marl::Scheduler::Worker"* %0, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 2
  %55 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %54, align 8
  %56 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %55, i64 0, i32 0, i32 1
  %57 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %56, align 8
  call void @_ZN4marl9Scheduler5Fiber23createFromCurrentThreadEPNS_9AllocatorEj(%"class.std::__1::unique_ptr"* nonnull sret %5, %"class.marl::Allocator"* %57, i32 0) #17
  %58 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 3
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %59, align 8
  store %"class.marl::Scheduler::Fiber"* null, %"class.marl::Scheduler::Fiber"** %59, align 8
  tail call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* %58, %"class.marl::Scheduler::Fiber"* %60) #15
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %63 = bitcast %"struct.marl::Allocator::Deleter"* %62 to i8*
  %64 = bitcast %"struct.marl::Allocator::Deleter"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false) #16
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* nonnull %5, %"class.marl::Scheduler::Fiber"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  %65 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 4
  %68 = bitcast %"class.marl::Scheduler::Fiber"** %67 to i64*
  store i64 %66, i64* %68, align 8
  br label %69

69:                                               ; preds = %1, %52, %51
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9Scheduler6unbindEv() local_unnamed_addr #2 align 2 {
  %1 = alloca %"class.std::__1::__thread_id", align 8
  %2 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  tail call void @_ZN4marl9Scheduler6Worker4stopEv(%"class.marl::Scheduler::Worker"* %2) #17
  %3 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  %4 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %3, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #15
  %5 = bitcast %"class.std::__1::__thread_id"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %1, i64 0, i32 0
  %7 = tail call i64 @pthread_self() #18
  store i64 %7, i64* %6, align 8
  %8 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  %9 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %8, i64 0, i32 5, i32 2, i32 0
  %10 = call %"struct.std::__1::__hash_node_base.88"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table.84"* %9, %"class.std::__1::__thread_id"* nonnull dereferenceable(8) %1) #15
  %11 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  %12 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %11, i64 0, i32 5, i32 2, i32 0
  %13 = call %"struct.std::__1::__hash_node_base.88"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.84"* %12, %"struct.std::__1::__hash_node_base.88"* %10) #15
  %14 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  %15 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %14, i64 0, i32 5, i32 2, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %0
  %19 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %14, i64 0, i32 5, i32 1
  call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %19) #15
  br label %20

20:                                               ; preds = %18, %0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %4) #15
  store %"class.marl::Scheduler"* null, %"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker4stopEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.marl::Task", align 8
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %26 [
    i32 0, label %5
    i32 1, label %23
  ]

5:                                                ; preds = %1
  %6 = bitcast %"class.marl::Task"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #16
  %7 = ptrtoint %"class.marl::Scheduler::Worker"* %0 to i64
  %8 = bitcast %"class.marl::Task"* %2 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %9 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker4stopEvE3$_2S2_EEEEvPKNS0_16__policy_storageE" to i64), i64* %10, align 8
  %11 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker4stopEvE3$_2FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  %12 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %13) #15
  call void @_ZN4marl9Scheduler6Worker16enqueueAndUnlockEONS_4TaskE(%"class.marl::Scheduler::Worker"* %0, %"class.marl::Task"* nonnull dereferenceable(40) %2) #15
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8
  %17 = icmp eq void (i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void %16(i8* %20) #15
  br label %21

21:                                               ; preds = %18, %5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #16
  %22 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 5
  call void @_ZN4marl6Thread4joinEv(%"class.marl::Thread"* %22) #15
  br label %26

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %24) #15
  %25 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  store i8 1, i8* %25, align 8
  tail call void @_ZN4marl9Scheduler6Worker16runUntilShutdownEv(%"class.marl::Scheduler::Worker"* %0) #17
  store %"class.marl::Scheduler::Worker"* null, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %24) #15
  br label %26

26:                                               ; preds = %1, %23, %21
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9SchedulerC2ERKNS0_6ConfigE(%"class.marl::Scheduler"*, %"struct.marl::Scheduler::Config"* nocapture readonly dereferenceable(72)) unnamed_addr #5 align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 16
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = alloca %"struct.marl::Thread::Affinity", align 8
  %6 = bitcast %"class.marl::Scheduler"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 72, i1 false) #16, !alias.scope !7
  %7 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8, !noalias !7
  store i32 %9, i32* %7, align 8, !alias.scope !7
  %10 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::function"* %10 to i8*
  %13 = bitcast %"class.std::__1::function"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #16
  %14 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::__function::__policy_invoker"* %15 to i64*
  %17 = bitcast %"struct.std::__1::__function::__policy_invoker"* %14 to i64*
  %18 = load i64, i64* %16, align 8, !noalias !7
  store i64 %18, i64* %17, align 8, !alias.scope !7
  %19 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %20 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 0, i32 1, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8, !noalias !7
  store %"struct.std::__1::__function::__policy"* %21, %"struct.std::__1::__function::__policy"** %19, align 8, !alias.scope !7
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 0
  %23 = load i8* (i8*)*, i8* (i8*)** %22, align 8, !noalias !7
  %24 = icmp eq i8* (i8*)* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8, !noalias !7
  %28 = tail call i8* %23(i8* %27) #15, !noalias !7
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8, !alias.scope !7
  br label %30

30:                                               ; preds = %25, %2
  %31 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 0, i32 2
  %33 = bitcast %"class.std::__1::shared_ptr"* %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !7
  %35 = bitcast %"class.std::__1::shared_ptr"* %31 to i64*
  store i64 %34, i64* %35, align 8, !alias.scope !7
  %36 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  %37 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 0, i32 2, i32 1
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8, !noalias !7
  store %"class.std::__1::__shared_weak_count"* %38, %"class.std::__1::__shared_weak_count"** %36, align 8, !alias.scope !7
  %39 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %42 = atomicrmw add i64* %41, i64 1 monotonic, !noalias !7
  br label %43

43:                                               ; preds = %40, %30
  %44 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %1, i64 0, i32 1
  %46 = bitcast %"class.marl::Allocator"** %44 to i8*
  %47 = bitcast %"class.marl::Allocator"** %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #16
  %48 = icmp sgt i32 %9, 0
  %49 = icmp eq i64 %34, 0
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %85

51:                                               ; preds = %43
  %52 = bitcast %"struct.marl::Thread::Affinity"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %52) #16, !noalias !7
  %53 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %44, align 8, !alias.scope !7
  call void @_ZN4marl6Thread8Affinity3allEPNS_9AllocatorE(%"struct.marl::Thread::Affinity"* nonnull sret %5, %"class.marl::Allocator"* %53) #15, !noalias !7
  %54 = call { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } @_ZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"* nonnull dereferenceable(128) %5, %"class.marl::Allocator"* %53) #15, !noalias !7
  %55 = extractvalue { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } %54, 0
  %56 = ptrtoint %"class.marl::Thread::Affinity::Policy"* %55 to i64
  %57 = extractvalue { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } %54, 1
  %58 = ptrtoint %"class.std::__1::__shared_weak_count"* %57 to i64
  store i64 %56, i64* %35, align 8, !alias.scope !7
  %59 = bitcast %"class.std::__1::__shared_weak_count"** %36 to i64*
  store i64 %58, i64* %59, align 8, !alias.scope !7
  br i1 %39, label %70, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %62 = atomicrmw add i64* %61, i64 -1 acq_rel, !noalias !7
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %66 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %67 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %66, align 8, !noalias !7
  %68 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %67, i64 2
  %69 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %68, align 8, !noalias !7
  call void %69(%"class.std::__1::__shared_count"* %65) #15, !noalias !7
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #15, !noalias !7
  br label %70

70:                                               ; preds = %64, %60, %51
  %71 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %5, i64 0, i32 0, i32 5
  %72 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %71, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8, !noalias !7
  %74 = icmp eq i8* %73, null
  br i1 %74, label %84, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %5, i64 0, i32 0, i32 0
  %77 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %76, align 8, !noalias !7
  %78 = bitcast %"class.marl::Allocator"* %77 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %79 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %78, align 8, !noalias !7
  %80 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %79, i64 3
  %81 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %80, align 8, !noalias !7
  call void %81(%"class.marl::Allocator"* %77, %"struct.marl::Allocation"* dereferenceable(32) %71) #15, !noalias !7
  %82 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %5, i64 0, i32 0, i32 4
  %83 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 34, i1 false) #16, !noalias !7
  br label %84

84:                                               ; preds = %75, %70
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %52) #16, !noalias !7
  br label %85

85:                                               ; preds = %43, %84
  %86 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 134217728, i32* %86, align 4
  %87 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5
  %89 = bitcast %"class.marl::Allocator"** %45 to i64*
  %90 = bitcast i32* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 2052, i1 false)
  %91 = load i64, i64* %89, align 8
  %92 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %93 = bitcast %"struct.std::__1::__compressed_pair_elem.92"* %92 to i64*
  %94 = bitcast %"struct.marl::Scheduler::SingleThreadedWorkers"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 104, i1 false) #16
  store i64 %91, i64* %93, align 8
  %95 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.88"* null, %"struct.std::__1::__hash_node_base.88"** %95, align 8
  %96 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 1, i32 1
  %97 = bitcast %"struct.std::__1::__compressed_pair_elem.96"* %96 to i64*
  store i64 %91, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 3
  %100 = bitcast %"class.std::__1::__compressed_pair.103"* %99 to i32*
  store i32 1065353216, i32* %100, align 4
  br label %112

101:                                              ; preds = %112
  %102 = load i32, i32* %7, align 8
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %135

104:                                              ; preds = %101
  %105 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  %106 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %107 = bitcast i8* %106 to i16*
  %108 = bitcast %"struct.marl::Allocation"* %4 to i8*
  %109 = bitcast %"struct.marl::Allocation"* %4 to %"class.marl::Scheduler::Worker"**
  %110 = bitcast %"struct.marl::Allocation"* %4 to i64*
  %111 = bitcast %"struct.marl::Allocation::Request"* %3 to <2 x i64>*
  br label %119

112:                                              ; preds = %112, %85
  %113 = phi i64 [ 0, %85 ], [ %115, %112 ]
  %114 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 1, i32 0, i64 %113, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 -1, i32* %114 seq_cst, align 4
  %115 = add nuw nsw i64 %113, 1
  %116 = icmp eq i64 %115, 8
  br i1 %116, label %101, label %112

117:                                              ; preds = %119
  %118 = icmp sgt i32 %132, 0
  br i1 %118, label %136, label %135

119:                                              ; preds = %104, %119
  %120 = phi i64 [ 0, %104 ], [ %131, %119 ]
  %121 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 -86, i64 24, i1 false) #16
  store i16 512, i16* %107, align 16
  store <2 x i64> <i64 904, i64 8>, <2 x i64>* %111, align 16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #16
  %122 = bitcast %"class.marl::Allocator"* %121 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false) #16
  %123 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %123, i64 2
  %125 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %124, align 8
  call void %125(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %121, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #15
  %126 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %109, align 8
  %127 = trunc i64 %120 to i32
  call void @_ZN4marl9Scheduler6WorkerC2EPS0_NS1_4ModeEj(%"class.marl::Scheduler::Worker"* %126, %"class.marl::Scheduler"* %0, i32 0, i32 %127) #15
  %128 = load i64, i64* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #16
  %129 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 4, i32 0, i64 %120
  %130 = bitcast %"class.marl::Scheduler::Worker"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = add nuw nsw i64 %120, 1
  %132 = load i32, i32* %7, align 8
  %133 = sext i32 %132 to i64
  %134 = icmp slt i64 %131, %133
  br i1 %134, label %119, label %117

135:                                              ; preds = %136, %101, %117
  ret void

136:                                              ; preds = %117, %136
  %137 = phi i64 [ %140, %136 ], [ 0, %117 ]
  %138 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 4, i32 0, i64 %137
  %139 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %138, align 8
  call void @_ZN4marl9Scheduler6Worker5startEv(%"class.marl::Scheduler::Worker"* %139) #17
  %140 = add nuw nsw i64 %137, 1
  %141 = load i32, i32* %7, align 8
  %142 = sext i32 %141 to i64
  %143 = icmp slt i64 %140, %142
  br i1 %143, label %136, label %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9SchedulerD2Ev(%"class.marl::Scheduler"*) unnamed_addr #5 align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = alloca %"class.marl::lock", align 8
  %4 = bitcast %"class.marl::lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = bitcast %"class.marl::lock"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.std::__1::mutex"* %7, %"class.std::__1::mutex"** %5, align 8
  store i8 1, i8* %6, align 8
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %7) #15
  %9 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 1
  %10 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %1, %14
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %9, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %10) #15
  %15 = load i64, i64* %11, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %14

17:                                               ; preds = %14
  %18 = load i8, i8* %6, align 8, !range !10
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %1, %17
  %21 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %5, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %21) #15
  br label %22

22:                                               ; preds = %17, %20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  %23 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %46

26:                                               ; preds = %22
  %27 = sext i32 %24 to i64
  br label %40

28:                                               ; preds = %40
  %29 = load i32, i32* %23, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %46

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 1
  %33 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %34 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"struct.marl::Allocation"* %2 to %"class.marl::Scheduler::Worker"**
  %38 = sext i32 %29 to i64
  %39 = bitcast i64* %34 to <2 x i64>*
  br label %62

40:                                               ; preds = %26, %40
  %41 = phi i64 [ %27, %26 ], [ %42, %40 ]
  %42 = add nsw i64 %41, -1
  %43 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 4, i32 0, i64 %42
  %44 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %43, align 8
  call void @_ZN4marl9Scheduler6Worker4stopEv(%"class.marl::Scheduler::Worker"* %44) #17
  %45 = icmp sgt i64 %42, 0
  br i1 %45, label %40, label %28

46:                                               ; preds = %62, %22, %28
  %47 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2
  %48 = getelementptr inbounds %"class.std::__1::unordered_map.83", %"class.std::__1::unordered_map.83"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 5, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %49, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.84"* %48, %"struct.std::__1::__hash_node_base.88"* %50) #15
  %51 = getelementptr inbounds %"class.std::__1::unordered_map.83", %"class.std::__1::unordered_map.83"* %47, i64 0, i32 0, i32 0
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetEDn(%"class.std::__1::unique_ptr.85"* %51, i8* null) #15
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %9) #15
  %52 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 2
  call void @_ZNSt3__110shared_ptrIN4marl6Thread8Affinity6PolicyEED2Ev(%"class.std::__1::shared_ptr"* %52) #15
  %53 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %54 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %54, i64 0, i32 1
  %56 = load void (i8*)*, void (i8*)** %55, align 8
  %57 = icmp eq void (i8*)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void %56(i8* %60) #15
  br label %61

61:                                               ; preds = %46, %58
  ret void

62:                                               ; preds = %31, %62
  %63 = phi i64 [ %38, %31 ], [ %64, %62 ]
  %64 = add nsw i64 %63, -1
  %65 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %32, align 8
  %66 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 4, i32 0, i64 %64
  %67 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %66, align 8
  call void @_ZN4marl9Scheduler6WorkerD2Ev(%"class.marl::Scheduler::Worker"* %67) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false) #16
  store i16 512, i16* %36, align 8
  store %"class.marl::Scheduler::Worker"* %67, %"class.marl::Scheduler::Worker"** %37, align 8
  store <2 x i64> <i64 904, i64 8>, <2 x i64>* %39, align 8
  %68 = bitcast %"class.marl::Allocator"* %65 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %69 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %69, i64 3
  %71 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %70, align 8
  call void %71(%"class.marl::Allocator"* %65, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #16
  %72 = icmp sgt i64 %64, 0
  br i1 %72, label %62, label %46
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9Scheduler7enqueueEONS_4TaskE(%"class.marl::Scheduler"* nocapture, %"class.marl::Task"* dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %8, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %9) #15
  tail call void @_ZN4marl9Scheduler6Worker16enqueueAndUnlockEONS_4TaskE(%"class.marl::Scheduler::Worker"* %8, %"class.marl::Task"* dereferenceable(40) %1) #15
  br label %42

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %14, %29
  %18 = atomicrmw sub i32* %15, i32 1 seq_cst
  %19 = add i32 %18, 7
  %20 = and i32 %19, 7
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 1, i32 0, i64 %21, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw xchg i32* %22, i32 -1 seq_cst
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = atomicrmw add i32* %16, i32 1 seq_cst
  %27 = load i32, i32* %11, align 8
  %28 = urem i32 %26, %27
  br label %29

29:                                               ; preds = %25, %17
  %30 = phi i32 [ %28, %25 ], [ %23, %17 ]
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 4, i32 0, i64 %31
  %33 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %32, align 8
  %34 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %33, i64 0, i32 6, i32 7, i32 0
  %35 = tail call zeroext i1 @_ZNSt3__15mutex8try_lockEv(%"class.std::__1::mutex"* %34) #15
  br i1 %35, label %36, label %17

36:                                               ; preds = %29
  tail call void @_ZN4marl9Scheduler6Worker16enqueueAndUnlockEONS_4TaskE(%"class.marl::Scheduler::Worker"* %33, %"class.marl::Task"* dereferenceable(40) %1) #17
  br label %42

37:                                               ; preds = %10
  %38 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  %39 = icmp eq %"class.marl::Scheduler::Worker"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %38, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %41) #15
  tail call void @_ZN4marl9Scheduler6Worker16enqueueAndUnlockEONS_4TaskE(%"class.marl::Scheduler::Worker"* nonnull %38, %"class.marl::Task"* dereferenceable(40) %1) #15
  br label %42

42:                                               ; preds = %40, %37, %36, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker7enqueueEONS_4TaskE(%"class.marl::Scheduler::Worker"*, %"class.marl::Task"* dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #15
  tail call void @_ZN4marl9Scheduler6Worker16enqueueAndUnlockEONS_4TaskE(%"class.marl::Scheduler::Worker"* %0, %"class.marl::Task"* dereferenceable(40) %1) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4marl9Scheduler6Worker7tryLockEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  %3 = tail call zeroext i1 @_ZNSt3__15mutex8try_lockEv(%"class.std::__1::mutex"* %2) #15
  ret i1 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker16enqueueAndUnlockEONS_4TaskE(%"class.marl::Scheduler::Worker"*, %"class.marl::Task"* dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 5
  %4 = load i8, i8* %3, align 8, !range !10
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2
  tail call void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9push_backEOS2_(%"class.std::__1::deque"* %6, %"class.marl::Task"* dereferenceable(40) %1) #17
  %7 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 1 seq_cst
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %9) #15
  br i1 %5, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 6
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %11) #15
  br label %12

12:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define dereferenceable(72) %"struct.marl::Scheduler::Config"* @_ZNK4marl9Scheduler6configEv(%"class.marl::Scheduler"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0
  ret %"struct.marl::Scheduler::Config"* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4marl9Scheduler9stealWorkEPNS0_6WorkerEmRNS_4TaskE(%"class.marl::Scheduler"* nocapture readonly, %"class.marl::Scheduler::Worker"* readnone, i64, %"class.marl::Task"* nocapture dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %4
  %9 = sext i32 %6 to i64
  %10 = urem i64 %2, %9
  %11 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 4, i32 0, i64 %10
  %12 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %11, align 8
  %13 = icmp eq %"class.marl::Scheduler::Worker"* %12, %1
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZN4marl9Scheduler6Worker5stealERNS_4TaskE(%"class.marl::Scheduler::Worker"* %12, %"class.marl::Task"* dereferenceable(40) %3) #17
  br i1 %15, label %17, label %16

16:                                               ; preds = %14, %8
  br label %17

17:                                               ; preds = %4, %16, %14
  %18 = phi i1 [ true, %14 ], [ false, %16 ], [ false, %4 ]
  ret i1 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN4marl9Scheduler6Worker5stealERNS_4TaskE(%"class.marl::Scheduler::Worker"*, %"class.marl::Task"* nocapture dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 seq_cst, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %66, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  %8 = tail call zeroext i1 @_ZNSt3__15mutex8try_lockEv(%"class.std::__1::mutex"* %7) #15
  br i1 %8, label %9, label %66

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2
  %11 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 1
  %16 = load %"class.marl::Task"**, %"class.marl::Task"*** %15, align 8
  %17 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = udiv i64 %18, 102
  %20 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %16, i64 %19
  %21 = load %"class.marl::Task"*, %"class.marl::Task"** %20, align 8
  %22 = urem i64 %18, 102
  %23 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %21, i64 %22, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %14, %9
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %7) #15
  br label %66

28:                                               ; preds = %14
  %29 = atomicrmw sub i64* %3, i64 1 seq_cst
  %30 = load %"class.marl::Task"**, %"class.marl::Task"*** %15, align 8, !noalias !11
  %31 = load i64, i64* %17, align 8, !noalias !11
  %32 = udiv i64 %31, 102
  %33 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %30, i64 %32
  %34 = load %"class.marl::Task"*, %"class.marl::Task"** %33, align 8, !noalias !11
  %35 = urem i64 %31, 102
  %36 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %34, i64 %35
  %37 = bitcast %"class.marl::Task"* %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %34, i64 %35, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %39 to i64*
  %41 = load i64, i64* %40, align 8, !noalias !11
  %42 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %34, i64 %35, i32 0, i32 0, i32 2
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %42, align 8, !noalias !11
  %44 = ptrtoint %"struct.std::__1::__function::__policy"* %43 to i64
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %43, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8, !noalias !11
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %28
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %42, align 8, !noalias !11
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %40, align 8, !noalias !11
  br label %49

49:                                               ; preds = %28, %48
  %50 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %34, i64 %35, i32 1
  %51 = load i32, i32* %50, align 8, !noalias !11
  tail call void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9pop_frontEv(%"class.std::__1::deque"* %10) #15, !noalias !11
  %52 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 2
  %53 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %52, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %52, align 8
  %54 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %54 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %55, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %53, i64 0, i32 1
  %57 = load void (i8*)*, void (i8*)** %56, align 8
  %58 = icmp eq void (i8*)* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void %57(i8* %61) #15
  br label %62

62:                                               ; preds = %59, %49
  %63 = bitcast %"class.marl::Task"* %1 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %63, align 8
  store i64 %41, i64* %55, align 8
  %64 = bitcast %"struct.std::__1::__function::__policy"** %52 to i64*
  store i64 %44, i64* %64, align 8
  %65 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 1
  store i32 %51, i32* %65, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %7) #15
  br label %66

66:                                               ; preds = %6, %2, %62, %27
  %67 = phi i1 [ false, %27 ], [ true, %62 ], [ false, %2 ], [ false, %6 ]
  ret i1 %67
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler15onBeginSpinningEi(%"class.marl::Scheduler"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 1 seq_cst
  %5 = and i32 %4, 7
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %0, i64 0, i32 1, i32 0, i64 %6, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %7 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9Scheduler6Config8allCoresEv(%"struct.marl::Scheduler::Config"* noalias nocapture sret) local_unnamed_addr #5 align 2 {
  %2 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %3 = tail call i32 @_ZN4marl6Thread14numLogicalCPUsEv() #15
  %4 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 0, i32 0
  store i32 %3, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::__function::__policy_invoker"* %6 to i64*
  %8 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFviEE12__call_emptyEPKNS0_16__policy_storageEi to i64), i64* %7, align 8
  %9 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %9, align 8
  %10 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 1
  %12 = bitcast %"class.marl::Allocator"** %11 to i64*
  %13 = bitcast %"class.std::__1::shared_ptr"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  store i64 %2, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %0, i64 0, i32 2
  store i64 1048576, i64* %14, align 8
  ret void
}

; Function Attrs: optsize
declare i32 @_ZN4marl6Thread14numLogicalCPUsEv() local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler5FiberC2EONSt3__110unique_ptrINS_7OSFiberENS_9Allocator7DeleterEEEj(%"class.marl::Scheduler::Fiber"* nocapture, %"class.std::__1::unique_ptr.7"* nocapture dereferenceable(24), i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 0
  store i32 %2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::unique_ptr.7"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.marl::OSFiber"* null, %"class.marl::OSFiber"** %6, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %1, i64 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.7"* %5 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.15"* %11 to i8*
  %13 = bitcast %"struct.marl::Allocator::Deleter"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #16
  %14 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 3
  %15 = load i64, i64* bitcast (%"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE to i64*), align 8
  %16 = bitcast %"class.marl::Scheduler::Worker"** %14 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 4
  store i32 4, i32* %17, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler5Fiber7currentEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  %2 = icmp eq %"class.marl::Scheduler::Worker"* %1, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %0
  %4 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %1, i64 0, i32 4
  %5 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %4, align 8
  br label %6

6:                                                ; preds = %0, %3
  %7 = phi %"class.marl::Scheduler::Fiber"* [ %5, %3 ], [ null, %0 ]
  ret %"class.marl::Scheduler::Fiber"* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9Scheduler5Fiber6notifyEv(%"class.marl::Scheduler::Fiber"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 3
  %3 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %2, align 8
  tail call void @_ZN4marl9Scheduler6Worker7enqueueEPNS0_5FiberE(%"class.marl::Scheduler::Worker"* %3, %"class.marl::Scheduler::Fiber"* %0) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker7enqueueEPNS0_5FiberE(%"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Fiber"*) local_unnamed_addr #5 align 2 {
  %3 = alloca %"class.marl::Scheduler::Fiber"*, align 8
  %4 = alloca %"struct.marl::Scheduler::WaitingFibers::Timeout", align 8
  %5 = alloca %"class.marl::Scheduler::Fiber"*, align 8
  store %"class.marl::Scheduler::Fiber"* %1, %"class.marl::Scheduler::Fiber"** %5, align 8
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #15
  %7 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %29 [
    i32 4, label %28
    i32 3, label %28
    i32 2, label %9
  ]

9:                                                ; preds = %2
  %10 = bitcast %"class.marl::Scheduler::Fiber"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  store %"class.marl::Scheduler::Fiber"* %1, %"class.marl::Scheduler::Fiber"** %3, align 8
  %11 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0
  %12 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_(%"class.std::__1::__hash_table"* %11, %"class.marl::Scheduler::Fiber"** nonnull dereferenceable(8) %3) #15
  %13 = icmp eq %"struct.std::__1::__hash_node_base"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %12, i64 3
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.marl::Scheduler::WaitingFibers::Timeout"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %4, i64 0, i32 1
  %21 = bitcast %"class.marl::Scheduler::Fiber"** %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.marl::Scheduler::Fiber"** %20 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0
  %25 = call i64 @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE14__erase_uniqueIS4_EEmRKT_(%"class.std::__1::__tree"* %24, %"struct.marl::Scheduler::WaitingFibers::Timeout"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  %26 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE(%"class.std::__1::__hash_table"* %11, %"struct.std::__1::__hash_node_base"* nonnull %12) #15
  br label %27

27:                                               ; preds = %9, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  br label %29

28:                                               ; preds = %2, %2
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  br label %40

29:                                               ; preds = %27, %2
  %30 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 5
  %31 = load i8, i8* %30, align 8, !range !10
  %32 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3
  call void @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE9push_backERKS4_(%"class.std::__1::deque.28"* %32, %"class.marl::Scheduler::Fiber"** nonnull dereferenceable(8) %5) #17
  %33 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %5, align 8
  %34 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %33, i64 0, i32 4
  store i32 3, i32* %34, align 8
  %35 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i64* %35, i64 1 seq_cst
  %37 = icmp eq i8 %31, 0
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %6) #15
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 6
  call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %39) #15
  br label %40

40:                                               ; preds = %28, %29, %38
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl9Scheduler5Fiber4waitERNS_4lockERKNSt3__18functionIFbvEEE(%"class.marl::Scheduler::Fiber"* nocapture readonly, %"class.marl::lock"* dereferenceable(16), %"class.std::__1::function.112"* dereferenceable(32)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 3
  %5 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %4, align 8
  %6 = tail call zeroext i1 @_ZN4marl9Scheduler6Worker4waitERNS_4lockEPKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIxNS4_5ratioILl1ELl1000000EEEEEEERKNS4_8functionIFbvEEE(%"class.marl::Scheduler::Worker"* %5, %"class.marl::lock"* dereferenceable(16) %1, %"class.std::__1::chrono::time_point"* null, %"class.std::__1::function.112"* dereferenceable(32) %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define zeroext i1 @_ZN4marl9Scheduler6Worker4waitERNS_4lockEPKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIxNS4_5ratioILl1ELl1000000EEEEEEERKNS4_8functionIFbvEEE(%"class.marl::Scheduler::Worker"*, %"class.marl::lock"* dereferenceable(16), %"class.std::__1::chrono::time_point"*, %"class.std::__1::function.112"* dereferenceable(32)) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.std::__1::function.112", %"class.std::__1::function.112"* %3, i64 0, i32 0, i32 1, i32 0
  %6 = load i1 (%"union.std::__1::__function::__policy_storage"*)*, i1 (%"union.std::__1::__function::__policy_storage"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.112", %"class.std::__1::function.112"* %3, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 %6(%"union.std::__1::__function::__policy_storage"* %7) #15
  br i1 %8, label %22, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  %11 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %1, i64 0, i32 0
  %12 = icmp eq %"class.std::__1::chrono::time_point"* %2, null
  %13 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %9, %19
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %10) #15
  tail call void @_ZNSt3__111unique_lockINS_5mutexEE6unlockEv(%"class.std::__1::unique_lock"* %11) #15
  tail call void @_ZN4marl9Scheduler6Worker7suspendEPKNSt3__16chrono10time_pointINS3_12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000EEEEEEE(%"class.marl::Scheduler::Worker"* %0, %"class.std::__1::chrono::time_point"* %2) #17
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %10) #15
  tail call void @_ZNSt3__111unique_lockINS_5mutexEE4lockEv(%"class.std::__1::unique_lock"* %11) #15
  br i1 %12, label %19, label %15

15:                                               ; preds = %14
  %16 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %17 = load i64, i64* %13, align 8
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %15, %14
  %20 = load i1 (%"union.std::__1::__function::__policy_storage"*)*, i1 (%"union.std::__1::__function::__policy_storage"*)** %5, align 8
  %21 = tail call zeroext i1 %20(%"union.std::__1::__function::__policy_storage"* %7) #15
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %15, %4
  %23 = phi i1 [ true, %4 ], [ false, %15 ], [ true, %19 ]
  ret i1 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler5Fiber8switchToEPS1_(%"class.marl::Scheduler::Fiber"* readonly, %"class.marl::Scheduler::Fiber"* readonly) local_unnamed_addr #5 align 2 {
  %3 = icmp eq %"class.marl::Scheduler::Fiber"* %1, %0
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %5, align 8
  %7 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %7, align 8
  %9 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %8, i64 0, i32 1
  tail call void @marl_fiber_swap(%struct.marl_fiber_context* %9, %struct.marl_fiber_context* %10) #15
  br label %11

11:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler5Fiber6createEPNS_9AllocatorEjmRKNSt3__18functionIFvvEEE(%"class.std::__1::unique_ptr"* noalias nocapture sret, %"class.marl::Allocator"*, i32, i64, %"class.std::__1::function.10"* dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"struct.marl::Allocation::Request", align 16
  %7 = alloca %"struct.marl::Allocation", align 8
  %8 = alloca %"struct.marl::Allocation::Request", align 16
  %9 = alloca %"struct.marl::Allocation", align 8
  %10 = alloca %"struct.marl::Allocation::Request", align 8
  %11 = alloca %"struct.marl::Allocation", align 8
  %12 = alloca %"class.std::__1::unique_ptr.7", align 8
  %13 = bitcast %"class.std::__1::unique_ptr.7"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  %14 = ptrtoint %"class.marl::Allocator"* %1 to i64
  %15 = bitcast %"struct.marl::Allocation::Request"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16, !noalias !14
  %16 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %10, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %10, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #16, !noalias !14
  %18 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %10, i64 0, i32 2
  %19 = bitcast i8* %18 to i16*
  store i16 256, i16* %19, align 8, !noalias !14
  store i64 %3, i64* %16, align 8, !noalias !14
  store i64 16, i64* %17, align 8, !noalias !14
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %12, i64 0, i32 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.marl::Allocation::Request"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 24, i1 false) #16, !noalias !17
  %23 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %8, i64 0, i32 2
  %24 = bitcast i8* %23 to i16*
  store i16 512, i16* %24, align 16, !noalias !17
  %25 = bitcast %"struct.marl::Allocation::Request"* %8 to <2 x i64>*
  store <2 x i64> <i64 152, i64 8>, <2 x i64>* %25, align 16, !noalias !17
  %26 = bitcast %"struct.marl::Allocation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #16, !noalias !17
  %27 = bitcast %"class.marl::Allocator"* %1 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false) #16, !noalias !17
  %28 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %27, align 8, !noalias !17
  %29 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %28, i64 2
  %30 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %29, align 8, !noalias !17
  call void %30(%"struct.marl::Allocation"* nonnull sret %9, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %8) #15, !noalias !17
  %31 = bitcast %"struct.marl::Allocation"* %9 to %"class.marl::OSFiber"**
  %32 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %31, align 8, !noalias !17
  %33 = bitcast %"class.marl::OSFiber"* %32 to i64*
  store i64 %14, i64* %33, align 8, !noalias !17
  %34 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %32, i64 0, i32 2, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %34, align 8, !noalias !17
  %35 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %32, i64 0, i32 2, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %35, align 8, !noalias !17
  %36 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %32, i64 0, i32 3
  %37 = bitcast %"struct.marl::Allocation"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 26, i1 false) #16, !noalias !17
  %38 = bitcast %"struct.marl::Allocation"* %9 to i64*
  %39 = load i64, i64* %38, align 8, !noalias !17
  %40 = bitcast %"class.std::__1::unique_ptr.7"* %12 to i64*
  store i64 %39, i64* %40, align 8, !alias.scope !17
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %20, align 8, !alias.scope !17
  store i64 1, i64* %21, align 8, !alias.scope !17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #16, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16, !noalias !17
  %41 = inttoptr i64 %39 to %"class.marl::OSFiber"*
  %42 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %41, i64 0, i32 1
  %43 = bitcast %struct.marl_fiber_context* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 80, i1 false) #16, !noalias !14
  %44 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %41, i64 0, i32 2
  %45 = call dereferenceable(32) %"class.std::__1::function.10"* @_ZNSt3__18functionIFvvEEaSERKS2_(%"class.std::__1::function.10"* %44, %"class.std::__1::function.10"* dereferenceable(32) %4) #15, !noalias !14
  %46 = bitcast %"struct.marl::Allocation"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #16, !noalias !14
  %47 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %27, align 8, !noalias !14
  %48 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %47, i64 2
  %49 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %48, align 8, !noalias !14
  call void %49(%"struct.marl::Allocation"* nonnull sret %11, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %10) #15, !noalias !14
  %50 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %41, i64 0, i32 3
  %51 = bitcast %"struct.marl::Allocation"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %46, i64 32, i1 false) #16, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #16, !noalias !14
  %52 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %41, i64 0, i32 3, i32 0
  %53 = load i8*, i8** %52, align 8, !noalias !14
  %54 = trunc i64 %3 to i32
  %55 = inttoptr i64 %39 to i8*
  call void @marl_fiber_set_target(%struct.marl_fiber_context* %42, i8* %53, i32 %54, void (i8*)* bitcast (void (%"class.marl::OSFiber"*)* @_ZN4marl7OSFiber3runEPS0_ to void (i8*)*), i8* %55) #15, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16, !noalias !14
  %56 = bitcast %"struct.marl::Allocation::Request"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #16, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 24, i1 false) #16, !noalias !22
  %57 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 2
  %58 = bitcast i8* %57 to i16*
  store i16 512, i16* %58, align 16, !noalias !22
  %59 = bitcast %"struct.marl::Allocation::Request"* %6 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %59, align 16, !noalias !22
  %60 = bitcast %"struct.marl::Allocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #16, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 32, i1 false) #16, !noalias !22
  %61 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %27, align 8, !noalias !22
  %62 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %61, i64 2
  %63 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %62, align 8, !noalias !22
  call void %63(%"struct.marl::Allocation"* nonnull sret %7, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %6) #15, !noalias !22
  %64 = bitcast %"struct.marl::Allocation"* %7 to %"class.marl::Scheduler::Fiber"**
  %65 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %64, align 8, !noalias !22
  %66 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %65, i64 0, i32 0
  store i32 %2, i32* %66, align 8, !noalias !22
  %67 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %65, i64 0, i32 2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %12, i64 0, i32 0, i32 0, i32 0
  %69 = load i64, i64* %40, align 8, !noalias !22
  store %"class.marl::OSFiber"* null, %"class.marl::OSFiber"** %68, align 8, !noalias !22
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %12, i64 0, i32 0, i32 1, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr.7"* %67 to i64*
  store i64 %69, i64* %71, align 8, !noalias !22
  %72 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %65, i64 0, i32 2, i32 0, i32 1
  %73 = bitcast %"struct.std::__1::__compressed_pair_elem.15"* %72 to i8*
  %74 = bitcast %"struct.marl::Allocator::Deleter"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #16, !noalias !22
  %75 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %65, i64 0, i32 3
  %76 = load i64, i64* bitcast (%"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE to i64*), align 8, !noalias !22
  %77 = bitcast %"class.marl::Scheduler::Worker"** %75 to i64*
  store i64 %76, i64* %77, align 8, !noalias !22
  %78 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %65, i64 0, i32 4
  store i32 4, i32* %78, align 8, !noalias !22
  %79 = bitcast %"struct.marl::Allocation"* %7 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !22
  %81 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  store i64 %80, i64* %81, align 8, !alias.scope !22
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %82, align 8, !alias.scope !22
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i64 1, i64* %83, align 8, !alias.scope !22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #16, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #16, !noalias !22
  call void @_ZNSt3__110unique_ptrIN4marl7OSFiberENS1_9Allocator7DeleterEE5resetEPS2_(%"class.std::__1::unique_ptr.7"* nonnull %12, %"class.marl::OSFiber"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler5Fiber23createFromCurrentThreadEPNS_9AllocatorEj(%"class.std::__1::unique_ptr"* noalias nocapture sret, %"class.marl::Allocator"*, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.marl::Allocation::Request", align 16
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"struct.marl::Allocation::Request", align 16
  %7 = alloca %"struct.marl::Allocation", align 8
  %8 = alloca %"class.std::__1::unique_ptr.7", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.7"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = ptrtoint %"class.marl::Allocator"* %1 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %8, i64 0, i32 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.marl::Allocation::Request"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16, !noalias !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 24, i1 false) #16, !noalias !27
  %14 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 2
  %15 = bitcast i8* %14 to i16*
  store i16 512, i16* %15, align 16, !noalias !27
  %16 = bitcast %"struct.marl::Allocation::Request"* %6 to <2 x i64>*
  store <2 x i64> <i64 152, i64 8>, <2 x i64>* %16, align 16, !noalias !27
  %17 = bitcast %"struct.marl::Allocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #16, !noalias !27
  %18 = bitcast %"class.marl::Allocator"* %1 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false) #16, !noalias !27
  %19 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8, !noalias !27
  %20 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, i64 2
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %20, align 8, !noalias !27
  call void %21(%"struct.marl::Allocation"* nonnull sret %7, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %6) #15, !noalias !27
  %22 = bitcast %"struct.marl::Allocation"* %7 to %"class.marl::OSFiber"**
  %23 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %22, align 8, !noalias !27
  %24 = bitcast %"class.marl::OSFiber"* %23 to i64*
  store i64 %10, i64* %24, align 8, !noalias !27
  %25 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %23, i64 0, i32 2, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %25, align 8, !noalias !27
  %26 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %23, i64 0, i32 2, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %26, align 8, !noalias !27
  %27 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %23, i64 0, i32 3
  %28 = bitcast %"struct.marl::Allocation"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 26, i1 false) #16, !noalias !27
  %29 = bitcast %"struct.marl::Allocation"* %7 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !27
  %31 = bitcast %"class.std::__1::unique_ptr.7"* %8 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !27
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %11, align 8, !alias.scope !27
  store i64 1, i64* %12, align 8, !alias.scope !27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #16, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16, !noalias !27
  %32 = inttoptr i64 %30 to %"class.marl::OSFiber"*
  %33 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %32, i64 0, i32 1
  %34 = bitcast %struct.marl_fiber_context* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 80, i1 false) #16, !noalias !34
  %35 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #16, !noalias !35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 24, i1 false) #16, !noalias !35
  %36 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %37 = bitcast i8* %36 to i16*
  store i16 512, i16* %37, align 16, !noalias !35
  %38 = bitcast %"struct.marl::Allocation::Request"* %4 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %38, align 16, !noalias !35
  %39 = bitcast %"struct.marl::Allocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #16, !noalias !35
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 32, i1 false) #16, !noalias !35
  %40 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8, !noalias !35
  %41 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %40, i64 2
  %42 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %41, align 8, !noalias !35
  call void %42(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15, !noalias !35
  %43 = bitcast %"struct.marl::Allocation"* %5 to %"class.marl::Scheduler::Fiber"**
  %44 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %43, align 8, !noalias !35
  %45 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %44, i64 0, i32 0
  store i32 %2, i32* %45, align 8, !noalias !35
  %46 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %44, i64 0, i32 2
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %8, i64 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %31, align 8, !noalias !35
  store %"class.marl::OSFiber"* null, %"class.marl::OSFiber"** %47, align 8, !noalias !35
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %8, i64 0, i32 0, i32 1, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr.7"* %46 to i64*
  store i64 %48, i64* %50, align 8, !noalias !35
  %51 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %44, i64 0, i32 2, i32 0, i32 1
  %52 = bitcast %"struct.std::__1::__compressed_pair_elem.15"* %51 to i8*
  %53 = bitcast %"struct.marl::Allocator::Deleter"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false) #16, !noalias !35
  %54 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %44, i64 0, i32 3
  %55 = load i64, i64* bitcast (%"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE to i64*), align 8, !noalias !35
  %56 = bitcast %"class.marl::Scheduler::Worker"** %54 to i64*
  store i64 %55, i64* %56, align 8, !noalias !35
  %57 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %44, i64 0, i32 4
  store i32 4, i32* %57, align 8, !noalias !35
  %58 = bitcast %"struct.marl::Allocation"* %5 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !35
  %60 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  store i64 %59, i64* %60, align 8, !alias.scope !35
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %61, align 8, !alias.scope !35
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i64 1, i64* %62, align 8, !alias.scope !35
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #16, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #16, !noalias !35
  call void @_ZNSt3__110unique_ptrIN4marl7OSFiberENS1_9Allocator7DeleterEE5resetEPS2_(%"class.std::__1::unique_ptr.7"* nonnull %8, %"class.marl::OSFiber"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i8* @_ZN4marl9Scheduler5Fiber8toStringENS1_5StateE(i32) local_unnamed_addr #6 align 2 {
  %2 = icmp ult i32 %0, 5
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZN4marl9Scheduler5Fiber8toStringENS1_5StateE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6WorkerC2EPS0_NS1_4ModeEj(%"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler"*, i32, i32) unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 0
  store i32 %3, i32* %5, align 8
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 2
  store %"class.marl::Scheduler"* %1, %"class.marl::Scheduler"** %7, align 8
  %8 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %"class.marl::Allocator"** %10 to i64*
  %12 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false)
  %13 = load i64, i64* %11, align 8
  %14 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 3, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %14 to i64*
  %16 = bitcast %"struct.marl::Scheduler::Worker::Work"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false) #16
  store i64 %13, i64* %15, align 8
  %17 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 1
  %18 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 2, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %18 to i64*
  %20 = bitcast i64* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #16
  store i64 %13, i64* %19, align 8
  %21 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3
  %22 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"struct.std::__1::__compressed_pair_elem.33"* %22 to i64*
  %24 = bitcast %"class.std::__1::deque.28"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #16
  store i64 %13, i64* %23, align 8
  %25 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 1
  %26 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 2, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.36"* %26 to i64*
  %28 = bitcast i64* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #16
  store i64 %13, i64* %27, align 8
  %29 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1, i32 1
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.40"* %30 to i64*
  %32 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__compressed_pair.38"* %32 to i64*
  store i64 0, i64* %33, align 8
  store i64 %13, i64* %31, align 8
  %34 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %29, align 8
  %36 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1
  %37 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"struct.std::__1::__compressed_pair_elem.49"* %37 to i64*
  %39 = bitcast %"class.std::__1::unordered_map"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #16
  store i64 %13, i64* %38, align 8
  %40 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %40, align 8
  %41 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 1, i32 1
  %42 = bitcast %"struct.std::__1::__compressed_pair_elem.53"* %41 to i64*
  store i64 %13, i64* %42, align 8
  %43 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 3
  %45 = bitcast %"class.std::__1::__compressed_pair.58"* %44 to i32*
  store i32 1065353216, i32* %45, align 4
  %46 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 5
  store i8 1, i8* %46, align 8
  %47 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 6
  %48 = bitcast %"class.std::__1::condition_variable"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 88, i1 false) #16
  %49 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7
  %50 = load i64, i64* %11, align 8
  %51 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %"struct.std::__1::__compressed_pair_elem.72"* %51 to i64*
  %53 = bitcast %"class.std::__1::unordered_set"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #16
  store i64 %50, i64* %52, align 8
  %54 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %54, align 8
  %55 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 1, i32 1
  %56 = bitcast %"struct.std::__1::__compressed_pair_elem.76"* %55 to i64*
  store i64 %50, i64* %56, align 8
  %57 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %57, align 8
  %58 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 3
  %59 = bitcast %"class.std::__1::__compressed_pair.80"* %58 to i32*
  store i32 1065353216, i32* %59, align 4
  %60 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8
  %61 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %62 = bitcast %"class.marl::containers::vector"* %60 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 1
  %64 = bitcast i64* %63 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16>, <2 x i64>* %64, align 8
  %65 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 4
  %66 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 3, i64 0
  store %"struct.marl::aligned_storage<24, 8>::type"* %66, %"struct.marl::aligned_storage<24, 8>::type"** %65, align 8
  %67 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 5
  %68 = bitcast %"struct.marl::Allocation"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 26, i1 false) #16
  %69 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 9, i32 0
  %70 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  store i8 0, i8* %71, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN4marl6ThreadC1EONS0_8AffinityEONSt3__18functionIFvvEEE(%"class.marl::Thread"*, %"struct.marl::Thread::Affinity"* dereferenceable(128), %"class.std::__1::function.10"* dereferenceable(32)) unnamed_addr #8

; Function Attrs: optsize
declare dereferenceable(8) %"class.marl::Thread"* @_ZN4marl6ThreadaSEOS0_(%"class.marl::Thread"*, %"class.marl::Thread"* dereferenceable(8)) local_unnamed_addr #8

; Function Attrs: nounwind optsize
declare void @_ZN4marl6ThreadD1Ev(%"class.marl::Thread"*) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden %"class.marl::Scheduler::Worker"** @_ZTWN4marl9Scheduler6Worker7currentE() local_unnamed_addr #1 {
  ret %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE
}

; Function Attrs: optsize
declare void @_ZN4marl6Thread4joinEv(%"class.marl::Thread"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker16runUntilShutdownEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 1
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %14, %1
  %6 = load i8, i8* %3, align 8, !range !10
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = load atomic i64, i64* %4 seq_cst, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = load i64, i64* %2, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11, %8, %5
  tail call void @_ZN4marl9Scheduler6Worker11waitForWorkEv(%"class.marl::Scheduler::Worker"* %0) #17
  tail call void @_ZN4marl9Scheduler6Worker12runUntilIdleEv(%"class.marl::Scheduler::Worker"* %0) #17
  br label %5

15:                                               ; preds = %11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define zeroext i1 @_ZN4marl9Scheduler6Worker4waitEPKNSt3__16chrono10time_pointINS3_12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000EEEEEEE(%"class.marl::Scheduler::Worker"*, %"class.std::__1::chrono::time_point"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #15
  tail call void @_ZN4marl9Scheduler6Worker7suspendEPKNSt3__16chrono10time_pointINS3_12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000EEEEEEE(%"class.marl::Scheduler::Worker"* %0, %"class.std::__1::chrono::time_point"* %1) #17
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #15
  %4 = icmp eq %"class.std::__1::chrono::time_point"* %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %7 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %6, %8
  br label %10

10:                                               ; preds = %5, %2
  %11 = phi i1 [ true, %2 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker7suspendEPKNSt3__16chrono10time_pointINS3_12system_clockENS3_8durationIxNS2_5ratioILl1ELl1000000EEEEEEE(%"class.marl::Scheduler::Worker"*, %"class.std::__1::chrono::time_point"*) local_unnamed_addr #5 align 2 {
  %3 = alloca %"class.marl::Scheduler::Fiber"*, align 8
  %4 = alloca %"struct.marl::Scheduler::WaitingFibers::Timeout", align 8
  %5 = icmp eq %"class.std::__1::chrono::time_point"* %1, null
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 4
  %7 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %6, align 8
  %8 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %7, i64 0, i32 4
  br i1 %5, label %23, label %9

9:                                                ; preds = %2
  store i32 2, i32* %8, align 8
  %10 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %6, align 8
  %11 = bitcast %"class.marl::Scheduler::Fiber"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store %"class.marl::Scheduler::Fiber"* %10, %"class.marl::Scheduler::Fiber"** %3, align 8
  %12 = bitcast %"struct.marl::Scheduler::WaitingFibers::Timeout"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %1, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %4, i64 0, i32 1
  %17 = ptrtoint %"class.marl::Scheduler::Fiber"* %10 to i64
  %18 = bitcast %"class.marl::Scheduler::Fiber"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0
  %20 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEmEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %19, %"struct.marl::Scheduler::WaitingFibers::Timeout"* nonnull dereferenceable(16) %4, %"struct.marl::Scheduler::WaitingFibers::Timeout"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  %21 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE25__emplace_unique_key_argsIS5_JRS5_RKSD_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %21, %"class.marl::Scheduler::Fiber"** nonnull dereferenceable(8) %3, %"class.marl::Scheduler::Fiber"** nonnull dereferenceable(8) %3, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  br label %24

23:                                               ; preds = %2
  store i32 1, i32* %8, align 8
  br label %24

24:                                               ; preds = %23, %9
  call void @_ZN4marl9Scheduler6Worker11waitForWorkEv(%"class.marl::Scheduler::Worker"* %0) #17
  %25 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %25, align 8
  %28 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %59, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3
  %33 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i64* %33, i64 1 seq_cst
  %35 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 1
  %36 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %35, align 8
  %37 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 1
  %38 = bitcast i64* %37 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 8
  %40 = extractelement <2 x i64> %39, i32 0
  %41 = lshr i64 %40, 9
  %42 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %36, i64 %41
  %43 = load %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %42, align 8
  %44 = and i64 %40, 511
  %45 = getelementptr inbounds %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %43, i64 %44
  %46 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %45, align 8
  %47 = add <2 x i64> %39, <i64 1, i64 -1>
  %48 = bitcast i64* %37 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  %49 = call zeroext i1 @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE26__maybe_remove_front_spareEb(%"class.std::__1::deque.28"* %32, i1 zeroext true) #15
  %50 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %6, align 8
  store %"class.marl::Scheduler::Fiber"* %46, %"class.marl::Scheduler::Fiber"** %6, align 8
  %51 = icmp eq %"class.marl::Scheduler::Fiber"* %50, %46
  br i1 %51, label %91, label %52

52:                                               ; preds = %31
  %53 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %54 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %53, align 8
  %55 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %46, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %55, align 8
  %57 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %56, i64 0, i32 1
  call void @marl_fiber_swap(%struct.marl_fiber_context* %57, %struct.marl_fiber_context* %58) #15
  br label %91

59:                                               ; preds = %24
  %60 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %80, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %65, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.68"* %66 to %"class.marl::Scheduler::Fiber"**
  %68 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %67, align 8
  %69 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0
  %70 = call %"struct.std::__1::__hash_node_base.68"* @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::__hash_table.64"* %69, %"struct.std::__1::__hash_node_base.68"* %65) #15
  %71 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %6, align 8
  store %"class.marl::Scheduler::Fiber"* %68, %"class.marl::Scheduler::Fiber"** %6, align 8
  %72 = icmp eq %"class.marl::Scheduler::Fiber"* %71, %68
  br i1 %72, label %91, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %71, i64 0, i32 2, i32 0, i32 0, i32 0
  %75 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %74, align 8
  %76 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %76, align 8
  %78 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %75, i64 0, i32 1
  %79 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %77, i64 0, i32 1
  call void @marl_fiber_swap(%struct.marl_fiber_context* %78, %struct.marl_fiber_context* %79) #15
  br label %91

80:                                               ; preds = %59
  %81 = call %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler6Worker17createWorkerFiberEv(%"class.marl::Scheduler::Worker"* %0) #17
  %82 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %6, align 8
  store %"class.marl::Scheduler::Fiber"* %81, %"class.marl::Scheduler::Fiber"** %6, align 8
  %83 = icmp eq %"class.marl::Scheduler::Fiber"* %82, %81
  br i1 %83, label %91, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %82, i64 0, i32 2, i32 0, i32 0, i32 0
  %86 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %85, align 8
  %87 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %81, i64 0, i32 2, i32 0, i32 0, i32 0
  %88 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %87, align 8
  %89 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %88, i64 0, i32 1
  call void @marl_fiber_swap(%struct.marl_fiber_context* %89, %struct.marl_fiber_context* %90) #15
  br label %91

91:                                               ; preds = %84, %80, %73, %63, %52, %31
  %92 = load i64, i64* %25, align 8
  %93 = add i64 %92, -1
  store i64 %93, i64* %25, align 8
  %94 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %6, align 8
  %95 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %94, i64 0, i32 4
  store i32 4, i32* %95, align 8
  ret void
}

; Function Attrs: nounwind optsize
declare i64 @_ZNSt3__16chrono12system_clock3nowEv() local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker11waitForWorkEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.std::__1::unique_lock", align 8
  %3 = alloca %"class.std::__1::unique_lock", align 8
  %4 = alloca %"class.std::__1::chrono::time_point", align 8
  %5 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 seq_cst, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %83

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %23

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 2
  %14 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %13, align 8
  %15 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 seq_cst
  %19 = and i32 %18, 7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %14, i64 0, i32 1, i32 0, i64 %20, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %16, i32* %21 seq_cst, align 4
  %22 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %22) #15
  tail call void @_ZN4marl9Scheduler6Worker11spinForWorkEv(%"class.marl::Scheduler::Worker"* %0) #17
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %22) #15
  br label %23

23:                                               ; preds = %12, %8
  %24 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 5
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7
  %29 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 6
  br i1 %27, label %59, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4
  %32 = bitcast %"class.std::__1::chrono::time_point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  %33 = bitcast %"struct.marl::Scheduler::WaitingFibers"* %31 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %4, i64 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.std::__1::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #16
  %39 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 1
  %41 = getelementptr inbounds %"class.marl::mutex", %"class.marl::mutex"* %28, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %41, %"class.std::__1::mutex"** %39, align 8
  store i8 1, i8* %40, align 8
  %42 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  %43 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 1
  br label %44

44:                                               ; preds = %53, %30
  %45 = load atomic i64, i64* %5 seq_cst, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %44
  %48 = load i8, i8* %42, align 8, !range !10
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = load i64, i64* %43, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %50, %47
  %54 = call i32 @_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE(%"class.std::__1::condition_variable"* %29, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %2, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %4) #15
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %44

56:                                               ; preds = %53
  %57 = load atomic i64, i64* %5 seq_cst, align 8
  br label %58

58:                                               ; preds = %50, %44, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %79

59:                                               ; preds = %23
  %60 = bitcast %"class.std::__1::unique_lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 1
  %63 = getelementptr inbounds %"class.marl::mutex", %"class.marl::mutex"* %28, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %63, %"class.std::__1::mutex"** %61, align 8
  store i8 1, i8* %62, align 8
  %64 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 1
  %65 = load atomic i64, i64* %5 seq_cst, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %78

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  br label %69

69:                                               ; preds = %75, %67
  %70 = load i8, i8* %68, align 8, !range !10
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %64, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %72, %69
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %29, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %3) #15
  %76 = load atomic i64, i64* %5 seq_cst, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %69, label %78

78:                                               ; preds = %75, %72, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #16
  br label %79

79:                                               ; preds = %58, %78
  store i8 0, i8* %24, align 8
  %80 = load i64, i64* %25, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN4marl9Scheduler6Worker20enqueueFiberTimeoutsEv(%"class.marl::Scheduler::Worker"* %0) #17
  br label %83

83:                                               ; preds = %79, %1, %82
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker13switchToFiberEPNS0_5FiberE(%"class.marl::Scheduler::Worker"* nocapture, %"class.marl::Scheduler::Fiber"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 4
  %4 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %3, align 8
  store %"class.marl::Scheduler::Fiber"* %1, %"class.marl::Scheduler::Fiber"** %3, align 8
  %5 = icmp eq %"class.marl::Scheduler::Fiber"* %4, %1
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %7, align 8
  %9 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %9, align 8
  %11 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %10, i64 0, i32 1
  tail call void @marl_fiber_swap(%struct.marl_fiber_context* %11, %struct.marl_fiber_context* %12) #15
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.marl::Scheduler::Fiber"* @_ZN4marl9Scheduler6Worker17createWorkerFiberEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = alloca %"class.std::__1::function.10", align 8
  %4 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, 1
  %9 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %11, align 8
  %14 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %13, i64 0, i32 0, i32 1
  %15 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %14, align 8
  %16 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %13, i64 0, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::function.10"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  %19 = ptrtoint %"class.marl::Scheduler::Worker"* %0 to i64
  %20 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %3, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker17createWorkerFiberEvE3$_5S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker17createWorkerFiberEvE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %21, align 8
  %22 = bitcast %"class.std::__1::function.10"* %3 to i64*
  store i64 %19, i64* %22, align 8
  call void @_ZN4marl9Scheduler5Fiber6createEPNS_9AllocatorEjmRKNSt3__18functionIFvvEEE(%"class.std::__1::unique_ptr"* nonnull sret %2, %"class.marl::Allocator"* %15, i32 %8, i64 %17, %"class.std::__1::function.10"* nonnull dereferenceable(32) %3) #17
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %25 = load void (i8*)*, void (i8*)** %24, align 8
  %26 = icmp eq void (i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void %25(i8* %29) #15
  br label %30

30:                                               ; preds = %1, %27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  %31 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %10, align 8
  call void @_ZN4marl10containers6vectorINSt3__110unique_ptrINS_9Scheduler5FiberENS_9Allocator7DeleterEEELi16EE12emplace_backEOS8_(%"class.marl::containers::vector"* %4, %"class.std::__1::unique_ptr"* nonnull dereferenceable(24) %2) #17
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* nonnull %2, %"class.marl::Scheduler::Fiber"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret %"class.marl::Scheduler::Fiber"* %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE9push_backERKS4_(%"class.std::__1::deque.28"*, %"class.marl::Scheduler::Fiber"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.marl::Scheduler::Fiber"**** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp eq i64 %9, 0
  %11 = shl i64 %9, 6
  %12 = add i64 %11, -1
  %13 = select i1 %10, i64 0, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %15
  %19 = icmp eq i64 %13, %18
  %20 = inttoptr i64 %8 to %"class.marl::Scheduler::Fiber"***
  %21 = inttoptr i64 %5 to %"class.marl::Scheduler::Fiber"***
  br i1 %19, label %22, label %28

22:                                               ; preds = %2
  tail call void @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.28"* %0) #17
  %23 = load i64, i64* %16, align 8
  %24 = load i64, i64* %14, align 8
  %25 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %26 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %3, align 8
  %27 = add i64 %24, %23
  br label %28

28:                                               ; preds = %22, %2
  %29 = phi i64 [ %27, %22 ], [ %18, %2 ]
  %30 = phi %"class.marl::Scheduler::Fiber"*** [ %26, %22 ], [ %21, %2 ]
  %31 = phi %"class.marl::Scheduler::Fiber"*** [ %25, %22 ], [ %20, %2 ]
  %32 = icmp eq %"class.marl::Scheduler::Fiber"*** %30, %31
  br i1 %32, label %40, label %33

33:                                               ; preds = %28
  %34 = lshr i64 %29, 9
  %35 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %31, i64 %34
  %36 = load %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %35, align 8
  %37 = and i64 %29, 511
  %38 = getelementptr inbounds %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %36, i64 %37
  %39 = bitcast %"class.marl::Scheduler::Fiber"** %38 to i64*
  br label %40

40:                                               ; preds = %28, %33
  %41 = phi i64* [ %39, %33 ], [ null, %28 ]
  %42 = bitcast %"class.marl::Scheduler::Fiber"** %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %41, align 8
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9push_backEOS2_(%"class.std::__1::deque"*, %"class.marl::Task"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.marl::Task"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.marl::Task"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  %12 = mul i64 %10, 102
  %13 = add i64 %12, -1
  %14 = select i1 %11, i64 0, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = icmp eq i64 %14, %19
  %21 = inttoptr i64 %8 to %"class.marl::Task"**
  %22 = inttoptr i64 %5 to %"class.marl::Task"**
  br i1 %20, label %23, label %29

23:                                               ; preds = %2
  tail call void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %0) #17
  %24 = load i64, i64* %17, align 8
  %25 = load i64, i64* %15, align 8
  %26 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %27 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %28 = add i64 %25, %24
  br label %29

29:                                               ; preds = %23, %2
  %30 = phi i64 [ %28, %23 ], [ %19, %2 ]
  %31 = phi %"class.marl::Task"** [ %27, %23 ], [ %22, %2 ]
  %32 = phi %"class.marl::Task"** [ %26, %23 ], [ %21, %2 ]
  %33 = icmp eq %"class.marl::Task"** %31, %32
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = udiv i64 %30, 102
  %36 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %32, i64 %35
  %37 = load %"class.marl::Task"*, %"class.marl::Task"** %36, align 8
  %38 = urem i64 %30, 102
  %39 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %37, i64 %38
  br label %40

40:                                               ; preds = %29, %34
  %41 = phi %"class.marl::Task"* [ %39, %34 ], [ null, %29 ]
  %42 = bitcast %"class.marl::Task"* %41 to i8*
  %43 = bitcast %"class.marl::Task"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false) #16
  %44 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %41, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %45 to i64*
  %47 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %41, i64 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 2
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  store %"struct.std::__1::__function::__policy"* %51, %"struct.std::__1::__function::__policy"** %49, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %40
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %50, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %46, align 8
  br label %56

56:                                               ; preds = %40, %55
  %57 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %41, i64 0, i32 1
  %58 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %57, align 8
  %60 = load i64, i64* %17, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker3runEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.std::__1::unique_lock", align 8
  %3 = alloca %"class.std::__1::unique_lock", align 8
  %4 = alloca %"class.std::__1::chrono::time_point", align 8
  %5 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %64

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 5
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  %13 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7
  %14 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 6
  br i1 %12, label %44, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4
  %17 = bitcast %"class.std::__1::chrono::time_point"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = bitcast %"struct.marl::Scheduler::WaitingFibers"* %16 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %4, i64 0, i32 0, i32 0
  store i64 %21, i64* %22, align 8
  %23 = bitcast %"class.std::__1::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 1
  %26 = getelementptr inbounds %"class.marl::mutex", %"class.marl::mutex"* %13, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %26, %"class.std::__1::mutex"** %24, align 8
  store i8 1, i8* %25, align 8
  %27 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  br label %29

29:                                               ; preds = %38, %15
  %30 = load atomic i64, i64* %27 seq_cst, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = load i64, i64* %10, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = load i8, i8* %28, align 8, !range !10
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = call i32 @_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE(%"class.std::__1::condition_variable"* %14, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %2, %"class.std::__1::chrono::time_point"* nonnull dereferenceable(8) %4) #15
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %29

41:                                               ; preds = %38
  %42 = load atomic i64, i64* %27 seq_cst, align 8
  br label %43

43:                                               ; preds = %35, %32, %29, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %63

44:                                               ; preds = %8
  %45 = bitcast %"class.std::__1::unique_lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #16
  %46 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %3, i64 0, i32 1
  %48 = getelementptr inbounds %"class.marl::mutex", %"class.marl::mutex"* %13, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false) #16
  store %"class.std::__1::mutex"* %48, %"class.std::__1::mutex"** %46, align 8
  store i8 1, i8* %47, align 8
  %49 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 10
  %50 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i64, i64* %50 seq_cst, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %62

53:                                               ; preds = %44, %59
  %54 = load i64, i64* %10, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %53
  %57 = load i8, i8* %49, align 8, !range !10
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %14, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %3) #15
  %60 = load atomic i64, i64* %50 seq_cst, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %53, label %62

62:                                               ; preds = %59, %56, %53, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #16
  br label %63

63:                                               ; preds = %43, %62
  store i8 0, i8* %9, align 8
  br label %64

64:                                               ; preds = %63, %1
  call void @_ZN4marl9Scheduler6Worker16runUntilShutdownEv(%"class.marl::Scheduler::Worker"* %0) #17
  %65 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %65, align 8
  %67 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 4
  %68 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %67, align 8
  store %"class.marl::Scheduler::Fiber"* %66, %"class.marl::Scheduler::Fiber"** %67, align 8
  %69 = icmp eq %"class.marl::Scheduler::Fiber"* %68, %66
  br i1 %69, label %77, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %71, align 8
  %73 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %66, i64 0, i32 2, i32 0, i32 0, i32 0
  %74 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %73, align 8
  %75 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %72, i64 0, i32 1
  %76 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %74, i64 0, i32 1
  call void @marl_fiber_swap(%struct.marl_fiber_context* %75, %struct.marl_fiber_context* %76) #15
  br label %77

77:                                               ; preds = %64, %70
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker12runUntilIdleEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.marl::Task", align 8
  %3 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3
  %5 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0, i32 1
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0
  %11 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2
  %12 = bitcast %"class.marl::Task"* %2 to i8*
  %13 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0, i32 1
  %15 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %15 to i64*
  %17 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  %20 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.marl::Task"* %2 to i8*
  %24 = bitcast i64* %8 to <2 x i64>*
  %25 = bitcast i64* %8 to <2 x i64>*
  %26 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %15 to <2 x i64>*
  br label %27

27:                                               ; preds = %104, %1
  %28 = load i64, i64* %5, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load i64, i64* %3, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %105, label %67

33:                                               ; preds = %27, %59
  %34 = atomicrmw sub i64* %6, i64 1 seq_cst
  %35 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %7, align 8
  %36 = load <2 x i64>, <2 x i64>* %24, align 8
  %37 = extractelement <2 x i64> %36, i32 0
  %38 = lshr i64 %37, 9
  %39 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %35, i64 %38
  %40 = load %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %39, align 8
  %41 = and i64 %37, 511
  %42 = getelementptr inbounds %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %40, i64 %41
  %43 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %42, align 8
  %44 = add <2 x i64> %36, <i64 1, i64 -1>
  store <2 x i64> %44, <2 x i64>* %25, align 8
  %45 = call zeroext i1 @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE26__maybe_remove_front_spareEb(%"class.std::__1::deque.28"* %4, i1 zeroext true) #15
  %46 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %9, align 8
  %47 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %46, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = call { %"struct.std::__1::__hash_node_base.68"*, i8 } @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE25__emplace_unique_key_argsIS4_JRS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.64"* %10, %"class.marl::Scheduler::Fiber"** dereferenceable(8) %9, %"class.marl::Scheduler::Fiber"** dereferenceable(8) %9) #15
  %49 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %9, align 8
  store %"class.marl::Scheduler::Fiber"* %43, %"class.marl::Scheduler::Fiber"** %9, align 8
  %50 = icmp eq %"class.marl::Scheduler::Fiber"* %49, %43
  br i1 %50, label %59, label %51

51:                                               ; preds = %33
  %52 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %49, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %52, align 8
  %54 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %43, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %54, align 8
  %56 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %53, i64 0, i32 1
  %57 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %55, i64 0, i32 1
  call void @marl_fiber_swap(%struct.marl_fiber_context* %56, %struct.marl_fiber_context* %57) #15
  %58 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %9, align 8
  br label %59

59:                                               ; preds = %33, %51
  %60 = phi %"class.marl::Scheduler::Fiber"* [ %43, %33 ], [ %58, %51 ]
  %61 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %60, i64 0, i32 4
  store i32 4, i32* %61, align 8
  %62 = load i64, i64* %5, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %33

64:                                               ; preds = %59
  %65 = load i64, i64* %3, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %104, label %67

67:                                               ; preds = %30, %64
  %68 = atomicrmw sub i64* %6, i64 1 seq_cst
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  %69 = load %"class.marl::Task"**, %"class.marl::Task"*** %13, align 8, !noalias !40
  %70 = load i64, i64* %14, align 8, !noalias !40
  %71 = udiv i64 %70, 102
  %72 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %69, i64 %71
  %73 = load %"class.marl::Task"*, %"class.marl::Task"** %72, align 8, !noalias !40
  %74 = urem i64 %70, 102
  %75 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %73, i64 %74
  %76 = bitcast %"class.marl::Task"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %76, i64 16, i1 false) #16
  %77 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %73, i64 %74, i32 0, i32 0, i32 1
  %78 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !40
  store i64 %79, i64* %16, align 8, !alias.scope !40
  %80 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %73, i64 %74, i32 0, i32 0, i32 2
  %81 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %80, align 8, !noalias !40
  store %"struct.std::__1::__function::__policy"* %81, %"struct.std::__1::__function::__policy"** %17, align 8, !alias.scope !40
  %82 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %81, i64 0, i32 1
  %83 = load void (i8*)*, void (i8*)** %82, align 8, !noalias !40
  %84 = icmp eq void (i8*)* %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %67
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %80, align 8, !noalias !40
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %78, align 8, !noalias !40
  br label %86

86:                                               ; preds = %67, %85
  %87 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %73, i64 %74, i32 1
  %88 = load i32, i32* %87, align 8, !noalias !40
  store i32 %88, i32* %18, align 8, !alias.scope !40
  call void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9pop_frontEv(%"class.std::__1::deque"* %11) #15, !noalias !40
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %19) #15
  %89 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %20, align 8
  call void %89(%"union.std::__1::__function::__policy_storage"* nonnull %21) #15
  %90 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %17, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %16, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = load i8*, i8** %22, align 8
  call void %92(i8* %95) #15
  br label %96

96:                                               ; preds = %94, %86
  store <2 x i64> <i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ to i64)>, <2 x i64>* %26, align 8
  store i32 0, i32* %18, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %19) #15
  %97 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %97, i64 0, i32 1
  %99 = load void (i8*)*, void (i8*)** %98, align 8
  %100 = icmp eq void (i8*)* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = load i8*, i8** %22, align 8
  call void %99(i8* %102) #15
  br label %103

103:                                              ; preds = %96, %101
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #16
  br label %104

104:                                              ; preds = %103, %64
  br label %27

105:                                              ; preds = %30
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker11spinForWorkEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.marl::Task", align 8
  %3 = bitcast %"class.marl::Task"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 40, i1 false)
  %4 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 1, i32 0
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %4, align 8
  %5 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %5, align 8
  %6 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = tail call i64 @_ZNSt3__16chrono12steady_clock3nowEv() #15
  %8 = tail call i64 @_ZNSt3__16chrono12steady_clock3nowEv() #15
  %9 = sub nsw i64 %8, %7
  %10 = icmp slt i64 %9, 1000000
  br i1 %10, label %11, label %54

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 9, i32 0
  br label %19

15:                                               ; preds = %19
  %16 = icmp eq i32 %23, 256
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %49
  %18 = phi i32 [ %23, %15 ], [ 0, %49 ]
  br label %19

19:                                               ; preds = %17, %11
  %20 = phi i32 [ 0, %11 ], [ %18, %17 ]
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  tail call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !43
  %21 = load atomic i64, i64* %12 seq_cst, align 8
  %22 = icmp eq i64 %21, 0
  %23 = add nuw nsw i32 %20, 1
  br i1 %22, label %15, label %54

24:                                               ; preds = %15
  %25 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %13, align 8
  %26 = load i64, i64* %14, align 8
  %27 = shl i64 %26, 13
  %28 = xor i64 %27, %26
  %29 = lshr i64 %28, 7
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 17
  %32 = xor i64 %31, %30
  store i64 %32, i64* %14, align 8
  %33 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %25, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %24
  %37 = sext i32 %34 to i64
  %38 = urem i64 %32, %37
  %39 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %25, i64 0, i32 4, i32 0, i64 %38
  %40 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %39, align 8
  %41 = icmp eq %"class.marl::Scheduler::Worker"* %40, %0
  br i1 %41, label %49, label %42

42:                                               ; preds = %36
  %43 = call zeroext i1 @_ZN4marl9Scheduler6Worker5stealERNS_4TaskE(%"class.marl::Scheduler::Worker"* %40, %"class.marl::Task"* nonnull dereferenceable(40) %2) #15
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 7, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %45) #15
  %46 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2
  %47 = call dereferenceable(40) %"class.marl::Task"* @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE12emplace_backIJS2_EEERS2_DpOT_(%"class.std::__1::deque"* %46, %"class.marl::Task"* nonnull dereferenceable(40) %2) #17
  %48 = atomicrmw add i64* %12, i64 1 seq_cst
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %45) #15
  br label %54

49:                                               ; preds = %36, %42, %24
  %50 = tail call i32 @sched_yield() #15
  %51 = tail call i64 @_ZNSt3__16chrono12steady_clock3nowEv() #15
  %52 = sub nsw i64 %51, %7
  %53 = icmp slt i64 %52, 1000000
  br i1 %53, label %17, label %54

54:                                               ; preds = %49, %19, %1, %44
  %55 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %55, i64 0, i32 1
  %57 = load void (i8*)*, void (i8*)** %56, align 8
  %58 = icmp eq void (i8*)* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void %57(i8* %61) #15
  br label %62

62:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4marl9Scheduler6Worker20enqueueFiberTimeoutsEv(%"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = alloca %"class.marl::Scheduler::Fiber"*, align 8
  %4 = alloca %"class.marl::Scheduler::Fiber"*, align 8
  %5 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %6 = bitcast %"class.marl::Scheduler::Fiber"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  store %"class.marl::Scheduler::Fiber"* inttoptr (i64 -6148914691236517206 to %"class.marl::Scheduler::Fiber"*), %"class.marl::Scheduler::Fiber"** %4, align 8
  %7 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4
  %8 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers", %"struct.marl::Scheduler::WaitingFibers"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.marl::Scheduler::Fiber"** %3 to i8*
  %14 = bitcast %"class.marl::Scheduler::Fiber"** %3 to i64*
  %15 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers", %"struct.marl::Scheduler::WaitingFibers"* %7, i64 0, i32 0, i32 0
  %16 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %17 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %19 = bitcast %"struct.marl::Allocation"* %2 to %"class.std::__1::__tree_end_node"**
  %20 = bitcast i8* %18 to i16*
  %21 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0
  %23 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3
  %24 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast i64* %17 to <2 x i64>*
  br label %26

26:                                               ; preds = %11, %47
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %5, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %47, %1
  store %"class.marl::Scheduler::Fiber"* null, %"class.marl::Scheduler::Fiber"** %4, align 8
  br label %52

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 5
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %14, align 8
  %38 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE21__remove_node_pointerEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %15, %"class.std::__1::__tree_node"* %34) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"** %19, align 8
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %25, align 8
  store i16 1280, i16* %20, align 8
  %39 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %21, align 8
  %40 = bitcast %"class.marl::Allocator"* %39 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %41 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %41, i64 3
  %43 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %42, align 8
  call void %43(%"class.marl::Allocator"* %39, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  %44 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE14__erase_uniqueIS5_EEmRKT_(%"class.std::__1::__hash_table"* %22, %"class.marl::Scheduler::Fiber"** nonnull dereferenceable(8) %3) #15
  %45 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  store %"class.marl::Scheduler::Fiber"* %45, %"class.marl::Scheduler::Fiber"** %4, align 8
  %46 = icmp eq %"class.marl::Scheduler::Fiber"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %45, i64 0, i32 4
  store i32 3, i32* %48, align 8
  call void @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE9push_backERKS4_(%"class.std::__1::deque.28"* %23, %"class.marl::Scheduler::Fiber"** nonnull dereferenceable(8) %4) #17
  %49 = atomicrmw add i64* %24, i64 1 seq_cst
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  store %"class.marl::Scheduler::Fiber"* inttoptr (i64 -6148914691236517206 to %"class.marl::Scheduler::Fiber"*), %"class.marl::Scheduler::Fiber"** %4, align 8
  %50 = load i64, i64* %8, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %32, label %26

52:                                               ; preds = %33, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind optsize
declare i64 @_ZNSt3__16chrono12steady_clock3nowEv() local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.marl::Task"* @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE12emplace_backIJS2_EEERS2_DpOT_(%"class.std::__1::deque"*, %"class.marl::Task"* dereferenceable(40)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.marl::Task"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.marl::Task"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  %12 = mul i64 %10, 102
  %13 = add i64 %12, -1
  %14 = select i1 %11, i64 0, i64 %13
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = icmp eq i64 %14, %19
  %21 = inttoptr i64 %8 to %"class.marl::Task"**
  %22 = inttoptr i64 %5 to %"class.marl::Task"**
  br i1 %20, label %23, label %29

23:                                               ; preds = %2
  tail call void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %0) #17
  %24 = load i64, i64* %17, align 8
  %25 = load i64, i64* %15, align 8
  %26 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %27 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %28 = add i64 %25, %24
  br label %29

29:                                               ; preds = %23, %2
  %30 = phi i64 [ %28, %23 ], [ %19, %2 ]
  %31 = phi %"class.marl::Task"** [ %27, %23 ], [ %22, %2 ]
  %32 = phi %"class.marl::Task"** [ %26, %23 ], [ %21, %2 ]
  %33 = icmp eq %"class.marl::Task"** %31, %32
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = udiv i64 %30, 102
  %36 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %32, i64 %35
  %37 = load %"class.marl::Task"*, %"class.marl::Task"** %36, align 8
  %38 = urem i64 %30, 102
  %39 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %37, i64 %38
  br label %40

40:                                               ; preds = %29, %34
  %41 = phi %"class.marl::Task"* [ %39, %34 ], [ null, %29 ]
  %42 = bitcast %"class.marl::Task"* %41 to i8*
  %43 = bitcast %"class.marl::Task"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false) #16
  %44 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %41, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %45 to i64*
  %47 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %41, i64 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 0, i32 0, i32 2
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  store %"struct.std::__1::__function::__policy"* %51, %"struct.std::__1::__function::__policy"** %49, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %40
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %50, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %46, align 8
  br label %56

56:                                               ; preds = %40, %55
  %57 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %41, i64 0, i32 1
  %58 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %1, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %57, align 8
  %60 = load i64, i64* %17, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %17, align 8
  %62 = load i64, i64* %15, align 8
  %63 = add i64 %62, %61
  %64 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %65 = udiv i64 %63, 102
  %66 = urem i64 %63, 102
  %67 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %64, i64 %65
  %68 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %69 = icmp eq %"class.marl::Task"** %68, %64
  %70 = load %"class.marl::Task"*, %"class.marl::Task"** %67, align 8
  %71 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %70, i64 %66
  %72 = select i1 %69, %"class.marl::Task"* null, %"class.marl::Task"* %71
  %73 = icmp eq %"class.marl::Task"* %72, %70
  br i1 %73, label %74, label %78

74:                                               ; preds = %56
  %75 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %67, i64 -1
  %76 = load %"class.marl::Task"*, %"class.marl::Task"** %75, align 8
  %77 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %76, i64 102
  br label %78

78:                                               ; preds = %56, %74
  %79 = phi %"class.marl::Task"* [ %77, %74 ], [ %72, %56 ]
  %80 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %79, i64 -1
  ret %"class.marl::Task"* %80
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl10containers6vectorINSt3__110unique_ptrINS_9Scheduler5FiberENS_9Allocator7DeleterEEELi16EE12emplace_backEOS8_(%"class.marl::containers::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 8
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  %8 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  %13 = bitcast %"struct.marl::aligned_storage<24, 8>::type"** %12 to %"class.std::__1::unique_ptr"**
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  br label %83

15:                                               ; preds = %2
  %16 = shl i64 %7, 1
  %17 = icmp ugt i64 %16, 8
  %18 = select i1 %17, i64 %16, i64 8
  store i64 %18, i64* %8, align 8
  %19 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false) #16
  %22 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %23 = bitcast i8* %22 to i16*
  store i16 768, i16* %23, align 8
  %24 = mul i64 %18, 24
  store i64 %24, i64* %20, align 8
  store i64 8, i64* %21, align 8
  %25 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #16
  %27 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %26, align 8
  %28 = bitcast %"class.marl::Allocator"* %27 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %29 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %29, i64 2
  %31 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %30, align 8
  call void %31(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %27, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #15
  %32 = bitcast %"struct.marl::Allocation"* %4 to %"struct.marl::aligned_storage<24, 8>::type"**
  %33 = load %"struct.marl::aligned_storage<24, 8>::type"*, %"struct.marl::aligned_storage<24, 8>::type"** %32, align 8
  %34 = load i64, i64* %5, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  %38 = bitcast %"struct.marl::aligned_storage<24, 8>::type"** %37 to %"class.std::__1::unique_ptr"**
  br label %68

39:                                               ; preds = %68
  %40 = icmp eq i64 %81, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %47, %39, %15
  %42 = phi i64 [ 0, %39 ], [ 0, %15 ], [ %52, %47 ]
  %43 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %63, label %54

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %51, %47 ], [ 0, %39 ]
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %38, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 %48
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* %50, %"class.marl::Scheduler::Fiber"* null) #15
  %51 = add nuw i64 %48, 1
  %52 = load i64, i64* %5, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %47, label %41

54:                                               ; preds = %41
  %55 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %26, align 8
  %56 = bitcast %"class.marl::Allocator"* %55 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %57 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %57, i64 3
  %59 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %58, align 8
  call void %59(%"class.marl::Allocator"* %55, %"struct.marl::Allocation"* dereferenceable(32) %43) #15
  %60 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  %61 = bitcast %"struct.marl::aligned_storage<24, 8>::type"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 34, i1 false) #16
  %62 = load i64, i64* %5, align 8
  br label %63

63:                                               ; preds = %54, %41
  %64 = phi i64 [ %62, %54 ], [ %42, %41 ]
  %65 = getelementptr inbounds %"class.marl::containers::vector", %"class.marl::containers::vector"* %0, i64 0, i32 4
  store %"struct.marl::aligned_storage<24, 8>::type"* %33, %"struct.marl::aligned_storage<24, 8>::type"** %65, align 8
  %66 = bitcast %"struct.marl::Allocation"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %25, i64 32, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  %67 = bitcast %"struct.marl::aligned_storage<24, 8>::type"* %33 to %"class.std::__1::unique_ptr"*
  br label %83

68:                                               ; preds = %68, %36
  %69 = phi i64 [ 0, %36 ], [ %80, %68 ]
  %70 = getelementptr inbounds %"struct.marl::aligned_storage<24, 8>::type", %"struct.marl::aligned_storage<24, 8>::type"* %33, i64 %69
  %71 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %38, align 8
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 %69
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  store %"class.marl::Scheduler::Fiber"* null, %"class.marl::Scheduler::Fiber"** %73, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 %69, i32 0, i32 1, i32 0
  %77 = bitcast %"struct.marl::aligned_storage<24, 8>::type"* %70 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.marl::aligned_storage<24, 8>::type", %"struct.marl::aligned_storage<24, 8>::type"* %33, i64 %69, i32 0, i64 8
  %79 = bitcast %"struct.marl::Allocator::Deleter"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #16
  %80 = add nuw i64 %69, 1
  %81 = load i64, i64* %5, align 8
  %82 = icmp ult i64 %80, %81
  br i1 %82, label %68, label %39

83:                                               ; preds = %11, %63
  %84 = phi i64 [ %6, %11 ], [ %64, %63 ]
  %85 = phi %"class.std::__1::unique_ptr"* [ %14, %11 ], [ %67, %63 ]
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 %84
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.marl::Scheduler::Fiber"* null, %"class.marl::Scheduler::Fiber"** %87, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 1, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 %84, i32 0, i32 1
  %93 = bitcast %"struct.std::__1::__compressed_pair_elem.15"* %92 to i8*
  %94 = bitcast %"struct.marl::Allocator::Deleter"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #16
  %95 = load i64, i64* %5, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %5, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize readnone
declare i64 @pthread_self() local_unnamed_addr #10

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #4

; Function Attrs: optsize
declare { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } @_ZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"* dereferenceable(128), %"class.marl::Allocator"*) local_unnamed_addr #8

; Function Attrs: optsize
declare void @_ZN4marl6Thread8Affinity3allEPNS_9AllocatorE(%"struct.marl::Thread::Affinity"* sret, %"class.marl::Allocator"*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN4marl6Thread8Affinity6PolicyEED2Ev(%"class.std::__1::shared_ptr"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #15
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #15
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.84"*, %"struct.std::__1::__hash_node_base.88"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.88"* %1, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.marl::Allocation"* %3 to i8*
  %7 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  %9 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.88"**
  %10 = bitcast i8* %8 to i16*
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %12 = bitcast i64* %7 to <2 x i64>*
  br label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.88"* [ %1, %5 ], [ %16, %13 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %14, i64 3
  %18 = bitcast %"struct.std::__1::__hash_node_base.88"* %17 to %"class.std::__1::unique_ptr.109"*
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler6WorkerENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr.109"* %18, %"class.marl::Scheduler::Worker"* null) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false) #16
  store %"struct.std::__1::__hash_node_base.88"* %14, %"struct.std::__1::__hash_node_base.88"** %9, align 8
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %12, align 8
  store i16 1280, i16* %10, align 8
  %19 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %11, align 8
  %20 = bitcast %"class.marl::Allocator"* %19 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %21 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, i64 3
  %23 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %22, align 8
  call void %23(%"class.marl::Allocator"* %19, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  %24 = icmp eq %"struct.std::__1::__hash_node_base.88"* %16, null
  br i1 %24, label %25, label %13

25:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetEDn(%"class.std::__1::unique_ptr.85"*, i8*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %4, align 8
  store %"struct.std::__1::__hash_node_base.88"** null, %"struct.std::__1::__hash_node_base.88"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.88"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.88"***
  store %"struct.std::__1::__hash_node_base.88"** %5, %"struct.std::__1::__hash_node_base.88"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFviEE12__call_emptyEPKNS0_16__policy_storageEi(%"union.std::__1::__function::__policy_storage"*, i32) #5 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #19
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #11 comdat {
  tail call void @abort() #20
  unreachable
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #12

; Function Attrs: optsize
declare void @marl_fiber_swap(%struct.marl_fiber_context*, %struct.marl_fiber_context*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.std::__1::function.10"* @_ZNSt3__18functionIFvvEEaSERKS2_(%"class.std::__1::function.10"*, %"class.std::__1::function.10"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.std::__1::function.10"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %6 = load i8, i8* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 2
  %10 = load i8, i8* %9, align 2
  %11 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 3
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 4
  %14 = load i8, i8* %13, align 4
  %15 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 5
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 6
  %18 = load i8, i8* %17, align 2
  %19 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 0, i32 1, i64 7
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %1, i64 0, i32 0, i32 2
  %25 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  %26 = ptrtoint %"struct.std::__1::__function::__policy"* %25 to i64
  %27 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %25, i64 0, i32 0
  %28 = load i8* (i8*)*, i8* (i8*)** %27, align 8
  %29 = icmp eq i8* (i8*)* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %2
  %31 = inttoptr i64 %4 to i8*
  %32 = tail call i8* %28(i8* %31) #15
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %2, %30
  %35 = phi i64 [ %4, %2 ], [ %33, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"struct.std::__1::__function::__policy_invoker.14"* %36 to i64*
  store i64 %23, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 2
  %39 = bitcast %"struct.std::__1::__function::__policy"** %38 to i64*
  %40 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %38, align 8
  store i64 %26, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::function.10"* %0 to i64*
  store i64 %35, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  store i8 %6, i8* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  store i8 %8, i8* %45, align 1
  %46 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 2
  store i8 %10, i8* %46, align 2
  %47 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 3
  store i8 %12, i8* %47, align 1
  %48 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 4
  store i8 %14, i8* %48, align 4
  %49 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 5
  store i8 %16, i8* %49, align 1
  %50 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 6
  store i8 %18, i8* %50, align 2
  %51 = getelementptr inbounds %"class.std::__1::function.10", %"class.std::__1::function.10"* %0, i64 0, i32 0, i32 0, i32 1, i64 7
  store i8 %20, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %40, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %34
  tail call void %53(i8* %42) #15
  br label %56

56:                                               ; preds = %34, %55
  ret %"class.std::__1::function.10"* %0
}

; Function Attrs: optsize
declare void @marl_fiber_set_target(%struct.marl_fiber_context*, i8*, i32, void (i8*)*, i8*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl7OSFiber3runEPS0_(%"class.marl::OSFiber"*) #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %3 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %2, align 8
  %4 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void %3(%"union.std::__1::__function::__policy_storage"* %4) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #5 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #19
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__111unique_lockINS_5mutexEE6unlockEv(%"class.std::__1::unique_lock"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !10
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0)) #20
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %7, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %8) #15
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNSt3__120__throw_system_errorEiPKc(i32, i8*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__111unique_lockINS_5mutexEE4lockEv(%"class.std::__1::unique_lock"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %2, align 8
  %4 = icmp eq %"class.std::__1::mutex"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #20
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !10
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 35, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #20
  unreachable

11:                                               ; preds = %6
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %3) #15
  store i8 1, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEmEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16), %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = alloca %"struct.marl::Allocation::Request", align 16
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16) %1) #17
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %31

12:                                               ; preds = %3
  %13 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #16, !noalias !44
  %14 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #16, !noalias !44
  %15 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %14, align 8, !noalias !44
  %16 = bitcast %"struct.marl::Allocation::Request"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16, !noalias !44
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 24, i1 false) #16, !alias.scope !47, !noalias !44
  %17 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 2
  %18 = bitcast i8* %17 to i16*
  store i16 1280, i16* %18, align 16, !alias.scope !47, !noalias !44
  %19 = bitcast %"struct.marl::Allocation::Request"* %5 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %19, align 16, !alias.scope !47, !noalias !44
  %20 = bitcast %"class.marl::Allocator"* %15 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %20, align 8, !noalias !44
  %22 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %21, i64 2
  %23 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %22, align 8, !noalias !44
  call void %23(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %15, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %5) #15, !noalias !44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16, !noalias !44
  %24 = bitcast %"struct.marl::Allocation"* %4 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8, !noalias !44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #16, !noalias !44
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %25, i64 0, i32 1
  %27 = bitcast %"struct.marl::Scheduler::WaitingFibers::Timeout"* %26 to i8*
  %28 = bitcast %"struct.marl::Scheduler::WaitingFibers::Timeout"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #16, !noalias !44
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %30 = bitcast %"class.std::__1::__tree_node"* %25 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_node_base"** dereferenceable(8) %8, %"class.std::__1::__tree_node_base"* %30) #15
  br label %31

31:                                               ; preds = %12, %3
  %32 = phi i8 [ 1, %12 ], [ 0, %3 ]
  %33 = phi %"class.std::__1::__tree_node"* [ %25, %12 ], [ %10, %3 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  %35 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %34, 0
  %36 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %35, i8 %32, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %36
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %2, i64 0, i32 1
  %13 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %12, align 8
  br label %14

14:                                               ; preds = %8, %44
  %15 = phi %"class.std::__1::__tree_node"* [ %47, %44 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %46, %44 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %11, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = icmp slt i64 %11, %18
  br i1 %21, label %26, label %32

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 1
  %24 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %23, align 8
  %25 = icmp ult %"class.marl::Scheduler::Fiber"* %13, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %20, %22
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %50

32:                                               ; preds = %20
  %33 = icmp slt i64 %18, %11
  br i1 %33, label %36, label %42

34:                                               ; preds = %22
  %35 = icmp ult %"class.marl::Scheduler::Fiber"* %24, %13
  br i1 %35, label %36, label %42

36:                                               ; preds = %32, %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %50

42:                                               ; preds = %32, %34
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %50

44:                                               ; preds = %36, %26
  %45 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %38, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %37, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"* %45 to %"class.std::__1::__tree_node"*
  br label %14

48:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %50

50:                                               ; preds = %48, %42, %40, %30
  %51 = phi %"class.std::__1::__tree_node_base"** [ %27, %30 ], [ %37, %40 ], [ %16, %42 ], [ %49, %48 ]
  ret %"class.std::__1::__tree_node_base"** %51
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::__tree_node_base"*) local_unnamed_addr #5 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %3, i64 0, i32 2
  %6 = bitcast %"class.std::__1::__tree_node_base"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %5, align 8
  store %"class.std::__1::__tree_node_base"* %3, %"class.std::__1::__tree_node_base"** %2, align 8
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node_base"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = ptrtoint %"class.std::__1::__tree_node_base"* %10 to i64
  %14 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2, align 8
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi %"class.std::__1::__tree_node_base"* [ %3, %4 ], [ %15, %12 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %19, %"class.std::__1::__tree_node_base"* %17) #15
  %20 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #5 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE25__emplace_unique_key_argsIS5_JRS5_RKSD_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.marl::Scheduler::Fiber"** dereferenceable(8), %"class.marl::Scheduler::Fiber"** dereferenceable(8), %"class.std::__1::chrono::time_point"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"struct.marl::Allocation::Request", align 16
  %7 = bitcast %"class.marl::Scheduler::Fiber"** %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 32
  %10 = shl i64 %8, 3
  %11 = and i64 %10, 4294967288
  %12 = add nuw nsw i64 %11, 8
  %13 = xor i64 %12, %9
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %14, %9
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = lshr i64 %18, 47
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, -7070675565921424023
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  %25 = inttoptr i64 %8 to %"class.marl::Scheduler::Fiber"*
  br i1 %24, label %70, label %26

26:                                               ; preds = %4
  %27 = tail call i64 @llvm.ctpop.i64(i64 %23) #16, !range !50
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %23, -1
  %31 = and i64 %21, %30
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %21, %23
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %21, %23
  br label %36

36:                                               ; preds = %29, %32, %34
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %21, %32 ]
  %38 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %36
  %44 = add i64 %23, -1
  br label %45

45:                                               ; preds = %43, %65
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %48, %65 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %70, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %21
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %44
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %23
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %23
  br label %62

62:                                               ; preds = %56, %58, %60
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %65, label %70

65:                                               ; preds = %50, %62
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"class.marl::Scheduler::Fiber"**
  %68 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %67, align 8
  %69 = icmp eq %"class.marl::Scheduler::Fiber"* %68, %25
  br i1 %69, label %173, label %45

70:                                               ; preds = %45, %62, %36, %4
  %71 = phi i64 [ %37, %36 ], [ -6148914691236517206, %4 ], [ %37, %62 ], [ %37, %45 ]
  %72 = bitcast %"struct.marl::Allocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #16, !noalias !51
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 32, i1 false) #16, !noalias !51
  %74 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %73, align 8, !noalias !51
  %75 = bitcast %"struct.marl::Allocation::Request"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #16, !noalias !51
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %75, i8 -86, i64 24, i1 false) #16, !alias.scope !54, !noalias !51
  %76 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 2
  %77 = bitcast i8* %76 to i16*
  store i16 1280, i16* %77, align 16, !alias.scope !54, !noalias !51
  %78 = bitcast %"struct.marl::Allocation::Request"* %6 to <2 x i64>*
  store <2 x i64> <i64 32, i64 8>, <2 x i64>* %78, align 16, !alias.scope !54, !noalias !51
  %79 = bitcast %"class.marl::Allocator"* %74 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %80 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %79, align 8, !noalias !51
  %81 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %80, i64 2
  %82 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %81, align 8, !noalias !51
  call void %82(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %74, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %6) #15, !noalias !51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #16, !noalias !51
  %83 = bitcast %"struct.marl::Allocation"* %5 to %"struct.std::__1::__hash_node.146"**
  %84 = load %"struct.std::__1::__hash_node.146"*, %"struct.std::__1::__hash_node.146"** %83, align 8, !noalias !51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #16, !noalias !51
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 2, i32 0
  %86 = bitcast %"class.marl::Scheduler::Fiber"** %2 to i64*
  %87 = load i64, i64* %86, align 8, !noalias !51
  %88 = bitcast %"struct.std::__1::pair.145"* %85 to i64*
  store i64 %87, i64* %88, align 8, !noalias !51
  %89 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %3, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %91 = load i64, i64* %89, align 8, !noalias !51
  store i64 %91, i64* %90, align 8, !noalias !51
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 1
  store i64 %21, i64* %92, align 8, !noalias !51
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %93, align 8, !noalias !51
  %94 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %95, 1
  %97 = uitofp i64 %96 to float
  %98 = uitofp i64 %23 to float
  %99 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %100 = load float, float* %99, align 4
  %101 = fmul float %100, %98
  %102 = fcmp olt float %101, %97
  %103 = or i1 %24, %102
  br i1 %103, label %104, label %127

104:                                              ; preds = %70
  %105 = shl i64 %23, 1
  %106 = icmp ult i64 %23, 3
  %107 = call i64 @llvm.ctpop.i64(i64 %23) #16, !range !50
  %108 = icmp ugt i64 %107, 1
  %109 = or i1 %106, %108
  %110 = zext i1 %109 to i64
  %111 = or i64 %105, %110
  %112 = fdiv float %97, %100
  %113 = call float @llvm.ceil.f32(float %112) #16
  %114 = fptoui float %113 to i64
  %115 = icmp ult i64 %111, %114
  %116 = select i1 %115, i64 %114, i64 %111
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %116) #17
  %117 = load i64, i64* %22, align 8
  %118 = call i64 @llvm.ctpop.i64(i64 %117) #16, !range !50
  %119 = icmp ugt i64 %118, 1
  br i1 %119, label %123, label %120

120:                                              ; preds = %104
  %121 = add i64 %117, -1
  %122 = and i64 %121, %21
  br label %127

123:                                              ; preds = %104
  %124 = icmp ult i64 %21, %117
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = urem i64 %21, %117
  br label %127

127:                                              ; preds = %125, %123, %120, %70
  %128 = phi i64 [ %23, %70 ], [ %117, %120 ], [ %117, %123 ], [ %117, %125 ]
  %129 = phi i64 [ %71, %70 ], [ %122, %120 ], [ %21, %123 ], [ %126, %125 ]
  %130 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %129
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base"* %133, null
  br i1 %134, label %135, label %163

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 0, i32 0
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.std::__1::__hash_node.146"* %84 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %141, %"struct.std::__1::__hash_node_base"** %137, align 8
  %142 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, i64 %129
  store %"struct.std::__1::__hash_node_base"* %136, %"struct.std::__1::__hash_node_base"** %143, align 8
  %144 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base"* %144, null
  br i1 %145, label %169, label %146

146:                                              ; preds = %135
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = call i64 @llvm.ctpop.i64(i64 %128) #16, !range !50
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %128, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %128
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %128
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %161, i64 %160
  store %"struct.std::__1::__hash_node_base"* %141, %"struct.std::__1::__hash_node_base"** %162, align 8
  br label %169

163:                                              ; preds = %127
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %133, i64 0, i32 0
  %165 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.std::__1::__hash_node.146"* %84 to i64*
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %168, %"struct.std::__1::__hash_node_base"** %164, align 8
  br label %169

169:                                              ; preds = %163, %159, %135
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node.146", %"struct.std::__1::__hash_node.146"* %84, i64 0, i32 0
  %171 = load i64, i64* %94, align 8
  %172 = add i64 %171, 1
  store i64 %172, i64* %94, align 8
  br label %173

173:                                              ; preds = %65, %169
  %174 = phi i8 [ 1, %169 ], [ 0, %65 ]
  %175 = phi %"struct.std::__1::__hash_node_base"* [ %170, %169 ], [ %48, %65 ]
  %176 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %175, 0
  %177 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %176, i8 %174, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %177
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !50
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10) #17
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !50
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !50
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42) #17
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %115, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #16
  %11 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %10, align 8
  %12 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #16, !alias.scope !57
  %15 = shl i64 %1, 3
  %16 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %17 = bitcast i8* %16 to i16*
  store i16 1280, i16* %17, align 8, !alias.scope !57
  store i64 %15, i64* %13, align 8, !alias.scope !57
  store i64 8, i64* %14, align 8, !alias.scope !57
  %18 = bitcast %"class.marl::Allocator"* %11 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %19 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, i64 2
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %20, align 8
  call void %21(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %11, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %22 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base"***
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetIPSL_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESV_(%"class.std::__1::unique_ptr.44"* %5, %"struct.std::__1::__hash_node_base"** %23) #15
  %24 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %31

26:                                               ; preds = %31
  %27 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %117, label %37

31:                                               ; preds = %31, %8
  %32 = phi i64 [ 0, %8 ], [ %35, %31 ]
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %32
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %34, align 8
  %35 = add nuw i64 %32, 1
  %36 = icmp eq i64 %35, %1
  br i1 %36, label %26, label %31

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = call i64 @llvm.ctpop.i64(i64 %1) #16, !range !50
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = add i64 %1, -1
  %45 = and i64 %40, %44
  br label %50

46:                                               ; preds = %37
  %47 = icmp ult i64 %40, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %40, %1
  br label %50

50:                                               ; preds = %43, %46, %48
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %40, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base"* %27, %"struct.std::__1::__hash_node_base"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %117, label %58

58:                                               ; preds = %50
  %59 = add i64 %1, -1
  br label %60

60:                                               ; preds = %58, %109
  %61 = phi %"struct.std::__1::__hash_node_base"* [ %56, %58 ], [ %113, %109 ]
  %62 = phi i64 [ %51, %58 ], [ %111, %109 ]
  %63 = phi %"struct.std::__1::__hash_node_base"* [ %29, %58 ], [ %110, %109 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  br i1 %42, label %69, label %67

67:                                               ; preds = %60
  %68 = and i64 %66, %59
  br label %73

69:                                               ; preds = %60
  %70 = icmp ult i64 %66, %1
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = urem i64 %66, %1
  br label %73

73:                                               ; preds = %67, %69, %71
  %74 = phi i64 [ %68, %67 ], [ %72, %71 ], [ %66, %69 ]
  %75 = icmp eq i64 %74, %62
  br i1 %75, label %109, label %76

76:                                               ; preds = %73
  %77 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %77, i64 %74
  %79 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %82 to %"class.marl::Scheduler::Fiber"**
  br label %85

84:                                               ; preds = %76
  store %"struct.std::__1::__hash_node_base"* %63, %"struct.std::__1::__hash_node_base"** %78, align 8
  br label %109

85:                                               ; preds = %81, %90
  %86 = phi %"struct.std::__1::__hash_node_base"* [ %88, %90 ], [ %61, %81 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to %"class.marl::Scheduler::Fiber"**
  %93 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %83, align 8
  %94 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %92, align 8
  %95 = icmp eq %"class.marl::Scheduler::Fiber"* %93, %94
  br i1 %95, label %85, label %96

96:                                               ; preds = %85, %90
  %97 = ptrtoint %"struct.std::__1::__hash_node_base"* %88 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  store i64 %97, i64* %99, align 8
  %100 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, i64 %74
  %102 = bitcast %"struct.std::__1::__hash_node_base"** %101 to i64**
  %103 = load i64*, i64** %102, align 8
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %98, align 8
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %74
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %61, %"struct.std::__1::__hash_node_base"** %108, align 8
  br label %109

109:                                              ; preds = %73, %96, %84
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %61, %84 ], [ %63, %96 ], [ %61, %73 ]
  %111 = phi i64 [ %74, %84 ], [ %62, %96 ], [ %62, %73 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %114, label %117, label %60

115:                                              ; preds = %2
  tail call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetIPSL_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESV_(%"class.std::__1::unique_ptr.44"* %5, %"struct.std::__1::__hash_node_base"** null) #15
  %116 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %116, align 8
  br label %117

117:                                              ; preds = %109, %50, %26, %115
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetIPSL_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESV_(%"class.std::__1::unique_ptr.44"*, %"struct.std::__1::__hash_node_base"**) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %4, align 8
  store %"struct.std::__1::__hash_node_base"** %1, %"struct.std::__1::__hash_node_base"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base"***
  store %"struct.std::__1::__hash_node_base"** %5, %"struct.std::__1::__hash_node_base"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind optsize
declare zeroext i1 @_ZNSt3__15mutex8try_lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.marl::Scheduler::Fiber"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.marl::Scheduler::Fiber"** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to %"class.marl::Scheduler::Fiber"*
  br i1 %20, label %70, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #16, !range !50
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br label %45

45:                                               ; preds = %43, %66
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %19
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %19
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.marl::Scheduler::Fiber"**
  %64 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %63, align 8
  %65 = icmp eq %"class.marl::Scheduler::Fiber"* %64, %21
  br i1 %65, label %70, label %66

66:                                               ; preds = %58, %61
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %61, %66, %58, %39, %2, %32
  %71 = phi %"struct.std::__1::__hash_node_base"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %61 ], [ null, %66 ], [ null, %58 ]
  ret %"struct.std::__1::__hash_node_base"* %71
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE14__erase_uniqueIS4_EEmRKT_(%"class.std::__1::__tree"*, %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE4findIS4_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEmEERKT_(%"class.std::__1::__tree"* %0, %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16) %1) #17
  %5 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"*
  %9 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE21__remove_node_pointerEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %8) #15
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %13 = bitcast %"struct.marl::Allocation"* %3 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %13, align 8
  %14 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %14, align 8
  %15 = bitcast i8* %12 to i16*
  store i16 1280, i16* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %17 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %16, align 8
  %18 = bitcast %"class.marl::Allocator"* %17 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %19 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %19, i64 3
  %21 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, align 8
  call void %21(%"class.marl::Allocator"* %17, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %22

22:                                               ; preds = %2, %7
  %23 = phi i64 [ 1, %7 ], [ 0, %2 ]
  ret i64 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE4findIS4_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEmEERKT_(%"class.std::__1::__tree"*, %"struct.marl::Scheduler::WaitingFibers::Timeout"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.marl::Scheduler::WaitingFibers::Timeout", %"struct.marl::Scheduler::WaitingFibers::Timeout"* %1, i64 0, i32 1
  %11 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %10, align 8
  br label %12

12:                                               ; preds = %24, %7
  %13 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %31, %24 ]
  %14 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %32, %24 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, %9
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = icmp slt i64 %16, %9
  br label %24

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 1
  %22 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %21, align 8
  %23 = icmp ult %"class.marl::Scheduler::Fiber"* %22, %11
  br label %24

24:                                               ; preds = %20, %18
  %25 = phi i1 [ %19, %18 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__tree_node_base"** %26 to %"class.std::__1::__tree_node"**
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node"* %14 to %"class.std::__1::__tree_node"**
  %30 = select i1 %25, %"class.std::__1::__tree_node"** %27, %"class.std::__1::__tree_node"** %29
  %31 = select i1 %25, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %28
  %32 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %33 = icmp eq %"class.std::__1::__tree_node"* %32, null
  br i1 %33, label %34, label %12

34:                                               ; preds = %24
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %31, %3
  br i1 %35, label %48, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %9, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = icmp slt i64 %9, %39
  br i1 %42, label %48, label %49

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 5
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.marl::Scheduler::Fiber"**
  %46 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %45, align 8
  %47 = icmp ult %"class.marl::Scheduler::Fiber"* %11, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %34, %2, %41, %43
  br label %49

49:                                               ; preds = %43, %41, %48
  %50 = phi %"class.std::__1::__tree_end_node"* [ %3, %48 ], [ %31, %41 ], [ %31, %43 ]
  ret %"class.std::__1::__tree_end_node"* %50
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE21__remove_node_pointerEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %5 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node_base"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node_base"*
  %9 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 2
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %8
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %5, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %7, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %7 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %7, %19
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %7 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %3
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #15
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !10
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !10
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !10
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !10
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !10
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !10
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !10
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !10
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !10
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !10
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !10
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !10
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !10
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE(%"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"class.std::__1::unique_ptr.147", align 8
  %5 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1, i64 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %5, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE(%"class.std::__1::unique_ptr.147"* nonnull sret %4, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* %1) #15
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node.146"*, %"struct.std::__1::__hash_node.146"** %7, align 8
  store %"struct.std::__1::__hash_node.146"* null, %"struct.std::__1::__hash_node.146"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node.146"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"struct.marl::StlAllocator.54"*, %"struct.marl::StlAllocator.54"** %11, align 8
  %13 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #16
  %16 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node.146"**
  store %"struct.std::__1::__hash_node.146"* %8, %"struct.std::__1::__hash_node.146"** %16, align 8
  %17 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 32, i64 8>, <2 x i64>* %17, align 8
  %18 = bitcast i8* %15 to i16*
  store i16 1280, i16* %18, align 8
  %19 = getelementptr inbounds %"struct.marl::StlAllocator.54", %"struct.marl::StlAllocator.54"* %12, i64 0, i32 0
  %20 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %19, align 8
  %21 = bitcast %"class.marl::Allocator"* %20 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %22, i64 3
  %24 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %23, align 8
  call void %24(%"class.marl::Allocator"* %20, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #16
  br label %25

25:                                               ; preds = %2, %10
  ret %"struct.std::__1::__hash_node_base"* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE(%"class.std::__1::unique_ptr.147"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !50
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br i1 %10, label %39, label %36

36:                                               ; preds = %32
  %37 = add i64 %5, -1
  %38 = and i64 %35, %37
  br label %43

39:                                               ; preds = %32
  %40 = icmp ult i64 %35, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %35, %5
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %35, %39 ]
  %45 = icmp eq i64 %44, %19
  br i1 %45, label %65, label %46

46:                                               ; preds = %43, %29
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %10, label %57, label %54

54:                                               ; preds = %50
  %55 = add i64 %5, -1
  %56 = and i64 %53, %55
  br label %61

57:                                               ; preds = %50
  %58 = icmp ult i64 %53, %5
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %53, %5
  br label %61

61:                                               ; preds = %54, %57, %59
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %53, %57 ]
  %63 = icmp eq i64 %62, %19
  br i1 %63, label %65, label %64

64:                                               ; preds = %61, %46
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %65

65:                                               ; preds = %61, %43, %64
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base"* %67, null
  %69 = ptrtoint %"struct.std::__1::__hash_node_base"* %67 to i64
  br i1 %68, label %89, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  br i1 %10, label %77, label %74

74:                                               ; preds = %70
  %75 = add i64 %5, -1
  %76 = and i64 %73, %75
  br label %81

77:                                               ; preds = %70
  %78 = icmp ult i64 %73, %5
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %73, %5
  br label %81

81:                                               ; preds = %74, %77, %79
  %82 = phi i64 [ %76, %74 ], [ %80, %79 ], [ %73, %77 ]
  %83 = icmp eq i64 %82, %19
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %85, i64 %82
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %86, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %84, %81, %65
  %90 = phi i64 [ %88, %84 ], [ %69, %81 ], [ %69, %65 ]
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %90, i64* %91, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8
  %92 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 1, i32 0
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.147"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"struct.marl::StlAllocator.54"* %95, %"struct.marl::StlAllocator.54"** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %99, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE14__erase_uniqueIS5_EEmRKT_(%"class.std::__1::__hash_table"*, %"class.marl::Scheduler::Fiber"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_(%"class.std::__1::__hash_table"* %0, %"class.marl::Scheduler::Fiber"** dereferenceable(8) %1) #17
  %4 = icmp eq %"struct.std::__1::__hash_node_base"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEE(%"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* nonnull %3) #17
  br label %7

7:                                                ; preds = %2, %5
  %8 = phi i64 [ 1, %5 ], [ 0, %2 ]
  ret i64 %8
}

; Function Attrs: nounwind optsize
declare i32 @sched_yield() local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN4marl7OSFiberENS1_9Allocator7DeleterEE5resetEPS2_(%"class.std::__1::unique_ptr.7"*, %"class.marl::OSFiber"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.marl::OSFiber"*, %"class.marl::OSFiber"** %4, align 8
  store %"class.marl::OSFiber"* %1, %"class.marl::OSFiber"** %4, align 8
  %6 = icmp eq %"class.marl::OSFiber"* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %5, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %5, i64 0, i32 0
  %14 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %13, align 8
  %15 = bitcast %"class.marl::Allocator"* %14 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %16 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %16, i64 3
  %18 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %17, align 8
  tail call void %18(%"class.marl::Allocator"* %14, %"struct.marl::Allocation"* dereferenceable(32) %8) #15
  br label %19

19:                                               ; preds = %12, %7
  %20 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %5, i64 0, i32 2, i32 0, i32 2
  %21 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %21, i64 0, i32 1
  %23 = load void (i8*)*, void (i8*)** %22, align 8
  %24 = icmp eq void (i8*)* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.marl::OSFiber", %"class.marl::OSFiber"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void %23(i8* %27) #15
  br label %28

28:                                               ; preds = %19, %25
  %29 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false) #16
  %32 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  %33 = bitcast i8* %32 to i16*
  store i16 512, i16* %33, align 8
  %34 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::OSFiber"**
  store %"class.marl::OSFiber"* %5, %"class.marl::OSFiber"** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = mul i64 %36, 152
  store i64 %37, i64* %30, align 8
  store i64 8, i64* %31, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %39 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %38, align 8
  %40 = bitcast %"class.marl::Allocator"* %39 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %41 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %41, i64 3
  %43 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %42, align 8
  call void %43(%"class.marl::Allocator"* %39, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #16
  br label %44

44:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN4marl9Scheduler6WorkerENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr.109"*, %"class.marl::Scheduler::Worker"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %4, align 8
  store %"class.marl::Scheduler::Worker"* %1, %"class.marl::Scheduler::Worker"** %4, align 8
  %6 = icmp eq %"class.marl::Scheduler::Worker"* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  tail call void @_ZN4marl9Scheduler6WorkerD2Ev(%"class.marl::Scheduler::Worker"* nonnull %5) #15
  %8 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  %12 = bitcast i8* %11 to i16*
  store i16 512, i16* %12, align 8
  %13 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Worker"**
  store %"class.marl::Scheduler::Worker"* %5, %"class.marl::Scheduler::Worker"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %15, 904
  store i64 %16, i64* %9, align 8
  store i64 8, i64* %10, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl9Scheduler6WorkerD2Ev(%"class.marl::Scheduler::Worker"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 4
  %7 = bitcast %"struct.marl::aligned_storage<24, 8>::type"** %6 to %"class.std::__1::unique_ptr"**
  br label %13

8:                                                ; preds = %13, %1
  %9 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 5
  %10 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %9, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %29, label %20

13:                                               ; preds = %13, %5
  %14 = phi i64 [ 0, %5 ], [ %17, %13 ]
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 %14
  tail call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* %16, %"class.marl::Scheduler::Fiber"* null) #15
  %17 = add nuw i64 %14, 1
  %18 = load i64, i64* %2, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %13, label %8

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 0
  %22 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %21, align 8
  %23 = bitcast %"class.marl::Allocator"* %22 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %24 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %24, i64 3
  %26 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %25, align 8
  tail call void %26(%"class.marl::Allocator"* %22, %"struct.marl::Allocation"* dereferenceable(32) %9) #15
  %27 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 8, i32 4
  %28 = bitcast %"struct.marl::aligned_storage<24, 8>::type"** %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 34, i1 false) #16
  br label %29

29:                                               ; preds = %8, %20
  %30 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEED2Ev(%"class.std::__1::__hash_table.64"* %30) #15
  %31 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 6
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %31) #15
  %32 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 1, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEED2Ev(%"class.std::__1::__hash_table"* %32) #15
  %33 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0
  %34 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node"**
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %35, align 8
  tail call void @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %33, %"class.std::__1::__tree_node"* %36) #15
  %37 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 3, i32 0
  tail call void @_ZNSt3__112__deque_baseIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.29"* %37) #15
  %38 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 6, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIN4marl4TaskENS1_12StlAllocatorIS2_EEED2Ev(%"class.std::__1::__deque_base"* %38) #15
  %39 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 5
  tail call void @_ZN4marl6ThreadD1Ev(%"class.marl::Thread"* %39) #15
  %40 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %0, i64 0, i32 3
  tail call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* %40, %"class.marl::Scheduler::Fiber"* null) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEED2Ev(%"class.std::__1::__hash_table.64"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.68"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %8 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %10 = bitcast %"struct.marl::Allocation"* %2 to %"struct.std::__1::__hash_node_base.68"**
  %11 = bitcast i8* %9 to i16*
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %13 = bitcast i64* %8 to <2 x i64>*
  br label %14

14:                                               ; preds = %14, %6
  %15 = phi %"struct.std::__1::__hash_node_base.68"* [ %4, %6 ], [ %17, %14 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false) #16
  store %"struct.std::__1::__hash_node_base.68"* %15, %"struct.std::__1::__hash_node_base.68"** %10, align 8
  store <2 x i64> <i64 24, i64 8>, <2 x i64>* %13, align 8
  store i16 1280, i16* %11, align 8
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %12, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  %23 = icmp eq %"struct.std::__1::__hash_node_base.68"* %17, null
  br i1 %23, label %24, label %14

24:                                               ; preds = %14, %1
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetEDn(%"class.std::__1::unique_ptr.65"* %25, i8* null) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetEDn(%"class.std::__1::unique_ptr.65"*, i8*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %4, align 8
  store %"struct.std::__1::__hash_node_base.68"** null, %"struct.std::__1::__hash_node_base.68"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.68"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.68"***
  store %"struct.std::__1::__hash_node_base.68"** %5, %"struct.std::__1::__hash_node_base.68"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEED2Ev(%"class.std::__1::__deque_base.29"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  tail call void @_ZNSt3__112__deque_baseIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE5clearEv(%"class.std::__1::__deque_base.29"* %0) #15
  %3 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %8 = icmp eq %"class.marl::Scheduler::Fiber"*** %5, %7
  br i1 %8, label %28, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %13 = bitcast %"struct.marl::Allocation"* %2 to i64*
  %14 = bitcast i8* %12 to i16*
  %15 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %16 = bitcast i64* %11 to <2 x i64>*
  br label %17

17:                                               ; preds = %9, %17
  %18 = phi %"class.marl::Scheduler::Fiber"*** [ %5, %9 ], [ %26, %17 ]
  %19 = bitcast %"class.marl::Scheduler::Fiber"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  store i64 %20, i64* %13, align 8
  store <2 x i64> <i64 4096, i64 8>, <2 x i64>* %16, align 8
  store i16 1280, i16* %14, align 8
  %21 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %15, align 8
  %22 = bitcast %"class.marl::Allocator"* %21 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %23 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %23, i64 3
  %25 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %24, align 8
  call void %25(%"class.marl::Allocator"* %21, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  %26 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %18, i64 1
  %27 = icmp eq %"class.marl::Scheduler::Fiber"*** %26, %7
  br i1 %27, label %28, label %17

28:                                               ; preds = %17, %1
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.30"* %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN4marl4TaskENS1_12StlAllocatorIS2_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  tail call void @_ZNSt3__112__deque_baseIN4marl4TaskENS1_12StlAllocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"* %0) #15
  %3 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.marl::Task"**, %"class.marl::Task"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %8 = icmp eq %"class.marl::Task"** %5, %7
  br i1 %8, label %28, label %9

9:                                                ; preds = %1
  %10 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %13 = bitcast %"struct.marl::Allocation"* %2 to i64*
  %14 = bitcast i8* %12 to i16*
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %16 = bitcast i64* %11 to <2 x i64>*
  br label %17

17:                                               ; preds = %9, %17
  %18 = phi %"class.marl::Task"** [ %5, %9 ], [ %26, %17 ]
  %19 = bitcast %"class.marl::Task"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  store i64 %20, i64* %13, align 8
  store <2 x i64> <i64 4080, i64 8>, <2 x i64>* %16, align 8
  store i16 1280, i16* %14, align 8
  %21 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %15, align 8
  %22 = bitcast %"class.marl::Allocator"* %21 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %23 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %23, i64 3
  %25 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %24, align 8
  call void %25(%"class.marl::Allocator"* %21, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  %26 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %18, i64 1
  %27 = icmp eq %"class.marl::Task"** %26, %7
  br i1 %27, label %28, label %17

28:                                               ; preds = %17, %1
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer"* %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEED2Ev(%"class.std::__1::__hash_table"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %8 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %10 = bitcast %"struct.marl::Allocation"* %2 to %"struct.std::__1::__hash_node_base"**
  %11 = bitcast i8* %9 to i16*
  %12 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %13 = bitcast i64* %8 to <2 x i64>*
  br label %14

14:                                               ; preds = %14, %6
  %15 = phi %"struct.std::__1::__hash_node_base"* [ %4, %6 ], [ %17, %14 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false) #16
  store %"struct.std::__1::__hash_node_base"* %15, %"struct.std::__1::__hash_node_base"** %10, align 8
  store <2 x i64> <i64 32, i64 8>, <2 x i64>* %13, align 8
  store i16 1280, i16* %11, align 8
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %12, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %17, null
  br i1 %23, label %24, label %14

24:                                               ; preds = %14, %1
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetEDn(%"class.std::__1::unique_ptr.44"* %25, i8* null) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEEPvEEEENS_25__bucket_list_deallocatorINS4_12StlAllocatorISL_EEEEE5resetEDn(%"class.std::__1::unique_ptr.44"*, i8*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %4, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base"***
  store %"struct.std::__1::__hash_node_base"** %5, %"struct.std::__1::__hash_node_base"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %7) #15
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %10) #15
  %11 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %1, %"class.std::__1::__tree_node"** %14, align 8
  %15 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %15, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  br label %23

23:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE5clearEv(%"class.std::__1::__deque_base.29"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 9
  %8 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %4, i64 %7
  %9 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %9, align 8
  %11 = icmp eq %"class.marl::Scheduler::Fiber"*** %10, %4
  %12 = ptrtoint %"class.marl::Scheduler::Fiber"*** %10 to i64
  %13 = ptrtoint %"class.marl::Scheduler::Fiber"*** %4 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %8, align 8
  %18 = and i64 %6, 511
  %19 = getelementptr inbounds %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = lshr i64 %22, 9
  %24 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %4, i64 %23
  %25 = load %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %24, align 8
  %26 = and i64 %22, 511
  %27 = getelementptr inbounds %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %25, i64 %26
  %28 = icmp eq %"class.marl::Scheduler::Fiber"** %27, %19
  br i1 %28, label %29, label %43

29:                                               ; preds = %56, %14, %16
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ], [ %20, %56 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"class.marl::Scheduler::Fiber"**** %9 to i64*
  %32 = sub i64 %12, %13
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %35, label %77

35:                                               ; preds = %29
  %36 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %37 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %39 = bitcast %"struct.marl::Allocation"* %2 to i64*
  %40 = bitcast i8* %38 to i16*
  %41 = getelementptr inbounds %"class.std::__1::__deque_base.29", %"class.std::__1::__deque_base.29"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %42 = bitcast i64* %37 to <2 x i64>*
  br label %61

43:                                               ; preds = %16, %56
  %44 = phi %"class.marl::Scheduler::Fiber"** [ %59, %56 ], [ %19, %16 ]
  %45 = phi %"class.marl::Scheduler::Fiber"*** [ %58, %56 ], [ %8, %16 ]
  %46 = getelementptr inbounds %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %44, i64 1
  %47 = ptrtoint %"class.marl::Scheduler::Fiber"** %46 to i64
  %48 = bitcast %"class.marl::Scheduler::Fiber"*** %45 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = icmp eq i64 %50, 4096
  br i1 %51, label %52, label %56

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %45, i64 1
  %54 = bitcast %"class.marl::Scheduler::Fiber"*** %53 to i64*
  %55 = load i64, i64* %54, align 8
  br label %56

56:                                               ; preds = %43, %52
  %57 = phi i64 [ %55, %52 ], [ %47, %43 ]
  %58 = phi %"class.marl::Scheduler::Fiber"*** [ %53, %52 ], [ %45, %43 ]
  %59 = inttoptr i64 %57 to %"class.marl::Scheduler::Fiber"**
  %60 = icmp eq %"class.marl::Scheduler::Fiber"** %27, %59
  br i1 %60, label %29, label %43

61:                                               ; preds = %35, %61
  %62 = phi %"class.marl::Scheduler::Fiber"*** [ %4, %35 ], [ %71, %61 ]
  %63 = bitcast %"class.marl::Scheduler::Fiber"*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false) #16
  store i64 %64, i64* %39, align 8
  store <2 x i64> <i64 4096, i64 8>, <2 x i64>* %42, align 8
  store i16 1280, i16* %40, align 8
  %65 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %41, align 8
  %66 = bitcast %"class.marl::Allocator"* %65 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %67 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %67, i64 3
  %69 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %68, align 8
  call void %69(%"class.marl::Allocator"* %65, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #16
  %70 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %3, align 8
  %71 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %70, i64 1
  store %"class.marl::Scheduler::Fiber"*** %71, %"class.marl::Scheduler::Fiber"**** %3, align 8
  %72 = load i64, i64* %31, align 8
  %73 = ptrtoint %"class.marl::Scheduler::Fiber"*** %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = icmp ugt i64 %75, 2
  br i1 %76, label %61, label %77

77:                                               ; preds = %61, %29
  %78 = phi i64 [ %33, %29 ], [ %75, %61 ]
  switch i64 %78, label %82 [
    i64 1, label %80
    i64 2, label %79
  ]

79:                                               ; preds = %77
  br label %80

80:                                               ; preds = %77, %79
  %81 = phi i64 [ 512, %79 ], [ 256, %77 ]
  store i64 %81, i64* %5, align 8
  br label %82

82:                                               ; preds = %80, %77
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.30"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 1
  %4 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 2
  %6 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %5, align 8
  %7 = icmp eq %"class.marl::Scheduler::Fiber"*** %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.marl::Scheduler::Fiber"*** %4 to i64
  %10 = getelementptr %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %6, i64 -1
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = xor i64 %13, -1
  %15 = getelementptr %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %6, i64 %14
  store %"class.marl::Scheduler::Fiber"*** %15, %"class.marl::Scheduler::Fiber"**** %5, align 8
  br label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 0
  %18 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %17, align 8
  %19 = icmp eq %"class.marl::Scheduler::Fiber"*** %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %18 to i64
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = bitcast %"class.marl::Scheduler::Fiber"**** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %21
  %26 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false) #16
  %30 = bitcast %"struct.marl::Allocation"* %2 to %"class.marl::Scheduler::Fiber"****
  store %"class.marl::Scheduler::Fiber"*** %18, %"class.marl::Scheduler::Fiber"**** %30, align 8
  store i64 %25, i64* %27, align 8
  store i64 8, i64* %28, align 8
  %31 = bitcast i8* %29 to i16*
  store i16 1280, i16* %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %33 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %32, align 8
  %34 = bitcast %"class.marl::Allocator"* %33 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %35 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %35, i64 3
  %37 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %36, align 8
  call void %37(%"class.marl::Allocator"* %33, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #16
  br label %38

38:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN4marl4TaskENS1_12StlAllocatorIS2_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = udiv i64 %6, 102
  %8 = urem i64 %6, 102
  %9 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %4, i64 %7
  %10 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %11 = load %"class.marl::Task"**, %"class.marl::Task"*** %10, align 8
  %12 = icmp eq %"class.marl::Task"** %11, %4
  %13 = ptrtoint %"class.marl::Task"** %11 to i64
  %14 = ptrtoint %"class.marl::Task"** %4 to i64
  %15 = bitcast %"class.marl::Task"** %4 to i64*
  br i1 %12, label %16, label %18

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %30

18:                                               ; preds = %1
  %19 = load %"class.marl::Task"*, %"class.marl::Task"** %9, align 8
  %20 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %19, i64 %8
  %21 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %6
  %24 = udiv i64 %23, 102
  %25 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %4, i64 %24
  %26 = load %"class.marl::Task"*, %"class.marl::Task"** %25, align 8
  %27 = urem i64 %23, 102
  %28 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %26, i64 %27
  %29 = icmp eq %"class.marl::Task"* %28, %20
  br i1 %29, label %30, label %56

30:                                               ; preds = %16, %18
  %31 = phi i64* [ %17, %16 ], [ %21, %18 ]
  %32 = bitcast %"class.marl::Task"*** %10 to i64*
  br label %39

33:                                               ; preds = %78
  %34 = bitcast %"class.marl::Task"*** %10 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.marl::Task"*** %3 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %37 to i64*
  br label %39

39:                                               ; preds = %30, %33
  %40 = phi i64* [ %31, %30 ], [ %21, %33 ]
  %41 = phi i64* [ %32, %30 ], [ %34, %33 ]
  %42 = phi i64* [ %15, %30 ], [ %38, %33 ]
  %43 = phi i64 [ %14, %30 ], [ %37, %33 ]
  %44 = phi i64 [ %13, %30 ], [ %35, %33 ]
  store i64 0, i64* %40, align 8
  %45 = sub i64 %44, %43
  %46 = ashr exact i64 %45, 3
  %47 = icmp ugt i64 %46, 2
  br i1 %47, label %48, label %99

48:                                               ; preds = %39
  %49 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %50 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %52 = bitcast %"struct.marl::Allocation"* %2 to i64*
  %53 = bitcast i8* %51 to i16*
  %54 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %55 = bitcast i64* %50 to <2 x i64>*
  br label %83

56:                                               ; preds = %18, %78
  %57 = phi %"class.marl::Task"* [ %81, %78 ], [ %20, %18 ]
  %58 = phi %"class.marl::Task"** [ %80, %78 ], [ %9, %18 ]
  %59 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %57, i64 0, i32 0, i32 0, i32 2
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  tail call void %62(i8* %66) #15
  br label %67

67:                                               ; preds = %56, %64
  %68 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %57, i64 1
  %69 = ptrtoint %"class.marl::Task"* %68 to i64
  %70 = bitcast %"class.marl::Task"** %58 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = icmp eq i64 %72, 4080
  br i1 %73, label %74, label %78

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %58, i64 1
  %76 = bitcast %"class.marl::Task"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %67, %74
  %79 = phi i64 [ %77, %74 ], [ %69, %67 ]
  %80 = phi %"class.marl::Task"** [ %75, %74 ], [ %58, %67 ]
  %81 = inttoptr i64 %79 to %"class.marl::Task"*
  %82 = icmp eq %"class.marl::Task"* %28, %81
  br i1 %82, label %33, label %56

83:                                               ; preds = %48, %83
  %84 = phi i64* [ %42, %48 ], [ %98, %83 ]
  %85 = load i64, i64* %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #16
  store i64 %85, i64* %52, align 8
  store <2 x i64> <i64 4080, i64 8>, <2 x i64>* %55, align 8
  store i16 1280, i16* %53, align 8
  %86 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %54, align 8
  %87 = bitcast %"class.marl::Allocator"* %86 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %88 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %88, i64 3
  %90 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %89, align 8
  call void %90(%"class.marl::Allocator"* %86, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #16
  %91 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %92 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %91, i64 1
  store %"class.marl::Task"** %92, %"class.marl::Task"*** %3, align 8
  %93 = load i64, i64* %41, align 8
  %94 = ptrtoint %"class.marl::Task"** %92 to i64
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp ugt i64 %96, 2
  %98 = bitcast %"class.marl::Task"** %92 to i64*
  br i1 %97, label %83, label %99

99:                                               ; preds = %83, %39
  %100 = phi i64 [ %46, %39 ], [ %96, %83 ]
  switch i64 %100, label %104 [
    i64 1, label %102
    i64 2, label %101
  ]

101:                                              ; preds = %99
  br label %102

102:                                              ; preds = %99, %101
  %103 = phi i64 [ 102, %101 ], [ 51, %99 ]
  store i64 %103, i64* %5, align 8
  br label %104

104:                                              ; preds = %102, %99
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %6 = load %"class.marl::Task"**, %"class.marl::Task"*** %5, align 8
  %7 = icmp eq %"class.marl::Task"** %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.marl::Task"** %4 to i64
  %10 = getelementptr %"class.marl::Task"*, %"class.marl::Task"** %6, i64 -1
  %11 = ptrtoint %"class.marl::Task"** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = xor i64 %13, -1
  %15 = getelementptr %"class.marl::Task"*, %"class.marl::Task"** %6, i64 %14
  store %"class.marl::Task"** %15, %"class.marl::Task"*** %5, align 8
  br label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %18 = load %"class.marl::Task"**, %"class.marl::Task"*** %17, align 8
  %19 = icmp eq %"class.marl::Task"** %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.marl::Task"** %18 to i64
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = bitcast %"class.marl::Task"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %21
  %26 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  %29 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false) #16
  %30 = bitcast %"struct.marl::Allocation"* %2 to %"class.marl::Task"***
  store %"class.marl::Task"** %18, %"class.marl::Task"*** %30, align 8
  store i64 %25, i64* %27, align 8
  store i64 8, i64* %28, align 8
  %31 = bitcast i8* %29 to i16*
  store i16 1280, i16* %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %33 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %32, align 8
  %34 = bitcast %"class.marl::Allocator"* %33 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %35 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %35, i64 3
  %37 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %36, align 8
  call void %37(%"class.marl::Allocator"* %33, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #16
  br label %38

38:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.88"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE25__emplace_unique_key_argsIS2_JRS2_S9_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.84"*, %"class.std::__1::__thread_id"* dereferenceable(8), %"class.std::__1::__thread_id"* dereferenceable(8), %"class.std::__1::unique_ptr.109"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"struct.marl::Allocation::Request", align 16
  %7 = alloca %"class.std::__1::unique_ptr.166", align 8
  %8 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %63, label %13

13:                                               ; preds = %4
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #16, !range !50
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, -1
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ult i64 %9, %11
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %16, %19, %21
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.88"* %28, null
  br i1 %29, label %63, label %30

30:                                               ; preds = %23
  %31 = add i64 %11, -1
  %32 = icmp eq i64 %9, 0
  br label %33

33:                                               ; preds = %30, %53
  %34 = phi %"struct.std::__1::__hash_node_base.88"* [ %36, %53 ], [ %28, %30 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.88"* %36, null
  br i1 %37, label %63, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %36, i64 1
  %40 = bitcast %"struct.std::__1::__hash_node_base.88"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %9
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  br i1 %15, label %46, label %44

44:                                               ; preds = %43
  %45 = and i64 %41, %31
  br label %50

46:                                               ; preds = %43
  %47 = icmp ult i64 %41, %11
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %41, %11
  br label %50

50:                                               ; preds = %44, %46, %48
  %51 = phi i64 [ %45, %44 ], [ %49, %48 ], [ %41, %46 ]
  %52 = icmp eq i64 %51, %24
  br i1 %52, label %53, label %63

53:                                               ; preds = %38, %50
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %36, i64 2
  %55 = bitcast %"struct.std::__1::__hash_node_base.88"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  %58 = or i1 %32, %57
  %59 = or i64 %56, %9
  %60 = icmp eq i64 %59, 0
  %61 = icmp eq i64 %56, %9
  %62 = select i1 %58, i1 %60, i1 %61
  br i1 %62, label %183, label %33

63:                                               ; preds = %33, %50, %23, %4
  %64 = phi i64 [ %24, %23 ], [ -6148914691236517206, %4 ], [ %24, %50 ], [ %24, %33 ]
  %65 = bitcast %"class.std::__1::unique_ptr.166"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #16
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %7, i64 0, i32 0, i32 1, i32 0, i32 1
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 1, i32 1, i32 0
  %69 = bitcast %"struct.marl::Allocation"* %5 to i8*
  %70 = bitcast %"class.std::__1::unique_ptr.166"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #16, !noalias !60
  %71 = getelementptr inbounds %"struct.marl::StlAllocator.97", %"struct.marl::StlAllocator.97"* %68, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 32, i1 false) #16, !noalias !60
  %72 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %71, align 8, !noalias !60
  %73 = bitcast %"struct.marl::Allocation::Request"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #16, !noalias !60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 -86, i64 24, i1 false) #16, !alias.scope !63, !noalias !60
  %74 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %6, i64 0, i32 2
  %75 = bitcast i8* %74 to i16*
  store i16 1280, i16* %75, align 16, !alias.scope !63, !noalias !60
  %76 = bitcast %"struct.marl::Allocation::Request"* %6 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %76, align 16, !alias.scope !63, !noalias !60
  %77 = bitcast %"class.marl::Allocator"* %72 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %78 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %77, align 8, !noalias !60
  %79 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %78, i64 2
  %80 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %79, align 8, !noalias !60
  call void %80(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %72, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %6) #15, !noalias !60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #16, !noalias !60
  %81 = bitcast %"struct.marl::Allocation"* %5 to i64*
  %82 = load i64, i64* %81, align 8, !noalias !60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #16, !noalias !60
  %83 = bitcast %"class.std::__1::unique_ptr.166"* %7 to i64*
  store i64 %82, i64* %83, align 8, !alias.scope !60
  store %"struct.marl::StlAllocator.97"* %68, %"struct.marl::StlAllocator.97"** %66, align 8, !alias.scope !60
  %84 = inttoptr i64 %82 to %"struct.std::__1::__hash_node"*
  %85 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %2, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 2, i32 0, i32 0, i32 0
  %87 = load i64, i64* %85, align 8, !noalias !60
  store i64 %87, i64* %86, align 8, !noalias !60
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 2, i32 0, i32 1
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %3, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.std::__1::unique_ptr.109"* %3 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !60
  store %"class.marl::Scheduler::Worker"* null, %"class.marl::Scheduler::Worker"** %89, align 8, !noalias !60
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %3, i64 0, i32 0, i32 1, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.109"* %88 to i64*
  store i64 %91, i64* %93, align 8, !noalias !60
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %95 = bitcast %"struct.std::__1::__compressed_pair_elem.15"* %94 to i8*
  %96 = bitcast %"struct.marl::Allocator::Deleter"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #16, !noalias !60
  store i8 1, i8* %67, align 8, !alias.scope !60
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 1
  store i64 %9, i64* %97, align 8, !noalias !60
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %84, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.88"* null, %"struct.std::__1::__hash_node_base.88"** %98, align 8, !noalias !60
  %99 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 2, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 1
  %102 = uitofp i64 %101 to float
  %103 = uitofp i64 %11 to float
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 3, i32 0, i32 0
  %105 = load float, float* %104, align 4
  %106 = fmul float %105, %103
  %107 = fcmp olt float %106, %102
  %108 = or i1 %12, %107
  br i1 %108, label %109, label %132

109:                                              ; preds = %63
  %110 = shl i64 %11, 1
  %111 = icmp ult i64 %11, 3
  %112 = call i64 @llvm.ctpop.i64(i64 %11) #16, !range !50
  %113 = icmp ugt i64 %112, 1
  %114 = or i1 %111, %113
  %115 = zext i1 %114 to i64
  %116 = or i64 %110, %115
  %117 = fdiv float %102, %105
  %118 = call float @llvm.ceil.f32(float %117) #16
  %119 = fptoui float %118 to i64
  %120 = icmp ult i64 %116, %119
  %121 = select i1 %120, i64 %119, i64 %116
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table.84"* %0, i64 %121) #17
  %122 = load i64, i64* %10, align 8
  %123 = call i64 @llvm.ctpop.i64(i64 %122) #16, !range !50
  %124 = icmp ugt i64 %123, 1
  br i1 %124, label %128, label %125

125:                                              ; preds = %109
  %126 = add i64 %122, -1
  %127 = and i64 %126, %9
  br label %132

128:                                              ; preds = %109
  %129 = icmp ult i64 %9, %122
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = urem i64 %9, %122
  br label %132

132:                                              ; preds = %130, %128, %125, %63
  %133 = phi i64 [ %11, %63 ], [ %122, %125 ], [ %122, %128 ], [ %122, %130 ]
  %134 = phi i64 [ %64, %63 ], [ %127, %125 ], [ %9, %128 ], [ %131, %130 ]
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %135, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %136, i64 %134
  %138 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.88"* %138, null
  br i1 %139, label %140, label %171

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 1, i32 0, i32 0
  %142 = bitcast %"struct.std::__1::__hash_node_base.88"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::unique_ptr.166"* %7 to i64**
  %145 = load i64*, i64** %144, align 8
  store i64 %143, i64* %145, align 8
  %146 = bitcast %"struct.std::__1::__hash_node_base.88"* %141 to i64**
  store i64* %145, i64** %146, align 8
  %147 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %135, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %147, i64 %134
  store %"struct.std::__1::__hash_node_base.88"* %141, %"struct.std::__1::__hash_node_base.88"** %148, align 8
  %149 = bitcast i64* %145 to %"struct.std::__1::__hash_node"*
  %150 = bitcast i64* %145 to %"struct.std::__1::__hash_node_base.88"**
  %151 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.88"* %151, null
  br i1 %152, label %178, label %153

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %151, i64 1
  %155 = bitcast %"struct.std::__1::__hash_node_base.88"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = call i64 @llvm.ctpop.i64(i64 %133) #16, !range !50
  %158 = icmp ugt i64 %157, 1
  br i1 %158, label %162, label %159

159:                                              ; preds = %153
  %160 = add i64 %133, -1
  %161 = and i64 %156, %160
  br label %166

162:                                              ; preds = %153
  %163 = icmp ult i64 %156, %133
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = urem i64 %156, %133
  br label %166

166:                                              ; preds = %159, %162, %164
  %167 = phi i64 [ %161, %159 ], [ %165, %164 ], [ %156, %162 ]
  %168 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %135, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %168, i64 %167
  %170 = bitcast %"struct.std::__1::__hash_node_base.88"** %169 to i64**
  store i64* %145, i64** %170, align 8
  br label %178

171:                                              ; preds = %132
  %172 = bitcast %"struct.std::__1::__hash_node_base.88"* %138 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::unique_ptr.166"* %7 to i64**
  %175 = load i64*, i64** %174, align 8
  store i64 %173, i64* %175, align 8
  %176 = bitcast %"struct.std::__1::__hash_node_base.88"* %138 to i64**
  store i64* %175, i64** %176, align 8
  %177 = bitcast i64* %175 to %"struct.std::__1::__hash_node"*
  br label %178

178:                                              ; preds = %171, %166, %140
  %179 = phi %"struct.std::__1::__hash_node"* [ %177, %171 ], [ %149, %166 ], [ %149, %140 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %179, i64 0, i32 0
  %181 = load i64, i64* %99, align 8
  %182 = add i64 %181, 1
  store i64 %182, i64* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #16
  br label %183

183:                                              ; preds = %53, %178
  %184 = phi i8 [ 1, %178 ], [ 0, %53 ]
  %185 = phi %"struct.std::__1::__hash_node_base.88"* [ %180, %178 ], [ %36, %53 ]
  %186 = insertvalue { %"struct.std::__1::__hash_node_base.88"*, i8 } undef, %"struct.std::__1::__hash_node_base.88"* %185, 0
  %187 = insertvalue { %"struct.std::__1::__hash_node_base.88"*, i8 } %186, i8 %184, 1
  ret { %"struct.std::__1::__hash_node_base.88"*, i8 } %187
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table.84"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !50
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.84"* %0, i64 %10) #17
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !50
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !50
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.84"* %0, i64 %42) #17
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.84"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %121, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #16
  %11 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %10, align 8
  %12 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #16, !alias.scope !66
  %15 = shl i64 %1, 3
  %16 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %17 = bitcast i8* %16 to i16*
  store i16 1280, i16* %17, align 8, !alias.scope !66
  store i64 %15, i64* %13, align 8, !alias.scope !66
  store i64 8, i64* %14, align 8, !alias.scope !66
  %18 = bitcast %"class.marl::Allocator"* %11 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %19 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, i64 2
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %20, align 8
  call void %21(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %11, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %22 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.88"***
  %23 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetIPSG_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESQ_(%"class.std::__1::unique_ptr.85"* %5, %"struct.std::__1::__hash_node_base.88"** %23) #15
  %24 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.90", %"class.std::__1::__bucket_list_deallocator.90"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %31

26:                                               ; preds = %31
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.88"* %29, null
  br i1 %30, label %123, label %37

31:                                               ; preds = %31, %8
  %32 = phi i64 [ 0, %8 ], [ %35, %31 ]
  %33 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %25, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %33, i64 %32
  store %"struct.std::__1::__hash_node_base.88"* null, %"struct.std::__1::__hash_node_base.88"** %34, align 8
  %35 = add nuw i64 %32, 1
  %36 = icmp eq i64 %35, %1
  br i1 %36, label %26, label %31

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %29, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.88"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = call i64 @llvm.ctpop.i64(i64 %1) #16, !range !50
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = add i64 %1, -1
  %45 = and i64 %40, %44
  br label %50

46:                                               ; preds = %37
  %47 = icmp ult i64 %40, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %40, %1
  br label %50

50:                                               ; preds = %43, %46, %48
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %40, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base.88"* %27, %"struct.std::__1::__hash_node_base.88"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %29, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.88"* %56, null
  br i1 %57, label %123, label %58

58:                                               ; preds = %50
  %59 = add i64 %1, -1
  br label %60

60:                                               ; preds = %58, %115
  %61 = phi %"struct.std::__1::__hash_node_base.88"* [ %56, %58 ], [ %119, %115 ]
  %62 = phi i64 [ %51, %58 ], [ %117, %115 ]
  %63 = phi %"struct.std::__1::__hash_node_base.88"* [ %29, %58 ], [ %116, %115 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %61, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base.88"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  br i1 %42, label %69, label %67

67:                                               ; preds = %60
  %68 = and i64 %66, %59
  br label %73

69:                                               ; preds = %60
  %70 = icmp ult i64 %66, %1
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = urem i64 %66, %1
  br label %73

73:                                               ; preds = %67, %69, %71
  %74 = phi i64 [ %68, %67 ], [ %72, %71 ], [ %66, %69 ]
  %75 = icmp eq i64 %74, %62
  br i1 %75, label %115, label %76

76:                                               ; preds = %73
  %77 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %52, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %77, i64 %74
  %79 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.88"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %61, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base.88"* %82 to i64*
  br label %85

84:                                               ; preds = %76
  store %"struct.std::__1::__hash_node_base.88"* %63, %"struct.std::__1::__hash_node_base.88"** %78, align 8
  br label %115

85:                                               ; preds = %81, %90
  %86 = phi %"struct.std::__1::__hash_node_base.88"* [ %88, %90 ], [ %61, %81 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.88"* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %88, i64 2
  %92 = load i64, i64* %83, align 8
  %93 = bitcast %"struct.std::__1::__hash_node_base.88"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %92, 0
  %96 = icmp eq i64 %94, 0
  %97 = or i1 %95, %96
  %98 = or i64 %94, %92
  %99 = icmp eq i64 %98, 0
  %100 = icmp eq i64 %92, %94
  %101 = select i1 %97, i1 %99, i1 %100
  br i1 %101, label %85, label %102

102:                                              ; preds = %85, %90
  %103 = ptrtoint %"struct.std::__1::__hash_node_base.88"* %88 to i64
  %104 = bitcast %"struct.std::__1::__hash_node_base.88"* %86 to i64*
  %105 = bitcast %"struct.std::__1::__hash_node_base.88"* %63 to i64*
  store i64 %103, i64* %105, align 8
  %106 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %52, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %106, i64 %74
  %108 = bitcast %"struct.std::__1::__hash_node_base.88"** %107 to i64**
  %109 = load i64*, i64** %108, align 8
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %104, align 8
  %111 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %52, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %111, i64 %74
  %113 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %113, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.88"* %61, %"struct.std::__1::__hash_node_base.88"** %114, align 8
  br label %115

115:                                              ; preds = %73, %102, %84
  %116 = phi %"struct.std::__1::__hash_node_base.88"* [ %61, %84 ], [ %63, %102 ], [ %61, %73 ]
  %117 = phi i64 [ %74, %84 ], [ %62, %102 ], [ %62, %73 ]
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %116, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.88"* %119, null
  br i1 %120, label %123, label %60

121:                                              ; preds = %2
  tail call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetIPSG_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESQ_(%"class.std::__1::unique_ptr.85"* %5, %"struct.std::__1::__hash_node_base.88"** null) #15
  %122 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.90", %"class.std::__1::__bucket_list_deallocator.90"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %122, align 8
  br label %123

123:                                              ; preds = %115, %50, %26, %121
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS0_IN4marl9Scheduler6WorkerENS5_9Allocator7DeleterEEEEEPvEEEENS_25__bucket_list_deallocatorINS5_12StlAllocatorISG_EEEEE5resetIPSG_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESQ_(%"class.std::__1::unique_ptr.85"*, %"struct.std::__1::__hash_node_base.88"**) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %4, align 8
  store %"struct.std::__1::__hash_node_base.88"** %1, %"struct.std::__1::__hash_node_base.88"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.88"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.88"***
  store %"struct.std::__1::__hash_node_base.88"** %5, %"struct.std::__1::__hash_node_base.88"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__122__hash_node_destructorIN4marl12StlAllocatorINS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrINS1_9Scheduler6WorkerENS1_9Allocator7DeleterEEEEEPvEEEEEclEPSE_(%"class.std::__1::__hash_node_destructor.170"*, %"struct.std::__1::__hash_node"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::__hash_node_destructor.170", %"class.std::__1::__hash_node_destructor.170"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !10
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZNSt3__110unique_ptrIN4marl9Scheduler6WorkerENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr.109"* %8, %"class.marl::Scheduler::Worker"* null) #15
  br label %9

9:                                                ; preds = %2, %7
  %10 = icmp eq %"struct.std::__1::__hash_node"* %1, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.std::__1::__hash_node_destructor.170", %"class.std::__1::__hash_node_destructor.170"* %0, i64 0, i32 0
  %13 = load %"struct.marl::StlAllocator.97"*, %"struct.marl::StlAllocator.97"** %12, align 8
  %14 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false) #16
  %17 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node"**
  store %"struct.std::__1::__hash_node"* %1, %"struct.std::__1::__hash_node"** %17, align 8
  %18 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 48, i64 8>, <2 x i64>* %18, align 8
  %19 = bitcast i8* %16 to i16*
  store i16 1280, i16* %19, align 8
  %20 = getelementptr inbounds %"struct.marl::StlAllocator.97", %"struct.marl::StlAllocator.97"* %13, i64 0, i32 0
  %21 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %20, align 8
  %22 = bitcast %"class.marl::Allocator"* %21 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %23 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %23, i64 3
  %25 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %24, align 8
  call void %25(%"class.marl::Allocator"* %21, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #16
  br label %26

26:                                               ; preds = %9, %11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.88"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_(%"class.std::__1::__hash_table.84"*, %"class.std::__1::__thread_id"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__thread_id", %"class.std::__1::__thread_id"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %62, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #16, !range !50
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ult i64 %4, %6
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.88"* %23, null
  br i1 %24, label %62, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.88"* %27, null
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  %31 = icmp eq i64 %4, 0
  br label %32

32:                                               ; preds = %29, %58
  %33 = phi %"struct.std::__1::__hash_node_base.88"* [ %27, %29 ], [ %60, %58 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.88"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %4
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %10, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %30
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %6
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %6
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %19
  br i1 %47, label %58, label %62

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.88"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  %53 = or i1 %31, %52
  %54 = or i64 %51, %4
  %55 = icmp eq i64 %54, 0
  %56 = icmp eq i64 %51, %4
  %57 = select i1 %53, i1 %55, i1 %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %45, %48
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %33, i64 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node_base.88"* %60, null
  br i1 %61, label %62, label %32

62:                                               ; preds = %48, %58, %45, %25, %2, %18
  %63 = phi %"struct.std::__1::__hash_node_base.88"* [ null, %18 ], [ null, %2 ], [ null, %25 ], [ %33, %48 ], [ null, %58 ], [ null, %45 ]
  ret %"struct.std::__1::__hash_node_base.88"* %63
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.88"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.84"*, %"struct.std::__1::__hash_node_base.88"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.166", align 8
  %4 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %1, i64 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %4, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.166"* nonnull sret %3, %"class.std::__1::__hash_table.84"* %0, %"struct.std::__1::__hash_node_base.88"* %1) #15
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %6, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %3, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__122__hash_node_destructorIN4marl12StlAllocatorINS_11__hash_nodeINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrINS1_9Scheduler6WorkerENS1_9Allocator7DeleterEEEEEPvEEEEEclEPSE_(%"class.std::__1::__hash_node_destructor.170"* %10, %"struct.std::__1::__hash_node"* nonnull %7) #15
  br label %11

11:                                               ; preds = %2, %9
  ret %"struct.std::__1::__hash_node_base.88"* %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.166"* noalias sret, %"class.std::__1::__hash_table.84"*, %"struct.std::__1::__hash_node_base.88"*) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.88"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !50
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.88"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.88"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = icmp eq %"struct.std::__1::__hash_node_base.88"* %25, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %25, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.88"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br i1 %10, label %39, label %36

36:                                               ; preds = %32
  %37 = add i64 %5, -1
  %38 = and i64 %35, %37
  br label %43

39:                                               ; preds = %32
  %40 = icmp ult i64 %35, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %35, %5
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %35, %39 ]
  %45 = icmp eq i64 %44, %19
  br i1 %45, label %65, label %46

46:                                               ; preds = %43, %29
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %2, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.88"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %48, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.88"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %10, label %57, label %54

54:                                               ; preds = %50
  %55 = add i64 %5, -1
  %56 = and i64 %53, %55
  br label %61

57:                                               ; preds = %50
  %58 = icmp ult i64 %53, %5
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %53, %5
  br label %61

61:                                               ; preds = %54, %57, %59
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %53, %57 ]
  %63 = icmp eq i64 %62, %19
  br i1 %63, label %65, label %64

64:                                               ; preds = %61, %46
  store %"struct.std::__1::__hash_node_base.88"* null, %"struct.std::__1::__hash_node_base.88"** %22, align 8
  br label %65

65:                                               ; preds = %61, %43, %64
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %2, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.88"* %67, null
  %69 = ptrtoint %"struct.std::__1::__hash_node_base.88"* %67 to i64
  br i1 %68, label %89, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88", %"struct.std::__1::__hash_node_base.88"* %67, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.88"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  br i1 %10, label %77, label %74

74:                                               ; preds = %70
  %75 = add i64 %5, -1
  %76 = and i64 %73, %75
  br label %81

77:                                               ; preds = %70
  %78 = icmp ult i64 %73, %5
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %73, %5
  br label %81

81:                                               ; preds = %74, %77, %79
  %82 = phi i64 [ %76, %74 ], [ %80, %79 ], [ %73, %77 ]
  %83 = icmp eq i64 %82, %19
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = load %"struct.std::__1::__hash_node_base.88"**, %"struct.std::__1::__hash_node_base.88"*** %20, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.88"*, %"struct.std::__1::__hash_node_base.88"** %85, i64 %82
  store %"struct.std::__1::__hash_node_base.88"* %25, %"struct.std::__1::__hash_node_base.88"** %86, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.88"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %84, %81, %65
  %90 = phi i64 [ %88, %84 ], [ %69, %81 ], [ %69, %65 ]
  %91 = bitcast %"struct.std::__1::__hash_node_base.88"* %25 to i64*
  store i64 %90, i64* %91, align 8
  store %"struct.std::__1::__hash_node_base.88"* null, %"struct.std::__1::__hash_node_base.88"** %66, align 8
  %92 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %1, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.84", %"class.std::__1::__hash_table.84"* %1, i64 0, i32 1, i32 1, i32 0
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.88"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.166"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"struct.marl::StlAllocator.97"* %95, %"struct.marl::StlAllocator.97"** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %99, align 8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"*, %"class.marl::Scheduler::Fiber"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %4, align 8
  store %"class.marl::Scheduler::Fiber"* %1, %"class.marl::Scheduler::Fiber"** %4, align 8
  %6 = icmp eq %"class.marl::Scheduler::Fiber"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.marl::Scheduler::Fiber", %"class.marl::Scheduler::Fiber"* %5, i64 0, i32 2
  tail call void @_ZNSt3__110unique_ptrIN4marl7OSFiberENS1_9Allocator7DeleterEE5resetEPS2_(%"class.std::__1::unique_ptr.7"* %8, %"class.marl::OSFiber"* null) #15
  %9 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #16
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  %13 = bitcast i8* %12 to i16*
  store i16 512, i16* %13, align 8
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Fiber"**
  store %"class.marl::Scheduler::Fiber"* %5, %"class.marl::Scheduler::Fiber"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = mul i64 %16, 48
  store i64 %17, i64* %10, align 8
  store i64 8, i64* %11, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %18, align 8
  %20 = bitcast %"class.marl::Allocator"* %19 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %21 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, i64 3
  %23 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %22, align 8
  call void %23(%"class.marl::Allocator"* %19, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  br label %24

24:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker5startEvE3$_1S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #2 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.marl::Scheduler::Worker"**
  %4 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %3, align 8
  %5 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void (i8*, ...) @_ZN4marl6Thread7setNameEPKcz(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i32 %6) #15
  %7 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %4, i64 0, i32 2
  %8 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** %7, align 8
  %9 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %10 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %10, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = ptrtoint %"class.marl::Scheduler"* %8 to i64
  br label %24

16:                                               ; preds = %1
  %17 = load i32, i32* %5, align 8
  %18 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %19 = load void (%"union.std::__1::__function::__policy_storage"*, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i32)** %18, align 8
  %20 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void %19(%"union.std::__1::__function::__policy_storage"* %20, i32 %17) #15
  %21 = bitcast %"class.marl::Scheduler"** %7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = inttoptr i64 %22 to %"class.marl::Scheduler"*
  br label %24

24:                                               ; preds = %14, %16
  %25 = phi %"class.marl::Scheduler"* [ %23, %16 ], [ %8, %14 ]
  %26 = phi i64 [ %22, %16 ], [ %15, %14 ]
  store i64 %26, i64* bitcast (%"class.marl::Scheduler"** @_ZN4marl9Scheduler5boundE to i64*), align 8
  store %"class.marl::Scheduler::Worker"* %4, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.marl::Scheduler", %"class.marl::Scheduler"* %25, i64 0, i32 0, i32 1
  %29 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %28, align 8
  call void @_ZN4marl9Scheduler5Fiber23createFromCurrentThreadEPNS_9AllocatorEj(%"class.std::__1::unique_ptr"* nonnull sret %2, %"class.marl::Allocator"* %29, i32 0) #15
  %30 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %4, i64 0, i32 3
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %31, align 8
  store %"class.marl::Scheduler::Fiber"* null, %"class.marl::Scheduler::Fiber"** %31, align 8
  tail call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* %30, %"class.marl::Scheduler::Fiber"* %32) #15
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %4, i64 0, i32 3, i32 0, i32 1, i32 0
  %35 = bitcast %"struct.marl::Allocator::Deleter"* %34 to i8*
  %36 = bitcast %"struct.marl::Allocator::Deleter"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #16
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* nonnull %2, %"class.marl::Scheduler::Fiber"* null) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  %37 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %4, i64 0, i32 4
  %40 = bitcast %"class.marl::Scheduler::Fiber"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %4, i64 0, i32 6, i32 7, i32 0
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %41) #15
  call void @_ZN4marl9Scheduler6Worker3runEv(%"class.marl::Scheduler::Worker"* %4) #15
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %41) #15
  call void @_ZNSt3__110unique_ptrIN4marl9Scheduler5FiberENS1_9Allocator7DeleterEE5resetEPS3_(%"class.std::__1::unique_ptr"* %30, %"class.marl::Scheduler::Fiber"* null) #15
  store %"class.marl::Scheduler::Worker"* null, %"class.marl::Scheduler::Worker"** @_ZN4marl9Scheduler6Worker7currentE, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN4marl6Thread7setNameEPKcz(i8*, ...) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker4stopEvE3$_2S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #7 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.marl::Scheduler::Worker"**
  %3 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %2, align 8
  %4 = getelementptr inbounds %"class.marl::Scheduler::Worker", %"class.marl::Scheduler::Worker"* %3, i64 0, i32 10
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE26__maybe_remove_front_spareEb(%"class.std::__1::deque.28"*, i1 zeroext) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 1024
  %7 = icmp ult i64 %5, 512
  %8 = or i1 %7, %1
  %9 = and i1 %6, %8
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.marl::Scheduler::Fiber"**** %11 to i64**
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false) #16
  %18 = bitcast %"struct.marl::Allocation"* %3 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 4096, i64 8>, <2 x i64>* %19, align 8
  %20 = bitcast i8* %17 to i16*
  store i16 1280, i16* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %22 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %21, align 8
  %23 = bitcast %"class.marl::Allocator"* %22 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %24 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %24, i64 3
  %26 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %25, align 8
  call void %26(%"class.marl::Allocator"* %22, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #16
  %27 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %11, align 8
  %28 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %27, i64 1
  store %"class.marl::Scheduler::Fiber"*** %28, %"class.marl::Scheduler::Fiber"**** %11, align 8
  %29 = load i64, i64* %4, align 8
  %30 = add i64 %29, -512
  store i64 %30, i64* %4, align 8
  br label %31

31:                                               ; preds = %2, %10
  %32 = phi i1 [ true, %10 ], [ false, %2 ]
  ret i1 %32
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.68"* @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::__hash_table.64"*, %"struct.std::__1::__hash_node_base.68"*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"class.std::__1::unique_ptr.178", align 8
  %5 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %1, i64 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %5, align 8
  call void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.178"* nonnull sret %4, %"class.std::__1::__hash_table.64"* %0, %"struct.std::__1::__hash_node_base.68"* %1) #15
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node.160"*, %"struct.std::__1::__hash_node.160"** %7, align 8
  store %"struct.std::__1::__hash_node.160"* null, %"struct.std::__1::__hash_node.160"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node.160"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"struct.marl::StlAllocator.77"*, %"struct.marl::StlAllocator.77"** %11, align 8
  %13 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #16
  %16 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node.160"**
  store %"struct.std::__1::__hash_node.160"* %8, %"struct.std::__1::__hash_node.160"** %16, align 8
  %17 = bitcast i64* %14 to <2 x i64>*
  store <2 x i64> <i64 24, i64 8>, <2 x i64>* %17, align 8
  %18 = bitcast i8* %15 to i16*
  store i16 1280, i16* %18, align 8
  %19 = getelementptr inbounds %"struct.marl::StlAllocator.77", %"struct.marl::StlAllocator.77"* %12, i64 0, i32 0
  %20 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %19, align 8
  %21 = bitcast %"class.marl::Allocator"* %20 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %22, i64 3
  %24 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %23, align 8
  call void %24(%"class.marl::Allocator"* %20, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #16
  br label %25

25:                                               ; preds = %2, %10
  ret %"struct.std::__1::__hash_node_base.68"* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.178"* noalias sret, %"class.std::__1::__hash_table.64"*, %"struct.std::__1::__hash_node_base.68"*) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.68"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !50
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.68"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.68"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = icmp eq %"struct.std::__1::__hash_node_base.68"* %25, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %25, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.68"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br i1 %10, label %39, label %36

36:                                               ; preds = %32
  %37 = add i64 %5, -1
  %38 = and i64 %35, %37
  br label %43

39:                                               ; preds = %32
  %40 = icmp ult i64 %35, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %35, %5
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %35, %39 ]
  %45 = icmp eq i64 %44, %19
  br i1 %45, label %65, label %46

46:                                               ; preds = %43, %29
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %2, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.68"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %48, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.68"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %10, label %57, label %54

54:                                               ; preds = %50
  %55 = add i64 %5, -1
  %56 = and i64 %53, %55
  br label %61

57:                                               ; preds = %50
  %58 = icmp ult i64 %53, %5
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %53, %5
  br label %61

61:                                               ; preds = %54, %57, %59
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %53, %57 ]
  %63 = icmp eq i64 %62, %19
  br i1 %63, label %65, label %64

64:                                               ; preds = %61, %46
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %22, align 8
  br label %65

65:                                               ; preds = %61, %43, %64
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %2, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.68"* %67, null
  %69 = ptrtoint %"struct.std::__1::__hash_node_base.68"* %67 to i64
  br i1 %68, label %89, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %67, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.68"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  br i1 %10, label %77, label %74

74:                                               ; preds = %70
  %75 = add i64 %5, -1
  %76 = and i64 %73, %75
  br label %81

77:                                               ; preds = %70
  %78 = icmp ult i64 %73, %5
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %73, %5
  br label %81

81:                                               ; preds = %74, %77, %79
  %82 = phi i64 [ %76, %74 ], [ %80, %79 ], [ %73, %77 ]
  %83 = icmp eq i64 %82, %19
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %20, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %85, i64 %82
  store %"struct.std::__1::__hash_node_base.68"* %25, %"struct.std::__1::__hash_node_base.68"** %86, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.68"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %84, %81, %65
  %90 = phi i64 [ %88, %84 ], [ %69, %81 ], [ %69, %65 ]
  %91 = bitcast %"struct.std::__1::__hash_node_base.68"* %25 to i64*
  store i64 %90, i64* %91, align 8
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %66, align 8
  %92 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %1, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %1, i64 0, i32 1, i32 1, i32 0
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.68"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.178"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"struct.marl::StlAllocator.77"* %95, %"struct.marl::StlAllocator.77"** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %99, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN4marl9Scheduler5FiberENS1_12StlAllocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.28"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = alloca %"struct.marl::Allocation::Request", align 16
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = alloca %"struct.marl::Allocation::Request", align 16
  %6 = alloca %"struct.marl::Allocation", align 8
  %7 = alloca %"struct.marl::Allocation::Request", align 8
  %8 = alloca %"struct.marl::Allocation", align 8
  %9 = alloca %"struct.marl::Allocation::Request", align 16
  %10 = alloca %"class.marl::Scheduler::Fiber"**, align 8
  %11 = alloca %"class.marl::Scheduler::Fiber"**, align 8
  %12 = alloca %"class.marl::Scheduler::Fiber"**, align 8
  %13 = alloca %"class.marl::Scheduler::Fiber"**, align 8
  %14 = alloca %"struct.std::__1::__split_buffer.184", align 16
  %15 = alloca %"class.marl::Scheduler::Fiber"**, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, 511
  br i1 %19, label %20, label %30

20:                                               ; preds = %1
  %21 = add i64 %18, -512
  store i64 %21, i64* %17, align 8
  %22 = bitcast %"class.marl::Scheduler::Fiber"*** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store %"class.marl::Scheduler::Fiber"** inttoptr (i64 -6148914691236517206 to %"class.marl::Scheduler::Fiber"**), %"class.marl::Scheduler::Fiber"*** %10, align 8
  %23 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %24, align 8
  %26 = bitcast %"class.marl::Scheduler::Fiber"*** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.marl::Scheduler::Fiber"*** %10 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %25, i64 1
  store %"class.marl::Scheduler::Fiber"*** %29, %"class.marl::Scheduler::Fiber"**** %24, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.30"* %23, %"class.marl::Scheduler::Fiber"*** nonnull dereferenceable(8) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %159

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast %"class.marl::Scheduler::Fiber"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.marl::Scheduler::Fiber"**** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = bitcast %"class.marl::Scheduler::Fiber"**** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::deque.28"* %0 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %39, %46
  br i1 %47, label %48, label %88

48:                                               ; preds = %30
  %49 = icmp eq i64 %42, %34
  br i1 %49, label %66, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.marl::Scheduler::Fiber"*** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #16
  %52 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #16
  %53 = getelementptr inbounds %"struct.marl::StlAllocator.37", %"struct.marl::StlAllocator.37"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false) #16
  %54 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %53, align 8
  %55 = bitcast %"struct.marl::Allocation::Request"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 -86, i64 24, i1 false) #16, !alias.scope !69
  %56 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 2
  %57 = bitcast i8* %56 to i16*
  store i16 1280, i16* %57, align 16, !alias.scope !69
  %58 = bitcast %"struct.marl::Allocation::Request"* %5 to <2 x i64>*
  store <2 x i64> <i64 4096, i64 8>, <2 x i64>* %58, align 16, !alias.scope !69
  %59 = bitcast %"class.marl::Allocator"* %54 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %60 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %60, i64 2
  %62 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %61, align 8
  call void %62(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %54, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #16
  %63 = bitcast %"struct.marl::Allocation"* %4 to i64*
  %64 = load i64, i64* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #16
  %65 = bitcast %"class.marl::Scheduler::Fiber"*** %11 to i64*
  store i64 %64, i64* %65, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.30"* %31, %"class.marl::Scheduler::Fiber"*** nonnull dereferenceable(8) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  br label %159

66:                                               ; preds = %48
  %67 = bitcast %"class.marl::Scheduler::Fiber"*** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  %68 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #16
  %69 = getelementptr inbounds %"struct.marl::StlAllocator.37", %"struct.marl::StlAllocator.37"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 32, i1 false) #16
  %70 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %69, align 8
  %71 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -86, i64 24, i1 false) #16, !alias.scope !72
  %72 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %73 = bitcast i8* %72 to i16*
  store i16 1280, i16* %73, align 16, !alias.scope !72
  %74 = bitcast %"struct.marl::Allocation::Request"* %3 to <2 x i64>*
  store <2 x i64> <i64 4096, i64 8>, <2 x i64>* %74, align 16, !alias.scope !72
  %75 = bitcast %"class.marl::Allocator"* %70 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %76 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %76, i64 2
  %78 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %77, align 8
  call void %78(%"struct.marl::Allocation"* nonnull sret %2, %"class.marl::Allocator"* %70, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #16
  %79 = bitcast %"struct.marl::Allocation"* %2 to i64*
  %80 = load i64, i64* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #16
  %81 = bitcast %"class.marl::Scheduler::Fiber"*** %12 to i64*
  store i64 %80, i64* %81, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.30"* %31, %"class.marl::Scheduler::Fiber"*** nonnull dereferenceable(8) %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  %82 = bitcast %"class.marl::Scheduler::Fiber"*** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  store %"class.marl::Scheduler::Fiber"** inttoptr (i64 -6148914691236517206 to %"class.marl::Scheduler::Fiber"**), %"class.marl::Scheduler::Fiber"*** %13, align 8
  %83 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %35, align 8
  %84 = bitcast %"class.marl::Scheduler::Fiber"*** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.marl::Scheduler::Fiber"*** %13 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %83, i64 1
  store %"class.marl::Scheduler::Fiber"*** %87, %"class.marl::Scheduler::Fiber"**** %35, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.30"* %31, %"class.marl::Scheduler::Fiber"*** nonnull dereferenceable(8) %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #16
  br label %159

88:                                               ; preds = %30
  %89 = bitcast %"struct.std::__1::__split_buffer.184"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #16
  %90 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %14, i64 0, i32 0
  %91 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %14, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %14, i64 0, i32 2
  %93 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %14, i64 0, i32 3, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %14, i64 0, i32 3, i32 1, i32 0
  %95 = ashr exact i64 %45, 2
  %96 = icmp eq i64 %45, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = getelementptr inbounds %"class.std::__1::deque.28", %"class.std::__1::deque.28"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %99 = bitcast %"struct.std::__1::__split_buffer.184"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -86, i64 24, i1 false)
  store %"class.marl::Scheduler::Fiber"*** null, %"class.marl::Scheduler::Fiber"**** %93, align 8
  store %"struct.marl::StlAllocator.34"* %98, %"struct.marl::StlAllocator.34"** %94, align 8
  %100 = bitcast %"struct.marl::Allocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #16
  %101 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %98, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 32, i1 false) #16
  %102 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %101, align 8
  %103 = bitcast %"struct.marl::Allocation::Request"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #16
  %104 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 0
  %105 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 24, i1 false) #16, !alias.scope !75
  %106 = shl i64 %97, 3
  %107 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 2
  %108 = bitcast i8* %107 to i16*
  store i16 1280, i16* %108, align 8, !alias.scope !75
  store i64 %106, i64* %104, align 8, !alias.scope !75
  store i64 8, i64* %105, align 8, !alias.scope !75
  %109 = bitcast %"class.marl::Allocator"* %102 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %110 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %110, i64 2
  %112 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %111, align 8
  call void %112(%"struct.marl::Allocation"* nonnull sret %6, %"class.marl::Allocator"* %102, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #16
  %113 = bitcast %"struct.marl::Allocation"* %6 to %"class.marl::Scheduler::Fiber"****
  %114 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #16
  store %"class.marl::Scheduler::Fiber"*** %114, %"class.marl::Scheduler::Fiber"**** %90, align 16
  %115 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %114, i64 %39
  store %"class.marl::Scheduler::Fiber"*** %115, %"class.marl::Scheduler::Fiber"**** %92, align 16
  store %"class.marl::Scheduler::Fiber"*** %115, %"class.marl::Scheduler::Fiber"**** %91, align 8
  %116 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %114, i64 %97
  store %"class.marl::Scheduler::Fiber"*** %116, %"class.marl::Scheduler::Fiber"**** %93, align 8
  %117 = bitcast %"struct.marl::Allocation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #16
  %118 = getelementptr inbounds %"struct.marl::StlAllocator.37", %"struct.marl::StlAllocator.37"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false) #16
  %119 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %118, align 8
  %120 = bitcast %"struct.marl::Allocation::Request"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 24, i1 false) #16, !alias.scope !78
  %121 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %9, i64 0, i32 2
  %122 = bitcast i8* %121 to i16*
  store i16 1280, i16* %122, align 16, !alias.scope !78
  %123 = bitcast %"struct.marl::Allocation::Request"* %9 to <2 x i64>*
  store <2 x i64> <i64 4096, i64 8>, <2 x i64>* %123, align 16, !alias.scope !78
  %124 = bitcast %"class.marl::Allocator"* %119 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %125 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %125, i64 2
  %127 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %126, align 8
  call void %127(%"struct.marl::Allocation"* nonnull sret %8, %"class.marl::Allocator"* %119, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #16
  %128 = bitcast %"struct.marl::Allocation"* %8 to i64*
  %129 = load i64, i64* %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #16
  %130 = bitcast %"class.marl::Scheduler::Fiber"*** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #16
  %131 = bitcast %"class.marl::Scheduler::Fiber"*** %15 to i64*
  store i64 %129, i64* %131, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.184"* nonnull %14, %"class.marl::Scheduler::Fiber"*** nonnull dereferenceable(8) %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #16
  %132 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %32, align 8
  %133 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %35, align 8
  %134 = icmp eq %"class.marl::Scheduler::Fiber"*** %132, %133
  %135 = ptrtoint %"class.marl::Scheduler::Fiber"*** %132 to i64
  br i1 %134, label %138, label %154

136:                                              ; preds = %154
  %137 = load i64, i64* %33, align 8
  br label %138

138:                                              ; preds = %136, %88
  %139 = phi i64 [ %137, %136 ], [ %135, %88 ]
  %140 = phi %"class.marl::Scheduler::Fiber"*** [ %157, %136 ], [ %133, %88 ]
  %141 = ptrtoint %"class.marl::Scheduler::Fiber"*** %140 to i64
  %142 = load i64, i64* %43, align 8
  %143 = bitcast %"struct.std::__1::__split_buffer.184"* %14 to i64*
  %144 = bitcast %"class.marl::Scheduler::Fiber"**** %91 to i64*
  %145 = bitcast %"struct.std::__1::__split_buffer.184"* %14 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 16
  store i64 %142, i64* %143, align 16
  %147 = bitcast %"class.std::__1::deque.28"* %0 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %147, align 8
  store i64 %141, i64* %144, align 8
  %148 = bitcast %"class.marl::Scheduler::Fiber"**** %92 to i64*
  %149 = bitcast %"class.marl::Scheduler::Fiber"**** %93 to i64*
  %150 = bitcast %"class.marl::Scheduler::Fiber"**** %92 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 16
  store i64 %139, i64* %148, align 16
  %152 = load i64, i64* %41, align 8
  %153 = bitcast %"class.marl::Scheduler::Fiber"**** %32 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %153, align 8
  store i64 %152, i64* %149, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #16
  br label %159

154:                                              ; preds = %88, %154
  %155 = phi %"class.marl::Scheduler::Fiber"*** [ %156, %154 ], [ %132, %88 ]
  %156 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %155, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.184"* nonnull %14, %"class.marl::Scheduler::Fiber"*** dereferenceable(8) %156) #17
  %157 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %35, align 8
  %158 = icmp eq %"class.marl::Scheduler::Fiber"*** %156, %157
  br i1 %158, label %136, label %154

159:                                              ; preds = %138, %66, %50, %20
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backERKS5_(%"struct.std::__1::__split_buffer.30"*, %"class.marl::Scheduler::Fiber"*** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.184", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 2
  %7 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %8, align 8
  %10 = icmp eq %"class.marl::Scheduler::Fiber"*** %7, %9
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %9 to i64
  %12 = bitcast %"class.marl::Scheduler::Fiber"*** %7 to i64*
  br i1 %10, label %13, label %128

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 1
  %15 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 0
  %17 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %16, align 8
  %18 = icmp ugt %"class.marl::Scheduler::Fiber"*** %15, %17
  %19 = ptrtoint %"class.marl::Scheduler::Fiber"*** %17 to i64
  br i1 %18, label %20, label %41

20:                                               ; preds = %13
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %15 to i64
  %22 = sub i64 %21, %19
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %15, i64 %26
  %28 = ptrtoint %"class.marl::Scheduler::Fiber"*** %7 to i64
  %29 = sub i64 %28, %21
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.marl::Scheduler::Fiber"*** %27 to i8*
  %34 = bitcast %"class.marl::Scheduler::Fiber"*** %15 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #16
  %35 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi %"class.marl::Scheduler::Fiber"*** [ %15, %20 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %27, i64 %30
  store %"class.marl::Scheduler::Fiber"*** %38, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %39 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %37, i64 %26
  store %"class.marl::Scheduler::Fiber"*** %39, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %40 = bitcast %"class.marl::Scheduler::Fiber"*** %38 to i64*
  br label %128

41:                                               ; preds = %13
  %42 = bitcast %"class.marl::Scheduler::Fiber"**** %8 to i64*
  %43 = bitcast %"struct.std::__1::__split_buffer.30"* %0 to i64*
  %44 = sub i64 %11, %19
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  %47 = select i1 %46, i64 1, i64 %45
  %48 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 1, i32 0
  %54 = lshr i64 %47, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  store %"class.marl::Scheduler::Fiber"*** null, %"class.marl::Scheduler::Fiber"**** %52, align 8
  store %"struct.marl::StlAllocator.34"* %55, %"struct.marl::StlAllocator.34"** %53, align 8
  %57 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %55, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #16
  %59 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %58, align 8
  %60 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false) #16, !alias.scope !81
  %63 = shl i64 %47, 3
  %64 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %65 = bitcast i8* %64 to i16*
  store i16 1280, i16* %65, align 8, !alias.scope !81
  store i64 %63, i64* %61, align 8, !alias.scope !81
  store i64 8, i64* %62, align 8, !alias.scope !81
  %66 = bitcast %"class.marl::Allocator"* %59 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %67 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, i64 2
  %69 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, align 8
  call void %69(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %59, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #16
  %70 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Fiber"****
  %71 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #16
  store %"class.marl::Scheduler::Fiber"*** %71, %"class.marl::Scheduler::Fiber"**** %49, align 8
  %72 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %71, i64 %54
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %51, align 8
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %50, align 8
  %73 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %71, i64 %47
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %52, align 8
  %74 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %75 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = ptrtoint %"class.marl::Scheduler::Fiber"*** %74 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  %81 = ptrtoint %"class.marl::Scheduler::Fiber"*** %72 to i64
  %82 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %79
  %83 = icmp eq i64 %78, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %41
  %85 = ptrtoint %"class.marl::Scheduler::Fiber"*** %73 to i64
  %86 = ptrtoint %"class.marl::Scheduler::Fiber"*** %71 to i64
  %87 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %88 = bitcast %"class.marl::Scheduler::Fiber"**** %14 to i64*
  %89 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %90 = bitcast %"class.marl::Scheduler::Fiber"**** %52 to i64*
  br label %113

91:                                               ; preds = %41, %91
  %92 = phi %"class.marl::Scheduler::Fiber"*** [ %98, %91 ], [ %72, %41 ]
  %93 = phi i64 [ %99, %91 ], [ %81, %41 ]
  %94 = phi %"class.marl::Scheduler::Fiber"*** [ %100, %91 ], [ %74, %41 ]
  %95 = bitcast %"class.marl::Scheduler::Fiber"*** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %92, i64 1
  %99 = ptrtoint %"class.marl::Scheduler::Fiber"*** %98 to i64
  %100 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %94, i64 1
  %101 = icmp eq %"class.marl::Scheduler::Fiber"*** %82, %98
  br i1 %101, label %102, label %91

102:                                              ; preds = %91
  %103 = ptrtoint %"class.marl::Scheduler::Fiber"*** %82 to i64
  %104 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.marl::Scheduler::Fiber"**** %14 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %75, align 8
  %111 = bitcast %"class.marl::Scheduler::Fiber"**** %52 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %84, %102
  %114 = phi i64* [ %90, %84 ], [ %111, %102 ]
  %115 = phi i64* [ %89, %84 ], [ %108, %102 ]
  %116 = phi i64* [ %88, %84 ], [ %106, %102 ]
  %117 = phi i64* [ %87, %84 ], [ %104, %102 ]
  %118 = phi i64 [ %85, %84 ], [ %112, %102 ]
  %119 = phi i64 [ %76, %84 ], [ %110, %102 ]
  %120 = phi i64 [ %81, %84 ], [ %109, %102 ]
  %121 = phi i64 [ %77, %84 ], [ %107, %102 ]
  %122 = phi i64 [ %86, %84 ], [ %105, %102 ]
  %123 = phi i64 [ %81, %84 ], [ %103, %102 ]
  %124 = load i64, i64* %43, align 8
  store i64 %122, i64* %43, align 8
  store i64 %124, i64* %117, align 8
  store i64 %120, i64* %116, align 8
  store i64 %121, i64* %115, align 8
  store i64 %123, i64* %75, align 8
  store i64 %119, i64* %80, align 8
  %125 = load i64, i64* %42, align 8
  store i64 %118, i64* %42, align 8
  store i64 %125, i64* %114, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #16
  %126 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64**
  %127 = load i64*, i64** %126, align 8
  br label %128

128:                                              ; preds = %36, %113, %2
  %129 = phi i64* [ %40, %36 ], [ %127, %113 ], [ %12, %2 ]
  %130 = bitcast %"class.marl::Scheduler::Fiber"*** %1 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %129, align 8
  %132 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %133 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %132, i64 1
  store %"class.marl::Scheduler::Fiber"*** %133, %"class.marl::Scheduler::Fiber"**** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.30"*, %"class.marl::Scheduler::Fiber"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.184", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 2
  %7 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %8, align 8
  %10 = icmp eq %"class.marl::Scheduler::Fiber"*** %7, %9
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %9 to i64
  %12 = bitcast %"class.marl::Scheduler::Fiber"*** %7 to i64*
  br i1 %10, label %13, label %128

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 1
  %15 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 0
  %17 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %16, align 8
  %18 = icmp ugt %"class.marl::Scheduler::Fiber"*** %15, %17
  %19 = ptrtoint %"class.marl::Scheduler::Fiber"*** %17 to i64
  br i1 %18, label %20, label %41

20:                                               ; preds = %13
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %15 to i64
  %22 = sub i64 %21, %19
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %15, i64 %26
  %28 = ptrtoint %"class.marl::Scheduler::Fiber"*** %7 to i64
  %29 = sub i64 %28, %21
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.marl::Scheduler::Fiber"*** %27 to i8*
  %34 = bitcast %"class.marl::Scheduler::Fiber"*** %15 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #16
  %35 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi %"class.marl::Scheduler::Fiber"*** [ %15, %20 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %27, i64 %30
  store %"class.marl::Scheduler::Fiber"*** %38, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %39 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %37, i64 %26
  store %"class.marl::Scheduler::Fiber"*** %39, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %40 = bitcast %"class.marl::Scheduler::Fiber"*** %38 to i64*
  br label %128

41:                                               ; preds = %13
  %42 = bitcast %"class.marl::Scheduler::Fiber"**** %8 to i64*
  %43 = bitcast %"struct.std::__1::__split_buffer.30"* %0 to i64*
  %44 = sub i64 %11, %19
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  %47 = select i1 %46, i64 1, i64 %45
  %48 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 1, i32 0
  %54 = lshr i64 %47, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  store %"class.marl::Scheduler::Fiber"*** null, %"class.marl::Scheduler::Fiber"**** %52, align 8
  store %"struct.marl::StlAllocator.34"* %55, %"struct.marl::StlAllocator.34"** %53, align 8
  %57 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %55, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #16
  %59 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %58, align 8
  %60 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false) #16, !alias.scope !84
  %63 = shl i64 %47, 3
  %64 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %65 = bitcast i8* %64 to i16*
  store i16 1280, i16* %65, align 8, !alias.scope !84
  store i64 %63, i64* %61, align 8, !alias.scope !84
  store i64 8, i64* %62, align 8, !alias.scope !84
  %66 = bitcast %"class.marl::Allocator"* %59 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %67 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, i64 2
  %69 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, align 8
  call void %69(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %59, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #16
  %70 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Fiber"****
  %71 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #16
  store %"class.marl::Scheduler::Fiber"*** %71, %"class.marl::Scheduler::Fiber"**** %49, align 8
  %72 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %71, i64 %54
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %51, align 8
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %50, align 8
  %73 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %71, i64 %47
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %52, align 8
  %74 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %75 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = ptrtoint %"class.marl::Scheduler::Fiber"*** %74 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  %81 = ptrtoint %"class.marl::Scheduler::Fiber"*** %72 to i64
  %82 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %79
  %83 = icmp eq i64 %78, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %41
  %85 = ptrtoint %"class.marl::Scheduler::Fiber"*** %73 to i64
  %86 = ptrtoint %"class.marl::Scheduler::Fiber"*** %71 to i64
  %87 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %88 = bitcast %"class.marl::Scheduler::Fiber"**** %14 to i64*
  %89 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %90 = bitcast %"class.marl::Scheduler::Fiber"**** %52 to i64*
  br label %113

91:                                               ; preds = %41, %91
  %92 = phi %"class.marl::Scheduler::Fiber"*** [ %98, %91 ], [ %72, %41 ]
  %93 = phi i64 [ %99, %91 ], [ %81, %41 ]
  %94 = phi %"class.marl::Scheduler::Fiber"*** [ %100, %91 ], [ %74, %41 ]
  %95 = bitcast %"class.marl::Scheduler::Fiber"*** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %92, i64 1
  %99 = ptrtoint %"class.marl::Scheduler::Fiber"*** %98 to i64
  %100 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %94, i64 1
  %101 = icmp eq %"class.marl::Scheduler::Fiber"*** %82, %98
  br i1 %101, label %102, label %91

102:                                              ; preds = %91
  %103 = ptrtoint %"class.marl::Scheduler::Fiber"*** %82 to i64
  %104 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.marl::Scheduler::Fiber"**** %14 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %75, align 8
  %111 = bitcast %"class.marl::Scheduler::Fiber"**** %52 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %84, %102
  %114 = phi i64* [ %90, %84 ], [ %111, %102 ]
  %115 = phi i64* [ %89, %84 ], [ %108, %102 ]
  %116 = phi i64* [ %88, %84 ], [ %106, %102 ]
  %117 = phi i64* [ %87, %84 ], [ %104, %102 ]
  %118 = phi i64 [ %85, %84 ], [ %112, %102 ]
  %119 = phi i64 [ %76, %84 ], [ %110, %102 ]
  %120 = phi i64 [ %81, %84 ], [ %109, %102 ]
  %121 = phi i64 [ %77, %84 ], [ %107, %102 ]
  %122 = phi i64 [ %86, %84 ], [ %105, %102 ]
  %123 = phi i64 [ %81, %84 ], [ %103, %102 ]
  %124 = load i64, i64* %43, align 8
  store i64 %122, i64* %43, align 8
  store i64 %124, i64* %117, align 8
  store i64 %120, i64* %116, align 8
  store i64 %121, i64* %115, align 8
  store i64 %123, i64* %75, align 8
  store i64 %119, i64* %80, align 8
  %125 = load i64, i64* %42, align 8
  store i64 %118, i64* %42, align 8
  store i64 %125, i64* %114, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #16
  %126 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64**
  %127 = load i64*, i64** %126, align 8
  br label %128

128:                                              ; preds = %36, %113, %2
  %129 = phi i64* [ %40, %36 ], [ %127, %113 ], [ %12, %2 ]
  %130 = bitcast %"class.marl::Scheduler::Fiber"*** %1 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %129, align 8
  %132 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %133 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %132, i64 1
  store %"class.marl::Scheduler::Fiber"*** %133, %"class.marl::Scheduler::Fiber"**** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberENS1_12StlAllocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.30"*, %"class.marl::Scheduler::Fiber"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.184", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 1
  %7 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 0
  %9 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %8, align 8
  %10 = icmp eq %"class.marl::Scheduler::Fiber"*** %7, %9
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %9 to i64
  br i1 %10, label %12, label %127

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 2
  %14 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %15, align 8
  %17 = icmp ult %"class.marl::Scheduler::Fiber"*** %14, %16
  %18 = bitcast %"class.marl::Scheduler::Fiber"**** %15 to i64*
  %19 = ptrtoint %"class.marl::Scheduler::Fiber"*** %16 to i64
  br i1 %17, label %20, label %41

20:                                               ; preds = %12
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %14 to i64
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %14, i64 %25
  %27 = ptrtoint %"class.marl::Scheduler::Fiber"*** %7 to i64
  %28 = sub i64 %21, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = ashr exact i64 %28, 3
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %26, i64 %32
  %34 = bitcast %"class.marl::Scheduler::Fiber"*** %33 to i8*
  %35 = bitcast %"class.marl::Scheduler::Fiber"*** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %28, i1 false) #16
  %36 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %13, align 8
  br label %37

37:                                               ; preds = %20, %30
  %38 = phi %"class.marl::Scheduler::Fiber"*** [ %36, %30 ], [ %14, %20 ]
  %39 = phi %"class.marl::Scheduler::Fiber"*** [ %33, %30 ], [ %26, %20 ]
  store %"class.marl::Scheduler::Fiber"*** %39, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %40 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %38, i64 %25
  store %"class.marl::Scheduler::Fiber"*** %40, %"class.marl::Scheduler::Fiber"**** %13, align 8
  br label %127

41:                                               ; preds = %12
  %42 = bitcast %"struct.std::__1::__split_buffer.30"* %0 to i64*
  %43 = sub i64 %19, %11
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  %46 = select i1 %45, i64 1, i64 %44
  %47 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #16
  %48 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 2
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 1, i32 0
  %53 = add nsw i64 %46, 3
  %54 = lshr i64 %53, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.30", %"struct.std::__1::__split_buffer.30"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  store %"class.marl::Scheduler::Fiber"*** null, %"class.marl::Scheduler::Fiber"**** %51, align 8
  store %"struct.marl::StlAllocator.34"* %55, %"struct.marl::StlAllocator.34"** %52, align 8
  %57 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %55, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #16
  %59 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %58, align 8
  %60 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false) #16, !alias.scope !87
  %63 = shl i64 %46, 3
  %64 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %65 = bitcast i8* %64 to i16*
  store i16 1280, i16* %65, align 8, !alias.scope !87
  store i64 %63, i64* %61, align 8, !alias.scope !87
  store i64 8, i64* %62, align 8, !alias.scope !87
  %66 = bitcast %"class.marl::Allocator"* %59 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %67 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, i64 2
  %69 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, align 8
  call void %69(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %59, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #16
  %70 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Fiber"****
  %71 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #16
  store %"class.marl::Scheduler::Fiber"*** %71, %"class.marl::Scheduler::Fiber"**** %48, align 8
  %72 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %71, i64 %54
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %50, align 8
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %49, align 8
  %73 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %71, i64 %46
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %51, align 8
  %74 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %75 = bitcast %"class.marl::Scheduler::Fiber"**** %13 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = ptrtoint %"class.marl::Scheduler::Fiber"*** %74 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %81 = ptrtoint %"class.marl::Scheduler::Fiber"*** %72 to i64
  %82 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %79
  %83 = icmp eq i64 %78, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %41
  %85 = ptrtoint %"class.marl::Scheduler::Fiber"*** %73 to i64
  %86 = ptrtoint %"class.marl::Scheduler::Fiber"*** %71 to i64
  %87 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %88 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %89 = bitcast %"class.marl::Scheduler::Fiber"**** %49 to i64*
  %90 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  br label %113

91:                                               ; preds = %41, %91
  %92 = phi %"class.marl::Scheduler::Fiber"*** [ %98, %91 ], [ %72, %41 ]
  %93 = phi i64 [ %99, %91 ], [ %81, %41 ]
  %94 = phi %"class.marl::Scheduler::Fiber"*** [ %100, %91 ], [ %74, %41 ]
  %95 = bitcast %"class.marl::Scheduler::Fiber"*** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %92, i64 1
  %99 = ptrtoint %"class.marl::Scheduler::Fiber"*** %98 to i64
  %100 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %94, i64 1
  %101 = icmp eq %"class.marl::Scheduler::Fiber"*** %82, %98
  br i1 %101, label %102, label %91

102:                                              ; preds = %91
  %103 = ptrtoint %"class.marl::Scheduler::Fiber"*** %82 to i64
  %104 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.marl::Scheduler::Fiber"**** %49 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %75, align 8
  %111 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %84, %102
  %114 = phi i64* [ %90, %84 ], [ %111, %102 ]
  %115 = phi i64* [ %89, %84 ], [ %108, %102 ]
  %116 = phi i64* [ %88, %84 ], [ %106, %102 ]
  %117 = phi i64* [ %87, %84 ], [ %104, %102 ]
  %118 = phi i64 [ %85, %84 ], [ %112, %102 ]
  %119 = phi i64 [ %76, %84 ], [ %110, %102 ]
  %120 = phi i64 [ %81, %84 ], [ %109, %102 ]
  %121 = phi i64 [ %77, %84 ], [ %107, %102 ]
  %122 = phi i64 [ %86, %84 ], [ %105, %102 ]
  %123 = phi i64 [ %81, %84 ], [ %103, %102 ]
  %124 = load i64, i64* %42, align 8
  store i64 %122, i64* %42, align 8
  store i64 %124, i64* %117, align 8
  store i64 %120, i64* %116, align 8
  store i64 %121, i64* %115, align 8
  store i64 %123, i64* %75, align 8
  store i64 %119, i64* %80, align 8
  %125 = load i64, i64* %18, align 8
  store i64 %118, i64* %18, align 8
  store i64 %125, i64* %114, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #16
  %126 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  br label %127

127:                                              ; preds = %37, %113, %2
  %128 = phi %"class.marl::Scheduler::Fiber"*** [ %39, %37 ], [ %126, %113 ], [ %7, %2 ]
  %129 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %128, i64 -1
  %130 = bitcast %"class.marl::Scheduler::Fiber"*** %1 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.marl::Scheduler::Fiber"*** %129 to i64*
  store i64 %131, i64* %132, align 8
  %133 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %134 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %133, i64 -1
  store %"class.marl::Scheduler::Fiber"*** %134, %"class.marl::Scheduler::Fiber"**** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.184"*, %"class.marl::Scheduler::Fiber"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.184", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 2
  %7 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %8, align 8
  %10 = icmp eq %"class.marl::Scheduler::Fiber"*** %7, %9
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %9 to i64
  %12 = bitcast %"class.marl::Scheduler::Fiber"*** %7 to i64*
  br i1 %10, label %13, label %129

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 1
  %15 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 0
  %17 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %16, align 8
  %18 = icmp ugt %"class.marl::Scheduler::Fiber"*** %15, %17
  %19 = ptrtoint %"class.marl::Scheduler::Fiber"*** %17 to i64
  br i1 %18, label %20, label %41

20:                                               ; preds = %13
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %15 to i64
  %22 = sub i64 %21, %19
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %15, i64 %26
  %28 = ptrtoint %"class.marl::Scheduler::Fiber"*** %7 to i64
  %29 = sub i64 %28, %21
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.marl::Scheduler::Fiber"*** %27 to i8*
  %34 = bitcast %"class.marl::Scheduler::Fiber"*** %15 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #16
  %35 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi %"class.marl::Scheduler::Fiber"*** [ %15, %20 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %27, i64 %30
  store %"class.marl::Scheduler::Fiber"*** %38, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %39 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %37, i64 %26
  store %"class.marl::Scheduler::Fiber"*** %39, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %40 = bitcast %"class.marl::Scheduler::Fiber"*** %38 to i64*
  br label %129

41:                                               ; preds = %13
  %42 = bitcast %"class.marl::Scheduler::Fiber"**** %8 to i64*
  %43 = bitcast %"struct.std::__1::__split_buffer.184"* %0 to i64*
  %44 = sub i64 %11, %19
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  %47 = select i1 %46, i64 1, i64 %45
  %48 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 1, i32 0
  %54 = lshr i64 %47, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = load %"struct.marl::StlAllocator.34"*, %"struct.marl::StlAllocator.34"** %55, align 8
  store %"class.marl::Scheduler::Fiber"*** null, %"class.marl::Scheduler::Fiber"**** %52, align 8
  store %"struct.marl::StlAllocator.34"* %57, %"struct.marl::StlAllocator.34"** %53, align 8
  %58 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %57, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #16
  %60 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %59, align 8
  %61 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #16, !alias.scope !90
  %64 = shl i64 %47, 3
  %65 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %66 = bitcast i8* %65 to i16*
  store i16 1280, i16* %66, align 8, !alias.scope !90
  store i64 %64, i64* %62, align 8, !alias.scope !90
  store i64 8, i64* %63, align 8, !alias.scope !90
  %67 = bitcast %"class.marl::Allocator"* %60 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %68 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, i64 2
  %70 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %69, align 8
  call void %70(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %60, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  %71 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Fiber"****
  %72 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #16
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %49, align 8
  %73 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %54
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %51, align 8
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %50, align 8
  %74 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %47
  store %"class.marl::Scheduler::Fiber"*** %74, %"class.marl::Scheduler::Fiber"**** %52, align 8
  %75 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %14, align 8
  %76 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.marl::Scheduler::Fiber"*** %75 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  %82 = ptrtoint %"class.marl::Scheduler::Fiber"*** %73 to i64
  %83 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %73, i64 %80
  %84 = icmp eq i64 %79, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %41
  %86 = ptrtoint %"class.marl::Scheduler::Fiber"*** %74 to i64
  %87 = ptrtoint %"class.marl::Scheduler::Fiber"*** %72 to i64
  %88 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %89 = bitcast %"class.marl::Scheduler::Fiber"**** %14 to i64*
  %90 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %91 = bitcast %"class.marl::Scheduler::Fiber"**** %52 to i64*
  br label %114

92:                                               ; preds = %41, %92
  %93 = phi %"class.marl::Scheduler::Fiber"*** [ %99, %92 ], [ %73, %41 ]
  %94 = phi i64 [ %100, %92 ], [ %82, %41 ]
  %95 = phi %"class.marl::Scheduler::Fiber"*** [ %101, %92 ], [ %75, %41 ]
  %96 = bitcast %"class.marl::Scheduler::Fiber"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = inttoptr i64 %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %93, i64 1
  %100 = ptrtoint %"class.marl::Scheduler::Fiber"*** %99 to i64
  %101 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %95, i64 1
  %102 = icmp eq %"class.marl::Scheduler::Fiber"*** %83, %99
  br i1 %102, label %103, label %92

103:                                              ; preds = %92
  %104 = ptrtoint %"class.marl::Scheduler::Fiber"*** %83 to i64
  %105 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.marl::Scheduler::Fiber"**** %14 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %76, align 8
  %112 = bitcast %"class.marl::Scheduler::Fiber"**** %52 to i64*
  %113 = load i64, i64* %112, align 8
  br label %114

114:                                              ; preds = %85, %103
  %115 = phi i64* [ %91, %85 ], [ %112, %103 ]
  %116 = phi i64* [ %90, %85 ], [ %109, %103 ]
  %117 = phi i64* [ %89, %85 ], [ %107, %103 ]
  %118 = phi i64* [ %88, %85 ], [ %105, %103 ]
  %119 = phi i64 [ %86, %85 ], [ %113, %103 ]
  %120 = phi i64 [ %77, %85 ], [ %111, %103 ]
  %121 = phi i64 [ %82, %85 ], [ %110, %103 ]
  %122 = phi i64 [ %78, %85 ], [ %108, %103 ]
  %123 = phi i64 [ %87, %85 ], [ %106, %103 ]
  %124 = phi i64 [ %82, %85 ], [ %104, %103 ]
  %125 = load i64, i64* %43, align 8
  store i64 %123, i64* %43, align 8
  store i64 %125, i64* %118, align 8
  store i64 %121, i64* %117, align 8
  store i64 %122, i64* %116, align 8
  store i64 %124, i64* %76, align 8
  store i64 %120, i64* %81, align 8
  %126 = load i64, i64* %42, align 8
  store i64 %119, i64* %42, align 8
  store i64 %126, i64* %115, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #16
  %127 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64**
  %128 = load i64*, i64** %127, align 8
  br label %129

129:                                              ; preds = %36, %114, %2
  %130 = phi i64* [ %40, %36 ], [ %128, %114 ], [ %12, %2 ]
  %131 = bitcast %"class.marl::Scheduler::Fiber"*** %1 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %130, align 8
  %133 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %134 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %133, i64 1
  store %"class.marl::Scheduler::Fiber"*** %134, %"class.marl::Scheduler::Fiber"**** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.184"*, %"class.marl::Scheduler::Fiber"*** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.184", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 1
  %7 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 0
  %9 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %8, align 8
  %10 = icmp eq %"class.marl::Scheduler::Fiber"*** %7, %9
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %9 to i64
  br i1 %10, label %12, label %128

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 2
  %14 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %15, align 8
  %17 = icmp ult %"class.marl::Scheduler::Fiber"*** %14, %16
  %18 = bitcast %"class.marl::Scheduler::Fiber"**** %15 to i64*
  %19 = ptrtoint %"class.marl::Scheduler::Fiber"*** %16 to i64
  br i1 %17, label %20, label %41

20:                                               ; preds = %12
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %14 to i64
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %14, i64 %25
  %27 = ptrtoint %"class.marl::Scheduler::Fiber"*** %7 to i64
  %28 = sub i64 %21, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = ashr exact i64 %28, 3
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %26, i64 %32
  %34 = bitcast %"class.marl::Scheduler::Fiber"*** %33 to i8*
  %35 = bitcast %"class.marl::Scheduler::Fiber"*** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %28, i1 false) #16
  %36 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %13, align 8
  br label %37

37:                                               ; preds = %20, %30
  %38 = phi %"class.marl::Scheduler::Fiber"*** [ %36, %30 ], [ %14, %20 ]
  %39 = phi %"class.marl::Scheduler::Fiber"*** [ %33, %30 ], [ %26, %20 ]
  store %"class.marl::Scheduler::Fiber"*** %39, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %40 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %38, i64 %25
  store %"class.marl::Scheduler::Fiber"*** %40, %"class.marl::Scheduler::Fiber"**** %13, align 8
  br label %128

41:                                               ; preds = %12
  %42 = bitcast %"struct.std::__1::__split_buffer.184"* %0 to i64*
  %43 = sub i64 %19, %11
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  %46 = select i1 %45, i64 1, i64 %44
  %47 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #16
  %48 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 2
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %5, i64 0, i32 3, i32 1, i32 0
  %53 = add nsw i64 %46, 3
  %54 = lshr i64 %53, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = load %"struct.marl::StlAllocator.34"*, %"struct.marl::StlAllocator.34"** %55, align 8
  store %"class.marl::Scheduler::Fiber"*** null, %"class.marl::Scheduler::Fiber"**** %51, align 8
  store %"struct.marl::StlAllocator.34"* %57, %"struct.marl::StlAllocator.34"** %52, align 8
  %58 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %57, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #16
  %60 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %59, align 8
  %61 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #16, !alias.scope !93
  %64 = shl i64 %46, 3
  %65 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %66 = bitcast i8* %65 to i16*
  store i16 1280, i16* %66, align 8, !alias.scope !93
  store i64 %64, i64* %62, align 8, !alias.scope !93
  store i64 8, i64* %63, align 8, !alias.scope !93
  %67 = bitcast %"class.marl::Allocator"* %60 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %68 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, i64 2
  %70 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %69, align 8
  call void %70(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %60, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  %71 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Scheduler::Fiber"****
  %72 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #16
  store %"class.marl::Scheduler::Fiber"*** %72, %"class.marl::Scheduler::Fiber"**** %48, align 8
  %73 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %54
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %50, align 8
  store %"class.marl::Scheduler::Fiber"*** %73, %"class.marl::Scheduler::Fiber"**** %49, align 8
  %74 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %72, i64 %46
  store %"class.marl::Scheduler::Fiber"*** %74, %"class.marl::Scheduler::Fiber"**** %51, align 8
  %75 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %76 = bitcast %"class.marl::Scheduler::Fiber"**** %13 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.marl::Scheduler::Fiber"*** %75 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = bitcast %"class.marl::Scheduler::Fiber"**** %50 to i64*
  %82 = ptrtoint %"class.marl::Scheduler::Fiber"*** %73 to i64
  %83 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %73, i64 %80
  %84 = icmp eq i64 %79, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %41
  %86 = ptrtoint %"class.marl::Scheduler::Fiber"*** %74 to i64
  %87 = ptrtoint %"class.marl::Scheduler::Fiber"*** %72 to i64
  %88 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %89 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %90 = bitcast %"class.marl::Scheduler::Fiber"**** %49 to i64*
  %91 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  br label %114

92:                                               ; preds = %41, %92
  %93 = phi %"class.marl::Scheduler::Fiber"*** [ %99, %92 ], [ %73, %41 ]
  %94 = phi i64 [ %100, %92 ], [ %82, %41 ]
  %95 = phi %"class.marl::Scheduler::Fiber"*** [ %101, %92 ], [ %75, %41 ]
  %96 = bitcast %"class.marl::Scheduler::Fiber"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = inttoptr i64 %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %93, i64 1
  %100 = ptrtoint %"class.marl::Scheduler::Fiber"*** %99 to i64
  %101 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %95, i64 1
  %102 = icmp eq %"class.marl::Scheduler::Fiber"*** %83, %99
  br i1 %102, label %103, label %92

103:                                              ; preds = %92
  %104 = ptrtoint %"class.marl::Scheduler::Fiber"*** %83 to i64
  %105 = bitcast %"struct.std::__1::__split_buffer.184"* %5 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.marl::Scheduler::Fiber"**** %6 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.marl::Scheduler::Fiber"**** %49 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %76, align 8
  %112 = bitcast %"class.marl::Scheduler::Fiber"**** %51 to i64*
  %113 = load i64, i64* %112, align 8
  br label %114

114:                                              ; preds = %85, %103
  %115 = phi i64* [ %91, %85 ], [ %112, %103 ]
  %116 = phi i64* [ %90, %85 ], [ %109, %103 ]
  %117 = phi i64* [ %89, %85 ], [ %107, %103 ]
  %118 = phi i64* [ %88, %85 ], [ %105, %103 ]
  %119 = phi i64 [ %86, %85 ], [ %113, %103 ]
  %120 = phi i64 [ %77, %85 ], [ %111, %103 ]
  %121 = phi i64 [ %82, %85 ], [ %110, %103 ]
  %122 = phi i64 [ %78, %85 ], [ %108, %103 ]
  %123 = phi i64 [ %87, %85 ], [ %106, %103 ]
  %124 = phi i64 [ %82, %85 ], [ %104, %103 ]
  %125 = load i64, i64* %42, align 8
  store i64 %123, i64* %42, align 8
  store i64 %125, i64* %118, align 8
  store i64 %121, i64* %117, align 8
  store i64 %122, i64* %116, align 8
  store i64 %124, i64* %76, align 8
  store i64 %120, i64* %81, align 8
  %126 = load i64, i64* %18, align 8
  store i64 %119, i64* %18, align 8
  store i64 %126, i64* %115, align 8
  call void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #16
  %127 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  br label %128

128:                                              ; preds = %37, %114, %2
  %129 = phi %"class.marl::Scheduler::Fiber"*** [ %39, %37 ], [ %127, %114 ], [ %7, %2 ]
  %130 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %129, i64 -1
  %131 = bitcast %"class.marl::Scheduler::Fiber"*** %1 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.marl::Scheduler::Fiber"*** %130 to i64*
  store i64 %132, i64* %133, align 8
  %134 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %6, align 8
  %135 = getelementptr inbounds %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %134, i64 -1
  store %"class.marl::Scheduler::Fiber"*** %135, %"class.marl::Scheduler::Fiber"**** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN4marl9Scheduler5FiberERNS1_12StlAllocatorIS5_EEED2Ev(%"struct.std::__1::__split_buffer.184"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 1
  %4 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 2
  %6 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %5, align 8
  %7 = icmp eq %"class.marl::Scheduler::Fiber"*** %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.marl::Scheduler::Fiber"*** %4 to i64
  %10 = getelementptr %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %6, i64 -1
  %11 = ptrtoint %"class.marl::Scheduler::Fiber"*** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = xor i64 %13, -1
  %15 = getelementptr %"class.marl::Scheduler::Fiber"**, %"class.marl::Scheduler::Fiber"*** %6, i64 %14
  store %"class.marl::Scheduler::Fiber"*** %15, %"class.marl::Scheduler::Fiber"**** %5, align 8
  br label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 0
  %18 = load %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"**** %17, align 8
  %19 = icmp eq %"class.marl::Scheduler::Fiber"*** %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.marl::Scheduler::Fiber"*** %18 to i64
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 3, i32 1, i32 0
  %23 = load %"struct.marl::StlAllocator.34"*, %"struct.marl::StlAllocator.34"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__split_buffer.184", %"struct.std::__1::__split_buffer.184"* %0, i64 0, i32 3, i32 0, i32 0
  %25 = bitcast %"class.marl::Scheduler::Fiber"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %21
  %28 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  %31 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false) #16
  %32 = bitcast %"struct.marl::Allocation"* %2 to %"class.marl::Scheduler::Fiber"****
  store %"class.marl::Scheduler::Fiber"*** %18, %"class.marl::Scheduler::Fiber"**** %32, align 8
  store i64 %27, i64* %29, align 8
  store i64 8, i64* %30, align 8
  %33 = bitcast i8* %31 to i16*
  store i16 1280, i16* %33, align 8
  %34 = getelementptr inbounds %"struct.marl::StlAllocator.34", %"struct.marl::StlAllocator.34"* %23, i64 0, i32 0
  %35 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %34, align 8
  %36 = bitcast %"class.marl::Allocator"* %35 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %37 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %37, i64 3
  %39 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %38, align 8
  call void %39(%"class.marl::Allocator"* %35, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #16
  br label %40

40:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = alloca %"struct.marl::Allocation::Request", align 16
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = alloca %"struct.marl::Allocation::Request", align 16
  %6 = alloca %"struct.marl::Allocation", align 8
  %7 = alloca %"struct.marl::Allocation::Request", align 8
  %8 = alloca %"struct.marl::Allocation", align 8
  %9 = alloca %"struct.marl::Allocation::Request", align 16
  %10 = alloca %"class.marl::Task"*, align 8
  %11 = alloca %"class.marl::Task"*, align 8
  %12 = alloca %"class.marl::Task"*, align 8
  %13 = alloca %"class.marl::Task"*, align 8
  %14 = alloca %"struct.std::__1::__split_buffer.191", align 16
  %15 = alloca %"class.marl::Task"*, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, 101
  br i1 %19, label %20, label %30

20:                                               ; preds = %1
  %21 = add i64 %18, -102
  store i64 %21, i64* %17, align 8
  %22 = bitcast %"class.marl::Task"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store %"class.marl::Task"* inttoptr (i64 -6148914691236517206 to %"class.marl::Task"*), %"class.marl::Task"** %10, align 8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.marl::Task"**, %"class.marl::Task"*** %24, align 8
  %26 = bitcast %"class.marl::Task"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.marl::Task"** %10 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %25, i64 1
  store %"class.marl::Task"** %29, %"class.marl::Task"*** %24, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backERKS3_(%"struct.std::__1::__split_buffer"* %23, %"class.marl::Task"** nonnull dereferenceable(8) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %159

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = bitcast %"class.marl::Task"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.marl::Task"*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = bitcast %"class.marl::Task"*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::deque"* %0 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %39, %46
  br i1 %47, label %48, label %88

48:                                               ; preds = %30
  %49 = icmp eq i64 %42, %34
  br i1 %49, label %66, label %50

50:                                               ; preds = %48
  %51 = bitcast %"class.marl::Task"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #16
  %52 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #16
  %53 = getelementptr inbounds %"struct.marl::StlAllocator.27", %"struct.marl::StlAllocator.27"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false) #16
  %54 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %53, align 8
  %55 = bitcast %"struct.marl::Allocation::Request"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 -86, i64 24, i1 false) #16, !alias.scope !96
  %56 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 2
  %57 = bitcast i8* %56 to i16*
  store i16 1280, i16* %57, align 16, !alias.scope !96
  %58 = bitcast %"struct.marl::Allocation::Request"* %5 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 8>, <2 x i64>* %58, align 16, !alias.scope !96
  %59 = bitcast %"class.marl::Allocator"* %54 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %60 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %60, i64 2
  %62 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %61, align 8
  call void %62(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %54, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #16
  %63 = bitcast %"struct.marl::Allocation"* %4 to i64*
  %64 = load i64, i64* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #16
  %65 = bitcast %"class.marl::Task"** %11 to i64*
  store i64 %64, i64* %65, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"* %31, %"class.marl::Task"** nonnull dereferenceable(8) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  br label %159

66:                                               ; preds = %48
  %67 = bitcast %"class.marl::Task"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  %68 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #16
  %69 = getelementptr inbounds %"struct.marl::StlAllocator.27", %"struct.marl::StlAllocator.27"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 32, i1 false) #16
  %70 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %69, align 8
  %71 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -86, i64 24, i1 false) #16, !alias.scope !99
  %72 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %73 = bitcast i8* %72 to i16*
  store i16 1280, i16* %73, align 16, !alias.scope !99
  %74 = bitcast %"struct.marl::Allocation::Request"* %3 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 8>, <2 x i64>* %74, align 16, !alias.scope !99
  %75 = bitcast %"class.marl::Allocator"* %70 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %76 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %76, i64 2
  %78 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %77, align 8
  call void %78(%"struct.marl::Allocation"* nonnull sret %2, %"class.marl::Allocator"* %70, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #16
  %79 = bitcast %"struct.marl::Allocation"* %2 to i64*
  %80 = load i64, i64* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #16
  %81 = bitcast %"class.marl::Task"** %12 to i64*
  store i64 %80, i64* %81, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"* %31, %"class.marl::Task"** nonnull dereferenceable(8) %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  %82 = bitcast %"class.marl::Task"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  store %"class.marl::Task"* inttoptr (i64 -6148914691236517206 to %"class.marl::Task"*), %"class.marl::Task"** %13, align 8
  %83 = load %"class.marl::Task"**, %"class.marl::Task"*** %35, align 8
  %84 = bitcast %"class.marl::Task"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.marl::Task"** %13 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %83, i64 1
  store %"class.marl::Task"** %87, %"class.marl::Task"*** %35, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backERKS3_(%"struct.std::__1::__split_buffer"* %31, %"class.marl::Task"** nonnull dereferenceable(8) %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #16
  br label %159

88:                                               ; preds = %30
  %89 = bitcast %"struct.std::__1::__split_buffer.191"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #16
  %90 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %14, i64 0, i32 0
  %91 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %14, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %14, i64 0, i32 2
  %93 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %14, i64 0, i32 3, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %14, i64 0, i32 3, i32 1, i32 0
  %95 = ashr exact i64 %45, 2
  %96 = icmp eq i64 %45, 0
  %97 = select i1 %96, i64 1, i64 %95
  %98 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %99 = bitcast %"struct.std::__1::__split_buffer.191"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -86, i64 24, i1 false)
  store %"class.marl::Task"** null, %"class.marl::Task"*** %93, align 8
  store %"struct.marl::StlAllocator"* %98, %"struct.marl::StlAllocator"** %94, align 8
  %100 = bitcast %"struct.marl::Allocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #16
  %101 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %98, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 32, i1 false) #16
  %102 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %101, align 8
  %103 = bitcast %"struct.marl::Allocation::Request"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #16
  %104 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 0
  %105 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 24, i1 false) #16, !alias.scope !102
  %106 = shl i64 %97, 3
  %107 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 2
  %108 = bitcast i8* %107 to i16*
  store i16 1280, i16* %108, align 8, !alias.scope !102
  store i64 %106, i64* %104, align 8, !alias.scope !102
  store i64 8, i64* %105, align 8, !alias.scope !102
  %109 = bitcast %"class.marl::Allocator"* %102 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %110 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %110, i64 2
  %112 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %111, align 8
  call void %112(%"struct.marl::Allocation"* nonnull sret %6, %"class.marl::Allocator"* %102, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #16
  %113 = bitcast %"struct.marl::Allocation"* %6 to %"class.marl::Task"***
  %114 = load %"class.marl::Task"**, %"class.marl::Task"*** %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #16
  store %"class.marl::Task"** %114, %"class.marl::Task"*** %90, align 16
  %115 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %114, i64 %39
  store %"class.marl::Task"** %115, %"class.marl::Task"*** %92, align 16
  store %"class.marl::Task"** %115, %"class.marl::Task"*** %91, align 8
  %116 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %114, i64 %97
  store %"class.marl::Task"** %116, %"class.marl::Task"*** %93, align 8
  %117 = bitcast %"struct.marl::Allocation"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #16
  %118 = getelementptr inbounds %"struct.marl::StlAllocator.27", %"struct.marl::StlAllocator.27"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false) #16
  %119 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %118, align 8
  %120 = bitcast %"struct.marl::Allocation::Request"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 24, i1 false) #16, !alias.scope !105
  %121 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %9, i64 0, i32 2
  %122 = bitcast i8* %121 to i16*
  store i16 1280, i16* %122, align 16, !alias.scope !105
  %123 = bitcast %"struct.marl::Allocation::Request"* %9 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 8>, <2 x i64>* %123, align 16, !alias.scope !105
  %124 = bitcast %"class.marl::Allocator"* %119 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %125 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %125, i64 2
  %127 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %126, align 8
  call void %127(%"struct.marl::Allocation"* nonnull sret %8, %"class.marl::Allocator"* %119, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #16
  %128 = bitcast %"struct.marl::Allocation"* %8 to i64*
  %129 = load i64, i64* %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #16
  %130 = bitcast %"class.marl::Task"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #16
  %131 = bitcast %"class.marl::Task"** %15 to i64*
  store i64 %129, i64* %131, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer.191"* nonnull %14, %"class.marl::Task"** nonnull dereferenceable(8) %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #16
  %132 = load %"class.marl::Task"**, %"class.marl::Task"*** %32, align 8
  %133 = load %"class.marl::Task"**, %"class.marl::Task"*** %35, align 8
  %134 = icmp eq %"class.marl::Task"** %132, %133
  %135 = ptrtoint %"class.marl::Task"** %132 to i64
  br i1 %134, label %138, label %154

136:                                              ; preds = %154
  %137 = load i64, i64* %33, align 8
  br label %138

138:                                              ; preds = %136, %88
  %139 = phi i64 [ %137, %136 ], [ %135, %88 ]
  %140 = phi %"class.marl::Task"** [ %157, %136 ], [ %133, %88 ]
  %141 = ptrtoint %"class.marl::Task"** %140 to i64
  %142 = load i64, i64* %43, align 8
  %143 = bitcast %"struct.std::__1::__split_buffer.191"* %14 to i64*
  %144 = bitcast %"class.marl::Task"*** %91 to i64*
  %145 = bitcast %"struct.std::__1::__split_buffer.191"* %14 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 16
  store i64 %142, i64* %143, align 16
  %147 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %147, align 8
  store i64 %141, i64* %144, align 8
  %148 = bitcast %"class.marl::Task"*** %92 to i64*
  %149 = bitcast %"class.marl::Task"*** %93 to i64*
  %150 = bitcast %"class.marl::Task"*** %92 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 16
  store i64 %139, i64* %148, align 16
  %152 = load i64, i64* %41, align 8
  %153 = bitcast %"class.marl::Task"*** %32 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %153, align 8
  store i64 %152, i64* %149, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #16
  br label %159

154:                                              ; preds = %88, %154
  %155 = phi %"class.marl::Task"** [ %156, %154 ], [ %132, %88 ]
  %156 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %155, i64 -1
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.191"* nonnull %14, %"class.marl::Task"** dereferenceable(8) %156) #17
  %157 = load %"class.marl::Task"**, %"class.marl::Task"*** %35, align 8
  %158 = icmp eq %"class.marl::Task"** %156, %157
  br i1 %158, label %136, label %154

159:                                              ; preds = %138, %66, %50, %20
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backERKS3_(%"struct.std::__1::__split_buffer"*, %"class.marl::Task"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %7 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.marl::Task"**, %"class.marl::Task"*** %8, align 8
  %10 = icmp eq %"class.marl::Task"** %7, %9
  %11 = ptrtoint %"class.marl::Task"** %9 to i64
  %12 = bitcast %"class.marl::Task"** %7 to i64*
  br i1 %10, label %13, label %128

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %15 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %17 = load %"class.marl::Task"**, %"class.marl::Task"*** %16, align 8
  %18 = icmp ugt %"class.marl::Task"** %15, %17
  %19 = ptrtoint %"class.marl::Task"** %17 to i64
  br i1 %18, label %20, label %41

20:                                               ; preds = %13
  %21 = ptrtoint %"class.marl::Task"** %15 to i64
  %22 = sub i64 %21, %19
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %15, i64 %26
  %28 = ptrtoint %"class.marl::Task"** %7 to i64
  %29 = sub i64 %28, %21
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.marl::Task"** %27 to i8*
  %34 = bitcast %"class.marl::Task"** %15 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #16
  %35 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi %"class.marl::Task"** [ %15, %20 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %27, i64 %30
  store %"class.marl::Task"** %38, %"class.marl::Task"*** %6, align 8
  %39 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %37, i64 %26
  store %"class.marl::Task"** %39, %"class.marl::Task"*** %14, align 8
  %40 = bitcast %"class.marl::Task"** %38 to i64*
  br label %128

41:                                               ; preds = %13
  %42 = bitcast %"class.marl::Task"*** %8 to i64*
  %43 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %44 = sub i64 %11, %19
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  %47 = select i1 %46, i64 1, i64 %45
  %48 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 1, i32 0
  %54 = lshr i64 %47, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  store %"class.marl::Task"** null, %"class.marl::Task"*** %52, align 8
  store %"struct.marl::StlAllocator"* %55, %"struct.marl::StlAllocator"** %53, align 8
  %57 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %55, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #16
  %59 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %58, align 8
  %60 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false) #16, !alias.scope !108
  %63 = shl i64 %47, 3
  %64 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %65 = bitcast i8* %64 to i16*
  store i16 1280, i16* %65, align 8, !alias.scope !108
  store i64 %63, i64* %61, align 8, !alias.scope !108
  store i64 8, i64* %62, align 8, !alias.scope !108
  %66 = bitcast %"class.marl::Allocator"* %59 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %67 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, i64 2
  %69 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, align 8
  call void %69(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %59, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #16
  %70 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Task"***
  %71 = load %"class.marl::Task"**, %"class.marl::Task"*** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #16
  store %"class.marl::Task"** %71, %"class.marl::Task"*** %49, align 8
  %72 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %71, i64 %54
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %51, align 8
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %50, align 8
  %73 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %71, i64 %47
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %52, align 8
  %74 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  %75 = bitcast %"class.marl::Task"*** %6 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = ptrtoint %"class.marl::Task"** %74 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = bitcast %"class.marl::Task"*** %51 to i64*
  %81 = ptrtoint %"class.marl::Task"** %72 to i64
  %82 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %79
  %83 = icmp eq i64 %78, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %41
  %85 = ptrtoint %"class.marl::Task"** %73 to i64
  %86 = ptrtoint %"class.marl::Task"** %71 to i64
  %87 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %88 = bitcast %"class.marl::Task"*** %14 to i64*
  %89 = bitcast %"class.marl::Task"*** %50 to i64*
  %90 = bitcast %"class.marl::Task"*** %52 to i64*
  br label %113

91:                                               ; preds = %41, %91
  %92 = phi %"class.marl::Task"** [ %98, %91 ], [ %72, %41 ]
  %93 = phi i64 [ %99, %91 ], [ %81, %41 ]
  %94 = phi %"class.marl::Task"** [ %100, %91 ], [ %74, %41 ]
  %95 = bitcast %"class.marl::Task"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %92, i64 1
  %99 = ptrtoint %"class.marl::Task"** %98 to i64
  %100 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %94, i64 1
  %101 = icmp eq %"class.marl::Task"** %82, %98
  br i1 %101, label %102, label %91

102:                                              ; preds = %91
  %103 = ptrtoint %"class.marl::Task"** %82 to i64
  %104 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.marl::Task"*** %14 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.marl::Task"*** %50 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %75, align 8
  %111 = bitcast %"class.marl::Task"*** %52 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %84, %102
  %114 = phi i64* [ %90, %84 ], [ %111, %102 ]
  %115 = phi i64* [ %89, %84 ], [ %108, %102 ]
  %116 = phi i64* [ %88, %84 ], [ %106, %102 ]
  %117 = phi i64* [ %87, %84 ], [ %104, %102 ]
  %118 = phi i64 [ %85, %84 ], [ %112, %102 ]
  %119 = phi i64 [ %76, %84 ], [ %110, %102 ]
  %120 = phi i64 [ %81, %84 ], [ %109, %102 ]
  %121 = phi i64 [ %77, %84 ], [ %107, %102 ]
  %122 = phi i64 [ %86, %84 ], [ %105, %102 ]
  %123 = phi i64 [ %81, %84 ], [ %103, %102 ]
  %124 = load i64, i64* %43, align 8
  store i64 %122, i64* %43, align 8
  store i64 %124, i64* %117, align 8
  store i64 %120, i64* %116, align 8
  store i64 %121, i64* %115, align 8
  store i64 %123, i64* %75, align 8
  store i64 %119, i64* %80, align 8
  %125 = load i64, i64* %42, align 8
  store i64 %118, i64* %42, align 8
  store i64 %125, i64* %114, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #16
  %126 = bitcast %"class.marl::Task"*** %6 to i64**
  %127 = load i64*, i64** %126, align 8
  br label %128

128:                                              ; preds = %36, %113, %2
  %129 = phi i64* [ %40, %36 ], [ %127, %113 ], [ %12, %2 ]
  %130 = bitcast %"class.marl::Task"** %1 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %129, align 8
  %132 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %133 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %132, i64 1
  store %"class.marl::Task"** %133, %"class.marl::Task"*** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer"*, %"class.marl::Task"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %7 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.marl::Task"**, %"class.marl::Task"*** %8, align 8
  %10 = icmp eq %"class.marl::Task"** %7, %9
  %11 = ptrtoint %"class.marl::Task"** %9 to i64
  %12 = bitcast %"class.marl::Task"** %7 to i64*
  br i1 %10, label %13, label %128

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %15 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %17 = load %"class.marl::Task"**, %"class.marl::Task"*** %16, align 8
  %18 = icmp ugt %"class.marl::Task"** %15, %17
  %19 = ptrtoint %"class.marl::Task"** %17 to i64
  br i1 %18, label %20, label %41

20:                                               ; preds = %13
  %21 = ptrtoint %"class.marl::Task"** %15 to i64
  %22 = sub i64 %21, %19
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %15, i64 %26
  %28 = ptrtoint %"class.marl::Task"** %7 to i64
  %29 = sub i64 %28, %21
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.marl::Task"** %27 to i8*
  %34 = bitcast %"class.marl::Task"** %15 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #16
  %35 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi %"class.marl::Task"** [ %15, %20 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %27, i64 %30
  store %"class.marl::Task"** %38, %"class.marl::Task"*** %6, align 8
  %39 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %37, i64 %26
  store %"class.marl::Task"** %39, %"class.marl::Task"*** %14, align 8
  %40 = bitcast %"class.marl::Task"** %38 to i64*
  br label %128

41:                                               ; preds = %13
  %42 = bitcast %"class.marl::Task"*** %8 to i64*
  %43 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %44 = sub i64 %11, %19
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  %47 = select i1 %46, i64 1, i64 %45
  %48 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 1, i32 0
  %54 = lshr i64 %47, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  store %"class.marl::Task"** null, %"class.marl::Task"*** %52, align 8
  store %"struct.marl::StlAllocator"* %55, %"struct.marl::StlAllocator"** %53, align 8
  %57 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %55, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #16
  %59 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %58, align 8
  %60 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false) #16, !alias.scope !111
  %63 = shl i64 %47, 3
  %64 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %65 = bitcast i8* %64 to i16*
  store i16 1280, i16* %65, align 8, !alias.scope !111
  store i64 %63, i64* %61, align 8, !alias.scope !111
  store i64 8, i64* %62, align 8, !alias.scope !111
  %66 = bitcast %"class.marl::Allocator"* %59 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %67 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, i64 2
  %69 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, align 8
  call void %69(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %59, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #16
  %70 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Task"***
  %71 = load %"class.marl::Task"**, %"class.marl::Task"*** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #16
  store %"class.marl::Task"** %71, %"class.marl::Task"*** %49, align 8
  %72 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %71, i64 %54
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %51, align 8
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %50, align 8
  %73 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %71, i64 %47
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %52, align 8
  %74 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  %75 = bitcast %"class.marl::Task"*** %6 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = ptrtoint %"class.marl::Task"** %74 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = bitcast %"class.marl::Task"*** %51 to i64*
  %81 = ptrtoint %"class.marl::Task"** %72 to i64
  %82 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %79
  %83 = icmp eq i64 %78, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %41
  %85 = ptrtoint %"class.marl::Task"** %73 to i64
  %86 = ptrtoint %"class.marl::Task"** %71 to i64
  %87 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %88 = bitcast %"class.marl::Task"*** %14 to i64*
  %89 = bitcast %"class.marl::Task"*** %50 to i64*
  %90 = bitcast %"class.marl::Task"*** %52 to i64*
  br label %113

91:                                               ; preds = %41, %91
  %92 = phi %"class.marl::Task"** [ %98, %91 ], [ %72, %41 ]
  %93 = phi i64 [ %99, %91 ], [ %81, %41 ]
  %94 = phi %"class.marl::Task"** [ %100, %91 ], [ %74, %41 ]
  %95 = bitcast %"class.marl::Task"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %92, i64 1
  %99 = ptrtoint %"class.marl::Task"** %98 to i64
  %100 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %94, i64 1
  %101 = icmp eq %"class.marl::Task"** %82, %98
  br i1 %101, label %102, label %91

102:                                              ; preds = %91
  %103 = ptrtoint %"class.marl::Task"** %82 to i64
  %104 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.marl::Task"*** %14 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.marl::Task"*** %50 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %75, align 8
  %111 = bitcast %"class.marl::Task"*** %52 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %84, %102
  %114 = phi i64* [ %90, %84 ], [ %111, %102 ]
  %115 = phi i64* [ %89, %84 ], [ %108, %102 ]
  %116 = phi i64* [ %88, %84 ], [ %106, %102 ]
  %117 = phi i64* [ %87, %84 ], [ %104, %102 ]
  %118 = phi i64 [ %85, %84 ], [ %112, %102 ]
  %119 = phi i64 [ %76, %84 ], [ %110, %102 ]
  %120 = phi i64 [ %81, %84 ], [ %109, %102 ]
  %121 = phi i64 [ %77, %84 ], [ %107, %102 ]
  %122 = phi i64 [ %86, %84 ], [ %105, %102 ]
  %123 = phi i64 [ %81, %84 ], [ %103, %102 ]
  %124 = load i64, i64* %43, align 8
  store i64 %122, i64* %43, align 8
  store i64 %124, i64* %117, align 8
  store i64 %120, i64* %116, align 8
  store i64 %121, i64* %115, align 8
  store i64 %123, i64* %75, align 8
  store i64 %119, i64* %80, align 8
  %125 = load i64, i64* %42, align 8
  store i64 %118, i64* %42, align 8
  store i64 %125, i64* %114, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #16
  %126 = bitcast %"class.marl::Task"*** %6 to i64**
  %127 = load i64*, i64** %126, align 8
  br label %128

128:                                              ; preds = %36, %113, %2
  %129 = phi i64* [ %40, %36 ], [ %127, %113 ], [ %12, %2 ]
  %130 = bitcast %"class.marl::Task"** %1 to i64*
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %129, align 8
  %132 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %133 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %132, i64 1
  store %"class.marl::Task"** %133, %"class.marl::Task"*** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskENS1_12StlAllocatorIS3_EEE10push_frontEOS3_(%"struct.std::__1::__split_buffer"*, %"class.marl::Task"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %7 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %9 = load %"class.marl::Task"**, %"class.marl::Task"*** %8, align 8
  %10 = icmp eq %"class.marl::Task"** %7, %9
  %11 = ptrtoint %"class.marl::Task"** %9 to i64
  br i1 %10, label %12, label %127

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %14 = load %"class.marl::Task"**, %"class.marl::Task"*** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.marl::Task"**, %"class.marl::Task"*** %15, align 8
  %17 = icmp ult %"class.marl::Task"** %14, %16
  %18 = bitcast %"class.marl::Task"*** %15 to i64*
  %19 = ptrtoint %"class.marl::Task"** %16 to i64
  br i1 %17, label %20, label %41

20:                                               ; preds = %12
  %21 = ptrtoint %"class.marl::Task"** %14 to i64
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %14, i64 %25
  %27 = ptrtoint %"class.marl::Task"** %7 to i64
  %28 = sub i64 %21, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = ashr exact i64 %28, 3
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %26, i64 %32
  %34 = bitcast %"class.marl::Task"** %33 to i8*
  %35 = bitcast %"class.marl::Task"** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %28, i1 false) #16
  %36 = load %"class.marl::Task"**, %"class.marl::Task"*** %13, align 8
  br label %37

37:                                               ; preds = %20, %30
  %38 = phi %"class.marl::Task"** [ %36, %30 ], [ %14, %20 ]
  %39 = phi %"class.marl::Task"** [ %33, %30 ], [ %26, %20 ]
  store %"class.marl::Task"** %39, %"class.marl::Task"*** %6, align 8
  %40 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %38, i64 %25
  store %"class.marl::Task"** %40, %"class.marl::Task"*** %13, align 8
  br label %127

41:                                               ; preds = %12
  %42 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %43 = sub i64 %19, %11
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  %46 = select i1 %45, i64 1, i64 %44
  %47 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #16
  %48 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 2
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 1, i32 0
  %53 = add nsw i64 %46, 3
  %54 = lshr i64 %53, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  store %"class.marl::Task"** null, %"class.marl::Task"*** %51, align 8
  store %"struct.marl::StlAllocator"* %55, %"struct.marl::StlAllocator"** %52, align 8
  %57 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %55, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 32, i1 false) #16
  %59 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %58, align 8
  %60 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #16
  %61 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false) #16, !alias.scope !114
  %63 = shl i64 %46, 3
  %64 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %65 = bitcast i8* %64 to i16*
  store i16 1280, i16* %65, align 8, !alias.scope !114
  store i64 %63, i64* %61, align 8, !alias.scope !114
  store i64 8, i64* %62, align 8, !alias.scope !114
  %66 = bitcast %"class.marl::Allocator"* %59 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %67 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, i64 2
  %69 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, align 8
  call void %69(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %59, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #16
  %70 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Task"***
  %71 = load %"class.marl::Task"**, %"class.marl::Task"*** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #16
  store %"class.marl::Task"** %71, %"class.marl::Task"*** %48, align 8
  %72 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %71, i64 %54
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %50, align 8
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %49, align 8
  %73 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %71, i64 %46
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %51, align 8
  %74 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %75 = bitcast %"class.marl::Task"*** %13 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = ptrtoint %"class.marl::Task"** %74 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = bitcast %"class.marl::Task"*** %50 to i64*
  %81 = ptrtoint %"class.marl::Task"** %72 to i64
  %82 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %79
  %83 = icmp eq i64 %78, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %41
  %85 = ptrtoint %"class.marl::Task"** %73 to i64
  %86 = ptrtoint %"class.marl::Task"** %71 to i64
  %87 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %88 = bitcast %"class.marl::Task"*** %6 to i64*
  %89 = bitcast %"class.marl::Task"*** %49 to i64*
  %90 = bitcast %"class.marl::Task"*** %51 to i64*
  br label %113

91:                                               ; preds = %41, %91
  %92 = phi %"class.marl::Task"** [ %98, %91 ], [ %72, %41 ]
  %93 = phi i64 [ %99, %91 ], [ %81, %41 ]
  %94 = phi %"class.marl::Task"** [ %100, %91 ], [ %74, %41 ]
  %95 = bitcast %"class.marl::Task"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %92, i64 1
  %99 = ptrtoint %"class.marl::Task"** %98 to i64
  %100 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %94, i64 1
  %101 = icmp eq %"class.marl::Task"** %82, %98
  br i1 %101, label %102, label %91

102:                                              ; preds = %91
  %103 = ptrtoint %"class.marl::Task"** %82 to i64
  %104 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.marl::Task"*** %6 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.marl::Task"*** %49 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %75, align 8
  %111 = bitcast %"class.marl::Task"*** %51 to i64*
  %112 = load i64, i64* %111, align 8
  br label %113

113:                                              ; preds = %84, %102
  %114 = phi i64* [ %90, %84 ], [ %111, %102 ]
  %115 = phi i64* [ %89, %84 ], [ %108, %102 ]
  %116 = phi i64* [ %88, %84 ], [ %106, %102 ]
  %117 = phi i64* [ %87, %84 ], [ %104, %102 ]
  %118 = phi i64 [ %85, %84 ], [ %112, %102 ]
  %119 = phi i64 [ %76, %84 ], [ %110, %102 ]
  %120 = phi i64 [ %81, %84 ], [ %109, %102 ]
  %121 = phi i64 [ %77, %84 ], [ %107, %102 ]
  %122 = phi i64 [ %86, %84 ], [ %105, %102 ]
  %123 = phi i64 [ %81, %84 ], [ %103, %102 ]
  %124 = load i64, i64* %42, align 8
  store i64 %122, i64* %42, align 8
  store i64 %124, i64* %117, align 8
  store i64 %120, i64* %116, align 8
  store i64 %121, i64* %115, align 8
  store i64 %123, i64* %75, align 8
  store i64 %119, i64* %80, align 8
  %125 = load i64, i64* %18, align 8
  store i64 %118, i64* %18, align 8
  store i64 %125, i64* %114, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #16
  %126 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  br label %127

127:                                              ; preds = %37, %113, %2
  %128 = phi %"class.marl::Task"** [ %39, %37 ], [ %126, %113 ], [ %7, %2 ]
  %129 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %128, i64 -1
  %130 = bitcast %"class.marl::Task"** %1 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.marl::Task"** %129 to i64*
  store i64 %131, i64* %132, align 8
  %133 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %134 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %133, i64 -1
  store %"class.marl::Task"** %134, %"class.marl::Task"*** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEE9push_backEOS3_(%"struct.std::__1::__split_buffer.191"*, %"class.marl::Task"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 2
  %7 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.marl::Task"**, %"class.marl::Task"*** %8, align 8
  %10 = icmp eq %"class.marl::Task"** %7, %9
  %11 = ptrtoint %"class.marl::Task"** %9 to i64
  %12 = bitcast %"class.marl::Task"** %7 to i64*
  br i1 %10, label %13, label %129

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 1
  %15 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 0
  %17 = load %"class.marl::Task"**, %"class.marl::Task"*** %16, align 8
  %18 = icmp ugt %"class.marl::Task"** %15, %17
  %19 = ptrtoint %"class.marl::Task"** %17 to i64
  br i1 %18, label %20, label %41

20:                                               ; preds = %13
  %21 = ptrtoint %"class.marl::Task"** %15 to i64
  %22 = sub i64 %21, %19
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %15, i64 %26
  %28 = ptrtoint %"class.marl::Task"** %7 to i64
  %29 = sub i64 %28, %21
  %30 = ashr exact i64 %29, 3
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %20
  %33 = bitcast %"class.marl::Task"** %27 to i8*
  %34 = bitcast %"class.marl::Task"** %15 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #16
  %35 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  br label %36

36:                                               ; preds = %20, %32
  %37 = phi %"class.marl::Task"** [ %15, %20 ], [ %35, %32 ]
  %38 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %27, i64 %30
  store %"class.marl::Task"** %38, %"class.marl::Task"*** %6, align 8
  %39 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %37, i64 %26
  store %"class.marl::Task"** %39, %"class.marl::Task"*** %14, align 8
  %40 = bitcast %"class.marl::Task"** %38 to i64*
  br label %129

41:                                               ; preds = %13
  %42 = bitcast %"class.marl::Task"*** %8 to i64*
  %43 = bitcast %"struct.std::__1::__split_buffer.191"* %0 to i64*
  %44 = sub i64 %11, %19
  %45 = ashr exact i64 %44, 2
  %46 = icmp eq i64 %44, 0
  %47 = select i1 %46, i64 1, i64 %45
  %48 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 1
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 1, i32 0
  %54 = lshr i64 %47, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = load %"struct.marl::StlAllocator"*, %"struct.marl::StlAllocator"** %55, align 8
  store %"class.marl::Task"** null, %"class.marl::Task"*** %52, align 8
  store %"struct.marl::StlAllocator"* %57, %"struct.marl::StlAllocator"** %53, align 8
  %58 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %57, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #16
  %60 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %59, align 8
  %61 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #16, !alias.scope !117
  %64 = shl i64 %47, 3
  %65 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %66 = bitcast i8* %65 to i16*
  store i16 1280, i16* %66, align 8, !alias.scope !117
  store i64 %64, i64* %62, align 8, !alias.scope !117
  store i64 8, i64* %63, align 8, !alias.scope !117
  %67 = bitcast %"class.marl::Allocator"* %60 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %68 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, i64 2
  %70 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %69, align 8
  call void %70(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %60, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  %71 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Task"***
  %72 = load %"class.marl::Task"**, %"class.marl::Task"*** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #16
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %49, align 8
  %73 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %54
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %51, align 8
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %50, align 8
  %74 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %47
  store %"class.marl::Task"** %74, %"class.marl::Task"*** %52, align 8
  %75 = load %"class.marl::Task"**, %"class.marl::Task"*** %14, align 8
  %76 = bitcast %"class.marl::Task"*** %6 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.marl::Task"** %75 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = bitcast %"class.marl::Task"*** %51 to i64*
  %82 = ptrtoint %"class.marl::Task"** %73 to i64
  %83 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %73, i64 %80
  %84 = icmp eq i64 %79, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %41
  %86 = ptrtoint %"class.marl::Task"** %74 to i64
  %87 = ptrtoint %"class.marl::Task"** %72 to i64
  %88 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %89 = bitcast %"class.marl::Task"*** %14 to i64*
  %90 = bitcast %"class.marl::Task"*** %50 to i64*
  %91 = bitcast %"class.marl::Task"*** %52 to i64*
  br label %114

92:                                               ; preds = %41, %92
  %93 = phi %"class.marl::Task"** [ %99, %92 ], [ %73, %41 ]
  %94 = phi i64 [ %100, %92 ], [ %82, %41 ]
  %95 = phi %"class.marl::Task"** [ %101, %92 ], [ %75, %41 ]
  %96 = bitcast %"class.marl::Task"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = inttoptr i64 %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %93, i64 1
  %100 = ptrtoint %"class.marl::Task"** %99 to i64
  %101 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %95, i64 1
  %102 = icmp eq %"class.marl::Task"** %83, %99
  br i1 %102, label %103, label %92

103:                                              ; preds = %92
  %104 = ptrtoint %"class.marl::Task"** %83 to i64
  %105 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.marl::Task"*** %14 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.marl::Task"*** %50 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %76, align 8
  %112 = bitcast %"class.marl::Task"*** %52 to i64*
  %113 = load i64, i64* %112, align 8
  br label %114

114:                                              ; preds = %85, %103
  %115 = phi i64* [ %91, %85 ], [ %112, %103 ]
  %116 = phi i64* [ %90, %85 ], [ %109, %103 ]
  %117 = phi i64* [ %89, %85 ], [ %107, %103 ]
  %118 = phi i64* [ %88, %85 ], [ %105, %103 ]
  %119 = phi i64 [ %86, %85 ], [ %113, %103 ]
  %120 = phi i64 [ %77, %85 ], [ %111, %103 ]
  %121 = phi i64 [ %82, %85 ], [ %110, %103 ]
  %122 = phi i64 [ %78, %85 ], [ %108, %103 ]
  %123 = phi i64 [ %87, %85 ], [ %106, %103 ]
  %124 = phi i64 [ %82, %85 ], [ %104, %103 ]
  %125 = load i64, i64* %43, align 8
  store i64 %123, i64* %43, align 8
  store i64 %125, i64* %118, align 8
  store i64 %121, i64* %117, align 8
  store i64 %122, i64* %116, align 8
  store i64 %124, i64* %76, align 8
  store i64 %120, i64* %81, align 8
  %126 = load i64, i64* %42, align 8
  store i64 %119, i64* %42, align 8
  store i64 %126, i64* %115, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #16
  %127 = bitcast %"class.marl::Task"*** %6 to i64**
  %128 = load i64*, i64** %127, align 8
  br label %129

129:                                              ; preds = %36, %114, %2
  %130 = phi i64* [ %40, %36 ], [ %128, %114 ], [ %12, %2 ]
  %131 = bitcast %"class.marl::Task"** %1 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %130, align 8
  %133 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %134 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %133, i64 1
  store %"class.marl::Task"** %134, %"class.marl::Task"*** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEE10push_frontERKS3_(%"struct.std::__1::__split_buffer.191"*, %"class.marl::Task"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.191", align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 1
  %7 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 0
  %9 = load %"class.marl::Task"**, %"class.marl::Task"*** %8, align 8
  %10 = icmp eq %"class.marl::Task"** %7, %9
  %11 = ptrtoint %"class.marl::Task"** %9 to i64
  br i1 %10, label %12, label %128

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 2
  %14 = load %"class.marl::Task"**, %"class.marl::Task"*** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.marl::Task"**, %"class.marl::Task"*** %15, align 8
  %17 = icmp ult %"class.marl::Task"** %14, %16
  %18 = bitcast %"class.marl::Task"*** %15 to i64*
  %19 = ptrtoint %"class.marl::Task"** %16 to i64
  br i1 %17, label %20, label %41

20:                                               ; preds = %12
  %21 = ptrtoint %"class.marl::Task"** %14 to i64
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %14, i64 %25
  %27 = ptrtoint %"class.marl::Task"** %7 to i64
  %28 = sub i64 %21, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = ashr exact i64 %28, 3
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %26, i64 %32
  %34 = bitcast %"class.marl::Task"** %33 to i8*
  %35 = bitcast %"class.marl::Task"** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %28, i1 false) #16
  %36 = load %"class.marl::Task"**, %"class.marl::Task"*** %13, align 8
  br label %37

37:                                               ; preds = %20, %30
  %38 = phi %"class.marl::Task"** [ %36, %30 ], [ %14, %20 ]
  %39 = phi %"class.marl::Task"** [ %33, %30 ], [ %26, %20 ]
  store %"class.marl::Task"** %39, %"class.marl::Task"*** %6, align 8
  %40 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %38, i64 %25
  store %"class.marl::Task"** %40, %"class.marl::Task"*** %13, align 8
  br label %128

41:                                               ; preds = %12
  %42 = bitcast %"struct.std::__1::__split_buffer.191"* %0 to i64*
  %43 = sub i64 %19, %11
  %44 = ashr exact i64 %43, 2
  %45 = icmp eq i64 %43, 0
  %46 = select i1 %45, i64 1, i64 %44
  %47 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #16
  %48 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 2
  %51 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %5, i64 0, i32 3, i32 1, i32 0
  %53 = add nsw i64 %46, 3
  %54 = lshr i64 %53, 2
  %55 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 1, i32 0
  %56 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = load %"struct.marl::StlAllocator"*, %"struct.marl::StlAllocator"** %55, align 8
  store %"class.marl::Task"** null, %"class.marl::Task"*** %51, align 8
  store %"struct.marl::StlAllocator"* %57, %"struct.marl::StlAllocator"** %52, align 8
  %58 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %57, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #16
  %60 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %59, align 8
  %61 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false) #16, !alias.scope !120
  %64 = shl i64 %46, 3
  %65 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %66 = bitcast i8* %65 to i16*
  store i16 1280, i16* %66, align 8, !alias.scope !120
  store i64 %64, i64* %62, align 8, !alias.scope !120
  store i64 8, i64* %63, align 8, !alias.scope !120
  %67 = bitcast %"class.marl::Allocator"* %60 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %68 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %68, i64 2
  %70 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %69, align 8
  call void %70(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %60, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  %71 = bitcast %"struct.marl::Allocation"* %3 to %"class.marl::Task"***
  %72 = load %"class.marl::Task"**, %"class.marl::Task"*** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #16
  store %"class.marl::Task"** %72, %"class.marl::Task"*** %48, align 8
  %73 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %54
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %50, align 8
  store %"class.marl::Task"** %73, %"class.marl::Task"*** %49, align 8
  %74 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %72, i64 %46
  store %"class.marl::Task"** %74, %"class.marl::Task"*** %51, align 8
  %75 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %76 = bitcast %"class.marl::Task"*** %13 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.marl::Task"** %75 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = bitcast %"class.marl::Task"*** %50 to i64*
  %82 = ptrtoint %"class.marl::Task"** %73 to i64
  %83 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %73, i64 %80
  %84 = icmp eq i64 %79, 0
  br i1 %84, label %85, label %92

85:                                               ; preds = %41
  %86 = ptrtoint %"class.marl::Task"** %74 to i64
  %87 = ptrtoint %"class.marl::Task"** %72 to i64
  %88 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %89 = bitcast %"class.marl::Task"*** %6 to i64*
  %90 = bitcast %"class.marl::Task"*** %49 to i64*
  %91 = bitcast %"class.marl::Task"*** %51 to i64*
  br label %114

92:                                               ; preds = %41, %92
  %93 = phi %"class.marl::Task"** [ %99, %92 ], [ %73, %41 ]
  %94 = phi i64 [ %100, %92 ], [ %82, %41 ]
  %95 = phi %"class.marl::Task"** [ %101, %92 ], [ %75, %41 ]
  %96 = bitcast %"class.marl::Task"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = inttoptr i64 %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %93, i64 1
  %100 = ptrtoint %"class.marl::Task"** %99 to i64
  %101 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %95, i64 1
  %102 = icmp eq %"class.marl::Task"** %83, %99
  br i1 %102, label %103, label %92

103:                                              ; preds = %92
  %104 = ptrtoint %"class.marl::Task"** %83 to i64
  %105 = bitcast %"struct.std::__1::__split_buffer.191"* %5 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.marl::Task"*** %6 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.marl::Task"*** %49 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %76, align 8
  %112 = bitcast %"class.marl::Task"*** %51 to i64*
  %113 = load i64, i64* %112, align 8
  br label %114

114:                                              ; preds = %85, %103
  %115 = phi i64* [ %91, %85 ], [ %112, %103 ]
  %116 = phi i64* [ %90, %85 ], [ %109, %103 ]
  %117 = phi i64* [ %89, %85 ], [ %107, %103 ]
  %118 = phi i64* [ %88, %85 ], [ %105, %103 ]
  %119 = phi i64 [ %86, %85 ], [ %113, %103 ]
  %120 = phi i64 [ %77, %85 ], [ %111, %103 ]
  %121 = phi i64 [ %82, %85 ], [ %110, %103 ]
  %122 = phi i64 [ %78, %85 ], [ %108, %103 ]
  %123 = phi i64 [ %87, %85 ], [ %106, %103 ]
  %124 = phi i64 [ %82, %85 ], [ %104, %103 ]
  %125 = load i64, i64* %42, align 8
  store i64 %123, i64* %42, align 8
  store i64 %125, i64* %118, align 8
  store i64 %121, i64* %117, align 8
  store i64 %122, i64* %116, align 8
  store i64 %124, i64* %76, align 8
  store i64 %120, i64* %81, align 8
  %126 = load i64, i64* %18, align 8
  store i64 %119, i64* %18, align 8
  store i64 %126, i64* %115, align 8
  call void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #16
  %127 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  br label %128

128:                                              ; preds = %37, %114, %2
  %129 = phi %"class.marl::Task"** [ %39, %37 ], [ %127, %114 ], [ %7, %2 ]
  %130 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %129, i64 -1
  %131 = bitcast %"class.marl::Task"** %1 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.marl::Task"** %130 to i64*
  store i64 %132, i64* %133, align 8
  %134 = load %"class.marl::Task"**, %"class.marl::Task"*** %6, align 8
  %135 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %134, i64 -1
  store %"class.marl::Task"** %135, %"class.marl::Task"*** %6, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN4marl4TaskERNS1_12StlAllocatorIS3_EEED2Ev(%"struct.std::__1::__split_buffer.191"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 1
  %4 = load %"class.marl::Task"**, %"class.marl::Task"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 2
  %6 = load %"class.marl::Task"**, %"class.marl::Task"*** %5, align 8
  %7 = icmp eq %"class.marl::Task"** %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.marl::Task"** %4 to i64
  %10 = getelementptr %"class.marl::Task"*, %"class.marl::Task"** %6, i64 -1
  %11 = ptrtoint %"class.marl::Task"** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = xor i64 %13, -1
  %15 = getelementptr %"class.marl::Task"*, %"class.marl::Task"** %6, i64 %14
  store %"class.marl::Task"** %15, %"class.marl::Task"*** %5, align 8
  br label %16

16:                                               ; preds = %1, %8
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 0
  %18 = load %"class.marl::Task"**, %"class.marl::Task"*** %17, align 8
  %19 = icmp eq %"class.marl::Task"** %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"class.marl::Task"** %18 to i64
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 1, i32 0
  %23 = load %"struct.marl::StlAllocator"*, %"struct.marl::StlAllocator"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__split_buffer.191", %"struct.std::__1::__split_buffer.191"* %0, i64 0, i32 3, i32 0, i32 0
  %25 = bitcast %"class.marl::Task"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %21
  %28 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  %31 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false) #16
  %32 = bitcast %"struct.marl::Allocation"* %2 to %"class.marl::Task"***
  store %"class.marl::Task"** %18, %"class.marl::Task"*** %32, align 8
  store i64 %27, i64* %29, align 8
  store i64 8, i64* %30, align 8
  %33 = bitcast i8* %31 to i16*
  store i16 1280, i16* %33, align 8
  %34 = getelementptr inbounds %"struct.marl::StlAllocator", %"struct.marl::StlAllocator"* %23, i64 0, i32 0
  %35 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %34, align 8
  %36 = bitcast %"class.marl::Allocator"* %35 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %37 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %37, i64 3
  %39 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %38, align 8
  call void %39(%"class.marl::Allocator"* %35, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #16
  br label %40

40:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE9pop_frontEv(%"class.std::__1::deque"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"class.marl::Task"**, %"class.marl::Task"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 102
  %7 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %3, i64 %6
  %8 = load %"class.marl::Task"*, %"class.marl::Task"** %7, align 8
  %9 = urem i64 %5, 102
  %10 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %8, i64 %9, i32 0, i32 0, i32 2
  %11 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %11, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.marl::Task", %"class.marl::Task"* %8, i64 %9, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void %13(i8* %17) #15
  %18 = load i64, i64* %4, align 8
  br label %19

19:                                               ; preds = %1, %15
  %20 = phi i64 [ %5, %1 ], [ %18, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = add i64 %20, 1
  store i64 %24, i64* %4, align 8
  %25 = tail call zeroext i1 @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE26__maybe_remove_front_spareEb(%"class.std::__1::deque"* %0, i1 zeroext true) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__15dequeIN4marl4TaskENS1_12StlAllocatorIS2_EEE26__maybe_remove_front_spareEb(%"class.std::__1::deque"*, i1 zeroext) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 204
  %7 = icmp ult i64 %5, 102
  %8 = or i1 %7, %1
  %9 = and i1 %6, %8
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.marl::Task"*** %11 to i64**
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false) #16
  %18 = bitcast %"struct.marl::Allocation"* %3 to i64*
  store i64 %14, i64* %18, align 8
  %19 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 8>, <2 x i64>* %19, align 8
  %20 = bitcast i8* %17 to i16*
  store i16 1280, i16* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %22 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %21, align 8
  %23 = bitcast %"class.marl::Allocator"* %22 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %24 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %24, i64 3
  %26 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %25, align 8
  call void %26(%"class.marl::Allocator"* %22, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #16
  %27 = load %"class.marl::Task"**, %"class.marl::Task"*** %11, align 8
  %28 = getelementptr inbounds %"class.marl::Task"*, %"class.marl::Task"** %27, i64 1
  store %"class.marl::Task"** %28, %"class.marl::Task"*** %11, align 8
  %29 = load i64, i64* %4, align 8
  %30 = add i64 %29, -102
  store i64 %30, i64* %4, align 8
  br label %31

31:                                               ; preds = %2, %10
  %32 = phi i1 [ true, %10 ], [ false, %2 ]
  ret i1 %32
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__118condition_variable10wait_untilINS_6chrono12system_clockENS2_8durationIxNS_5ratioILl1ELl1000000EEEEEEENS_9cv_statusERNS_11unique_lockINS_5mutexEEERKNS2_10time_pointIT_T0_EE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16), %"class.std::__1::chrono::time_point"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %4 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %5 = getelementptr inbounds %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point"* %2, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = icmp eq i64 %6, 0
  br i1 %9, label %18, label %10

10:                                               ; preds = %8
  %11 = icmp sgt i64 %6, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp sgt i64 %6, 9223372036854775
  br i1 %13, label %18, label %16

14:                                               ; preds = %10
  %15 = icmp slt i64 %6, -9223372036854775
  br i1 %15, label %18, label %16

16:                                               ; preds = %14, %12
  %17 = mul nsw i64 %6, 1000
  br label %18

18:                                               ; preds = %8, %12, %14, %16
  %19 = phi i64 [ %17, %16 ], [ 0, %8 ], [ 9223372036854775807, %12 ], [ -9223372036854775808, %14 ]
  tail call void @_ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE(%"class.std::__1::condition_variable"* %0, %"class.std::__1::unique_lock"* dereferenceable(16) %1, i64 %19) #15
  %20 = tail call i64 @_ZNSt3__16chrono12system_clock3nowEv() #15
  %21 = load i64, i64* %5, align 8
  %22 = icmp sge i64 %20, %21
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %3, %18
  %25 = phi i32 [ %23, %18 ], [ 1, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable15__do_timed_waitERNS_11unique_lockINS_5mutexEEENS_6chrono10time_pointINS5_12system_clockENS5_8durationIxNS_5ratioILl1ELl1000000000EEEEEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16), i64) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.68"*, i8 } @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE25__emplace_unique_key_argsIS4_JRS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.64"*, %"class.marl::Scheduler::Fiber"** dereferenceable(8), %"class.marl::Scheduler::Fiber"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = alloca %"struct.marl::Allocation::Request", align 16
  %6 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %1, align 8
  %7 = ptrtoint %"class.marl::Scheduler::Fiber"* %6 to i64
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %68, label %24

24:                                               ; preds = %3
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #16, !range !50
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %20, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.68"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %34
  %42 = add i64 %22, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base.68"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.68"* %46, null
  br i1 %47, label %68, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.68"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %68

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.68"* %64 to %"class.marl::Scheduler::Fiber"**
  %66 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %65, align 8
  %67 = icmp eq %"class.marl::Scheduler::Fiber"* %66, %6
  br i1 %67, label %168, label %43

68:                                               ; preds = %43, %60, %34, %3
  %69 = phi i64 [ %35, %34 ], [ -6148914691236517206, %3 ], [ %35, %60 ], [ %35, %43 ]
  %70 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #16, !noalias !123
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 32, i1 false) #16, !noalias !123
  %72 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %71, align 8, !noalias !123
  %73 = bitcast %"struct.marl::Allocation::Request"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #16, !noalias !123
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 -86, i64 24, i1 false) #16, !alias.scope !126, !noalias !123
  %74 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 2
  %75 = bitcast i8* %74 to i16*
  store i16 1280, i16* %75, align 16, !alias.scope !126, !noalias !123
  %76 = bitcast %"struct.marl::Allocation::Request"* %5 to <2 x i64>*
  store <2 x i64> <i64 24, i64 8>, <2 x i64>* %76, align 16, !alias.scope !126, !noalias !123
  %77 = bitcast %"class.marl::Allocator"* %72 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %78 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %77, align 8, !noalias !123
  %79 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %78, i64 2
  %80 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %79, align 8, !noalias !123
  call void %80(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %72, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %5) #15, !noalias !123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #16, !noalias !123
  %81 = bitcast %"struct.marl::Allocation"* %4 to %"struct.std::__1::__hash_node.160"**
  %82 = load %"struct.std::__1::__hash_node.160"*, %"struct.std::__1::__hash_node.160"** %81, align 8, !noalias !123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #16, !noalias !123
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node.160", %"struct.std::__1::__hash_node.160"* %82, i64 0, i32 2
  %84 = bitcast %"class.marl::Scheduler::Fiber"** %2 to i64*
  %85 = load i64, i64* %84, align 8, !noalias !123
  %86 = bitcast %"class.marl::Scheduler::Fiber"** %83 to i64*
  store i64 %85, i64* %86, align 8, !noalias !123
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node.160", %"struct.std::__1::__hash_node.160"* %82, i64 0, i32 1
  store i64 %20, i64* %87, align 8, !noalias !123
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node.160", %"struct.std::__1::__hash_node.160"* %82, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %88, align 8, !noalias !123
  %89 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  %92 = uitofp i64 %91 to float
  %93 = uitofp i64 %22 to float
  %94 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 3, i32 0, i32 0
  %95 = load float, float* %94, align 4
  %96 = fmul float %95, %93
  %97 = fcmp olt float %96, %92
  %98 = or i1 %23, %97
  br i1 %98, label %99, label %122

99:                                               ; preds = %68
  %100 = shl i64 %22, 1
  %101 = icmp ult i64 %22, 3
  %102 = call i64 @llvm.ctpop.i64(i64 %22) #16, !range !50
  %103 = icmp ugt i64 %102, 1
  %104 = or i1 %101, %103
  %105 = zext i1 %104 to i64
  %106 = or i64 %100, %105
  %107 = fdiv float %92, %95
  %108 = call float @llvm.ceil.f32(float %107) #16
  %109 = fptoui float %108 to i64
  %110 = icmp ult i64 %106, %109
  %111 = select i1 %110, i64 %109, i64 %106
  call void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.64"* %0, i64 %111) #17
  %112 = load i64, i64* %21, align 8
  %113 = call i64 @llvm.ctpop.i64(i64 %112) #16, !range !50
  %114 = icmp ugt i64 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %99
  %116 = add i64 %112, -1
  %117 = and i64 %116, %20
  br label %122

118:                                              ; preds = %99
  %119 = icmp ult i64 %20, %112
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %20, %112
  br label %122

122:                                              ; preds = %120, %118, %115, %68
  %123 = phi i64 [ %22, %68 ], [ %112, %115 ], [ %112, %118 ], [ %112, %120 ]
  %124 = phi i64 [ %69, %68 ], [ %117, %115 ], [ %20, %118 ], [ %121, %120 ]
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %126, i64 %124
  %128 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.68"* %128, null
  br i1 %129, label %130, label %158

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %131, i64 0, i32 0
  %133 = bitcast %"struct.std::__1::__hash_node_base.68"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node.160"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node.160", %"struct.std::__1::__hash_node.160"* %82, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* %136, %"struct.std::__1::__hash_node_base.68"** %132, align 8
  %137 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %125, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %137, i64 %124
  store %"struct.std::__1::__hash_node_base.68"* %131, %"struct.std::__1::__hash_node_base.68"** %138, align 8
  %139 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %88, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.68"* %139, null
  br i1 %140, label %164, label %141

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.68"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = call i64 @llvm.ctpop.i64(i64 %123) #16, !range !50
  %146 = icmp ugt i64 %145, 1
  br i1 %146, label %150, label %147

147:                                              ; preds = %141
  %148 = add i64 %123, -1
  %149 = and i64 %144, %148
  br label %154

150:                                              ; preds = %141
  %151 = icmp ult i64 %144, %123
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = urem i64 %144, %123
  br label %154

154:                                              ; preds = %147, %150, %152
  %155 = phi i64 [ %149, %147 ], [ %153, %152 ], [ %144, %150 ]
  %156 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %125, align 8
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %156, i64 %155
  store %"struct.std::__1::__hash_node_base.68"* %136, %"struct.std::__1::__hash_node_base.68"** %157, align 8
  br label %164

158:                                              ; preds = %122
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %128, i64 0, i32 0
  %160 = bitcast %"struct.std::__1::__hash_node_base.68"* %128 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::__hash_node.160"* %82 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node.160", %"struct.std::__1::__hash_node.160"* %82, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* %163, %"struct.std::__1::__hash_node_base.68"** %159, align 8
  br label %164

164:                                              ; preds = %158, %154, %130
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node.160", %"struct.std::__1::__hash_node.160"* %82, i64 0, i32 0
  %166 = load i64, i64* %89, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %89, align 8
  br label %168

168:                                              ; preds = %63, %164
  %169 = phi i8 [ 1, %164 ], [ 0, %63 ]
  %170 = phi %"struct.std::__1::__hash_node_base.68"* [ %165, %164 ], [ %46, %63 ]
  %171 = insertvalue { %"struct.std::__1::__hash_node_base.68"*, i8 } undef, %"struct.std::__1::__hash_node_base.68"* %170, 0
  %172 = insertvalue { %"struct.std::__1::__hash_node_base.68"*, i8 } %171, i8 %169, 1
  ret { %"struct.std::__1::__hash_node_base.68"*, i8 } %172
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.64"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !50
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.64"* %0, i64 %10) #17
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !50
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !50
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.64"* %0, i64 %42) #17
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.64"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %115, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #16
  %11 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %10, align 8
  %12 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #16, !alias.scope !129
  %15 = shl i64 %1, 3
  %16 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %17 = bitcast i8* %16 to i16*
  store i16 1280, i16* %17, align 8, !alias.scope !129
  store i64 %15, i64* %13, align 8, !alias.scope !129
  store i64 8, i64* %14, align 8, !alias.scope !129
  %18 = bitcast %"class.marl::Allocator"* %11 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %19 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, i64 2
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %20, align 8
  call void %21(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %11, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %22 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.68"***
  %23 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetIPSB_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESL_(%"class.std::__1::unique_ptr.65"* %5, %"struct.std::__1::__hash_node_base.68"** %23) #15
  %24 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.70", %"class.std::__1::__bucket_list_deallocator.70"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %31

26:                                               ; preds = %31
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.68"* %29, null
  br i1 %30, label %117, label %37

31:                                               ; preds = %31, %8
  %32 = phi i64 [ 0, %8 ], [ %35, %31 ]
  %33 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %25, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %33, i64 %32
  store %"struct.std::__1::__hash_node_base.68"* null, %"struct.std::__1::__hash_node_base.68"** %34, align 8
  %35 = add nuw i64 %32, 1
  %36 = icmp eq i64 %35, %1
  br i1 %36, label %26, label %31

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %29, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.68"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = call i64 @llvm.ctpop.i64(i64 %1) #16, !range !50
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = add i64 %1, -1
  %45 = and i64 %40, %44
  br label %50

46:                                               ; preds = %37
  %47 = icmp ult i64 %40, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %40, %1
  br label %50

50:                                               ; preds = %43, %46, %48
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %40, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::__hash_table.64", %"class.std::__1::__hash_table.64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base.68"* %27, %"struct.std::__1::__hash_node_base.68"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %29, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.68"* %56, null
  br i1 %57, label %117, label %58

58:                                               ; preds = %50
  %59 = add i64 %1, -1
  br label %60

60:                                               ; preds = %58, %109
  %61 = phi %"struct.std::__1::__hash_node_base.68"* [ %56, %58 ], [ %113, %109 ]
  %62 = phi i64 [ %51, %58 ], [ %111, %109 ]
  %63 = phi %"struct.std::__1::__hash_node_base.68"* [ %29, %58 ], [ %110, %109 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %61, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base.68"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  br i1 %42, label %69, label %67

67:                                               ; preds = %60
  %68 = and i64 %66, %59
  br label %73

69:                                               ; preds = %60
  %70 = icmp ult i64 %66, %1
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = urem i64 %66, %1
  br label %73

73:                                               ; preds = %67, %69, %71
  %74 = phi i64 [ %68, %67 ], [ %72, %71 ], [ %66, %69 ]
  %75 = icmp eq i64 %74, %62
  br i1 %75, label %109, label %76

76:                                               ; preds = %73
  %77 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %52, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %77, i64 %74
  %79 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.68"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %61, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base.68"* %82 to %"class.marl::Scheduler::Fiber"**
  br label %85

84:                                               ; preds = %76
  store %"struct.std::__1::__hash_node_base.68"* %63, %"struct.std::__1::__hash_node_base.68"** %78, align 8
  br label %109

85:                                               ; preds = %81, %90
  %86 = phi %"struct.std::__1::__hash_node_base.68"* [ %88, %90 ], [ %61, %81 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.68"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %88, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base.68"* %91 to %"class.marl::Scheduler::Fiber"**
  %93 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %83, align 8
  %94 = load %"class.marl::Scheduler::Fiber"*, %"class.marl::Scheduler::Fiber"** %92, align 8
  %95 = icmp eq %"class.marl::Scheduler::Fiber"* %93, %94
  br i1 %95, label %85, label %96

96:                                               ; preds = %85, %90
  %97 = ptrtoint %"struct.std::__1::__hash_node_base.68"* %88 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base.68"* %86 to i64*
  %99 = bitcast %"struct.std::__1::__hash_node_base.68"* %63 to i64*
  store i64 %97, i64* %99, align 8
  %100 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %52, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %100, i64 %74
  %102 = bitcast %"struct.std::__1::__hash_node_base.68"** %101 to i64**
  %103 = load i64*, i64** %102, align 8
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %98, align 8
  %105 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %52, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %105, i64 %74
  %107 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %107, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.68"* %61, %"struct.std::__1::__hash_node_base.68"** %108, align 8
  br label %109

109:                                              ; preds = %73, %96, %84
  %110 = phi %"struct.std::__1::__hash_node_base.68"* [ %61, %84 ], [ %63, %96 ], [ %61, %73 ]
  %111 = phi i64 [ %74, %84 ], [ %62, %96 ], [ %62, %73 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.68", %"struct.std::__1::__hash_node_base.68"* %110, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.68"*, %"struct.std::__1::__hash_node_base.68"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.68"* %113, null
  br i1 %114, label %117, label %60

115:                                              ; preds = %2
  tail call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetIPSB_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESL_(%"class.std::__1::unique_ptr.65"* %5, %"struct.std::__1::__hash_node_base.68"** null) #15
  %116 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.70", %"class.std::__1::__bucket_list_deallocator.70"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %116, align 8
  br label %117

117:                                              ; preds = %109, %50, %26, %115
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIPN4marl9Scheduler5FiberEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISB_EEEEE5resetIPSB_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESL_(%"class.std::__1::unique_ptr.65"*, %"struct.std::__1::__hash_node_base.68"**) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.68"**, %"struct.std::__1::__hash_node_base.68"*** %4, align 8
  store %"struct.std::__1::__hash_node_base.68"** %1, %"struct.std::__1::__hash_node_base.68"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.68"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base.68"***
  store %"struct.std::__1::__hash_node_base.68"** %5, %"struct.std::__1::__hash_node_base.68"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4marl9Scheduler6Worker17createWorkerFiberEvE3$_5S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #5 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.marl::Scheduler::Worker"**
  %3 = load %"class.marl::Scheduler::Worker"*, %"class.marl::Scheduler::Worker"** %2, align 8
  tail call void @_ZN4marl9Scheduler6Worker3runEv(%"class.marl::Scheduler::Worker"* %3) #15
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind optsize readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind optsize }
attributes #16 = { nounwind }
attributes #17 = { optsize }
attributes #18 = { nounwind optsize readnone }
attributes #19 = { noreturn optsize }
attributes #20 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4marl9Allocator13make_unique_nINS_9Scheduler6WorkerEJPS2_NS3_4ModeEiEEENSt3__110unique_ptrIT_NS0_7DeleterEEEmDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN4marl9Allocator13make_unique_nINS_9Scheduler6WorkerEJPS2_NS3_4ModeEiEEENSt3__110unique_ptrIT_NS0_7DeleterEEEmDpOT0_"}
!5 = distinct !{!5, !6, !"_ZN4marl9Allocator11make_uniqueINS_9Scheduler6WorkerEJPS2_NS3_4ModeEiEEENSt3__110unique_ptrIT_NS0_7DeleterEEEDpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZN4marl9Allocator11make_uniqueINS_9Scheduler6WorkerEJPS2_NS3_4ModeEiEEENSt3__110unique_ptrIT_NS0_7DeleterEEEDpOT0_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN12_GLOBAL__N_117setConfigDefaultsERKN4marl9Scheduler6ConfigE: argument 0"}
!9 = distinct !{!9, !"_ZN12_GLOBAL__N_117setConfigDefaultsERKN4marl9Scheduler6ConfigE"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN4marl10containers4takeINS_4TaskEEET_RNSt3__15dequeIS3_NS_12StlAllocatorIS3_EEEE: argument 0"}
!13 = distinct !{!13, !"_ZN4marl10containers4takeINS_4TaskEEET_RNSt3__15dequeIS3_NS_12StlAllocatorIS3_EEEE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4marl7OSFiber11createFiberEPNS_9AllocatorEmRKNSt3__18functionIFvvEEE: argument 0"}
!16 = distinct !{!16, !"_ZN4marl7OSFiber11createFiberEPNS_9AllocatorEmRKNSt3__18functionIFvvEEE"}
!17 = !{!18, !20, !15}
!18 = distinct !{!18, !19, !"_ZN4marl9Allocator13make_unique_nINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEmDpOT0_: argument 0"}
!19 = distinct !{!19, !"_ZN4marl9Allocator13make_unique_nINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEmDpOT0_"}
!20 = distinct !{!20, !21, !"_ZN4marl9Allocator11make_uniqueINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEDpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZN4marl9Allocator11make_uniqueINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEDpOT0_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4marl9Allocator13make_unique_nINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEmDpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZN4marl9Allocator13make_unique_nINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEmDpOT0_"}
!25 = distinct !{!25, !26, !"_ZN4marl9Allocator11make_uniqueINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEDpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN4marl9Allocator11make_uniqueINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEDpOT0_"}
!27 = !{!28, !30, !32}
!28 = distinct !{!28, !29, !"_ZN4marl9Allocator13make_unique_nINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEmDpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN4marl9Allocator13make_unique_nINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEmDpOT0_"}
!30 = distinct !{!30, !31, !"_ZN4marl9Allocator11make_uniqueINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEDpOT0_: argument 0"}
!31 = distinct !{!31, !"_ZN4marl9Allocator11make_uniqueINS_7OSFiberEJRPS0_EEENSt3__110unique_ptrIT_NS0_7DeleterEEEDpOT0_"}
!32 = distinct !{!32, !33, !"_ZN4marl7OSFiber28createFiberFromCurrentThreadEPNS_9AllocatorE: argument 0"}
!33 = distinct !{!33, !"_ZN4marl7OSFiber28createFiberFromCurrentThreadEPNS_9AllocatorE"}
!34 = !{!32}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4marl9Allocator13make_unique_nINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEmDpOT0_: argument 0"}
!37 = distinct !{!37, !"_ZN4marl9Allocator13make_unique_nINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEmDpOT0_"}
!38 = distinct !{!38, !39, !"_ZN4marl9Allocator11make_uniqueINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEDpOT0_: argument 0"}
!39 = distinct !{!39, !"_ZN4marl9Allocator11make_uniqueINS_9Scheduler5FiberEJNSt3__110unique_ptrINS_7OSFiberENS0_7DeleterEEERjEEENS5_IT_S7_EEDpOT0_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN4marl10containers4takeINS_4TaskEEET_RNSt3__15dequeIS3_NS_12StlAllocatorIS3_EEEE: argument 0"}
!42 = distinct !{!42, !"_ZN4marl10containers4takeINS_4TaskEEET_RNSt3__15dequeIS3_NS_12StlAllocatorIS3_EEEE"}
!43 = !{i32 1949}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16__treeIN4marl9Scheduler13WaitingFibers7TimeoutENS_4lessIS4_EENS1_12StlAllocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK4marl12StlAllocatorINSt3__111__tree_nodeINS_9Scheduler13WaitingFibers7TimeoutEPvEEE7requestEm: argument 0"}
!49 = distinct !{!49, !"_ZNK4marl12StlAllocatorINSt3__111__tree_nodeINS_9Scheduler13WaitingFibers7TimeoutEPvEEE7requestEm"}
!50 = !{i64 0, i64 65}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE21__construct_node_hashIRS5_JRKSD_EEENS_10unique_ptrINS_11__hash_nodeISE_PvEENS_22__hash_node_destructorINSN_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN4marl9Scheduler5FiberENS_6chrono10time_pointINS6_12system_clockENS6_8durationIxNS_5ratioILl1ELl1000000EEEEEEEEENS_22__unordered_map_hasherIS5_SE_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SE_SJ_SH_Lb1EEENS2_12StlAllocatorISE_EEE21__construct_node_hashIRS5_JRKSD_EEENS_10unique_ptrINS_11__hash_nodeISE_PvEENS_22__hash_node_destructorINSN_ISX_EEEEEEmOT_DpOT0_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeINS1_17__hash_value_typeIPNS_9Scheduler5FiberENS1_6chrono10time_pointINS7_12system_clockENS7_8durationIxNS1_5ratioILl1ELl1000000EEEEEEEEEPvEEE7requestEm: argument 0"}
!56 = distinct !{!56, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeINS1_17__hash_value_typeIPNS_9Scheduler5FiberENS1_6chrono10time_pointINS7_12system_clockENS7_8durationIxNS1_5ratioILl1ELl1000000EEEEEEEEEPvEEE7requestEm"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeINS1_17__hash_value_typeIPNS_9Scheduler5FiberENS1_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS1_5ratioILl1ELl1000000EEEEEEEEEPvEEEEE7requestEm: argument 0"}
!59 = distinct !{!59, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeINS1_17__hash_value_typeIPNS_9Scheduler5FiberENS1_6chrono10time_pointINS8_12system_clockENS8_8durationIxNS1_5ratioILl1ELl1000000EEEEEEEEEPvEEEEE7requestEm"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE21__construct_node_hashIRS2_JS9_EEENS3_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_11__thread_idENS_10unique_ptrIN4marl9Scheduler6WorkerENS4_9Allocator7DeleterEEEEENS_22__unordered_map_hasherIS2_SA_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_SA_SF_SD_Lb1EEENS4_12StlAllocatorISA_EEE21__construct_node_hashIRS2_JS9_EEENS3_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISQ_EEEEEEmOT_DpOT0_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeINS1_17__hash_value_typeINS1_11__thread_idENS1_10unique_ptrINS_9Scheduler6WorkerENS_9Allocator7DeleterEEEEEPvEEE7requestEm: argument 0"}
!65 = distinct !{!65, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeINS1_17__hash_value_typeINS1_11__thread_idENS1_10unique_ptrINS_9Scheduler6WorkerENS_9Allocator7DeleterEEEEEPvEEE7requestEm"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeINS1_17__hash_value_typeINS1_11__thread_idENS1_10unique_ptrINS_9Scheduler6WorkerENS_9Allocator7DeleterEEEEEPvEEEEE7requestEm: argument 0"}
!68 = distinct !{!68, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeINS1_17__hash_value_typeINS1_11__thread_idENS1_10unique_ptrINS_9Scheduler6WorkerENS_9Allocator7DeleterEEEEEPvEEEEE7requestEm"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK4marl12StlAllocatorIPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!71 = distinct !{!71, !"_ZNK4marl12StlAllocatorIPNS_9Scheduler5FiberEE7requestEm"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK4marl12StlAllocatorIPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!74 = distinct !{!74, !"_ZNK4marl12StlAllocatorIPNS_9Scheduler5FiberEE7requestEm"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!77 = distinct !{!77, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK4marl12StlAllocatorIPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!80 = distinct !{!80, !"_ZNK4marl12StlAllocatorIPNS_9Scheduler5FiberEE7requestEm"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!83 = distinct !{!83, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!86 = distinct !{!86, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!89 = distinct !{!89, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!92 = distinct !{!92, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm: argument 0"}
!95 = distinct !{!95, !"_ZNK4marl12StlAllocatorIPPNS_9Scheduler5FiberEE7requestEm"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK4marl12StlAllocatorINS_4TaskEE7requestEm: argument 0"}
!98 = distinct !{!98, !"_ZNK4marl12StlAllocatorINS_4TaskEE7requestEm"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK4marl12StlAllocatorINS_4TaskEE7requestEm: argument 0"}
!101 = distinct !{!101, !"_ZNK4marl12StlAllocatorINS_4TaskEE7requestEm"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm: argument 0"}
!104 = distinct !{!104, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK4marl12StlAllocatorINS_4TaskEE7requestEm: argument 0"}
!107 = distinct !{!107, !"_ZNK4marl12StlAllocatorINS_4TaskEE7requestEm"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm: argument 0"}
!110 = distinct !{!110, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm: argument 0"}
!113 = distinct !{!113, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm: argument 0"}
!116 = distinct !{!116, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm: argument 0"}
!119 = distinct !{!119, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm: argument 0"}
!122 = distinct !{!122, !"_ZNK4marl12StlAllocatorIPNS_4TaskEE7requestEm"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE21__construct_node_hashIRS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!125 = distinct !{!125, !"_ZNSt3__112__hash_tableIPN4marl9Scheduler5FiberENS_4hashIS4_EENS_8equal_toIS4_EENS1_12StlAllocatorIS4_EEE21__construct_node_hashIRS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISH_EEEEEEmOT_DpOT0_"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeIPNS_9Scheduler5FiberEPvEEE7requestEm: argument 0"}
!128 = distinct !{!128, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeIPNS_9Scheduler5FiberEPvEEE7requestEm"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeIPNS_9Scheduler5FiberEPvEEEEE7requestEm: argument 0"}
!131 = distinct !{!131, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeIPNS_9Scheduler5FiberEPvEEEEE7requestEm"}
