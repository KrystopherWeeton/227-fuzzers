; ModuleID = '../../ui/base/metadata/base_type_conversion.cc'
source_filename = "../../ui/base/metadata/base_type_conversion.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.std::__1::array.154" = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i32, %"class.base::BasicStringPiece.23" }
%"class.base::BasicStringPiece.23" = type { i16*, i64 }
%"struct.std::__1::array.162" = type { [3 x %"struct.std::__1::pair.163"] }
%"struct.std::__1::pair.163" = type { i32, %"class.base::BasicStringPiece.23" }
%"struct.std::__1::array.173" = type { [7 x %"struct.std::__1::pair.174"] }
%"struct.std::__1::pair.174" = type { i32, %"class.base::BasicStringPiece.23" }
%"struct.std::__1::array.184" = type { [7 x %"struct.std::__1::pair.185"] }
%"struct.std::__1::pair.185" = type { i32, %"class.base::BasicStringPiece.23" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.6" }
%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.10 }
%struct.anon.10 = type { i8 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Range" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.17" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.gfx::ShadowValue"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %"class.base::FilePath" }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"class.gfx::Insets" }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.base::BasicStringPiece.23"* }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, %union.anon.105 }
%union.anon.105 = type { %"class.gfx::Point" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.gfx::Range" }
%"class.absl::optional.116" = type { %"class.absl::optional_internal::optional_data.117" }
%"class.absl::optional_internal::optional_data.117" = type { %"class.absl::optional_internal::optional_data_base.118" }
%"class.absl::optional_internal::optional_data_base.118" = type { %"class.absl::optional_internal::optional_data_dtor_base.119" }
%"class.absl::optional_internal::optional_data_dtor_base.119" = type { i8, %union.anon.120 }
%union.anon.120 = type { %"class.gfx::Rect" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"class.gfx::Size" }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.gfx::RectF" }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.std::__1::vector.15" }
%"class.std::__1::__wrap_iter.142" = type { i16* }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.std::__1::basic_string.6" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"struct.url::Component" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.153" }
%"class.base::internal::flat_tree.153" = type { %"struct.std::__1::array.154" }
%"class.base::flat_map.171" = type { %"class.base::internal::flat_tree.172" }
%"class.base::internal::flat_tree.172" = type { %"struct.std::__1::array.173" }
%"class.base::flat_map.182" = type { %"class.base::internal::flat_tree.183" }
%"class.base::internal::flat_tree.183" = type { %"struct.std::__1::array.184" }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs = comdat any

$_ZN4base6ranges4findIRKNS_8flat_mapIN3gfx19HorizontalAlignmentENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm4EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_ = comdat any

$_ZN4base6ranges4findIRKNS_8flat_mapIN3gfx13ElideBehaviorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm7EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_ = comdat any

$_ZN4base6ranges4findIRKNS_8flat_mapIN2ui17MenuSeparatorTypeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm7EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv = comdat any

$_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap = comdat any

$_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap = comdat any

$_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap = comdat any

$_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap = comdat any

@_ZN2ui8metadata9kNoPrefixE = hidden local_unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN2ui8metadata14kSkColorPrefixE = hidden local_unnamed_addr constant [3 x i8] c"--\00", align 1
@.str = private unnamed_addr constant [11 x i16] [i16 40, i16 97, i16 115, i16 115, i16 105, i16 103, i16 110, i16 101, i16 100, i16 41, i16 0], align 2
@.str.1 = private unnamed_addr constant [15 x i16] [i16 40, i16 110, i16 111, i16 116, i16 32, i16 97, i16 115, i16 115, i16 105, i16 103, i16 110, i16 101, i16 100, i16 41, i16 0], align 2
@_ZZN2ui8metadata13GetNullOptStrEvE11kNullOptStr = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN2ui8metadata13GetNullOptStrEvE11kNullOptStr = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [5 x i16] [i16 116, i16 114, i16 117, i16 101, i16 0], align 2
@.str.4 = private unnamed_addr constant [6 x i16] [i16 102, i16 97, i16 108, i16 115, i16 101, i16 0], align 2
@.str.5 = private unnamed_addr constant [2 x i16] [i16 115, i16 0], align 2
@.str.7 = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2
@.str.8 = private unnamed_addr constant [2 x i16] [i16 59, i16 0], align 2
@.str.9 = private unnamed_addr constant [2 x i16] [i16 93, i16 0], align 2
@.str.10 = private unnamed_addr constant [8 x i8] c"{%d,%d}\00", align 1
@.str.11 = private unnamed_addr constant [2 x i16] [i16 44, i16 0], align 2
@.str.12 = private unnamed_addr constant [4 x i16] [i16 123, i16 44, i16 125, i16 0], align 2
@.str.13 = private unnamed_addr constant [4 x i16] [i16 91, i16 59, i16 93, i16 0], align 2
@.str.17 = private unnamed_addr constant [2 x i16] [i16 120, i16 0], align 2
@.str.18 = private unnamed_addr constant [4 x i16] [i16 104, i16 115, i16 108, i16 0], align 2
@.str.20 = private unnamed_addr constant [4 x i16] [i16 114, i16 103, i16 98, i16 0], align 2
@.str.22 = private unnamed_addr constant [3 x i16] [i16 48, i16 120, i16 0], align 2
@.str.23 = private unnamed_addr constant [8 x i16] [i16 40, i16 37, i16 41, i16 104, i16 115, i16 108, i16 97, i16 0], align 2
@.str.24 = private unnamed_addr constant [3 x i16] [i16 44, i16 32, i16 0], align 2
@.str.25 = private unnamed_addr constant [7 x i16] [i16 40, i16 41, i16 114, i16 103, i16 98, i16 97, i16 0], align 2
@.str.26 = private unnamed_addr constant [4 x i16] [i16 49, i16 46, i16 48, i16 0], align 2
@.str.27 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap = linkonce_odr hidden constant { %"struct.std::__1::array.154" } { %"struct.std::__1::array.154" { [4 x %"struct.std::__1::pair"] [%"struct.std::__1::pair" { i32 0, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([11 x i16], [11 x i16]* @.str.29, i32 0, i32 0), i64 10 } }, %"struct.std::__1::pair" { i32 1, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([13 x i16], [13 x i16]* @.str.30, i32 0, i32 0), i64 12 } }, %"struct.std::__1::pair" { i32 2, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([12 x i16], [12 x i16]* @.str.31, i32 0, i32 0), i64 11 } }, %"struct.std::__1::pair" { i32 3, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([14 x i16], [14 x i16]* @.str.32, i32 0, i32 0), i64 13 } }] } }, comdat, align 8
@.str.29 = private unnamed_addr constant [11 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 76, i16 69, i16 70, i16 84, i16 0], align 2
@.str.30 = private unnamed_addr constant [13 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 67, i16 69, i16 78, i16 84, i16 69, i16 82, i16 0], align 2
@.str.31 = private unnamed_addr constant [12 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 82, i16 73, i16 71, i16 72, i16 84, i16 0], align 2
@.str.32 = private unnamed_addr constant [14 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 84, i16 79, i16 95, i16 72, i16 69, i16 65, i16 68, i16 0], align 2
@_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap = linkonce_odr hidden constant { %"struct.std::__1::array.162" } { %"struct.std::__1::array.162" { [3 x %"struct.std::__1::pair.163"] [%"struct.std::__1::pair.163" { i32 0, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([10 x i16], [10 x i16]* @.str.34, i32 0, i32 0), i64 9 } }, %"struct.std::__1::pair.163" { i32 1, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([13 x i16], [13 x i16]* @.str.35, i32 0, i32 0), i64 12 } }, %"struct.std::__1::pair.163" { i32 2, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([13 x i16], [13 x i16]* @.str.36, i32 0, i32 0), i64 12 } }] } }, comdat, align 8
@.str.34 = private unnamed_addr constant [10 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 84, i16 79, i16 80, i16 0], align 2
@.str.35 = private unnamed_addr constant [13 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 77, i16 73, i16 68, i16 68, i16 76, i16 69, i16 0], align 2
@.str.36 = private unnamed_addr constant [13 x i16] [i16 65, i16 76, i16 73, i16 71, i16 78, i16 95, i16 66, i16 79, i16 84, i16 84, i16 79, i16 77, i16 0], align 2
@_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap = linkonce_odr hidden constant { %"struct.std::__1::array.173" } { %"struct.std::__1::array.173" { [7 x %"struct.std::__1::pair.174"] [%"struct.std::__1::pair.174" { i32 0, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([9 x i16], [9 x i16]* @.str.37, i32 0, i32 0), i64 8 } }, %"struct.std::__1::pair.174" { i32 1, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([9 x i16], [9 x i16]* @.str.38, i32 0, i32 0), i64 8 } }, %"struct.std::__1::pair.174" { i32 2, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([11 x i16], [11 x i16]* @.str.39, i32 0, i32 0), i64 10 } }, %"struct.std::__1::pair.174" { i32 3, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([13 x i16], [13 x i16]* @.str.40, i32 0, i32 0), i64 12 } }, %"struct.std::__1::pair.174" { i32 4, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([11 x i16], [11 x i16]* @.str.41, i32 0, i32 0), i64 10 } }, %"struct.std::__1::pair.174" { i32 5, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([12 x i16], [12 x i16]* @.str.42, i32 0, i32 0), i64 11 } }, %"struct.std::__1::pair.174" { i32 6, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([10 x i16], [10 x i16]* @.str.43, i32 0, i32 0), i64 9 } }] } }, comdat, align 8
@.str.37 = private unnamed_addr constant [9 x i16] [i16 78, i16 79, i16 95, i16 69, i16 76, i16 73, i16 68, i16 69, i16 0], align 2
@.str.38 = private unnamed_addr constant [9 x i16] [i16 84, i16 82, i16 85, i16 78, i16 67, i16 65, i16 84, i16 69, i16 0], align 2
@.str.39 = private unnamed_addr constant [11 x i16] [i16 69, i16 76, i16 73, i16 68, i16 69, i16 95, i16 72, i16 69, i16 65, i16 68, i16 0], align 2
@.str.40 = private unnamed_addr constant [13 x i16] [i16 69, i16 76, i16 73, i16 68, i16 69, i16 95, i16 77, i16 73, i16 68, i16 68, i16 76, i16 69, i16 0], align 2
@.str.41 = private unnamed_addr constant [11 x i16] [i16 69, i16 76, i16 73, i16 68, i16 69, i16 95, i16 84, i16 65, i16 73, i16 76, i16 0], align 2
@.str.42 = private unnamed_addr constant [12 x i16] [i16 69, i16 76, i16 73, i16 68, i16 69, i16 95, i16 69, i16 77, i16 65, i16 73, i16 76, i16 0], align 2
@.str.43 = private unnamed_addr constant [10 x i16] [i16 70, i16 65, i16 68, i16 69, i16 95, i16 84, i16 65, i16 73, i16 76, i16 0], align 2
@_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap = linkonce_odr hidden constant { %"struct.std::__1::array.184" } { %"struct.std::__1::array.184" { [7 x %"struct.std::__1::pair.185"] [%"struct.std::__1::pair.185" { i32 0, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([17 x i16], [17 x i16]* @.str.44, i32 0, i32 0), i64 16 } }, %"struct.std::__1::pair.185" { i32 1, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([17 x i16], [17 x i16]* @.str.45, i32 0, i32 0), i64 16 } }, %"struct.std::__1::pair.185" { i32 2, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([16 x i16], [16 x i16]* @.str.46, i32 0, i32 0), i64 15 } }, %"struct.std::__1::pair.185" { i32 3, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([16 x i16], [16 x i16]* @.str.47, i32 0, i32 0), i64 15 } }, %"struct.std::__1::pair.185" { i32 4, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([18 x i16], [18 x i16]* @.str.48, i32 0, i32 0), i64 17 } }, %"struct.std::__1::pair.185" { i32 5, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([19 x i16], [19 x i16]* @.str.49, i32 0, i32 0), i64 18 } }, %"struct.std::__1::pair.185" { i32 6, %"class.base::BasicStringPiece.23" { i16* getelementptr inbounds ([17 x i16], [17 x i16]* @.str.50, i32 0, i32 0), i64 16 } }] } }, comdat, align 8
@.str.44 = private unnamed_addr constant [17 x i16] [i16 78, i16 79, i16 82, i16 77, i16 65, i16 76, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2
@.str.45 = private unnamed_addr constant [17 x i16] [i16 68, i16 79, i16 85, i16 66, i16 76, i16 69, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2
@.str.46 = private unnamed_addr constant [16 x i16] [i16 85, i16 80, i16 80, i16 69, i16 82, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2
@.str.47 = private unnamed_addr constant [16 x i16] [i16 76, i16 79, i16 87, i16 69, i16 82, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2
@.str.48 = private unnamed_addr constant [18 x i16] [i16 83, i16 80, i16 65, i16 67, i16 73, i16 78, i16 71, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2
@.str.49 = private unnamed_addr constant [19 x i16] [i16 86, i16 69, i16 82, i16 84, i16 73, i16 67, i16 65, i16 76, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2
@.str.50 = private unnamed_addr constant [17 x i16] [i16 80, i16 65, i16 68, i16 68, i16 69, i16 68, i16 95, i16 83, i16 69, i16 80, i16 65, i16 82, i16 65, i16 84, i16 79, i16 82, i16 0], align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata15PointerToStringEPKv(%"class.std::__1::basic_string"* noalias sret, i8* readnone) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  %4 = select i1 %3, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @.str.1, i64 0, i64 0), i16* getelementptr inbounds ([11 x i16], [11 x i16]* @.str, i64 0, i64 0)
  %5 = load i16, i16* %4, align 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  store i8 0, i8* %9, align 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %197

11:                                               ; preds = %2, %11
  %12 = phi i64 [ %14, %11 ], [ 0, %2 ]
  %13 = phi i16* [ %15, %11 ], [ %4, %2 ]
  %14 = add i64 %12, 1
  %15 = getelementptr inbounds i16, i16* %13, i64 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %11

18:                                               ; preds = %11
  %19 = icmp ugt i64 %14, 9223372036854775791
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %21) #14
  unreachable

22:                                               ; preds = %18
  %23 = icmp ult i64 %14, 11
  br i1 %23, label %37, label %24

24:                                               ; preds = %22
  %25 = add nuw nsw i64 %12, 9
  %26 = and i64 %25, -8
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %24
  %30 = shl i64 %26, 1
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = bitcast i8* %31 to i16*
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %31, i8** %33, align 8
  %34 = or i64 %26, -9223372036854775808
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %36, align 8
  br label %43

37:                                               ; preds = %22
  %38 = trunc i64 %14 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %42 = icmp eq i64 %14, 0
  br i1 %42, label %197, label %43

43:                                               ; preds = %37, %29
  %44 = phi i16* [ %32, %29 ], [ %41, %37 ]
  store i16 %5, i16* %44, align 2
  %45 = getelementptr inbounds i16, i16* %4, i64 1
  %46 = icmp eq i64 %12, 0
  br i1 %46, label %197, label %47

47:                                               ; preds = %43
  %48 = icmp ult i64 %12, 16
  br i1 %48, label %144, label %49

49:                                               ; preds = %47
  %50 = getelementptr i16, i16* %44, i64 1
  %51 = getelementptr i16, i16* %44, i64 %14
  %52 = getelementptr i16, i16* %4, i64 %14
  %53 = icmp ult i16* %50, %52
  %54 = icmp ult i16* %45, %51
  %55 = and i1 %53, %54
  br i1 %55, label %144, label %56

56:                                               ; preds = %49
  %57 = and i64 %12, -16
  %58 = getelementptr i16, i16* %45, i64 %57
  %59 = sub i64 %12, %57
  %60 = getelementptr i16, i16* %44, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %121, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  %68 = getelementptr i16, i16* %44, i64 1
  %69 = getelementptr i16, i16* %44, i64 1
  %70 = getelementptr i16, i16* %44, i64 1
  %71 = getelementptr i16, i16* %44, i64 1
  br label %72

72:                                               ; preds = %72, %66
  %73 = phi i64 [ 0, %66 ], [ %118, %72 ]
  %74 = phi i64 [ %67, %66 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %45, i64 %73
  %76 = getelementptr inbounds i16, i16* %68, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !2
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !2
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !5, !noalias !2
  %83 = getelementptr inbounds i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %45, i64 %85
  %87 = getelementptr inbounds i16, i16* %69, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !2
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !2
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !5, !noalias !2
  %94 = getelementptr inbounds i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %45, i64 %96
  %98 = getelementptr inbounds i16, i16* %70, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !2
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !2
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !5, !noalias !2
  %105 = getelementptr inbounds i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %45, i64 %107
  %109 = getelementptr inbounds i16, i16* %71, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !2
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !5, !noalias !2
  %116 = getelementptr inbounds i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !5, !noalias !2
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !7

121:                                              ; preds = %72, %56
  %122 = phi i64 [ 0, %56 ], [ %118, %72 ]
  %123 = icmp eq i64 %64, 0
  br i1 %123, label %142, label %124

124:                                              ; preds = %121
  %125 = getelementptr i16, i16* %44, i64 1
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ %122, %124 ], [ %139, %126 ]
  %128 = phi i64 [ %64, %124 ], [ %140, %126 ]
  %129 = getelementptr i16, i16* %45, i64 %127
  %130 = getelementptr inbounds i16, i16* %125, i64 %127
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !2
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !2
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !5, !noalias !2
  %137 = getelementptr inbounds i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = add i64 %127, 16
  %140 = add i64 %128, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %126, !llvm.loop !9

142:                                              ; preds = %126, %121
  %143 = icmp eq i64 %12, %57
  br i1 %143, label %197, label %144

144:                                              ; preds = %142, %49, %47
  %145 = phi i16* [ %45, %49 ], [ %45, %47 ], [ %58, %142 ]
  %146 = phi i64 [ %12, %49 ], [ %12, %47 ], [ %59, %142 ]
  %147 = phi i16* [ %44, %49 ], [ %44, %47 ], [ %60, %142 ]
  %148 = add i64 %146, -1
  %149 = and i64 %146, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %162, label %151

151:                                              ; preds = %144, %151
  %152 = phi i16* [ %159, %151 ], [ %145, %144 ]
  %153 = phi i64 [ %158, %151 ], [ %146, %144 ]
  %154 = phi i16* [ %156, %151 ], [ %147, %144 ]
  %155 = phi i64 [ %160, %151 ], [ %149, %144 ]
  %156 = getelementptr inbounds i16, i16* %154, i64 1
  %157 = load i16, i16* %152, align 2
  store i16 %157, i16* %156, align 2
  %158 = add i64 %153, -1
  %159 = getelementptr inbounds i16, i16* %152, i64 1
  %160 = add i64 %155, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %151, !llvm.loop !11

162:                                              ; preds = %151, %144
  %163 = phi i16* [ %145, %144 ], [ %159, %151 ]
  %164 = phi i64 [ %146, %144 ], [ %158, %151 ]
  %165 = phi i16* [ %147, %144 ], [ %156, %151 ]
  %166 = icmp ult i64 %148, 7
  br i1 %166, label %197, label %167

167:                                              ; preds = %162, %167
  %168 = phi i16* [ %195, %167 ], [ %163, %162 ]
  %169 = phi i64 [ %194, %167 ], [ %164, %162 ]
  %170 = phi i16* [ %192, %167 ], [ %165, %162 ]
  %171 = getelementptr inbounds i16, i16* %170, i64 1
  %172 = load i16, i16* %168, align 2
  store i16 %172, i16* %171, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 1
  %174 = getelementptr inbounds i16, i16* %170, i64 2
  %175 = load i16, i16* %173, align 2
  store i16 %175, i16* %174, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 2
  %177 = getelementptr inbounds i16, i16* %170, i64 3
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 3
  %180 = getelementptr inbounds i16, i16* %170, i64 4
  %181 = load i16, i16* %179, align 2
  store i16 %181, i16* %180, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 4
  %183 = getelementptr inbounds i16, i16* %170, i64 5
  %184 = load i16, i16* %182, align 2
  store i16 %184, i16* %183, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 5
  %186 = getelementptr inbounds i16, i16* %170, i64 6
  %187 = load i16, i16* %185, align 2
  store i16 %187, i16* %186, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 6
  %189 = getelementptr inbounds i16, i16* %170, i64 7
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %168, i64 7
  %192 = getelementptr inbounds i16, i16* %170, i64 8
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = add i64 %169, -8
  %195 = getelementptr inbounds i16, i16* %168, i64 8
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %197, label %167, !llvm.loop !12

197:                                              ; preds = %162, %167, %43, %142, %7, %37
  %198 = phi i64 [ 0, %37 ], [ 0, %7 ], [ %14, %142 ], [ %14, %43 ], [ %14, %167 ], [ %14, %162 ]
  %199 = phi i16* [ %41, %37 ], [ %10, %7 ], [ %44, %142 ], [ %44, %43 ], [ %44, %167 ], [ %44, %162 ]
  %200 = getelementptr inbounds i16, i16* %199, i64 %198
  store i16 0, i16* %200, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN2ui8metadata13GetNullOptStrEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui8metadata13GetNullOptStrEvE11kNullOptStr to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %8, !prof !13

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui8metadata13GetNullOptStrEvE11kNullOptStr) #16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  store i8 7, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2ui8metadata13GetNullOptStrEvE11kNullOptStr, i64 0, i32 0, i64 23), align 1
  store <8 x i16> <i16 60, i16 69, i16 109, i16 112, i16 116, i16 121, i16 62, i16 0>, <8 x i16>* bitcast (%"class.base::NoDestructor"* @_ZZN2ui8metadata13GetNullOptStrEvE11kNullOptStr to <8 x i16>*), align 16
  %7 = tail call {}* @llvm.invariant.start.p0i8(i64 24, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN2ui8metadata13GetNullOptStrEvE11kNullOptStr, i64 0, i32 0, i64 0))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui8metadata13GetNullOptStrEvE11kNullOptStr) #16
  br label %8

8:                                                ; preds = %3, %6, %0
  ret %"class.std::__1::basic_string"* bitcast (%"class.base::NoDestructor"* @_ZZN2ui8metadata13GetNullOptStrEvE11kNullOptStr to %"class.std::__1::basic_string"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIaE8ToStringEa(%"class.std::__1::basic_string"* noalias sret, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = sext i8 %1 to i32
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret %0, i32 %3) #16
  ret void
}

declare void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIsE8ToStringEs(%"class.std::__1::basic_string"* noalias sret, i16 signext) local_unnamed_addr #0 align 2 {
  %3 = sext i16 %1 to i32
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret %0, i32 %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIiE8ToStringEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret %0, i32 %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIlE8ToStringEl(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string"* sret %0, i64 %1) #16
  ret void
}

declare void @_ZN4base16NumberToString16El(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIhE8ToStringEh(%"class.std::__1::basic_string"* noalias sret, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i8 %1 to i32
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret %0, i32 %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterItE8ToStringEt(%"class.std::__1::basic_string"* noalias sret, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i16 %1 to i32
  tail call void @_ZN4base16NumberToString16Ei(%"class.std::__1::basic_string"* sret %0, i32 %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIjE8ToStringEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16NumberToString16Ej(%"class.std::__1::basic_string"* sret %0, i32 %1) #16
  ret void
}

declare void @_ZN4base16NumberToString16Ej(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterImE8ToStringEm(%"class.std::__1::basic_string"* noalias sret, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16NumberToString16Em(%"class.std::__1::basic_string"* sret %0, i64 %1) #16
  ret void
}

declare void @_ZN4base16NumberToString16Em(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIfE8ToStringEf(%"class.std::__1::basic_string"* noalias sret, float) local_unnamed_addr #0 align 2 {
  %3 = fpext float %1 to double
  tail call void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string"* sret %0, double %3) #16
  ret void
}

declare void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string"* sret, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIdE8ToStringEd(%"class.std::__1::basic_string"* noalias sret, double) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string"* sret %0, double %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIbE8ToStringEb(%"class.std::__1::basic_string"* noalias sret, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = select i1 %1, i16* getelementptr inbounds ([5 x i16], [5 x i16]* @.str.3, i64 0, i64 0), i16* getelementptr inbounds ([6 x i16], [6 x i16]* @.str.4, i64 0, i64 0)
  %4 = load i16, i16* %3, align 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  store i8 0, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %196

10:                                               ; preds = %2, %10
  %11 = phi i64 [ %13, %10 ], [ 0, %2 ]
  %12 = phi i16* [ %14, %10 ], [ %3, %2 ]
  %13 = add i64 %11, 1
  %14 = getelementptr inbounds i16, i16* %12, i64 1
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10
  %18 = icmp ugt i64 %13, 9223372036854775791
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %20) #14
  unreachable

21:                                               ; preds = %17
  %22 = icmp ult i64 %13, 11
  br i1 %22, label %36, label %23

23:                                               ; preds = %21
  %24 = add nuw nsw i64 %11, 9
  %25 = and i64 %24, -8
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void @abort() #14
  unreachable

28:                                               ; preds = %23
  %29 = shl i64 %25, 1
  %30 = tail call i8* @_Znwm(i64 %29) #15
  %31 = bitcast i8* %30 to i16*
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %30, i8** %32, align 8
  %33 = or i64 %25, -9223372036854775808
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %35, align 8
  br label %42

36:                                               ; preds = %21
  %37 = trunc i64 %13 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 %37, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %41 = icmp eq i64 %13, 0
  br i1 %41, label %196, label %42

42:                                               ; preds = %36, %28
  %43 = phi i16* [ %31, %28 ], [ %40, %36 ]
  store i16 %4, i16* %43, align 2
  %44 = getelementptr inbounds i16, i16* %3, i64 1
  %45 = icmp eq i64 %11, 0
  br i1 %45, label %196, label %46

46:                                               ; preds = %42
  %47 = icmp ult i64 %11, 16
  br i1 %47, label %143, label %48

48:                                               ; preds = %46
  %49 = getelementptr i16, i16* %43, i64 1
  %50 = getelementptr i16, i16* %43, i64 %13
  %51 = getelementptr i16, i16* %3, i64 %13
  %52 = icmp ult i16* %49, %51
  %53 = icmp ult i16* %44, %50
  %54 = and i1 %52, %53
  br i1 %54, label %143, label %55

55:                                               ; preds = %48
  %56 = and i64 %11, -16
  %57 = getelementptr i16, i16* %44, i64 %56
  %58 = sub i64 %11, %56
  %59 = getelementptr i16, i16* %43, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %120, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  %67 = getelementptr i16, i16* %43, i64 1
  %68 = getelementptr i16, i16* %43, i64 1
  %69 = getelementptr i16, i16* %43, i64 1
  %70 = getelementptr i16, i16* %43, i64 1
  br label %71

71:                                               ; preds = %71, %65
  %72 = phi i64 [ 0, %65 ], [ %117, %71 ]
  %73 = phi i64 [ %66, %65 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %44, i64 %72
  %75 = getelementptr inbounds i16, i16* %67, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !14
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !14
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !17, !noalias !14
  %82 = getelementptr inbounds i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !17, !noalias !14
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %44, i64 %84
  %86 = getelementptr inbounds i16, i16* %68, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !14
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !14
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !17, !noalias !14
  %93 = getelementptr inbounds i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !17, !noalias !14
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %44, i64 %95
  %97 = getelementptr inbounds i16, i16* %69, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !14
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !14
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !17, !noalias !14
  %104 = getelementptr inbounds i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !17, !noalias !14
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %44, i64 %106
  %108 = getelementptr inbounds i16, i16* %70, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !14
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !14
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !17, !noalias !14
  %115 = getelementptr inbounds i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !17, !noalias !14
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !19

120:                                              ; preds = %71, %55
  %121 = phi i64 [ 0, %55 ], [ %117, %71 ]
  %122 = icmp eq i64 %63, 0
  br i1 %122, label %141, label %123

123:                                              ; preds = %120
  %124 = getelementptr i16, i16* %43, i64 1
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ %121, %123 ], [ %138, %125 ]
  %127 = phi i64 [ %63, %123 ], [ %139, %125 ]
  %128 = getelementptr i16, i16* %44, i64 %126
  %129 = getelementptr inbounds i16, i16* %124, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !14
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !14
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !17, !noalias !14
  %136 = getelementptr inbounds i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !17, !noalias !14
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !20

141:                                              ; preds = %125, %120
  %142 = icmp eq i64 %11, %56
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %48, %46
  %144 = phi i16* [ %44, %48 ], [ %44, %46 ], [ %57, %141 ]
  %145 = phi i64 [ %11, %48 ], [ %11, %46 ], [ %58, %141 ]
  %146 = phi i16* [ %43, %48 ], [ %43, %46 ], [ %59, %141 ]
  %147 = add i64 %145, -1
  %148 = and i64 %145, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i16* [ %158, %150 ], [ %144, %143 ]
  %152 = phi i64 [ %157, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %155, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = getelementptr inbounds i16, i16* %153, i64 1
  %156 = load i16, i16* %151, align 2
  store i16 %156, i16* %155, align 2
  %157 = add i64 %152, -1
  %158 = getelementptr inbounds i16, i16* %151, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !21

161:                                              ; preds = %150, %143
  %162 = phi i16* [ %144, %143 ], [ %158, %150 ]
  %163 = phi i64 [ %145, %143 ], [ %157, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %155, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i16* [ %194, %166 ], [ %162, %161 ]
  %168 = phi i64 [ %193, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %191, %166 ], [ %164, %161 ]
  %170 = getelementptr inbounds i16, i16* %169, i64 1
  %171 = load i16, i16* %167, align 2
  store i16 %171, i16* %170, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 1
  %173 = getelementptr inbounds i16, i16* %169, i64 2
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 2
  %176 = getelementptr inbounds i16, i16* %169, i64 3
  %177 = load i16, i16* %175, align 2
  store i16 %177, i16* %176, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 3
  %179 = getelementptr inbounds i16, i16* %169, i64 4
  %180 = load i16, i16* %178, align 2
  store i16 %180, i16* %179, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 4
  %182 = getelementptr inbounds i16, i16* %169, i64 5
  %183 = load i16, i16* %181, align 2
  store i16 %183, i16* %182, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 5
  %185 = getelementptr inbounds i16, i16* %169, i64 6
  %186 = load i16, i16* %184, align 2
  store i16 %186, i16* %185, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 6
  %188 = getelementptr inbounds i16, i16* %169, i64 7
  %189 = load i16, i16* %187, align 2
  store i16 %189, i16* %188, align 2
  %190 = getelementptr inbounds i16, i16* %167, i64 7
  %191 = getelementptr inbounds i16, i16* %169, i64 8
  %192 = load i16, i16* %190, align 2
  store i16 %192, i16* %191, align 2
  %193 = add i64 %168, -8
  %194 = getelementptr inbounds i16, i16* %167, i64 8
  %195 = icmp eq i64 %193, 0
  br i1 %195, label %196, label %166, !llvm.loop !22

196:                                              ; preds = %161, %166, %42, %141, %6, %36
  %197 = phi i64 [ 0, %36 ], [ 0, %6 ], [ %13, %141 ], [ %13, %42 ], [ %13, %166 ], [ %13, %161 ]
  %198 = phi i16* [ %40, %36 ], [ %9, %6 ], [ %43, %141 ], [ %43, %42 ], [ %43, %166 ], [ %43, %161 ]
  %199 = getelementptr inbounds i16, i16* %198, i64 %197
  store i16 0, i16* %199, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIbE15GetValidStringsEv(%"class.std::__1::vector"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = alloca [2 x %"class.std::__1::basic_string"], align 8
  %3 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #16
  %4 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  store i8 5, i8* %5, align 1
  %6 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to i16*
  store i16 102, i16* %6, align 8
  %7 = getelementptr inbounds i16, i16* %6, i64 1
  store i16 97, i16* %7, align 2
  %8 = getelementptr inbounds i16, i16* %6, i64 2
  store i16 108, i16* %8, align 4
  %9 = getelementptr inbounds i16, i16* %6, i64 3
  store i16 115, i16* %9, align 2
  %10 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to i16*
  store i16 101, i16* %11, align 8
  %12 = getelementptr inbounds i16, i16* %6, i64 5
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  store i8 4, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  store i16 116, i16* %16, align 8
  %17 = getelementptr inbounds i16, i16* %16, i64 1
  store i16 114, i16* %17, align 2
  %18 = getelementptr inbounds i16, i16* %16, i64 2
  store i16 117, i16* %18, align 4
  %19 = getelementptr inbounds i16, i16* %16, i64 3
  store i16 101, i16* %19, align 2
  %20 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i64* %20 to i16*
  store i16 0, i16* %21, align 8
  %22 = tail call i8* @_Znwm(i64 48) #15
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %22, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 48
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"** %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  %30 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %1
  %35 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %35, i64 24, i1 false) #16
  br label %216

36:                                               ; preds = %1
  %37 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = bitcast i16* %38 to i8*
  %40 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ult i64 %41, 11
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = trunc i64 %41 to i8
  %45 = getelementptr inbounds i8, i8* %22, i64 23
  store i8 %44, i8* %45, align 1
  br label %65

46:                                               ; preds = %36
  %47 = icmp ugt i64 %41, 9223372036854775791
  br i1 %47, label %48, label %51

48:                                               ; preds = %247, %46
  %49 = phi i8* [ %22, %46 ], [ %218, %247 ]
  %50 = bitcast i8* %49 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %50) #14
  unreachable

51:                                               ; preds = %46
  %52 = add nuw nsw i64 %41, 8
  %53 = and i64 %52, -8
  %54 = icmp slt i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %249, %51
  call void @abort() #14
  unreachable

56:                                               ; preds = %51
  %57 = shl i64 %53, 1
  %58 = call i8* @_Znwm(i64 %57) #15
  %59 = bitcast i8* %22 to i8**
  store i8* %58, i8** %59, align 8
  %60 = or i64 %53, -9223372036854775808
  %61 = getelementptr inbounds i8, i8* %22, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %22, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 %41, i64* %64, align 8
  br label %65

65:                                               ; preds = %56, %43
  %66 = phi i8* [ %22, %43 ], [ %58, %56 ]
  %67 = bitcast i8* %66 to i16*
  %68 = add nuw nsw i64 %41, 1
  %69 = add i64 %41, 1
  %70 = icmp ult i64 %69, 16
  br i1 %70, label %163, label %71

71:                                               ; preds = %65
  %72 = shl i64 %41, 1
  %73 = add i64 %72, 2
  %74 = getelementptr i8, i8* %66, i64 %73
  %75 = add i64 %41, 1
  %76 = getelementptr i16, i16* %38, i64 %75
  %77 = bitcast i16* %76 to i8*
  %78 = icmp ult i8* %66, %77
  %79 = icmp ugt i8* %74, %39
  %80 = and i1 %78, %79
  br i1 %80, label %163, label %81

81:                                               ; preds = %71
  %82 = and i64 %69, -16
  %83 = sub i64 %68, %82
  %84 = getelementptr i16, i16* %38, i64 %82
  %85 = getelementptr i16, i16* %67, i64 %82
  %86 = add i64 %82, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 48
  br i1 %90, label %142, label %91

91:                                               ; preds = %81
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i16, i16* %38, i64 %94
  %97 = getelementptr i16, i16* %67, i64 %94
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !23
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !23
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !26, !noalias !23
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !26, !noalias !23
  %106 = or i64 %94, 16
  %107 = getelementptr i16, i16* %38, i64 %106
  %108 = getelementptr i16, i16* %67, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !23
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !23
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !26, !noalias !23
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !26, !noalias !23
  %117 = or i64 %94, 32
  %118 = getelementptr i16, i16* %38, i64 %117
  %119 = getelementptr i16, i16* %67, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !23
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !23
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !26, !noalias !23
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !26, !noalias !23
  %128 = or i64 %94, 48
  %129 = getelementptr i16, i16* %38, i64 %128
  %130 = getelementptr i16, i16* %67, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !23
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !23
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !26, !noalias !23
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !26, !noalias !23
  %139 = add i64 %94, 64
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !28

142:                                              ; preds = %93, %81
  %143 = phi i64 [ 0, %81 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i16, i16* %38, i64 %146
  %149 = getelementptr i16, i16* %67, i64 %146
  %150 = bitcast i16* %148 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !23
  %152 = getelementptr i16, i16* %148, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !23
  %155 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !26, !noalias !23
  %156 = getelementptr i16, i16* %149, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %157, align 2, !alias.scope !26, !noalias !23
  %158 = add i64 %146, 16
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !29

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %82
  br i1 %162, label %216, label %163

163:                                              ; preds = %161, %71, %65
  %164 = phi i64 [ %68, %71 ], [ %68, %65 ], [ %83, %161 ]
  %165 = phi i16* [ %38, %71 ], [ %38, %65 ], [ %84, %161 ]
  %166 = phi i16* [ %67, %71 ], [ %67, %65 ], [ %85, %161 ]
  %167 = add i64 %164, -1
  %168 = and i64 %164, 7
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %181, label %170

170:                                              ; preds = %163, %170
  %171 = phi i64 [ %176, %170 ], [ %164, %163 ]
  %172 = phi i16* [ %178, %170 ], [ %165, %163 ]
  %173 = phi i16* [ %177, %170 ], [ %166, %163 ]
  %174 = phi i64 [ %179, %170 ], [ %168, %163 ]
  %175 = load i16, i16* %172, align 2
  store i16 %175, i16* %173, align 2
  %176 = add i64 %171, -1
  %177 = getelementptr inbounds i16, i16* %173, i64 1
  %178 = getelementptr inbounds i16, i16* %172, i64 1
  %179 = add i64 %174, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %170, !llvm.loop !30

181:                                              ; preds = %170, %163
  %182 = phi i64 [ %164, %163 ], [ %176, %170 ]
  %183 = phi i16* [ %165, %163 ], [ %178, %170 ]
  %184 = phi i16* [ %166, %163 ], [ %177, %170 ]
  %185 = icmp ult i64 %167, 7
  br i1 %185, label %216, label %186

186:                                              ; preds = %181, %186
  %187 = phi i64 [ %212, %186 ], [ %182, %181 ]
  %188 = phi i16* [ %214, %186 ], [ %183, %181 ]
  %189 = phi i16* [ %213, %186 ], [ %184, %181 ]
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %189, i64 1
  %192 = getelementptr inbounds i16, i16* %188, i64 1
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %189, i64 2
  %195 = getelementptr inbounds i16, i16* %188, i64 2
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %189, i64 3
  %198 = getelementptr inbounds i16, i16* %188, i64 3
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %189, i64 4
  %201 = getelementptr inbounds i16, i16* %188, i64 4
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %189, i64 5
  %204 = getelementptr inbounds i16, i16* %188, i64 5
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %189, i64 6
  %207 = getelementptr inbounds i16, i16* %188, i64 6
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %189, i64 7
  %210 = getelementptr inbounds i16, i16* %188, i64 7
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = add i64 %187, -8
  %213 = getelementptr inbounds i16, i16* %189, i64 8
  %214 = getelementptr inbounds i16, i16* %188, i64 8
  %215 = icmp eq i64 %212, 0
  br i1 %215, label %216, label %186, !llvm.loop !31

216:                                              ; preds = %181, %186, %161, %34
  %217 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1
  %218 = getelementptr inbounds i8, i8* %22, i64 24
  %219 = bitcast %"class.std::__1::basic_string"* %217 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %219, i64 0, i32 1, i32 1
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %240, label %236

223:                                              ; preds = %416
  %224 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1
  %225 = bitcast %"class.std::__1::basic_string"* %224 to i8**
  %226 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %226) #15
  br label %227

227:                                              ; preds = %236, %416, %223
  %228 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %228, i64 0, i32 1, i32 1
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %227
  %233 = bitcast [2 x %"class.std::__1::basic_string"]* %2 to i8**
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #15
  br label %235

235:                                              ; preds = %232, %227
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #16
  ret void

236:                                              ; preds = %216
  %237 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %237, i64 24, i1 false) #16
  %238 = getelementptr inbounds i8, i8* %22, i64 48
  %239 = ptrtoint i8* %238 to i64
  store i64 %239, i64* %29, align 8
  br label %227

240:                                              ; preds = %216
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i16*, i16** %241, align 8
  %243 = bitcast i16* %242 to i8*
  %244 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = icmp ult i64 %245, 11
  br i1 %246, label %262, label %247

247:                                              ; preds = %240
  %248 = icmp ugt i64 %245, 9223372036854775791
  br i1 %248, label %48, label %249

249:                                              ; preds = %247
  %250 = add nuw nsw i64 %245, 8
  %251 = and i64 %250, -8
  %252 = icmp slt i64 %251, 0
  br i1 %252, label %55, label %253

253:                                              ; preds = %249
  %254 = shl i64 %251, 1
  %255 = call i8* @_Znwm(i64 %254) #15
  %256 = bitcast i8* %218 to i8**
  store i8* %255, i8** %256, align 8
  %257 = or i64 %251, -9223372036854775808
  %258 = getelementptr inbounds i8, i8* %22, i64 40
  %259 = bitcast i8* %258 to i64*
  store i64 %257, i64* %259, align 8
  %260 = getelementptr inbounds i8, i8* %22, i64 32
  %261 = bitcast i8* %260 to i64*
  store i64 %245, i64* %261, align 8
  br label %265

262:                                              ; preds = %240
  %263 = trunc i64 %245 to i8
  %264 = getelementptr inbounds i8, i8* %22, i64 47
  store i8 %263, i8* %264, align 1
  br label %265

265:                                              ; preds = %262, %253
  %266 = phi i8* [ %218, %262 ], [ %255, %253 ]
  %267 = bitcast i8* %266 to i16*
  %268 = add nuw nsw i64 %245, 1
  %269 = add i64 %245, 1
  %270 = icmp ult i64 %269, 16
  br i1 %270, label %363, label %271

271:                                              ; preds = %265
  %272 = shl i64 %245, 1
  %273 = add i64 %272, 2
  %274 = getelementptr i8, i8* %266, i64 %273
  %275 = add i64 %245, 1
  %276 = getelementptr i16, i16* %242, i64 %275
  %277 = bitcast i16* %276 to i8*
  %278 = icmp ult i8* %266, %277
  %279 = icmp ugt i8* %274, %243
  %280 = and i1 %278, %279
  br i1 %280, label %363, label %281

281:                                              ; preds = %271
  %282 = and i64 %269, -16
  %283 = sub i64 %268, %282
  %284 = getelementptr i16, i16* %242, i64 %282
  %285 = getelementptr i16, i16* %267, i64 %282
  %286 = add i64 %282, -16
  %287 = lshr exact i64 %286, 4
  %288 = add nuw nsw i64 %287, 1
  %289 = and i64 %288, 3
  %290 = icmp ult i64 %286, 48
  br i1 %290, label %342, label %291

291:                                              ; preds = %281
  %292 = sub nsw i64 %288, %289
  br label %293

293:                                              ; preds = %293, %291
  %294 = phi i64 [ 0, %291 ], [ %339, %293 ]
  %295 = phi i64 [ %292, %291 ], [ %340, %293 ]
  %296 = getelementptr i16, i16* %242, i64 %294
  %297 = getelementptr i16, i16* %267, i64 %294
  %298 = bitcast i16* %296 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !32
  %300 = getelementptr i16, i16* %296, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !32
  %303 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %303, align 2, !alias.scope !35, !noalias !32
  %304 = getelementptr i16, i16* %297, i64 8
  %305 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %305, align 2, !alias.scope !35, !noalias !32
  %306 = or i64 %294, 16
  %307 = getelementptr i16, i16* %242, i64 %306
  %308 = getelementptr i16, i16* %267, i64 %306
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !32
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !32
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !35, !noalias !32
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !35, !noalias !32
  %317 = or i64 %294, 32
  %318 = getelementptr i16, i16* %242, i64 %317
  %319 = getelementptr i16, i16* %267, i64 %317
  %320 = bitcast i16* %318 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !32
  %322 = getelementptr i16, i16* %318, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  %324 = load <8 x i16>, <8 x i16>* %323, align 2, !alias.scope !32
  %325 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %325, align 2, !alias.scope !35, !noalias !32
  %326 = getelementptr i16, i16* %319, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %324, <8 x i16>* %327, align 2, !alias.scope !35, !noalias !32
  %328 = or i64 %294, 48
  %329 = getelementptr i16, i16* %242, i64 %328
  %330 = getelementptr i16, i16* %267, i64 %328
  %331 = bitcast i16* %329 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !32
  %333 = getelementptr i16, i16* %329, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  %335 = load <8 x i16>, <8 x i16>* %334, align 2, !alias.scope !32
  %336 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %336, align 2, !alias.scope !35, !noalias !32
  %337 = getelementptr i16, i16* %330, i64 8
  %338 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %338, align 2, !alias.scope !35, !noalias !32
  %339 = add i64 %294, 64
  %340 = add i64 %295, -4
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %293, !llvm.loop !37

342:                                              ; preds = %293, %281
  %343 = phi i64 [ 0, %281 ], [ %339, %293 ]
  %344 = icmp eq i64 %289, 0
  br i1 %344, label %361, label %345

345:                                              ; preds = %342, %345
  %346 = phi i64 [ %358, %345 ], [ %343, %342 ]
  %347 = phi i64 [ %359, %345 ], [ %289, %342 ]
  %348 = getelementptr i16, i16* %242, i64 %346
  %349 = getelementptr i16, i16* %267, i64 %346
  %350 = bitcast i16* %348 to <8 x i16>*
  %351 = load <8 x i16>, <8 x i16>* %350, align 2, !alias.scope !32
  %352 = getelementptr i16, i16* %348, i64 8
  %353 = bitcast i16* %352 to <8 x i16>*
  %354 = load <8 x i16>, <8 x i16>* %353, align 2, !alias.scope !32
  %355 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %355, align 2, !alias.scope !35, !noalias !32
  %356 = getelementptr i16, i16* %349, i64 8
  %357 = bitcast i16* %356 to <8 x i16>*
  store <8 x i16> %354, <8 x i16>* %357, align 2, !alias.scope !35, !noalias !32
  %358 = add i64 %346, 16
  %359 = add i64 %347, -1
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %361, label %345, !llvm.loop !38

361:                                              ; preds = %345, %342
  %362 = icmp eq i64 %269, %282
  br i1 %362, label %416, label %363

363:                                              ; preds = %361, %271, %265
  %364 = phi i64 [ %268, %271 ], [ %268, %265 ], [ %283, %361 ]
  %365 = phi i16* [ %242, %271 ], [ %242, %265 ], [ %284, %361 ]
  %366 = phi i16* [ %267, %271 ], [ %267, %265 ], [ %285, %361 ]
  %367 = add i64 %364, -1
  %368 = and i64 %364, 7
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %381, label %370

370:                                              ; preds = %363, %370
  %371 = phi i64 [ %376, %370 ], [ %364, %363 ]
  %372 = phi i16* [ %378, %370 ], [ %365, %363 ]
  %373 = phi i16* [ %377, %370 ], [ %366, %363 ]
  %374 = phi i64 [ %379, %370 ], [ %368, %363 ]
  %375 = load i16, i16* %372, align 2
  store i16 %375, i16* %373, align 2
  %376 = add i64 %371, -1
  %377 = getelementptr inbounds i16, i16* %373, i64 1
  %378 = getelementptr inbounds i16, i16* %372, i64 1
  %379 = add i64 %374, -1
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %370, !llvm.loop !39

381:                                              ; preds = %370, %363
  %382 = phi i64 [ %364, %363 ], [ %376, %370 ]
  %383 = phi i16* [ %365, %363 ], [ %378, %370 ]
  %384 = phi i16* [ %366, %363 ], [ %377, %370 ]
  %385 = icmp ult i64 %367, 7
  br i1 %385, label %416, label %386

386:                                              ; preds = %381, %386
  %387 = phi i64 [ %412, %386 ], [ %382, %381 ]
  %388 = phi i16* [ %414, %386 ], [ %383, %381 ]
  %389 = phi i16* [ %413, %386 ], [ %384, %381 ]
  %390 = load i16, i16* %388, align 2
  store i16 %390, i16* %389, align 2
  %391 = getelementptr inbounds i16, i16* %389, i64 1
  %392 = getelementptr inbounds i16, i16* %388, i64 1
  %393 = load i16, i16* %392, align 2
  store i16 %393, i16* %391, align 2
  %394 = getelementptr inbounds i16, i16* %389, i64 2
  %395 = getelementptr inbounds i16, i16* %388, i64 2
  %396 = load i16, i16* %395, align 2
  store i16 %396, i16* %394, align 2
  %397 = getelementptr inbounds i16, i16* %389, i64 3
  %398 = getelementptr inbounds i16, i16* %388, i64 3
  %399 = load i16, i16* %398, align 2
  store i16 %399, i16* %397, align 2
  %400 = getelementptr inbounds i16, i16* %389, i64 4
  %401 = getelementptr inbounds i16, i16* %388, i64 4
  %402 = load i16, i16* %401, align 2
  store i16 %402, i16* %400, align 2
  %403 = getelementptr inbounds i16, i16* %389, i64 5
  %404 = getelementptr inbounds i16, i16* %388, i64 5
  %405 = load i16, i16* %404, align 2
  store i16 %405, i16* %403, align 2
  %406 = getelementptr inbounds i16, i16* %389, i64 6
  %407 = getelementptr inbounds i16, i16* %388, i64 6
  %408 = load i16, i16* %407, align 2
  store i16 %408, i16* %406, align 2
  %409 = getelementptr inbounds i16, i16* %389, i64 7
  %410 = getelementptr inbounds i16, i16* %388, i64 7
  %411 = load i16, i16* %410, align 2
  store i16 %411, i16* %409, align 2
  %412 = add i64 %387, -8
  %413 = getelementptr inbounds i16, i16* %389, i64 8
  %414 = getelementptr inbounds i16, i16* %388, i64 8
  %415 = icmp eq i64 %412, 0
  br i1 %415, label %416, label %386, !llvm.loop !40

416:                                              ; preds = %381, %386, %361
  %417 = getelementptr inbounds [2 x %"class.std::__1::basic_string"], [2 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1
  %418 = bitcast %"class.std::__1::basic_string"* %417 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %418, i64 0, i32 1, i32 1
  %420 = load i8, i8* %419, align 1
  %421 = getelementptr inbounds i8, i8* %22, i64 48
  %422 = ptrtoint i8* %421 to i64
  store i64 %422, i64* %29, align 8
  %423 = icmp slt i8 %420, 0
  br i1 %423, label %223, label %227
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIPKcE8ToStringES3_(%"class.std::__1::basic_string"* noalias sret, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(i8* nonnull %1) #16
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #16
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %10

10:                                               ; preds = %5, %7
  %11 = phi i64 [ 0, %7 ], [ %6, %5 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %1, i64 %11) #16
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN4base8FilePathEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string"* sret %0, %"class.base::FilePath"* %1) #16
  ret void
}

declare void @_ZNK4base8FilePath13AsUTF16UnsafeEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE8ToStringERKS8_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #16
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #14
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !41
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !41
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !44, !noalias !41
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !44, !noalias !41
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !41
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !41
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !44, !noalias !41
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !44, !noalias !41
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !41
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !41
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !44, !noalias !41
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !44, !noalias !41
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !41
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !41
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !44, !noalias !41
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !44, !noalias !41
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !46

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !41
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !41
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !44, !noalias !41
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !44, !noalias !41
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !47

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !48

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !49

185:                                              ; preds = %150, %155, %130, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN4base9TimeDeltaEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = sitofp i64 %6 to double
  %11 = fdiv double %10, 1.000000e+06
  br label %15

12:                                               ; preds = %2
  %13 = icmp slt i64 %6, 0
  %14 = select i1 %13, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi double [ %14, %12 ], [ %11, %9 ]
  call void @_ZN4base16NumberToString16Ed(%"class.std::__1::basic_string"* nonnull sret %3, double %16) #16
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1, !noalias !50
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i64, i64* %22, align 8, !noalias !50
  %24 = and i64 %23, 9223372036854775807
  %25 = add nsw i64 %24, -1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !50
  br label %30

28:                                               ; preds = %15
  %29 = zext i8 %19 to i64
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i64 [ %25, %21 ], [ 10, %28 ]
  %32 = phi i64 [ %27, %21 ], [ %29, %28 ]
  %33 = icmp eq i64 %31, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8, !noalias !50
  %37 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %38 = select i1 %20, i16* %36, i16* %37
  %39 = getelementptr inbounds i16, i16* %38, i64 %32
  store i16 115, i16* %39, align 2, !noalias !50
  %40 = add i64 %32, 1
  %41 = load i8, i8* %18, align 1, !noalias !50
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %44, align 8, !noalias !50
  br label %47

45:                                               ; preds = %34
  %46 = trunc i64 %40 to i8
  store i8 %46, i8* %18, align 1, !noalias !50
  br label %47

47:                                               ; preds = %45, %43
  %48 = getelementptr inbounds i16, i16* %38, i64 %40
  store i16 0, i16* %48, align 2, !noalias !50
  br label %52

49:                                               ; preds = %30
  %50 = add i64 %32, 1
  %51 = sub i64 %50, %31
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %3, i64 %31, i64 %51, i64 %32, i64 %32, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.5, i64 0, i64 0)) #16, !noalias !50
  br label %52

52:                                               ; preds = %49, %47
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %4, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx6InsetsEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx6Insets8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::Insets"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

declare void @_ZNK3gfx6Insets8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::Insets"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx5PointEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::Point"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::Point"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx6PointFEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::PointF"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::PointF"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx5RangeEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx5Range8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::Range"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx5Range8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::Range"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx4RectEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::Rect"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::Rect"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx5RectFEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::RectF"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::RectF"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINSt3__16vectorIN3gfx11ShadowValueENS2_9allocatorIS5_EEEEE8ToStringERKS8_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector.15"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::ShadowValue", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.6", align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 24, i1 false)
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  store i8 1, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 91, i16* %14, align 8
  %15 = getelementptr inbounds i16, i16* %14, i64 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %1, i64 0, i32 0, i32 1
  %19 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %18, align 8
  %20 = icmp eq %"class.gfx::ShadowValue"* %17, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %58

24:                                               ; preds = %2
  %25 = bitcast %"class.gfx::ShadowValue"* %3 to i8*
  %26 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %3, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %3, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %3, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %33 = bitcast %"class.std::__1::basic_string.6"* %7 to i8*
  %34 = bitcast %"class.std::__1::basic_string.6"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %49 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %53 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %54 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %57 = bitcast i32* %29 to i64*
  br label %72

58:                                               ; preds = %315, %21
  %59 = phi i16* [ %23, %21 ], [ %51, %315 ]
  %60 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %22, %21 ], [ %49, %315 ]
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = load i64, i64* %9, align 8
  %65 = load i16*, i16** %8, align 8
  %66 = zext i8 %62 to i64
  %67 = select i1 %63, i64 %64, i64 %66
  %68 = select i1 %63, i16* %65, i16* %59
  %69 = add i64 %67, -1
  %70 = getelementptr inbounds i16, i16* %68, i64 %69
  store i16 32, i16* %70, align 2
  %71 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs(%"class.std::__1::basic_string"* %0, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.9, i64 0, i64 0))
  ret void

72:                                               ; preds = %24, %315
  %73 = phi %"class.gfx::ShadowValue"* [ %17, %24 ], [ %316, %315 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  store i32 -1431655766, i32* %26, align 8
  store i32 -1431655766, i32* %27, align 4
  store double 0xFFFFFFFFFFFFFFFF, double* %28, align 8
  %74 = bitcast %"class.gfx::ShadowValue"* %73 to i8*
  store i64 -6148914691236517206, i64* %57, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %74, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #16
  call void @_ZNK3gfx11ShadowValue8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %7, %"class.gfx::ShadowValue"* nonnull %3) #16
  %75 = load i8, i8* %35, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %36, align 8
  %78 = select i1 %76, i8* %77, i8* %33
  %79 = load i64, i64* %37, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %78, i64 %81) #16
  %82 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.7, i64 0, i64 0), i64 1) #16, !noalias !53
  %83 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %83, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #16, !noalias !53
  %84 = load i8, i8* %39, align 1, !noalias !56
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %72
  %87 = load i64, i64* %40, align 8, !noalias !56
  %88 = and i64 %87, 9223372036854775807
  %89 = add nsw i64 %88, -1
  %90 = load i64, i64* %41, align 8, !noalias !56
  br label %93

91:                                               ; preds = %72
  %92 = zext i8 %84 to i64
  br label %93

93:                                               ; preds = %91, %86
  %94 = phi i64 [ %89, %86 ], [ 10, %91 ]
  %95 = phi i64 [ %90, %86 ], [ %92, %91 ]
  %96 = icmp eq i64 %94, %95
  br i1 %96, label %109, label %97

97:                                               ; preds = %93
  %98 = load i16*, i16** %42, align 8, !noalias !56
  %99 = select i1 %85, i16* %98, i16* %43
  %100 = getelementptr inbounds i16, i16* %99, i64 %95
  store i16 59, i16* %100, align 2, !noalias !56
  %101 = add i64 %95, 1
  %102 = load i8, i8* %39, align 1, !noalias !56
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  store i64 %101, i64* %41, align 8, !noalias !56
  br label %107

105:                                              ; preds = %97
  %106 = trunc i64 %101 to i8
  store i8 %106, i8* %39, align 1, !noalias !56
  br label %107

107:                                              ; preds = %105, %104
  %108 = getelementptr inbounds i16, i16* %99, i64 %101
  store i16 0, i16* %108, align 2, !noalias !56
  br label %112

109:                                              ; preds = %93
  %110 = add i64 %95, 1
  %111 = sub i64 %110, %94
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %5, i64 %94, i64 %111, i64 %95, i64 %95, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.8, i64 0, i64 0)) #16, !noalias !56
  br label %112

112:                                              ; preds = %107, %109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %31, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #16, !noalias !56
  %113 = load i8, i8* %45, align 1
  %114 = icmp slt i8 %113, 0
  %115 = load i16*, i16** %46, align 8
  %116 = load i64, i64* %47, align 8
  %117 = zext i8 %113 to i64
  %118 = select i1 %114, i16* %115, i16* %48
  %119 = select i1 %114, i64 %116, i64 %117
  %120 = load i8, i8* %50, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %112
  %123 = load i64, i64* %10, align 8
  %124 = and i64 %123, 9223372036854775807
  %125 = add nsw i64 %124, -1
  %126 = load i64, i64* %9, align 8
  br label %129

127:                                              ; preds = %112
  %128 = zext i8 %120 to i64
  br label %129

129:                                              ; preds = %127, %122
  %130 = phi i64 [ %125, %122 ], [ 10, %127 ]
  %131 = phi i64 [ %126, %122 ], [ %128, %127 ]
  %132 = sub i64 %130, %131
  %133 = icmp ult i64 %132, %119
  br i1 %133, label %292, label %134

134:                                              ; preds = %129
  %135 = icmp eq i64 %119, 0
  br i1 %135, label %295, label %136

136:                                              ; preds = %134
  %137 = load i16*, i16** %8, align 8
  %138 = select i1 %121, i16* %137, i16* %51
  %139 = getelementptr inbounds i16, i16* %138, i64 %131
  %140 = icmp ult i64 %119, 16
  br i1 %140, label %230, label %141

141:                                              ; preds = %136
  %142 = add i64 %119, %131
  %143 = getelementptr i16, i16* %138, i64 %142
  %144 = getelementptr i16, i16* %118, i64 %119
  %145 = icmp ult i16* %139, %144
  %146 = icmp ult i16* %118, %143
  %147 = and i1 %145, %146
  br i1 %147, label %230, label %148

148:                                              ; preds = %141
  %149 = and i64 %119, -16
  %150 = sub i64 %119, %149
  %151 = getelementptr i16, i16* %118, i64 %149
  %152 = getelementptr i16, i16* %139, i64 %149
  %153 = add i64 %149, -16
  %154 = lshr exact i64 %153, 4
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 3
  %157 = icmp ult i64 %153, 48
  br i1 %157, label %209, label %158

158:                                              ; preds = %148
  %159 = sub nsw i64 %155, %156
  br label %160

160:                                              ; preds = %160, %158
  %161 = phi i64 [ 0, %158 ], [ %206, %160 ]
  %162 = phi i64 [ %159, %158 ], [ %207, %160 ]
  %163 = getelementptr i16, i16* %118, i64 %161
  %164 = getelementptr i16, i16* %139, i64 %161
  %165 = bitcast i16* %163 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !59
  %167 = getelementptr i16, i16* %163, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !59
  %170 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %170, align 2, !alias.scope !62, !noalias !59
  %171 = getelementptr i16, i16* %164, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %172, align 2, !alias.scope !62, !noalias !59
  %173 = or i64 %161, 16
  %174 = getelementptr i16, i16* %118, i64 %173
  %175 = getelementptr i16, i16* %139, i64 %173
  %176 = bitcast i16* %174 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !59
  %178 = getelementptr i16, i16* %174, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !59
  %181 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %181, align 2, !alias.scope !62, !noalias !59
  %182 = getelementptr i16, i16* %175, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %183, align 2, !alias.scope !62, !noalias !59
  %184 = or i64 %161, 32
  %185 = getelementptr i16, i16* %118, i64 %184
  %186 = getelementptr i16, i16* %139, i64 %184
  %187 = bitcast i16* %185 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !59
  %189 = getelementptr i16, i16* %185, i64 8
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !59
  %192 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %192, align 2, !alias.scope !62, !noalias !59
  %193 = getelementptr i16, i16* %186, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %194, align 2, !alias.scope !62, !noalias !59
  %195 = or i64 %161, 48
  %196 = getelementptr i16, i16* %118, i64 %195
  %197 = getelementptr i16, i16* %139, i64 %195
  %198 = bitcast i16* %196 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !59
  %200 = getelementptr i16, i16* %196, i64 8
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !59
  %203 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %203, align 2, !alias.scope !62, !noalias !59
  %204 = getelementptr i16, i16* %197, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %205, align 2, !alias.scope !62, !noalias !59
  %206 = add i64 %161, 64
  %207 = add i64 %162, -4
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %160, !llvm.loop !64

209:                                              ; preds = %160, %148
  %210 = phi i64 [ 0, %148 ], [ %206, %160 ]
  %211 = icmp eq i64 %156, 0
  br i1 %211, label %228, label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %225, %212 ], [ %210, %209 ]
  %214 = phi i64 [ %226, %212 ], [ %156, %209 ]
  %215 = getelementptr i16, i16* %118, i64 %213
  %216 = getelementptr i16, i16* %139, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !59
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !59
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !62, !noalias !59
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !62, !noalias !59
  %225 = add i64 %213, 16
  %226 = add i64 %214, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %212, !llvm.loop !65

228:                                              ; preds = %212, %209
  %229 = icmp eq i64 %119, %149
  br i1 %229, label %283, label %230

230:                                              ; preds = %228, %141, %136
  %231 = phi i64 [ %119, %141 ], [ %119, %136 ], [ %150, %228 ]
  %232 = phi i16* [ %118, %141 ], [ %118, %136 ], [ %151, %228 ]
  %233 = phi i16* [ %139, %141 ], [ %139, %136 ], [ %152, %228 ]
  %234 = add i64 %231, -1
  %235 = and i64 %231, 7
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %230, %237
  %238 = phi i64 [ %243, %237 ], [ %231, %230 ]
  %239 = phi i16* [ %245, %237 ], [ %232, %230 ]
  %240 = phi i16* [ %244, %237 ], [ %233, %230 ]
  %241 = phi i64 [ %246, %237 ], [ %235, %230 ]
  %242 = load i16, i16* %239, align 2
  store i16 %242, i16* %240, align 2
  %243 = add i64 %238, -1
  %244 = getelementptr inbounds i16, i16* %240, i64 1
  %245 = getelementptr inbounds i16, i16* %239, i64 1
  %246 = add i64 %241, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %237, !llvm.loop !66

248:                                              ; preds = %237, %230
  %249 = phi i64 [ %231, %230 ], [ %243, %237 ]
  %250 = phi i16* [ %232, %230 ], [ %245, %237 ]
  %251 = phi i16* [ %233, %230 ], [ %244, %237 ]
  %252 = icmp ult i64 %234, 7
  br i1 %252, label %283, label %253

253:                                              ; preds = %248, %253
  %254 = phi i64 [ %279, %253 ], [ %249, %248 ]
  %255 = phi i16* [ %281, %253 ], [ %250, %248 ]
  %256 = phi i16* [ %280, %253 ], [ %251, %248 ]
  %257 = load i16, i16* %255, align 2
  store i16 %257, i16* %256, align 2
  %258 = getelementptr inbounds i16, i16* %256, i64 1
  %259 = getelementptr inbounds i16, i16* %255, i64 1
  %260 = load i16, i16* %259, align 2
  store i16 %260, i16* %258, align 2
  %261 = getelementptr inbounds i16, i16* %256, i64 2
  %262 = getelementptr inbounds i16, i16* %255, i64 2
  %263 = load i16, i16* %262, align 2
  store i16 %263, i16* %261, align 2
  %264 = getelementptr inbounds i16, i16* %256, i64 3
  %265 = getelementptr inbounds i16, i16* %255, i64 3
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %256, i64 4
  %268 = getelementptr inbounds i16, i16* %255, i64 4
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %256, i64 5
  %271 = getelementptr inbounds i16, i16* %255, i64 5
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %256, i64 6
  %274 = getelementptr inbounds i16, i16* %255, i64 6
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %256, i64 7
  %277 = getelementptr inbounds i16, i16* %255, i64 7
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = add i64 %254, -8
  %280 = getelementptr inbounds i16, i16* %256, i64 8
  %281 = getelementptr inbounds i16, i16* %255, i64 8
  %282 = icmp eq i64 %279, 0
  br i1 %282, label %283, label %253, !llvm.loop !67

283:                                              ; preds = %248, %253, %228
  %284 = add i64 %131, %119
  %285 = load i8, i8* %50, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %283
  store i64 %284, i64* %9, align 8
  br label %290

288:                                              ; preds = %283
  %289 = trunc i64 %284 to i8
  store i8 %289, i8* %50, align 1
  br label %290

290:                                              ; preds = %288, %287
  %291 = getelementptr inbounds i16, i16* %138, i64 %284
  store i16 0, i16* %291, align 2
  br label %295

292:                                              ; preds = %129
  %293 = add i64 %131, %119
  %294 = sub i64 %293, %130
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %130, i64 %294, i64 %131, i64 %131, i64 0, i64 %119, i16* %118) #16
  br label %295

295:                                              ; preds = %134, %290, %292
  %296 = load i8, i8* %45, align 1
  %297 = icmp slt i8 %296, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %295
  %299 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %299) #15
  br label %300

300:                                              ; preds = %295, %298
  %301 = load i8, i8* %39, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %300
  %304 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %304) #15
  br label %305

305:                                              ; preds = %300, %303
  %306 = load i8, i8* %55, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %305
  %309 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %309) #15
  br label %310

310:                                              ; preds = %305, %308
  %311 = load i8, i8* %35, align 1
  %312 = icmp slt i8 %311, 0
  br i1 %312, label %313, label %315

313:                                              ; preds = %310
  %314 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %314) #15
  br label %315

315:                                              ; preds = %310, %313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  %316 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %73, i64 1
  %317 = icmp eq %"class.gfx::ShadowValue"* %316, %19
  br i1 %317, label %58, label %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK3gfx11ShadowValue8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::ShadowValue"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEpLEPKDs(%"class.std::__1::basic_string"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2, %5
  %6 = phi i64 [ %8, %5 ], [ 0, %2 ]
  %7 = phi i16* [ %9, %5 ], [ %1, %2 ]
  %8 = add i64 %6, 1
  %9 = getelementptr inbounds i16, i16* %7, i64 1
  %10 = load i16, i16* %9, align 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %2
  %13 = phi i64 [ 0, %2 ], [ %8, %5 ]
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 9223372036854775807
  %22 = add nsw i64 %21, -1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %12
  %26 = zext i8 %16 to i64
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i64 [ %22, %18 ], [ 10, %25 ]
  %29 = phi i64 [ %24, %18 ], [ %26, %25 ]
  %30 = sub i64 %28, %29
  %31 = icmp ult i64 %30, %13
  br i1 %31, label %213, label %32

32:                                               ; preds = %27
  %33 = icmp eq i64 %13, 0
  br i1 %33, label %216, label %34

34:                                               ; preds = %32
  br i1 %17, label %35, label %38

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  br label %40

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i16* [ %37, %35 ], [ %39, %38 ]
  %42 = getelementptr inbounds i16, i16* %41, i64 %29
  store i16 %3, i16* %42, align 2
  %43 = add i64 %13, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %203, label %45

45:                                               ; preds = %40
  %46 = icmp ult i64 %43, 16
  br i1 %46, label %150, label %47

47:                                               ; preds = %45
  %48 = add i64 %29, 1
  %49 = getelementptr i16, i16* %41, i64 %48
  %50 = add i64 %29, %13
  %51 = getelementptr i16, i16* %41, i64 %50
  %52 = getelementptr i16, i16* %1, i64 1
  %53 = getelementptr i16, i16* %1, i64 %13
  %54 = icmp ult i16* %49, %53
  %55 = icmp ult i16* %52, %51
  %56 = and i1 %54, %55
  br i1 %56, label %150, label %57

57:                                               ; preds = %47
  %58 = and i64 %43, -16
  %59 = getelementptr i16, i16* %1, i64 %58
  %60 = sub i64 %43, %58
  %61 = getelementptr i16, i16* %42, i64 %58
  %62 = add i64 %58, -16
  %63 = lshr exact i64 %62, 4
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 48
  br i1 %66, label %126, label %67

67:                                               ; preds = %57
  %68 = sub nsw i64 %64, %65
  %69 = getelementptr i16, i16* %1, i64 1
  %70 = getelementptr i16, i16* %42, i64 1
  %71 = getelementptr i16, i16* %1, i64 1
  %72 = getelementptr i16, i16* %42, i64 1
  %73 = getelementptr i16, i16* %1, i64 1
  %74 = getelementptr i16, i16* %42, i64 1
  %75 = getelementptr i16, i16* %1, i64 1
  %76 = getelementptr i16, i16* %42, i64 1
  br label %77

77:                                               ; preds = %77, %67
  %78 = phi i64 [ 0, %67 ], [ %123, %77 ]
  %79 = phi i64 [ %68, %67 ], [ %124, %77 ]
  %80 = getelementptr inbounds i16, i16* %69, i64 %78
  %81 = getelementptr inbounds i16, i16* %70, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !68
  %84 = getelementptr inbounds i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !68
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !71, !noalias !68
  %88 = getelementptr inbounds i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !71, !noalias !68
  %90 = or i64 %78, 16
  %91 = getelementptr inbounds i16, i16* %71, i64 %90
  %92 = getelementptr inbounds i16, i16* %72, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !68
  %95 = getelementptr inbounds i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !68
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !71, !noalias !68
  %99 = getelementptr inbounds i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !71, !noalias !68
  %101 = or i64 %78, 32
  %102 = getelementptr inbounds i16, i16* %73, i64 %101
  %103 = getelementptr inbounds i16, i16* %74, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !68
  %106 = getelementptr inbounds i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !68
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !71, !noalias !68
  %110 = getelementptr inbounds i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !71, !noalias !68
  %112 = or i64 %78, 48
  %113 = getelementptr inbounds i16, i16* %75, i64 %112
  %114 = getelementptr inbounds i16, i16* %76, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !68
  %117 = getelementptr inbounds i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !68
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !71, !noalias !68
  %121 = getelementptr inbounds i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !71, !noalias !68
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !73

126:                                              ; preds = %77, %57
  %127 = phi i64 [ 0, %57 ], [ %123, %77 ]
  %128 = icmp eq i64 %65, 0
  br i1 %128, label %148, label %129

129:                                              ; preds = %126
  %130 = getelementptr i16, i16* %1, i64 1
  %131 = getelementptr i16, i16* %42, i64 1
  br label %132

132:                                              ; preds = %132, %129
  %133 = phi i64 [ %127, %129 ], [ %145, %132 ]
  %134 = phi i64 [ %65, %129 ], [ %146, %132 ]
  %135 = getelementptr inbounds i16, i16* %130, i64 %133
  %136 = getelementptr inbounds i16, i16* %131, i64 %133
  %137 = bitcast i16* %135 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !68
  %139 = getelementptr inbounds i16, i16* %135, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !68
  %142 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %142, align 2, !alias.scope !71, !noalias !68
  %143 = getelementptr inbounds i16, i16* %136, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !71, !noalias !68
  %145 = add i64 %133, 16
  %146 = add i64 %134, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %132, !llvm.loop !74

148:                                              ; preds = %132, %126
  %149 = icmp eq i64 %43, %58
  br i1 %149, label %203, label %150

150:                                              ; preds = %148, %47, %45
  %151 = phi i16* [ %1, %47 ], [ %1, %45 ], [ %59, %148 ]
  %152 = phi i64 [ %43, %47 ], [ %43, %45 ], [ %60, %148 ]
  %153 = phi i16* [ %42, %47 ], [ %42, %45 ], [ %61, %148 ]
  %154 = add i64 %152, -1
  %155 = and i64 %152, 7
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %168, label %157

157:                                              ; preds = %150, %157
  %158 = phi i16* [ %162, %157 ], [ %151, %150 ]
  %159 = phi i64 [ %165, %157 ], [ %152, %150 ]
  %160 = phi i16* [ %163, %157 ], [ %153, %150 ]
  %161 = phi i64 [ %166, %157 ], [ %155, %150 ]
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = getelementptr inbounds i16, i16* %160, i64 1
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = add i64 %159, -1
  %166 = add i64 %161, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %157, !llvm.loop !75

168:                                              ; preds = %157, %150
  %169 = phi i16* [ %151, %150 ], [ %162, %157 ]
  %170 = phi i64 [ %152, %150 ], [ %165, %157 ]
  %171 = phi i16* [ %153, %150 ], [ %163, %157 ]
  %172 = icmp ult i64 %154, 7
  br i1 %172, label %203, label %173

173:                                              ; preds = %168, %173
  %174 = phi i16* [ %198, %173 ], [ %169, %168 ]
  %175 = phi i64 [ %201, %173 ], [ %170, %168 ]
  %176 = phi i16* [ %199, %173 ], [ %171, %168 ]
  %177 = getelementptr inbounds i16, i16* %174, i64 1
  %178 = getelementptr inbounds i16, i16* %176, i64 1
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %174, i64 2
  %181 = getelementptr inbounds i16, i16* %176, i64 2
  %182 = load i16, i16* %180, align 2
  store i16 %182, i16* %181, align 2
  %183 = getelementptr inbounds i16, i16* %174, i64 3
  %184 = getelementptr inbounds i16, i16* %176, i64 3
  %185 = load i16, i16* %183, align 2
  store i16 %185, i16* %184, align 2
  %186 = getelementptr inbounds i16, i16* %174, i64 4
  %187 = getelementptr inbounds i16, i16* %176, i64 4
  %188 = load i16, i16* %186, align 2
  store i16 %188, i16* %187, align 2
  %189 = getelementptr inbounds i16, i16* %174, i64 5
  %190 = getelementptr inbounds i16, i16* %176, i64 5
  %191 = load i16, i16* %189, align 2
  store i16 %191, i16* %190, align 2
  %192 = getelementptr inbounds i16, i16* %174, i64 6
  %193 = getelementptr inbounds i16, i16* %176, i64 6
  %194 = load i16, i16* %192, align 2
  store i16 %194, i16* %193, align 2
  %195 = getelementptr inbounds i16, i16* %174, i64 7
  %196 = getelementptr inbounds i16, i16* %176, i64 7
  %197 = load i16, i16* %195, align 2
  store i16 %197, i16* %196, align 2
  %198 = getelementptr inbounds i16, i16* %174, i64 8
  %199 = getelementptr inbounds i16, i16* %176, i64 8
  %200 = load i16, i16* %198, align 2
  store i16 %200, i16* %199, align 2
  %201 = add i64 %175, -8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %173, !llvm.loop !76

203:                                              ; preds = %168, %173, %148, %40
  %204 = add i64 %29, %13
  %205 = load i8, i8* %15, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %204, i64* %208, align 8
  br label %211

209:                                              ; preds = %203
  %210 = trunc i64 %204 to i8
  store i8 %210, i8* %15, align 1
  br label %211

211:                                              ; preds = %209, %207
  %212 = getelementptr inbounds i16, i16* %41, i64 %204
  store i16 0, i16* %212, align 2
  br label %216

213:                                              ; preds = %27
  %214 = add i64 %29, %13
  %215 = sub i64 %214, %28
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %28, i64 %215, i64 %29, i64 %29, i64 0, i64 %13, i16* %1) #16
  br label %216

216:                                              ; preds = %32, %211, %213
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx4SizeEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::Size"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx4Size8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::Size"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx5SizeFEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZNK3gfx5SizeF8ToStringEv(%"class.std::__1::basic_string.6"* nonnull sret %3, %"class.gfx::SizeF"* %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZNK3gfx5SizeF8ToStringEv(%"class.std::__1::basic_string.6"* sret, %"class.gfx::SizeF"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8ToStringERKS8_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string.6"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.6"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string.6"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  tail call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %10, i64 %14) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3url9ComponentEE8ToStringERKS3_(%"class.std::__1::basic_string"* noalias sret, %"struct.url::Component"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  call void (%"class.std::__1::basic_string.6"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.6"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %6, i32 %8) #16
  %9 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %11 to i64
  %19 = select i1 %12, i64 %17, i64 %18
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %15, i64 %19) #16
  %20 = load i8, i8* %10, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string.6"* sret, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2ui8metadata13TypeConverterIaE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 0, i32* %2, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %11, i64 %15, i32* nonnull %2) #16
  br i1 %16, label %17, label %25

17:                                               ; preds = %1
  %18 = load i32, i32* %2, align 4
  %19 = add i32 %18, 128
  %20 = icmp ult i32 %19, 256
  %21 = trunc i32 %18 to i16
  %22 = shl i16 %21, 8
  %23 = select i1 %20, i16 %22, i16 0
  %24 = zext i1 %20 to i16
  br label %25

25:                                               ; preds = %17, %1
  %26 = phi i16 [ 0, %1 ], [ %24, %17 ]
  %27 = phi i16 [ 0, %1 ], [ %23, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  %28 = or i16 %27, %26
  ret i16 %28
}

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui8metadata13TypeConverterIsE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 0, i32* %2, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %11, i64 %15, i32* nonnull %2) #16
  br i1 %16, label %17, label %24

17:                                               ; preds = %1
  %18 = load i32, i32* %2, align 4
  %19 = add i32 %18, 32768
  %20 = icmp ult i32 %19, 65536
  %21 = shl i32 %18, 16
  %22 = select i1 %20, i32 %21, i32 0
  %23 = zext i1 %20 to i32
  br label %24

24:                                               ; preds = %17, %1
  %25 = phi i32 [ 0, %1 ], [ %23, %17 ]
  %26 = phi i32 [ 0, %1 ], [ %22, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  %27 = or i32 %26, %25
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterIiE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 -1431655766, i32* %2, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %11, i64 %15, i32* nonnull %2) #16
  %17 = load i32, i32* %2, align 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i1 %16 to i64
  %21 = select i1 %16, i64 %19, i64 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  %22 = or i64 %21, %20
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2ui8metadata13TypeConverterIlE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #16
  store i64 -6148914691236517206, i64* %2, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPl(i16* %11, i64 %15, i64* nonnull %2) #16
  %17 = load i64, i64* %2, align 8
  %18 = zext i1 %16 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #16
  %19 = insertvalue { i8, i64 } undef, i8 %18, 0
  %20 = insertvalue { i8, i64 } %19, i64 %17, 1
  ret { i8, i64 } %20
}

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPl(i16*, i64, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2ui8metadata13TypeConverterIhE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 0, i32* %2, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16* %11, i64 %15, i32* nonnull %2) #16
  br i1 %16, label %17, label %24

17:                                               ; preds = %1
  %18 = load i32, i32* %2, align 4
  %19 = icmp ult i32 %18, 256
  %20 = trunc i32 %18 to i16
  %21 = shl i16 %20, 8
  %22 = select i1 %19, i16 %21, i16 0
  %23 = zext i1 %19 to i16
  br label %24

24:                                               ; preds = %17, %1
  %25 = phi i16 [ 0, %1 ], [ %23, %17 ]
  %26 = phi i16 [ 0, %1 ], [ %22, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  %27 = or i16 %26, %25
  ret i16 %27
}

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui8metadata13TypeConverterItE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 0, i32* %2, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16* %11, i64 %15, i32* nonnull %2) #16
  br i1 %16, label %17, label %23

17:                                               ; preds = %1
  %18 = load i32, i32* %2, align 4
  %19 = icmp ult i32 %18, 65536
  %20 = shl i32 %18, 16
  %21 = select i1 %19, i32 %20, i32 0
  %22 = zext i1 %19 to i32
  br label %23

23:                                               ; preds = %17, %1
  %24 = phi i32 [ 0, %1 ], [ %22, %17 ]
  %25 = phi i32 [ 0, %1 ], [ %21, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  %26 = or i32 %25, %24
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterIjE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 -1431655766, i32* %2, align 4
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16* %11, i64 %15, i32* nonnull %2) #16
  %17 = load i32, i32* %2, align 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i1 %16 to i64
  %21 = select i1 %16, i64 %19, i64 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  %22 = or i64 %21, %20
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2ui8metadata13TypeConverterImE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #16
  store i64 -6148914691236517206, i64* %2, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %11 = select i1 %7, i16* %9, i16* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = call zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16* %11, i64 %15, i64* nonnull %2) #16
  %17 = load i64, i64* %2, align 8
  %18 = zext i1 %16 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #16
  %19 = insertvalue { i8, i64 } undef, i8 %18, 0
  %20 = insertvalue { i8, i64 } %19, i64 %17, 1
  ret { i8, i64 } %20
}

declare zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPm(i16*, i64, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterIfE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca double, align 8
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %2, align 8
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %3, i16* %13, i64 %17) #16
  %18 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i64 %26, i64 %27
  %29 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8* %24, i64 %28, double* nonnull %2) #16
  %30 = load double, double* %2, align 8
  %31 = load i8, i8* %19, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %1
  %34 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %1, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  br i1 %29, label %36, label %41

36:                                               ; preds = %35
  %37 = fptrunc double %30 to float
  %38 = bitcast float %37 to i32
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  br label %41

41:                                               ; preds = %35, %36
  %42 = phi i64 [ 1, %36 ], [ 0, %35 ]
  %43 = phi i64 [ %40, %36 ], [ 0, %35 ]
  %44 = or i64 %43, %42
  ret i64 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, double } @_ZN2ui8metadata13TypeConverterIdE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca double, align 8
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %2, align 8
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %3, i16* %13, i64 %17) #16
  %18 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i64 %26, i64 %27
  %29 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8* %24, i64 %28, double* nonnull %2) #16
  %30 = load double, double* %2, align 8
  %31 = zext i1 %29 to i8
  %32 = load i8, i8* %19, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %1
  %35 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %1, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  %37 = insertvalue { i8, double } undef, i8 %31, 0
  %38 = insertvalue { i8, double } %37, double %30, 1
  ret { i8, double } %38
}

declare zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8*, i64, double*) local_unnamed_addr #3

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN2ui8metadata13TypeConverterIbE10FromStringERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  switch i64 %9, label %34 [
    i64 4, label %10
    i64 5, label %23
  ]

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %14 = select i1 %5, i16* %12, i16* %13
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 116
  br i1 %16, label %17, label %34

17:                                               ; preds = %10
  %18 = getelementptr inbounds i16, i16* %14, i64 1
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 114
  br i1 %20, label %51, label %21

21:                                               ; preds = %55, %51, %17
  %22 = icmp eq i64 %9, 5
  br i1 %22, label %23, label %34

23:                                               ; preds = %1, %21
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %27 = select i1 %5, i16* %25, i16* %26
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, 102
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds i16, i16* %27, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 97
  br i1 %33, label %38, label %34

34:                                               ; preds = %46, %55, %30, %38, %42, %1, %10, %23, %21
  %35 = phi i16 [ 0, %21 ], [ 0, %23 ], [ 0, %10 ], [ 0, %1 ], [ 0, %42 ], [ 0, %38 ], [ 0, %30 ], [ 0, %46 ], [ 256, %55 ]
  %36 = phi i16 [ 0, %21 ], [ 0, %23 ], [ 0, %10 ], [ 0, %1 ], [ 0, %30 ], [ 0, %38 ], [ 0, %42 ], [ %50, %46 ], [ 1, %55 ]
  %37 = or i16 %36, %35
  ret i16 %37

38:                                               ; preds = %30
  %39 = getelementptr inbounds i16, i16* %27, i64 2
  %40 = load i16, i16* %39, align 2
  %41 = icmp eq i16 %40, 108
  br i1 %41, label %42, label %34

42:                                               ; preds = %38
  %43 = getelementptr inbounds i16, i16* %27, i64 3
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 115
  br i1 %45, label %46, label %34

46:                                               ; preds = %42
  %47 = getelementptr inbounds i16, i16* %27, i64 4
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 101
  %50 = select i1 %49, i16 1, i16 0
  br label %34

51:                                               ; preds = %17
  %52 = getelementptr inbounds i16, i16* %14, i64 2
  %53 = load i16, i16* %52, align 2
  %54 = icmp eq i16 %53, 117
  br i1 %54, label %55, label %21

55:                                               ; preds = %51
  %56 = getelementptr inbounds i16, i16* %14, i64 3
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, 101
  br i1 %58, label %34, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE10FromStringERKS8_(%"class.absl::optional.74"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #16
  br label %187

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 11
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %20 = trunc i64 %16 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  store i8 %20, i8* %22, align 1
  br label %40

23:                                               ; preds = %12
  %24 = icmp ugt i64 %16, 9223372036854775791
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %26) #14
  unreachable

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %16, 8
  %29 = and i64 %28, -8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @abort() #14
  unreachable

32:                                               ; preds = %27
  %33 = shl i64 %29, 1
  %34 = tail call i8* @_Znwm(i64 %33) #15
  %35 = bitcast i8* %34 to i16*
  %36 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  store i8* %34, i8** %36, align 8
  %37 = or i64 %29, -9223372036854775808
  %38 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %18
  %41 = phi i16* [ %19, %18 ], [ %35, %32 ]
  %42 = add nuw nsw i64 %16, 1
  %43 = add i64 %16, 1
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %134, label %45

45:                                               ; preds = %40
  %46 = add i64 %16, 1
  %47 = getelementptr i16, i16* %41, i64 %46
  %48 = getelementptr i16, i16* %14, i64 %46
  %49 = icmp ult i16* %41, %48
  %50 = icmp ult i16* %14, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %45
  %53 = and i64 %43, -16
  %54 = sub i64 %42, %53
  %55 = getelementptr i16, i16* %14, i64 %53
  %56 = getelementptr i16, i16* %41, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %14, i64 %65
  %68 = getelementptr i16, i16* %41, i64 %65
  %69 = bitcast i16* %67 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !77
  %71 = getelementptr i16, i16* %67, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !77
  %74 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !80, !noalias !77
  %75 = getelementptr i16, i16* %68, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !80, !noalias !77
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %14, i64 %77
  %79 = getelementptr i16, i16* %41, i64 %77
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !77
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !77
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !80, !noalias !77
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !80, !noalias !77
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %14, i64 %88
  %90 = getelementptr i16, i16* %41, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !77
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !77
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !80, !noalias !77
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !80, !noalias !77
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %14, i64 %99
  %101 = getelementptr i16, i16* %41, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !77
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !77
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !80, !noalias !77
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !80, !noalias !77
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !82

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %14, i64 %117
  %120 = getelementptr i16, i16* %41, i64 %117
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !77
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !77
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !80, !noalias !77
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !80, !noalias !77
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !83

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %43, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %45, %40
  %135 = phi i64 [ %42, %45 ], [ %42, %40 ], [ %54, %132 ]
  %136 = phi i16* [ %14, %45 ], [ %14, %40 ], [ %55, %132 ]
  %137 = phi i16* [ %41, %45 ], [ %41, %40 ], [ %56, %132 ]
  %138 = add i64 %135, -1
  %139 = and i64 %135, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i64 [ %147, %141 ], [ %135, %134 ]
  %143 = phi i16* [ %149, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %148, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %143, align 2
  store i16 %146, i16* %144, align 2
  %147 = add i64 %142, -1
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !84

152:                                              ; preds = %141, %134
  %153 = phi i64 [ %135, %134 ], [ %147, %141 ]
  %154 = phi i16* [ %136, %134 ], [ %149, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %148, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %183, %157 ], [ %153, %152 ]
  %159 = phi i16* [ %185, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %184, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %159, align 2
  store i16 %161, i16* %160, align 2
  %162 = getelementptr inbounds i16, i16* %160, i64 1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %160, i64 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %160, i64 3
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %160, i64 4
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %160, i64 5
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %160, i64 6
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %160, i64 7
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %158, -8
  %184 = getelementptr inbounds i16, i16* %160, i64 8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !85

187:                                              ; preds = %152, %157, %132, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN4base8FilePathEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.absl::optional.79"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  call void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* nonnull sret %3, i16* %12, i64 %16) #16
  %17 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %18, %"class.base::FilePath"* nonnull dereferenceable(24) %3) #16
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN4base8FilePath15FromUTF16UnsafeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.base::FilePath"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2ui8metadata13TypeConverterIN4base9TimeDeltaEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.6", align 8
  %3 = bitcast %"class.std::__1::basic_string.6"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = bitcast %"class.std::__1::basic_string.6"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load i8, i8* %7, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %14 = select i1 %10, i16* %12, i16* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %2, i16* %14, i64 %18) #16
  %19 = bitcast %"class.std::__1::basic_string.6"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i8*, i8** %4, align 8
  %24 = select i1 %22, i8* %23, i8* %3
  %25 = load i64, i64* %5, align 8
  %26 = zext i8 %21 to i64
  %27 = select i1 %22, i64 %25, i64 %26
  %28 = call { i8, i64 } @_ZN4base19TimeDeltaFromStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %24, i64 %27) #16
  %29 = load i8, i8* %20, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %1
  %32 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %1, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  ret { i8, i64 } %28
}

declare { i8, i64 } @_ZN4base19TimeDeltaFromStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx6InsetsEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.absl::optional.89"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8, i8* %12, align 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %14 to i64
  %21 = icmp slt i8 %14, 0
  %22 = select i1 %21, i16* %16, i16* %17
  %23 = select i1 %21, i64 %19, i64 %20
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %22, i64 %23, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.11, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %24 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #16
  store i32 -1431655766, i32* %4, align 4
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #16
  store i32 -1431655766, i32* %5, align 4
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #16
  store i32 -1431655766, i32* %6, align 4
  %27 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #16
  store i32 -1431655766, i32* %7, align 4
  %28 = bitcast %"class.base::BasicStringPiece.23"** %10 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = icmp eq i64 %32, 64
  %34 = inttoptr i64 %31 to %"class.base::BasicStringPiece.23"*
  br i1 %33, label %35, label %102

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %34, i64 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %34, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %37, i64 %39, i32* nonnull %4) #16
  br i1 %40, label %41, label %102

41:                                               ; preds = %35
  %42 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %9, align 8
  %43 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %42, i64 1, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %42, i64 1, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %44, i64 %46, i32* nonnull %5) #16
  br i1 %47, label %48, label %102

48:                                               ; preds = %41
  %49 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %9, align 8
  %50 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %49, i64 2, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %49, i64 2, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %51, i64 %53, i32* nonnull %6) #16
  br i1 %54, label %55, label %102

55:                                               ; preds = %48
  %56 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %9, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %56, i64 3, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %56, i64 3, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %58, i64 %60, i32* nonnull %7) #16
  br i1 %61, label %62, label %102

62:                                               ; preds = %55
  %63 = load i32, i32* %4, align 4
  %64 = load i32, i32* %5, align 4
  %65 = load i32, i32* %6, align 4
  %66 = load i32, i32* %7, align 4
  %67 = icmp sgt i32 %63, 0
  %68 = icmp sgt i32 %65, 0
  %69 = and i1 %67, %68
  %70 = sub nuw nsw i32 2147483647, %63
  %71 = icmp ult i32 %70, %65
  %72 = and i1 %71, %69
  br i1 %72, label %80, label %73

73:                                               ; preds = %62
  %74 = and i32 %65, %63
  %75 = icmp slt i32 %74, 0
  %76 = sub nsw i32 -2147483648, %63
  %77 = icmp sgt i32 %76, %65
  %78 = and i1 %77, %75
  %79 = select i1 %78, i32 %76, i32 %65
  br label %80

80:                                               ; preds = %73, %62
  %81 = phi i32 [ %79, %73 ], [ %70, %62 ]
  %82 = icmp sgt i32 %64, 0
  %83 = icmp sgt i32 %66, 0
  %84 = and i1 %82, %83
  %85 = sub nuw nsw i32 2147483647, %64
  %86 = icmp ult i32 %85, %66
  %87 = and i1 %86, %84
  br i1 %87, label %95, label %88

88:                                               ; preds = %80
  %89 = and i32 %66, %64
  %90 = icmp slt i32 %89, 0
  %91 = sub nsw i32 -2147483648, %64
  %92 = icmp sgt i32 %91, %66
  %93 = and i1 %92, %90
  %94 = select i1 %93, i32 %91, i32 %66
  br label %95

95:                                               ; preds = %80, %88
  %96 = phi i32 [ %94, %88 ], [ %85, %80 ]
  %97 = getelementptr inbounds %"class.absl::optional.89", %"class.absl::optional.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %97, align 4
  %98 = getelementptr inbounds %"class.absl::optional.89", %"class.absl::optional.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %63, i32* %98, align 4
  %99 = getelementptr inbounds %"class.absl::optional.89", %"class.absl::optional.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %64, i32* %99, align 4
  %100 = getelementptr inbounds %"class.absl::optional.89", %"class.absl::optional.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store i32 %81, i32* %100, align 4
  %101 = getelementptr inbounds %"class.absl::optional.89", %"class.absl::optional.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  store i32 %96, i32* %101, align 4
  br label %104

102:                                              ; preds = %55, %48, %41, %35, %2
  %103 = getelementptr inbounds %"class.absl::optional.89", %"class.absl::optional.89"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %103, align 4
  br label %104

104:                                              ; preds = %102, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #16
  %105 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %9, align 8
  %106 = icmp eq %"class.base::BasicStringPiece.23"* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = ptrtoint %"class.base::BasicStringPiece.23"* %105 to i64
  store i64 %108, i64* %28, align 8
  %109 = bitcast %"class.base::BasicStringPiece.23"* %105 to i8*
  call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui8metadata13TypeConverterIN3gfx5PointEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.104", align 8
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %12 to i64
  %19 = icmp slt i8 %12, 0
  %20 = select i1 %19, i16* %14, i16* %15
  %21 = select i1 %19, i64 %17, i64 %18
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %20, i64 %21, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.11, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #16
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #16
  store i32 -1431655766, i32* %5, align 4
  %24 = bitcast %"class.base::BasicStringPiece.23"** %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %28, 32
  %30 = inttoptr i64 %27 to %"class.base::BasicStringPiece.23"*
  br i1 %29, label %31, label %54

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %33, i64 %35, i32* nonnull %4) #16
  br i1 %36, label %37, label %54

37:                                               ; preds = %31
  %38 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %40, i64 %42, i32* nonnull %5) #16
  br i1 %43, label %44, label %54

44:                                               ; preds = %37
  %45 = load i32, i32* %4, align 4
  %46 = load i32, i32* %5, align 4
  %47 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.104", %"class.absl::optional_internal::optional_data_dtor_base.104"* %2, i64 0, i32 0
  store i8 1, i8* %47, align 8
  %48 = zext i32 %46 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %45 to i64
  %51 = or i64 %49, %50
  %52 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.104", %"class.absl::optional_internal::optional_data_dtor_base.104"* %2, i64 0, i32 1
  %53 = bitcast %union.anon.105* %52 to i64*
  store i64 %51, i64* %53, align 4
  br label %56

54:                                               ; preds = %37, %31, %1
  %55 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.104", %"class.absl::optional_internal::optional_data_dtor_base.104"* %2, i64 0, i32 0
  store i8 0, i8* %55, align 8
  br label %56

56:                                               ; preds = %54, %44
  %57 = phi i32 [ undef, %54 ], [ %46, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #16
  %58 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %59 = icmp eq %"class.base::BasicStringPiece.23"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"class.base::BasicStringPiece.23"* %58 to i64
  store i64 %61, i64* %24, align 8
  %62 = bitcast %"class.base::BasicStringPiece.23"* %58 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %64 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.104"* %2 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = insertvalue { i64, i32 } undef, i64 %65, 0
  %67 = insertvalue { i64, i32 } %66, i32 %57, 1
  ret { i64, i32 } %67
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, float } @_ZN2ui8metadata13TypeConverterIN3gfx6PointFEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.94", align 8
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = bitcast %"class.std::__1::vector.94"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::vector.94"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = icmp slt i8 %11, 0
  %19 = select i1 %18, i16* %13, i16* %14
  %20 = select i1 %18, i64 %16, i64 %17
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %2, i16* %19, i64 %20, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.11, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %21 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  %22 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %23 = bitcast %"class.base::BasicStringPiece.23"** %7 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.94"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = icmp eq i64 %27, 32
  %29 = inttoptr i64 %26 to %"class.base::BasicStringPiece.23"*
  br i1 %28, label %30, label %54

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %29, i64 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %29, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %32, i64 %34, double* nonnull %3) #16
  br i1 %35, label %36, label %49

36:                                               ; preds = %30
  %37 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %6, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %37, i64 1, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %37, i64 1, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %39, i64 %41, double* nonnull %4) #16
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = load double, double* %3, align 8
  %45 = fptrunc double %44 to float
  %46 = load double, double* %4, align 8
  %47 = fptrunc double %46 to float
  %48 = bitcast float %45 to i32
  br label %49

49:                                               ; preds = %43, %36, %30
  %50 = phi i64 [ 0, %30 ], [ 0, %36 ], [ 1, %43 ]
  %51 = phi i32 [ undef, %30 ], [ undef, %36 ], [ %48, %43 ]
  %52 = phi float [ undef, %30 ], [ undef, %36 ], [ %47, %43 ]
  %53 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %6, align 8
  br label %54

54:                                               ; preds = %49, %1
  %55 = phi %"class.base::BasicStringPiece.23"* [ %53, %49 ], [ %29, %1 ]
  %56 = phi i64 [ %50, %49 ], [ 0, %1 ]
  %57 = phi i32 [ %51, %49 ], [ undef, %1 ]
  %58 = phi float [ %52, %49 ], [ undef, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  %59 = icmp eq %"class.base::BasicStringPiece.23"* %55, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = ptrtoint %"class.base::BasicStringPiece.23"* %55 to i64
  store i64 %61, i64* %23, align 8
  %62 = bitcast %"class.base::BasicStringPiece.23"* %55 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %54, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  %64 = zext i32 %57 to i64
  %65 = shl nuw i64 %64, 32
  %66 = and i64 %56, 255
  %67 = or i64 %65, %66
  %68 = insertvalue { i64, float } undef, i64 %67, 0
  %69 = insertvalue { i64, float } %68, float %58, 1
  ret { i64, float } %69
}

declare zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16*, i64, double*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui8metadata13TypeConverterIN3gfx5RangeEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.114", align 8
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %12 to i64
  %19 = icmp slt i8 %12, 0
  %20 = select i1 %19, i16* %14, i16* %15
  %21 = select i1 %19, i64 %17, i64 %18
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %20, i64 %21, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.12, i64 0, i64 0), i64 3, i32 1, i32 1) #16
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #16
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #16
  store i32 -1431655766, i32* %5, align 4
  %24 = bitcast %"class.base::BasicStringPiece.23"** %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %28, 32
  %30 = inttoptr i64 %27 to %"class.base::BasicStringPiece.23"*
  br i1 %29, label %31, label %54

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16* %33, i64 %35, i32* nonnull %4) #16
  br i1 %36, label %37, label %54

37:                                               ; preds = %31
  %38 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16* %40, i64 %42, i32* nonnull %5) #16
  br i1 %43, label %44, label %54

44:                                               ; preds = %37
  %45 = load i32, i32* %4, align 4
  %46 = load i32, i32* %5, align 4
  %47 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.114", %"class.absl::optional_internal::optional_data_dtor_base.114"* %2, i64 0, i32 0
  store i8 1, i8* %47, align 8
  %48 = zext i32 %46 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %45 to i64
  %51 = or i64 %49, %50
  %52 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.114", %"class.absl::optional_internal::optional_data_dtor_base.114"* %2, i64 0, i32 1
  %53 = bitcast %union.anon.115* %52 to i64*
  store i64 %51, i64* %53, align 4
  br label %56

54:                                               ; preds = %37, %31, %1
  %55 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.114", %"class.absl::optional_internal::optional_data_dtor_base.114"* %2, i64 0, i32 0
  store i8 0, i8* %55, align 8
  br label %56

56:                                               ; preds = %54, %44
  %57 = phi i32 [ undef, %54 ], [ %46, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #16
  %58 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %59 = icmp eq %"class.base::BasicStringPiece.23"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"class.base::BasicStringPiece.23"* %58 to i64
  store i64 %61, i64* %24, align 8
  %62 = bitcast %"class.base::BasicStringPiece.23"* %58 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %64 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.114"* %2 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = insertvalue { i64, i32 } undef, i64 %65, 0
  %67 = insertvalue { i64, i32 } %66, i32 %57, 1
  ret { i64, i32 } %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx4RectEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.absl::optional.116"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.absl::optional_internal::optional_data_dtor_base.104", align 8
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = icmp slt i8 %11, 0
  %19 = select i1 %18, i16* %13, i16* %14
  %20 = select i1 %18, i64 %16, i64 %17
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %3, i16* %19, i64 %20, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.7, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %21 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = icmp eq i64 %25, 48
  %27 = inttoptr i64 %24 to %"class.std::__1::basic_string"*
  br i1 %26, label %30, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.absl::optional.116", %"class.absl::optional.116"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %29, align 4
  br label %80

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.104", %"class.absl::optional_internal::optional_data_dtor_base.104"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %31)
  %32 = call { i64, i32 } @_ZN2ui8metadata13TypeConverterIN3gfx5PointEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %27)
  %33 = extractvalue { i64, i32 } %32, 0
  %34 = extractvalue { i64, i32 } %32, 1
  %35 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.104"* %4 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.104", %"class.absl::optional_internal::optional_data_dtor_base.104"* %4, i64 0, i32 1, i32 0, i32 1
  store i32 %34, i32* %36, align 8
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %39 = call { i64, i32 } @_ZN2ui8metadata13TypeConverterIN3gfx4SizeEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %38)
  %40 = extractvalue { i64, i32 } %39, 0
  %41 = extractvalue { i64, i32 } %39, 1
  %42 = trunc i64 %40 to i8
  %43 = lshr i64 %40, 32
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 %33 to i8
  %46 = icmp ne i8 %45, 0
  %47 = icmp ne i8 %42, 0
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %76

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.104", %"class.absl::optional_internal::optional_data_dtor_base.104"* %4, i64 0, i32 1
  %51 = bitcast %union.anon.105* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  %55 = icmp sgt i32 %44, 0
  %56 = and i1 %55, %54
  %57 = sub nuw nsw i32 2147483647, %53
  %58 = icmp ult i32 %57, %44
  %59 = and i1 %58, %56
  %60 = select i1 %59, i32 %57, i32 %44
  %61 = icmp sgt i32 %34, 0
  %62 = icmp sgt i32 %41, 0
  %63 = and i1 %61, %62
  %64 = sub nuw nsw i32 2147483647, %34
  %65 = icmp ult i32 %64, %41
  %66 = and i1 %65, %63
  %67 = select i1 %66, i32 %64, i32 %41
  %68 = icmp sgt i32 %60, 0
  %69 = select i1 %68, i32 %60, i32 0
  %70 = icmp sgt i32 %67, 0
  %71 = select i1 %70, i32 %67, i32 0
  %72 = getelementptr inbounds %"class.absl::optional.116", %"class.absl::optional.116"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast %union.anon.120* %72 to i64*
  store i64 %52, i64* %73, align 4
  %74 = getelementptr inbounds %"class.absl::optional.116", %"class.absl::optional.116"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %69, i32* %74, align 4
  %75 = getelementptr inbounds %"class.absl::optional.116", %"class.absl::optional.116"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  store i32 %71, i32* %75, align 4
  br label %76

76:                                               ; preds = %30, %49
  %77 = phi i8 [ 1, %49 ], [ 0, %30 ]
  %78 = getelementptr inbounds %"class.absl::optional.116", %"class.absl::optional.116"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %77, i8* %78, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %31)
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %80

80:                                               ; preds = %76, %28
  %81 = phi %"class.std::__1::basic_string"* [ %79, %76 ], [ %27, %28 ]
  %82 = icmp eq %"class.std::__1::basic_string"* %81, null
  br i1 %82, label %104, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %86 = icmp eq %"class.std::__1::basic_string"* %85, %81
  br i1 %86, label %102, label %87

87:                                               ; preds = %83, %97
  %88 = phi %"class.std::__1::basic_string"* [ %89, %97 ], [ %85, %83 ]
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 -1
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::basic_string"* %89 to i8**
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %94, %87
  %98 = icmp eq %"class.std::__1::basic_string"* %89, %81
  br i1 %98, label %99, label %87

99:                                               ; preds = %97
  %100 = bitcast %"class.std::__1::vector"* %3 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %83
  %103 = phi i8* [ %101, %99 ], [ %84, %83 ]
  store %"class.std::__1::basic_string"* %81, %"class.std::__1::basic_string"** %7, align 8
  call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %80, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui8metadata13TypeConverterIN3gfx4SizeEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.124", align 8
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %12 to i64
  %19 = icmp slt i8 %12, 0
  %20 = select i1 %19, i16* %14, i16* %15
  %21 = select i1 %19, i64 %17, i64 %18
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %20, i64 %21, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.17, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #16
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #16
  store i32 -1431655766, i32* %5, align 4
  %24 = bitcast %"class.base::BasicStringPiece.23"** %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %28, 32
  %30 = inttoptr i64 %27 to %"class.base::BasicStringPiece.23"*
  br i1 %29, label %31, label %58

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %33, i64 %35, i32* nonnull %4) #16
  br i1 %36, label %37, label %58

37:                                               ; preds = %31
  %38 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %40, i64 %42, i32* nonnull %5) #16
  br i1 %43, label %44, label %58

44:                                               ; preds = %37
  %45 = load i32, i32* %4, align 4
  %46 = load i32, i32* %5, align 4
  %47 = icmp sgt i32 %45, 0
  %48 = select i1 %47, i32 %45, i32 0
  %49 = icmp sgt i32 %46, 0
  %50 = select i1 %49, i32 %46, i32 0
  %51 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.124", %"class.absl::optional_internal::optional_data_dtor_base.124"* %2, i64 0, i32 0
  store i8 1, i8* %51, align 8
  %52 = zext i32 %50 to i64
  %53 = shl nuw nsw i64 %52, 32
  %54 = zext i32 %48 to i64
  %55 = or i64 %53, %54
  %56 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.124", %"class.absl::optional_internal::optional_data_dtor_base.124"* %2, i64 0, i32 1
  %57 = bitcast %union.anon.125* %56 to i64*
  store i64 %55, i64* %57, align 4
  br label %60

58:                                               ; preds = %37, %31, %1
  %59 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.124", %"class.absl::optional_internal::optional_data_dtor_base.124"* %2, i64 0, i32 0
  store i8 0, i8* %59, align 8
  br label %60

60:                                               ; preds = %58, %44
  %61 = phi i32 [ undef, %58 ], [ %50, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #16
  %62 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %63 = icmp eq %"class.base::BasicStringPiece.23"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = ptrtoint %"class.base::BasicStringPiece.23"* %62 to i64
  store i64 %65, i64* %24, align 8
  %66 = bitcast %"class.base::BasicStringPiece.23"* %62 to i8*
  call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %68 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.124"* %2 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = insertvalue { i64, i32 } undef, i64 %69, 0
  %71 = insertvalue { i64, i32 } %70, i32 %61, 1
  ret { i64, i32 } %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx5RectFEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.absl::optional.126"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %10 to i64
  %17 = icmp slt i8 %10, 0
  %18 = select i1 %17, i16* %12, i16* %13
  %19 = select i1 %17, i64 %15, i64 %16
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %3, i16* %18, i64 %19, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.7, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %20 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = icmp eq i64 %24, 48
  br i1 %25, label %28, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.absl::optional.126", %"class.absl::optional.126"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 4
  br label %60

28:                                               ; preds = %2
  %29 = inttoptr i64 %23 to %"class.std::__1::basic_string"*
  %30 = call { i64, float } @_ZN2ui8metadata13TypeConverterIN3gfx6PointFEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %29)
  %31 = extractvalue { i64, float } %30, 0
  %32 = trunc i64 %31 to i8
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %35 = call { i64, float } @_ZN2ui8metadata13TypeConverterIN3gfx5SizeFEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %34)
  %36 = extractvalue { i64, float } %35, 0
  %37 = trunc i64 %36 to i8
  %38 = icmp ne i8 %32, 0
  %39 = icmp ne i8 %37, 0
  %40 = and i1 %38, %39
  %41 = getelementptr inbounds %"class.absl::optional.126", %"class.absl::optional.126"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %40, label %42, label %59

42:                                               ; preds = %28
  %43 = extractvalue { i64, float } %35, 1
  %44 = bitcast float %43 to i32
  %45 = lshr i64 %36, 32
  %46 = extractvalue { i64, float } %30, 1
  %47 = bitcast float %46 to i32
  %48 = lshr i64 %31, 32
  store i8 1, i8* %41, align 4
  %49 = getelementptr inbounds %"class.absl::optional.126", %"class.absl::optional.126"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon.130* %49 to i64*
  %51 = zext i32 %47 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, %48
  store i64 %53, i64* %50, align 4
  %54 = getelementptr inbounds %"class.absl::optional.126", %"class.absl::optional.126"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %55 = bitcast %"class.gfx::SizeF"* %54 to i64*
  %56 = zext i32 %44 to i64
  %57 = shl nuw i64 %56, 32
  %58 = or i64 %57, %45
  store i64 %58, i64* %55, align 4
  br label %60

59:                                               ; preds = %28
  store i8 0, i8* %41, align 4
  br label %60

60:                                               ; preds = %42, %59, %26
  %61 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %62 = icmp eq %"class.std::__1::basic_string"* %61, null
  br i1 %62, label %84, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %66 = icmp eq %"class.std::__1::basic_string"* %65, %61
  br i1 %66, label %82, label %67

67:                                               ; preds = %63, %77
  %68 = phi %"class.std::__1::basic_string"* [ %69, %77 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 -1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::basic_string"* %69 to i8**
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %74, %67
  %78 = icmp eq %"class.std::__1::basic_string"* %69, %61
  br i1 %78, label %79, label %67

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::vector"* %3 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %63
  %83 = phi i8* [ %81, %79 ], [ %64, %63 ]
  store %"class.std::__1::basic_string"* %61, %"class.std::__1::basic_string"** %6, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %60, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, float } @_ZN2ui8metadata13TypeConverterIN3gfx5SizeFEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.94", align 8
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = bitcast %"class.std::__1::vector.94"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::vector.94"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = icmp slt i8 %11, 0
  %19 = select i1 %18, i16* %13, i16* %14
  %20 = select i1 %18, i64 %16, i64 %17
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %2, i16* %19, i64 %20, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.17, i64 0, i64 0), i64 1, i32 1, i32 1) #16
  %21 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %3, align 8
  %22 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %23 = bitcast %"class.base::BasicStringPiece.23"** %7 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.94"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = icmp eq i64 %27, 32
  %29 = inttoptr i64 %26 to %"class.base::BasicStringPiece.23"*
  br i1 %28, label %30, label %58

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %29, i64 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %29, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %32, i64 %34, double* nonnull %3) #16
  br i1 %35, label %36, label %53

36:                                               ; preds = %30
  %37 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %6, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %37, i64 1, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %37, i64 1, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %39, i64 %41, double* nonnull %4) #16
  br i1 %42, label %43, label %53

43:                                               ; preds = %36
  %44 = load double, double* %3, align 8
  %45 = fptrunc double %44 to float
  %46 = load double, double* %4, align 8
  %47 = fptrunc double %46 to float
  %48 = fcmp ogt float %45, 0x3EB0000000000000
  %49 = select i1 %48, float %45, float 0.000000e+00
  %50 = bitcast float %49 to i32
  %51 = fcmp ogt float %47, 0x3EB0000000000000
  %52 = select i1 %51, float %47, float 0.000000e+00
  br label %53

53:                                               ; preds = %43, %36, %30
  %54 = phi i64 [ 0, %30 ], [ 0, %36 ], [ 1, %43 ]
  %55 = phi i32 [ undef, %30 ], [ undef, %36 ], [ %50, %43 ]
  %56 = phi float [ undef, %30 ], [ undef, %36 ], [ %52, %43 ]
  %57 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %6, align 8
  br label %58

58:                                               ; preds = %53, %1
  %59 = phi %"class.base::BasicStringPiece.23"* [ %57, %53 ], [ %29, %1 ]
  %60 = phi i64 [ %54, %53 ], [ 0, %1 ]
  %61 = phi i32 [ %55, %53 ], [ undef, %1 ]
  %62 = phi float [ %56, %53 ], [ undef, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  %63 = icmp eq %"class.base::BasicStringPiece.23"* %59, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = ptrtoint %"class.base::BasicStringPiece.23"* %59 to i64
  store i64 %65, i64* %23, align 8
  %66 = bitcast %"class.base::BasicStringPiece.23"* %59 to i8*
  call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  %68 = zext i32 %61 to i64
  %69 = shl nuw i64 %68, 32
  %70 = and i64 %60, 255
  %71 = or i64 %69, %70
  %72 = insertvalue { i64, float } undef, i64 %71, 0
  %73 = insertvalue { i64, float } %72, float %62, 1
  ret { i64, float } %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINSt3__16vectorIN3gfx11ShadowValueENS2_9allocatorIS5_EEEEE10FromStringERKNS2_12basic_stringIDsNS2_11char_traitsIDsEENS6_IDsEEEE(%"class.absl::optional.136"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__wrap_iter.142", align 8
  %4 = alloca %"class.std::__1::vector.15", align 16
  %5 = alloca %"class.std::__1::vector.94", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::StringTokenizerT", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = bitcast %"class.std::__1::vector.15"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 24, i1 false) #16
  %16 = bitcast %"class.std::__1::vector.94"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %5, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = bitcast %"class.std::__1::vector.94"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load i8, i8* %20, align 1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %22 to i64
  %29 = icmp slt i8 %22, 0
  %30 = select i1 %29, i16* %24, i16* %25
  %31 = select i1 %29, i64 %27, i64 %28
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %5, i16* %30, i64 %31, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.13, i64 0, i64 0), i64 3, i32 1, i32 1) #16
  %32 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %17, align 8
  %33 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %18, align 8
  %34 = icmp eq %"class.base::BasicStringPiece.23"* %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %2
  %36 = bitcast %"class.gfx::ShadowValue"** %14 to i64*
  br label %99

37:                                               ; preds = %2
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %43 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %46 = bitcast %"class.base::StringTokenizerT"* %7 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %49 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %52 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2, i32 0
  %55 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 3, i32 0
  %56 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %57 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  %58 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 7
  %59 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 9
  %60 = bitcast i32* %9 to i8*
  %61 = bitcast i32* %10 to i8*
  %62 = bitcast double* %11 to i8*
  %63 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = bitcast i16** %54 to i64*
  %67 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 2
  %69 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 1
  %70 = bitcast %"class.std::__1::__wrap_iter.142"* %68 to i64*
  %71 = bitcast %"class.std::__1::__wrap_iter.142"* %69 to i64*
  %72 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %68, i64 0, i32 0
  %73 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = bitcast %"class.std::__1::basic_string"* %56 to i16*
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::__wrap_iter.142"* %3 to i8*
  %79 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %3, i64 0, i32 0
  %80 = bitcast %"class.gfx::ShadowValue"** %14 to i64*
  %81 = bitcast %"class.std::__1::vector.15"* %4 to i64*
  %82 = bitcast %"class.gfx::ShadowValue"** %15 to i64*
  %83 = bitcast double* %11 to i64*
  %84 = bitcast %"class.std::__1::basic_string"* %63 to i8**
  %85 = bitcast %"class.std::__1::basic_string"* %56 to i8**
  %86 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %87 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 6
  %88 = bitcast i32* %87 to i8*
  %89 = getelementptr inbounds i16, i16* %51, i64 1
  %90 = getelementptr inbounds i16, i16* %51, i64 2
  %91 = getelementptr inbounds i16, i16* %51, i64 3
  %92 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %7, i64 0, i32 4
  %93 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  br label %121

94:                                               ; preds = %1182
  %95 = bitcast %"class.std::__1::vector.15"* %4 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 16
  %97 = load i64, i64* %82, align 16
  %98 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %17, align 8
  br label %99

99:                                               ; preds = %35, %94
  %100 = phi i64* [ %36, %35 ], [ %80, %94 ]
  %101 = phi %"class.base::BasicStringPiece.23"* [ %32, %35 ], [ %98, %94 ]
  %102 = phi i64 [ 0, %35 ], [ %97, %94 ]
  %103 = phi <2 x i64> [ zeroinitializer, %35 ], [ %96, %94 ]
  %104 = getelementptr inbounds %"class.absl::optional.136", %"class.absl::optional.136"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %104, align 8
  %105 = getelementptr inbounds %"class.absl::optional.136", %"class.absl::optional.136"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = bitcast %"class.std::__1::vector.15"* %105 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %106, align 8
  %107 = getelementptr inbounds %"class.absl::optional.136", %"class.absl::optional.136"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"class.gfx::ShadowValue"** %107 to i64*
  store i64 %102, i64* %108, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 24, i1 false) #16
  %109 = icmp eq %"class.base::BasicStringPiece.23"* %101, null
  br i1 %109, label %110, label %111

110:                                              ; preds = %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  br label %120

111:                                              ; preds = %99
  %112 = ptrtoint %"class.base::BasicStringPiece.23"* %101 to i64
  %113 = bitcast %"class.base::BasicStringPiece.23"** %18 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"class.base::BasicStringPiece.23"* %101 to i8*
  call void @_ZdlPv(i8* %114) #15
  %115 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %13, align 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  %116 = icmp eq %"class.gfx::ShadowValue"* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.gfx::ShadowValue"* %115 to i8*
  %119 = ptrtoint %"class.gfx::ShadowValue"* %115 to i64
  store i64 %119, i64* %100, align 8
  call void @_ZdlPv(i8* %118) #15
  br label %120

120:                                              ; preds = %110, %111, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  ret void

121:                                              ; preds = %37, %1182
  %122 = phi %"class.base::BasicStringPiece.23"* [ %32, %37 ], [ %1183, %1182 ]
  %123 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %122, i64 0, i32 0
  %124 = load i16*, i16** %123, align 8
  %125 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %122, i64 0, i32 1
  %126 = load i64, i64* %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #16
  %127 = icmp ugt i64 %126, 9223372036854775791
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false)
  br i1 %127, label %128, label %130

128:                                              ; preds = %121
  %129 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %129) #14
  unreachable

130:                                              ; preds = %121
  %131 = icmp ult i64 %126, 11
  br i1 %131, label %142, label %132

132:                                              ; preds = %130
  %133 = add nuw nsw i64 %126, 8
  %134 = and i64 %133, -8
  %135 = icmp slt i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  call void @abort() #14
  unreachable

137:                                              ; preds = %132
  %138 = shl i64 %134, 1
  %139 = call i8* @_Znwm(i64 %138) #15
  %140 = bitcast i8* %139 to i16*
  store i8* %139, i8** %42, align 8, !alias.scope !86
  %141 = or i64 %134, -9223372036854775808
  store i64 %141, i64* %41, align 8, !alias.scope !86
  store i64 %126, i64* %40, align 8, !alias.scope !86
  br label %145

142:                                              ; preds = %130
  %143 = trunc i64 %126 to i8
  store i8 %143, i8* %44, align 1, !alias.scope !86
  %144 = icmp eq i64 %126, 0
  br i1 %144, label %289, label %145

145:                                              ; preds = %142, %137
  %146 = phi i16* [ %140, %137 ], [ %45, %142 ]
  %147 = icmp ult i64 %126, 16
  br i1 %147, label %236, label %148

148:                                              ; preds = %145
  %149 = getelementptr i16, i16* %146, i64 %126
  %150 = getelementptr i16, i16* %124, i64 %126
  %151 = icmp ult i16* %146, %150
  %152 = icmp ult i16* %124, %149
  %153 = and i1 %151, %152
  br i1 %153, label %236, label %154

154:                                              ; preds = %148
  %155 = and i64 %126, -16
  %156 = sub i64 %126, %155
  %157 = getelementptr i16, i16* %124, i64 %155
  %158 = getelementptr i16, i16* %146, i64 %155
  %159 = add i64 %155, -16
  %160 = lshr exact i64 %159, 4
  %161 = add nuw nsw i64 %160, 1
  %162 = and i64 %161, 3
  %163 = icmp ult i64 %159, 48
  br i1 %163, label %215, label %164

164:                                              ; preds = %154
  %165 = sub nsw i64 %161, %162
  br label %166

166:                                              ; preds = %166, %164
  %167 = phi i64 [ 0, %164 ], [ %212, %166 ]
  %168 = phi i64 [ %165, %164 ], [ %213, %166 ]
  %169 = getelementptr i16, i16* %124, i64 %167
  %170 = getelementptr i16, i16* %146, i64 %167
  %171 = bitcast i16* %169 to <8 x i16>*
  %172 = load <8 x i16>, <8 x i16>* %171, align 2, !alias.scope !89
  %173 = getelementptr i16, i16* %169, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  %175 = load <8 x i16>, <8 x i16>* %174, align 2, !alias.scope !89
  %176 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %172, <8 x i16>* %176, align 2, !alias.scope !92, !noalias !89
  %177 = getelementptr i16, i16* %170, i64 8
  %178 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %175, <8 x i16>* %178, align 2, !alias.scope !92, !noalias !89
  %179 = or i64 %167, 16
  %180 = getelementptr i16, i16* %124, i64 %179
  %181 = getelementptr i16, i16* %146, i64 %179
  %182 = bitcast i16* %180 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !89
  %184 = getelementptr i16, i16* %180, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !89
  %187 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2, !alias.scope !92, !noalias !89
  %188 = getelementptr i16, i16* %181, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %189, align 2, !alias.scope !92, !noalias !89
  %190 = or i64 %167, 32
  %191 = getelementptr i16, i16* %124, i64 %190
  %192 = getelementptr i16, i16* %146, i64 %190
  %193 = bitcast i16* %191 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !89
  %195 = getelementptr i16, i16* %191, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2, !alias.scope !89
  %198 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %198, align 2, !alias.scope !92, !noalias !89
  %199 = getelementptr i16, i16* %192, i64 8
  %200 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %200, align 2, !alias.scope !92, !noalias !89
  %201 = or i64 %167, 48
  %202 = getelementptr i16, i16* %124, i64 %201
  %203 = getelementptr i16, i16* %146, i64 %201
  %204 = bitcast i16* %202 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !89
  %206 = getelementptr i16, i16* %202, i64 8
  %207 = bitcast i16* %206 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !89
  %209 = bitcast i16* %203 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %209, align 2, !alias.scope !92, !noalias !89
  %210 = getelementptr i16, i16* %203, i64 8
  %211 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %211, align 2, !alias.scope !92, !noalias !89
  %212 = add i64 %167, 64
  %213 = add i64 %168, -4
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %166, !llvm.loop !94

215:                                              ; preds = %166, %154
  %216 = phi i64 [ 0, %154 ], [ %212, %166 ]
  %217 = icmp eq i64 %162, 0
  br i1 %217, label %234, label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %231, %218 ], [ %216, %215 ]
  %220 = phi i64 [ %232, %218 ], [ %162, %215 ]
  %221 = getelementptr i16, i16* %124, i64 %219
  %222 = getelementptr i16, i16* %146, i64 %219
  %223 = bitcast i16* %221 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !89
  %225 = getelementptr i16, i16* %221, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !89
  %228 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %228, align 2, !alias.scope !92, !noalias !89
  %229 = getelementptr i16, i16* %222, i64 8
  %230 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %230, align 2, !alias.scope !92, !noalias !89
  %231 = add i64 %219, 16
  %232 = add i64 %220, -1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %218, !llvm.loop !95

234:                                              ; preds = %218, %215
  %235 = icmp eq i64 %126, %155
  br i1 %235, label %289, label %236

236:                                              ; preds = %234, %148, %145
  %237 = phi i64 [ %126, %148 ], [ %126, %145 ], [ %156, %234 ]
  %238 = phi i16* [ %124, %148 ], [ %124, %145 ], [ %157, %234 ]
  %239 = phi i16* [ %146, %148 ], [ %146, %145 ], [ %158, %234 ]
  %240 = add i64 %237, -1
  %241 = and i64 %237, 7
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %254, label %243

243:                                              ; preds = %236, %243
  %244 = phi i64 [ %249, %243 ], [ %237, %236 ]
  %245 = phi i16* [ %251, %243 ], [ %238, %236 ]
  %246 = phi i16* [ %250, %243 ], [ %239, %236 ]
  %247 = phi i64 [ %252, %243 ], [ %241, %236 ]
  %248 = load i16, i16* %245, align 2
  store i16 %248, i16* %246, align 2
  %249 = add i64 %244, -1
  %250 = getelementptr inbounds i16, i16* %246, i64 1
  %251 = getelementptr inbounds i16, i16* %245, i64 1
  %252 = add i64 %247, -1
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %243, !llvm.loop !96

254:                                              ; preds = %243, %236
  %255 = phi i64 [ %237, %236 ], [ %249, %243 ]
  %256 = phi i16* [ %238, %236 ], [ %251, %243 ]
  %257 = phi i16* [ %239, %236 ], [ %250, %243 ]
  %258 = icmp ult i64 %240, 7
  br i1 %258, label %289, label %259

259:                                              ; preds = %254, %259
  %260 = phi i64 [ %285, %259 ], [ %255, %254 ]
  %261 = phi i16* [ %287, %259 ], [ %256, %254 ]
  %262 = phi i16* [ %286, %259 ], [ %257, %254 ]
  %263 = load i16, i16* %261, align 2
  store i16 %263, i16* %262, align 2
  %264 = getelementptr inbounds i16, i16* %262, i64 1
  %265 = getelementptr inbounds i16, i16* %261, i64 1
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %262, i64 2
  %268 = getelementptr inbounds i16, i16* %261, i64 2
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = getelementptr inbounds i16, i16* %262, i64 3
  %271 = getelementptr inbounds i16, i16* %261, i64 3
  %272 = load i16, i16* %271, align 2
  store i16 %272, i16* %270, align 2
  %273 = getelementptr inbounds i16, i16* %262, i64 4
  %274 = getelementptr inbounds i16, i16* %261, i64 4
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %262, i64 5
  %277 = getelementptr inbounds i16, i16* %261, i64 5
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %262, i64 6
  %280 = getelementptr inbounds i16, i16* %261, i64 6
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %262, i64 7
  %283 = getelementptr inbounds i16, i16* %261, i64 7
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = add i64 %260, -8
  %286 = getelementptr inbounds i16, i16* %262, i64 8
  %287 = getelementptr inbounds i16, i16* %261, i64 8
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %259, !llvm.loop !97

289:                                              ; preds = %254, %259, %234, %142
  %290 = phi i16* [ %45, %142 ], [ %146, %234 ], [ %146, %259 ], [ %146, %254 ]
  %291 = getelementptr inbounds i16, i16* %290, i64 %126
  store i16 0, i16* %291, align 2
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %46) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #16
  store i8 3, i8* %50, align 1
  store i16 40, i16* %51, align 8
  store i16 44, i16* %89, align 2
  store i16 41, i16* %90, align 4
  store i16 0, i16* %91, align 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 48, i1 false) #16
  %292 = load i8, i8* %44, align 1
  %293 = icmp slt i8 %292, 0
  %294 = load i16*, i16** %39, align 8
  %295 = load i64, i64* %40, align 8
  %296 = zext i8 %292 to i64
  %297 = select i1 %293, i16* %294, i16* %45
  %298 = select i1 %293, i64 %295, i64 %296
  %299 = getelementptr inbounds i16, i16* %297, i64 %298
  store i16* %297, i16** %52, align 8
  store i16* %297, i16** %53, align 8
  store i16* %297, i16** %54, align 8
  store i16* %299, i16** %55, align 8
  %300 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %56, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #16
  store i32 0, i32* %57, align 8
  store i8 1, i8* %58, align 4
  store i32 1, i32* %59, align 8
  %301 = load i8, i8* %50, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %289
  %304 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %304) #15
  br label %305

305:                                              ; preds = %289, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #16
  store i32 1, i32* %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #16
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #16
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %11, align 8
  %306 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %306, label %307, label %1167

307:                                              ; preds = %305
  %308 = load i16*, i16** %53, align 8
  %309 = load i64, i64* %66, align 8
  %310 = ptrtoint i16* %308 to i64
  %311 = sub i64 %309, %310
  %312 = icmp eq i64 %311, 2
  br i1 %312, label %313, label %1167

313:                                              ; preds = %307
  %314 = load i16, i16* %308, align 2
  %315 = icmp eq i16 %314, 40
  br i1 %315, label %316, label %1167

316:                                              ; preds = %313
  %317 = load i8, i8* %65, align 1
  %318 = icmp slt i8 %317, 0
  %319 = load i64, i64* %67, align 8
  %320 = zext i8 %317 to i64
  %321 = select i1 %318, i64 %319, i64 %320
  %322 = icmp eq i64 %321, 0
  %323 = load i32, i32* %57, align 8
  %324 = icmp eq i32 %323, 0
  %325 = and i1 %322, %324
  br i1 %325, label %326, label %398

326:                                              ; preds = %316
  store i8 0, i8* %58, align 4
  store i64 %309, i64* %71, align 8
  %327 = inttoptr i64 %309 to i16*
  %328 = load i16*, i16** %55, align 8
  %329 = icmp eq i16* %328, %327
  br i1 %329, label %340, label %330

330:                                              ; preds = %326
  %331 = load i8, i8* %74, align 1
  %332 = icmp slt i8 %331, 0
  %333 = zext i8 %331 to i64
  %334 = load i16*, i16** %76, align 8
  %335 = load i64, i64* %77, align 8
  %336 = select i1 %332, i16* %334, i16* %75
  %337 = select i1 %332, i64 %335, i64 %333
  %338 = icmp eq i64 %337, 0
  %339 = ptrtoint i16* %336 to i64
  br label %341

340:                                              ; preds = %371, %326
  store i8 1, i8* %58, align 4
  br label %1167

341:                                              ; preds = %371, %330
  %342 = phi i16* [ %327, %330 ], [ %343, %371 ]
  %343 = getelementptr inbounds i16, i16* %342, i64 1
  store i16* %343, i16** %72, align 8
  %344 = load i16, i16* %342, align 2
  %345 = ptrtoint i16* %343 to i64
  br i1 %338, label %361, label %346

346:                                              ; preds = %341, %351
  %347 = phi i64 [ %353, %351 ], [ %337, %341 ]
  %348 = phi i16* [ %352, %351 ], [ %336, %341 ]
  %349 = load i16, i16* %348, align 2
  %350 = icmp eq i16 %349, %344
  br i1 %350, label %355, label %351

351:                                              ; preds = %346
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = add i64 %347, -1
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %361, label %346

355:                                              ; preds = %346
  %356 = icmp eq i16* %348, null
  %357 = ptrtoint i16* %348 to i64
  %358 = sub i64 %357, %339
  %359 = icmp eq i64 %358, -2
  %360 = or i1 %356, %359
  br i1 %360, label %361, label %371

361:                                              ; preds = %351, %355, %341
  %362 = load i32, i32* %59, align 8
  %363 = icmp eq i32 %362, 1
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  switch i16 %344, label %365 [
    i16 32, label %371
    i16 13, label %371
    i16 10, label %371
    i16 9, label %371
    i16 12, label %371
  ]

365:                                              ; preds = %364, %361
  %366 = phi i1 [ true, %364 ], [ false, %361 ]
  %367 = ptrtoint i16* %343 to i64
  %368 = icmp eq i16* %343, %328
  br i1 %368, label %405, label %369

369:                                              ; preds = %365
  %370 = ptrtoint i16* %336 to i64
  br label %373

371:                                              ; preds = %364, %364, %364, %364, %364, %355
  store i64 %345, i64* %71, align 8
  %372 = icmp eq i16* %328, %343
  br i1 %372, label %340, label %341

373:                                              ; preds = %369, %394
  %374 = phi i64 [ %397, %394 ], [ %367, %369 ]
  %375 = phi i16* [ %395, %394 ], [ %343, %369 ]
  %376 = load i16, i16* %375, align 2
  br i1 %338, label %392, label %377

377:                                              ; preds = %373, %382
  %378 = phi i64 [ %384, %382 ], [ %337, %373 ]
  %379 = phi i16* [ %383, %382 ], [ %336, %373 ]
  %380 = load i16, i16* %379, align 2
  %381 = icmp eq i16 %380, %376
  br i1 %381, label %386, label %382

382:                                              ; preds = %377
  %383 = getelementptr inbounds i16, i16* %379, i64 1
  %384 = add i64 %378, -1
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %392, label %377

386:                                              ; preds = %377
  %387 = icmp eq i16* %379, null
  %388 = ptrtoint i16* %379 to i64
  %389 = sub i64 %388, %370
  %390 = icmp eq i64 %389, -2
  %391 = or i1 %387, %390
  br i1 %391, label %392, label %405

392:                                              ; preds = %382, %386, %373
  br i1 %366, label %393, label %394

393:                                              ; preds = %392
  switch i16 %376, label %394 [
    i16 32, label %405
    i16 13, label %405
    i16 10, label %405
    i16 9, label %405
    i16 12, label %405
  ]

394:                                              ; preds = %393, %392
  %395 = getelementptr inbounds i16, i16* %375, i64 1
  store i16* %395, i16** %72, align 8
  %396 = icmp eq i16* %395, %328
  %397 = ptrtoint i16* %395 to i64
  br i1 %396, label %403, label %373

398:                                              ; preds = %316
  %399 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %399, label %400, label %1167

400:                                              ; preds = %398
  %401 = load i16*, i16** %53, align 8
  %402 = load i64, i64* %66, align 8
  br label %405

403:                                              ; preds = %394
  %404 = ptrtoint i16* %395 to i64
  br label %405

405:                                              ; preds = %386, %393, %393, %393, %393, %393, %403, %400, %365
  %406 = phi i64 [ %402, %400 ], [ %367, %365 ], [ %404, %403 ], [ %374, %393 ], [ %374, %393 ], [ %374, %393 ], [ %374, %393 ], [ %374, %393 ], [ %374, %386 ]
  %407 = phi i16* [ %401, %400 ], [ %342, %365 ], [ %342, %403 ], [ %342, %393 ], [ %342, %393 ], [ %342, %393 ], [ %342, %393 ], [ %342, %393 ], [ %342, %386 ]
  %408 = ptrtoint i16* %407 to i64
  %409 = sub i64 %406, %408
  %410 = ashr exact i64 %409, 1
  %411 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %407, i64 %410, i32* nonnull %9) #16
  br i1 %411, label %412, label %1167

412:                                              ; preds = %405
  %413 = load i8, i8* %65, align 1
  %414 = icmp slt i8 %413, 0
  %415 = load i64, i64* %67, align 8
  %416 = zext i8 %413 to i64
  %417 = select i1 %414, i64 %415, i64 %416
  %418 = icmp eq i64 %417, 0
  %419 = load i32, i32* %57, align 8
  %420 = icmp eq i32 %419, 0
  %421 = and i1 %418, %420
  br i1 %421, label %422, label %495

422:                                              ; preds = %412
  store i8 0, i8* %58, align 4
  %423 = load i64, i64* %70, align 8
  store i64 %423, i64* %71, align 8
  %424 = inttoptr i64 %423 to i16*
  %425 = load i16*, i16** %55, align 8
  %426 = icmp eq i16* %425, %424
  br i1 %426, label %437, label %427

427:                                              ; preds = %422
  %428 = load i8, i8* %74, align 1
  %429 = icmp slt i8 %428, 0
  %430 = zext i8 %428 to i64
  %431 = load i16*, i16** %76, align 8
  %432 = load i64, i64* %77, align 8
  %433 = select i1 %429, i16* %431, i16* %75
  %434 = select i1 %429, i64 %432, i64 %430
  %435 = icmp eq i64 %434, 0
  %436 = ptrtoint i16* %433 to i64
  br label %438

437:                                              ; preds = %468, %422
  store i8 1, i8* %58, align 4
  br label %1167

438:                                              ; preds = %468, %427
  %439 = phi i16* [ %424, %427 ], [ %440, %468 ]
  %440 = getelementptr inbounds i16, i16* %439, i64 1
  store i16* %440, i16** %72, align 8
  %441 = load i16, i16* %439, align 2
  %442 = ptrtoint i16* %440 to i64
  br i1 %435, label %458, label %443

443:                                              ; preds = %438, %448
  %444 = phi i64 [ %450, %448 ], [ %434, %438 ]
  %445 = phi i16* [ %449, %448 ], [ %433, %438 ]
  %446 = load i16, i16* %445, align 2
  %447 = icmp eq i16 %446, %441
  br i1 %447, label %452, label %448

448:                                              ; preds = %443
  %449 = getelementptr inbounds i16, i16* %445, i64 1
  %450 = add i64 %444, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %458, label %443

452:                                              ; preds = %443
  %453 = icmp eq i16* %445, null
  %454 = ptrtoint i16* %445 to i64
  %455 = sub i64 %454, %436
  %456 = icmp eq i64 %455, -2
  %457 = or i1 %453, %456
  br i1 %457, label %458, label %468

458:                                              ; preds = %448, %452, %438
  %459 = load i32, i32* %59, align 8
  %460 = icmp eq i32 %459, 1
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  switch i16 %441, label %462 [
    i16 32, label %468
    i16 13, label %468
    i16 10, label %468
    i16 9, label %468
    i16 12, label %468
  ]

462:                                              ; preds = %461, %458
  %463 = phi i1 [ true, %461 ], [ false, %458 ]
  %464 = ptrtoint i16* %440 to i64
  %465 = icmp eq i16* %440, %425
  br i1 %465, label %502, label %466

466:                                              ; preds = %462
  %467 = ptrtoint i16* %433 to i64
  br label %470

468:                                              ; preds = %461, %461, %461, %461, %461, %452
  store i64 %442, i64* %71, align 8
  %469 = icmp eq i16* %425, %440
  br i1 %469, label %437, label %438

470:                                              ; preds = %466, %491
  %471 = phi i64 [ %494, %491 ], [ %464, %466 ]
  %472 = phi i16* [ %492, %491 ], [ %440, %466 ]
  %473 = load i16, i16* %472, align 2
  br i1 %435, label %489, label %474

474:                                              ; preds = %470, %479
  %475 = phi i64 [ %481, %479 ], [ %434, %470 ]
  %476 = phi i16* [ %480, %479 ], [ %433, %470 ]
  %477 = load i16, i16* %476, align 2
  %478 = icmp eq i16 %477, %473
  br i1 %478, label %483, label %479

479:                                              ; preds = %474
  %480 = getelementptr inbounds i16, i16* %476, i64 1
  %481 = add i64 %475, -1
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %489, label %474

483:                                              ; preds = %474
  %484 = icmp eq i16* %476, null
  %485 = ptrtoint i16* %476 to i64
  %486 = sub i64 %485, %467
  %487 = icmp eq i64 %486, -2
  %488 = or i1 %484, %487
  br i1 %488, label %489, label %502

489:                                              ; preds = %479, %483, %470
  br i1 %463, label %490, label %491

490:                                              ; preds = %489
  switch i16 %473, label %491 [
    i16 32, label %502
    i16 13, label %502
    i16 10, label %502
    i16 9, label %502
    i16 12, label %502
  ]

491:                                              ; preds = %490, %489
  %492 = getelementptr inbounds i16, i16* %472, i64 1
  store i16* %492, i16** %72, align 8
  %493 = icmp eq i16* %492, %425
  %494 = ptrtoint i16* %492 to i64
  br i1 %493, label %500, label %470

495:                                              ; preds = %412
  %496 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %496, label %497, label %1167

497:                                              ; preds = %495
  %498 = load i16*, i16** %53, align 8
  %499 = load i64, i64* %66, align 8
  br label %502

500:                                              ; preds = %491
  %501 = ptrtoint i16* %492 to i64
  br label %502

502:                                              ; preds = %483, %490, %490, %490, %490, %490, %500, %497, %462
  %503 = phi i64 [ %499, %497 ], [ %464, %462 ], [ %501, %500 ], [ %471, %490 ], [ %471, %490 ], [ %471, %490 ], [ %471, %490 ], [ %471, %490 ], [ %471, %483 ]
  %504 = phi i16* [ %498, %497 ], [ %439, %462 ], [ %439, %500 ], [ %439, %490 ], [ %439, %490 ], [ %439, %490 ], [ %439, %490 ], [ %439, %490 ], [ %439, %483 ]
  %505 = ptrtoint i16* %504 to i64
  %506 = sub i64 %503, %505
  %507 = icmp eq i64 %506, 2
  br i1 %507, label %508, label %1167

508:                                              ; preds = %502
  %509 = load i16, i16* %504, align 2
  %510 = icmp eq i16 %509, 44
  br i1 %510, label %511, label %1167

511:                                              ; preds = %508
  %512 = load i8, i8* %65, align 1
  %513 = icmp slt i8 %512, 0
  %514 = load i64, i64* %67, align 8
  %515 = zext i8 %512 to i64
  %516 = select i1 %513, i64 %514, i64 %515
  %517 = icmp eq i64 %516, 0
  %518 = load i32, i32* %57, align 8
  %519 = icmp eq i32 %518, 0
  %520 = and i1 %517, %519
  br i1 %520, label %521, label %593

521:                                              ; preds = %511
  store i8 0, i8* %58, align 4
  store i64 %503, i64* %71, align 8
  %522 = inttoptr i64 %503 to i16*
  %523 = load i16*, i16** %55, align 8
  %524 = icmp eq i16* %523, %522
  br i1 %524, label %535, label %525

525:                                              ; preds = %521
  %526 = load i8, i8* %74, align 1
  %527 = icmp slt i8 %526, 0
  %528 = zext i8 %526 to i64
  %529 = load i16*, i16** %76, align 8
  %530 = load i64, i64* %77, align 8
  %531 = select i1 %527, i16* %529, i16* %75
  %532 = select i1 %527, i64 %530, i64 %528
  %533 = icmp eq i64 %532, 0
  %534 = ptrtoint i16* %531 to i64
  br label %536

535:                                              ; preds = %566, %521
  store i8 1, i8* %58, align 4
  br label %1167

536:                                              ; preds = %566, %525
  %537 = phi i16* [ %522, %525 ], [ %538, %566 ]
  %538 = getelementptr inbounds i16, i16* %537, i64 1
  store i16* %538, i16** %72, align 8
  %539 = load i16, i16* %537, align 2
  %540 = ptrtoint i16* %538 to i64
  br i1 %533, label %556, label %541

541:                                              ; preds = %536, %546
  %542 = phi i64 [ %548, %546 ], [ %532, %536 ]
  %543 = phi i16* [ %547, %546 ], [ %531, %536 ]
  %544 = load i16, i16* %543, align 2
  %545 = icmp eq i16 %544, %539
  br i1 %545, label %550, label %546

546:                                              ; preds = %541
  %547 = getelementptr inbounds i16, i16* %543, i64 1
  %548 = add i64 %542, -1
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %556, label %541

550:                                              ; preds = %541
  %551 = icmp eq i16* %543, null
  %552 = ptrtoint i16* %543 to i64
  %553 = sub i64 %552, %534
  %554 = icmp eq i64 %553, -2
  %555 = or i1 %551, %554
  br i1 %555, label %556, label %566

556:                                              ; preds = %546, %550, %536
  %557 = load i32, i32* %59, align 8
  %558 = icmp eq i32 %557, 1
  br i1 %558, label %559, label %560

559:                                              ; preds = %556
  switch i16 %539, label %560 [
    i16 32, label %566
    i16 13, label %566
    i16 10, label %566
    i16 9, label %566
    i16 12, label %566
  ]

560:                                              ; preds = %559, %556
  %561 = phi i1 [ true, %559 ], [ false, %556 ]
  %562 = ptrtoint i16* %538 to i64
  %563 = icmp eq i16* %538, %523
  br i1 %563, label %600, label %564

564:                                              ; preds = %560
  %565 = ptrtoint i16* %531 to i64
  br label %568

566:                                              ; preds = %559, %559, %559, %559, %559, %550
  store i64 %540, i64* %71, align 8
  %567 = icmp eq i16* %523, %538
  br i1 %567, label %535, label %536

568:                                              ; preds = %564, %589
  %569 = phi i64 [ %592, %589 ], [ %562, %564 ]
  %570 = phi i16* [ %590, %589 ], [ %538, %564 ]
  %571 = load i16, i16* %570, align 2
  br i1 %533, label %587, label %572

572:                                              ; preds = %568, %577
  %573 = phi i64 [ %579, %577 ], [ %532, %568 ]
  %574 = phi i16* [ %578, %577 ], [ %531, %568 ]
  %575 = load i16, i16* %574, align 2
  %576 = icmp eq i16 %575, %571
  br i1 %576, label %581, label %577

577:                                              ; preds = %572
  %578 = getelementptr inbounds i16, i16* %574, i64 1
  %579 = add i64 %573, -1
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %587, label %572

581:                                              ; preds = %572
  %582 = icmp eq i16* %574, null
  %583 = ptrtoint i16* %574 to i64
  %584 = sub i64 %583, %565
  %585 = icmp eq i64 %584, -2
  %586 = or i1 %582, %585
  br i1 %586, label %587, label %600

587:                                              ; preds = %577, %581, %568
  br i1 %561, label %588, label %589

588:                                              ; preds = %587
  switch i16 %571, label %589 [
    i16 32, label %600
    i16 13, label %600
    i16 10, label %600
    i16 9, label %600
    i16 12, label %600
  ]

589:                                              ; preds = %588, %587
  %590 = getelementptr inbounds i16, i16* %570, i64 1
  store i16* %590, i16** %72, align 8
  %591 = icmp eq i16* %590, %523
  %592 = ptrtoint i16* %590 to i64
  br i1 %591, label %598, label %568

593:                                              ; preds = %511
  %594 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %594, label %595, label %1167

595:                                              ; preds = %593
  %596 = load i16*, i16** %53, align 8
  %597 = load i64, i64* %66, align 8
  br label %600

598:                                              ; preds = %589
  %599 = ptrtoint i16* %590 to i64
  br label %600

600:                                              ; preds = %581, %588, %588, %588, %588, %588, %598, %595, %560
  %601 = phi i64 [ %597, %595 ], [ %562, %560 ], [ %599, %598 ], [ %569, %588 ], [ %569, %588 ], [ %569, %588 ], [ %569, %588 ], [ %569, %588 ], [ %569, %581 ]
  %602 = phi i16* [ %596, %595 ], [ %537, %560 ], [ %537, %598 ], [ %537, %588 ], [ %537, %588 ], [ %537, %588 ], [ %537, %588 ], [ %537, %588 ], [ %537, %581 ]
  %603 = ptrtoint i16* %602 to i64
  %604 = sub i64 %601, %603
  %605 = ashr exact i64 %604, 1
  %606 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %602, i64 %605, i32* nonnull %10) #16
  br i1 %606, label %607, label %1167

607:                                              ; preds = %600
  %608 = load i8, i8* %65, align 1
  %609 = icmp slt i8 %608, 0
  %610 = load i64, i64* %67, align 8
  %611 = zext i8 %608 to i64
  %612 = select i1 %609, i64 %610, i64 %611
  %613 = icmp eq i64 %612, 0
  %614 = load i32, i32* %57, align 8
  %615 = icmp eq i32 %614, 0
  %616 = and i1 %613, %615
  br i1 %616, label %617, label %690

617:                                              ; preds = %607
  store i8 0, i8* %58, align 4
  %618 = load i64, i64* %70, align 8
  store i64 %618, i64* %71, align 8
  %619 = inttoptr i64 %618 to i16*
  %620 = load i16*, i16** %55, align 8
  %621 = icmp eq i16* %620, %619
  br i1 %621, label %632, label %622

622:                                              ; preds = %617
  %623 = load i8, i8* %74, align 1
  %624 = icmp slt i8 %623, 0
  %625 = zext i8 %623 to i64
  %626 = load i16*, i16** %76, align 8
  %627 = load i64, i64* %77, align 8
  %628 = select i1 %624, i16* %626, i16* %75
  %629 = select i1 %624, i64 %627, i64 %625
  %630 = icmp eq i64 %629, 0
  %631 = ptrtoint i16* %628 to i64
  br label %633

632:                                              ; preds = %663, %617
  store i8 1, i8* %58, align 4
  br label %1167

633:                                              ; preds = %663, %622
  %634 = phi i16* [ %619, %622 ], [ %635, %663 ]
  %635 = getelementptr inbounds i16, i16* %634, i64 1
  store i16* %635, i16** %72, align 8
  %636 = load i16, i16* %634, align 2
  %637 = ptrtoint i16* %635 to i64
  br i1 %630, label %653, label %638

638:                                              ; preds = %633, %643
  %639 = phi i64 [ %645, %643 ], [ %629, %633 ]
  %640 = phi i16* [ %644, %643 ], [ %628, %633 ]
  %641 = load i16, i16* %640, align 2
  %642 = icmp eq i16 %641, %636
  br i1 %642, label %647, label %643

643:                                              ; preds = %638
  %644 = getelementptr inbounds i16, i16* %640, i64 1
  %645 = add i64 %639, -1
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %653, label %638

647:                                              ; preds = %638
  %648 = icmp eq i16* %640, null
  %649 = ptrtoint i16* %640 to i64
  %650 = sub i64 %649, %631
  %651 = icmp eq i64 %650, -2
  %652 = or i1 %648, %651
  br i1 %652, label %653, label %663

653:                                              ; preds = %643, %647, %633
  %654 = load i32, i32* %59, align 8
  %655 = icmp eq i32 %654, 1
  br i1 %655, label %656, label %657

656:                                              ; preds = %653
  switch i16 %636, label %657 [
    i16 32, label %663
    i16 13, label %663
    i16 10, label %663
    i16 9, label %663
    i16 12, label %663
  ]

657:                                              ; preds = %656, %653
  %658 = phi i1 [ true, %656 ], [ false, %653 ]
  %659 = ptrtoint i16* %635 to i64
  %660 = icmp eq i16* %635, %620
  br i1 %660, label %697, label %661

661:                                              ; preds = %657
  %662 = ptrtoint i16* %628 to i64
  br label %665

663:                                              ; preds = %656, %656, %656, %656, %656, %647
  store i64 %637, i64* %71, align 8
  %664 = icmp eq i16* %620, %635
  br i1 %664, label %632, label %633

665:                                              ; preds = %661, %686
  %666 = phi i64 [ %689, %686 ], [ %659, %661 ]
  %667 = phi i16* [ %687, %686 ], [ %635, %661 ]
  %668 = load i16, i16* %667, align 2
  br i1 %630, label %684, label %669

669:                                              ; preds = %665, %674
  %670 = phi i64 [ %676, %674 ], [ %629, %665 ]
  %671 = phi i16* [ %675, %674 ], [ %628, %665 ]
  %672 = load i16, i16* %671, align 2
  %673 = icmp eq i16 %672, %668
  br i1 %673, label %678, label %674

674:                                              ; preds = %669
  %675 = getelementptr inbounds i16, i16* %671, i64 1
  %676 = add i64 %670, -1
  %677 = icmp eq i64 %676, 0
  br i1 %677, label %684, label %669

678:                                              ; preds = %669
  %679 = icmp eq i16* %671, null
  %680 = ptrtoint i16* %671 to i64
  %681 = sub i64 %680, %662
  %682 = icmp eq i64 %681, -2
  %683 = or i1 %679, %682
  br i1 %683, label %684, label %697

684:                                              ; preds = %674, %678, %665
  br i1 %658, label %685, label %686

685:                                              ; preds = %684
  switch i16 %668, label %686 [
    i16 32, label %697
    i16 13, label %697
    i16 10, label %697
    i16 9, label %697
    i16 12, label %697
  ]

686:                                              ; preds = %685, %684
  %687 = getelementptr inbounds i16, i16* %667, i64 1
  store i16* %687, i16** %72, align 8
  %688 = icmp eq i16* %687, %620
  %689 = ptrtoint i16* %687 to i64
  br i1 %688, label %695, label %665

690:                                              ; preds = %607
  %691 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %691, label %692, label %1167

692:                                              ; preds = %690
  %693 = load i16*, i16** %53, align 8
  %694 = load i64, i64* %66, align 8
  br label %697

695:                                              ; preds = %686
  %696 = ptrtoint i16* %687 to i64
  br label %697

697:                                              ; preds = %678, %685, %685, %685, %685, %685, %695, %692, %657
  %698 = phi i64 [ %694, %692 ], [ %659, %657 ], [ %696, %695 ], [ %666, %685 ], [ %666, %685 ], [ %666, %685 ], [ %666, %685 ], [ %666, %685 ], [ %666, %678 ]
  %699 = phi i16* [ %693, %692 ], [ %634, %657 ], [ %634, %695 ], [ %634, %685 ], [ %634, %685 ], [ %634, %685 ], [ %634, %685 ], [ %634, %685 ], [ %634, %678 ]
  %700 = ptrtoint i16* %699 to i64
  %701 = sub i64 %698, %700
  %702 = icmp eq i64 %701, 2
  br i1 %702, label %703, label %1167

703:                                              ; preds = %697
  %704 = load i16, i16* %699, align 2
  %705 = icmp eq i16 %704, 41
  br i1 %705, label %706, label %1167

706:                                              ; preds = %703
  %707 = load i8, i8* %65, align 1
  %708 = icmp slt i8 %707, 0
  %709 = load i64, i64* %67, align 8
  %710 = zext i8 %707 to i64
  %711 = select i1 %708, i64 %709, i64 %710
  %712 = icmp eq i64 %711, 0
  %713 = load i32, i32* %57, align 8
  %714 = icmp eq i32 %713, 0
  %715 = and i1 %712, %714
  br i1 %715, label %716, label %788

716:                                              ; preds = %706
  store i8 0, i8* %58, align 4
  store i64 %698, i64* %71, align 8
  %717 = inttoptr i64 %698 to i16*
  %718 = load i16*, i16** %55, align 8
  %719 = icmp eq i16* %718, %717
  br i1 %719, label %730, label %720

720:                                              ; preds = %716
  %721 = load i8, i8* %74, align 1
  %722 = icmp slt i8 %721, 0
  %723 = zext i8 %721 to i64
  %724 = load i16*, i16** %76, align 8
  %725 = load i64, i64* %77, align 8
  %726 = select i1 %722, i16* %724, i16* %75
  %727 = select i1 %722, i64 %725, i64 %723
  %728 = icmp eq i64 %727, 0
  %729 = ptrtoint i16* %726 to i64
  br label %731

730:                                              ; preds = %761, %716
  store i8 1, i8* %58, align 4
  br label %1167

731:                                              ; preds = %761, %720
  %732 = phi i16* [ %717, %720 ], [ %733, %761 ]
  %733 = getelementptr inbounds i16, i16* %732, i64 1
  store i16* %733, i16** %72, align 8
  %734 = load i16, i16* %732, align 2
  %735 = ptrtoint i16* %733 to i64
  br i1 %728, label %751, label %736

736:                                              ; preds = %731, %741
  %737 = phi i64 [ %743, %741 ], [ %727, %731 ]
  %738 = phi i16* [ %742, %741 ], [ %726, %731 ]
  %739 = load i16, i16* %738, align 2
  %740 = icmp eq i16 %739, %734
  br i1 %740, label %745, label %741

741:                                              ; preds = %736
  %742 = getelementptr inbounds i16, i16* %738, i64 1
  %743 = add i64 %737, -1
  %744 = icmp eq i64 %743, 0
  br i1 %744, label %751, label %736

745:                                              ; preds = %736
  %746 = icmp eq i16* %738, null
  %747 = ptrtoint i16* %738 to i64
  %748 = sub i64 %747, %729
  %749 = icmp eq i64 %748, -2
  %750 = or i1 %746, %749
  br i1 %750, label %751, label %761

751:                                              ; preds = %741, %745, %731
  %752 = load i32, i32* %59, align 8
  %753 = icmp eq i32 %752, 1
  br i1 %753, label %754, label %755

754:                                              ; preds = %751
  switch i16 %734, label %755 [
    i16 32, label %761
    i16 13, label %761
    i16 10, label %761
    i16 9, label %761
    i16 12, label %761
  ]

755:                                              ; preds = %754, %751
  %756 = phi i1 [ true, %754 ], [ false, %751 ]
  %757 = ptrtoint i16* %733 to i64
  %758 = icmp eq i16* %733, %718
  br i1 %758, label %795, label %759

759:                                              ; preds = %755
  %760 = ptrtoint i16* %726 to i64
  br label %763

761:                                              ; preds = %754, %754, %754, %754, %754, %745
  store i64 %735, i64* %71, align 8
  %762 = icmp eq i16* %718, %733
  br i1 %762, label %730, label %731

763:                                              ; preds = %759, %784
  %764 = phi i64 [ %787, %784 ], [ %757, %759 ]
  %765 = phi i16* [ %785, %784 ], [ %733, %759 ]
  %766 = load i16, i16* %765, align 2
  br i1 %728, label %782, label %767

767:                                              ; preds = %763, %772
  %768 = phi i64 [ %774, %772 ], [ %727, %763 ]
  %769 = phi i16* [ %773, %772 ], [ %726, %763 ]
  %770 = load i16, i16* %769, align 2
  %771 = icmp eq i16 %770, %766
  br i1 %771, label %776, label %772

772:                                              ; preds = %767
  %773 = getelementptr inbounds i16, i16* %769, i64 1
  %774 = add i64 %768, -1
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %782, label %767

776:                                              ; preds = %767
  %777 = icmp eq i16* %769, null
  %778 = ptrtoint i16* %769 to i64
  %779 = sub i64 %778, %760
  %780 = icmp eq i64 %779, -2
  %781 = or i1 %777, %780
  br i1 %781, label %782, label %795

782:                                              ; preds = %772, %776, %763
  br i1 %756, label %783, label %784

783:                                              ; preds = %782
  switch i16 %766, label %784 [
    i16 32, label %795
    i16 13, label %795
    i16 10, label %795
    i16 9, label %795
    i16 12, label %795
  ]

784:                                              ; preds = %783, %782
  %785 = getelementptr inbounds i16, i16* %765, i64 1
  store i16* %785, i16** %72, align 8
  %786 = icmp eq i16* %785, %718
  %787 = ptrtoint i16* %785 to i64
  br i1 %786, label %793, label %763

788:                                              ; preds = %706
  %789 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %789, label %790, label %1167

790:                                              ; preds = %788
  %791 = load i16*, i16** %53, align 8
  %792 = load i64, i64* %66, align 8
  br label %795

793:                                              ; preds = %784
  %794 = ptrtoint i16* %785 to i64
  br label %795

795:                                              ; preds = %776, %783, %783, %783, %783, %783, %793, %790, %755
  %796 = phi i64 [ %792, %790 ], [ %757, %755 ], [ %794, %793 ], [ %764, %783 ], [ %764, %783 ], [ %764, %783 ], [ %764, %783 ], [ %764, %783 ], [ %764, %776 ]
  %797 = phi i16* [ %791, %790 ], [ %732, %755 ], [ %732, %793 ], [ %732, %783 ], [ %732, %783 ], [ %732, %783 ], [ %732, %783 ], [ %732, %783 ], [ %732, %776 ]
  %798 = ptrtoint i16* %797 to i64
  %799 = sub i64 %796, %798
  %800 = icmp eq i64 %799, 2
  br i1 %800, label %801, label %1167

801:                                              ; preds = %795
  %802 = load i16, i16* %797, align 2
  %803 = icmp eq i16 %802, 44
  br i1 %803, label %804, label %1167

804:                                              ; preds = %801
  %805 = load i8, i8* %65, align 1
  %806 = icmp slt i8 %805, 0
  %807 = load i64, i64* %67, align 8
  %808 = zext i8 %805 to i64
  %809 = select i1 %806, i64 %807, i64 %808
  %810 = icmp eq i64 %809, 0
  %811 = load i32, i32* %57, align 8
  %812 = icmp eq i32 %811, 0
  %813 = and i1 %810, %812
  br i1 %813, label %814, label %886

814:                                              ; preds = %804
  store i8 0, i8* %58, align 4
  store i64 %796, i64* %71, align 8
  %815 = inttoptr i64 %796 to i16*
  %816 = load i16*, i16** %55, align 8
  %817 = icmp eq i16* %816, %815
  br i1 %817, label %828, label %818

818:                                              ; preds = %814
  %819 = load i8, i8* %74, align 1
  %820 = icmp slt i8 %819, 0
  %821 = zext i8 %819 to i64
  %822 = load i16*, i16** %76, align 8
  %823 = load i64, i64* %77, align 8
  %824 = select i1 %820, i16* %822, i16* %75
  %825 = select i1 %820, i64 %823, i64 %821
  %826 = icmp eq i64 %825, 0
  %827 = ptrtoint i16* %824 to i64
  br label %829

828:                                              ; preds = %859, %814
  store i8 1, i8* %58, align 4
  br label %1167

829:                                              ; preds = %859, %818
  %830 = phi i16* [ %815, %818 ], [ %831, %859 ]
  %831 = getelementptr inbounds i16, i16* %830, i64 1
  store i16* %831, i16** %72, align 8
  %832 = load i16, i16* %830, align 2
  %833 = ptrtoint i16* %831 to i64
  br i1 %826, label %849, label %834

834:                                              ; preds = %829, %839
  %835 = phi i64 [ %841, %839 ], [ %825, %829 ]
  %836 = phi i16* [ %840, %839 ], [ %824, %829 ]
  %837 = load i16, i16* %836, align 2
  %838 = icmp eq i16 %837, %832
  br i1 %838, label %843, label %839

839:                                              ; preds = %834
  %840 = getelementptr inbounds i16, i16* %836, i64 1
  %841 = add i64 %835, -1
  %842 = icmp eq i64 %841, 0
  br i1 %842, label %849, label %834

843:                                              ; preds = %834
  %844 = icmp eq i16* %836, null
  %845 = ptrtoint i16* %836 to i64
  %846 = sub i64 %845, %827
  %847 = icmp eq i64 %846, -2
  %848 = or i1 %844, %847
  br i1 %848, label %849, label %859

849:                                              ; preds = %839, %843, %829
  %850 = load i32, i32* %59, align 8
  %851 = icmp eq i32 %850, 1
  br i1 %851, label %852, label %853

852:                                              ; preds = %849
  switch i16 %832, label %853 [
    i16 32, label %859
    i16 13, label %859
    i16 10, label %859
    i16 9, label %859
    i16 12, label %859
  ]

853:                                              ; preds = %852, %849
  %854 = phi i1 [ true, %852 ], [ false, %849 ]
  %855 = ptrtoint i16* %831 to i64
  %856 = icmp eq i16* %831, %816
  br i1 %856, label %893, label %857

857:                                              ; preds = %853
  %858 = ptrtoint i16* %824 to i64
  br label %861

859:                                              ; preds = %852, %852, %852, %852, %852, %843
  store i64 %833, i64* %71, align 8
  %860 = icmp eq i16* %816, %831
  br i1 %860, label %828, label %829

861:                                              ; preds = %857, %882
  %862 = phi i64 [ %885, %882 ], [ %855, %857 ]
  %863 = phi i16* [ %883, %882 ], [ %831, %857 ]
  %864 = load i16, i16* %863, align 2
  br i1 %826, label %880, label %865

865:                                              ; preds = %861, %870
  %866 = phi i64 [ %872, %870 ], [ %825, %861 ]
  %867 = phi i16* [ %871, %870 ], [ %824, %861 ]
  %868 = load i16, i16* %867, align 2
  %869 = icmp eq i16 %868, %864
  br i1 %869, label %874, label %870

870:                                              ; preds = %865
  %871 = getelementptr inbounds i16, i16* %867, i64 1
  %872 = add i64 %866, -1
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %880, label %865

874:                                              ; preds = %865
  %875 = icmp eq i16* %867, null
  %876 = ptrtoint i16* %867 to i64
  %877 = sub i64 %876, %858
  %878 = icmp eq i64 %877, -2
  %879 = or i1 %875, %878
  br i1 %879, label %880, label %893

880:                                              ; preds = %870, %874, %861
  br i1 %854, label %881, label %882

881:                                              ; preds = %880
  switch i16 %864, label %882 [
    i16 32, label %893
    i16 13, label %893
    i16 10, label %893
    i16 9, label %893
    i16 12, label %893
  ]

882:                                              ; preds = %881, %880
  %883 = getelementptr inbounds i16, i16* %863, i64 1
  store i16* %883, i16** %72, align 8
  %884 = icmp eq i16* %883, %816
  %885 = ptrtoint i16* %883 to i64
  br i1 %884, label %891, label %861

886:                                              ; preds = %804
  %887 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %887, label %888, label %1167

888:                                              ; preds = %886
  %889 = load i16*, i16** %53, align 8
  %890 = load i64, i64* %66, align 8
  br label %893

891:                                              ; preds = %882
  %892 = ptrtoint i16* %883 to i64
  br label %893

893:                                              ; preds = %874, %881, %881, %881, %881, %881, %891, %888, %853
  %894 = phi i64 [ %890, %888 ], [ %855, %853 ], [ %892, %891 ], [ %862, %881 ], [ %862, %881 ], [ %862, %881 ], [ %862, %881 ], [ %862, %881 ], [ %862, %874 ]
  %895 = phi i16* [ %889, %888 ], [ %830, %853 ], [ %830, %891 ], [ %830, %881 ], [ %830, %881 ], [ %830, %881 ], [ %830, %881 ], [ %830, %881 ], [ %830, %874 ]
  %896 = ptrtoint i16* %895 to i64
  %897 = sub i64 %894, %896
  %898 = ashr exact i64 %897, 1
  %899 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %895, i64 %898, double* nonnull %11) #16
  br i1 %899, label %900, label %1167

900:                                              ; preds = %893
  %901 = load i8, i8* %65, align 1
  %902 = icmp slt i8 %901, 0
  %903 = load i64, i64* %67, align 8
  %904 = zext i8 %901 to i64
  %905 = select i1 %902, i64 %903, i64 %904
  %906 = icmp eq i64 %905, 0
  %907 = load i32, i32* %57, align 8
  %908 = icmp eq i32 %907, 0
  %909 = and i1 %906, %908
  br i1 %909, label %910, label %983

910:                                              ; preds = %900
  store i8 0, i8* %58, align 4
  %911 = load i64, i64* %70, align 8
  store i64 %911, i64* %71, align 8
  %912 = inttoptr i64 %911 to i16*
  %913 = load i16*, i16** %55, align 8
  %914 = icmp eq i16* %913, %912
  br i1 %914, label %925, label %915

915:                                              ; preds = %910
  %916 = load i8, i8* %74, align 1
  %917 = icmp slt i8 %916, 0
  %918 = zext i8 %916 to i64
  %919 = load i16*, i16** %76, align 8
  %920 = load i64, i64* %77, align 8
  %921 = select i1 %917, i16* %919, i16* %75
  %922 = select i1 %917, i64 %920, i64 %918
  %923 = icmp eq i64 %922, 0
  %924 = ptrtoint i16* %921 to i64
  br label %926

925:                                              ; preds = %956, %910
  store i8 1, i8* %58, align 4
  br label %1167

926:                                              ; preds = %956, %915
  %927 = phi i16* [ %912, %915 ], [ %928, %956 ]
  %928 = getelementptr inbounds i16, i16* %927, i64 1
  store i16* %928, i16** %72, align 8
  %929 = load i16, i16* %927, align 2
  %930 = ptrtoint i16* %928 to i64
  br i1 %923, label %946, label %931

931:                                              ; preds = %926, %936
  %932 = phi i64 [ %938, %936 ], [ %922, %926 ]
  %933 = phi i16* [ %937, %936 ], [ %921, %926 ]
  %934 = load i16, i16* %933, align 2
  %935 = icmp eq i16 %934, %929
  br i1 %935, label %940, label %936

936:                                              ; preds = %931
  %937 = getelementptr inbounds i16, i16* %933, i64 1
  %938 = add i64 %932, -1
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %946, label %931

940:                                              ; preds = %931
  %941 = icmp eq i16* %933, null
  %942 = ptrtoint i16* %933 to i64
  %943 = sub i64 %942, %924
  %944 = icmp eq i64 %943, -2
  %945 = or i1 %941, %944
  br i1 %945, label %946, label %956

946:                                              ; preds = %936, %940, %926
  %947 = load i32, i32* %59, align 8
  %948 = icmp eq i32 %947, 1
  br i1 %948, label %949, label %950

949:                                              ; preds = %946
  switch i16 %929, label %950 [
    i16 32, label %956
    i16 13, label %956
    i16 10, label %956
    i16 9, label %956
    i16 12, label %956
  ]

950:                                              ; preds = %949, %946
  %951 = phi i1 [ true, %949 ], [ false, %946 ]
  %952 = ptrtoint i16* %928 to i64
  %953 = icmp eq i16* %928, %913
  br i1 %953, label %990, label %954

954:                                              ; preds = %950
  %955 = ptrtoint i16* %921 to i64
  br label %958

956:                                              ; preds = %949, %949, %949, %949, %949, %940
  store i64 %930, i64* %71, align 8
  %957 = icmp eq i16* %913, %928
  br i1 %957, label %925, label %926

958:                                              ; preds = %954, %979
  %959 = phi i64 [ %982, %979 ], [ %952, %954 ]
  %960 = phi i16* [ %980, %979 ], [ %928, %954 ]
  %961 = load i16, i16* %960, align 2
  br i1 %923, label %977, label %962

962:                                              ; preds = %958, %967
  %963 = phi i64 [ %969, %967 ], [ %922, %958 ]
  %964 = phi i16* [ %968, %967 ], [ %921, %958 ]
  %965 = load i16, i16* %964, align 2
  %966 = icmp eq i16 %965, %961
  br i1 %966, label %971, label %967

967:                                              ; preds = %962
  %968 = getelementptr inbounds i16, i16* %964, i64 1
  %969 = add i64 %963, -1
  %970 = icmp eq i64 %969, 0
  br i1 %970, label %977, label %962

971:                                              ; preds = %962
  %972 = icmp eq i16* %964, null
  %973 = ptrtoint i16* %964 to i64
  %974 = sub i64 %973, %955
  %975 = icmp eq i64 %974, -2
  %976 = or i1 %972, %975
  br i1 %976, label %977, label %990

977:                                              ; preds = %967, %971, %958
  br i1 %951, label %978, label %979

978:                                              ; preds = %977
  switch i16 %961, label %979 [
    i16 32, label %990
    i16 13, label %990
    i16 10, label %990
    i16 9, label %990
    i16 12, label %990
  ]

979:                                              ; preds = %978, %977
  %980 = getelementptr inbounds i16, i16* %960, i64 1
  store i16* %980, i16** %72, align 8
  %981 = icmp eq i16* %980, %913
  %982 = ptrtoint i16* %980 to i64
  br i1 %981, label %988, label %958

983:                                              ; preds = %900
  %984 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %984, label %985, label %1167

985:                                              ; preds = %983
  %986 = load i16*, i16** %53, align 8
  %987 = load i64, i64* %66, align 8
  br label %990

988:                                              ; preds = %979
  %989 = ptrtoint i16* %980 to i64
  br label %990

990:                                              ; preds = %971, %978, %978, %978, %978, %978, %988, %985, %950
  %991 = phi i64 [ %987, %985 ], [ %952, %950 ], [ %989, %988 ], [ %959, %978 ], [ %959, %978 ], [ %959, %978 ], [ %959, %978 ], [ %959, %978 ], [ %959, %971 ]
  %992 = phi i16* [ %986, %985 ], [ %927, %950 ], [ %927, %988 ], [ %927, %978 ], [ %927, %978 ], [ %927, %978 ], [ %927, %978 ], [ %927, %978 ], [ %927, %971 ]
  %993 = ptrtoint i16* %992 to i64
  %994 = sub i64 %991, %993
  %995 = icmp eq i64 %994, 2
  br i1 %995, label %996, label %1167

996:                                              ; preds = %990
  %997 = load i16, i16* %992, align 2
  %998 = icmp eq i16 %997, 44
  br i1 %998, label %999, label %1167

999:                                              ; preds = %996
  %1000 = load i8, i8* %65, align 1
  %1001 = icmp slt i8 %1000, 0
  %1002 = load i64, i64* %67, align 8
  %1003 = zext i8 %1000 to i64
  %1004 = select i1 %1001, i64 %1002, i64 %1003
  %1005 = icmp eq i64 %1004, 0
  %1006 = load i32, i32* %57, align 8
  %1007 = icmp eq i32 %1006, 0
  %1008 = and i1 %1005, %1007
  br i1 %1008, label %1009, label %1078

1009:                                             ; preds = %999
  store i8 0, i8* %58, align 4
  store i64 %991, i64* %71, align 8
  %1010 = inttoptr i64 %991 to i16*
  %1011 = load i16*, i16** %55, align 8
  %1012 = icmp eq i16* %1011, %1010
  br i1 %1012, label %1023, label %1013

1013:                                             ; preds = %1009
  %1014 = load i8, i8* %74, align 1
  %1015 = icmp slt i8 %1014, 0
  %1016 = zext i8 %1014 to i64
  %1017 = load i16*, i16** %76, align 8
  %1018 = load i64, i64* %77, align 8
  %1019 = select i1 %1015, i16* %1017, i16* %75
  %1020 = select i1 %1015, i64 %1018, i64 %1016
  %1021 = icmp eq i64 %1020, 0
  %1022 = ptrtoint i16* %1019 to i64
  br label %1024

1023:                                             ; preds = %1053, %1009
  store i8 1, i8* %58, align 4
  br label %1167

1024:                                             ; preds = %1053, %1013
  %1025 = phi i16* [ %1010, %1013 ], [ %1026, %1053 ]
  %1026 = getelementptr inbounds i16, i16* %1025, i64 1
  store i16* %1026, i16** %72, align 8
  %1027 = load i16, i16* %1025, align 2
  %1028 = ptrtoint i16* %1026 to i64
  br i1 %1021, label %1044, label %1029

1029:                                             ; preds = %1024, %1034
  %1030 = phi i64 [ %1036, %1034 ], [ %1020, %1024 ]
  %1031 = phi i16* [ %1035, %1034 ], [ %1019, %1024 ]
  %1032 = load i16, i16* %1031, align 2
  %1033 = icmp eq i16 %1032, %1027
  br i1 %1033, label %1038, label %1034

1034:                                             ; preds = %1029
  %1035 = getelementptr inbounds i16, i16* %1031, i64 1
  %1036 = add i64 %1030, -1
  %1037 = icmp eq i64 %1036, 0
  br i1 %1037, label %1044, label %1029

1038:                                             ; preds = %1029
  %1039 = icmp eq i16* %1031, null
  %1040 = ptrtoint i16* %1031 to i64
  %1041 = sub i64 %1040, %1022
  %1042 = icmp eq i64 %1041, -2
  %1043 = or i1 %1039, %1042
  br i1 %1043, label %1044, label %1053

1044:                                             ; preds = %1034, %1038, %1024
  %1045 = load i32, i32* %59, align 8
  %1046 = icmp eq i32 %1045, 1
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1044
  switch i16 %1027, label %1048 [
    i16 32, label %1053
    i16 13, label %1053
    i16 10, label %1053
    i16 9, label %1053
    i16 12, label %1053
  ]

1048:                                             ; preds = %1047, %1044
  %1049 = phi i1 [ true, %1047 ], [ false, %1044 ]
  %1050 = icmp eq i16* %1026, %1011
  br i1 %1050, label %1082, label %1051

1051:                                             ; preds = %1048
  %1052 = ptrtoint i16* %1019 to i64
  br label %1055

1053:                                             ; preds = %1047, %1047, %1047, %1047, %1047, %1038
  store i64 %1028, i64* %71, align 8
  %1054 = icmp eq i16* %1011, %1026
  br i1 %1054, label %1023, label %1024

1055:                                             ; preds = %1051, %1075
  %1056 = phi i16* [ %1076, %1075 ], [ %1026, %1051 ]
  %1057 = load i16, i16* %1056, align 2
  br i1 %1021, label %1073, label %1058

1058:                                             ; preds = %1055, %1063
  %1059 = phi i64 [ %1065, %1063 ], [ %1020, %1055 ]
  %1060 = phi i16* [ %1064, %1063 ], [ %1019, %1055 ]
  %1061 = load i16, i16* %1060, align 2
  %1062 = icmp eq i16 %1061, %1057
  br i1 %1062, label %1067, label %1063

1063:                                             ; preds = %1058
  %1064 = getelementptr inbounds i16, i16* %1060, i64 1
  %1065 = add i64 %1059, -1
  %1066 = icmp eq i64 %1065, 0
  br i1 %1066, label %1073, label %1058

1067:                                             ; preds = %1058
  %1068 = icmp eq i16* %1060, null
  %1069 = ptrtoint i16* %1060 to i64
  %1070 = sub i64 %1069, %1052
  %1071 = icmp eq i64 %1070, -2
  %1072 = or i1 %1068, %1071
  br i1 %1072, label %1073, label %1082

1073:                                             ; preds = %1063, %1067, %1055
  br i1 %1049, label %1074, label %1075

1074:                                             ; preds = %1073
  switch i16 %1057, label %1075 [
    i16 32, label %1082
    i16 13, label %1082
    i16 10, label %1082
    i16 9, label %1082
    i16 12, label %1082
  ]

1075:                                             ; preds = %1074, %1073
  %1076 = getelementptr inbounds i16, i16* %1056, i64 1
  store i16* %1076, i16** %72, align 8
  %1077 = icmp eq i16* %1076, %1011
  br i1 %1077, label %1082, label %1055

1078:                                             ; preds = %999
  %1079 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %7) #16
  br i1 %1079, label %1080, label %1167

1080:                                             ; preds = %1078
  %1081 = load i16*, i16** %53, align 8
  br label %1082

1082:                                             ; preds = %1074, %1074, %1074, %1074, %1074, %1067, %1075, %1080, %1048
  %1083 = phi i16* [ %1081, %1080 ], [ %1025, %1048 ], [ %1025, %1075 ], [ %1025, %1067 ], [ %1025, %1074 ], [ %1025, %1074 ], [ %1025, %1074 ], [ %1025, %1074 ], [ %1025, %1074 ]
  %1084 = load i8, i8* %44, align 1
  %1085 = icmp slt i8 %1084, 0
  %1086 = load i16*, i16** %39, align 8
  %1087 = load i64, i64* %40, align 8
  %1088 = zext i8 %1084 to i64
  %1089 = select i1 %1085, i16* %1086, i16* %45
  %1090 = select i1 %1085, i64 %1087, i64 %1088
  %1091 = getelementptr inbounds i16, i16* %1089, i64 %1090
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #16
  store i16* null, i16** %79, align 8
  %1092 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RSA_(i16* %1083, i16* %1091, %"class.std::__1::__wrap_iter.142"* nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #16
  %1093 = trunc i64 %1092 to i8
  %1094 = lshr i64 %1092, 32
  %1095 = trunc i64 %1094 to i32
  %1096 = icmp eq i8 %1093, 0
  br i1 %1096, label %1167, label %1097

1097:                                             ; preds = %1082
  %1098 = load i32, i32* %9, align 4
  %1099 = load i32, i32* %10, align 4
  %1100 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %14, align 8
  %1101 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %15, align 16
  %1102 = icmp ult %"class.gfx::ShadowValue"* %1100, %1101
  %1103 = ptrtoint %"class.gfx::ShadowValue"* %1101 to i64
  br i1 %1102, label %1104, label %1116

1104:                                             ; preds = %1097
  %1105 = load i64, i64* %83, align 8
  %1106 = bitcast %"class.gfx::ShadowValue"* %1100 to i64*
  %1107 = zext i32 %1099 to i64
  %1108 = shl nuw i64 %1107, 32
  %1109 = zext i32 %1098 to i64
  %1110 = or i64 %1108, %1109
  store i64 %1110, i64* %1106, align 8
  %1111 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1100, i64 0, i32 1
  %1112 = bitcast double* %1111 to i64*
  store i64 %1105, i64* %1112, align 8
  %1113 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1100, i64 0, i32 2
  store i32 %1095, i32* %1113, align 8
  %1114 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1100, i64 1
  %1115 = ptrtoint %"class.gfx::ShadowValue"* %1114 to i64
  store i64 %1115, i64* %80, align 8
  br label %1167

1116:                                             ; preds = %1097
  %1117 = ptrtoint %"class.gfx::ShadowValue"* %1100 to i64
  %1118 = load i64, i64* %81, align 16
  %1119 = sub i64 %1117, %1118
  %1120 = sdiv exact i64 %1119, 24
  %1121 = add nsw i64 %1120, 1
  %1122 = icmp ugt i64 %1121, 768614336404564650
  br i1 %1122, label %1123, label %1125

1123:                                             ; preds = %1116
  %1124 = bitcast %"class.std::__1::vector.15"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1124) #14
  unreachable

1125:                                             ; preds = %1116
  %1126 = sub i64 %1103, %1118
  %1127 = sdiv exact i64 %1126, 24
  %1128 = icmp ult i64 %1127, 384307168202282325
  br i1 %1128, label %1129, label %1134

1129:                                             ; preds = %1125
  %1130 = shl nsw i64 %1127, 1
  %1131 = icmp ult i64 %1130, %1121
  %1132 = select i1 %1131, i64 %1121, i64 %1130
  %1133 = icmp eq i64 %1132, 0
  br i1 %1133, label %1139, label %1134

1134:                                             ; preds = %1129, %1125
  %1135 = phi i64 [ %1132, %1129 ], [ 768614336404564650, %1125 ]
  %1136 = mul i64 %1135, 24
  %1137 = call i8* @_Znwm(i64 %1136) #15
  %1138 = bitcast i8* %1137 to %"class.gfx::ShadowValue"*
  br label %1139

1139:                                             ; preds = %1134, %1129
  %1140 = phi i64 [ %1135, %1134 ], [ 0, %1129 ]
  %1141 = phi %"class.gfx::ShadowValue"* [ %1138, %1134 ], [ null, %1129 ]
  %1142 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1141, i64 %1120
  %1143 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1141, i64 %1140
  %1144 = ptrtoint %"class.gfx::ShadowValue"* %1143 to i64
  %1145 = load i64, i64* %83, align 8
  %1146 = bitcast %"class.gfx::ShadowValue"* %1142 to i64*
  %1147 = zext i32 %1099 to i64
  %1148 = shl nuw i64 %1147, 32
  %1149 = zext i32 %1098 to i64
  %1150 = or i64 %1148, %1149
  store i64 %1150, i64* %1146, align 8
  %1151 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1141, i64 %1120, i32 1
  %1152 = bitcast double* %1151 to i64*
  store i64 %1145, i64* %1152, align 8
  %1153 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1141, i64 %1120, i32 2
  store i32 %1095, i32* %1153, align 8
  %1154 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1142, i64 1
  %1155 = ptrtoint %"class.gfx::ShadowValue"* %1154 to i64
  %1156 = sdiv exact i64 %1119, -24
  %1157 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %1142, i64 %1156
  %1158 = ptrtoint %"class.gfx::ShadowValue"* %1157 to i64
  %1159 = icmp sgt i64 %1119, 0
  br i1 %1159, label %1160, label %1163

1160:                                             ; preds = %1139
  %1161 = bitcast %"class.gfx::ShadowValue"* %1157 to i8*
  %1162 = inttoptr i64 %1118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1161, i8* align 8 %1162, i64 %1119, i1 false) #16
  br label %1163

1163:                                             ; preds = %1160, %1139
  store i64 %1158, i64* %81, align 16
  store i64 %1155, i64* %80, align 8
  store i64 %1144, i64* %82, align 16
  %1164 = icmp eq i64 %1118, 0
  br i1 %1164, label %1167, label %1165

1165:                                             ; preds = %1163
  %1166 = inttoptr i64 %1118 to i8*
  call void @_ZdlPv(i8* %1166) #15
  br label %1167

1167:                                             ; preds = %313, %508, %703, %801, %996, %1082, %1104, %1163, %1165, %1023, %990, %925, %828, %795, %730, %697, %632, %535, %502, %437, %340, %307, %305, %398, %405, %495, %593, %600, %690, %788, %886, %893, %983, %1078
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #16
  %1168 = load i8, i8* %65, align 1
  %1169 = icmp slt i8 %1168, 0
  br i1 %1169, label %1170, label %1172

1170:                                             ; preds = %1167
  %1171 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %1171) #15
  br label %1172

1172:                                             ; preds = %1170, %1167
  %1173 = load i8, i8* %74, align 1
  %1174 = icmp slt i8 %1173, 0
  br i1 %1174, label %1175, label %1177

1175:                                             ; preds = %1172
  %1176 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %1176) #15
  br label %1177

1177:                                             ; preds = %1172, %1175
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %46) #16
  %1178 = load i8, i8* %44, align 1
  %1179 = icmp slt i8 %1178, 0
  br i1 %1179, label %1180, label %1182

1180:                                             ; preds = %1177
  %1181 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %1181) #15
  br label %1182

1182:                                             ; preds = %1177, %1180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  %1183 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %122, i64 1
  %1184 = icmp eq %"class.base::BasicStringPiece.23"* %1183, %33
  br i1 %1184, label %94, label %121
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_(i16*, i16*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__wrap_iter.142", align 8
  %4 = bitcast %"class.std::__1::__wrap_iter.142"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %3, i64 0, i32 0
  store i16* null, i16** %5, align 8
  %6 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RSA_(i16* %0, i16* %1, %"class.std::__1::__wrap_iter.142"* nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE10FromStringERKNS3_IDsNS4_IDsEENS6_IDsEEEE(%"class.absl::optional.143"* noalias nocapture sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %12 = select i1 %8, i16* %10, i16* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %3, i16* %12, i64 %16) #16
  %17 = getelementptr inbounds %"class.absl::optional.143", %"class.absl::optional.143"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional.143", %"class.absl::optional.143"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string.6"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %4, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2ui8metadata13TypeConverterIN3url9ComponentEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.151", align 8
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %12 to i64
  %19 = icmp slt i8 %12, 0
  %20 = select i1 %19, i16* %14, i16* %15
  %21 = select i1 %19, i64 %17, i64 %18
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %20, i64 %21, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.12, i64 0, i64 0), i64 3, i32 1, i32 1) #16
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #16
  store i32 -1431655766, i32* %4, align 4
  %23 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #16
  store i32 -1431655766, i32* %5, align 4
  %24 = bitcast %"class.base::BasicStringPiece.23"** %8 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %28, 32
  %30 = inttoptr i64 %27 to %"class.base::BasicStringPiece.23"*
  br i1 %29, label %31, label %56

31:                                               ; preds = %1
  %32 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %30, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %33, i64 %35, i32* nonnull %4) #16
  br i1 %36, label %37, label %56

37:                                               ; preds = %31
  %38 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %39 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %38, i64 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %40, i64 %42, i32* nonnull %5) #16
  %44 = load i32, i32* %5, align 4
  %45 = icmp sgt i32 %44, -2
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %37
  %48 = load i32, i32* %4, align 4
  %49 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.151", %"class.absl::optional_internal::optional_data_dtor_base.151"* %2, i64 0, i32 0
  store i8 1, i8* %49, align 8
  %50 = zext i32 %44 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %48 to i64
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.151", %"class.absl::optional_internal::optional_data_dtor_base.151"* %2, i64 0, i32 1
  %55 = bitcast %union.anon.152* %54 to i64*
  store i64 %53, i64* %55, align 4
  br label %58

56:                                               ; preds = %37, %31, %1
  %57 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.151", %"class.absl::optional_internal::optional_data_dtor_base.151"* %2, i64 0, i32 0
  store i8 0, i8* %57, align 8
  br label %58

58:                                               ; preds = %56, %47
  %59 = phi i32 [ undef, %56 ], [ %44, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #16
  %60 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %7, align 8
  %61 = icmp eq %"class.base::BasicStringPiece.23"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"class.base::BasicStringPiece.23"* %60 to i64
  store i64 %63, i64* %24, align 8
  %64 = bitcast %"class.base::BasicStringPiece.23"* %60 to i8*
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %58, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %66 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.151"* %2 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = insertvalue { i64, i32 } undef, i64 %67, 0
  %69 = insertvalue { i64, i32 } %68, i32 %59, 1
  ret { i64, i32 } %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE8ToStringEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  call void @_ZN11color_utils19SkColorToRgbaStringEj(%"class.std::__1::basic_string.6"* nonnull sret %3, i32 %1) #16
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = select i1 %8, i8* %10, i8* %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret %0, i8* %11, i64 %15) #16
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN11color_utils19SkColorToRgbaStringEj(%"class.std::__1::basic_string.6"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE10FromStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__wrap_iter.142", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i16* %8, i16* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = getelementptr inbounds i16, i16* %13, i64 %14
  %16 = bitcast %"class.std::__1::__wrap_iter.142"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %2, i64 0, i32 0
  store i16* null, i16** %17, align 8
  %18 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RSA_(i16* %13, i16* %15, %"class.std::__1::__wrap_iter.142"* nonnull dereferenceable(8) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  ret i64 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE15GetValidStringsEv(%"class.std::__1::vector"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERSA_(i16*, i16*, %"class.std::__1::basic_string"* nocapture dereferenceable(24), %"class.std::__1::__wrap_iter.142"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::StringTokenizerT", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.base::StringTokenizerT"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 6
  %10 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  store i8 3, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  store i16 40, i16* %14, align 8
  %15 = getelementptr inbounds i16, i16* %14, i64 1
  store i16 44, i16* %15, align 2
  %16 = getelementptr inbounds i16, i16* %14, i64 2
  store i16 41, i16* %16, align 4
  %17 = getelementptr inbounds i16, i16* %14, i64 3
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 3, i32 0
  %22 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 4
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 48, i1 false) #16
  store i16* %0, i16** %18, align 8
  store i16* %0, i16** %19, align 8
  store i16* %0, i16** %20, align 8
  store i16* %1, i16** %21, align 8
  %24 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #16
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 6
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 7
  store i8 1, i8* %26, align 4
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 9
  store i32 1, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %4
  %32 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  store i32 1, i32* %25, align 8
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 5
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 2
  %40 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 1
  %41 = bitcast %"class.std::__1::__wrap_iter.142"* %39 to i64*
  %42 = bitcast %"class.std::__1::__wrap_iter.142"* %40 to i64*
  %43 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %39, i64 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %119

49:                                               ; preds = %124
  store i8 0, i8* %26, align 4
  %50 = load i64, i64* %41, align 8
  store i64 %50, i64* %42, align 8
  %51 = inttoptr i64 %50 to i16*
  %52 = load i16*, i16** %21, align 8
  %53 = icmp eq i16* %52, %51
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = load i8, i8* %45, align 1
  %56 = icmp slt i8 %55, 0
  %57 = zext i8 %55 to i64
  %58 = load i16*, i16** %47, align 8
  %59 = load i64, i64* %48, align 8
  %60 = select i1 %56, i16* %58, i16* %46
  %61 = select i1 %56, i64 %59, i64 %57
  %62 = icmp eq i64 %61, 0
  %63 = ptrtoint i16* %60 to i64
  br label %65

64:                                               ; preds = %94, %49
  store i8 1, i8* %26, align 4
  br label %529

65:                                               ; preds = %94, %54
  %66 = phi i16* [ %51, %54 ], [ %67, %94 ]
  %67 = getelementptr inbounds i16, i16* %66, i64 1
  store i16* %67, i16** %43, align 8
  %68 = load i16, i16* %66, align 2
  %69 = ptrtoint i16* %67 to i64
  br i1 %62, label %85, label %70

70:                                               ; preds = %65, %75
  %71 = phi i64 [ %77, %75 ], [ %61, %65 ]
  %72 = phi i16* [ %76, %75 ], [ %60, %65 ]
  %73 = load i16, i16* %72, align 2
  %74 = icmp eq i16 %73, %68
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds i16, i16* %72, i64 1
  %77 = add i64 %71, -1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %85, label %70

79:                                               ; preds = %70
  %80 = icmp eq i16* %72, null
  %81 = ptrtoint i16* %72 to i64
  %82 = sub i64 %81, %63
  %83 = icmp eq i64 %82, -2
  %84 = or i1 %80, %83
  br i1 %84, label %85, label %94

85:                                               ; preds = %75, %79, %65
  %86 = load i32, i32* %27, align 8
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  switch i16 %68, label %89 [
    i16 32, label %94
    i16 13, label %94
    i16 10, label %94
    i16 9, label %94
    i16 12, label %94
  ]

89:                                               ; preds = %88, %85
  %90 = phi i1 [ true, %88 ], [ false, %85 ]
  %91 = icmp eq i16* %67, %52
  br i1 %91, label %134, label %92

92:                                               ; preds = %89
  %93 = ptrtoint i16* %60 to i64
  br label %96

94:                                               ; preds = %88, %88, %88, %88, %88, %79
  store i64 %69, i64* %42, align 8
  %95 = icmp eq i16* %52, %67
  br i1 %95, label %64, label %65

96:                                               ; preds = %92, %116
  %97 = phi i16* [ %117, %116 ], [ %67, %92 ]
  %98 = load i16, i16* %97, align 2
  br i1 %62, label %114, label %99

99:                                               ; preds = %96, %104
  %100 = phi i64 [ %106, %104 ], [ %61, %96 ]
  %101 = phi i16* [ %105, %104 ], [ %60, %96 ]
  %102 = load i16, i16* %101, align 2
  %103 = icmp eq i16 %102, %98
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds i16, i16* %101, i64 1
  %106 = add i64 %100, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %114, label %99

108:                                              ; preds = %99
  %109 = icmp eq i16* %101, null
  %110 = ptrtoint i16* %101 to i64
  %111 = sub i64 %110, %93
  %112 = icmp eq i64 %111, -2
  %113 = or i1 %109, %112
  br i1 %113, label %114, label %134

114:                                              ; preds = %104, %108, %96
  br i1 %90, label %115, label %116

115:                                              ; preds = %114
  switch i16 %98, label %116 [
    i16 32, label %134
    i16 13, label %134
    i16 10, label %134
    i16 9, label %134
    i16 12, label %134
  ]

116:                                              ; preds = %115, %114
  %117 = getelementptr inbounds i16, i16* %97, i64 1
  store i16* %117, i16** %43, align 8
  %118 = icmp eq i16* %117, %52
  br i1 %118, label %134, label %96

119:                                              ; preds = %34, %124
  %120 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %5) #16
  br i1 %120, label %121, label %529

121:                                              ; preds = %119
  %122 = load i8, i8* %26, align 4, !range !98
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %134, label %124

124:                                              ; preds = %121
  %125 = load i32, i32* %25, align 8
  %126 = load i8, i8* %37, align 1
  %127 = icmp slt i8 %126, 0
  %128 = load i64, i64* %38, align 8
  %129 = zext i8 %126 to i64
  %130 = select i1 %127, i64 %128, i64 %129
  %131 = icmp eq i64 %130, 0
  %132 = icmp eq i32 %125, 0
  %133 = and i1 %131, %132
  br i1 %133, label %49, label %119

134:                                              ; preds = %121, %115, %115, %115, %115, %115, %108, %116, %89
  %135 = load i16*, i16** %19, align 8
  %136 = ptrtoint i16* %135 to i64
  %137 = bitcast i16** %20 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %138, %136
  %140 = icmp eq i64 %139, 6
  %141 = inttoptr i64 %138 to i16*
  br i1 %140, label %142, label %149

142:                                              ; preds = %134
  %143 = load i16, i16* %135, align 2
  %144 = icmp eq i16 %143, 104
  br i1 %144, label %145, label %149

145:                                              ; preds = %142
  %146 = getelementptr inbounds i16, i16* %135, i64 1
  %147 = load i16, i16* %146, align 2
  %148 = icmp eq i16 %147, 115
  br i1 %148, label %586, label %149

149:                                              ; preds = %142, %145, %586, %134
  %150 = icmp eq i64 %139, 8
  br i1 %150, label %543, label %546

151:                                              ; preds = %586, %582, %574, %570
  %152 = load i8, i8* %37, align 1
  %153 = icmp slt i8 %152, 0
  %154 = load i64, i64* %38, align 8
  %155 = zext i8 %152 to i64
  %156 = select i1 %153, i64 %154, i64 %155
  %157 = icmp eq i64 %156, 0
  %158 = load i32, i32* %25, align 8
  %159 = icmp eq i32 %158, 0
  %160 = and i1 %157, %159
  br i1 %160, label %161, label %229

161:                                              ; preds = %151
  store i8 0, i8* %26, align 4
  store i64 %138, i64* %42, align 8
  %162 = load i16*, i16** %21, align 8
  %163 = icmp eq i16* %162, %141
  br i1 %163, label %174, label %164

164:                                              ; preds = %161
  %165 = load i8, i8* %45, align 1
  %166 = icmp slt i8 %165, 0
  %167 = zext i8 %165 to i64
  %168 = load i16*, i16** %47, align 8
  %169 = load i64, i64* %48, align 8
  %170 = select i1 %166, i16* %168, i16* %46
  %171 = select i1 %166, i64 %169, i64 %167
  %172 = icmp eq i64 %171, 0
  %173 = ptrtoint i16* %170 to i64
  br label %175

174:                                              ; preds = %204, %161
  store i8 1, i8* %26, align 4
  br label %529

175:                                              ; preds = %204, %164
  %176 = phi i16* [ %141, %164 ], [ %177, %204 ]
  %177 = getelementptr inbounds i16, i16* %176, i64 1
  store i16* %177, i16** %43, align 8
  %178 = load i16, i16* %176, align 2
  %179 = ptrtoint i16* %177 to i64
  br i1 %172, label %195, label %180

180:                                              ; preds = %175, %185
  %181 = phi i64 [ %187, %185 ], [ %171, %175 ]
  %182 = phi i16* [ %186, %185 ], [ %170, %175 ]
  %183 = load i16, i16* %182, align 2
  %184 = icmp eq i16 %183, %178
  br i1 %184, label %189, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %195, label %180

189:                                              ; preds = %180
  %190 = icmp eq i16* %182, null
  %191 = ptrtoint i16* %182 to i64
  %192 = sub i64 %191, %173
  %193 = icmp eq i64 %192, -2
  %194 = or i1 %190, %193
  br i1 %194, label %195, label %204

195:                                              ; preds = %185, %189, %175
  %196 = load i32, i32* %27, align 8
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  switch i16 %178, label %199 [
    i16 32, label %204
    i16 13, label %204
    i16 10, label %204
    i16 9, label %204
    i16 12, label %204
  ]

199:                                              ; preds = %198, %195
  %200 = phi i1 [ true, %198 ], [ false, %195 ]
  %201 = icmp eq i16* %177, %162
  br i1 %201, label %233, label %202

202:                                              ; preds = %199
  %203 = ptrtoint i16* %170 to i64
  br label %206

204:                                              ; preds = %198, %198, %198, %198, %198, %189
  store i64 %179, i64* %42, align 8
  %205 = icmp eq i16* %162, %177
  br i1 %205, label %174, label %175

206:                                              ; preds = %202, %226
  %207 = phi i16* [ %227, %226 ], [ %177, %202 ]
  %208 = load i16, i16* %207, align 2
  br i1 %172, label %224, label %209

209:                                              ; preds = %206, %214
  %210 = phi i64 [ %216, %214 ], [ %171, %206 ]
  %211 = phi i16* [ %215, %214 ], [ %170, %206 ]
  %212 = load i16, i16* %211, align 2
  %213 = icmp eq i16 %212, %208
  br i1 %213, label %218, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds i16, i16* %211, i64 1
  %216 = add i64 %210, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %224, label %209

218:                                              ; preds = %209
  %219 = icmp eq i16* %211, null
  %220 = ptrtoint i16* %211 to i64
  %221 = sub i64 %220, %203
  %222 = icmp eq i64 %221, -2
  %223 = or i1 %219, %222
  br i1 %223, label %224, label %233

224:                                              ; preds = %214, %218, %206
  br i1 %200, label %225, label %226

225:                                              ; preds = %224
  switch i16 %208, label %226 [
    i16 32, label %233
    i16 13, label %233
    i16 10, label %233
    i16 9, label %233
    i16 12, label %233
  ]

226:                                              ; preds = %225, %224
  %227 = getelementptr inbounds i16, i16* %207, i64 1
  store i16* %227, i16** %43, align 8
  %228 = icmp eq i16* %227, %162
  br i1 %228, label %233, label %206

229:                                              ; preds = %151
  %230 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %5) #16
  br i1 %230, label %231, label %529

231:                                              ; preds = %229
  %232 = load i16*, i16** %19, align 8
  br label %233

233:                                              ; preds = %225, %225, %225, %225, %225, %218, %226, %231, %199
  %234 = phi i16* [ %232, %231 ], [ %176, %199 ], [ %176, %226 ], [ %176, %218 ], [ %176, %225 ], [ %176, %225 ], [ %176, %225 ], [ %176, %225 ], [ %176, %225 ]
  %235 = load i16, i16* %234, align 2
  %236 = icmp eq i16 %235, 40
  br i1 %236, label %237, label %529

237:                                              ; preds = %233, %323
  %238 = load i8, i8* %37, align 1
  %239 = icmp slt i8 %238, 0
  %240 = load i64, i64* %38, align 8
  %241 = zext i8 %238 to i64
  %242 = select i1 %239, i64 %240, i64 %241
  %243 = icmp eq i64 %242, 0
  %244 = load i32, i32* %25, align 8
  %245 = icmp eq i32 %244, 0
  %246 = and i1 %243, %245
  br i1 %246, label %247, label %320

247:                                              ; preds = %237
  store i8 0, i8* %26, align 4
  %248 = load i64, i64* %41, align 8
  store i64 %248, i64* %42, align 8
  %249 = inttoptr i64 %248 to i16*
  %250 = load i16*, i16** %21, align 8
  %251 = icmp eq i16* %250, %249
  br i1 %251, label %262, label %252

252:                                              ; preds = %247
  %253 = load i8, i8* %45, align 1
  %254 = icmp slt i8 %253, 0
  %255 = zext i8 %253 to i64
  %256 = load i16*, i16** %47, align 8
  %257 = load i64, i64* %48, align 8
  %258 = select i1 %254, i16* %256, i16* %46
  %259 = select i1 %254, i64 %257, i64 %255
  %260 = icmp eq i64 %259, 0
  %261 = ptrtoint i16* %258 to i64
  br label %266

262:                                              ; preds = %247
  %263 = inttoptr i64 %248 to i16*
  br label %264

264:                                              ; preds = %295, %262
  %265 = phi i16* [ %263, %262 ], [ %250, %295 ]
  store i8 1, i8* %26, align 4
  br label %327

266:                                              ; preds = %295, %252
  %267 = phi i16* [ %249, %252 ], [ %268, %295 ]
  %268 = getelementptr inbounds i16, i16* %267, i64 1
  store i16* %268, i16** %43, align 8
  %269 = load i16, i16* %267, align 2
  %270 = ptrtoint i16* %268 to i64
  br i1 %260, label %286, label %271

271:                                              ; preds = %266, %276
  %272 = phi i64 [ %278, %276 ], [ %259, %266 ]
  %273 = phi i16* [ %277, %276 ], [ %258, %266 ]
  %274 = load i16, i16* %273, align 2
  %275 = icmp eq i16 %274, %269
  br i1 %275, label %280, label %276

276:                                              ; preds = %271
  %277 = getelementptr inbounds i16, i16* %273, i64 1
  %278 = add i64 %272, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %286, label %271

280:                                              ; preds = %271
  %281 = icmp eq i16* %273, null
  %282 = ptrtoint i16* %273 to i64
  %283 = sub i64 %282, %261
  %284 = icmp eq i64 %283, -2
  %285 = or i1 %281, %284
  br i1 %285, label %286, label %295

286:                                              ; preds = %276, %280, %266
  %287 = load i32, i32* %27, align 8
  %288 = icmp eq i32 %287, 1
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  switch i16 %269, label %290 [
    i16 32, label %295
    i16 13, label %295
    i16 10, label %295
    i16 9, label %295
    i16 12, label %295
  ]

290:                                              ; preds = %289, %286
  %291 = phi i1 [ true, %289 ], [ false, %286 ]
  %292 = icmp eq i16* %268, %250
  br i1 %292, label %323, label %293

293:                                              ; preds = %290
  %294 = ptrtoint i16* %258 to i64
  br label %297

295:                                              ; preds = %289, %289, %289, %289, %289, %280
  store i64 %270, i64* %42, align 8
  %296 = icmp eq i16* %250, %268
  br i1 %296, label %264, label %266

297:                                              ; preds = %293, %317
  %298 = phi i16* [ %318, %317 ], [ %268, %293 ]
  %299 = load i16, i16* %298, align 2
  br i1 %260, label %315, label %300

300:                                              ; preds = %297, %305
  %301 = phi i64 [ %307, %305 ], [ %259, %297 ]
  %302 = phi i16* [ %306, %305 ], [ %258, %297 ]
  %303 = load i16, i16* %302, align 2
  %304 = icmp eq i16 %303, %299
  br i1 %304, label %309, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds i16, i16* %302, i64 1
  %307 = add i64 %301, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %315, label %300

309:                                              ; preds = %300
  %310 = icmp eq i16* %302, null
  %311 = ptrtoint i16* %302 to i64
  %312 = sub i64 %311, %294
  %313 = icmp eq i64 %312, -2
  %314 = or i1 %310, %313
  br i1 %314, label %315, label %323

315:                                              ; preds = %305, %309, %297
  br i1 %291, label %316, label %317

316:                                              ; preds = %315
  switch i16 %299, label %317 [
    i16 32, label %323
    i16 13, label %323
    i16 10, label %323
    i16 9, label %323
    i16 12, label %323
  ]

317:                                              ; preds = %316, %315
  %318 = getelementptr inbounds i16, i16* %298, i64 1
  store i16* %318, i16** %43, align 8
  %319 = icmp eq i16* %318, %250
  br i1 %319, label %323, label %297

320:                                              ; preds = %237
  %321 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %5) #16
  %322 = load i16*, i16** %19, align 8
  br i1 %321, label %323, label %327

323:                                              ; preds = %316, %316, %316, %316, %316, %309, %317, %320, %290
  %324 = phi i16* [ %267, %290 ], [ %322, %320 ], [ %267, %317 ], [ %267, %309 ], [ %267, %316 ], [ %267, %316 ], [ %267, %316 ], [ %267, %316 ], [ %267, %316 ]
  %325 = load i16, i16* %324, align 2
  %326 = icmp eq i16 %325, 41
  br i1 %326, label %327, label %237

327:                                              ; preds = %323, %320, %264
  %328 = phi i16* [ %265, %264 ], [ %322, %320 ], [ %324, %323 ]
  %329 = load i16, i16* %328, align 2
  %330 = icmp eq i16 %329, 41
  br i1 %330, label %331, label %529

331:                                              ; preds = %327
  %332 = load i16*, i16** %20, align 8
  br label %333

333:                                              ; preds = %559, %562, %566, %570, %554, %331
  %334 = phi i16* [ %332, %331 ], [ %141, %554 ], [ %141, %570 ], [ %141, %566 ], [ %141, %562 ], [ %141, %559 ]
  %335 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %3, i64 0, i32 0
  store i16* %334, i16** %335, align 8
  %336 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #16
  %337 = ptrtoint i16* %334 to i64
  %338 = sub i64 %337, %136
  %339 = ashr exact i64 %338, 1
  %340 = icmp ugt i64 %339, 9223372036854775791
  br i1 %340, label %341, label %343

341:                                              ; preds = %333
  %342 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %342) #14
  unreachable

343:                                              ; preds = %333
  %344 = icmp ult i64 %339, 11
  br i1 %344, label %345, label %350

345:                                              ; preds = %343
  %346 = trunc i64 %339 to i8
  %347 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %347, i64 0, i32 1, i32 1
  store i8 %346, i8* %348, align 1
  %349 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  br label %363

350:                                              ; preds = %343
  %351 = add nuw nsw i64 %339, 8
  %352 = and i64 %351, -8
  %353 = icmp slt i64 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %350
  call void @abort() #14
  unreachable

355:                                              ; preds = %350
  %356 = shl i64 %352, 1
  %357 = call i8* @_Znwm(i64 %356) #15
  %358 = bitcast i8* %357 to i16*
  %359 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  store i8* %357, i8** %359, align 8
  %360 = or i64 %352, -9223372036854775808
  %361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %339, i64* %362, align 8
  br label %363

363:                                              ; preds = %355, %345
  %364 = phi i16* [ %349, %345 ], [ %358, %355 ]
  %365 = icmp eq i16* %135, %334
  br i1 %365, label %518, label %366

366:                                              ; preds = %363
  %367 = getelementptr i16, i16* %334, i64 -1
  %368 = ptrtoint i16* %367 to i64
  %369 = sub i64 %368, %136
  %370 = lshr i64 %369, 1
  %371 = add nuw i64 %370, 1
  %372 = icmp ult i64 %371, 16
  br i1 %372, label %465, label %373

373:                                              ; preds = %366
  %374 = getelementptr i16, i16* %334, i64 -1
  %375 = ptrtoint i16* %374 to i64
  %376 = sub i64 %375, %136
  %377 = lshr i64 %376, 1
  %378 = add nuw i64 %377, 1
  %379 = getelementptr i16, i16* %364, i64 %378
  %380 = getelementptr i16, i16* %135, i64 %378
  %381 = icmp ult i16* %364, %380
  %382 = icmp ult i16* %135, %379
  %383 = and i1 %381, %382
  br i1 %383, label %465, label %384

384:                                              ; preds = %373
  %385 = and i64 %371, -16
  %386 = getelementptr i16, i16* %364, i64 %385
  %387 = getelementptr i16, i16* %135, i64 %385
  %388 = add i64 %385, -16
  %389 = lshr exact i64 %388, 4
  %390 = add nuw nsw i64 %389, 1
  %391 = and i64 %390, 3
  %392 = icmp ult i64 %388, 48
  br i1 %392, label %444, label %393

393:                                              ; preds = %384
  %394 = sub nsw i64 %390, %391
  br label %395

395:                                              ; preds = %395, %393
  %396 = phi i64 [ 0, %393 ], [ %441, %395 ]
  %397 = phi i64 [ %394, %393 ], [ %442, %395 ]
  %398 = getelementptr i16, i16* %364, i64 %396
  %399 = getelementptr i16, i16* %135, i64 %396
  %400 = bitcast i16* %399 to <8 x i16>*
  %401 = load <8 x i16>, <8 x i16>* %400, align 2, !alias.scope !99
  %402 = getelementptr i16, i16* %399, i64 8
  %403 = bitcast i16* %402 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !99
  %405 = bitcast i16* %398 to <8 x i16>*
  store <8 x i16> %401, <8 x i16>* %405, align 2, !alias.scope !102, !noalias !99
  %406 = getelementptr i16, i16* %398, i64 8
  %407 = bitcast i16* %406 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %407, align 2, !alias.scope !102, !noalias !99
  %408 = or i64 %396, 16
  %409 = getelementptr i16, i16* %364, i64 %408
  %410 = getelementptr i16, i16* %135, i64 %408
  %411 = bitcast i16* %410 to <8 x i16>*
  %412 = load <8 x i16>, <8 x i16>* %411, align 2, !alias.scope !99
  %413 = getelementptr i16, i16* %410, i64 8
  %414 = bitcast i16* %413 to <8 x i16>*
  %415 = load <8 x i16>, <8 x i16>* %414, align 2, !alias.scope !99
  %416 = bitcast i16* %409 to <8 x i16>*
  store <8 x i16> %412, <8 x i16>* %416, align 2, !alias.scope !102, !noalias !99
  %417 = getelementptr i16, i16* %409, i64 8
  %418 = bitcast i16* %417 to <8 x i16>*
  store <8 x i16> %415, <8 x i16>* %418, align 2, !alias.scope !102, !noalias !99
  %419 = or i64 %396, 32
  %420 = getelementptr i16, i16* %364, i64 %419
  %421 = getelementptr i16, i16* %135, i64 %419
  %422 = bitcast i16* %421 to <8 x i16>*
  %423 = load <8 x i16>, <8 x i16>* %422, align 2, !alias.scope !99
  %424 = getelementptr i16, i16* %421, i64 8
  %425 = bitcast i16* %424 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !99
  %427 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %423, <8 x i16>* %427, align 2, !alias.scope !102, !noalias !99
  %428 = getelementptr i16, i16* %420, i64 8
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %429, align 2, !alias.scope !102, !noalias !99
  %430 = or i64 %396, 48
  %431 = getelementptr i16, i16* %364, i64 %430
  %432 = getelementptr i16, i16* %135, i64 %430
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !99
  %435 = getelementptr i16, i16* %432, i64 8
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !99
  %438 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %438, align 2, !alias.scope !102, !noalias !99
  %439 = getelementptr i16, i16* %431, i64 8
  %440 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %440, align 2, !alias.scope !102, !noalias !99
  %441 = add i64 %396, 64
  %442 = add i64 %397, -4
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %444, label %395, !llvm.loop !104

444:                                              ; preds = %395, %384
  %445 = phi i64 [ 0, %384 ], [ %441, %395 ]
  %446 = icmp eq i64 %391, 0
  br i1 %446, label %463, label %447

447:                                              ; preds = %444, %447
  %448 = phi i64 [ %460, %447 ], [ %445, %444 ]
  %449 = phi i64 [ %461, %447 ], [ %391, %444 ]
  %450 = getelementptr i16, i16* %364, i64 %448
  %451 = getelementptr i16, i16* %135, i64 %448
  %452 = bitcast i16* %451 to <8 x i16>*
  %453 = load <8 x i16>, <8 x i16>* %452, align 2, !alias.scope !99
  %454 = getelementptr i16, i16* %451, i64 8
  %455 = bitcast i16* %454 to <8 x i16>*
  %456 = load <8 x i16>, <8 x i16>* %455, align 2, !alias.scope !99
  %457 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %453, <8 x i16>* %457, align 2, !alias.scope !102, !noalias !99
  %458 = getelementptr i16, i16* %450, i64 8
  %459 = bitcast i16* %458 to <8 x i16>*
  store <8 x i16> %456, <8 x i16>* %459, align 2, !alias.scope !102, !noalias !99
  %460 = add i64 %448, 16
  %461 = add i64 %449, -1
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %447, !llvm.loop !105

463:                                              ; preds = %447, %444
  %464 = icmp eq i64 %371, %385
  br i1 %464, label %518, label %465

465:                                              ; preds = %463, %373, %366
  %466 = phi i16* [ %364, %373 ], [ %364, %366 ], [ %386, %463 ]
  %467 = phi i16* [ %135, %373 ], [ %135, %366 ], [ %387, %463 ]
  %468 = ptrtoint i16* %467 to i64
  %469 = getelementptr i16, i16* %334, i64 -1
  %470 = ptrtoint i16* %469 to i64
  %471 = sub i64 %470, %468
  %472 = lshr i64 %471, 1
  %473 = add nuw i64 %472, 1
  %474 = and i64 %473, 7
  %475 = icmp eq i64 %474, 0
  br i1 %475, label %485, label %476

476:                                              ; preds = %465, %476
  %477 = phi i16* [ %482, %476 ], [ %466, %465 ]
  %478 = phi i16* [ %481, %476 ], [ %467, %465 ]
  %479 = phi i64 [ %483, %476 ], [ %474, %465 ]
  %480 = load i16, i16* %478, align 2
  store i16 %480, i16* %477, align 2
  %481 = getelementptr inbounds i16, i16* %478, i64 1
  %482 = getelementptr inbounds i16, i16* %477, i64 1
  %483 = add i64 %479, -1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %476, !llvm.loop !106

485:                                              ; preds = %476, %465
  %486 = phi i16* [ undef, %465 ], [ %482, %476 ]
  %487 = phi i16* [ %466, %465 ], [ %482, %476 ]
  %488 = phi i16* [ %467, %465 ], [ %481, %476 ]
  %489 = icmp ult i64 %471, 14
  br i1 %489, label %518, label %490

490:                                              ; preds = %485, %490
  %491 = phi i16* [ %516, %490 ], [ %487, %485 ]
  %492 = phi i16* [ %515, %490 ], [ %488, %485 ]
  %493 = load i16, i16* %492, align 2
  store i16 %493, i16* %491, align 2
  %494 = getelementptr inbounds i16, i16* %492, i64 1
  %495 = getelementptr inbounds i16, i16* %491, i64 1
  %496 = load i16, i16* %494, align 2
  store i16 %496, i16* %495, align 2
  %497 = getelementptr inbounds i16, i16* %492, i64 2
  %498 = getelementptr inbounds i16, i16* %491, i64 2
  %499 = load i16, i16* %497, align 2
  store i16 %499, i16* %498, align 2
  %500 = getelementptr inbounds i16, i16* %492, i64 3
  %501 = getelementptr inbounds i16, i16* %491, i64 3
  %502 = load i16, i16* %500, align 2
  store i16 %502, i16* %501, align 2
  %503 = getelementptr inbounds i16, i16* %492, i64 4
  %504 = getelementptr inbounds i16, i16* %491, i64 4
  %505 = load i16, i16* %503, align 2
  store i16 %505, i16* %504, align 2
  %506 = getelementptr inbounds i16, i16* %492, i64 5
  %507 = getelementptr inbounds i16, i16* %491, i64 5
  %508 = load i16, i16* %506, align 2
  store i16 %508, i16* %507, align 2
  %509 = getelementptr inbounds i16, i16* %492, i64 6
  %510 = getelementptr inbounds i16, i16* %491, i64 6
  %511 = load i16, i16* %509, align 2
  store i16 %511, i16* %510, align 2
  %512 = getelementptr inbounds i16, i16* %492, i64 7
  %513 = getelementptr inbounds i16, i16* %491, i64 7
  %514 = load i16, i16* %512, align 2
  store i16 %514, i16* %513, align 2
  %515 = getelementptr inbounds i16, i16* %492, i64 8
  %516 = getelementptr inbounds i16, i16* %491, i64 8
  %517 = icmp eq i16* %515, %334
  br i1 %517, label %518, label %490, !llvm.loop !107

518:                                              ; preds = %485, %490, %463, %363
  %519 = phi i16* [ %364, %363 ], [ %386, %463 ], [ %486, %485 ], [ %516, %490 ]
  store i16 0, i16* %519, align 2
  %520 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %521 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %520, i64 0, i32 1, i32 1
  %522 = load i8, i8* %521, align 1
  %523 = icmp slt i8 %522, 0
  br i1 %523, label %524, label %527

524:                                              ; preds = %518
  %525 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %526 = load i8*, i8** %525, align 8
  call void @_ZdlPv(i8* %526) #15
  br label %527

527:                                              ; preds = %524, %518
  %528 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %528, i8* nonnull align 8 %336, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %336) #16
  br label %529

529:                                              ; preds = %119, %527, %233, %327, %174, %229, %64
  %530 = phi i1 [ false, %64 ], [ true, %527 ], [ false, %233 ], [ false, %327 ], [ false, %174 ], [ false, %229 ], [ false, %119 ]
  %531 = load i8, i8* %37, align 1
  %532 = icmp slt i8 %531, 0
  br i1 %532, label %533, label %536

533:                                              ; preds = %529
  %534 = bitcast %"class.std::__1::basic_string"* %35 to i8**
  %535 = load i8*, i8** %534, align 8
  call void @_ZdlPv(i8* %535) #15
  br label %536

536:                                              ; preds = %533, %529
  %537 = load i8, i8* %45, align 1
  %538 = icmp slt i8 %537, 0
  br i1 %538, label %539, label %542

539:                                              ; preds = %536
  %540 = bitcast %"class.std::__1::basic_string"* %22 to i8**
  %541 = load i8*, i8** %540, align 8
  call void @_ZdlPv(i8* %541) #15
  br label %542

542:                                              ; preds = %536, %539
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #16
  ret i1 %530

543:                                              ; preds = %149
  %544 = load i16, i16* %135, align 2
  %545 = icmp eq i16 %544, 104
  br i1 %545, label %547, label %546

546:                                              ; preds = %543, %547, %578, %582, %149
  br i1 %140, label %551, label %554

547:                                              ; preds = %543
  %548 = getelementptr inbounds i16, i16* %135, i64 1
  %549 = load i16, i16* %548, align 2
  %550 = icmp eq i16 %549, 115
  br i1 %550, label %578, label %546

551:                                              ; preds = %546
  %552 = load i16, i16* %135, align 2
  %553 = icmp eq i16 %552, 114
  br i1 %553, label %555, label %554

554:                                              ; preds = %551, %555, %574, %546
  br i1 %150, label %559, label %333

555:                                              ; preds = %551
  %556 = getelementptr inbounds i16, i16* %135, i64 1
  %557 = load i16, i16* %556, align 2
  %558 = icmp eq i16 %557, 103
  br i1 %558, label %574, label %554

559:                                              ; preds = %554
  %560 = load i16, i16* %135, align 2
  %561 = icmp eq i16 %560, 114
  br i1 %561, label %562, label %333

562:                                              ; preds = %559
  %563 = getelementptr inbounds i16, i16* %135, i64 1
  %564 = load i16, i16* %563, align 2
  %565 = icmp eq i16 %564, 103
  br i1 %565, label %566, label %333

566:                                              ; preds = %562
  %567 = getelementptr inbounds i16, i16* %135, i64 2
  %568 = load i16, i16* %567, align 2
  %569 = icmp eq i16 %568, 98
  br i1 %569, label %570, label %333

570:                                              ; preds = %566
  %571 = getelementptr inbounds i16, i16* %135, i64 3
  %572 = load i16, i16* %571, align 2
  %573 = icmp eq i16 %572, 97
  br i1 %573, label %151, label %333

574:                                              ; preds = %555
  %575 = getelementptr inbounds i16, i16* %135, i64 2
  %576 = load i16, i16* %575, align 2
  %577 = icmp eq i16 %576, 98
  br i1 %577, label %151, label %554

578:                                              ; preds = %547
  %579 = getelementptr inbounds i16, i16* %135, i64 2
  %580 = load i16, i16* %579, align 2
  %581 = icmp eq i16 %580, 108
  br i1 %581, label %582, label %546

582:                                              ; preds = %578
  %583 = getelementptr inbounds i16, i16* %135, i64 3
  %584 = load i16, i16* %583, align 2
  %585 = icmp eq i16 %584, 97
  br i1 %585, label %151, label %546

586:                                              ; preds = %145
  %587 = getelementptr inbounds i16, i16* %135, i64 2
  %588 = load i16, i16* %587, align 2
  %589 = icmp eq i16 %588, 108
  br i1 %589, label %151, label %149
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(i16*, i16*, %"class.std::__1::basic_string"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__wrap_iter.142", align 8
  %5 = bitcast %"class.std::__1::__wrap_iter.142"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::__wrap_iter.142", %"class.std::__1::__wrap_iter.142"* %4, i64 0, i32 0
  store i16* null, i16** %6, align 8
  %7 = call zeroext i1 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERSA_(i16* %0, i16* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::__wrap_iter.142"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RSA_(i16*, i16*, %"class.std::__1::__wrap_iter.142"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #16
  %9 = call zeroext i1 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE12GetNextColorENSt3__111__wrap_iterIPKDsEESA_RNS6_12basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEERSA_(i16* %0, i16* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::__wrap_iter.142"* dereferenceable(8) %2)
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %9, label %11, label %64

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = load i16*, i16** %7, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %16 = load i64, i64* %8, align 8
  %17 = zext i8 %13 to i64
  %18 = icmp slt i8 %13, 0
  %19 = select i1 %18, i16* %14, i16* %15
  %20 = select i1 %18, i64 %16, i64 %17
  %21 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %19, i64 %20, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.18, i64 0, i64 0), i64 3, i32 0) #16
  br i1 %21, label %22, label %25

22:                                               ; preds = %11
  %23 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE14ParseHslStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %24 = and i64 %23, -256
  br label %64

25:                                               ; preds = %11
  %26 = load i8, i8* %12, align 1
  %27 = load i16*, i16** %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = zext i8 %26 to i64
  %30 = icmp slt i8 %26, 0
  %31 = select i1 %30, i16* %27, i16* %15
  %32 = select i1 %30, i64 %28, i64 %29
  %33 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %31, i64 %32, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.20, i64 0, i64 0), i64 3, i32 0) #16
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE14ParseRgbStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %36 = and i64 %35, -256
  br label %64

37:                                               ; preds = %25
  %38 = load i8, i8* %12, align 1
  %39 = load i16*, i16** %7, align 8
  %40 = load i64, i64* %8, align 8
  %41 = zext i8 %38 to i64
  %42 = icmp slt i8 %38, 0
  %43 = select i1 %42, i16* %39, i16* %15
  %44 = select i1 %42, i64 %40, i64 %41
  %45 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %43, i64 %44, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.22, i64 0, i64 0), i64 2, i32 1) #16
  br i1 %45, label %46, label %49

46:                                               ; preds = %37
  %47 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE14ParseHexStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %48 = and i64 %47, -256
  br label %64

49:                                               ; preds = %37
  %50 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #16
  store i32 -1431655766, i32* %5, align 4
  %51 = load i8, i8* %12, align 1
  %52 = icmp slt i8 %51, 0
  %53 = load i16*, i16** %7, align 8
  %54 = select i1 %52, i16* %53, i16* %15
  %55 = load i64, i64* %8, align 8
  %56 = zext i8 %51 to i64
  %57 = select i1 %52, i64 %55, i64 %56
  %58 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPj(i16* %54, i64 %57, i32* nonnull %5) #16
  br i1 %58, label %59, label %63

59:                                               ; preds = %49
  %60 = load i32, i32* %5, align 4
  %61 = zext i32 %60 to i64
  %62 = shl nuw i64 %61, 32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #16
  br label %64

63:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #16
  br label %64

64:                                               ; preds = %3, %63, %59, %46, %34, %22
  %65 = phi i64 [ 0, %63 ], [ 1, %59 ], [ %47, %46 ], [ %35, %34 ], [ %23, %22 ], [ 0, %3 ]
  %66 = phi i64 [ 0, %63 ], [ %62, %59 ], [ %48, %46 ], [ %36, %34 ], [ %24, %22 ], [ 0, %3 ]
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #15
  br label %73

73:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %74 = and i64 %65, 255
  %75 = or i64 %66, %74
  ret i64 %75
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE14ParseHslStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca [3 x float], align 4
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #16
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %14 to i64
  %21 = icmp slt i8 %14, 0
  %22 = select i1 %21, i16* %16, i16* %17
  %23 = select i1 %21, i64 %19, i64 %20
  %24 = call zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %22, i64 %23, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @.str.23, i64 0, i64 0), i64 7, %"class.std::__1::basic_string"* nonnull %2) #16
  %25 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %31 = load i8, i8* %29, align 1
  %32 = load i16*, i16** %10, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %34 = load i64, i64* %11, align 8
  %35 = zext i8 %31 to i64
  %36 = icmp slt i8 %31, 0
  %37 = select i1 %36, i16* %32, i16* %33
  %38 = select i1 %36, i64 %34, i64 %35
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %37, i64 %38, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.24, i64 0, i64 0), i64 2, i32 1, i32 1) #16
  %39 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %4, align 8
  %40 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %41 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %42 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #16
  store double 1.000000e+00, double* %7, align 8
  %43 = bitcast %"class.base::BasicStringPiece.23"** %27 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 4
  %49 = icmp ugt i64 %48, 2
  %50 = inttoptr i64 %46 to %"class.base::BasicStringPiece.23"*
  br i1 %49, label %51, label %153

51:                                               ; preds = %1
  %52 = icmp ult i64 %48, 5
  br i1 %52, label %53, label %149

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %50, i64 0, i32 0
  %55 = load i16*, i16** %54, align 8
  %56 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %50, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %55, i64 %57, double* nonnull %4) #16
  br i1 %58, label %59, label %149

59:                                               ; preds = %53
  %60 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %26, align 8
  %61 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %60, i64 1, i32 0
  %62 = load i16*, i16** %61, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %60, i64 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %62, i64 %64, double* nonnull %5) #16
  br i1 %65, label %66, label %149

66:                                               ; preds = %59
  %67 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %26, align 8
  %68 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %67, i64 2, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %67, i64 2, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %69, i64 %71, double* nonnull %6) #16
  br i1 %72, label %73, label %149

73:                                               ; preds = %66
  %74 = load i64, i64* %43, align 8
  %75 = load i64, i64* %45, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 48
  %78 = inttoptr i64 %75 to %"class.base::BasicStringPiece.23"*
  br i1 %77, label %90, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %78, i64 3, i32 0
  %81 = load i16*, i16** %80, align 8
  %82 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %78, i64 3, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %81, i64 %83, double* nonnull %7) #16
  %85 = load double, double* %7, align 8
  %86 = fcmp oge double %85, 0.000000e+00
  %87 = and i1 %84, %86
  %88 = fcmp ole double %85, 1.000000e+00
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %149

90:                                               ; preds = %79, %73
  %91 = bitcast [3 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %91) #16
  %92 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 0
  %93 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %93, align 4
  %94 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %94, align 4
  %95 = load double, double* %4, align 8
  %96 = call double @fmod(double %95, double 3.600000e+02) #16
  %97 = fcmp olt double %96, 0.000000e+00
  %98 = select i1 %97, double 0.000000e+00, double %96
  %99 = fcmp ogt double %98, 3.600000e+02
  %100 = select i1 %99, double 3.600000e+02, double %98
  %101 = fptrunc double %100 to float
  store float %101, float* %92, align 4
  %102 = load double, double* %5, align 8
  %103 = fcmp ogt double %102, 1.000000e+00
  %104 = fcmp olt double %102, 0.000000e+00
  %105 = select i1 %104, double 0.000000e+00, double %102
  br i1 %103, label %106, label %110

106:                                              ; preds = %90
  %107 = fcmp ogt double %105, 1.000000e+02
  %108 = select i1 %107, double 1.000000e+02, double %105
  %109 = fdiv double %108, 1.000000e+02
  br label %113

110:                                              ; preds = %90
  %111 = fcmp ogt double %105, 1.000000e+00
  %112 = select i1 %111, double 1.000000e+00, double %105
  br label %113

113:                                              ; preds = %110, %106
  %114 = phi double [ %109, %106 ], [ %112, %110 ]
  %115 = fptrunc double %114 to float
  store float %115, float* %93, align 4
  %116 = load double, double* %6, align 8
  %117 = fcmp ogt double %116, 1.000000e+00
  %118 = fcmp olt double %116, 0.000000e+00
  %119 = select i1 %118, double 0.000000e+00, double %116
  br i1 %117, label %120, label %124

120:                                              ; preds = %113
  %121 = fcmp ogt double %119, 1.000000e+02
  %122 = select i1 %121, double 1.000000e+02, double %119
  %123 = fdiv double %122, 1.000000e+02
  br label %127

124:                                              ; preds = %113
  %125 = fcmp ogt double %119, 1.000000e+00
  %126 = select i1 %125, double 1.000000e+00, double %119
  br label %127

127:                                              ; preds = %124, %120
  %128 = phi double [ %123, %120 ], [ %126, %124 ]
  %129 = fptrunc double %128 to float
  store float %129, float* %94, align 4
  %130 = load double, double* %7, align 8
  %131 = fmul double %130, 2.550000e+02
  %132 = fcmp oge double %131, 0.000000e+00
  %133 = fadd double %131, 5.000000e-01
  %134 = call double @llvm.floor.f64(double %133) #16
  %135 = fadd double %131, -5.000000e-01
  %136 = call double @llvm.ceil.f64(double %135) #16
  %137 = select i1 %132, double %134, double %136
  %138 = fcmp ule double %137, -1.000000e+00
  %139 = fcmp ugt double %137, 2.550000e+02
  %140 = fptoui double %137 to i8
  %141 = select i1 %138, i8 0, i8 %140
  %142 = xor i1 %138, true
  %143 = sext i1 %142 to i8
  %144 = select i1 %139, i8 %143, i8 %141
  %145 = zext i8 %144 to i32
  %146 = call i32 @_Z12SkHSVToColorjPKf(i32 %145, float* nonnull %92) #16
  %147 = zext i32 %146 to i64
  %148 = shl nuw i64 %147, 32
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %91) #16
  br label %149

149:                                              ; preds = %127, %79, %66, %59, %53, %51
  %150 = phi i64 [ 0, %51 ], [ 0, %53 ], [ 0, %59 ], [ 0, %66 ], [ 0, %79 ], [ 1, %127 ]
  %151 = phi i64 [ 0, %51 ], [ 0, %53 ], [ 0, %59 ], [ 0, %66 ], [ 0, %79 ], [ %148, %127 ]
  %152 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %26, align 8
  br label %153

153:                                              ; preds = %149, %1
  %154 = phi %"class.base::BasicStringPiece.23"* [ %152, %149 ], [ %50, %1 ]
  %155 = phi i64 [ %150, %149 ], [ 0, %1 ]
  %156 = phi i64 [ %151, %149 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  %157 = icmp eq %"class.base::BasicStringPiece.23"* %154, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %153
  %159 = ptrtoint %"class.base::BasicStringPiece.23"* %154 to i64
  store i64 %159, i64* %43, align 8
  %160 = bitcast %"class.base::BasicStringPiece.23"* %154 to i8*
  call void @_ZdlPv(i8* %160) #15
  br label %161

161:                                              ; preds = %153, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  %162 = load i8, i8* %29, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %161
  %165 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #15
  br label %167

167:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  %168 = and i64 %155, 255
  %169 = or i64 %156, %168
  ret i64 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE14ParseRgbStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::vector.94", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #16
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %9 to i64
  %16 = icmp slt i8 %9, 0
  %17 = select i1 %16, i16* %11, i16* %12
  %18 = select i1 %16, i64 %14, i64 %15
  %19 = call zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %17, i64 %18, i16* getelementptr inbounds ([7 x i16], [7 x i16]* @.str.25, i64 0, i64 0), i64 6, %"class.std::__1::basic_string"* nonnull %2) #16
  %20 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = bitcast %"class.std::__1::vector.94"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load i8, i8* %25, align 1
  %28 = load i16*, i16** %5, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %30 = load i64, i64* %6, align 8
  %31 = zext i8 %27 to i64
  %32 = icmp slt i8 %27, 0
  %33 = select i1 %32, i16* %28, i16* %29
  %34 = select i1 %32, i64 %30, i64 %31
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.94"* nonnull sret %3, i16* %33, i64 %34, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.24, i64 0, i64 0), i64 2, i32 1, i32 1) #16
  %35 = bitcast %"class.base::BasicStringPiece.23"** %22 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.94"* %3 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = icmp eq i64 %39, 48
  %41 = inttoptr i64 %36 to %"class.base::BasicStringPiece.23"*
  br i1 %40, label %42, label %80

42:                                               ; preds = %1
  %43 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %23, align 8
  %44 = icmp ugt %"class.base::BasicStringPiece.23"* %43, %41
  br i1 %44, label %45, label %50

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %41, i64 0, i32 0
  store i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.26, i64 0, i64 0), i16** %46, align 8
  %47 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %41, i64 0, i32 1
  store i64 3, i64* %47, align 8
  %48 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %41, i64 1
  %49 = ptrtoint %"class.base::BasicStringPiece.23"* %48 to i64
  store i64 %49, i64* %35, align 8
  br label %80

50:                                               ; preds = %42
  %51 = ptrtoint %"class.base::BasicStringPiece.23"* %43 to i64
  %52 = bitcast %"class.base::BasicStringPiece.23"** %23 to i64*
  %53 = sub i64 %51, %38
  %54 = ashr exact i64 %53, 4
  %55 = icmp ult i64 %54, 576460752303423487
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = ashr exact i64 %53, 3
  %58 = icmp ugt i64 %57, 4
  %59 = select i1 %58, i64 %57, i64 4
  %60 = icmp ugt i64 %59, 1152921504606846975
  br i1 %60, label %61, label %62

61:                                               ; preds = %56
  call void @abort() #14
  unreachable

62:                                               ; preds = %50, %56
  %63 = phi i64 [ %59, %56 ], [ 1152921504606846975, %50 ]
  %64 = shl i64 %63, 4
  %65 = call i8* @_Znwm(i64 %64) #15
  %66 = bitcast i8* %65 to %"class.base::BasicStringPiece.23"*
  %67 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %66, i64 %63
  %68 = ptrtoint %"class.base::BasicStringPiece.23"* %67 to i64
  %69 = getelementptr inbounds i8, i8* %65, i64 48
  %70 = bitcast i8* %69 to i16**
  store i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.26, i64 0, i64 0), i16** %70, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 56
  %72 = bitcast i8* %71 to i64*
  store i64 3, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %65, i64 64
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %65 to i64
  %76 = inttoptr i64 %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %76, i64 48, i1 false) #16
  store i64 %75, i64* %37, align 8
  store i64 %74, i64* %35, align 8
  store i64 %68, i64* %52, align 8
  %77 = icmp eq i64 %38, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %62
  %79 = inttoptr i64 %38 to i8*
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %78, %62, %45, %1
  %81 = call i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE19RgbaPiecesToSkColorERKNSt3__16vectorIN4base16BasicStringPieceIDsNS6_11char_traitsIDsEEEENS6_9allocatorISC_EEEEm(%"class.std::__1::vector.94"* nonnull dereferenceable(24) %3, i64 0)
  %82 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %21, align 8
  %83 = icmp eq %"class.base::BasicStringPiece.23"* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"class.base::BasicStringPiece.23"* %82 to i64
  store i64 %85, i64* %35, align 8
  %86 = bitcast %"class.base::BasicStringPiece.23"* %82 to i8*
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  %88 = load i8, i8* %25, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #15
  br label %93

93:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret i64 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE14ParseHexStringERKNSt3__112basic_stringIDsNS6_11char_traitsIDsEENS6_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::basic_string.6", align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast %"class.std::__1::basic_string.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = select i1 %9, i16* %11, i16* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %3, i16* %13, i64 %17) #16
  %18 = bitcast %"class.std::__1::basic_string.6"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i64 %26, i64 %27
  %29 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %24, i64 %28, i32* nonnull %2) #16
  %30 = load i8, i8* %19, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %1
  %33 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %1, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  br i1 %29, label %35, label %49

35:                                               ; preds = %34
  %36 = load i8, i8* %7, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i64, i64* %14, align 8
  %39 = zext i8 %36 to i64
  %40 = select i1 %37, i64 %38, i64 %39
  %41 = icmp ult i64 %40, 9
  %42 = load i32, i32* %2, align 4
  br i1 %41, label %43, label %45

43:                                               ; preds = %35
  %44 = or i32 %42, -16777216
  store i32 %44, i32* %2, align 4
  br label %45

45:                                               ; preds = %35, %43
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = zext i32 %46 to i64
  %48 = shl nuw i64 %47, 32
  br label %49

49:                                               ; preds = %34, %45
  %50 = phi i64 [ 1, %45 ], [ 0, %34 ]
  %51 = phi i64 [ %48, %45 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  %52 = or i64 %51, %50
  ret i64 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS0_10UniquifierIjNS0_10SkColorTagEEEE19RgbaPiecesToSkColorERKNSt3__16vectorIN4base16BasicStringPieceIDsNS6_11char_traitsIDsEEEENS6_9allocatorISC_EEEEm(%"class.std::__1::vector.94"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #16
  store i32 -1431655766, i32* %3, align 4
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #16
  store i32 -1431655766, i32* %4, align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  store i32 -1431655766, i32* %5, align 4
  %10 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.base::BasicStringPiece.23"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.94"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 4
  %18 = add i64 %1, 4
  %19 = icmp ult i64 %17, %18
  %20 = inttoptr i64 %15 to %"class.base::BasicStringPiece.23"*
  br i1 %19, label %93, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %0, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %20, i64 %1, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %20, i64 %1, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %24, i64 %26, i32* nonnull %3) #16
  %28 = load i32, i32* %3, align 4
  %29 = icmp ult i32 %28, 256
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %93

31:                                               ; preds = %21
  %32 = add i64 %1, 1
  %33 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %22, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %33, i64 %32, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %33, i64 %32, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %35, i64 %37, i32* nonnull %4) #16
  %39 = load i32, i32* %4, align 4
  %40 = icmp ult i32 %39, 256
  %41 = and i1 %38, %40
  br i1 %41, label %42, label %93

42:                                               ; preds = %31
  %43 = add i64 %1, 2
  %44 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %22, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %44, i64 %43, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %44, i64 %43, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPi(i16* %46, i64 %48, i32* nonnull %5) #16
  %50 = load i32, i32* %5, align 4
  %51 = icmp ult i32 %50, 256
  %52 = and i1 %49, %51
  br i1 %52, label %53, label %93

53:                                               ; preds = %42
  %54 = add i64 %1, 3
  %55 = load %"class.base::BasicStringPiece.23"*, %"class.base::BasicStringPiece.23"** %22, align 8
  %56 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %55, i64 %54, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = getelementptr inbounds %"class.base::BasicStringPiece.23", %"class.base::BasicStringPiece.23"* %55, i64 %54, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPd(i16* %57, i64 %59, double* nonnull %6) #16
  %61 = load double, double* %6, align 8
  %62 = fcmp oge double %61, 0.000000e+00
  %63 = and i1 %60, %62
  %64 = fcmp ole double %61, 1.000000e+00
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %93

66:                                               ; preds = %53
  %67 = fmul double %61, 2.550000e+02
  %68 = fcmp oge double %67, 0.000000e+00
  %69 = fadd double %67, 5.000000e-01
  %70 = call double @llvm.floor.f64(double %69) #16
  %71 = fadd double %67, -5.000000e-01
  %72 = call double @llvm.ceil.f64(double %71) #16
  %73 = select i1 %68, double %70, double %72
  %74 = fcmp ule double %73, -1.000000e+00
  %75 = fcmp ugt double %73, 2.550000e+02
  %76 = fptoui double %73 to i8
  %77 = select i1 %74, i8 0, i8 %76
  %78 = xor i1 %74, true
  %79 = sext i1 %78 to i8
  %80 = select i1 %75, i8 %79, i8 %77
  %81 = zext i8 %80 to i32
  %82 = load i32, i32* %3, align 4
  %83 = load i32, i32* %4, align 4
  %84 = load i32, i32* %5, align 4
  %85 = shl nuw i32 %81, 24
  %86 = shl i32 %82, 16
  %87 = or i32 %86, %85
  %88 = shl i32 %83, 8
  %89 = or i32 %87, %88
  %90 = or i32 %89, %84
  %91 = zext i32 %90 to i64
  %92 = shl nuw i64 %91, 32
  br label %93

93:                                               ; preds = %21, %31, %42, %53, %2, %66
  %94 = phi i64 [ 1, %66 ], [ 0, %2 ], [ 0, %53 ], [ 0, %42 ], [ 0, %31 ], [ 0, %21 ]
  %95 = phi i64 [ %92, %66 ], [ 0, %2 ], [ 0, %53 ], [ 0, %42 ], [ 0, %31 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #16
  %96 = or i64 %95, %94
  ret i64 %96
}

declare zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base11RemoveCharsENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_PNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i16*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #5

declare i32 @_Z12SkHSVToColorjPKf(i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE8ToStringES3_(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i64 [ 4, %2 ], [ %15, %3 ]
  %5 = phi %"struct.std::__1::pair"* [ getelementptr inbounds ({ %"struct.std::__1::array.154" }, { %"struct.std::__1::array.154" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %2 ], [ %14, %3 ]
  %6 = lshr i64 %4, 1
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %6
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 1
  %12 = xor i64 %6, -1
  %13 = add i64 %4, %12
  %14 = select i1 %10, %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %5
  %15 = select i1 %10, i64 %13, i64 %6
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %3

17:                                               ; preds = %3
  %18 = icmp eq %"struct.std::__1::pair"* %14, getelementptr inbounds ({ %"struct.std::__1::array.154" }, { %"struct.std::__1::array.154" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %18, label %203, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 1
  %24 = select i1 %22, %"struct.std::__1::pair"* %14, %"struct.std::__1::pair"* %23
  %25 = icmp eq %"struct.std::__1::pair"* %14, %24
  %26 = or i1 %18, %25
  br i1 %26, label %203, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 1, i32 0
  %29 = load i16*, i16** %28, align 8, !noalias !108
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 1, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !108
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %27
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %50, label %37

37:                                               ; preds = %35
  %38 = add nuw nsw i64 %31, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #15
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %44, i8** %46, align 8, !alias.scope !108
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8, !alias.scope !108
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %49, align 8, !alias.scope !108
  br label %56

50:                                               ; preds = %35
  %51 = trunc i64 %31 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  store i8 %51, i8* %53, align 1, !alias.scope !108
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %55 = icmp eq i64 %31, 0
  br i1 %55, label %200, label %56

56:                                               ; preds = %50, %42
  %57 = phi i16* [ %45, %42 ], [ %54, %50 ]
  %58 = icmp ult i64 %31, 16
  br i1 %58, label %147, label %59

59:                                               ; preds = %56
  %60 = getelementptr i16, i16* %57, i64 %31
  %61 = getelementptr i16, i16* %29, i64 %31
  %62 = icmp ult i16* %57, %61
  %63 = icmp ult i16* %29, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %59
  %66 = and i64 %31, -16
  %67 = sub i64 %31, %66
  %68 = getelementptr i16, i16* %29, i64 %66
  %69 = getelementptr i16, i16* %57, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %29, i64 %78
  %81 = getelementptr i16, i16* %57, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !111
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !111
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !114, !noalias !111
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !114, !noalias !111
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %29, i64 %90
  %92 = getelementptr i16, i16* %57, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !111
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !111
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !114, !noalias !111
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !114, !noalias !111
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %29, i64 %101
  %103 = getelementptr i16, i16* %57, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !111
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !111
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !114, !noalias !111
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !114, !noalias !111
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %29, i64 %112
  %114 = getelementptr i16, i16* %57, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !111
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !111
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !114, !noalias !111
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !114, !noalias !111
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !116

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %29, i64 %130
  %133 = getelementptr i16, i16* %57, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !111
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !111
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !114, !noalias !111
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !114, !noalias !111
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !117

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %31, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %59, %56
  %148 = phi i64 [ %31, %59 ], [ %31, %56 ], [ %67, %145 ]
  %149 = phi i16* [ %29, %59 ], [ %29, %56 ], [ %68, %145 ]
  %150 = phi i16* [ %57, %59 ], [ %57, %56 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !118

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !119

200:                                              ; preds = %165, %170, %145, %50
  %201 = phi i16* [ %54, %50 ], [ %57, %145 ], [ %57, %170 ], [ %57, %165 ]
  %202 = getelementptr inbounds i16, i16* %201, i64 %31
  store i16 0, i16* %202, align 2
  br label %205

203:                                              ; preds = %17, %19
  %204 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #16
  br label %205

205:                                              ; preds = %203, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.std::__1::pair"* @_ZN4base6ranges4findIRKNS_8flat_mapIN3gfx19HorizontalAlignmentENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm4EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_(%"class.base::flat_map"* dereferenceable(96) bitcast ({ %"struct.std::__1::array.154" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap to %"class.base::flat_map"*), %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 8)
  %3 = icmp eq %"struct.std::__1::pair"* %2, getelementptr inbounds ({ %"struct.std::__1::array.154" }, { %"struct.std::__1::array.154" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i64 [ %8, %4 ], [ 0, %1 ]
  %11 = phi i64 [ 1, %4 ], [ 0, %1 ]
  %12 = or i64 %11, %10
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN4base6ranges4findIRKNS_8flat_mapIN3gfx19HorizontalAlignmentENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm4EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_(%"class.base::flat_map"* dereferenceable(96), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i64 4
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %17 = select i1 %9, i16* %15, i16* %16
  %18 = icmp eq i64 %13, 0
  %19 = bitcast %"class.base::flat_map"* %0 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %2
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %13
  br i1 %24, label %25, label %41

25:                                               ; preds = %3
  br i1 %18, label %49, label %26

26:                                               ; preds = %25
  %27 = bitcast i8* %20 to i16**
  %28 = load i16*, i16** %27, align 8
  br label %29

29:                                               ; preds = %36, %26
  %30 = phi i64 [ %37, %36 ], [ %13, %26 ]
  %31 = phi i16* [ %39, %36 ], [ %17, %26 ]
  %32 = phi i16* [ %38, %36 ], [ %28, %26 ]
  %33 = load i16, i16* %32, align 2
  %34 = load i16, i16* %31, align 2
  %35 = icmp eq i16 %34, %33
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = add i64 %30, -1
  %38 = getelementptr inbounds i16, i16* %32, i64 1
  %39 = getelementptr inbounds i16, i16* %31, i64 1
  %40 = icmp eq i64 %37, 0
  br i1 %40, label %49, label %29

41:                                               ; preds = %29, %3
  %42 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %43 = bitcast %"struct.std::__1::pair"* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %2
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %13
  br i1 %48, label %51, label %62

49:                                               ; preds = %36, %70, %96, %104, %111, %86, %25, %51, %75
  %50 = phi %"struct.std::__1::pair"* [ %4, %25 ], [ %42, %51 ], [ %63, %75 ], [ %95, %86 ], [ %5, %104 ], [ %87, %111 ], [ %63, %96 ], [ %42, %70 ], [ %4, %36 ]
  ret %"struct.std::__1::pair"* %50

51:                                               ; preds = %41
  br i1 %18, label %49, label %52

52:                                               ; preds = %51
  %53 = bitcast i8* %44 to i16**
  %54 = load i16*, i16** %53, align 8
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ %71, %70 ], [ %13, %52 ]
  %57 = phi i16* [ %73, %70 ], [ %17, %52 ]
  %58 = phi i16* [ %72, %70 ], [ %54, %52 ]
  %59 = load i16, i16* %58, align 2
  %60 = load i16, i16* %57, align 2
  %61 = icmp eq i16 %60, %59
  br i1 %61, label %70, label %62

62:                                               ; preds = %55, %41
  %63 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %64 = bitcast %"struct.std::__1::pair"* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %2
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %13
  br i1 %69, label %75, label %86

70:                                               ; preds = %55
  %71 = add i64 %56, -1
  %72 = getelementptr inbounds i16, i16* %58, i64 1
  %73 = getelementptr inbounds i16, i16* %57, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %49, label %55

75:                                               ; preds = %62
  br i1 %18, label %49, label %76

76:                                               ; preds = %75
  %77 = bitcast i8* %65 to i16**
  %78 = load i16*, i16** %77, align 8
  br label %79

79:                                               ; preds = %96, %76
  %80 = phi i64 [ %97, %96 ], [ %13, %76 ]
  %81 = phi i16* [ %99, %96 ], [ %17, %76 ]
  %82 = phi i16* [ %98, %96 ], [ %78, %76 ]
  %83 = load i16, i16* %82, align 2
  %84 = load i16, i16* %81, align 2
  %85 = icmp eq i16 %84, %83
  br i1 %85, label %96, label %86

86:                                               ; preds = %79, %62
  %87 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %88 = bitcast %"struct.std::__1::pair"* %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %2
  %90 = getelementptr inbounds i8, i8* %89, i64 8
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ne i64 %92, %13
  %94 = or i1 %93, %18
  %95 = select i1 %93, %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"* %87
  br i1 %94, label %49, label %101

96:                                               ; preds = %79
  %97 = add i64 %80, -1
  %98 = getelementptr inbounds i16, i16* %82, i64 1
  %99 = getelementptr inbounds i16, i16* %81, i64 1
  %100 = icmp eq i64 %97, 0
  br i1 %100, label %49, label %79

101:                                              ; preds = %86
  %102 = bitcast i8* %89 to i16**
  %103 = load i16*, i16** %102, align 8
  br label %104

104:                                              ; preds = %111, %101
  %105 = phi i64 [ %112, %111 ], [ %13, %101 ]
  %106 = phi i16* [ %114, %111 ], [ %17, %101 ]
  %107 = phi i16* [ %113, %111 ], [ %103, %101 ]
  %108 = load i16, i16* %107, align 2
  %109 = load i16, i16* %106, align 2
  %110 = icmp eq i16 %109, %108
  br i1 %110, label %111, label %49

111:                                              ; preds = %104
  %112 = add i64 %105, -1
  %113 = getelementptr inbounds i16, i16* %107, i64 1
  %114 = getelementptr inbounds i16, i16* %106, i64 1
  %115 = icmp eq i64 %112, 0
  br i1 %115, label %49, label %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %13 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  br label %14

14:                                               ; preds = %197, %1
  %15 = phi %"struct.std::__1::pair"* [ getelementptr inbounds ({ %"struct.std::__1::array.154" }, { %"struct.std::__1::array.154" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %1 ], [ %198, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 0
  %17 = load i16*, i16** %16, align 8, !noalias !120
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !120
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %14
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %35, label %25

25:                                               ; preds = %23
  %26 = add nuw nsw i64 %19, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to i16*
  store i8* %32, i8** %7, align 8, !alias.scope !120
  %34 = or i64 %27, -9223372036854775808
  store i64 %34, i64* %8, align 8, !alias.scope !120
  store i64 %19, i64* %9, align 8, !alias.scope !120
  br label %38

35:                                               ; preds = %23
  %36 = trunc i64 %19 to i8
  store i8 %36, i8* %11, align 1, !alias.scope !120
  %37 = icmp eq i64 %19, 0
  br i1 %37, label %182, label %38

38:                                               ; preds = %35, %30
  %39 = phi i16* [ %33, %30 ], [ %12, %35 ]
  %40 = icmp ult i64 %19, 16
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  %42 = getelementptr i16, i16* %39, i64 %19
  %43 = getelementptr i16, i16* %17, i64 %19
  %44 = icmp ult i16* %39, %43
  %45 = icmp ult i16* %17, %42
  %46 = and i1 %44, %45
  br i1 %46, label %129, label %47

47:                                               ; preds = %41
  %48 = and i64 %19, -16
  %49 = sub i64 %19, %48
  %50 = getelementptr i16, i16* %17, i64 %48
  %51 = getelementptr i16, i16* %39, i64 %48
  %52 = add i64 %48, -16
  %53 = lshr exact i64 %52, 4
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 3
  %56 = icmp ult i64 %52, 48
  br i1 %56, label %108, label %57

57:                                               ; preds = %47
  %58 = sub nsw i64 %54, %55
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %105, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %106, %59 ]
  %62 = getelementptr i16, i16* %17, i64 %60
  %63 = getelementptr i16, i16* %39, i64 %60
  %64 = bitcast i16* %62 to <8 x i16>*
  %65 = load <8 x i16>, <8 x i16>* %64, align 2, !alias.scope !131
  %66 = getelementptr i16, i16* %62, i64 8
  %67 = bitcast i16* %66 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !131
  %69 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %65, <8 x i16>* %69, align 2, !alias.scope !134, !noalias !131
  %70 = getelementptr i16, i16* %63, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %71, align 2, !alias.scope !134, !noalias !131
  %72 = or i64 %60, 16
  %73 = getelementptr i16, i16* %17, i64 %72
  %74 = getelementptr i16, i16* %39, i64 %72
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !131
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !131
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !134, !noalias !131
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !134, !noalias !131
  %83 = or i64 %60, 32
  %84 = getelementptr i16, i16* %17, i64 %83
  %85 = getelementptr i16, i16* %39, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !131
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !131
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !134, !noalias !131
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !134, !noalias !131
  %94 = or i64 %60, 48
  %95 = getelementptr i16, i16* %17, i64 %94
  %96 = getelementptr i16, i16* %39, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !131
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !131
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !134, !noalias !131
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !134, !noalias !131
  %105 = add i64 %60, 64
  %106 = add i64 %61, -4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %59, !llvm.loop !136

108:                                              ; preds = %59, %47
  %109 = phi i64 [ 0, %47 ], [ %105, %59 ]
  %110 = icmp eq i64 %55, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %124, %111 ], [ %109, %108 ]
  %113 = phi i64 [ %125, %111 ], [ %55, %108 ]
  %114 = getelementptr i16, i16* %17, i64 %112
  %115 = getelementptr i16, i16* %39, i64 %112
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !131
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !131
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !134, !noalias !131
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !134, !noalias !131
  %124 = add i64 %112, 16
  %125 = add i64 %113, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %111, !llvm.loop !137

127:                                              ; preds = %111, %108
  %128 = icmp eq i64 %19, %48
  br i1 %128, label %182, label %129

129:                                              ; preds = %127, %41, %38
  %130 = phi i64 [ %19, %41 ], [ %19, %38 ], [ %49, %127 ]
  %131 = phi i16* [ %17, %41 ], [ %17, %38 ], [ %50, %127 ]
  %132 = phi i16* [ %39, %41 ], [ %39, %38 ], [ %51, %127 ]
  %133 = add i64 %130, -1
  %134 = and i64 %130, 7
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %129, %136
  %137 = phi i64 [ %142, %136 ], [ %130, %129 ]
  %138 = phi i16* [ %144, %136 ], [ %131, %129 ]
  %139 = phi i16* [ %143, %136 ], [ %132, %129 ]
  %140 = phi i64 [ %145, %136 ], [ %134, %129 ]
  %141 = load i16, i16* %138, align 2
  store i16 %141, i16* %139, align 2
  %142 = add i64 %137, -1
  %143 = getelementptr inbounds i16, i16* %139, i64 1
  %144 = getelementptr inbounds i16, i16* %138, i64 1
  %145 = add i64 %140, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136, !llvm.loop !138

147:                                              ; preds = %136, %129
  %148 = phi i64 [ %130, %129 ], [ %142, %136 ]
  %149 = phi i16* [ %131, %129 ], [ %144, %136 ]
  %150 = phi i16* [ %132, %129 ], [ %143, %136 ]
  %151 = icmp ult i64 %133, 7
  br i1 %151, label %182, label %152

152:                                              ; preds = %147, %152
  %153 = phi i64 [ %178, %152 ], [ %148, %147 ]
  %154 = phi i16* [ %180, %152 ], [ %149, %147 ]
  %155 = phi i16* [ %179, %152 ], [ %150, %147 ]
  %156 = load i16, i16* %154, align 2
  store i16 %156, i16* %155, align 2
  %157 = getelementptr inbounds i16, i16* %155, i64 1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %155, i64 2
  %161 = getelementptr inbounds i16, i16* %154, i64 2
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %155, i64 3
  %164 = getelementptr inbounds i16, i16* %154, i64 3
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %155, i64 4
  %167 = getelementptr inbounds i16, i16* %154, i64 4
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %155, i64 5
  %170 = getelementptr inbounds i16, i16* %154, i64 5
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %155, i64 6
  %173 = getelementptr inbounds i16, i16* %154, i64 6
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %155, i64 7
  %176 = getelementptr inbounds i16, i16* %154, i64 7
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %153, -8
  %179 = getelementptr inbounds i16, i16* %155, i64 8
  %180 = getelementptr inbounds i16, i16* %154, i64 8
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %152, !llvm.loop !139

182:                                              ; preds = %147, %152, %127, %35
  %183 = phi i16* [ %12, %35 ], [ %39, %127 ], [ %39, %152 ], [ %39, %147 ]
  %184 = getelementptr inbounds i16, i16* %183, i64 %19
  store i16 0, i16* %184, align 2
  %185 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %186 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %187 = icmp ult %"class.std::__1::basic_string"* %185, %186
  br i1 %187, label %188, label %192

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %6, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #16
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 1
  %191 = ptrtoint %"class.std::__1::basic_string"* %190 to i64
  store i64 %191, i64* %13, align 8
  br label %197

192:                                              ; preds = %182
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #16
  %193 = load i8, i8* %11, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %196) #15
  br label %197

197:                                              ; preds = %195, %192, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %199 = icmp eq %"struct.std::__1::pair"* %198, getelementptr inbounds ({ %"struct.std::__1::array.154" }, { %"struct.std::__1::array.154" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx19HorizontalAlignmentEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %199, label %200, label %14

200:                                              ; preds = %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE8ToStringES3_(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i64 [ 3, %2 ], [ %15, %3 ]
  %5 = phi %"struct.std::__1::pair.163"* [ getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %2 ], [ %14, %3 ]
  %6 = lshr i64 %4, 1
  %7 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %5, i64 %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  %11 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %7, i64 1
  %12 = xor i64 %6, -1
  %13 = add i64 %4, %12
  %14 = select i1 %10, %"struct.std::__1::pair.163"* %11, %"struct.std::__1::pair.163"* %5
  %15 = select i1 %10, i64 %13, i64 %6
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %3

17:                                               ; preds = %3
  %18 = icmp eq %"struct.std::__1::pair.163"* %14, getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %18, label %203, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %14, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %14, i64 1
  %24 = select i1 %22, %"struct.std::__1::pair.163"* %14, %"struct.std::__1::pair.163"* %23
  %25 = icmp eq %"struct.std::__1::pair.163"* %14, %24
  %26 = or i1 %18, %25
  br i1 %26, label %203, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %14, i64 0, i32 1, i32 0
  %29 = load i16*, i16** %28, align 8, !noalias !140
  %30 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %14, i64 0, i32 1, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !140
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %27
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %50, label %37

37:                                               ; preds = %35
  %38 = add nuw nsw i64 %31, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #15
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %44, i8** %46, align 8, !alias.scope !140
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8, !alias.scope !140
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %49, align 8, !alias.scope !140
  br label %56

50:                                               ; preds = %35
  %51 = trunc i64 %31 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  store i8 %51, i8* %53, align 1, !alias.scope !140
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %55 = icmp eq i64 %31, 0
  br i1 %55, label %200, label %56

56:                                               ; preds = %50, %42
  %57 = phi i16* [ %45, %42 ], [ %54, %50 ]
  %58 = icmp ult i64 %31, 16
  br i1 %58, label %147, label %59

59:                                               ; preds = %56
  %60 = getelementptr i16, i16* %57, i64 %31
  %61 = getelementptr i16, i16* %29, i64 %31
  %62 = icmp ult i16* %57, %61
  %63 = icmp ult i16* %29, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %59
  %66 = and i64 %31, -16
  %67 = sub i64 %31, %66
  %68 = getelementptr i16, i16* %29, i64 %66
  %69 = getelementptr i16, i16* %57, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %29, i64 %78
  %81 = getelementptr i16, i16* %57, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !143
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !143
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !146, !noalias !143
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !146, !noalias !143
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %29, i64 %90
  %92 = getelementptr i16, i16* %57, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !143
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !143
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !146, !noalias !143
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !146, !noalias !143
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %29, i64 %101
  %103 = getelementptr i16, i16* %57, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !143
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !143
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !146, !noalias !143
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !146, !noalias !143
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %29, i64 %112
  %114 = getelementptr i16, i16* %57, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !143
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !143
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !146, !noalias !143
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !146, !noalias !143
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !148

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %29, i64 %130
  %133 = getelementptr i16, i16* %57, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !143
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !143
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !146, !noalias !143
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !146, !noalias !143
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !149

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %31, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %59, %56
  %148 = phi i64 [ %31, %59 ], [ %31, %56 ], [ %67, %145 ]
  %149 = phi i16* [ %29, %59 ], [ %29, %56 ], [ %68, %145 ]
  %150 = phi i16* [ %57, %59 ], [ %57, %56 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !150

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !151

200:                                              ; preds = %165, %170, %145, %50
  %201 = phi i16* [ %54, %50 ], [ %57, %145 ], [ %57, %170 ], [ %57, %165 ]
  %202 = getelementptr inbounds i16, i16* %201, i64 %31
  store i16 0, i16* %202, align 2
  br label %205

203:                                              ; preds = %17, %19
  %204 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #16
  br label %205

205:                                              ; preds = %203, %200
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2, i64 0, i32 1, i32 1
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %13 = select i1 %5, i16* %11, i16* %12
  switch i64 %9, label %38 [
    i64 9, label %14
    i64 12, label %21
  ]

14:                                               ; preds = %1
  %15 = load i16, i16* %13, align 2
  %16 = icmp eq i16 %15, 65
  br i1 %16, label %17, label %38

17:                                               ; preds = %14
  %18 = getelementptr inbounds i16, i16* %13, i64 1
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 76
  br i1 %20, label %122, label %38

21:                                               ; preds = %1
  %22 = load i16, i16* %13, align 2
  %23 = icmp eq i16 %22, 65
  br i1 %23, label %24, label %38

24:                                               ; preds = %21
  %25 = getelementptr inbounds i16, i16* %13, i64 1
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 76
  br i1 %27, label %82, label %28

28:                                               ; preds = %24, %82, %86, %90, %94, %98, %102, %106, %110, %114, %118
  %29 = getelementptr inbounds i16, i16* %13, i64 1
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 76
  br i1 %31, label %42, label %38

32:                                               ; preds = %146, %118, %78
  %33 = phi %"struct.std::__1::pair.163"* [ getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 2), %78 ], [ getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 1), %118 ], [ getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %146 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  br label %38

38:                                               ; preds = %28, %42, %46, %50, %54, %58, %62, %66, %70, %74, %78, %21, %14, %17, %122, %126, %130, %134, %138, %142, %146, %1, %32
  %39 = phi i64 [ %37, %32 ], [ 0, %1 ], [ 0, %146 ], [ 0, %142 ], [ 0, %138 ], [ 0, %134 ], [ 0, %130 ], [ 0, %126 ], [ 0, %122 ], [ 0, %17 ], [ 0, %14 ], [ 0, %21 ], [ 0, %78 ], [ 0, %74 ], [ 0, %70 ], [ 0, %66 ], [ 0, %62 ], [ 0, %58 ], [ 0, %54 ], [ 0, %50 ], [ 0, %46 ], [ 0, %42 ], [ 0, %28 ]
  %40 = phi i64 [ 1, %32 ], [ 0, %1 ], [ 0, %146 ], [ 0, %142 ], [ 0, %138 ], [ 0, %134 ], [ 0, %130 ], [ 0, %126 ], [ 0, %122 ], [ 0, %17 ], [ 0, %14 ], [ 0, %21 ], [ 0, %78 ], [ 0, %74 ], [ 0, %70 ], [ 0, %66 ], [ 0, %62 ], [ 0, %58 ], [ 0, %54 ], [ 0, %50 ], [ 0, %46 ], [ 0, %42 ], [ 0, %28 ]
  %41 = or i64 %40, %39
  ret i64 %41

42:                                               ; preds = %28
  %43 = getelementptr inbounds i16, i16* %13, i64 2
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 73
  br i1 %45, label %46, label %38

46:                                               ; preds = %42
  %47 = getelementptr inbounds i16, i16* %13, i64 3
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 71
  br i1 %49, label %50, label %38

50:                                               ; preds = %46
  %51 = getelementptr inbounds i16, i16* %13, i64 4
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 78
  br i1 %53, label %54, label %38

54:                                               ; preds = %50
  %55 = getelementptr inbounds i16, i16* %13, i64 5
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, 95
  br i1 %57, label %58, label %38

58:                                               ; preds = %54
  %59 = getelementptr inbounds i16, i16* %13, i64 6
  %60 = load i16, i16* %59, align 2
  %61 = icmp eq i16 %60, 66
  br i1 %61, label %62, label %38

62:                                               ; preds = %58
  %63 = getelementptr inbounds i16, i16* %13, i64 7
  %64 = load i16, i16* %63, align 2
  %65 = icmp eq i16 %64, 79
  br i1 %65, label %66, label %38

66:                                               ; preds = %62
  %67 = getelementptr inbounds i16, i16* %13, i64 8
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %68, 84
  br i1 %69, label %70, label %38

70:                                               ; preds = %66
  %71 = getelementptr inbounds i16, i16* %13, i64 9
  %72 = load i16, i16* %71, align 2
  %73 = icmp eq i16 %72, 84
  br i1 %73, label %74, label %38

74:                                               ; preds = %70
  %75 = getelementptr inbounds i16, i16* %13, i64 10
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 79
  br i1 %77, label %78, label %38

78:                                               ; preds = %74
  %79 = getelementptr inbounds i16, i16* %13, i64 11
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 77
  br i1 %81, label %32, label %38

82:                                               ; preds = %24
  %83 = getelementptr inbounds i16, i16* %13, i64 2
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %84, 73
  br i1 %85, label %86, label %28

86:                                               ; preds = %82
  %87 = getelementptr inbounds i16, i16* %13, i64 3
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 71
  br i1 %89, label %90, label %28

90:                                               ; preds = %86
  %91 = getelementptr inbounds i16, i16* %13, i64 4
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, 78
  br i1 %93, label %94, label %28

94:                                               ; preds = %90
  %95 = getelementptr inbounds i16, i16* %13, i64 5
  %96 = load i16, i16* %95, align 2
  %97 = icmp eq i16 %96, 95
  br i1 %97, label %98, label %28

98:                                               ; preds = %94
  %99 = getelementptr inbounds i16, i16* %13, i64 6
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 77
  br i1 %101, label %102, label %28

102:                                              ; preds = %98
  %103 = getelementptr inbounds i16, i16* %13, i64 7
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, 73
  br i1 %105, label %106, label %28

106:                                              ; preds = %102
  %107 = getelementptr inbounds i16, i16* %13, i64 8
  %108 = load i16, i16* %107, align 2
  %109 = icmp eq i16 %108, 68
  br i1 %109, label %110, label %28

110:                                              ; preds = %106
  %111 = getelementptr inbounds i16, i16* %13, i64 9
  %112 = load i16, i16* %111, align 2
  %113 = icmp eq i16 %112, 68
  br i1 %113, label %114, label %28

114:                                              ; preds = %110
  %115 = getelementptr inbounds i16, i16* %13, i64 10
  %116 = load i16, i16* %115, align 2
  %117 = icmp eq i16 %116, 76
  br i1 %117, label %118, label %28

118:                                              ; preds = %114
  %119 = getelementptr inbounds i16, i16* %13, i64 11
  %120 = load i16, i16* %119, align 2
  %121 = icmp eq i16 %120, 69
  br i1 %121, label %32, label %28

122:                                              ; preds = %17
  %123 = getelementptr inbounds i16, i16* %13, i64 2
  %124 = load i16, i16* %123, align 2
  %125 = icmp eq i16 %124, 73
  br i1 %125, label %126, label %38

126:                                              ; preds = %122
  %127 = getelementptr inbounds i16, i16* %13, i64 3
  %128 = load i16, i16* %127, align 2
  %129 = icmp eq i16 %128, 71
  br i1 %129, label %130, label %38

130:                                              ; preds = %126
  %131 = getelementptr inbounds i16, i16* %13, i64 4
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 78
  br i1 %133, label %134, label %38

134:                                              ; preds = %130
  %135 = getelementptr inbounds i16, i16* %13, i64 5
  %136 = load i16, i16* %135, align 2
  %137 = icmp eq i16 %136, 95
  br i1 %137, label %138, label %38

138:                                              ; preds = %134
  %139 = getelementptr inbounds i16, i16* %13, i64 6
  %140 = load i16, i16* %139, align 2
  %141 = icmp eq i16 %140, 84
  br i1 %141, label %142, label %38

142:                                              ; preds = %138
  %143 = getelementptr inbounds i16, i16* %13, i64 7
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 79
  br i1 %145, label %146, label %38

146:                                              ; preds = %142
  %147 = getelementptr inbounds i16, i16* %13, i64 8
  %148 = load i16, i16* %147, align 2
  %149 = icmp eq i16 %148, 80
  br i1 %149, label %32, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %13 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  br label %14

14:                                               ; preds = %197, %1
  %15 = phi %"struct.std::__1::pair.163"* [ getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %1 ], [ %198, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %16 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %15, i64 0, i32 1, i32 0
  %17 = load i16*, i16** %16, align 8, !noalias !152
  %18 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %15, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !152
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %14
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %35, label %25

25:                                               ; preds = %23
  %26 = add nuw nsw i64 %19, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to i16*
  store i8* %32, i8** %7, align 8, !alias.scope !152
  %34 = or i64 %27, -9223372036854775808
  store i64 %34, i64* %8, align 8, !alias.scope !152
  store i64 %19, i64* %9, align 8, !alias.scope !152
  br label %38

35:                                               ; preds = %23
  %36 = trunc i64 %19 to i8
  store i8 %36, i8* %11, align 1, !alias.scope !152
  %37 = icmp eq i64 %19, 0
  br i1 %37, label %182, label %38

38:                                               ; preds = %35, %30
  %39 = phi i16* [ %33, %30 ], [ %12, %35 ]
  %40 = icmp ult i64 %19, 16
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  %42 = getelementptr i16, i16* %39, i64 %19
  %43 = getelementptr i16, i16* %17, i64 %19
  %44 = icmp ult i16* %39, %43
  %45 = icmp ult i16* %17, %42
  %46 = and i1 %44, %45
  br i1 %46, label %129, label %47

47:                                               ; preds = %41
  %48 = and i64 %19, -16
  %49 = sub i64 %19, %48
  %50 = getelementptr i16, i16* %17, i64 %48
  %51 = getelementptr i16, i16* %39, i64 %48
  %52 = add i64 %48, -16
  %53 = lshr exact i64 %52, 4
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 3
  %56 = icmp ult i64 %52, 48
  br i1 %56, label %108, label %57

57:                                               ; preds = %47
  %58 = sub nsw i64 %54, %55
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %105, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %106, %59 ]
  %62 = getelementptr i16, i16* %17, i64 %60
  %63 = getelementptr i16, i16* %39, i64 %60
  %64 = bitcast i16* %62 to <8 x i16>*
  %65 = load <8 x i16>, <8 x i16>* %64, align 2, !alias.scope !163
  %66 = getelementptr i16, i16* %62, i64 8
  %67 = bitcast i16* %66 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !163
  %69 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %65, <8 x i16>* %69, align 2, !alias.scope !166, !noalias !163
  %70 = getelementptr i16, i16* %63, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %71, align 2, !alias.scope !166, !noalias !163
  %72 = or i64 %60, 16
  %73 = getelementptr i16, i16* %17, i64 %72
  %74 = getelementptr i16, i16* %39, i64 %72
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !163
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !163
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !166, !noalias !163
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !166, !noalias !163
  %83 = or i64 %60, 32
  %84 = getelementptr i16, i16* %17, i64 %83
  %85 = getelementptr i16, i16* %39, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !163
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !163
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !166, !noalias !163
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !166, !noalias !163
  %94 = or i64 %60, 48
  %95 = getelementptr i16, i16* %17, i64 %94
  %96 = getelementptr i16, i16* %39, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !163
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !163
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !166, !noalias !163
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !166, !noalias !163
  %105 = add i64 %60, 64
  %106 = add i64 %61, -4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %59, !llvm.loop !168

108:                                              ; preds = %59, %47
  %109 = phi i64 [ 0, %47 ], [ %105, %59 ]
  %110 = icmp eq i64 %55, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %124, %111 ], [ %109, %108 ]
  %113 = phi i64 [ %125, %111 ], [ %55, %108 ]
  %114 = getelementptr i16, i16* %17, i64 %112
  %115 = getelementptr i16, i16* %39, i64 %112
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !163
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !163
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !166, !noalias !163
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !166, !noalias !163
  %124 = add i64 %112, 16
  %125 = add i64 %113, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %111, !llvm.loop !169

127:                                              ; preds = %111, %108
  %128 = icmp eq i64 %19, %48
  br i1 %128, label %182, label %129

129:                                              ; preds = %127, %41, %38
  %130 = phi i64 [ %19, %41 ], [ %19, %38 ], [ %49, %127 ]
  %131 = phi i16* [ %17, %41 ], [ %17, %38 ], [ %50, %127 ]
  %132 = phi i16* [ %39, %41 ], [ %39, %38 ], [ %51, %127 ]
  %133 = add i64 %130, -1
  %134 = and i64 %130, 7
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %129, %136
  %137 = phi i64 [ %142, %136 ], [ %130, %129 ]
  %138 = phi i16* [ %144, %136 ], [ %131, %129 ]
  %139 = phi i16* [ %143, %136 ], [ %132, %129 ]
  %140 = phi i64 [ %145, %136 ], [ %134, %129 ]
  %141 = load i16, i16* %138, align 2
  store i16 %141, i16* %139, align 2
  %142 = add i64 %137, -1
  %143 = getelementptr inbounds i16, i16* %139, i64 1
  %144 = getelementptr inbounds i16, i16* %138, i64 1
  %145 = add i64 %140, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136, !llvm.loop !170

147:                                              ; preds = %136, %129
  %148 = phi i64 [ %130, %129 ], [ %142, %136 ]
  %149 = phi i16* [ %131, %129 ], [ %144, %136 ]
  %150 = phi i16* [ %132, %129 ], [ %143, %136 ]
  %151 = icmp ult i64 %133, 7
  br i1 %151, label %182, label %152

152:                                              ; preds = %147, %152
  %153 = phi i64 [ %178, %152 ], [ %148, %147 ]
  %154 = phi i16* [ %180, %152 ], [ %149, %147 ]
  %155 = phi i16* [ %179, %152 ], [ %150, %147 ]
  %156 = load i16, i16* %154, align 2
  store i16 %156, i16* %155, align 2
  %157 = getelementptr inbounds i16, i16* %155, i64 1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %155, i64 2
  %161 = getelementptr inbounds i16, i16* %154, i64 2
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %155, i64 3
  %164 = getelementptr inbounds i16, i16* %154, i64 3
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %155, i64 4
  %167 = getelementptr inbounds i16, i16* %154, i64 4
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %155, i64 5
  %170 = getelementptr inbounds i16, i16* %154, i64 5
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %155, i64 6
  %173 = getelementptr inbounds i16, i16* %154, i64 6
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %155, i64 7
  %176 = getelementptr inbounds i16, i16* %154, i64 7
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %153, -8
  %179 = getelementptr inbounds i16, i16* %155, i64 8
  %180 = getelementptr inbounds i16, i16* %154, i64 8
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %152, !llvm.loop !171

182:                                              ; preds = %147, %152, %127, %35
  %183 = phi i16* [ %12, %35 ], [ %39, %127 ], [ %39, %152 ], [ %39, %147 ]
  %184 = getelementptr inbounds i16, i16* %183, i64 %19
  store i16 0, i16* %184, align 2
  %185 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %186 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %187 = icmp ult %"class.std::__1::basic_string"* %185, %186
  br i1 %187, label %188, label %192

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %6, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #16
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 1
  %191 = ptrtoint %"class.std::__1::basic_string"* %190 to i64
  store i64 %191, i64* %13, align 8
  br label %197

192:                                              ; preds = %182
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #16
  %193 = load i8, i8* %11, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %196) #15
  br label %197

197:                                              ; preds = %195, %192, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %198 = getelementptr inbounds %"struct.std::__1::pair.163", %"struct.std::__1::pair.163"* %15, i64 1
  %199 = icmp eq %"struct.std::__1::pair.163"* %198, getelementptr inbounds ({ %"struct.std::__1::array.162" }, { %"struct.std::__1::array.162" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx17VerticalAlignmentEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %199, label %200, label %14

200:                                              ; preds = %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE8ToStringES3_(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i64 [ 7, %2 ], [ %15, %3 ]
  %5 = phi %"struct.std::__1::pair.174"* [ getelementptr inbounds ({ %"struct.std::__1::array.173" }, { %"struct.std::__1::array.173" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %2 ], [ %14, %3 ]
  %6 = lshr i64 %4, 1
  %7 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %5, i64 %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  %11 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %7, i64 1
  %12 = xor i64 %6, -1
  %13 = add i64 %4, %12
  %14 = select i1 %10, %"struct.std::__1::pair.174"* %11, %"struct.std::__1::pair.174"* %5
  %15 = select i1 %10, i64 %13, i64 %6
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %3

17:                                               ; preds = %3
  %18 = icmp eq %"struct.std::__1::pair.174"* %14, getelementptr inbounds ({ %"struct.std::__1::array.173" }, { %"struct.std::__1::array.173" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %18, label %203, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %14, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %14, i64 1
  %24 = select i1 %22, %"struct.std::__1::pair.174"* %14, %"struct.std::__1::pair.174"* %23
  %25 = icmp eq %"struct.std::__1::pair.174"* %14, %24
  %26 = or i1 %18, %25
  br i1 %26, label %203, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %14, i64 0, i32 1, i32 0
  %29 = load i16*, i16** %28, align 8, !noalias !172
  %30 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %14, i64 0, i32 1, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !172
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %27
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %50, label %37

37:                                               ; preds = %35
  %38 = add nuw nsw i64 %31, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #15
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %44, i8** %46, align 8, !alias.scope !172
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8, !alias.scope !172
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %49, align 8, !alias.scope !172
  br label %56

50:                                               ; preds = %35
  %51 = trunc i64 %31 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  store i8 %51, i8* %53, align 1, !alias.scope !172
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %55 = icmp eq i64 %31, 0
  br i1 %55, label %200, label %56

56:                                               ; preds = %50, %42
  %57 = phi i16* [ %45, %42 ], [ %54, %50 ]
  %58 = icmp ult i64 %31, 16
  br i1 %58, label %147, label %59

59:                                               ; preds = %56
  %60 = getelementptr i16, i16* %57, i64 %31
  %61 = getelementptr i16, i16* %29, i64 %31
  %62 = icmp ult i16* %57, %61
  %63 = icmp ult i16* %29, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %59
  %66 = and i64 %31, -16
  %67 = sub i64 %31, %66
  %68 = getelementptr i16, i16* %29, i64 %66
  %69 = getelementptr i16, i16* %57, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %29, i64 %78
  %81 = getelementptr i16, i16* %57, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !175
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !175
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !178, !noalias !175
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !178, !noalias !175
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %29, i64 %90
  %92 = getelementptr i16, i16* %57, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !175
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !175
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !178, !noalias !175
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !178, !noalias !175
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %29, i64 %101
  %103 = getelementptr i16, i16* %57, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !175
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !175
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !178, !noalias !175
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !178, !noalias !175
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %29, i64 %112
  %114 = getelementptr i16, i16* %57, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !175
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !175
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !178, !noalias !175
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !178, !noalias !175
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !180

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %29, i64 %130
  %133 = getelementptr i16, i16* %57, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !175
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !175
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !178, !noalias !175
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !178, !noalias !175
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !181

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %31, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %59, %56
  %148 = phi i64 [ %31, %59 ], [ %31, %56 ], [ %67, %145 ]
  %149 = phi i16* [ %29, %59 ], [ %29, %56 ], [ %68, %145 ]
  %150 = phi i16* [ %57, %59 ], [ %57, %56 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !182

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !183

200:                                              ; preds = %165, %170, %145, %50
  %201 = phi i16* [ %54, %50 ], [ %57, %145 ], [ %57, %170 ], [ %57, %165 ]
  %202 = getelementptr inbounds i16, i16* %201, i64 %31
  store i16 0, i16* %202, align 2
  br label %205

203:                                              ; preds = %17, %19
  %204 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #16
  br label %205

205:                                              ; preds = %203, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE10FromStringERKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.std::__1::pair.174"* @_ZN4base6ranges4findIRKNS_8flat_mapIN3gfx13ElideBehaviorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm7EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_(%"class.base::flat_map.171"* dereferenceable(168) bitcast ({ %"struct.std::__1::array.173" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap to %"class.base::flat_map.171"*), %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 8)
  %3 = icmp eq %"struct.std::__1::pair.174"* %2, getelementptr inbounds ({ %"struct.std::__1::array.173" }, { %"struct.std::__1::array.173" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i64 [ %8, %4 ], [ 0, %1 ]
  %11 = phi i64 [ 1, %4 ], [ 0, %1 ]
  %12 = or i64 %11, %10
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.174"* @_ZN4base6ranges4findIRKNS_8flat_mapIN3gfx13ElideBehaviorENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm7EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_(%"class.base::flat_map.171"* dereferenceable(168), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 7
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %17 = select i1 %9, i16* %15, i16* %16
  %18 = icmp eq i64 %13, 0
  %19 = bitcast %"class.base::flat_map.171"* %0 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %2
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %13
  br i1 %24, label %25, label %41

25:                                               ; preds = %3
  br i1 %18, label %49, label %26

26:                                               ; preds = %25
  %27 = bitcast i8* %20 to i16**
  %28 = load i16*, i16** %27, align 8
  br label %29

29:                                               ; preds = %36, %26
  %30 = phi i64 [ %37, %36 ], [ %13, %26 ]
  %31 = phi i16* [ %39, %36 ], [ %17, %26 ]
  %32 = phi i16* [ %38, %36 ], [ %28, %26 ]
  %33 = load i16, i16* %32, align 2
  %34 = load i16, i16* %31, align 2
  %35 = icmp eq i16 %34, %33
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = add i64 %30, -1
  %38 = getelementptr inbounds i16, i16* %32, i64 1
  %39 = getelementptr inbounds i16, i16* %31, i64 1
  %40 = icmp eq i64 %37, 0
  br i1 %40, label %49, label %29

41:                                               ; preds = %29, %3
  %42 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %43 = bitcast %"struct.std::__1::pair.174"* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %2
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %13
  br i1 %48, label %51, label %62

49:                                               ; preds = %36, %70, %94, %118, %142, %168, %176, %183, %158, %25, %51, %75, %99, %123, %147
  %50 = phi %"struct.std::__1::pair.174"* [ %4, %25 ], [ %42, %51 ], [ %63, %75 ], [ %87, %99 ], [ %111, %123 ], [ %135, %147 ], [ %167, %158 ], [ %5, %176 ], [ %159, %183 ], [ %135, %168 ], [ %111, %142 ], [ %87, %118 ], [ %63, %94 ], [ %42, %70 ], [ %4, %36 ]
  ret %"struct.std::__1::pair.174"* %50

51:                                               ; preds = %41
  br i1 %18, label %49, label %52

52:                                               ; preds = %51
  %53 = bitcast i8* %44 to i16**
  %54 = load i16*, i16** %53, align 8
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ %71, %70 ], [ %13, %52 ]
  %57 = phi i16* [ %73, %70 ], [ %17, %52 ]
  %58 = phi i16* [ %72, %70 ], [ %54, %52 ]
  %59 = load i16, i16* %58, align 2
  %60 = load i16, i16* %57, align 2
  %61 = icmp eq i16 %60, %59
  br i1 %61, label %70, label %62

62:                                               ; preds = %55, %41
  %63 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %64 = bitcast %"struct.std::__1::pair.174"* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %2
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %13
  br i1 %69, label %75, label %86

70:                                               ; preds = %55
  %71 = add i64 %56, -1
  %72 = getelementptr inbounds i16, i16* %58, i64 1
  %73 = getelementptr inbounds i16, i16* %57, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %49, label %55

75:                                               ; preds = %62
  br i1 %18, label %49, label %76

76:                                               ; preds = %75
  %77 = bitcast i8* %65 to i16**
  %78 = load i16*, i16** %77, align 8
  br label %79

79:                                               ; preds = %94, %76
  %80 = phi i64 [ %95, %94 ], [ %13, %76 ]
  %81 = phi i16* [ %97, %94 ], [ %17, %76 ]
  %82 = phi i16* [ %96, %94 ], [ %78, %76 ]
  %83 = load i16, i16* %82, align 2
  %84 = load i16, i16* %81, align 2
  %85 = icmp eq i16 %84, %83
  br i1 %85, label %94, label %86

86:                                               ; preds = %79, %62
  %87 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %88 = bitcast %"struct.std::__1::pair.174"* %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %2
  %90 = getelementptr inbounds i8, i8* %89, i64 8
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %13
  br i1 %93, label %99, label %110

94:                                               ; preds = %79
  %95 = add i64 %80, -1
  %96 = getelementptr inbounds i16, i16* %82, i64 1
  %97 = getelementptr inbounds i16, i16* %81, i64 1
  %98 = icmp eq i64 %95, 0
  br i1 %98, label %49, label %79

99:                                               ; preds = %86
  br i1 %18, label %49, label %100

100:                                              ; preds = %99
  %101 = bitcast i8* %89 to i16**
  %102 = load i16*, i16** %101, align 8
  br label %103

103:                                              ; preds = %118, %100
  %104 = phi i64 [ %119, %118 ], [ %13, %100 ]
  %105 = phi i16* [ %121, %118 ], [ %17, %100 ]
  %106 = phi i16* [ %120, %118 ], [ %102, %100 ]
  %107 = load i16, i16* %106, align 2
  %108 = load i16, i16* %105, align 2
  %109 = icmp eq i16 %108, %107
  br i1 %109, label %118, label %110

110:                                              ; preds = %103, %86
  %111 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 4
  %112 = bitcast %"struct.std::__1::pair.174"* %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %2
  %114 = getelementptr inbounds i8, i8* %113, i64 8
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, %13
  br i1 %117, label %123, label %134

118:                                              ; preds = %103
  %119 = add i64 %104, -1
  %120 = getelementptr inbounds i16, i16* %106, i64 1
  %121 = getelementptr inbounds i16, i16* %105, i64 1
  %122 = icmp eq i64 %119, 0
  br i1 %122, label %49, label %103

123:                                              ; preds = %110
  br i1 %18, label %49, label %124

124:                                              ; preds = %123
  %125 = bitcast i8* %113 to i16**
  %126 = load i16*, i16** %125, align 8
  br label %127

127:                                              ; preds = %142, %124
  %128 = phi i64 [ %143, %142 ], [ %13, %124 ]
  %129 = phi i16* [ %145, %142 ], [ %17, %124 ]
  %130 = phi i16* [ %144, %142 ], [ %126, %124 ]
  %131 = load i16, i16* %130, align 2
  %132 = load i16, i16* %129, align 2
  %133 = icmp eq i16 %132, %131
  br i1 %133, label %142, label %134

134:                                              ; preds = %127, %110
  %135 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 5
  %136 = bitcast %"struct.std::__1::pair.174"* %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 %2
  %138 = getelementptr inbounds i8, i8* %137, i64 8
  %139 = bitcast i8* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, %13
  br i1 %141, label %147, label %158

142:                                              ; preds = %127
  %143 = add i64 %128, -1
  %144 = getelementptr inbounds i16, i16* %130, i64 1
  %145 = getelementptr inbounds i16, i16* %129, i64 1
  %146 = icmp eq i64 %143, 0
  br i1 %146, label %49, label %127

147:                                              ; preds = %134
  br i1 %18, label %49, label %148

148:                                              ; preds = %147
  %149 = bitcast i8* %137 to i16**
  %150 = load i16*, i16** %149, align 8
  br label %151

151:                                              ; preds = %168, %148
  %152 = phi i64 [ %169, %168 ], [ %13, %148 ]
  %153 = phi i16* [ %171, %168 ], [ %17, %148 ]
  %154 = phi i16* [ %170, %168 ], [ %150, %148 ]
  %155 = load i16, i16* %154, align 2
  %156 = load i16, i16* %153, align 2
  %157 = icmp eq i16 %156, %155
  br i1 %157, label %168, label %158

158:                                              ; preds = %151, %134
  %159 = getelementptr inbounds %"class.base::flat_map.171", %"class.base::flat_map.171"* %0, i64 0, i32 0, i32 0, i32 0, i64 6
  %160 = bitcast %"struct.std::__1::pair.174"* %159 to i8*
  %161 = getelementptr inbounds i8, i8* %160, i64 %2
  %162 = getelementptr inbounds i8, i8* %161, i64 8
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = icmp ne i64 %164, %13
  %166 = or i1 %165, %18
  %167 = select i1 %165, %"struct.std::__1::pair.174"* %5, %"struct.std::__1::pair.174"* %159
  br i1 %166, label %49, label %173

168:                                              ; preds = %151
  %169 = add i64 %152, -1
  %170 = getelementptr inbounds i16, i16* %154, i64 1
  %171 = getelementptr inbounds i16, i16* %153, i64 1
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %49, label %151

173:                                              ; preds = %158
  %174 = bitcast i8* %161 to i16**
  %175 = load i16*, i16** %174, align 8
  br label %176

176:                                              ; preds = %183, %173
  %177 = phi i64 [ %184, %183 ], [ %13, %173 ]
  %178 = phi i16* [ %186, %183 ], [ %17, %173 ]
  %179 = phi i16* [ %185, %183 ], [ %175, %173 ]
  %180 = load i16, i16* %179, align 2
  %181 = load i16, i16* %178, align 2
  %182 = icmp eq i16 %181, %180
  br i1 %182, label %183, label %49

183:                                              ; preds = %176
  %184 = add i64 %177, -1
  %185 = getelementptr inbounds i16, i16* %179, i64 1
  %186 = getelementptr inbounds i16, i16* %178, i64 1
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %49, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %13 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  br label %14

14:                                               ; preds = %197, %1
  %15 = phi %"struct.std::__1::pair.174"* [ getelementptr inbounds ({ %"struct.std::__1::array.173" }, { %"struct.std::__1::array.173" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %1 ], [ %198, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %16 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %15, i64 0, i32 1, i32 0
  %17 = load i16*, i16** %16, align 8, !noalias !184
  %18 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %15, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !184
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %14
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %35, label %25

25:                                               ; preds = %23
  %26 = add nuw nsw i64 %19, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to i16*
  store i8* %32, i8** %7, align 8, !alias.scope !184
  %34 = or i64 %27, -9223372036854775808
  store i64 %34, i64* %8, align 8, !alias.scope !184
  store i64 %19, i64* %9, align 8, !alias.scope !184
  br label %38

35:                                               ; preds = %23
  %36 = trunc i64 %19 to i8
  store i8 %36, i8* %11, align 1, !alias.scope !184
  %37 = icmp eq i64 %19, 0
  br i1 %37, label %182, label %38

38:                                               ; preds = %35, %30
  %39 = phi i16* [ %33, %30 ], [ %12, %35 ]
  %40 = icmp ult i64 %19, 16
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  %42 = getelementptr i16, i16* %39, i64 %19
  %43 = getelementptr i16, i16* %17, i64 %19
  %44 = icmp ult i16* %39, %43
  %45 = icmp ult i16* %17, %42
  %46 = and i1 %44, %45
  br i1 %46, label %129, label %47

47:                                               ; preds = %41
  %48 = and i64 %19, -16
  %49 = sub i64 %19, %48
  %50 = getelementptr i16, i16* %17, i64 %48
  %51 = getelementptr i16, i16* %39, i64 %48
  %52 = add i64 %48, -16
  %53 = lshr exact i64 %52, 4
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 3
  %56 = icmp ult i64 %52, 48
  br i1 %56, label %108, label %57

57:                                               ; preds = %47
  %58 = sub nsw i64 %54, %55
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %105, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %106, %59 ]
  %62 = getelementptr i16, i16* %17, i64 %60
  %63 = getelementptr i16, i16* %39, i64 %60
  %64 = bitcast i16* %62 to <8 x i16>*
  %65 = load <8 x i16>, <8 x i16>* %64, align 2, !alias.scope !195
  %66 = getelementptr i16, i16* %62, i64 8
  %67 = bitcast i16* %66 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !195
  %69 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %65, <8 x i16>* %69, align 2, !alias.scope !198, !noalias !195
  %70 = getelementptr i16, i16* %63, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %71, align 2, !alias.scope !198, !noalias !195
  %72 = or i64 %60, 16
  %73 = getelementptr i16, i16* %17, i64 %72
  %74 = getelementptr i16, i16* %39, i64 %72
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !195
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !195
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !198, !noalias !195
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !198, !noalias !195
  %83 = or i64 %60, 32
  %84 = getelementptr i16, i16* %17, i64 %83
  %85 = getelementptr i16, i16* %39, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !195
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !195
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !198, !noalias !195
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !198, !noalias !195
  %94 = or i64 %60, 48
  %95 = getelementptr i16, i16* %17, i64 %94
  %96 = getelementptr i16, i16* %39, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !195
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !195
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !198, !noalias !195
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !198, !noalias !195
  %105 = add i64 %60, 64
  %106 = add i64 %61, -4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %59, !llvm.loop !200

108:                                              ; preds = %59, %47
  %109 = phi i64 [ 0, %47 ], [ %105, %59 ]
  %110 = icmp eq i64 %55, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %124, %111 ], [ %109, %108 ]
  %113 = phi i64 [ %125, %111 ], [ %55, %108 ]
  %114 = getelementptr i16, i16* %17, i64 %112
  %115 = getelementptr i16, i16* %39, i64 %112
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !195
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !195
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !198, !noalias !195
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !198, !noalias !195
  %124 = add i64 %112, 16
  %125 = add i64 %113, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %111, !llvm.loop !201

127:                                              ; preds = %111, %108
  %128 = icmp eq i64 %19, %48
  br i1 %128, label %182, label %129

129:                                              ; preds = %127, %41, %38
  %130 = phi i64 [ %19, %41 ], [ %19, %38 ], [ %49, %127 ]
  %131 = phi i16* [ %17, %41 ], [ %17, %38 ], [ %50, %127 ]
  %132 = phi i16* [ %39, %41 ], [ %39, %38 ], [ %51, %127 ]
  %133 = add i64 %130, -1
  %134 = and i64 %130, 7
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %129, %136
  %137 = phi i64 [ %142, %136 ], [ %130, %129 ]
  %138 = phi i16* [ %144, %136 ], [ %131, %129 ]
  %139 = phi i16* [ %143, %136 ], [ %132, %129 ]
  %140 = phi i64 [ %145, %136 ], [ %134, %129 ]
  %141 = load i16, i16* %138, align 2
  store i16 %141, i16* %139, align 2
  %142 = add i64 %137, -1
  %143 = getelementptr inbounds i16, i16* %139, i64 1
  %144 = getelementptr inbounds i16, i16* %138, i64 1
  %145 = add i64 %140, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136, !llvm.loop !202

147:                                              ; preds = %136, %129
  %148 = phi i64 [ %130, %129 ], [ %142, %136 ]
  %149 = phi i16* [ %131, %129 ], [ %144, %136 ]
  %150 = phi i16* [ %132, %129 ], [ %143, %136 ]
  %151 = icmp ult i64 %133, 7
  br i1 %151, label %182, label %152

152:                                              ; preds = %147, %152
  %153 = phi i64 [ %178, %152 ], [ %148, %147 ]
  %154 = phi i16* [ %180, %152 ], [ %149, %147 ]
  %155 = phi i16* [ %179, %152 ], [ %150, %147 ]
  %156 = load i16, i16* %154, align 2
  store i16 %156, i16* %155, align 2
  %157 = getelementptr inbounds i16, i16* %155, i64 1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %155, i64 2
  %161 = getelementptr inbounds i16, i16* %154, i64 2
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %155, i64 3
  %164 = getelementptr inbounds i16, i16* %154, i64 3
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %155, i64 4
  %167 = getelementptr inbounds i16, i16* %154, i64 4
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %155, i64 5
  %170 = getelementptr inbounds i16, i16* %154, i64 5
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %155, i64 6
  %173 = getelementptr inbounds i16, i16* %154, i64 6
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %155, i64 7
  %176 = getelementptr inbounds i16, i16* %154, i64 7
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %153, -8
  %179 = getelementptr inbounds i16, i16* %155, i64 8
  %180 = getelementptr inbounds i16, i16* %154, i64 8
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %152, !llvm.loop !203

182:                                              ; preds = %147, %152, %127, %35
  %183 = phi i16* [ %12, %35 ], [ %39, %127 ], [ %39, %152 ], [ %39, %147 ]
  %184 = getelementptr inbounds i16, i16* %183, i64 %19
  store i16 0, i16* %184, align 2
  %185 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %186 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %187 = icmp ult %"class.std::__1::basic_string"* %185, %186
  br i1 %187, label %188, label %192

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %6, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #16
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 1
  %191 = ptrtoint %"class.std::__1::basic_string"* %190 to i64
  store i64 %191, i64* %13, align 8
  br label %197

192:                                              ; preds = %182
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #16
  %193 = load i8, i8* %11, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %196) #15
  br label %197

197:                                              ; preds = %195, %192, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %198 = getelementptr inbounds %"struct.std::__1::pair.174", %"struct.std::__1::pair.174"* %15, i64 1
  %199 = icmp eq %"struct.std::__1::pair.174"* %198, getelementptr inbounds ({ %"struct.std::__1::array.173" }, { %"struct.std::__1::array.173" }* @_ZZN2ui8metadata14EnumStringsMapIN3gfx13ElideBehaviorEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %199, label %200, label %14

200:                                              ; preds = %197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINS_17MenuSeparatorTypeEE8ToStringES2_(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi i64 [ 7, %2 ], [ %15, %3 ]
  %5 = phi %"struct.std::__1::pair.185"* [ getelementptr inbounds ({ %"struct.std::__1::array.184" }, { %"struct.std::__1::array.184" }* @_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %2 ], [ %14, %3 ]
  %6 = lshr i64 %4, 1
  %7 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %5, i64 %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  %11 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %7, i64 1
  %12 = xor i64 %6, -1
  %13 = add i64 %4, %12
  %14 = select i1 %10, %"struct.std::__1::pair.185"* %11, %"struct.std::__1::pair.185"* %5
  %15 = select i1 %10, i64 %13, i64 %6
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %3

17:                                               ; preds = %3
  %18 = icmp eq %"struct.std::__1::pair.185"* %14, getelementptr inbounds ({ %"struct.std::__1::array.184" }, { %"struct.std::__1::array.184" }* @_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %18, label %203, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %14, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %14, i64 1
  %24 = select i1 %22, %"struct.std::__1::pair.185"* %14, %"struct.std::__1::pair.185"* %23
  %25 = icmp eq %"struct.std::__1::pair.185"* %14, %24
  %26 = or i1 %18, %25
  br i1 %26, label %203, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %14, i64 0, i32 1, i32 0
  %29 = load i16*, i16** %28, align 8, !noalias !204
  %30 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %14, i64 0, i32 1, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !204
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %27
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %50, label %37

37:                                               ; preds = %35
  %38 = add nuw nsw i64 %31, 8
  %39 = and i64 %38, -8
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

42:                                               ; preds = %37
  %43 = shl i64 %39, 1
  %44 = tail call i8* @_Znwm(i64 %43) #15
  %45 = bitcast i8* %44 to i16*
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %44, i8** %46, align 8, !alias.scope !204
  %47 = or i64 %39, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8, !alias.scope !204
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %49, align 8, !alias.scope !204
  br label %56

50:                                               ; preds = %35
  %51 = trunc i64 %31 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  store i8 %51, i8* %53, align 1, !alias.scope !204
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %55 = icmp eq i64 %31, 0
  br i1 %55, label %200, label %56

56:                                               ; preds = %50, %42
  %57 = phi i16* [ %45, %42 ], [ %54, %50 ]
  %58 = icmp ult i64 %31, 16
  br i1 %58, label %147, label %59

59:                                               ; preds = %56
  %60 = getelementptr i16, i16* %57, i64 %31
  %61 = getelementptr i16, i16* %29, i64 %31
  %62 = icmp ult i16* %57, %61
  %63 = icmp ult i16* %29, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %59
  %66 = and i64 %31, -16
  %67 = sub i64 %31, %66
  %68 = getelementptr i16, i16* %29, i64 %66
  %69 = getelementptr i16, i16* %57, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %29, i64 %78
  %81 = getelementptr i16, i16* %57, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !207
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !207
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !210, !noalias !207
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !210, !noalias !207
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %29, i64 %90
  %92 = getelementptr i16, i16* %57, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !207
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !207
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !210, !noalias !207
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !210, !noalias !207
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %29, i64 %101
  %103 = getelementptr i16, i16* %57, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !207
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !207
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !210, !noalias !207
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !210, !noalias !207
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %29, i64 %112
  %114 = getelementptr i16, i16* %57, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !207
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !207
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !210, !noalias !207
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !210, !noalias !207
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !212

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %29, i64 %130
  %133 = getelementptr i16, i16* %57, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !207
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !207
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !210, !noalias !207
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !210, !noalias !207
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !213

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %31, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %59, %56
  %148 = phi i64 [ %31, %59 ], [ %31, %56 ], [ %67, %145 ]
  %149 = phi i16* [ %29, %59 ], [ %29, %56 ], [ %68, %145 ]
  %150 = phi i16* [ %57, %59 ], [ %57, %56 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !214

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !215

200:                                              ; preds = %165, %170, %145, %50
  %201 = phi i16* [ %54, %50 ], [ %57, %145 ], [ %57, %170 ], [ %57, %165 ]
  %202 = getelementptr inbounds i16, i16* %201, i64 %31
  store i16 0, i16* %202, align 2
  br label %205

203:                                              ; preds = %17, %19
  %204 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #16
  br label %205

205:                                              ; preds = %203, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui8metadata13TypeConverterINS_17MenuSeparatorTypeEE10FromStringERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"struct.std::__1::pair.185"* @_ZN4base6ranges4findIRKNS_8flat_mapIN2ui17MenuSeparatorTypeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm7EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_(%"class.base::flat_map.182"* dereferenceable(168) bitcast ({ %"struct.std::__1::array.184" }* @_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap to %"class.base::flat_map.182"*), %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 8)
  %3 = icmp eq %"struct.std::__1::pair.185"* %2, getelementptr inbounds ({ %"struct.std::__1::array.184" }, { %"struct.std::__1::array.184" }* @_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i64 [ %8, %4 ], [ 0, %1 ]
  %11 = phi i64 [ 1, %4 ], [ 0, %1 ]
  %12 = or i64 %11, %10
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.185"* @_ZN4base6ranges4findIRKNS_8flat_mapIN2ui17MenuSeparatorTypeENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS6_4lessIvEENS6_5arrayINS6_4pairIKS4_S9_EELm7EEEEENS6_12basic_stringIDsS8_NS6_9allocatorIDsEEEEMSF_S9_NS6_26random_access_iterator_tagEEEDaOT_RKT0_T1_(%"class.base::flat_map.182"* dereferenceable(168), %"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 7
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %17 = select i1 %9, i16* %15, i16* %16
  %18 = icmp eq i64 %13, 0
  %19 = bitcast %"class.base::flat_map.182"* %0 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 %2
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %13
  br i1 %24, label %25, label %41

25:                                               ; preds = %3
  br i1 %18, label %49, label %26

26:                                               ; preds = %25
  %27 = bitcast i8* %20 to i16**
  %28 = load i16*, i16** %27, align 8
  br label %29

29:                                               ; preds = %36, %26
  %30 = phi i64 [ %37, %36 ], [ %13, %26 ]
  %31 = phi i16* [ %39, %36 ], [ %17, %26 ]
  %32 = phi i16* [ %38, %36 ], [ %28, %26 ]
  %33 = load i16, i16* %32, align 2
  %34 = load i16, i16* %31, align 2
  %35 = icmp eq i16 %34, %33
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = add i64 %30, -1
  %38 = getelementptr inbounds i16, i16* %32, i64 1
  %39 = getelementptr inbounds i16, i16* %31, i64 1
  %40 = icmp eq i64 %37, 0
  br i1 %40, label %49, label %29

41:                                               ; preds = %29, %3
  %42 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 1
  %43 = bitcast %"struct.std::__1::pair.185"* %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %2
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %13
  br i1 %48, label %51, label %62

49:                                               ; preds = %36, %70, %94, %118, %142, %168, %176, %183, %158, %25, %51, %75, %99, %123, %147
  %50 = phi %"struct.std::__1::pair.185"* [ %4, %25 ], [ %42, %51 ], [ %63, %75 ], [ %87, %99 ], [ %111, %123 ], [ %135, %147 ], [ %167, %158 ], [ %5, %176 ], [ %159, %183 ], [ %135, %168 ], [ %111, %142 ], [ %87, %118 ], [ %63, %94 ], [ %42, %70 ], [ %4, %36 ]
  ret %"struct.std::__1::pair.185"* %50

51:                                               ; preds = %41
  br i1 %18, label %49, label %52

52:                                               ; preds = %51
  %53 = bitcast i8* %44 to i16**
  %54 = load i16*, i16** %53, align 8
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ %71, %70 ], [ %13, %52 ]
  %57 = phi i16* [ %73, %70 ], [ %17, %52 ]
  %58 = phi i16* [ %72, %70 ], [ %54, %52 ]
  %59 = load i16, i16* %58, align 2
  %60 = load i16, i16* %57, align 2
  %61 = icmp eq i16 %60, %59
  br i1 %61, label %70, label %62

62:                                               ; preds = %55, %41
  %63 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 2
  %64 = bitcast %"struct.std::__1::pair.185"* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %2
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %13
  br i1 %69, label %75, label %86

70:                                               ; preds = %55
  %71 = add i64 %56, -1
  %72 = getelementptr inbounds i16, i16* %58, i64 1
  %73 = getelementptr inbounds i16, i16* %57, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %49, label %55

75:                                               ; preds = %62
  br i1 %18, label %49, label %76

76:                                               ; preds = %75
  %77 = bitcast i8* %65 to i16**
  %78 = load i16*, i16** %77, align 8
  br label %79

79:                                               ; preds = %94, %76
  %80 = phi i64 [ %95, %94 ], [ %13, %76 ]
  %81 = phi i16* [ %97, %94 ], [ %17, %76 ]
  %82 = phi i16* [ %96, %94 ], [ %78, %76 ]
  %83 = load i16, i16* %82, align 2
  %84 = load i16, i16* %81, align 2
  %85 = icmp eq i16 %84, %83
  br i1 %85, label %94, label %86

86:                                               ; preds = %79, %62
  %87 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 3
  %88 = bitcast %"struct.std::__1::pair.185"* %87 to i8*
  %89 = getelementptr inbounds i8, i8* %88, i64 %2
  %90 = getelementptr inbounds i8, i8* %89, i64 8
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %13
  br i1 %93, label %99, label %110

94:                                               ; preds = %79
  %95 = add i64 %80, -1
  %96 = getelementptr inbounds i16, i16* %82, i64 1
  %97 = getelementptr inbounds i16, i16* %81, i64 1
  %98 = icmp eq i64 %95, 0
  br i1 %98, label %49, label %79

99:                                               ; preds = %86
  br i1 %18, label %49, label %100

100:                                              ; preds = %99
  %101 = bitcast i8* %89 to i16**
  %102 = load i16*, i16** %101, align 8
  br label %103

103:                                              ; preds = %118, %100
  %104 = phi i64 [ %119, %118 ], [ %13, %100 ]
  %105 = phi i16* [ %121, %118 ], [ %17, %100 ]
  %106 = phi i16* [ %120, %118 ], [ %102, %100 ]
  %107 = load i16, i16* %106, align 2
  %108 = load i16, i16* %105, align 2
  %109 = icmp eq i16 %108, %107
  br i1 %109, label %118, label %110

110:                                              ; preds = %103, %86
  %111 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 4
  %112 = bitcast %"struct.std::__1::pair.185"* %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %2
  %114 = getelementptr inbounds i8, i8* %113, i64 8
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %116, %13
  br i1 %117, label %123, label %134

118:                                              ; preds = %103
  %119 = add i64 %104, -1
  %120 = getelementptr inbounds i16, i16* %106, i64 1
  %121 = getelementptr inbounds i16, i16* %105, i64 1
  %122 = icmp eq i64 %119, 0
  br i1 %122, label %49, label %103

123:                                              ; preds = %110
  br i1 %18, label %49, label %124

124:                                              ; preds = %123
  %125 = bitcast i8* %113 to i16**
  %126 = load i16*, i16** %125, align 8
  br label %127

127:                                              ; preds = %142, %124
  %128 = phi i64 [ %143, %142 ], [ %13, %124 ]
  %129 = phi i16* [ %145, %142 ], [ %17, %124 ]
  %130 = phi i16* [ %144, %142 ], [ %126, %124 ]
  %131 = load i16, i16* %130, align 2
  %132 = load i16, i16* %129, align 2
  %133 = icmp eq i16 %132, %131
  br i1 %133, label %142, label %134

134:                                              ; preds = %127, %110
  %135 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 5
  %136 = bitcast %"struct.std::__1::pair.185"* %135 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 %2
  %138 = getelementptr inbounds i8, i8* %137, i64 8
  %139 = bitcast i8* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, %13
  br i1 %141, label %147, label %158

142:                                              ; preds = %127
  %143 = add i64 %128, -1
  %144 = getelementptr inbounds i16, i16* %130, i64 1
  %145 = getelementptr inbounds i16, i16* %129, i64 1
  %146 = icmp eq i64 %143, 0
  br i1 %146, label %49, label %127

147:                                              ; preds = %134
  br i1 %18, label %49, label %148

148:                                              ; preds = %147
  %149 = bitcast i8* %137 to i16**
  %150 = load i16*, i16** %149, align 8
  br label %151

151:                                              ; preds = %168, %148
  %152 = phi i64 [ %169, %168 ], [ %13, %148 ]
  %153 = phi i16* [ %171, %168 ], [ %17, %148 ]
  %154 = phi i16* [ %170, %168 ], [ %150, %148 ]
  %155 = load i16, i16* %154, align 2
  %156 = load i16, i16* %153, align 2
  %157 = icmp eq i16 %156, %155
  br i1 %157, label %168, label %158

158:                                              ; preds = %151, %134
  %159 = getelementptr inbounds %"class.base::flat_map.182", %"class.base::flat_map.182"* %0, i64 0, i32 0, i32 0, i32 0, i64 6
  %160 = bitcast %"struct.std::__1::pair.185"* %159 to i8*
  %161 = getelementptr inbounds i8, i8* %160, i64 %2
  %162 = getelementptr inbounds i8, i8* %161, i64 8
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = icmp ne i64 %164, %13
  %166 = or i1 %165, %18
  %167 = select i1 %165, %"struct.std::__1::pair.185"* %5, %"struct.std::__1::pair.185"* %159
  br i1 %166, label %49, label %173

168:                                              ; preds = %151
  %169 = add i64 %152, -1
  %170 = getelementptr inbounds i16, i16* %154, i64 1
  %171 = getelementptr inbounds i16, i16* %153, i64 1
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %49, label %151

173:                                              ; preds = %158
  %174 = bitcast i8* %161 to i16**
  %175 = load i16*, i16** %174, align 8
  br label %176

176:                                              ; preds = %183, %173
  %177 = phi i64 [ %184, %183 ], [ %13, %173 ]
  %178 = phi i16* [ %186, %183 ], [ %17, %173 ]
  %179 = phi i16* [ %185, %183 ], [ %175, %173 ]
  %180 = load i16, i16* %179, align 2
  %181 = load i16, i16* %178, align 2
  %182 = icmp eq i16 %181, %180
  br i1 %182, label %183, label %49

183:                                              ; preds = %176
  %184 = add i64 %177, -1
  %185 = getelementptr inbounds i16, i16* %179, i64 1
  %186 = getelementptr inbounds i16, i16* %178, i64 1
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %49, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui8metadata13TypeConverterINS_17MenuSeparatorTypeEE15GetValidStringsEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %13 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  br label %14

14:                                               ; preds = %197, %1
  %15 = phi %"struct.std::__1::pair.185"* [ getelementptr inbounds ({ %"struct.std::__1::array.184" }, { %"struct.std::__1::array.184" }* @_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap, i64 0, i32 0, i32 0, i64 0), %1 ], [ %198, %197 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %16 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %15, i64 0, i32 1, i32 0
  %17 = load i16*, i16** %16, align 8, !noalias !216
  %18 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %15, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !216
  %20 = icmp ugt i64 %19, 9223372036854775791
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #14
  unreachable

23:                                               ; preds = %14
  %24 = icmp ult i64 %19, 11
  br i1 %24, label %35, label %25

25:                                               ; preds = %23
  %26 = add nuw nsw i64 %19, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to i16*
  store i8* %32, i8** %7, align 8, !alias.scope !216
  %34 = or i64 %27, -9223372036854775808
  store i64 %34, i64* %8, align 8, !alias.scope !216
  store i64 %19, i64* %9, align 8, !alias.scope !216
  br label %38

35:                                               ; preds = %23
  %36 = trunc i64 %19 to i8
  store i8 %36, i8* %11, align 1, !alias.scope !216
  %37 = icmp eq i64 %19, 0
  br i1 %37, label %182, label %38

38:                                               ; preds = %35, %30
  %39 = phi i16* [ %33, %30 ], [ %12, %35 ]
  %40 = icmp ult i64 %19, 16
  br i1 %40, label %129, label %41

41:                                               ; preds = %38
  %42 = getelementptr i16, i16* %39, i64 %19
  %43 = getelementptr i16, i16* %17, i64 %19
  %44 = icmp ult i16* %39, %43
  %45 = icmp ult i16* %17, %42
  %46 = and i1 %44, %45
  br i1 %46, label %129, label %47

47:                                               ; preds = %41
  %48 = and i64 %19, -16
  %49 = sub i64 %19, %48
  %50 = getelementptr i16, i16* %17, i64 %48
  %51 = getelementptr i16, i16* %39, i64 %48
  %52 = add i64 %48, -16
  %53 = lshr exact i64 %52, 4
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 3
  %56 = icmp ult i64 %52, 48
  br i1 %56, label %108, label %57

57:                                               ; preds = %47
  %58 = sub nsw i64 %54, %55
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i64 [ 0, %57 ], [ %105, %59 ]
  %61 = phi i64 [ %58, %57 ], [ %106, %59 ]
  %62 = getelementptr i16, i16* %17, i64 %60
  %63 = getelementptr i16, i16* %39, i64 %60
  %64 = bitcast i16* %62 to <8 x i16>*
  %65 = load <8 x i16>, <8 x i16>* %64, align 2, !alias.scope !227
  %66 = getelementptr i16, i16* %62, i64 8
  %67 = bitcast i16* %66 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !227
  %69 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %65, <8 x i16>* %69, align 2, !alias.scope !230, !noalias !227
  %70 = getelementptr i16, i16* %63, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %71, align 2, !alias.scope !230, !noalias !227
  %72 = or i64 %60, 16
  %73 = getelementptr i16, i16* %17, i64 %72
  %74 = getelementptr i16, i16* %39, i64 %72
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !227
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !227
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !230, !noalias !227
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !230, !noalias !227
  %83 = or i64 %60, 32
  %84 = getelementptr i16, i16* %17, i64 %83
  %85 = getelementptr i16, i16* %39, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !227
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !227
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !230, !noalias !227
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !230, !noalias !227
  %94 = or i64 %60, 48
  %95 = getelementptr i16, i16* %17, i64 %94
  %96 = getelementptr i16, i16* %39, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !227
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !227
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !230, !noalias !227
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !230, !noalias !227
  %105 = add i64 %60, 64
  %106 = add i64 %61, -4
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %59, !llvm.loop !232

108:                                              ; preds = %59, %47
  %109 = phi i64 [ 0, %47 ], [ %105, %59 ]
  %110 = icmp eq i64 %55, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %124, %111 ], [ %109, %108 ]
  %113 = phi i64 [ %125, %111 ], [ %55, %108 ]
  %114 = getelementptr i16, i16* %17, i64 %112
  %115 = getelementptr i16, i16* %39, i64 %112
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !227
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !227
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !230, !noalias !227
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !230, !noalias !227
  %124 = add i64 %112, 16
  %125 = add i64 %113, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %111, !llvm.loop !233

127:                                              ; preds = %111, %108
  %128 = icmp eq i64 %19, %48
  br i1 %128, label %182, label %129

129:                                              ; preds = %127, %41, %38
  %130 = phi i64 [ %19, %41 ], [ %19, %38 ], [ %49, %127 ]
  %131 = phi i16* [ %17, %41 ], [ %17, %38 ], [ %50, %127 ]
  %132 = phi i16* [ %39, %41 ], [ %39, %38 ], [ %51, %127 ]
  %133 = add i64 %130, -1
  %134 = and i64 %130, 7
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %129, %136
  %137 = phi i64 [ %142, %136 ], [ %130, %129 ]
  %138 = phi i16* [ %144, %136 ], [ %131, %129 ]
  %139 = phi i16* [ %143, %136 ], [ %132, %129 ]
  %140 = phi i64 [ %145, %136 ], [ %134, %129 ]
  %141 = load i16, i16* %138, align 2
  store i16 %141, i16* %139, align 2
  %142 = add i64 %137, -1
  %143 = getelementptr inbounds i16, i16* %139, i64 1
  %144 = getelementptr inbounds i16, i16* %138, i64 1
  %145 = add i64 %140, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %136, !llvm.loop !234

147:                                              ; preds = %136, %129
  %148 = phi i64 [ %130, %129 ], [ %142, %136 ]
  %149 = phi i16* [ %131, %129 ], [ %144, %136 ]
  %150 = phi i16* [ %132, %129 ], [ %143, %136 ]
  %151 = icmp ult i64 %133, 7
  br i1 %151, label %182, label %152

152:                                              ; preds = %147, %152
  %153 = phi i64 [ %178, %152 ], [ %148, %147 ]
  %154 = phi i16* [ %180, %152 ], [ %149, %147 ]
  %155 = phi i16* [ %179, %152 ], [ %150, %147 ]
  %156 = load i16, i16* %154, align 2
  store i16 %156, i16* %155, align 2
  %157 = getelementptr inbounds i16, i16* %155, i64 1
  %158 = getelementptr inbounds i16, i16* %154, i64 1
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %155, i64 2
  %161 = getelementptr inbounds i16, i16* %154, i64 2
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %155, i64 3
  %164 = getelementptr inbounds i16, i16* %154, i64 3
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %155, i64 4
  %167 = getelementptr inbounds i16, i16* %154, i64 4
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %155, i64 5
  %170 = getelementptr inbounds i16, i16* %154, i64 5
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %155, i64 6
  %173 = getelementptr inbounds i16, i16* %154, i64 6
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %155, i64 7
  %176 = getelementptr inbounds i16, i16* %154, i64 7
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = add i64 %153, -8
  %179 = getelementptr inbounds i16, i16* %155, i64 8
  %180 = getelementptr inbounds i16, i16* %154, i64 8
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %152, !llvm.loop !235

182:                                              ; preds = %147, %152, %127, %35
  %183 = phi i16* [ %12, %35 ], [ %39, %127 ], [ %39, %152 ], [ %39, %147 ]
  %184 = getelementptr inbounds i16, i16* %183, i64 %19
  store i16 0, i16* %184, align 2
  %185 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %186 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %187 = icmp ult %"class.std::__1::basic_string"* %185, %186
  br i1 %187, label %188, label %192

188:                                              ; preds = %182
  %189 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %6, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #16
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %185, i64 1
  %191 = ptrtoint %"class.std::__1::basic_string"* %190 to i64
  store i64 %191, i64* %13, align 8
  br label %197

192:                                              ; preds = %182
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #16
  %193 = load i8, i8* %11, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %196) #15
  br label %197

197:                                              ; preds = %195, %192, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  %198 = getelementptr inbounds %"struct.std::__1::pair.185", %"struct.std::__1::pair.185"* %15, i64 1
  %199 = icmp eq %"struct.std::__1::pair.185"* %198, getelementptr inbounds ({ %"struct.std::__1::array.184" }, { %"struct.std::__1::array.184" }* @_ZZN2ui8metadata14EnumStringsMapINS_17MenuSeparatorTypeEE3GetEvE4kMap, i64 1, i32 0, i32 0, i64 0)
  br i1 %199, label %200, label %14

200:                                              ; preds = %197
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #16
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #15
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !236
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !236
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !239, !noalias !236
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !239, !noalias !236
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !236
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !236
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !239, !noalias !236
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !239, !noalias !236
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !236
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !236
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !239, !noalias !236
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !239, !noalias !236
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !236
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !236
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !239, !noalias !236
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !239, !noalias !236
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !241

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !236
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !236
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !239, !noalias !236
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !239, !noalias !236
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !242

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !243

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !244

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !245

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !246

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !247

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !249
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !249
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !252, !noalias !249
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !252, !noalias !249
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !249
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !249
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !252, !noalias !249
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !252, !noalias !249
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !249
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !249
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !252, !noalias !249
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !252, !noalias !249
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !249
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !249
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !252, !noalias !249
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !252, !noalias !249
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !254

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !249
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !249
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !252, !noalias !249
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !252, !noalias !249
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !255

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !256

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !257

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #15
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6insertEmPKDsm(%"class.std::__1::basic_string"*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %4
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %18) #14
  unreachable

19:                                               ; preds = %14
  br i1 %8, label %20, label %25

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 9223372036854775807
  %24 = add nsw i64 %23, -1
  br label %25

25:                                               ; preds = %19, %20
  %26 = phi i64 [ %24, %20 ], [ 10, %19 ]
  %27 = sub i64 %26, %15
  %28 = icmp ult i64 %27, %3
  br i1 %28, label %658, label %29

29:                                               ; preds = %25
  %30 = icmp eq i64 %3, 0
  br i1 %30, label %661, label %31

31:                                               ; preds = %29
  br i1 %8, label %32, label %35

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  br label %37

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi i16* [ %34, %32 ], [ %36, %35 ]
  %39 = sub i64 %15, %1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %357, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i16, i16* %38, i64 %1
  %43 = icmp ule i16* %42, %2
  %44 = getelementptr inbounds i16, i16* %38, i64 %15
  %45 = icmp ugt i16* %44, %2
  %46 = and i1 %43, %45
  %47 = getelementptr inbounds i16, i16* %2, i64 %3
  %48 = select i1 %46, i16* %47, i16* %2
  %49 = getelementptr inbounds i16, i16* %42, i64 %3
  %50 = icmp slt i64 %3, 0
  br i1 %50, label %51, label %194

51:                                               ; preds = %41
  %52 = icmp ult i64 %39, 16
  br i1 %52, label %141, label %53

53:                                               ; preds = %51
  %54 = add i64 %15, %3
  %55 = getelementptr i16, i16* %38, i64 %54
  %56 = icmp ult i16* %49, %44
  %57 = icmp ult i16* %42, %55
  %58 = and i1 %56, %57
  br i1 %58, label %141, label %59

59:                                               ; preds = %53
  %60 = and i64 %39, -16
  %61 = sub i64 %39, %60
  %62 = getelementptr i16, i16* %42, i64 %60
  %63 = getelementptr i16, i16* %49, i64 %60
  %64 = add i64 %60, -16
  %65 = lshr exact i64 %64, 4
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 48
  br i1 %68, label %120, label %69

69:                                               ; preds = %59
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr i16, i16* %42, i64 %72
  %75 = getelementptr i16, i16* %49, i64 %72
  %76 = bitcast i16* %74 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !258
  %78 = getelementptr i16, i16* %74, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !258
  %81 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %81, align 2, !alias.scope !261, !noalias !258
  %82 = getelementptr i16, i16* %75, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %83, align 2, !alias.scope !261, !noalias !258
  %84 = or i64 %72, 16
  %85 = getelementptr i16, i16* %42, i64 %84
  %86 = getelementptr i16, i16* %49, i64 %84
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !258
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !258
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !261, !noalias !258
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !261, !noalias !258
  %95 = or i64 %72, 32
  %96 = getelementptr i16, i16* %42, i64 %95
  %97 = getelementptr i16, i16* %49, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !258
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !258
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !261, !noalias !258
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !261, !noalias !258
  %106 = or i64 %72, 48
  %107 = getelementptr i16, i16* %42, i64 %106
  %108 = getelementptr i16, i16* %49, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !258
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !258
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !261, !noalias !258
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !261, !noalias !258
  %117 = add i64 %72, 64
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !263

120:                                              ; preds = %71, %59
  %121 = phi i64 [ 0, %59 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr i16, i16* %42, i64 %124
  %127 = getelementptr i16, i16* %49, i64 %124
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !258
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !258
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !261, !noalias !258
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !261, !noalias !258
  %136 = add i64 %124, 16
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !264

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %60
  br i1 %140, label %357, label %141

141:                                              ; preds = %139, %53, %51
  %142 = phi i64 [ %39, %53 ], [ %39, %51 ], [ %61, %139 ]
  %143 = phi i16* [ %42, %53 ], [ %42, %51 ], [ %62, %139 ]
  %144 = phi i16* [ %49, %53 ], [ %49, %51 ], [ %63, %139 ]
  %145 = add i64 %142, -1
  %146 = and i64 %142, 7
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %141, %148
  %149 = phi i64 [ %154, %148 ], [ %142, %141 ]
  %150 = phi i16* [ %156, %148 ], [ %143, %141 ]
  %151 = phi i16* [ %155, %148 ], [ %144, %141 ]
  %152 = phi i64 [ %157, %148 ], [ %146, %141 ]
  %153 = load i16, i16* %150, align 2
  store i16 %153, i16* %151, align 2
  %154 = add i64 %149, -1
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = add i64 %152, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %148, !llvm.loop !265

159:                                              ; preds = %148, %141
  %160 = phi i64 [ %142, %141 ], [ %154, %148 ]
  %161 = phi i16* [ %143, %141 ], [ %156, %148 ]
  %162 = phi i16* [ %144, %141 ], [ %155, %148 ]
  %163 = icmp ult i64 %145, 7
  br i1 %163, label %357, label %164

164:                                              ; preds = %159, %164
  %165 = phi i64 [ %190, %164 ], [ %160, %159 ]
  %166 = phi i16* [ %192, %164 ], [ %161, %159 ]
  %167 = phi i16* [ %191, %164 ], [ %162, %159 ]
  %168 = load i16, i16* %166, align 2
  store i16 %168, i16* %167, align 2
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %167, i64 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %167, i64 3
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %167, i64 4
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %167, i64 5
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %167, i64 6
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %167, i64 7
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %165, -8
  %191 = getelementptr inbounds i16, i16* %167, i64 8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %357, label %164, !llvm.loop !266

194:                                              ; preds = %41
  %195 = getelementptr inbounds i16, i16* %49, i64 %39
  %196 = icmp ult i64 %39, 16
  br i1 %196, label %304, label %197

197:                                              ; preds = %194
  %198 = xor i64 %1, -1
  %199 = add i64 %15, %198
  %200 = add i64 %15, %3
  %201 = add i64 %200, -1
  %202 = getelementptr i16, i16* %38, i64 %201
  %203 = ptrtoint i16* %202 to i64
  %204 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %205 = extractvalue { i64, i1 } %204, 0
  %206 = extractvalue { i64, i1 } %204, 1
  %207 = icmp ugt i64 %205, %203
  %208 = or i1 %207, %206
  %209 = add i64 %15, -1
  %210 = getelementptr i16, i16* %38, i64 %209
  %211 = ptrtoint i16* %210 to i64
  %212 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %199, i64 2)
  %213 = extractvalue { i64, i1 } %212, 0
  %214 = extractvalue { i64, i1 } %212, 1
  %215 = icmp ugt i64 %213, %211
  %216 = or i1 %215, %214
  %217 = or i1 %208, %216
  br i1 %217, label %304, label %218

218:                                              ; preds = %197
  %219 = add i64 %3, %1
  %220 = getelementptr i16, i16* %38, i64 %219
  %221 = icmp ult i16* %220, %44
  %222 = icmp ult i16* %42, %195
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %39, -16
  %226 = sub i64 %39, %225
  %227 = sub i64 0, %225
  %228 = getelementptr i16, i16* %44, i64 %227
  %229 = sub i64 0, %225
  %230 = getelementptr i16, i16* %195, i64 %229
  %231 = add i64 %225, -16
  %232 = lshr exact i64 %231, 4
  %233 = add nuw nsw i64 %232, 1
  %234 = and i64 %233, 1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %280, label %236

236:                                              ; preds = %224
  %237 = sub nuw nsw i64 %233, %234
  %238 = getelementptr i16, i16* %44, i64 -1
  %239 = getelementptr i16, i16* %195, i64 -1
  %240 = getelementptr i16, i16* %44, i64 -1
  %241 = getelementptr i16, i16* %195, i64 -1
  br label %242

242:                                              ; preds = %242, %236
  %243 = phi i64 [ 0, %236 ], [ %277, %242 ]
  %244 = phi i64 [ %237, %236 ], [ %278, %242 ]
  %245 = sub i64 0, %243
  %246 = sub i64 0, %243
  %247 = getelementptr inbounds i16, i16* %239, i64 %246
  %248 = getelementptr inbounds i16, i16* %238, i64 %245
  %249 = getelementptr inbounds i16, i16* %248, i64 -7
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !267
  %252 = getelementptr inbounds i16, i16* %248, i64 -8
  %253 = getelementptr inbounds i16, i16* %252, i64 -7
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !267
  %256 = getelementptr inbounds i16, i16* %247, i64 -7
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %257, align 2, !alias.scope !270, !noalias !267
  %258 = getelementptr inbounds i16, i16* %247, i64 -8
  %259 = getelementptr inbounds i16, i16* %258, i64 -7
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %260, align 2, !alias.scope !270, !noalias !267
  %261 = sub nuw nsw i64 -16, %243
  %262 = sub nuw nsw i64 -16, %243
  %263 = getelementptr inbounds i16, i16* %241, i64 %262
  %264 = getelementptr inbounds i16, i16* %240, i64 %261
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !267
  %268 = getelementptr inbounds i16, i16* %264, i64 -8
  %269 = getelementptr inbounds i16, i16* %268, i64 -7
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !267
  %272 = getelementptr inbounds i16, i16* %263, i64 -7
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %273, align 2, !alias.scope !270, !noalias !267
  %274 = getelementptr inbounds i16, i16* %263, i64 -8
  %275 = getelementptr inbounds i16, i16* %274, i64 -7
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %276, align 2, !alias.scope !270, !noalias !267
  %277 = add i64 %243, 32
  %278 = add i64 %244, -2
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !272

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %277, %242 ]
  %282 = icmp eq i64 %234, 0
  br i1 %282, label %302, label %283

283:                                              ; preds = %280
  %284 = sub i64 0, %281
  %285 = getelementptr i16, i16* %44, i64 -1
  %286 = sub i64 0, %281
  %287 = getelementptr i16, i16* %195, i64 -1
  %288 = getelementptr inbounds i16, i16* %287, i64 %286
  %289 = getelementptr inbounds i16, i16* %285, i64 %284
  %290 = getelementptr inbounds i16, i16* %289, i64 -7
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !267
  %293 = getelementptr inbounds i16, i16* %289, i64 -8
  %294 = getelementptr inbounds i16, i16* %293, i64 -7
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !267
  %297 = getelementptr inbounds i16, i16* %288, i64 -7
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %298, align 2, !alias.scope !270, !noalias !267
  %299 = getelementptr inbounds i16, i16* %288, i64 -8
  %300 = getelementptr inbounds i16, i16* %299, i64 -7
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %301, align 2, !alias.scope !270, !noalias !267
  br label %302

302:                                              ; preds = %280, %283
  %303 = icmp eq i64 %39, %225
  br i1 %303, label %357, label %304

304:                                              ; preds = %302, %218, %197, %194
  %305 = phi i64 [ %39, %218 ], [ %39, %197 ], [ %39, %194 ], [ %226, %302 ]
  %306 = phi i16* [ %44, %218 ], [ %44, %197 ], [ %44, %194 ], [ %228, %302 ]
  %307 = phi i16* [ %195, %218 ], [ %195, %197 ], [ %195, %194 ], [ %230, %302 ]
  %308 = add i64 %305, -1
  %309 = and i64 %305, 7
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %304, %311
  %312 = phi i64 [ %319, %311 ], [ %305, %304 ]
  %313 = phi i16* [ %317, %311 ], [ %306, %304 ]
  %314 = phi i16* [ %316, %311 ], [ %307, %304 ]
  %315 = phi i64 [ %320, %311 ], [ %309, %304 ]
  %316 = getelementptr inbounds i16, i16* %314, i64 -1
  %317 = getelementptr inbounds i16, i16* %313, i64 -1
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = add i64 %312, -1
  %320 = add i64 %315, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %311, !llvm.loop !273

322:                                              ; preds = %311, %304
  %323 = phi i64 [ %305, %304 ], [ %319, %311 ]
  %324 = phi i16* [ %306, %304 ], [ %317, %311 ]
  %325 = phi i16* [ %307, %304 ], [ %316, %311 ]
  %326 = icmp ult i64 %308, 7
  br i1 %326, label %357, label %327

327:                                              ; preds = %322, %327
  %328 = phi i64 [ %355, %327 ], [ %323, %322 ]
  %329 = phi i16* [ %353, %327 ], [ %324, %322 ]
  %330 = phi i16* [ %352, %327 ], [ %325, %322 ]
  %331 = getelementptr inbounds i16, i16* %330, i64 -1
  %332 = getelementptr inbounds i16, i16* %329, i64 -1
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 -2
  %335 = getelementptr inbounds i16, i16* %329, i64 -2
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %330, i64 -3
  %338 = getelementptr inbounds i16, i16* %329, i64 -3
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %330, i64 -4
  %341 = getelementptr inbounds i16, i16* %329, i64 -4
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = getelementptr inbounds i16, i16* %330, i64 -5
  %344 = getelementptr inbounds i16, i16* %329, i64 -5
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %330, i64 -6
  %347 = getelementptr inbounds i16, i16* %329, i64 -6
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %330, i64 -7
  %350 = getelementptr inbounds i16, i16* %329, i64 -7
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %330, i64 -8
  %353 = getelementptr inbounds i16, i16* %329, i64 -8
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = add i64 %328, -8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %327, !llvm.loop !274

357:                                              ; preds = %322, %327, %159, %164, %302, %139, %37
  %358 = phi i16* [ %2, %37 ], [ %48, %139 ], [ %48, %302 ], [ %48, %164 ], [ %48, %159 ], [ %48, %327 ], [ %48, %322 ]
  %359 = getelementptr inbounds i16, i16* %38, i64 %1
  %360 = icmp ult i16* %359, %358
  br i1 %360, label %361, label %505

361:                                              ; preds = %357
  %362 = icmp ult i64 %3, 16
  br i1 %362, label %452, label %363

363:                                              ; preds = %361
  %364 = add i64 %3, %1
  %365 = getelementptr i16, i16* %38, i64 %364
  %366 = getelementptr i16, i16* %358, i64 %3
  %367 = icmp ult i16* %359, %366
  %368 = icmp ult i16* %358, %365
  %369 = and i1 %367, %368
  br i1 %369, label %452, label %370

370:                                              ; preds = %363
  %371 = and i64 %3, -16
  %372 = sub i64 %3, %371
  %373 = getelementptr i16, i16* %358, i64 %371
  %374 = getelementptr i16, i16* %359, i64 %371
  %375 = add i64 %371, -16
  %376 = lshr exact i64 %375, 4
  %377 = add nuw nsw i64 %376, 1
  %378 = and i64 %377, 3
  %379 = icmp ult i64 %375, 48
  br i1 %379, label %431, label %380

380:                                              ; preds = %370
  %381 = sub nsw i64 %377, %378
  br label %382

382:                                              ; preds = %382, %380
  %383 = phi i64 [ 0, %380 ], [ %428, %382 ]
  %384 = phi i64 [ %381, %380 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %358, i64 %383
  %386 = getelementptr i16, i16* %359, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !275
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !275
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !278, !noalias !275
  %393 = getelementptr i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !278, !noalias !275
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %358, i64 %395
  %397 = getelementptr i16, i16* %359, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !275
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !275
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !278, !noalias !275
  %404 = getelementptr i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !278, !noalias !275
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %358, i64 %406
  %408 = getelementptr i16, i16* %359, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !275
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !275
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !278, !noalias !275
  %415 = getelementptr i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !278, !noalias !275
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %358, i64 %417
  %419 = getelementptr i16, i16* %359, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !275
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !275
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !278, !noalias !275
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !278, !noalias !275
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !280

431:                                              ; preds = %382, %370
  %432 = phi i64 [ 0, %370 ], [ %428, %382 ]
  %433 = icmp eq i64 %378, 0
  br i1 %433, label %450, label %434

434:                                              ; preds = %431, %434
  %435 = phi i64 [ %447, %434 ], [ %432, %431 ]
  %436 = phi i64 [ %448, %434 ], [ %378, %431 ]
  %437 = getelementptr i16, i16* %358, i64 %435
  %438 = getelementptr i16, i16* %359, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !275
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2, !alias.scope !275
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2, !alias.scope !278, !noalias !275
  %445 = getelementptr i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2, !alias.scope !278, !noalias !275
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !281

450:                                              ; preds = %434, %431
  %451 = icmp eq i64 %371, %3
  br i1 %451, label %648, label %452

452:                                              ; preds = %450, %363, %361
  %453 = phi i64 [ %3, %363 ], [ %3, %361 ], [ %372, %450 ]
  %454 = phi i16* [ %358, %363 ], [ %358, %361 ], [ %373, %450 ]
  %455 = phi i16* [ %359, %363 ], [ %359, %361 ], [ %374, %450 ]
  %456 = add i64 %453, -1
  %457 = and i64 %453, 7
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %470, label %459

459:                                              ; preds = %452, %459
  %460 = phi i64 [ %465, %459 ], [ %453, %452 ]
  %461 = phi i16* [ %467, %459 ], [ %454, %452 ]
  %462 = phi i16* [ %466, %459 ], [ %455, %452 ]
  %463 = phi i64 [ %468, %459 ], [ %457, %452 ]
  %464 = load i16, i16* %461, align 2
  store i16 %464, i16* %462, align 2
  %465 = add i64 %460, -1
  %466 = getelementptr inbounds i16, i16* %462, i64 1
  %467 = getelementptr inbounds i16, i16* %461, i64 1
  %468 = add i64 %463, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %459, !llvm.loop !282

470:                                              ; preds = %459, %452
  %471 = phi i64 [ %453, %452 ], [ %465, %459 ]
  %472 = phi i16* [ %454, %452 ], [ %467, %459 ]
  %473 = phi i16* [ %455, %452 ], [ %466, %459 ]
  %474 = icmp ult i64 %456, 7
  br i1 %474, label %648, label %475

475:                                              ; preds = %470, %475
  %476 = phi i64 [ %501, %475 ], [ %471, %470 ]
  %477 = phi i16* [ %503, %475 ], [ %472, %470 ]
  %478 = phi i16* [ %502, %475 ], [ %473, %470 ]
  %479 = load i16, i16* %477, align 2
  store i16 %479, i16* %478, align 2
  %480 = getelementptr inbounds i16, i16* %478, i64 1
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 2
  %484 = getelementptr inbounds i16, i16* %477, i64 2
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 3
  %487 = getelementptr inbounds i16, i16* %477, i64 3
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 4
  %490 = getelementptr inbounds i16, i16* %477, i64 4
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 5
  %493 = getelementptr inbounds i16, i16* %477, i64 5
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 6
  %496 = getelementptr inbounds i16, i16* %477, i64 6
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 7
  %499 = getelementptr inbounds i16, i16* %477, i64 7
  %500 = load i16, i16* %499, align 2
  store i16 %500, i16* %498, align 2
  %501 = add i64 %476, -8
  %502 = getelementptr inbounds i16, i16* %478, i64 8
  %503 = getelementptr inbounds i16, i16* %477, i64 8
  %504 = icmp eq i64 %501, 0
  br i1 %504, label %648, label %475, !llvm.loop !283

505:                                              ; preds = %357
  %506 = icmp ult i16* %358, %359
  br i1 %506, label %507, label %648

507:                                              ; preds = %505
  %508 = getelementptr inbounds i16, i16* %358, i64 %3
  %509 = getelementptr inbounds i16, i16* %359, i64 %3
  %510 = icmp ult i64 %3, 16
  br i1 %510, label %595, label %511

511:                                              ; preds = %507
  %512 = icmp ult i16* %359, %508
  %513 = icmp ult i16* %358, %509
  %514 = and i1 %512, %513
  br i1 %514, label %595, label %515

515:                                              ; preds = %511
  %516 = and i64 %3, -16
  %517 = sub i64 %3, %516
  %518 = sub i64 0, %516
  %519 = getelementptr i16, i16* %508, i64 %518
  %520 = sub i64 0, %516
  %521 = getelementptr i16, i16* %509, i64 %520
  %522 = add i64 %516, -16
  %523 = lshr exact i64 %522, 4
  %524 = add nuw nsw i64 %523, 1
  %525 = and i64 %524, 1
  %526 = icmp eq i64 %522, 0
  br i1 %526, label %573, label %527

527:                                              ; preds = %515
  %528 = sub nuw nsw i64 %524, %525
  %529 = getelementptr i16, i16* %508, i64 -1
  %530 = getelementptr i16, i16* %509, i64 -1
  %531 = getelementptr i16, i16* %508, i64 -1
  %532 = getelementptr i16, i16* %509, i64 -1
  br label %533

533:                                              ; preds = %533, %527
  %534 = phi i64 [ 0, %527 ], [ %568, %533 ]
  %535 = phi i64 [ %528, %527 ], [ %569, %533 ]
  %536 = sub i64 0, %534
  %537 = sub i64 0, %534
  %538 = getelementptr inbounds i16, i16* %530, i64 %537
  %539 = getelementptr inbounds i16, i16* %529, i64 %536
  %540 = getelementptr inbounds i16, i16* %539, i64 -7
  %541 = bitcast i16* %540 to <8 x i16>*
  %542 = load <8 x i16>, <8 x i16>* %541, align 2, !alias.scope !284
  %543 = getelementptr inbounds i16, i16* %539, i64 -8
  %544 = getelementptr inbounds i16, i16* %543, i64 -7
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !284
  %547 = getelementptr inbounds i16, i16* %538, i64 -7
  %548 = bitcast i16* %547 to <8 x i16>*
  store <8 x i16> %542, <8 x i16>* %548, align 2, !alias.scope !287, !noalias !284
  %549 = getelementptr inbounds i16, i16* %538, i64 -8
  %550 = getelementptr inbounds i16, i16* %549, i64 -7
  %551 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %551, align 2, !alias.scope !287, !noalias !284
  %552 = sub nuw nsw i64 -16, %534
  %553 = sub nuw nsw i64 -16, %534
  %554 = getelementptr inbounds i16, i16* %532, i64 %553
  %555 = getelementptr inbounds i16, i16* %531, i64 %552
  %556 = getelementptr inbounds i16, i16* %555, i64 -7
  %557 = bitcast i16* %556 to <8 x i16>*
  %558 = load <8 x i16>, <8 x i16>* %557, align 2, !alias.scope !284
  %559 = getelementptr inbounds i16, i16* %555, i64 -8
  %560 = getelementptr inbounds i16, i16* %559, i64 -7
  %561 = bitcast i16* %560 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !284
  %563 = getelementptr inbounds i16, i16* %554, i64 -7
  %564 = bitcast i16* %563 to <8 x i16>*
  store <8 x i16> %558, <8 x i16>* %564, align 2, !alias.scope !287, !noalias !284
  %565 = getelementptr inbounds i16, i16* %554, i64 -8
  %566 = getelementptr inbounds i16, i16* %565, i64 -7
  %567 = bitcast i16* %566 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %567, align 2, !alias.scope !287, !noalias !284
  %568 = add i64 %534, 32
  %569 = add i64 %535, -2
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %533, !llvm.loop !289

571:                                              ; preds = %533
  %572 = sub nuw nsw i64 -32, %534
  br label %573

573:                                              ; preds = %571, %515
  %574 = phi i64 [ 0, %515 ], [ %572, %571 ]
  %575 = icmp eq i64 %525, 0
  br i1 %575, label %593, label %576

576:                                              ; preds = %573
  %577 = getelementptr i16, i16* %508, i64 -1
  %578 = getelementptr i16, i16* %509, i64 -1
  %579 = getelementptr inbounds i16, i16* %578, i64 %574
  %580 = getelementptr inbounds i16, i16* %577, i64 %574
  %581 = getelementptr inbounds i16, i16* %580, i64 -7
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !284
  %584 = getelementptr inbounds i16, i16* %580, i64 -8
  %585 = getelementptr inbounds i16, i16* %584, i64 -7
  %586 = bitcast i16* %585 to <8 x i16>*
  %587 = load <8 x i16>, <8 x i16>* %586, align 2, !alias.scope !284
  %588 = getelementptr inbounds i16, i16* %579, i64 -7
  %589 = bitcast i16* %588 to <8 x i16>*
  store <8 x i16> %583, <8 x i16>* %589, align 2, !alias.scope !287, !noalias !284
  %590 = getelementptr inbounds i16, i16* %579, i64 -8
  %591 = getelementptr inbounds i16, i16* %590, i64 -7
  %592 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %587, <8 x i16>* %592, align 2, !alias.scope !287, !noalias !284
  br label %593

593:                                              ; preds = %573, %576
  %594 = icmp eq i64 %516, %3
  br i1 %594, label %648, label %595

595:                                              ; preds = %593, %511, %507
  %596 = phi i64 [ %3, %511 ], [ %3, %507 ], [ %517, %593 ]
  %597 = phi i16* [ %508, %511 ], [ %508, %507 ], [ %519, %593 ]
  %598 = phi i16* [ %509, %511 ], [ %509, %507 ], [ %521, %593 ]
  %599 = add i64 %596, -1
  %600 = and i64 %596, 7
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %595, %602
  %603 = phi i64 [ %610, %602 ], [ %596, %595 ]
  %604 = phi i16* [ %608, %602 ], [ %597, %595 ]
  %605 = phi i16* [ %607, %602 ], [ %598, %595 ]
  %606 = phi i64 [ %611, %602 ], [ %600, %595 ]
  %607 = getelementptr inbounds i16, i16* %605, i64 -1
  %608 = getelementptr inbounds i16, i16* %604, i64 -1
  %609 = load i16, i16* %608, align 2
  store i16 %609, i16* %607, align 2
  %610 = add i64 %603, -1
  %611 = add i64 %606, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %602, !llvm.loop !290

613:                                              ; preds = %602, %595
  %614 = phi i64 [ %596, %595 ], [ %610, %602 ]
  %615 = phi i16* [ %597, %595 ], [ %608, %602 ]
  %616 = phi i16* [ %598, %595 ], [ %607, %602 ]
  %617 = icmp ult i64 %599, 7
  br i1 %617, label %648, label %618

618:                                              ; preds = %613, %618
  %619 = phi i64 [ %646, %618 ], [ %614, %613 ]
  %620 = phi i16* [ %644, %618 ], [ %615, %613 ]
  %621 = phi i16* [ %643, %618 ], [ %616, %613 ]
  %622 = getelementptr inbounds i16, i16* %621, i64 -1
  %623 = getelementptr inbounds i16, i16* %620, i64 -1
  %624 = load i16, i16* %623, align 2
  store i16 %624, i16* %622, align 2
  %625 = getelementptr inbounds i16, i16* %621, i64 -2
  %626 = getelementptr inbounds i16, i16* %620, i64 -2
  %627 = load i16, i16* %626, align 2
  store i16 %627, i16* %625, align 2
  %628 = getelementptr inbounds i16, i16* %621, i64 -3
  %629 = getelementptr inbounds i16, i16* %620, i64 -3
  %630 = load i16, i16* %629, align 2
  store i16 %630, i16* %628, align 2
  %631 = getelementptr inbounds i16, i16* %621, i64 -4
  %632 = getelementptr inbounds i16, i16* %620, i64 -4
  %633 = load i16, i16* %632, align 2
  store i16 %633, i16* %631, align 2
  %634 = getelementptr inbounds i16, i16* %621, i64 -5
  %635 = getelementptr inbounds i16, i16* %620, i64 -5
  %636 = load i16, i16* %635, align 2
  store i16 %636, i16* %634, align 2
  %637 = getelementptr inbounds i16, i16* %621, i64 -6
  %638 = getelementptr inbounds i16, i16* %620, i64 -6
  %639 = load i16, i16* %638, align 2
  store i16 %639, i16* %637, align 2
  %640 = getelementptr inbounds i16, i16* %621, i64 -7
  %641 = getelementptr inbounds i16, i16* %620, i64 -7
  %642 = load i16, i16* %641, align 2
  store i16 %642, i16* %640, align 2
  %643 = getelementptr inbounds i16, i16* %621, i64 -8
  %644 = getelementptr inbounds i16, i16* %620, i64 -8
  %645 = load i16, i16* %644, align 2
  store i16 %645, i16* %643, align 2
  %646 = add i64 %619, -8
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %648, label %618, !llvm.loop !291

648:                                              ; preds = %613, %618, %470, %475, %593, %450, %505
  %649 = add i64 %15, %3
  %650 = load i8, i8* %6, align 1
  %651 = icmp slt i8 %650, 0
  br i1 %651, label %652, label %654

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %649, i64* %653, align 8
  br label %656

654:                                              ; preds = %648
  %655 = trunc i64 %649 to i8
  store i8 %655, i8* %6, align 1
  br label %656

656:                                              ; preds = %652, %654
  %657 = getelementptr inbounds i16, i16* %38, i64 %649
  store i16 0, i16* %657, align 2
  br label %661

658:                                              ; preds = %25
  %659 = add i64 %15, %3
  %660 = sub i64 %659, %26
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %26, i64 %660, i64 %15, i64 %1, i64 0, i64 %3, i16* %2)
  br label %661

661:                                              ; preds = %29, %656, %658
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !292
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !292
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !295, !noalias !292
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !295, !noalias !292
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !292
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !292
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !295, !noalias !292
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !295, !noalias !292
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !292
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !292
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !295, !noalias !292
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !295, !noalias !292
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !292
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !292
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !295, !noalias !292
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !295, !noalias !292
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !297

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !292
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !292
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !295, !noalias !292
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !295, !noalias !292
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !298

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !299

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !300

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #15
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !301
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !301
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !304, !noalias !301
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !304, !noalias !301
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !301
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !301
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !304, !noalias !301
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !304, !noalias !301
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !301
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !301
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !304, !noalias !301
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !304, !noalias !301
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !301
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !301
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !304, !noalias !301
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !304, !noalias !301
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !306

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !301
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !301
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !304, !noalias !301
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !304, !noalias !301
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !307

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !308

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !309

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !310
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !310
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !313, !noalias !310
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !313, !noalias !310
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !310
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !310
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !313, !noalias !310
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !313, !noalias !310
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !310
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !310
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !313, !noalias !310
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !313, !noalias !310
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !310
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !310
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !313, !noalias !310
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !313, !noalias !310
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !315

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !310
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !310
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !313, !noalias !310
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !313, !noalias !310
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !316

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !317

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !318

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #16
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS1_11__wrap_iterIPKDsEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %3, %5
  %7 = ptrtoint i16* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i16* [ %17, %16 ], [ %3, %8 ]
  %15 = load i16, i16* %14, align 2
  switch i16 %15, label %22 [
    i16 32, label %16
    i16 13, label %16
    i16 10, label %16
    i16 9, label %16
    i16 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i16, i16* %14, i64 1
  store i16* %17, i16** %2, align 8
  %18 = icmp eq i16* %17, %5
  %19 = ptrtoint i16* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i16* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %28 = bitcast %"class.std::__1::__wrap_iter.142"* %27 to i64*
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %29 to i16*
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %36 to i16*
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i8, i8* %26, align 4, !range !98
  %43 = icmp eq i8 %42, 0
  br label %44

44:                                               ; preds = %157, %22
  %45 = phi i64 [ %23, %22 ], [ %162, %157 ]
  %46 = phi i1 [ %43, %22 ], [ false, %157 ]
  %47 = phi i16 [ 0, %22 ], [ %152, %157 ]
  %48 = phi i8 [ 0, %22 ], [ %153, %157 ]
  %49 = phi i8 [ 0, %22 ], [ %154, %157 ]
  br i1 %46, label %150, label %50

50:                                               ; preds = %44
  store i8 0, i8* %26, align 4
  store i64 %45, i64* %28, align 8
  %51 = inttoptr i64 %45 to i16*
  %52 = icmp eq i16* %5, %51
  br i1 %52, label %139, label %53

53:                                               ; preds = %50, %130
  %54 = phi i64 [ %136, %130 ], [ %45, %50 ]
  %55 = phi i16* [ %134, %130 ], [ %51, %50 ]
  %56 = phi i8 [ %133, %130 ], [ %49, %50 ]
  %57 = phi i8 [ %132, %130 ], [ %48, %50 ]
  %58 = phi i16 [ %131, %130 ], [ %47, %50 ]
  %59 = load i16, i16* %55, align 2
  %60 = icmp eq i8 %56, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %53
  %62 = icmp eq i8 %57, 0
  br i1 %62, label %63, label %130

63:                                               ; preds = %61
  %64 = icmp eq i16 %59, 92
  br i1 %64, label %130, label %65

65:                                               ; preds = %63
  %66 = icmp eq i16 %58, %59
  %67 = select i1 %66, i8 0, i8 %56
  br label %130

68:                                               ; preds = %53
  %69 = load i8, i8* %31, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i16*, i16** %33, align 8
  %73 = load i64, i64* %34, align 8
  br label %76

74:                                               ; preds = %68
  %75 = zext i8 %69 to i64
  br label %76

76:                                               ; preds = %74, %71
  %77 = phi i16* [ %72, %71 ], [ %32, %74 ]
  %78 = phi i64 [ %73, %71 ], [ %75, %74 ]
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %76, %85
  %81 = phi i64 [ %87, %85 ], [ %78, %76 ]
  %82 = phi i16* [ %86, %85 ], [ %77, %76 ]
  %83 = load i16, i16* %82, align 2
  %84 = icmp eq i16 %83, %59
  br i1 %84, label %89, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds i16, i16* %82, i64 1
  %87 = add i64 %81, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %96, label %80

89:                                               ; preds = %80
  %90 = icmp ne i16* %82, null
  %91 = ptrtoint i16* %82 to i64
  %92 = ptrtoint i16* %77 to i64
  %93 = sub i64 %91, %92
  %94 = icmp ne i64 %93, -2
  %95 = and i1 %90, %94
  br i1 %95, label %139, label %96

96:                                               ; preds = %85, %89, %76
  %97 = load i32, i32* %35, align 8
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  switch i16 %59, label %100 [
    i16 32, label %139
    i16 13, label %139
    i16 10, label %139
    i16 9, label %139
    i16 12, label %139
  ]

100:                                              ; preds = %99, %96
  %101 = load i8, i8* %38, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load i16*, i16** %40, align 8
  %105 = load i64, i64* %41, align 8
  br label %108

106:                                              ; preds = %100
  %107 = zext i8 %101 to i64
  br label %108

108:                                              ; preds = %106, %103
  %109 = phi i16* [ %104, %103 ], [ %39, %106 ]
  %110 = phi i64 [ %105, %103 ], [ %107, %106 ]
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %130, label %112

112:                                              ; preds = %108, %117
  %113 = phi i64 [ %119, %117 ], [ %110, %108 ]
  %114 = phi i16* [ %118, %117 ], [ %109, %108 ]
  %115 = load i16, i16* %114, align 2
  %116 = icmp eq i16 %115, %59
  br i1 %116, label %121, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds i16, i16* %114, i64 1
  %119 = add i64 %113, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %112

121:                                              ; preds = %117, %112
  %122 = phi i16* [ null, %117 ], [ %114, %112 ]
  %123 = icmp ne i16* %122, null
  %124 = ptrtoint i16* %122 to i64
  %125 = ptrtoint i16* %109 to i64
  %126 = sub i64 %124, %125
  %127 = icmp ne i64 %126, -2
  %128 = and i1 %123, %127
  %129 = zext i1 %128 to i8
  br label %130

130:                                              ; preds = %65, %61, %63, %121, %108
  %131 = phi i16 [ %59, %108 ], [ %59, %121 ], [ %58, %63 ], [ %58, %61 ], [ %58, %65 ]
  %132 = phi i8 [ %57, %108 ], [ %57, %121 ], [ 1, %63 ], [ 0, %61 ], [ 0, %65 ]
  %133 = phi i8 [ 0, %108 ], [ %129, %121 ], [ %56, %63 ], [ %56, %61 ], [ %67, %65 ]
  %134 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %134, i16** %25, align 8
  %135 = icmp eq i16* %134, %5
  %136 = ptrtoint i16* %134 to i64
  br i1 %135, label %137, label %53

137:                                              ; preds = %130
  %138 = ptrtoint i16* %134 to i64
  br label %139

139:                                              ; preds = %99, %99, %99, %99, %99, %89, %137, %50
  %140 = phi i64 [ %45, %50 ], [ %138, %137 ], [ %54, %89 ], [ %54, %99 ], [ %54, %99 ], [ %54, %99 ], [ %54, %99 ], [ %54, %99 ]
  %141 = phi i16 [ %47, %50 ], [ %131, %137 ], [ %58, %89 ], [ %58, %99 ], [ %58, %99 ], [ %58, %99 ], [ %58, %99 ], [ %58, %99 ]
  %142 = phi i8 [ %48, %50 ], [ %132, %137 ], [ %57, %89 ], [ %57, %99 ], [ %57, %99 ], [ %57, %99 ], [ %57, %99 ], [ %57, %99 ]
  %143 = phi i8 [ %49, %50 ], [ %133, %137 ], [ 0, %89 ], [ 0, %99 ], [ 0, %99 ], [ 0, %99 ], [ 0, %99 ], [ 0, %99 ]
  %144 = phi i16* [ %5, %50 ], [ %5, %137 ], [ %55, %89 ], [ %55, %99 ], [ %55, %99 ], [ %55, %99 ], [ %55, %99 ], [ %55, %99 ]
  %145 = icmp eq i16* %144, %51
  br i1 %145, label %146, label %163

146:                                              ; preds = %139
  %147 = load i32, i32* %24, align 8
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %163

150:                                              ; preds = %146, %44
  %151 = phi i64 [ %45, %44 ], [ %140, %146 ]
  %152 = phi i16 [ %47, %44 ], [ %141, %146 ]
  %153 = phi i8 [ %48, %44 ], [ %142, %146 ]
  %154 = phi i8 [ %49, %44 ], [ %143, %146 ]
  store i8 1, i8* %26, align 4
  store i64 %151, i64* %28, align 8
  %155 = inttoptr i64 %151 to i16*
  %156 = icmp eq i16* %5, %155
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds i16, i16* %155, i64 1
  store i16* %158, i16** %25, align 8
  %159 = load i32, i32* %24, align 8
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = ptrtoint i16* %158 to i64
  br i1 %161, label %44, label %163

163:                                              ; preds = %139, %157, %150, %146
  %164 = phi i1 [ true, %146 ], [ true, %139 ], [ false, %150 ], [ true, %157 ]
  ret i1 %164
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #13

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!"branch_weights", i32 1, i32 1048575}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !8}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !10}
!22 = distinct !{!22, !8}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !8}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !8}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !8}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !8}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !8}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!88 = distinct !{!88, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !8}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !8}
!98 = !{i8 0, i8 2}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !8}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !8}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!110 = distinct !{!110, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !8}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !8}
!120 = !{!121, !123, !125, !127, !129}
!121 = distinct !{!121, !122, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!122 = distinct !{!122, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!123 = distinct !{!123, !124, !"_ZZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEvENK3$_0clINSt3__14pairIKS3_N4base16BasicStringPieceIDsNS7_11char_traitsIDsEEEEEEEEDaRKT_: argument 0"}
!124 = distinct !{!124, !"_ZZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEvENK3$_0clINSt3__14pairIKS3_N4base16BasicStringPieceIDsNS7_11char_traitsIDsEEEEEEEEDaRKT_"}
!125 = distinct !{!125, !126, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEvE3$_0JRKNSt3__14pairIKS6_NS_16BasicStringPieceIDsNSA_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!126 = distinct !{!126, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEvE3$_0JRKNSt3__14pairIKS6_NS_16BasicStringPieceIDsNSA_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!127 = distinct !{!127, !128, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEvE3$_0JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!128 = distinct !{!128, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterIN3gfx19HorizontalAlignmentEE15GetValidStringsEvE3$_0JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!129 = distinct !{!129, !130, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN3gfx19HorizontalAlignmentENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZN2ui8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_0NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SV_T0_T1_T2_ENKUlTyOSV_E_clIRSC_EEDaSZ_: argument 0"}
!130 = distinct !{!130, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN3gfx19HorizontalAlignmentENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZN2ui8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_0NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SV_T0_T1_T2_ENKUlTyOSV_E_clIRSC_EEDaSZ_"}
!131 = !{!132}
!132 = distinct !{!132, !133}
!133 = distinct !{!133, !"LVerDomain"}
!134 = !{!135}
!135 = distinct !{!135, !133}
!136 = distinct !{!136, !8}
!137 = distinct !{!137, !10}
!138 = distinct !{!138, !10}
!139 = distinct !{!139, !8}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!142 = distinct !{!142, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !8}
!149 = distinct !{!149, !10}
!150 = distinct !{!150, !10}
!151 = distinct !{!151, !8}
!152 = !{!153, !155, !157, !159, !161}
!153 = distinct !{!153, !154, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!154 = distinct !{!154, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!155 = distinct !{!155, !156, !"_ZZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEvENK3$_1clINSt3__14pairIKS3_N4base16BasicStringPieceIDsNS7_11char_traitsIDsEEEEEEEEDaRKT_: argument 0"}
!156 = distinct !{!156, !"_ZZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEvENK3$_1clINSt3__14pairIKS3_N4base16BasicStringPieceIDsNS7_11char_traitsIDsEEEEEEEEDaRKT_"}
!157 = distinct !{!157, !158, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEvE3$_1JRKNSt3__14pairIKS6_NS_16BasicStringPieceIDsNSA_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!158 = distinct !{!158, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEvE3$_1JRKNSt3__14pairIKS6_NS_16BasicStringPieceIDsNSA_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!159 = distinct !{!159, !160, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEvE3$_1JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!160 = distinct !{!160, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterIN3gfx17VerticalAlignmentEE15GetValidStringsEvE3$_1JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!161 = distinct !{!161, !162, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN3gfx17VerticalAlignmentENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZN2ui8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_1NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SV_T0_T1_T2_ENKUlTyOSV_E_clIRSC_EEDaSZ_: argument 0"}
!162 = distinct !{!162, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN3gfx17VerticalAlignmentENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZN2ui8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_1NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SV_T0_T1_T2_ENKUlTyOSV_E_clIRSC_EEDaSZ_"}
!163 = !{!164}
!164 = distinct !{!164, !165}
!165 = distinct !{!165, !"LVerDomain"}
!166 = !{!167}
!167 = distinct !{!167, !165}
!168 = distinct !{!168, !8}
!169 = distinct !{!169, !10}
!170 = distinct !{!170, !10}
!171 = distinct !{!171, !8}
!172 = !{!173}
!173 = distinct !{!173, !174, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!174 = distinct !{!174, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!175 = !{!176}
!176 = distinct !{!176, !177}
!177 = distinct !{!177, !"LVerDomain"}
!178 = !{!179}
!179 = distinct !{!179, !177}
!180 = distinct !{!180, !8}
!181 = distinct !{!181, !10}
!182 = distinct !{!182, !10}
!183 = distinct !{!183, !8}
!184 = !{!185, !187, !189, !191, !193}
!185 = distinct !{!185, !186, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!186 = distinct !{!186, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!187 = distinct !{!187, !188, !"_ZZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEvENK3$_2clINSt3__14pairIKS3_N4base16BasicStringPieceIDsNS7_11char_traitsIDsEEEEEEEEDaRKT_: argument 0"}
!188 = distinct !{!188, !"_ZZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEvENK3$_2clINSt3__14pairIKS3_N4base16BasicStringPieceIDsNS7_11char_traitsIDsEEEEEEEEDaRKT_"}
!189 = distinct !{!189, !190, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEvE3$_2JRKNSt3__14pairIKS6_NS_16BasicStringPieceIDsNSA_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!190 = distinct !{!190, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEvE3$_2JRKNSt3__14pairIKS6_NS_16BasicStringPieceIDsNSA_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!191 = distinct !{!191, !192, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEvE3$_2JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!192 = distinct !{!192, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterIN3gfx13ElideBehaviorEE15GetValidStringsEvE3$_2JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!193 = distinct !{!193, !194, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN3gfx13ElideBehaviorENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZN2ui8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_2NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SV_T0_T1_T2_ENKUlTyOSV_E_clIRSC_EEDaSZ_: argument 0"}
!194 = distinct !{!194, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN3gfx13ElideBehaviorENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZN2ui8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_2NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SV_T0_T1_T2_ENKUlTyOSV_E_clIRSC_EEDaSZ_"}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !8}
!201 = distinct !{!201, !10}
!202 = distinct !{!202, !10}
!203 = distinct !{!203, !8}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!206 = distinct !{!206, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!207 = !{!208}
!208 = distinct !{!208, !209}
!209 = distinct !{!209, !"LVerDomain"}
!210 = !{!211}
!211 = distinct !{!211, !209}
!212 = distinct !{!212, !8}
!213 = distinct !{!213, !10}
!214 = distinct !{!214, !10}
!215 = distinct !{!215, !8}
!216 = !{!217, !219, !221, !223, !225}
!217 = distinct !{!217, !218, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!218 = distinct !{!218, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!219 = distinct !{!219, !220, !"_ZZN2ui8metadata13TypeConverterINS_17MenuSeparatorTypeEE15GetValidStringsEvENK3$_3clINSt3__14pairIKS2_N4base16BasicStringPieceIDsNS6_11char_traitsIDsEEEEEEEEDaRKT_: argument 0"}
!220 = distinct !{!220, !"_ZZN2ui8metadata13TypeConverterINS_17MenuSeparatorTypeEE15GetValidStringsEvENK3$_3clINSt3__14pairIKS2_N4base16BasicStringPieceIDsNS6_11char_traitsIDsEEEEEEEEDaRKT_"}
!221 = distinct !{!221, !222, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterINS2_17MenuSeparatorTypeEE15GetValidStringsEvE3$_3JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!222 = distinct !{!222, !"_ZN4base8internal10InvokeImplIRZN2ui8metadata13TypeConverterINS2_17MenuSeparatorTypeEE15GetValidStringsEvE3$_3JRKNSt3__14pairIKS5_NS_16BasicStringPieceIDsNS9_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!223 = distinct !{!223, !224, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterINS1_17MenuSeparatorTypeEE15GetValidStringsEvE3$_3JRKNSt3__14pairIKS4_NS_16BasicStringPieceIDsNS8_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_: argument 0"}
!224 = distinct !{!224, !"_ZN4base6invokeIRZN2ui8metadata13TypeConverterINS1_17MenuSeparatorTypeEE15GetValidStringsEvE3$_3JRKNSt3__14pairIKS4_NS_16BasicStringPieceIDsNS8_11char_traitsIDsEEEEEEEEEDcOT_DpOT0_"}
!225 = distinct !{!225, !226, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN2ui17MenuSeparatorTypeENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZNS4_8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_3NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SU_T0_T1_T2_ENKUlTyOSU_E_clIRSC_EEDaSY_: argument 0"}
!226 = distinct !{!226, !"_ZZN4base6ranges9transformIPKNSt3__14pairIKN2ui17MenuSeparatorTypeENS_16BasicStringPieceIDsNS2_11char_traitsIDsEEEEEENS2_20back_insert_iteratorINS2_6vectorINS2_12basic_stringIDsS9_NS2_9allocatorIDsEEEENSH_ISJ_EEEEEEZNS4_8metadata13TypeConverterIS5_E15GetValidStringsEvE3$_3NS_8identityENS2_26random_access_iterator_tagENS2_19output_iterator_tagESJ_EEDaT_SU_T0_T1_T2_ENKUlTyOSU_E_clIRSC_EEDaSY_"}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = distinct !{!232, !8}
!233 = distinct !{!233, !10}
!234 = distinct !{!234, !10}
!235 = distinct !{!235, !8}
!236 = !{!237}
!237 = distinct !{!237, !238}
!238 = distinct !{!238, !"LVerDomain"}
!239 = !{!240}
!240 = distinct !{!240, !238}
!241 = distinct !{!241, !8}
!242 = distinct !{!242, !10}
!243 = distinct !{!243, !10}
!244 = distinct !{!244, !8}
!245 = distinct !{!245, !8}
!246 = distinct !{!246, !10}
!247 = distinct !{!247, !248, !8}
!248 = !{!"llvm.loop.unroll.runtime.disable"}
!249 = !{!250}
!250 = distinct !{!250, !251}
!251 = distinct !{!251, !"LVerDomain"}
!252 = !{!253}
!253 = distinct !{!253, !251}
!254 = distinct !{!254, !8}
!255 = distinct !{!255, !10}
!256 = distinct !{!256, !10}
!257 = distinct !{!257, !8}
!258 = !{!259}
!259 = distinct !{!259, !260}
!260 = distinct !{!260, !"LVerDomain"}
!261 = !{!262}
!262 = distinct !{!262, !260}
!263 = distinct !{!263, !8}
!264 = distinct !{!264, !10}
!265 = distinct !{!265, !10}
!266 = distinct !{!266, !8}
!267 = !{!268}
!268 = distinct !{!268, !269}
!269 = distinct !{!269, !"LVerDomain"}
!270 = !{!271}
!271 = distinct !{!271, !269}
!272 = distinct !{!272, !8}
!273 = distinct !{!273, !10}
!274 = distinct !{!274, !8}
!275 = !{!276}
!276 = distinct !{!276, !277}
!277 = distinct !{!277, !"LVerDomain"}
!278 = !{!279}
!279 = distinct !{!279, !277}
!280 = distinct !{!280, !8}
!281 = distinct !{!281, !10}
!282 = distinct !{!282, !10}
!283 = distinct !{!283, !8}
!284 = !{!285}
!285 = distinct !{!285, !286}
!286 = distinct !{!286, !"LVerDomain"}
!287 = !{!288}
!288 = distinct !{!288, !286}
!289 = distinct !{!289, !8}
!290 = distinct !{!290, !10}
!291 = distinct !{!291, !8}
!292 = !{!293}
!293 = distinct !{!293, !294}
!294 = distinct !{!294, !"LVerDomain"}
!295 = !{!296}
!296 = distinct !{!296, !294}
!297 = distinct !{!297, !8}
!298 = distinct !{!298, !10}
!299 = distinct !{!299, !10}
!300 = distinct !{!300, !8}
!301 = !{!302}
!302 = distinct !{!302, !303}
!303 = distinct !{!303, !"LVerDomain"}
!304 = !{!305}
!305 = distinct !{!305, !303}
!306 = distinct !{!306, !8}
!307 = distinct !{!307, !10}
!308 = distinct !{!308, !10}
!309 = distinct !{!309, !8}
!310 = !{!311}
!311 = distinct !{!311, !312}
!312 = distinct !{!312, !"LVerDomain"}
!313 = !{!314}
!314 = distinct !{!314, !312}
!315 = distinct !{!315, !8}
!316 = distinct !{!316, !10}
!317 = distinct !{!317, !10}
!318 = distinct !{!318, !8}
