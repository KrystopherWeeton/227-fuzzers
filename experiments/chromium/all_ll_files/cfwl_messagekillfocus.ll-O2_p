; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_messagekillfocus.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_messagekillfocus.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_MessageKillFocus = type { %class.CFWL_Message, %"class.fxcrt::UnownedPtr" }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type opaque

@_ZTV21CFWL_MessageKillFocus = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_MessageKillFocus*)* @_ZN21CFWL_MessageKillFocusD2Ev to i8*), i8* bitcast (void (%class.CFWL_MessageKillFocus*)* @_ZN21CFWL_MessageKillFocusD0Ev to i8*)] }, align 8

@_ZN21CFWL_MessageKillFocusC1EP11CFWL_Widget = hidden unnamed_addr alias void (%class.CFWL_MessageKillFocus*, %class.CFWL_Widget*), void (%class.CFWL_MessageKillFocus*, %class.CFWL_Widget*)* @_ZN21CFWL_MessageKillFocusC2EP11CFWL_Widget
@_ZN21CFWL_MessageKillFocusC1EP11CFWL_WidgetS1_ = hidden unnamed_addr alias void (%class.CFWL_MessageKillFocus*, %class.CFWL_Widget*, %class.CFWL_Widget*), void (%class.CFWL_MessageKillFocus*, %class.CFWL_Widget*, %class.CFWL_Widget*)* @_ZN21CFWL_MessageKillFocusC2EP11CFWL_WidgetS1_
@_ZN21CFWL_MessageKillFocusD1Ev = hidden unnamed_addr alias void (%class.CFWL_MessageKillFocus*), void (%class.CFWL_MessageKillFocus*)* @_ZN21CFWL_MessageKillFocusD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFWL_MessageKillFocusC2EP11CFWL_Widget(%class.CFWL_MessageKillFocus*, %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0
  tail call void @_ZN12CFWL_MessageC2ENS_4TypeEP11CFWL_WidgetS2_(%class.CFWL_Message* %3, i32 1, %class.CFWL_Widget* %1, %class.CFWL_Widget* null) #4
  %4 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21CFWL_MessageKillFocus, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 1, i32 0
  store %class.CFWL_Widget* null, %class.CFWL_Widget** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFWL_MessageKillFocusC2EP11CFWL_WidgetS1_(%class.CFWL_MessageKillFocus*, %class.CFWL_Widget*, %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0
  tail call void @_ZN12CFWL_MessageC2ENS_4TypeEP11CFWL_WidgetS2_(%class.CFWL_Message* %4, i32 1, %class.CFWL_Widget* %1, %class.CFWL_Widget* %2) #4
  %5 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21CFWL_MessageKillFocus, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 1, i32 0
  store %class.CFWL_Widget* null, %class.CFWL_Widget** %6, align 8
  ret void
}

declare void @_ZN12CFWL_MessageC2ENS_4TypeEP11CFWL_WidgetS2_(%class.CFWL_Message*, i32, %class.CFWL_Widget*, %class.CFWL_Widget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFWL_MessageKillFocusD2Ev(%class.CFWL_MessageKillFocus*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21CFWL_MessageKillFocus, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0
  tail call void @_ZN12CFWL_MessageD2Ev(%class.CFWL_Message* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12CFWL_MessageD2Ev(%class.CFWL_Message*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21CFWL_MessageKillFocusD0Ev(%class.CFWL_MessageKillFocus*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV21CFWL_MessageKillFocus, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_MessageKillFocus, %class.CFWL_MessageKillFocus* %0, i64 0, i32 0
  tail call void @_ZN12CFWL_MessageD2Ev(%class.CFWL_Message* %3) #4
  %4 = bitcast %class.CFWL_MessageKillFocus* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
