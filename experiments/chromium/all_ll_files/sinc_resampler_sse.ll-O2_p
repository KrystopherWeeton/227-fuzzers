; ModuleID = '../../third_party/webrtc/common_audio/resampler/sinc_resampler_sse.cc'
source_filename = "../../third_party/webrtc/common_audio/resampler/sinc_resampler_sse.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN6webrtc13SincResampler12Convolve_SSEEPKfS2_S2_d(float*, float* nocapture readonly, float* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint float* %0 to i64
  %6 = and i64 %5, 15
  %7 = icmp eq i64 %6, 0
  %8 = bitcast float* %0 to <4 x float>*
  br i1 %7, label %97, label %9

9:                                                ; preds = %4
  %10 = load <4 x float>, <4 x float>* %8, align 1
  %11 = bitcast float* %1 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16
  %13 = fmul <4 x float> %10, %12
  %14 = fadd <4 x float> %13, zeroinitializer
  %15 = bitcast float* %2 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16
  %17 = fmul <4 x float> %10, %16
  %18 = fadd <4 x float> %17, zeroinitializer
  %19 = getelementptr inbounds float, float* %0, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 1
  %22 = getelementptr inbounds float, float* %1, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16
  %25 = fmul <4 x float> %21, %24
  %26 = fadd <4 x float> %14, %25
  %27 = getelementptr inbounds float, float* %2, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16
  %30 = fmul <4 x float> %21, %29
  %31 = fadd <4 x float> %18, %30
  %32 = getelementptr inbounds float, float* %0, i64 8
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 1
  %35 = getelementptr inbounds float, float* %1, i64 8
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16
  %38 = fmul <4 x float> %34, %37
  %39 = fadd <4 x float> %26, %38
  %40 = getelementptr inbounds float, float* %2, i64 8
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16
  %43 = fmul <4 x float> %34, %42
  %44 = fadd <4 x float> %31, %43
  %45 = getelementptr inbounds float, float* %0, i64 12
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 1
  %48 = getelementptr inbounds float, float* %1, i64 12
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 16
  %51 = fmul <4 x float> %47, %50
  %52 = fadd <4 x float> %39, %51
  %53 = getelementptr inbounds float, float* %2, i64 12
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 16
  %56 = fmul <4 x float> %47, %55
  %57 = fadd <4 x float> %44, %56
  %58 = getelementptr inbounds float, float* %0, i64 16
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 1
  %61 = getelementptr inbounds float, float* %1, i64 16
  %62 = bitcast float* %61 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 16
  %64 = fmul <4 x float> %60, %63
  %65 = fadd <4 x float> %52, %64
  %66 = getelementptr inbounds float, float* %2, i64 16
  %67 = bitcast float* %66 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 16
  %69 = fmul <4 x float> %60, %68
  %70 = fadd <4 x float> %57, %69
  %71 = getelementptr inbounds float, float* %0, i64 20
  %72 = bitcast float* %71 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 1
  %74 = getelementptr inbounds float, float* %1, i64 20
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 16
  %77 = fmul <4 x float> %73, %76
  %78 = fadd <4 x float> %65, %77
  %79 = getelementptr inbounds float, float* %2, i64 20
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 16
  %82 = fmul <4 x float> %73, %81
  %83 = fadd <4 x float> %70, %82
  %84 = getelementptr inbounds float, float* %0, i64 24
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 1
  %87 = getelementptr inbounds float, float* %1, i64 24
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 16
  %90 = fmul <4 x float> %86, %89
  %91 = fadd <4 x float> %78, %90
  %92 = getelementptr inbounds float, float* %2, i64 24
  %93 = bitcast float* %92 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 16
  %95 = fmul <4 x float> %86, %94
  %96 = fadd <4 x float> %83, %95
  br label %185

97:                                               ; preds = %4
  %98 = load <4 x float>, <4 x float>* %8, align 16
  %99 = bitcast float* %1 to <4 x float>*
  %100 = load <4 x float>, <4 x float>* %99, align 16
  %101 = fmul <4 x float> %98, %100
  %102 = fadd <4 x float> %101, zeroinitializer
  %103 = bitcast float* %2 to <4 x float>*
  %104 = load <4 x float>, <4 x float>* %103, align 16
  %105 = fmul <4 x float> %98, %104
  %106 = fadd <4 x float> %105, zeroinitializer
  %107 = getelementptr inbounds float, float* %0, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 16
  %110 = getelementptr inbounds float, float* %1, i64 4
  %111 = bitcast float* %110 to <4 x float>*
  %112 = load <4 x float>, <4 x float>* %111, align 16
  %113 = fmul <4 x float> %109, %112
  %114 = fadd <4 x float> %102, %113
  %115 = getelementptr inbounds float, float* %2, i64 4
  %116 = bitcast float* %115 to <4 x float>*
  %117 = load <4 x float>, <4 x float>* %116, align 16
  %118 = fmul <4 x float> %109, %117
  %119 = fadd <4 x float> %106, %118
  %120 = getelementptr inbounds float, float* %0, i64 8
  %121 = bitcast float* %120 to <4 x float>*
  %122 = load <4 x float>, <4 x float>* %121, align 16
  %123 = getelementptr inbounds float, float* %1, i64 8
  %124 = bitcast float* %123 to <4 x float>*
  %125 = load <4 x float>, <4 x float>* %124, align 16
  %126 = fmul <4 x float> %122, %125
  %127 = fadd <4 x float> %114, %126
  %128 = getelementptr inbounds float, float* %2, i64 8
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 16
  %131 = fmul <4 x float> %122, %130
  %132 = fadd <4 x float> %119, %131
  %133 = getelementptr inbounds float, float* %0, i64 12
  %134 = bitcast float* %133 to <4 x float>*
  %135 = load <4 x float>, <4 x float>* %134, align 16
  %136 = getelementptr inbounds float, float* %1, i64 12
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 16
  %139 = fmul <4 x float> %135, %138
  %140 = fadd <4 x float> %127, %139
  %141 = getelementptr inbounds float, float* %2, i64 12
  %142 = bitcast float* %141 to <4 x float>*
  %143 = load <4 x float>, <4 x float>* %142, align 16
  %144 = fmul <4 x float> %135, %143
  %145 = fadd <4 x float> %132, %144
  %146 = getelementptr inbounds float, float* %0, i64 16
  %147 = bitcast float* %146 to <4 x float>*
  %148 = load <4 x float>, <4 x float>* %147, align 16
  %149 = getelementptr inbounds float, float* %1, i64 16
  %150 = bitcast float* %149 to <4 x float>*
  %151 = load <4 x float>, <4 x float>* %150, align 16
  %152 = fmul <4 x float> %148, %151
  %153 = fadd <4 x float> %140, %152
  %154 = getelementptr inbounds float, float* %2, i64 16
  %155 = bitcast float* %154 to <4 x float>*
  %156 = load <4 x float>, <4 x float>* %155, align 16
  %157 = fmul <4 x float> %148, %156
  %158 = fadd <4 x float> %145, %157
  %159 = getelementptr inbounds float, float* %0, i64 20
  %160 = bitcast float* %159 to <4 x float>*
  %161 = load <4 x float>, <4 x float>* %160, align 16
  %162 = getelementptr inbounds float, float* %1, i64 20
  %163 = bitcast float* %162 to <4 x float>*
  %164 = load <4 x float>, <4 x float>* %163, align 16
  %165 = fmul <4 x float> %161, %164
  %166 = fadd <4 x float> %153, %165
  %167 = getelementptr inbounds float, float* %2, i64 20
  %168 = bitcast float* %167 to <4 x float>*
  %169 = load <4 x float>, <4 x float>* %168, align 16
  %170 = fmul <4 x float> %161, %169
  %171 = fadd <4 x float> %158, %170
  %172 = getelementptr inbounds float, float* %0, i64 24
  %173 = bitcast float* %172 to <4 x float>*
  %174 = load <4 x float>, <4 x float>* %173, align 16
  %175 = getelementptr inbounds float, float* %1, i64 24
  %176 = bitcast float* %175 to <4 x float>*
  %177 = load <4 x float>, <4 x float>* %176, align 16
  %178 = fmul <4 x float> %174, %177
  %179 = fadd <4 x float> %166, %178
  %180 = getelementptr inbounds float, float* %2, i64 24
  %181 = bitcast float* %180 to <4 x float>*
  %182 = load <4 x float>, <4 x float>* %181, align 16
  %183 = fmul <4 x float> %174, %182
  %184 = fadd <4 x float> %171, %183
  br label %185

185:                                              ; preds = %9, %97
  %186 = phi <4 x float> [ %91, %9 ], [ %179, %97 ]
  %187 = phi <4 x float> [ %96, %9 ], [ %184, %97 ]
  %188 = getelementptr inbounds float, float* %0, i64 28
  %189 = bitcast float* %188 to <4 x float>*
  %190 = load <4 x float>, <4 x float>* %189, align 1
  %191 = getelementptr inbounds float, float* %1, i64 28
  %192 = bitcast float* %191 to <4 x float>*
  %193 = load <4 x float>, <4 x float>* %192, align 16
  %194 = fmul <4 x float> %190, %193
  %195 = fadd <4 x float> %186, %194
  %196 = getelementptr inbounds float, float* %2, i64 28
  %197 = bitcast float* %196 to <4 x float>*
  %198 = load <4 x float>, <4 x float>* %197, align 16
  %199 = fmul <4 x float> %190, %198
  %200 = fadd <4 x float> %187, %199
  %201 = fsub double 1.000000e+00, %3
  %202 = fptrunc double %201 to float
  %203 = insertelement <4 x float> undef, float %202, i32 0
  %204 = shufflevector <4 x float> %203, <4 x float> undef, <4 x i32> zeroinitializer
  %205 = fmul <4 x float> %204, %195
  %206 = fptrunc double %3 to float
  %207 = insertelement <4 x float> undef, float %206, i32 0
  %208 = shufflevector <4 x float> %207, <4 x float> undef, <4 x i32> zeroinitializer
  %209 = fmul <4 x float> %208, %200
  %210 = fadd <4 x float> %205, %209
  %211 = shufflevector <4 x float> %210, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %212 = fadd <4 x float> %210, %211
  %213 = extractelement <4 x float> %212, i32 1
  %214 = extractelement <4 x float> %212, i32 0
  %215 = fadd float %214, %213
  ret float %215
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
