; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/subtractor.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/subtractor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::Subtractor" = type { %"class.webrtc::Aec3Fft", %"class.webrtc::ApmDataDumper"*, i32, %"struct.webrtc::EchoCanceller3Config", i64, i8, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.18", %"class.std::__1::vector.37", %"class.std::__1::vector.50", %"class.std::__1::vector.57", %"class.std::__1::vector.64", %"class.std::__1::vector.71", %"class.std::__1::vector.85", %"class.std::__1::vector.85" }
%"class.webrtc::Aec3Fft" = type { %"class.webrtc::OouraFft" }
%"class.webrtc::OouraFft" = type { i8 }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::AdaptiveFirFilter"* }
%"class.webrtc::AdaptiveFirFilter" = type { %"class.webrtc::ApmDataDumper"*, %"class.webrtc::Aec3Fft", i32, i64, i64, i32, float, i64, i64, i64, i32, %"class.std::__1::vector.0", i64 }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"*, %"class.std::__1::__compressed_pair.4" }
%"struct.webrtc::FftData" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [65 x float] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.webrtc::FftData"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::vector.2"* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.webrtc::RefinedFilterUpdateGain"* }
%"class.webrtc::RefinedFilterUpdateGain" = type <{ %"class.std::__1::unique_ptr.23", i32, float, %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.std::__1::array", [4 x i8], i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.webrtc::ApmDataDumper"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::unique_ptr.20"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.webrtc::CoarseFilterUpdateGain"* }
%"class.webrtc::CoarseFilterUpdateGain" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i32, float, i64, i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::unique_ptr.39"* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*, %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*, %"class.std::__1::__compressed_pair.52" }
%"class.webrtc::Subtractor::FilterMisadjustmentEstimator" = type { i32, i32, float, float, float, i32 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i64*, i64*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i64* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { i32*, i32*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i32* }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.std::__1::vector.73"*, %"class.std::__1::vector.73"*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::array"* }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::vector.73"* }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { float*, float*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { float* }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::vector.87"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::EchoPathVariability" = type <{ i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.webrtc::RenderBuffer" = type <{ %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::FftBuffer"*, i8, [7 x i8] }>
%"struct.webrtc::BlockBuffer" = type { i32, %"class.std::__1::vector.100", i32, i32 }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.std::__1::vector.102"*, %"class.std::__1::vector.102"*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.std::__1::vector.85"*, %"class.std::__1::vector.85"*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::vector.85"* }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::vector.102"* }
%"struct.webrtc::SpectrumBuffer" = type { i32, %"class.std::__1::vector.71", i32, i32 }
%"struct.webrtc::FftBuffer" = type { i32, %"class.std::__1::vector.0", i32, i32 }
%"class.webrtc::RenderSignalAnalyzer" = type { i32, %"struct.std::__1::array.108", %"class.absl::optional", i64 }
%"struct.std::__1::array.108" = type { [63 x i64] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.webrtc::AecState" = type { %"class.std::__1::unique_ptr.23", %"struct.webrtc::EchoCanceller3Config", i64, i8, i8, i8, %"class.webrtc::AecState::InitialState", %"class.webrtc::AecState::FilterDelay", %"class.std::__1::unique_ptr.114", %"class.webrtc::AecState::FilteringQualityAnalyzer", %"class.webrtc::AecState::SaturationDetector", %"class.webrtc::ErlEstimator", %"class.webrtc::ErleEstimator", i64, i64, i8, [7 x i8], %"class.webrtc::FilterAnalyzer", %"class.webrtc::EchoAudibility", %"class.webrtc::ReverbModelEstimator", %"class.webrtc::ReverbModel", %"class.webrtc::SubtractorOutputAnalyzer" }
%"class.webrtc::AecState::InitialState" = type { i8, float, i8, i8, i64 }
%"class.webrtc::AecState::FilterDelay" = type { i32, i8, %"class.std::__1::vector.64", i32, %"class.absl::optional.109" }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { %"struct.webrtc::DelayEstimate" }
%"struct.webrtc::DelayEstimate" = type { i32, i64, i64, i64 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.webrtc::TransparentMode"* }
%"class.webrtc::TransparentMode" = type { i32 (...)** }
%"class.webrtc::AecState::FilteringQualityAnalyzer" = type { i8, i8, i64, i64, i8, %"class.std::__1::vector.120" }
%"class.std::__1::vector.120" = type { i64*, i64, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64 }
%"class.webrtc::AecState::SaturationDetector" = type { i8 }
%"class.webrtc::ErlEstimator" = type { i64, %"struct.std::__1::array", %"struct.std::__1::array.123", float, i32, i64 }
%"struct.std::__1::array.123" = type { [63 x i32] }
%"class.webrtc::ErleEstimator" = type { i64, %"class.webrtc::FullBandErleEstimator", %"class.webrtc::SubbandErleEstimator", %"class.std::__1::unique_ptr.159", i64 }
%"class.webrtc::FullBandErleEstimator" = type { float, float, %"class.std::__1::vector.64", %"class.std::__1::vector.87", %"class.std::__1::vector.124", %"class.std::__1::vector.136" }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"*, %"class.std::__1::__compressed_pair.131" }
%"class.webrtc::FullBandErleEstimator::ErleInstantaneous" = type { i8, i8, %"class.absl::optional.126", float, float, float, float, float, i32 }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { float }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.webrtc::FullBandErleEstimator::ErleInstantaneous"* }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.absl::optional.126"*, %"class.absl::optional.126"*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.absl::optional.126"* }
%"class.webrtc::SubbandErleEstimator" = type { i8, float, %"struct.std::__1::array", i8, %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"class.std::__1::vector.73", %"class.std::__1::vector.73", %"class.std::__1::vector.73", %"class.std::__1::vector.143", %"class.std::__1::vector.151" }
%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra" = type { %"class.std::__1::vector.73", %"class.std::__1::vector.73", %"class.std::__1::vector.143", %"class.std::__1::vector.64" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.std::__1::array.145"*, %"struct.std::__1::array.145"*, %"class.std::__1::__compressed_pair.146" }
%"struct.std::__1::array.145" = type { [65 x i8] }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.std::__1::array.145"* }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.std::__1::array.153"*, %"struct.std::__1::array.153"*, %"class.std::__1::__compressed_pair.154" }
%"struct.std::__1::array.153" = type { [65 x i32] }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::array.153"* }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.webrtc::SignalDependentErleEstimator"* }
%"class.webrtc::SignalDependentErleEstimator" = type { float, i64, i64, i64, %"struct.std::__1::array.162", %"struct.std::__1::array.163", %"class.std::__1::vector.57", i8, %"class.std::__1::vector.73", %"class.std::__1::vector.73", %"class.std::__1::vector.71", %"class.std::__1::vector.164", %"class.std::__1::vector.166", %"class.std::__1::vector.164", %"class.std::__1::vector.178", %"class.std::__1::vector.186" }
%"struct.std::__1::array.162" = type { [65 x i64] }
%"struct.std::__1::array.163" = type { [6 x float] }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.std::__1::array.163"*, %"struct.std::__1::array.163"*, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::array.163"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.std::__1::vector.166"*, %"class.std::__1::vector.166"*, %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.std::__1::vector.166"* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"struct.std::__1::array.180"*, %"struct.std::__1::array.180"*, %"class.std::__1::__compressed_pair.181" }
%"struct.std::__1::array.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::array.180"* }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"struct.std::__1::array.162"*, %"struct.std::__1::array.162"*, %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::array.162"* }
%"class.webrtc::FilterAnalyzer" = type <{ %"class.std::__1::unique_ptr.23", i8, [3 x i8], float, %"class.std::__1::vector.85", i64, %"struct.webrtc::FilterAnalyzer::FilterRegion", %"class.std::__1::vector.196", %"class.std::__1::vector.64", i32, [4 x i8] }>
%"struct.webrtc::FilterAnalyzer::FilterRegion" = type { i64, i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"*, %"class.std::__1::__compressed_pair.198" }
%"struct.webrtc::FilterAnalyzer::FilterAnalysisState" = type { float, i64, i32, i8, [3 x i8], %"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" }
%"class.webrtc::FilterAnalyzer::ConsistentFilterDetector" = type <{ i8, [3 x i8], float, float, [4 x i8], i64, i64, float, [4 x i8], i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.webrtc::FilterAnalyzer::FilterAnalysisState"* }
%"class.webrtc::EchoAudibility" = type { %"class.absl::optional", i32, i8, i8, [2 x i8], %"class.webrtc::StationarityEstimator" }
%"class.webrtc::StationarityEstimator" = type <{ %"class.std::__1::unique_ptr.23", %"class.webrtc::StationarityEstimator::NoiseSpectrum", %"struct.std::__1::array.153", %"struct.std::__1::array.145", [3 x i8] }>
%"class.webrtc::StationarityEstimator::NoiseSpectrum" = type { %"struct.std::__1::array", i64 }
%"class.webrtc::ReverbModelEstimator" = type { %"class.std::__1::vector.203", %"class.std::__1::vector.216" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"class.std::__1::unique_ptr.205"*, %"class.std::__1::unique_ptr.205"*, %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.webrtc::ReverbDecayEstimator"* }
%"class.webrtc::ReverbDecayEstimator" = type <{ i32, i32, i8, [3 x i8], %"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor", %"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator", i32, i32, i32, i32, i8, [7 x i8], %"class.std::__1::vector.87", float, float, float, [4 x i8] }>
%"class.webrtc::ReverbDecayEstimator::LateReverbLinearRegressor" = type { float, float, float, i32, i32 }
%"class.webrtc::ReverbDecayEstimator::EarlyReverbLengthEstimator" = type <{ %"class.std::__1::vector.87", %"class.std::__1::vector.87", i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::unique_ptr.205"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.webrtc::ReverbFrequencyResponse"*, %"class.webrtc::ReverbFrequencyResponse"*, %"class.std::__1::__compressed_pair.218" }
%"class.webrtc::ReverbFrequencyResponse" = type { float, %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.webrtc::ReverbFrequencyResponse"* }
%"class.webrtc::ReverbModel" = type { %"struct.std::__1::array" }
%"class.webrtc::SubtractorOutputAnalyzer" = type { %"class.std::__1::vector.120" }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { %"struct.webrtc::SubtractorOutput"*, i64 }
%"struct.webrtc::SubtractorOutput" = type { %"struct.std::__1::array.223", %"struct.std::__1::array.223", %"struct.std::__1::array.223", %"struct.std::__1::array.223", %"struct.webrtc::FftData", %"struct.std::__1::array", %"struct.std::__1::array", float, float, float, float, float, float, float }
%"struct.std::__1::array.223" = type { [64 x float] }
%"struct.std::__1::array.242" = type { [128 x float] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.238 }
%union.anon.238 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorINS0_INS_5arrayIfLm65EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_ = comdat any

$_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEEC2EmRKS3_ = comdat any

$_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE = comdat any

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

@.str.5 = private unnamed_addr constant [47 x i8] c"WebRTC-Aec3CoarseFilterResetHangoverKillSwitch\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1

@_ZN6webrtc10SubtractorC1ERKNS_20EchoCanceller3ConfigEmmPNS_13ApmDataDumperENS_16Aec3OptimizationE = hidden unnamed_addr alias void (%"class.webrtc::Subtractor"*, %"struct.webrtc::EchoCanceller3Config"*, i64, i64, %"class.webrtc::ApmDataDumper"*, i32), void (%"class.webrtc::Subtractor"*, %"struct.webrtc::EchoCanceller3Config"*, i64, i64, %"class.webrtc::ApmDataDumper"*, i32)* @_ZN6webrtc10SubtractorC2ERKNS_20EchoCanceller3ConfigEmmPNS_13ApmDataDumperENS_16Aec3OptimizationE
@_ZN6webrtc10SubtractorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::Subtractor"*), void (%"class.webrtc::Subtractor"*)* @_ZN6webrtc10SubtractorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10SubtractorC2ERKNS_20EchoCanceller3ConfigEmmPNS_13ApmDataDumperENS_16Aec3OptimizationE(%"class.webrtc::Subtractor"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560), i64, i64, %"class.webrtc::ApmDataDumper"*, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.73", align 8
  %8 = alloca [65 x float], align 4
  %9 = alloca %"class.std::__1::vector.87", align 8
  %10 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc7Aec3FftC1Ev(%"class.webrtc::Aec3Fft"* %10) #15
  %11 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 1
  store %"class.webrtc::ApmDataDumper"* %4, %"class.webrtc::ApmDataDumper"** %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 2
  store i32 %5, i32* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"* %13, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560) %1) #15
  %14 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 4
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 5
  %16 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0)) #15
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %15, align 8
  %19 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6
  %20 = load i64, i64* %14, align 8
  %21 = bitcast %"class.std::__1::vector"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #15
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %6
  %24 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7
  %25 = bitcast %"class.std::__1::vector"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 96, i1 false)
  %26 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11
  %27 = bitcast %"class.std::__1::vector.57"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #15
  br label %122

28:                                               ; preds = %6
  %29 = icmp ugt i64 %20, 2305843009213693951
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #16
  unreachable

32:                                               ; preds = %28
  %33 = shl i64 %20, 3
  %34 = tail call i8* @_Znwm(i64 %33) #17
  %35 = bitcast i8* %34 to %"class.std::__1::unique_ptr"*
  %36 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6, i32 0, i32 1
  %37 = bitcast %"class.std::__1::vector"* %19 to i8**
  store i8* %34, i8** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %20
  %39 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr"* %38, %"class.std::__1::unique_ptr"** %39, align 8
  %40 = bitcast %"class.std::__1::unique_ptr"** %36 to i64*
  %41 = ptrtoint i8* %34 to i64
  %42 = add nsw i64 %20, -1
  %43 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %42, i32 0, i32 0, i32 0
  %44 = ptrtoint %"class.webrtc::AdaptiveFirFilter"** %43 to i64
  %45 = sub i64 8, %41
  %46 = add i64 %45, %44
  %47 = and i64 %46, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 %47, i1 false) #15
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  store i64 %48, i64* %40, align 8
  %49 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7
  %50 = tail call i8* @_Znwm(i64 %33) #17
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr"*
  %52 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 1
  %53 = bitcast %"class.std::__1::vector"* %49 to i8**
  store i8* %50, i8** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 %20
  %55 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr"* %54, %"class.std::__1::unique_ptr"** %55, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"** %52 to i64*
  %57 = ptrtoint i8* %50 to i64
  %58 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 %42, i32 0, i32 0, i32 0
  %59 = ptrtoint %"class.webrtc::AdaptiveFirFilter"** %58 to i64
  %60 = sub i64 8, %57
  %61 = add i64 %60, %59
  %62 = and i64 %61, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 %62, i1 false) #15
  %63 = ptrtoint %"class.std::__1::unique_ptr"* %54 to i64
  store i64 %63, i64* %56, align 8
  %64 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8
  %65 = tail call i8* @_Znwm(i64 %33) #17
  %66 = bitcast i8* %65 to %"class.std::__1::unique_ptr.20"*
  %67 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 1
  %68 = bitcast %"class.std::__1::vector.18"* %64 to i8**
  store i8* %65, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %66, i64 %20
  %70 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr.20"* %69, %"class.std::__1::unique_ptr.20"** %70, align 8
  %71 = bitcast %"class.std::__1::unique_ptr.20"** %67 to i64*
  %72 = ptrtoint i8* %65 to i64
  %73 = getelementptr %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %66, i64 %42, i32 0, i32 0, i32 0
  %74 = ptrtoint %"class.webrtc::RefinedFilterUpdateGain"** %73 to i64
  %75 = sub i64 8, %72
  %76 = add i64 %75, %74
  %77 = and i64 %76, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 %77, i1 false) #15
  %78 = ptrtoint %"class.std::__1::unique_ptr.20"* %69 to i64
  store i64 %78, i64* %71, align 8
  %79 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9
  %80 = tail call i8* @_Znwm(i64 %33) #17
  %81 = bitcast i8* %80 to %"class.std::__1::unique_ptr.39"*
  %82 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 1
  %83 = bitcast %"class.std::__1::vector.37"* %79 to i8**
  store i8* %80, i8** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %81, i64 %20
  %85 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr.39"* %84, %"class.std::__1::unique_ptr.39"** %85, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.39"** %82 to i64*
  %87 = ptrtoint i8* %80 to i64
  %88 = getelementptr %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %81, i64 %42, i32 0, i32 0, i32 0
  %89 = ptrtoint %"class.webrtc::CoarseFilterUpdateGain"** %88 to i64
  %90 = sub i64 8, %87
  %91 = add i64 %90, %89
  %92 = and i64 %91, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 %92, i1 false) #15
  %93 = ptrtoint %"class.std::__1::unique_ptr.39"* %84 to i64
  store i64 %93, i64* %86, align 8
  %94 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 10
  %95 = bitcast %"class.std::__1::vector.50"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #15
  %96 = icmp ugt i64 %20, 768614336404564650
  br i1 %96, label %97, label %99

97:                                               ; preds = %32
  %98 = bitcast %"class.std::__1::vector.50"* %94 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #16
  unreachable

99:                                               ; preds = %32
  %100 = mul i64 %20, 24
  %101 = tail call i8* @_Znwm(i64 %100) #17
  %102 = bitcast i8* %101 to %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*
  %103 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 10, i32 0, i32 1
  %104 = bitcast %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %103 to i8**
  store i8* %101, i8** %104, align 8
  %105 = bitcast %"class.std::__1::vector.50"* %94 to i8**
  store i8* %101, i8** %105, align 8
  %106 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %102, i64 %20
  %107 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  store %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %106, %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %107, align 8
  br label %108

108:                                              ; preds = %108, %99
  %109 = phi %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* [ %113, %108 ], [ %102, %99 ]
  %110 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %109, i64 0, i32 0
  store i32 4, i32* %110, align 4
  %111 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %109, i64 0, i32 1
  %112 = bitcast i32* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %112, i8 0, i64 20, i1 false) #15
  %113 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %109, i64 1
  %114 = icmp eq %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %113, %106
  br i1 %114, label %115, label %108

115:                                              ; preds = %108
  %116 = bitcast %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %103 to i64*
  %117 = ptrtoint %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %106 to i64
  store i64 %117, i64* %116, align 8
  %118 = load i64, i64* %14, align 8
  %119 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11
  %120 = bitcast %"class.std::__1::vector.57"* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #15
  %121 = icmp eq i64 %118, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %23, %115
  %123 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12
  %124 = bitcast %"class.std::__1::vector.64"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #15
  br label %149

125:                                              ; preds = %115
  %126 = icmp ugt i64 %118, 2305843009213693951
  br i1 %126, label %127, label %129

127:                                              ; preds = %125
  %128 = bitcast %"class.std::__1::vector.57"* %119 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %128) #16
  unreachable

129:                                              ; preds = %125
  %130 = shl i64 %118, 3
  %131 = tail call i8* @_Znwm(i64 %130) #17
  %132 = bitcast i8* %131 to i64*
  %133 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11, i32 0, i32 1
  %134 = bitcast %"class.std::__1::vector.57"* %119 to i8**
  store i8* %131, i8** %134, align 8
  %135 = getelementptr inbounds i64, i64* %132, i64 %118
  %136 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  store i64* %135, i64** %136, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 %130, i1 false)
  %137 = bitcast i64** %133 to i64*
  %138 = ptrtoint i64* %135 to i64
  store i64 %138, i64* %137, align 8
  %139 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12
  %140 = shl i64 %118, 2
  %141 = tail call i8* @_Znwm(i64 %140) #17
  %142 = bitcast i8* %141 to i32*
  %143 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12, i32 0, i32 1
  %144 = bitcast %"class.std::__1::vector.64"* %139 to i8**
  store i8* %141, i8** %144, align 8
  %145 = getelementptr inbounds i32, i32* %142, i64 %118
  %146 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store i32* %145, i32** %146, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %141, i8 0, i64 %140, i1 false)
  %147 = bitcast i32** %143 to i64*
  %148 = ptrtoint i32* %145 to i64
  store i64 %148, i64* %147, align 8
  br label %149

149:                                              ; preds = %122, %129
  %150 = phi i64 [ 0, %122 ], [ %118, %129 ]
  %151 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 13
  %152 = bitcast %"class.std::__1::vector.73"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #15
  %153 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 2
  %154 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %153, i64 0, i32 0
  %155 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  %156 = load i64, i64* %154, align 8
  %157 = load i64, i64* %155, align 8
  %158 = icmp ult i64 %156, %157
  %159 = select i1 %158, i64 %157, i64 %156
  %160 = bitcast [65 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %160)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %160, i8 0, i64 260, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 0, i64 24, i1 false) #15
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %183, label %162

162:                                              ; preds = %149
  %163 = icmp ugt i64 %159, 70949015668113660
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = bitcast %"class.std::__1::vector.73"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %165) #16
  unreachable

166:                                              ; preds = %162
  %167 = mul i64 %159, 260
  %168 = tail call i8* @_Znwm(i64 %167) #17
  %169 = bitcast i8* %168 to %"struct.std::__1::array"*
  %170 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %7, i64 0, i32 0, i32 1
  %171 = bitcast %"struct.std::__1::array"** %170 to i8**
  store i8* %168, i8** %171, align 8
  %172 = bitcast %"class.std::__1::vector.73"* %7 to i8**
  store i8* %168, i8** %172, align 8
  %173 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %169, i64 %159
  %174 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %173, %"struct.std::__1::array"** %174, align 8
  br label %175

175:                                              ; preds = %175, %166
  %176 = phi %"struct.std::__1::array"* [ %169, %166 ], [ %178, %175 ]
  %177 = bitcast %"struct.std::__1::array"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* nonnull align 4 %160, i64 260, i1 false)
  %178 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %176, i64 1
  %179 = icmp eq %"struct.std::__1::array"* %178, %173
  br i1 %179, label %180, label %175

180:                                              ; preds = %175
  %181 = bitcast %"struct.std::__1::array"** %170 to i64*
  %182 = ptrtoint %"struct.std::__1::array"* %173 to i64
  store i64 %182, i64* %181, align 8
  br label %183

183:                                              ; preds = %149, %180
  call void @_ZNSt3__16vectorINS0_INS_5arrayIfLm65EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.71"* %151, i64 %150, %"class.std::__1::vector.73"* nonnull dereferenceable(24) %7)
  %184 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %7, i64 0, i32 0, i32 0
  %185 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %184, align 8
  %186 = icmp eq %"struct.std::__1::array"* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %183
  %188 = ptrtoint %"struct.std::__1::array"* %185 to i64
  %189 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %7, i64 0, i32 0, i32 1
  %190 = bitcast %"struct.std::__1::array"** %189 to i64*
  store i64 %188, i64* %190, align 8
  %191 = bitcast %"struct.std::__1::array"* %185 to i8*
  call void @_ZdlPv(i8* %191) #17
  br label %192

192:                                              ; preds = %183, %187
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %160)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #15
  %193 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 14
  %194 = load i64, i64* %14, align 8
  %195 = bitcast %"class.std::__1::vector.87"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #15
  %196 = load i64, i64* %154, align 8
  %197 = load i64, i64* %155, align 8
  %198 = icmp ult i64 %196, %197
  %199 = select i1 %198, i64 %197, i64 %196
  %200 = trunc i64 %199 to i32
  %201 = shl i32 %200, 6
  %202 = sext i32 %201 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 24, i1 false) #15
  %203 = icmp eq i32 %201, 0
  br i1 %203, label %218, label %204

204:                                              ; preds = %192
  %205 = icmp slt i32 %201, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %204
  %207 = bitcast %"class.std::__1::vector.87"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %207) #16
  unreachable

208:                                              ; preds = %204
  %209 = shl nsw i64 %202, 2
  %210 = call i8* @_Znwm(i64 %209) #17
  %211 = bitcast i8* %210 to float*
  %212 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %9, i64 0, i32 0, i32 1
  %213 = bitcast %"class.std::__1::vector.87"* %9 to i8**
  store i8* %210, i8** %213, align 8
  %214 = getelementptr inbounds float, float* %211, i64 %202
  %215 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %214, float** %215, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %210, i8 0, i64 %209, i1 false)
  %216 = bitcast float** %212 to i64*
  %217 = ptrtoint float* %214 to i64
  store i64 %217, i64* %216, align 8
  br label %218

218:                                              ; preds = %192, %208
  call void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEEC2EmRKS3_(%"class.std::__1::vector.85"* %193, i64 %194, %"class.std::__1::vector.87"* nonnull dereferenceable(24) %9)
  %219 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %9, i64 0, i32 0, i32 0
  %220 = load float*, float** %219, align 8
  %221 = icmp eq float* %220, null
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = ptrtoint float* %220 to i64
  %224 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %9, i64 0, i32 0, i32 1
  %225 = bitcast float** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = bitcast float* %220 to i8*
  call void @_ZdlPv(i8* %226) #17
  br label %227

227:                                              ; preds = %218, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #15
  %228 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 15
  %229 = bitcast %"class.std::__1::vector.85"* %228 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 24, i1 false) #15
  %230 = load i64, i64* %14, align 8
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %309, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 2, i32 4
  %234 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %235 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 1, i32 0
  %236 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 3
  %237 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %236, i64 0, i32 0
  %238 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 0
  %239 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 4
  %240 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 0
  %241 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 0
  br label %246

242:                                              ; preds = %305
  %243 = icmp eq i64 %307, 0
  br i1 %243, label %309, label %244

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %151, i64 0, i32 0, i32 0
  br label %310

246:                                              ; preds = %232, %305
  %247 = phi i64 [ 0, %232 ], [ %306, %305 ]
  %248 = call i8* @_Znwm(i64 104) #17
  %249 = bitcast i8* %248 to %"class.webrtc::AdaptiveFirFilter"*
  %250 = load i64, i64* %155, align 8
  %251 = load i64, i64* %154, align 8
  %252 = load i64, i64* %233, align 8
  %253 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %11, align 8
  call void @_ZN6webrtc17AdaptiveFirFilterC1EmmmmNS_16Aec3OptimizationEPNS_13ApmDataDumperE(%"class.webrtc::AdaptiveFirFilter"* nonnull %249, i64 %250, i64 %251, i64 %252, i64 %2, i32 %5, %"class.webrtc::ApmDataDumper"* %253) #15
  %254 = ptrtoint i8* %248 to i64
  %255 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %234, align 8
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %255, i64 %247
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %256, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %257, align 8
  %259 = bitcast %"class.std::__1::unique_ptr"* %256 to i64*
  store i64 %254, i64* %259, align 8
  %260 = icmp eq %"class.webrtc::AdaptiveFirFilter"* %258, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %246
  call void @_ZN6webrtc17AdaptiveFirFilterD1Ev(%"class.webrtc::AdaptiveFirFilter"* nonnull %258) #15
  %262 = bitcast %"class.webrtc::AdaptiveFirFilter"* %258 to i8*
  call void @_ZdlPv(i8* %262) #17
  br label %263

263:                                              ; preds = %261, %246
  %264 = call i8* @_Znwm(i64 104) #17
  %265 = bitcast i8* %264 to %"class.webrtc::AdaptiveFirFilter"*
  %266 = load i64, i64* %235, align 8
  %267 = load i64, i64* %237, align 8
  %268 = load i64, i64* %233, align 8
  %269 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %11, align 8
  call void @_ZN6webrtc17AdaptiveFirFilterC1EmmmmNS_16Aec3OptimizationEPNS_13ApmDataDumperE(%"class.webrtc::AdaptiveFirFilter"* nonnull %265, i64 %266, i64 %267, i64 %268, i64 %2, i32 %5, %"class.webrtc::ApmDataDumper"* %269) #15
  %270 = ptrtoint i8* %264 to i64
  %271 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %238, align 8
  %272 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %271, i64 %247
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %272, i64 0, i32 0, i32 0, i32 0
  %274 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %273, align 8
  %275 = bitcast %"class.std::__1::unique_ptr"* %272 to i64*
  store i64 %270, i64* %275, align 8
  %276 = icmp eq %"class.webrtc::AdaptiveFirFilter"* %274, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %263
  call void @_ZN6webrtc17AdaptiveFirFilterD1Ev(%"class.webrtc::AdaptiveFirFilter"* nonnull %274) #15
  %278 = bitcast %"class.webrtc::AdaptiveFirFilter"* %274 to i8*
  call void @_ZdlPv(i8* %278) #17
  br label %279

279:                                              ; preds = %277, %263
  %280 = call i8* @_Znwm(i64 400) #17
  %281 = bitcast i8* %280 to %"class.webrtc::RefinedFilterUpdateGain"*
  %282 = load i64, i64* %239, align 8
  call void @_ZN6webrtc23RefinedFilterUpdateGainC1ERKNS_20EchoCanceller3Config6Filter20RefinedConfigurationEm(%"class.webrtc::RefinedFilterUpdateGain"* nonnull %281, %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* dereferenceable(32) %153, i64 %282) #15
  %283 = ptrtoint i8* %280 to i64
  %284 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %240, align 8
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %284, i64 %247
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %285, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %286, align 8
  %288 = bitcast %"class.std::__1::unique_ptr.20"* %285 to i64*
  store i64 %283, i64* %288, align 8
  %289 = icmp eq %"class.webrtc::RefinedFilterUpdateGain"* %287, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %279
  call void @_ZN6webrtc23RefinedFilterUpdateGainD1Ev(%"class.webrtc::RefinedFilterUpdateGain"* nonnull %287) #15
  %291 = bitcast %"class.webrtc::RefinedFilterUpdateGain"* %287 to i8*
  call void @_ZdlPv(i8* %291) #17
  br label %292

292:                                              ; preds = %290, %279
  %293 = call i8* @_Znwm(i64 80) #17
  %294 = bitcast i8* %293 to %"class.webrtc::CoarseFilterUpdateGain"*
  %295 = load i64, i64* %233, align 8
  call void @_ZN6webrtc22CoarseFilterUpdateGainC1ERKNS_20EchoCanceller3Config6Filter19CoarseConfigurationEm(%"class.webrtc::CoarseFilterUpdateGain"* nonnull %294, %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* dereferenceable(16) %236, i64 %295) #15
  %296 = ptrtoint i8* %293 to i64
  %297 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %241, align 8
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %297, i64 %247
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %298, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %299, align 8
  %301 = bitcast %"class.std::__1::unique_ptr.39"* %298 to i64*
  store i64 %296, i64* %301, align 8
  %302 = icmp eq %"class.webrtc::CoarseFilterUpdateGain"* %300, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %292
  %304 = bitcast %"class.webrtc::CoarseFilterUpdateGain"* %300 to i8*
  call void @_ZdlPv(i8* %304) #17
  br label %305

305:                                              ; preds = %303, %292
  %306 = add nuw i64 %247, 1
  %307 = load i64, i64* %14, align 8
  %308 = icmp ult i64 %306, %307
  br i1 %308, label %246, label %242

309:                                              ; preds = %329, %227, %242
  ret void

310:                                              ; preds = %244, %329
  %311 = phi i64 [ %307, %244 ], [ %330, %329 ]
  %312 = phi i64 [ 0, %244 ], [ %331, %329 ]
  %313 = load %"class.std::__1::vector.73"*, %"class.std::__1::vector.73"** %245, align 8
  %314 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %313, i64 %312, i32 0, i32 0
  %315 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %314, align 8
  %316 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %313, i64 %312, i32 0, i32 1
  %317 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %316, align 8
  %318 = icmp eq %"struct.std::__1::array"* %315, %317
  br i1 %318, label %329, label %319

319:                                              ; preds = %310
  %320 = bitcast %"struct.std::__1::array"* %315 to i8*
  %321 = ptrtoint %"struct.std::__1::array"* %315 to i64
  %322 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %317, i64 -1
  %323 = ptrtoint %"struct.std::__1::array"* %322 to i64
  %324 = sub i64 %323, %321
  %325 = urem i64 %324, 260
  %326 = sub i64 %324, %325
  %327 = add i64 %326, 260
  call void @llvm.memset.p0i8.i64(i8* align 4 %320, i8 0, i64 %327, i1 false)
  %328 = load i64, i64* %14, align 8
  br label %329

329:                                              ; preds = %319, %310
  %330 = phi i64 [ %328, %319 ], [ %311, %310 ]
  %331 = add nuw i64 %312, 1
  %332 = icmp ult i64 %331, %330
  br i1 %332, label %310, label %309
}

declare void @_ZN6webrtc7Aec3FftC1Ev(%"class.webrtc::Aec3Fft"*) unnamed_addr #1

declare void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_INS_5arrayIfLm65EEENS_9allocatorIS2_EEEENS3_IS5_EEEC2EmRKS5_(%"class.std::__1::vector.71"*, i64, %"class.std::__1::vector.73"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.71"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector.71"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #16
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #17
  %13 = bitcast i8* %12 to %"class.std::__1::vector.73"*
  %14 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.73"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.71"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.73"* %17, %"class.std::__1::vector.73"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.73"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::array"** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.73"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.73"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.73"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #15
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = sdiv exact i64 %29, 260
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 70949015668113660
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.73"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #16
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #17
  %38 = bitcast i8* %37 to %"struct.std::__1::array"*
  %39 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %25, i64 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::array"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.73"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %42, %"struct.std::__1::array"** %43, align 8
  %44 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast %"struct.std::__1::array"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint %"struct.std::__1::array"* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = udiv exact i64 %49, 260
  %53 = bitcast %"struct.std::__1::array"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %53, i64 %49, i1 false) #15
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %38, i64 %52
  %55 = ptrtoint %"struct.std::__1::array"* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.73"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.73"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEEC2EmRKS3_(%"class.std::__1::vector.85"*, i64, %"class.std::__1::vector.87"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.85"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #15
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector.85"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #16
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #17
  %13 = bitcast i8* %12 to %"class.std::__1::vector.87"*
  %14 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.87"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.85"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.87"* %17, %"class.std::__1::vector.87"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.87"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %2, i64 0, i32 0, i32 1
  %21 = bitcast float** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.87"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.87"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.87"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #15
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 4611686018427387903
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.87"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #16
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #17
  %38 = bitcast i8* %37 to float*
  %39 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %25, i64 0, i32 0, i32 1
  %40 = bitcast float** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.87"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds float, float* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %42, float** %43, align 8
  %44 = load float*, float** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast float** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint float* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = lshr exact i64 %49, 2
  %53 = bitcast float* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %53, i64 %49, i1 false) #15
  %54 = getelementptr inbounds float, float* %38, i64 %52
  %55 = ptrtoint float* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.87"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.87"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10SubtractorD2Ev(%"class.webrtc::Subtractor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 15
  %3 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.87"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.87"* %4 to i8*
  %8 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.87"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::vector.87"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %13, i64 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = icmp eq float* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint float* %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %12, i64 -1, i32 0, i32 1
  %20 = bitcast float** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast float* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::vector.87"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.85"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::vector.87"* %4, %"class.std::__1::vector.87"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 14
  %31 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %31, align 8
  %33 = icmp eq %"class.std::__1::vector.87"* %32, null
  br i1 %33, label %57, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::vector.87"* %32 to i8*
  %36 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 14, i32 0, i32 1
  %37 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %36, align 8
  %38 = icmp eq %"class.std::__1::vector.87"* %37, %32
  br i1 %38, label %55, label %39

39:                                               ; preds = %34, %50
  %40 = phi %"class.std::__1::vector.87"* [ %41, %50 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %41, i64 0, i32 0, i32 0
  %43 = load float*, float** %42, align 8
  %44 = icmp eq float* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = ptrtoint float* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %40, i64 -1, i32 0, i32 1
  %48 = bitcast float** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast float* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #17
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::vector.87"* %41, %32
  br i1 %51, label %52, label %39

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.85"* %30 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %34
  %56 = phi i8* [ %54, %52 ], [ %35, %34 ]
  store %"class.std::__1::vector.87"* %32, %"class.std::__1::vector.87"** %36, align 8
  tail call void @_ZdlPv(i8* %56) #17
  br label %57

57:                                               ; preds = %29, %55
  %58 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 13
  %59 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::vector.73"*, %"class.std::__1::vector.73"** %59, align 8
  %61 = icmp eq %"class.std::__1::vector.73"* %60, null
  br i1 %61, label %85, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::vector.73"* %60 to i8*
  %64 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 13, i32 0, i32 1
  %65 = load %"class.std::__1::vector.73"*, %"class.std::__1::vector.73"** %64, align 8
  %66 = icmp eq %"class.std::__1::vector.73"* %65, %60
  br i1 %66, label %83, label %67

67:                                               ; preds = %62, %78
  %68 = phi %"class.std::__1::vector.73"* [ %69, %78 ], [ %65, %62 ]
  %69 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %69, i64 0, i32 0, i32 0
  %71 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %70, align 8
  %72 = icmp eq %"struct.std::__1::array"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %67
  %74 = ptrtoint %"struct.std::__1::array"* %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %68, i64 -1, i32 0, i32 1
  %76 = bitcast %"struct.std::__1::array"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"struct.std::__1::array"* %71 to i8*
  tail call void @_ZdlPv(i8* %77) #17
  br label %78

78:                                               ; preds = %73, %67
  %79 = icmp eq %"class.std::__1::vector.73"* %69, %60
  br i1 %79, label %80, label %67

80:                                               ; preds = %78
  %81 = bitcast %"class.std::__1::vector.71"* %58 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %62
  %84 = phi i8* [ %82, %80 ], [ %63, %62 ]
  store %"class.std::__1::vector.73"* %60, %"class.std::__1::vector.73"** %64, align 8
  tail call void @_ZdlPv(i8* %84) #17
  br label %85

85:                                               ; preds = %57, %83
  %86 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  %88 = icmp eq i32* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = ptrtoint i32* %87 to i64
  %91 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12, i32 0, i32 1
  %92 = bitcast i32** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast i32* %87 to i8*
  tail call void @_ZdlPv(i8* %93) #17
  br label %94

94:                                               ; preds = %85, %89
  %95 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i64* %96 to i64
  %100 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11, i32 0, i32 1
  %101 = bitcast i64** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i64* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %94, %98
  %104 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 10, i32 0, i32 0
  %105 = load %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*, %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %104, align 8
  %106 = icmp eq %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = ptrtoint %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %105 to i64
  %109 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 10, i32 0, i32 1
  %110 = bitcast %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = bitcast %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %105 to i8*
  tail call void @_ZdlPv(i8* %111) #17
  br label %112

112:                                              ; preds = %103, %107
  %113 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9
  %114 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %114, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.39"* %115, null
  br i1 %116, label %137, label %117

117:                                              ; preds = %112
  %118 = bitcast %"class.std::__1::unique_ptr.39"* %115 to i8*
  %119 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 1
  %120 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %119, align 8
  %121 = icmp eq %"class.std::__1::unique_ptr.39"* %120, %115
  br i1 %121, label %135, label %122

122:                                              ; preds = %117, %130
  %123 = phi %"class.std::__1::unique_ptr.39"* [ %124, %130 ], [ %120, %117 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %123, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %125, align 8
  store %"class.webrtc::CoarseFilterUpdateGain"* null, %"class.webrtc::CoarseFilterUpdateGain"** %125, align 8
  %127 = icmp eq %"class.webrtc::CoarseFilterUpdateGain"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %122
  %129 = bitcast %"class.webrtc::CoarseFilterUpdateGain"* %126 to i8*
  tail call void @_ZdlPv(i8* %129) #17
  br label %130

130:                                              ; preds = %128, %122
  %131 = icmp eq %"class.std::__1::unique_ptr.39"* %124, %115
  br i1 %131, label %132, label %122

132:                                              ; preds = %130
  %133 = bitcast %"class.std::__1::vector.37"* %113 to i8**
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %132, %117
  %136 = phi i8* [ %134, %132 ], [ %118, %117 ]
  store %"class.std::__1::unique_ptr.39"* %115, %"class.std::__1::unique_ptr.39"** %119, align 8
  tail call void @_ZdlPv(i8* %136) #17
  br label %137

137:                                              ; preds = %112, %135
  %138 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8
  %139 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %139, align 8
  %141 = icmp eq %"class.std::__1::unique_ptr.20"* %140, null
  br i1 %141, label %162, label %142

142:                                              ; preds = %137
  %143 = bitcast %"class.std::__1::unique_ptr.20"* %140 to i8*
  %144 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 1
  %145 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %144, align 8
  %146 = icmp eq %"class.std::__1::unique_ptr.20"* %145, %140
  br i1 %146, label %160, label %147

147:                                              ; preds = %142, %155
  %148 = phi %"class.std::__1::unique_ptr.20"* [ %149, %155 ], [ %145, %142 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %148, i64 -1
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %149, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %150, align 8
  store %"class.webrtc::RefinedFilterUpdateGain"* null, %"class.webrtc::RefinedFilterUpdateGain"** %150, align 8
  %152 = icmp eq %"class.webrtc::RefinedFilterUpdateGain"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  tail call void @_ZN6webrtc23RefinedFilterUpdateGainD1Ev(%"class.webrtc::RefinedFilterUpdateGain"* nonnull %151) #15
  %154 = bitcast %"class.webrtc::RefinedFilterUpdateGain"* %151 to i8*
  tail call void @_ZdlPv(i8* %154) #17
  br label %155

155:                                              ; preds = %153, %147
  %156 = icmp eq %"class.std::__1::unique_ptr.20"* %149, %140
  br i1 %156, label %157, label %147

157:                                              ; preds = %155
  %158 = bitcast %"class.std::__1::vector.18"* %138 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %142
  %161 = phi i8* [ %159, %157 ], [ %143, %142 ]
  store %"class.std::__1::unique_ptr.20"* %140, %"class.std::__1::unique_ptr.20"** %144, align 8
  tail call void @_ZdlPv(i8* %161) #17
  br label %162

162:                                              ; preds = %137, %160
  %163 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %164, align 8
  %166 = icmp eq %"class.std::__1::unique_ptr"* %165, null
  br i1 %166, label %187, label %167

167:                                              ; preds = %162
  %168 = bitcast %"class.std::__1::unique_ptr"* %165 to i8*
  %169 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 1
  %170 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %169, align 8
  %171 = icmp eq %"class.std::__1::unique_ptr"* %170, %165
  br i1 %171, label %185, label %172

172:                                              ; preds = %167, %180
  %173 = phi %"class.std::__1::unique_ptr"* [ %174, %180 ], [ %170, %167 ]
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %173, i64 -1
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %175, align 8
  store %"class.webrtc::AdaptiveFirFilter"* null, %"class.webrtc::AdaptiveFirFilter"** %175, align 8
  %177 = icmp eq %"class.webrtc::AdaptiveFirFilter"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %172
  tail call void @_ZN6webrtc17AdaptiveFirFilterD1Ev(%"class.webrtc::AdaptiveFirFilter"* nonnull %176) #15
  %179 = bitcast %"class.webrtc::AdaptiveFirFilter"* %176 to i8*
  tail call void @_ZdlPv(i8* %179) #17
  br label %180

180:                                              ; preds = %178, %172
  %181 = icmp eq %"class.std::__1::unique_ptr"* %174, %165
  br i1 %181, label %182, label %172

182:                                              ; preds = %180
  %183 = bitcast %"class.std::__1::vector"* %163 to i8**
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %182, %167
  %186 = phi i8* [ %184, %182 ], [ %168, %167 ]
  store %"class.std::__1::unique_ptr"* %165, %"class.std::__1::unique_ptr"** %169, align 8
  tail call void @_ZdlPv(i8* %186) #17
  br label %187

187:                                              ; preds = %162, %185
  %188 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6
  %189 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 0, i32 0, i32 0
  %190 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %189, align 8
  %191 = icmp eq %"class.std::__1::unique_ptr"* %190, null
  br i1 %191, label %212, label %192

192:                                              ; preds = %187
  %193 = bitcast %"class.std::__1::unique_ptr"* %190 to i8*
  %194 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6, i32 0, i32 1
  %195 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %194, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr"* %195, %190
  br i1 %196, label %210, label %197

197:                                              ; preds = %192, %205
  %198 = phi %"class.std::__1::unique_ptr"* [ %199, %205 ], [ %195, %192 ]
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 -1
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %199, i64 0, i32 0, i32 0, i32 0
  %201 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %200, align 8
  store %"class.webrtc::AdaptiveFirFilter"* null, %"class.webrtc::AdaptiveFirFilter"** %200, align 8
  %202 = icmp eq %"class.webrtc::AdaptiveFirFilter"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %197
  tail call void @_ZN6webrtc17AdaptiveFirFilterD1Ev(%"class.webrtc::AdaptiveFirFilter"* nonnull %201) #15
  %204 = bitcast %"class.webrtc::AdaptiveFirFilter"* %201 to i8*
  tail call void @_ZdlPv(i8* %204) #17
  br label %205

205:                                              ; preds = %203, %197
  %206 = icmp eq %"class.std::__1::unique_ptr"* %199, %190
  br i1 %206, label %207, label %197

207:                                              ; preds = %205
  %208 = bitcast %"class.std::__1::vector"* %188 to i8**
  %209 = load i8*, i8** %208, align 8
  br label %210

210:                                              ; preds = %207, %192
  %211 = phi i8* [ %209, %207 ], [ %193, %192 ]
  store %"class.std::__1::unique_ptr"* %190, %"class.std::__1::unique_ptr"** %194, align 8
  tail call void @_ZdlPv(i8* %211) #17
  br label %212

212:                                              ; preds = %187, %210
  %213 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN6webrtc8OouraFftD1Ev(%"class.webrtc::OouraFft"* %213) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10Subtractor20HandleEchoPathChangeERKNS_19EchoPathVariabilityE(%"class.webrtc::Subtractor"*, %"struct.webrtc::EchoPathVariability"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::EchoPathVariability", %"struct.webrtc::EchoPathVariability"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 2
  %16 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %15 to i8*
  %17 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 3
  %18 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %17 to i8*
  %19 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %15, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %17, i64 0, i32 0
  br label %21

21:                                               ; preds = %21, %10
  %22 = phi i64 [ 0, %10 ], [ %62, %21 ]
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %22, i32 0, i32 0, i32 0
  %25 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %24, align 8
  tail call void @_ZN6webrtc17AdaptiveFirFilter20HandleEchoPathChangeEv(%"class.webrtc::AdaptiveFirFilter"* %25) #15
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %22, i32 0, i32 0, i32 0
  %28 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %27, align 8
  tail call void @_ZN6webrtc17AdaptiveFirFilter20HandleEchoPathChangeEv(%"class.webrtc::AdaptiveFirFilter"* %28) #15
  %29 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %13, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %29, i64 %22, i32 0, i32 0, i32 0
  %31 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %30, align 8
  tail call void @_ZN6webrtc23RefinedFilterUpdateGain20HandleEchoPathChangeERKNS_19EchoPathVariabilityE(%"class.webrtc::RefinedFilterUpdateGain"* %31, %"struct.webrtc::EchoPathVariability"* dereferenceable(12) %1) #15
  %32 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %14, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %32, i64 %22, i32 0, i32 0, i32 0
  %34 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %33, align 8
  tail call void @_ZN6webrtc22CoarseFilterUpdateGain20HandleEchoPathChangeEv(%"class.webrtc::CoarseFilterUpdateGain"* %34) #15
  %35 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %13, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %35, i64 %22, i32 0, i32 0, i32 0
  %37 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %36, align 8
  %38 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %37, i64 0, i32 4
  %39 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %16, i64 32, i1 false) #15
  %40 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %37, i64 0, i32 3
  %41 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %16, i64 32, i1 false) #15
  %42 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %37, i64 0, i32 5
  %43 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %41, i64 32, i1 false) #15
  %44 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %37, i64 0, i32 10
  store i32 0, i32* %44, align 8
  %45 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %14, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %45, i64 %22, i32 0, i32 0, i32 0
  %47 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %46, align 8
  %48 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %47, i64 0, i32 1
  %49 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %18, i64 16, i1 false) #15
  %50 = bitcast %"class.webrtc::CoarseFilterUpdateGain"* %47 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %18, i64 16, i1 false) #15
  %51 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %47, i64 0, i32 2
  %52 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %50, i64 16, i1 false) #15
  %53 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %47, i64 0, i32 7
  store i32 0, i32* %53, align 8
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %22, i32 0, i32 0, i32 0
  %56 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %55, align 8
  %57 = load i64, i64* %19, align 8
  tail call void @_ZN6webrtc17AdaptiveFirFilter17SetSizePartitionsEmb(%"class.webrtc::AdaptiveFirFilter"* %56, i64 %57, i1 zeroext true) #15
  %58 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 %22, i32 0, i32 0, i32 0
  %60 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %59, align 8
  %61 = load i64, i64* %20, align 8
  tail call void @_ZN6webrtc17AdaptiveFirFilter17SetSizePartitionsEmb(%"class.webrtc::AdaptiveFirFilter"* %60, i64 %61, i1 zeroext true) #15
  %62 = add nuw i64 %22, 1
  %63 = load i64, i64* %7, align 8
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %21, label %65

65:                                               ; preds = %21, %6, %2
  %66 = getelementptr inbounds %"struct.webrtc::EchoPathVariability", %"struct.webrtc::EchoPathVariability"* %1, i64 0, i32 0
  %67 = load i8, i8* %66, align 4, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 0
  br label %75

75:                                               ; preds = %73, %75
  %76 = phi i64 [ 0, %73 ], [ %80, %75 ]
  %77 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %74, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %77, i64 %76, i32 0, i32 0, i32 0
  %79 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %78, align 8
  tail call void @_ZN6webrtc23RefinedFilterUpdateGain20HandleEchoPathChangeERKNS_19EchoPathVariabilityE(%"class.webrtc::RefinedFilterUpdateGain"* %79, %"struct.webrtc::EchoPathVariability"* dereferenceable(12) %1) #15
  %80 = add nuw i64 %76, 1
  %81 = load i64, i64* %70, align 8
  %82 = icmp ult i64 %80, %81
  br i1 %82, label %75, label %83

83:                                               ; preds = %75, %69, %65
  ret void
}

declare void @_ZN6webrtc23RefinedFilterUpdateGain20HandleEchoPathChangeERKNS_19EchoPathVariabilityE(%"class.webrtc::RefinedFilterUpdateGain"*, %"struct.webrtc::EchoPathVariability"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10Subtractor16ExitInitialStateEv(%"class.webrtc::Subtractor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2
  %8 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter"* %7 to i8*
  %9 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 0
  %10 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 1
  %11 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %10 to i8*
  %12 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Filter"* %7, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %10, i64 0, i32 0
  br label %17

16:                                               ; preds = %17, %1
  ret void

17:                                               ; preds = %5, %17
  %18 = phi i64 [ 0, %5 ], [ %50, %17 ]
  %19 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %6, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %19, i64 %18, i32 0, i32 0, i32 0
  %21 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %21, i64 0, i32 3
  %23 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %21, i64 0, i32 5
  %24 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %23 to i8*
  %25 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 32, i1 false) #15
  %26 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %21, i64 0, i32 4
  %27 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %8, i64 32, i1 false) #15
  %28 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %21, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.webrtc::RefinedFilterUpdateGain", %"class.webrtc::RefinedFilterUpdateGain"* %21, i64 0, i32 10
  store i32 %29, i32* %30, align 8
  %31 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %9, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %31, i64 %18, i32 0, i32 0, i32 0
  %33 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %32, align 8
  %34 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %33, i64 0, i32 2
  %35 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %34 to i8*
  %36 = bitcast %"class.webrtc::CoarseFilterUpdateGain"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #15
  %37 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %33, i64 0, i32 1
  %38 = bitcast %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %11, i64 16, i1 false) #15
  %39 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %33, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.webrtc::CoarseFilterUpdateGain", %"class.webrtc::CoarseFilterUpdateGain"* %33, i64 0, i32 7
  store i32 %40, i32* %41, align 8
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 %18, i32 0, i32 0, i32 0
  %44 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %43, align 8
  %45 = load i64, i64* %13, align 8
  tail call void @_ZN6webrtc17AdaptiveFirFilter17SetSizePartitionsEmb(%"class.webrtc::AdaptiveFirFilter"* %44, i64 %45, i1 zeroext false) #15
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %18, i32 0, i32 0, i32 0
  %48 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %47, align 8
  %49 = load i64, i64* %15, align 8
  tail call void @_ZN6webrtc17AdaptiveFirFilter17SetSizePartitionsEmb(%"class.webrtc::AdaptiveFirFilter"* %48, i64 %49, i1 zeroext false) #15
  %50 = add nuw i64 %18, 1
  %51 = load i64, i64* %2, align 8
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %17, label %16
}

declare void @_ZN6webrtc17AdaptiveFirFilter17SetSizePartitionsEmb(%"class.webrtc::AdaptiveFirFilter"*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10Subtractor7ProcessERKNS_12RenderBufferERKNSt3__16vectorINS5_IfNS4_9allocatorIfEEEENS6_IS8_EEEERKNS_20RenderSignalAnalyzerERKNS_8AecStateEN3rtc9ArrayViewINS_16SubtractorOutputELln4711EEE(%"class.webrtc::Subtractor"*, %"class.webrtc::RenderBuffer"* dereferenceable(32), %"class.std::__1::vector.85"* nocapture readonly dereferenceable(24), %"class.webrtc::RenderSignalAnalyzer"* dereferenceable(528), %"class.webrtc::AecState"* nocapture readonly dereferenceable(3016), %"class.rtc::ArrayView"* nocapture readonly byval(%"class.rtc::ArrayView") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.std::__1::array.242", align 4
  %8 = alloca %"struct.std::__1::array.242", align 4
  %9 = alloca %"struct.std::__1::array", align 4
  %10 = alloca %"struct.std::__1::array", align 4
  %11 = alloca %"struct.webrtc::FftData", align 4
  %12 = alloca %"struct.webrtc::FftData", align 4
  %13 = bitcast %"struct.webrtc::FftData"* %12 to i8*
  %14 = alloca %"struct.std::__1::array", align 4
  %15 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %17, align 8
  %19 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %18, i64 0, i32 7
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 7, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %24, i64 0, i32 7
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %20, %26
  %28 = bitcast %"struct.std::__1::array"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %28) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 -1, i64 260, i1 false)
  %29 = bitcast %"struct.std::__1::array"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %29) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -1, i64 260, i1 false)
  %30 = select i1 %27, %"struct.std::__1::array"* %9, %"struct.std::__1::array"* %10
  %31 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %17, align 8
  %32 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %31, i64 0, i32 7
  %33 = load i64, i64* %32, align 8
  br i1 %27, label %34, label %35

34:                                               ; preds = %6
  call void @_ZNK6webrtc12RenderBuffer11SpectralSumEmPNSt3__15arrayIfLm65EEE(%"class.webrtc::RenderBuffer"* %1, i64 %33, %"struct.std::__1::array"* nonnull %9) #15
  br label %42

35:                                               ; preds = %6
  %36 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %23, align 8
  %37 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %36, i64 0, i32 7
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %33, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  call void @_ZNK6webrtc12RenderBuffer12SpectralSumsEmmPNSt3__15arrayIfLm65EEES4_(%"class.webrtc::RenderBuffer"* %1, i64 %38, i64 %33, %"struct.std::__1::array"* nonnull %30, %"struct.std::__1::array"* nonnull %9) #15
  br label %42

41:                                               ; preds = %35
  call void @_ZNK6webrtc12RenderBuffer12SpectralSumsEmmPNSt3__15arrayIfLm65EEES4_(%"class.webrtc::RenderBuffer"* %1, i64 %33, i64 %38, %"struct.std::__1::array"* nonnull %9, %"struct.std::__1::array"* nonnull %30) #15
  br label %42

42:                                               ; preds = %40, %41, %34
  %43 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %386, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %5, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.85", %"class.std::__1::vector.85"* %2, i64 0, i32 0, i32 0
  %49 = bitcast %"struct.webrtc::FftData"* %11 to i8*
  %50 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 0
  %51 = bitcast %"struct.std::__1::array.242"* %7 to i8*
  %52 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 2
  %53 = bitcast float* %52 to i8*
  %54 = bitcast %"struct.webrtc::FftData"* %12 to i32*
  %55 = bitcast %"struct.std::__1::array.242"* %7 to i32*
  %56 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 64
  %57 = bitcast float* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 1
  %59 = bitcast float* %58 to i32*
  %60 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 0
  %62 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 64
  %63 = bitcast %"struct.std::__1::array.242"* %8 to i8*
  %64 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 2
  %65 = bitcast float* %64 to i8*
  %66 = bitcast %"struct.std::__1::array.242"* %8 to i32*
  %67 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 1
  %68 = bitcast float* %67 to i32*
  %69 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 0
  %70 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 64
  %71 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 10, i32 0, i32 0
  %72 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 14, i32 0, i32 0
  %73 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 2
  %74 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 12, i32 0, i32 0
  %75 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 5
  %76 = bitcast %"struct.std::__1::array"* %14 to i8*
  %77 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 13, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %14, i64 0, i32 0, i64 0
  %79 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 8, i32 0, i32 0
  %80 = getelementptr inbounds %"class.webrtc::AecState", %"class.webrtc::AecState"* %4, i64 0, i32 15
  %81 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 11, i32 0, i32 0
  %82 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 9, i32 0, i32 0
  %83 = getelementptr inbounds %"class.webrtc::Subtractor", %"class.webrtc::Subtractor"* %0, i64 0, i32 3, i32 2, i32 6
  %84 = bitcast %"struct.webrtc::FftData"* %12 to i8*
  %85 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 64
  %86 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 64
  %87 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 65
  %88 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 64
  %89 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 1
  %90 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 64
  %91 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 65
  %92 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 1
  %93 = bitcast float* %92 to <4 x i32>*
  %94 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 1
  %95 = bitcast float* %94 to <4 x i32>*
  %96 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 2
  %97 = bitcast float* %96 to <8 x i32>*
  %98 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 5
  %99 = bitcast float* %98 to <4 x i32>*
  %100 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 5
  %101 = bitcast float* %100 to <4 x i32>*
  %102 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 10
  %103 = bitcast float* %102 to <8 x i32>*
  %104 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 9
  %105 = bitcast float* %104 to <4 x i32>*
  %106 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 9
  %107 = bitcast float* %106 to <4 x i32>*
  %108 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 18
  %109 = bitcast float* %108 to <8 x i32>*
  %110 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 13
  %111 = bitcast float* %110 to <4 x i32>*
  %112 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 13
  %113 = bitcast float* %112 to <4 x i32>*
  %114 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 26
  %115 = bitcast float* %114 to <8 x i32>*
  %116 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 17
  %117 = bitcast float* %116 to <4 x i32>*
  %118 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 17
  %119 = bitcast float* %118 to <4 x i32>*
  %120 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 34
  %121 = bitcast float* %120 to <8 x i32>*
  %122 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 21
  %123 = bitcast float* %122 to <4 x i32>*
  %124 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 21
  %125 = bitcast float* %124 to <4 x i32>*
  %126 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 42
  %127 = bitcast float* %126 to <8 x i32>*
  %128 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 25
  %129 = bitcast float* %128 to <4 x i32>*
  %130 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 25
  %131 = bitcast float* %130 to <4 x i32>*
  %132 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 50
  %133 = bitcast float* %132 to <8 x i32>*
  %134 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 29
  %135 = bitcast float* %134 to <4 x i32>*
  %136 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 29
  %137 = bitcast float* %136 to <4 x i32>*
  %138 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 58
  %139 = bitcast float* %138 to <8 x i32>*
  %140 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 33
  %141 = bitcast float* %140 to <4 x i32>*
  %142 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 33
  %143 = bitcast float* %142 to <4 x i32>*
  %144 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 66
  %145 = bitcast float* %144 to <8 x i32>*
  %146 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 37
  %147 = bitcast float* %146 to <4 x i32>*
  %148 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 37
  %149 = bitcast float* %148 to <4 x i32>*
  %150 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 74
  %151 = bitcast float* %150 to <8 x i32>*
  %152 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 41
  %153 = bitcast float* %152 to <4 x i32>*
  %154 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 41
  %155 = bitcast float* %154 to <4 x i32>*
  %156 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 82
  %157 = bitcast float* %156 to <8 x i32>*
  %158 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 45
  %159 = bitcast float* %158 to <4 x i32>*
  %160 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 45
  %161 = bitcast float* %160 to <4 x i32>*
  %162 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 90
  %163 = bitcast float* %162 to <8 x i32>*
  %164 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 49
  %165 = bitcast float* %164 to <4 x i32>*
  %166 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 49
  %167 = bitcast float* %166 to <4 x i32>*
  %168 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 98
  %169 = bitcast float* %168 to <8 x i32>*
  %170 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 53
  %171 = bitcast float* %170 to <4 x i32>*
  %172 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 53
  %173 = bitcast float* %172 to <4 x i32>*
  %174 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 106
  %175 = bitcast float* %174 to <8 x i32>*
  %176 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 57
  %177 = bitcast float* %176 to <4 x i32>*
  %178 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 57
  %179 = bitcast float* %178 to <4 x i32>*
  %180 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 114
  %181 = bitcast float* %180 to <8 x i32>*
  %182 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 61
  %183 = bitcast float* %182 to i32*
  %184 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 122
  %185 = bitcast float* %184 to i32*
  %186 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 61
  %187 = bitcast float* %186 to i32*
  %188 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 123
  %189 = bitcast float* %188 to i32*
  %190 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 62
  %191 = bitcast float* %190 to i32*
  %192 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 124
  %193 = bitcast float* %192 to i32*
  %194 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 62
  %195 = bitcast float* %194 to i32*
  %196 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 125
  %197 = bitcast float* %196 to i32*
  %198 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 63
  %199 = bitcast float* %198 to i32*
  %200 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 126
  %201 = bitcast float* %200 to i32*
  %202 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 63
  %203 = bitcast float* %202 to i32*
  %204 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 127
  %205 = bitcast float* %204 to i32*
  %206 = bitcast %"struct.std::__1::array.242"* %89 to %"struct.webrtc::SubtractorOutput"*
  %207 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 64
  %208 = bitcast float* %207 to <4 x float>*
  %209 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 68
  %210 = bitcast float* %209 to <4 x float>*
  %211 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 72
  %212 = bitcast float* %211 to <4 x float>*
  %213 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 76
  %214 = bitcast float* %213 to <4 x float>*
  %215 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 80
  %216 = bitcast float* %215 to <4 x float>*
  %217 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 84
  %218 = bitcast float* %217 to <4 x float>*
  %219 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 88
  %220 = bitcast float* %219 to <4 x float>*
  %221 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 92
  %222 = bitcast float* %221 to <4 x float>*
  %223 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 96
  %224 = bitcast float* %223 to <4 x float>*
  %225 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 100
  %226 = bitcast float* %225 to <4 x float>*
  %227 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 104
  %228 = bitcast float* %227 to <4 x float>*
  %229 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 108
  %230 = bitcast float* %229 to <4 x float>*
  %231 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 112
  %232 = bitcast float* %231 to <4 x float>*
  %233 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 116
  %234 = bitcast float* %233 to <4 x float>*
  %235 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 120
  %236 = bitcast float* %235 to <4 x float>*
  %237 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 124
  %238 = bitcast float* %237 to <4 x float>*
  %239 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 1
  %240 = bitcast float* %239 to <4 x i32>*
  %241 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 1
  %242 = bitcast float* %241 to <4 x i32>*
  %243 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 2
  %244 = bitcast float* %243 to <8 x i32>*
  %245 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 5
  %246 = bitcast float* %245 to <4 x i32>*
  %247 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 5
  %248 = bitcast float* %247 to <4 x i32>*
  %249 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 10
  %250 = bitcast float* %249 to <8 x i32>*
  %251 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 9
  %252 = bitcast float* %251 to <4 x i32>*
  %253 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 9
  %254 = bitcast float* %253 to <4 x i32>*
  %255 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 18
  %256 = bitcast float* %255 to <8 x i32>*
  %257 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 13
  %258 = bitcast float* %257 to <4 x i32>*
  %259 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 13
  %260 = bitcast float* %259 to <4 x i32>*
  %261 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 26
  %262 = bitcast float* %261 to <8 x i32>*
  %263 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 17
  %264 = bitcast float* %263 to <4 x i32>*
  %265 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 17
  %266 = bitcast float* %265 to <4 x i32>*
  %267 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 34
  %268 = bitcast float* %267 to <8 x i32>*
  %269 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 21
  %270 = bitcast float* %269 to <4 x i32>*
  %271 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 21
  %272 = bitcast float* %271 to <4 x i32>*
  %273 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 42
  %274 = bitcast float* %273 to <8 x i32>*
  %275 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 25
  %276 = bitcast float* %275 to <4 x i32>*
  %277 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 25
  %278 = bitcast float* %277 to <4 x i32>*
  %279 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 50
  %280 = bitcast float* %279 to <8 x i32>*
  %281 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 29
  %282 = bitcast float* %281 to <4 x i32>*
  %283 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 29
  %284 = bitcast float* %283 to <4 x i32>*
  %285 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 58
  %286 = bitcast float* %285 to <8 x i32>*
  %287 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 33
  %288 = bitcast float* %287 to <4 x i32>*
  %289 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 33
  %290 = bitcast float* %289 to <4 x i32>*
  %291 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 66
  %292 = bitcast float* %291 to <8 x i32>*
  %293 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 37
  %294 = bitcast float* %293 to <4 x i32>*
  %295 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 37
  %296 = bitcast float* %295 to <4 x i32>*
  %297 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 74
  %298 = bitcast float* %297 to <8 x i32>*
  %299 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 41
  %300 = bitcast float* %299 to <4 x i32>*
  %301 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 41
  %302 = bitcast float* %301 to <4 x i32>*
  %303 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 82
  %304 = bitcast float* %303 to <8 x i32>*
  %305 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 45
  %306 = bitcast float* %305 to <4 x i32>*
  %307 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 45
  %308 = bitcast float* %307 to <4 x i32>*
  %309 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 90
  %310 = bitcast float* %309 to <8 x i32>*
  %311 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 49
  %312 = bitcast float* %311 to <4 x i32>*
  %313 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 49
  %314 = bitcast float* %313 to <4 x i32>*
  %315 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 98
  %316 = bitcast float* %315 to <8 x i32>*
  %317 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 53
  %318 = bitcast float* %317 to <4 x i32>*
  %319 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 53
  %320 = bitcast float* %319 to <4 x i32>*
  %321 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 106
  %322 = bitcast float* %321 to <8 x i32>*
  %323 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 57
  %324 = bitcast float* %323 to <4 x i32>*
  %325 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 57
  %326 = bitcast float* %325 to <4 x i32>*
  %327 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 114
  %328 = bitcast float* %327 to <8 x i32>*
  %329 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 61
  %330 = bitcast float* %329 to i32*
  %331 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 122
  %332 = bitcast float* %331 to i32*
  %333 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 61
  %334 = bitcast float* %333 to i32*
  %335 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 123
  %336 = bitcast float* %335 to i32*
  %337 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 62
  %338 = bitcast float* %337 to i32*
  %339 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 124
  %340 = bitcast float* %339 to i32*
  %341 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 62
  %342 = bitcast float* %341 to i32*
  %343 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 125
  %344 = bitcast float* %343 to i32*
  %345 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 0, i32 0, i64 63
  %346 = bitcast float* %345 to i32*
  %347 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 126
  %348 = bitcast float* %347 to i32*
  %349 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %12, i64 0, i32 1, i32 0, i64 63
  %350 = bitcast float* %349 to i32*
  %351 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 127
  %352 = bitcast float* %351 to i32*
  %353 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 1, i32 0, i64 0
  %354 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 64
  %355 = bitcast float* %354 to <4 x float>*
  %356 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 68
  %357 = bitcast float* %356 to <4 x float>*
  %358 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 72
  %359 = bitcast float* %358 to <4 x float>*
  %360 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 76
  %361 = bitcast float* %360 to <4 x float>*
  %362 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 80
  %363 = bitcast float* %362 to <4 x float>*
  %364 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 84
  %365 = bitcast float* %364 to <4 x float>*
  %366 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 88
  %367 = bitcast float* %366 to <4 x float>*
  %368 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 92
  %369 = bitcast float* %368 to <4 x float>*
  %370 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 96
  %371 = bitcast float* %370 to <4 x float>*
  %372 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 100
  %373 = bitcast float* %372 to <4 x float>*
  %374 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 104
  %375 = bitcast float* %374 to <4 x float>*
  %376 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 108
  %377 = bitcast float* %376 to <4 x float>*
  %378 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 112
  %379 = bitcast float* %378 to <4 x float>*
  %380 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 116
  %381 = bitcast float* %380 to <4 x float>*
  %382 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 120
  %383 = bitcast float* %382 to <4 x float>*
  %384 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 124
  %385 = bitcast float* %384 to <4 x float>*
  br label %387

386:                                              ; preds = %1399, %42
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %28) #15
  ret void

387:                                              ; preds = %46, %1399
  %388 = phi i64 [ 0, %46 ], [ %1531, %1399 ]
  %389 = load %"struct.webrtc::SubtractorOutput"*, %"struct.webrtc::SubtractorOutput"** %47, align 8
  %390 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %48, align 8
  %391 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %390, i64 %388, i32 0, i32 0
  %392 = load float*, float** %391, align 8
  %393 = ptrtoint float* %392 to i64
  %394 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %390, i64 %388, i32 0, i32 1
  %395 = bitcast float** %394 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = sub i64 %396, %393
  %398 = icmp eq i64 %397, 0
  call void @llvm.lifetime.start.p0i8(i64 520, i8* nonnull %49) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 -1, i64 520, i1 false)
  %399 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2
  call void @llvm.lifetime.start.p0i8(i64 520, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -1, i64 520, i1 false)
  %400 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %400, i64 %388, i32 0, i32 0, i32 0
  %402 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %401, align 8
  call void @_ZNK6webrtc17AdaptiveFirFilter6FilterERKNS_12RenderBufferEPNS_7FftDataE(%"class.webrtc::AdaptiveFirFilter"* %402, %"class.webrtc::RenderBuffer"* dereferenceable(32) %1, %"struct.webrtc::FftData"* nonnull %12) #15
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %51) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %53, i8 -1, i64 504, i1 false) #15
  %403 = load i32, i32* %54, align 4
  store i32 %403, i32* %55, align 4
  %404 = load i32, i32* %57, align 4
  store i32 %404, i32* %59, align 4
  %405 = load <4 x i32>, <4 x i32>* %93, align 4
  %406 = load <4 x i32>, <4 x i32>* %95, align 4
  %407 = shufflevector <4 x i32> %405, <4 x i32> %406, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %407, <8 x i32>* %97, align 4
  %408 = load <4 x i32>, <4 x i32>* %99, align 4
  %409 = load <4 x i32>, <4 x i32>* %101, align 4
  %410 = shufflevector <4 x i32> %408, <4 x i32> %409, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %410, <8 x i32>* %103, align 4
  %411 = load <4 x i32>, <4 x i32>* %105, align 4
  %412 = load <4 x i32>, <4 x i32>* %107, align 4
  %413 = shufflevector <4 x i32> %411, <4 x i32> %412, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %413, <8 x i32>* %109, align 4
  %414 = load <4 x i32>, <4 x i32>* %111, align 4
  %415 = load <4 x i32>, <4 x i32>* %113, align 4
  %416 = shufflevector <4 x i32> %414, <4 x i32> %415, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %416, <8 x i32>* %115, align 4
  %417 = load <4 x i32>, <4 x i32>* %117, align 4
  %418 = load <4 x i32>, <4 x i32>* %119, align 4
  %419 = shufflevector <4 x i32> %417, <4 x i32> %418, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %419, <8 x i32>* %121, align 4
  %420 = load <4 x i32>, <4 x i32>* %123, align 4
  %421 = load <4 x i32>, <4 x i32>* %125, align 4
  %422 = shufflevector <4 x i32> %420, <4 x i32> %421, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %422, <8 x i32>* %127, align 4
  %423 = load <4 x i32>, <4 x i32>* %129, align 4
  %424 = load <4 x i32>, <4 x i32>* %131, align 4
  %425 = shufflevector <4 x i32> %423, <4 x i32> %424, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %425, <8 x i32>* %133, align 4
  %426 = load <4 x i32>, <4 x i32>* %135, align 4
  %427 = load <4 x i32>, <4 x i32>* %137, align 4
  %428 = shufflevector <4 x i32> %426, <4 x i32> %427, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %428, <8 x i32>* %139, align 4
  %429 = load <4 x i32>, <4 x i32>* %141, align 4
  %430 = load <4 x i32>, <4 x i32>* %143, align 4
  %431 = shufflevector <4 x i32> %429, <4 x i32> %430, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %431, <8 x i32>* %145, align 4
  %432 = load <4 x i32>, <4 x i32>* %147, align 4
  %433 = load <4 x i32>, <4 x i32>* %149, align 4
  %434 = shufflevector <4 x i32> %432, <4 x i32> %433, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %434, <8 x i32>* %151, align 4
  %435 = load <4 x i32>, <4 x i32>* %153, align 4
  %436 = load <4 x i32>, <4 x i32>* %155, align 4
  %437 = shufflevector <4 x i32> %435, <4 x i32> %436, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %437, <8 x i32>* %157, align 4
  %438 = load <4 x i32>, <4 x i32>* %159, align 4
  %439 = load <4 x i32>, <4 x i32>* %161, align 4
  %440 = shufflevector <4 x i32> %438, <4 x i32> %439, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %440, <8 x i32>* %163, align 4
  %441 = load <4 x i32>, <4 x i32>* %165, align 4
  %442 = load <4 x i32>, <4 x i32>* %167, align 4
  %443 = shufflevector <4 x i32> %441, <4 x i32> %442, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %443, <8 x i32>* %169, align 4
  %444 = load <4 x i32>, <4 x i32>* %171, align 4
  %445 = load <4 x i32>, <4 x i32>* %173, align 4
  %446 = shufflevector <4 x i32> %444, <4 x i32> %445, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %446, <8 x i32>* %175, align 4
  %447 = load <4 x i32>, <4 x i32>* %177, align 4
  %448 = load <4 x i32>, <4 x i32>* %179, align 4
  %449 = shufflevector <4 x i32> %447, <4 x i32> %448, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %449, <8 x i32>* %181, align 4
  %450 = load i32, i32* %183, align 4
  store i32 %450, i32* %185, align 4
  %451 = load i32, i32* %187, align 4
  store i32 %451, i32* %189, align 4
  %452 = load i32, i32* %191, align 4
  store i32 %452, i32* %193, align 4
  %453 = load i32, i32* %195, align 4
  store i32 %453, i32* %197, align 4
  %454 = load i32, i32* %199, align 4
  store i32 %454, i32* %201, align 4
  %455 = load i32, i32* %203, align 4
  store i32 %455, i32* %205, align 4
  %456 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388
  %457 = ashr exact i64 %397, 2
  %458 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 4
  %459 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3
  %460 = select i1 %398, float* null, float* %392
  call void @_ZNK6webrtc8OouraFft10InverseFftEPf(%"class.webrtc::OouraFft"* %60, float* nonnull %61) #15
  %461 = getelementptr inbounds float, float* %460, i64 %457
  br i1 %398, label %640, label %462

462:                                              ; preds = %387
  %463 = getelementptr inbounds %"struct.std::__1::array.223", %"struct.std::__1::array.223"* %399, i64 0, i32 0, i64 0
  %464 = getelementptr float, float* %460, i64 -1
  %465 = getelementptr float, float* %464, i64 %457
  %466 = ptrtoint float* %465 to i64
  %467 = sub i64 %466, %393
  %468 = lshr i64 %467, 2
  %469 = add nuw nsw i64 %468, 1
  %470 = icmp ult i64 %469, 8
  br i1 %470, label %575, label %471

471:                                              ; preds = %462
  %472 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 0
  %473 = getelementptr float, float* %460, i64 -1
  %474 = getelementptr float, float* %473, i64 %457
  %475 = ptrtoint float* %474 to i64
  %476 = sub i64 %475, %393
  %477 = lshr i64 %476, 2
  %478 = add nuw nsw i64 %477, 1
  %479 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %478
  %480 = getelementptr float, float* %392, i64 1
  %481 = getelementptr float, float* %480, i64 %477
  %482 = getelementptr float, float* %91, i64 %477
  %483 = icmp ult float* %472, %481
  %484 = icmp ult float* %392, %479
  %485 = and i1 %483, %484
  %486 = icmp ult float* %472, %482
  %487 = icmp ult float* %90, %479
  %488 = and i1 %486, %487
  %489 = or i1 %485, %488
  br i1 %489, label %575, label %490

490:                                              ; preds = %471
  %491 = and i64 %469, 9223372036854775800
  %492 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %491
  %493 = getelementptr float, float* %62, i64 %491
  %494 = getelementptr float, float* %392, i64 %491
  %495 = add nsw i64 %491, -8
  %496 = lshr exact i64 %495, 3
  %497 = add nuw nsw i64 %496, 1
  %498 = and i64 %497, 1
  %499 = icmp eq i64 %495, 0
  br i1 %499, label %549, label %500

500:                                              ; preds = %490
  %501 = sub nuw nsw i64 %497, %498
  br label %502

502:                                              ; preds = %502, %500
  %503 = phi i64 [ 0, %500 ], [ %546, %502 ]
  %504 = phi i64 [ %501, %500 ], [ %547, %502 ]
  %505 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %503
  %506 = getelementptr float, float* %62, i64 %503
  %507 = getelementptr float, float* %392, i64 %503
  %508 = bitcast float* %507 to <4 x float>*
  %509 = load <4 x float>, <4 x float>* %508, align 4, !alias.scope !3
  %510 = getelementptr float, float* %507, i64 4
  %511 = bitcast float* %510 to <4 x float>*
  %512 = load <4 x float>, <4 x float>* %511, align 4, !alias.scope !3
  %513 = bitcast float* %506 to <4 x float>*
  %514 = load <4 x float>, <4 x float>* %513, align 4, !alias.scope !6
  %515 = getelementptr float, float* %506, i64 4
  %516 = bitcast float* %515 to <4 x float>*
  %517 = load <4 x float>, <4 x float>* %516, align 4, !alias.scope !6
  %518 = fmul <4 x float> %514, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %519 = fmul <4 x float> %517, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %520 = fsub <4 x float> %509, %518
  %521 = fsub <4 x float> %512, %519
  %522 = bitcast float* %505 to <4 x float>*
  store <4 x float> %520, <4 x float>* %522, align 4, !alias.scope !8, !noalias !10
  %523 = getelementptr float, float* %505, i64 4
  %524 = bitcast float* %523 to <4 x float>*
  store <4 x float> %521, <4 x float>* %524, align 4, !alias.scope !8, !noalias !10
  %525 = or i64 %503, 8
  %526 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %525
  %527 = getelementptr float, float* %62, i64 %525
  %528 = getelementptr float, float* %392, i64 %525
  %529 = bitcast float* %528 to <4 x float>*
  %530 = load <4 x float>, <4 x float>* %529, align 4, !alias.scope !3
  %531 = getelementptr float, float* %528, i64 4
  %532 = bitcast float* %531 to <4 x float>*
  %533 = load <4 x float>, <4 x float>* %532, align 4, !alias.scope !3
  %534 = bitcast float* %527 to <4 x float>*
  %535 = load <4 x float>, <4 x float>* %534, align 4, !alias.scope !6
  %536 = getelementptr float, float* %527, i64 4
  %537 = bitcast float* %536 to <4 x float>*
  %538 = load <4 x float>, <4 x float>* %537, align 4, !alias.scope !6
  %539 = fmul <4 x float> %535, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %540 = fmul <4 x float> %538, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %541 = fsub <4 x float> %530, %539
  %542 = fsub <4 x float> %533, %540
  %543 = bitcast float* %526 to <4 x float>*
  store <4 x float> %541, <4 x float>* %543, align 4, !alias.scope !8, !noalias !10
  %544 = getelementptr float, float* %526, i64 4
  %545 = bitcast float* %544 to <4 x float>*
  store <4 x float> %542, <4 x float>* %545, align 4, !alias.scope !8, !noalias !10
  %546 = add i64 %503, 16
  %547 = add i64 %504, -2
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %502, !llvm.loop !11

549:                                              ; preds = %502, %490
  %550 = phi i64 [ 0, %490 ], [ %546, %502 ]
  %551 = icmp eq i64 %498, 0
  br i1 %551, label %573, label %552

552:                                              ; preds = %549
  %553 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %550
  %554 = getelementptr float, float* %62, i64 %550
  %555 = getelementptr float, float* %392, i64 %550
  %556 = bitcast float* %555 to <4 x float>*
  %557 = load <4 x float>, <4 x float>* %556, align 4, !alias.scope !3
  %558 = getelementptr float, float* %555, i64 4
  %559 = bitcast float* %558 to <4 x float>*
  %560 = load <4 x float>, <4 x float>* %559, align 4, !alias.scope !3
  %561 = bitcast float* %554 to <4 x float>*
  %562 = load <4 x float>, <4 x float>* %561, align 4, !alias.scope !6
  %563 = getelementptr float, float* %554, i64 4
  %564 = bitcast float* %563 to <4 x float>*
  %565 = load <4 x float>, <4 x float>* %564, align 4, !alias.scope !6
  %566 = fmul <4 x float> %562, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %567 = fmul <4 x float> %565, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %568 = fsub <4 x float> %557, %566
  %569 = fsub <4 x float> %560, %567
  %570 = bitcast float* %553 to <4 x float>*
  store <4 x float> %568, <4 x float>* %570, align 4, !alias.scope !8, !noalias !10
  %571 = getelementptr float, float* %553, i64 4
  %572 = bitcast float* %571 to <4 x float>*
  store <4 x float> %569, <4 x float>* %572, align 4, !alias.scope !8, !noalias !10
  br label %573

573:                                              ; preds = %549, %552
  %574 = icmp eq i64 %469, %491
  br i1 %574, label %640, label %575

575:                                              ; preds = %573, %471, %462
  %576 = phi float* [ %463, %471 ], [ %463, %462 ], [ %492, %573 ]
  %577 = phi float* [ %62, %471 ], [ %62, %462 ], [ %493, %573 ]
  %578 = phi float* [ %392, %471 ], [ %392, %462 ], [ %494, %573 ]
  %579 = ptrtoint float* %578 to i64
  %580 = getelementptr float, float* %460, i64 -1
  %581 = getelementptr float, float* %580, i64 %457
  %582 = ptrtoint float* %581 to i64
  %583 = sub i64 %582, %579
  %584 = lshr i64 %583, 2
  %585 = add nuw nsw i64 %584, 1
  %586 = and i64 %585, 3
  %587 = icmp eq i64 %586, 0
  br i1 %587, label %602, label %588

588:                                              ; preds = %575, %588
  %589 = phi float* [ %599, %588 ], [ %576, %575 ]
  %590 = phi float* [ %598, %588 ], [ %577, %575 ]
  %591 = phi float* [ %597, %588 ], [ %578, %575 ]
  %592 = phi i64 [ %600, %588 ], [ %586, %575 ]
  %593 = load float, float* %591, align 4
  %594 = load float, float* %590, align 4
  %595 = fmul float %594, 1.562500e-02
  %596 = fsub float %593, %595
  store float %596, float* %589, align 4
  %597 = getelementptr inbounds float, float* %591, i64 1
  %598 = getelementptr inbounds float, float* %590, i64 1
  %599 = getelementptr inbounds float, float* %589, i64 1
  %600 = add i64 %592, -1
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %602, label %588, !llvm.loop !13

602:                                              ; preds = %588, %575
  %603 = phi float* [ %576, %575 ], [ %599, %588 ]
  %604 = phi float* [ %577, %575 ], [ %598, %588 ]
  %605 = phi float* [ %578, %575 ], [ %597, %588 ]
  %606 = icmp ult i64 %583, 12
  br i1 %606, label %640, label %607

607:                                              ; preds = %602, %607
  %608 = phi float* [ %638, %607 ], [ %603, %602 ]
  %609 = phi float* [ %637, %607 ], [ %604, %602 ]
  %610 = phi float* [ %636, %607 ], [ %605, %602 ]
  %611 = load float, float* %610, align 4
  %612 = load float, float* %609, align 4
  %613 = fmul float %612, 1.562500e-02
  %614 = fsub float %611, %613
  store float %614, float* %608, align 4
  %615 = getelementptr inbounds float, float* %610, i64 1
  %616 = getelementptr inbounds float, float* %609, i64 1
  %617 = getelementptr inbounds float, float* %608, i64 1
  %618 = load float, float* %615, align 4
  %619 = load float, float* %616, align 4
  %620 = fmul float %619, 1.562500e-02
  %621 = fsub float %618, %620
  store float %621, float* %617, align 4
  %622 = getelementptr inbounds float, float* %610, i64 2
  %623 = getelementptr inbounds float, float* %609, i64 2
  %624 = getelementptr inbounds float, float* %608, i64 2
  %625 = load float, float* %622, align 4
  %626 = load float, float* %623, align 4
  %627 = fmul float %626, 1.562500e-02
  %628 = fsub float %625, %627
  store float %628, float* %624, align 4
  %629 = getelementptr inbounds float, float* %610, i64 3
  %630 = getelementptr inbounds float, float* %609, i64 3
  %631 = getelementptr inbounds float, float* %608, i64 3
  %632 = load float, float* %629, align 4
  %633 = load float, float* %630, align 4
  %634 = fmul float %633, 1.562500e-02
  %635 = fsub float %632, %634
  store float %635, float* %631, align 4
  %636 = getelementptr inbounds float, float* %610, i64 4
  %637 = getelementptr inbounds float, float* %609, i64 4
  %638 = getelementptr inbounds float, float* %608, i64 4
  %639 = icmp eq float* %636, %461
  br i1 %639, label %640, label %607, !llvm.loop !15

640:                                              ; preds = %602, %607, %573, %387
  %641 = icmp eq %"struct.webrtc::SubtractorOutput"* %456, null
  br i1 %641, label %728, label %642

642:                                              ; preds = %640
  %643 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388
  %644 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 0
  %645 = icmp ult %"struct.webrtc::SubtractorOutput"* %643, %206
  %646 = icmp ult float* %88, %644
  %647 = and i1 %645, %646
  br i1 %647, label %713, label %648

648:                                              ; preds = %642
  %649 = load <4 x float>, <4 x float>* %208, align 4, !alias.scope !16
  %650 = fmul <4 x float> %649, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %651 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 0
  %652 = bitcast float* %651 to <4 x float>*
  store <4 x float> %650, <4 x float>* %652, align 4, !alias.scope !19, !noalias !16
  %653 = load <4 x float>, <4 x float>* %210, align 4, !alias.scope !16
  %654 = fmul <4 x float> %653, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %655 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 4
  %656 = bitcast float* %655 to <4 x float>*
  store <4 x float> %654, <4 x float>* %656, align 4, !alias.scope !19, !noalias !16
  %657 = load <4 x float>, <4 x float>* %212, align 4, !alias.scope !16
  %658 = fmul <4 x float> %657, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %659 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 8
  %660 = bitcast float* %659 to <4 x float>*
  store <4 x float> %658, <4 x float>* %660, align 4, !alias.scope !19, !noalias !16
  %661 = load <4 x float>, <4 x float>* %214, align 4, !alias.scope !16
  %662 = fmul <4 x float> %661, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %663 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 12
  %664 = bitcast float* %663 to <4 x float>*
  store <4 x float> %662, <4 x float>* %664, align 4, !alias.scope !19, !noalias !16
  %665 = load <4 x float>, <4 x float>* %216, align 4, !alias.scope !16
  %666 = fmul <4 x float> %665, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %667 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 16
  %668 = bitcast float* %667 to <4 x float>*
  store <4 x float> %666, <4 x float>* %668, align 4, !alias.scope !19, !noalias !16
  %669 = load <4 x float>, <4 x float>* %218, align 4, !alias.scope !16
  %670 = fmul <4 x float> %669, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %671 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 20
  %672 = bitcast float* %671 to <4 x float>*
  store <4 x float> %670, <4 x float>* %672, align 4, !alias.scope !19, !noalias !16
  %673 = load <4 x float>, <4 x float>* %220, align 4, !alias.scope !16
  %674 = fmul <4 x float> %673, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %675 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 24
  %676 = bitcast float* %675 to <4 x float>*
  store <4 x float> %674, <4 x float>* %676, align 4, !alias.scope !19, !noalias !16
  %677 = load <4 x float>, <4 x float>* %222, align 4, !alias.scope !16
  %678 = fmul <4 x float> %677, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %679 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 28
  %680 = bitcast float* %679 to <4 x float>*
  store <4 x float> %678, <4 x float>* %680, align 4, !alias.scope !19, !noalias !16
  %681 = load <4 x float>, <4 x float>* %224, align 4, !alias.scope !16
  %682 = fmul <4 x float> %681, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %683 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 32
  %684 = bitcast float* %683 to <4 x float>*
  store <4 x float> %682, <4 x float>* %684, align 4, !alias.scope !19, !noalias !16
  %685 = load <4 x float>, <4 x float>* %226, align 4, !alias.scope !16
  %686 = fmul <4 x float> %685, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %687 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 36
  %688 = bitcast float* %687 to <4 x float>*
  store <4 x float> %686, <4 x float>* %688, align 4, !alias.scope !19, !noalias !16
  %689 = load <4 x float>, <4 x float>* %228, align 4, !alias.scope !16
  %690 = fmul <4 x float> %689, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %691 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 40
  %692 = bitcast float* %691 to <4 x float>*
  store <4 x float> %690, <4 x float>* %692, align 4, !alias.scope !19, !noalias !16
  %693 = load <4 x float>, <4 x float>* %230, align 4, !alias.scope !16
  %694 = fmul <4 x float> %693, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %695 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 44
  %696 = bitcast float* %695 to <4 x float>*
  store <4 x float> %694, <4 x float>* %696, align 4, !alias.scope !19, !noalias !16
  %697 = load <4 x float>, <4 x float>* %232, align 4, !alias.scope !16
  %698 = fmul <4 x float> %697, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %699 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 48
  %700 = bitcast float* %699 to <4 x float>*
  store <4 x float> %698, <4 x float>* %700, align 4, !alias.scope !19, !noalias !16
  %701 = load <4 x float>, <4 x float>* %234, align 4, !alias.scope !16
  %702 = fmul <4 x float> %701, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %703 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 52
  %704 = bitcast float* %703 to <4 x float>*
  store <4 x float> %702, <4 x float>* %704, align 4, !alias.scope !19, !noalias !16
  %705 = load <4 x float>, <4 x float>* %236, align 4, !alias.scope !16
  %706 = fmul <4 x float> %705, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %707 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 56
  %708 = bitcast float* %707 to <4 x float>*
  store <4 x float> %706, <4 x float>* %708, align 4, !alias.scope !19, !noalias !16
  %709 = load <4 x float>, <4 x float>* %238, align 4, !alias.scope !16
  %710 = fmul <4 x float> %709, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %711 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 60
  %712 = bitcast float* %711 to <4 x float>*
  store <4 x float> %710, <4 x float>* %712, align 4, !alias.scope !19, !noalias !16
  br label %728

713:                                              ; preds = %642, %713
  %714 = phi i64 [ %726, %713 ], [ 0, %642 ]
  %715 = add nuw nsw i64 %714, 64
  %716 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 %715
  %717 = load float, float* %716, align 4
  %718 = fmul float %717, 1.562500e-02
  %719 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %714
  store float %718, float* %719, align 4
  %720 = or i64 %714, 1
  %721 = add nuw nsw i64 %714, 65
  %722 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %7, i64 0, i32 0, i64 %721
  %723 = load float, float* %722, align 4
  %724 = fmul float %723, 1.562500e-02
  %725 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %720
  store float %724, float* %725, align 4
  %726 = add nuw nsw i64 %714, 2
  %727 = icmp eq i64 %726, 64
  br i1 %727, label %728, label %713, !llvm.loop !21

728:                                              ; preds = %713, %648, %640
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %51) #15
  %729 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %730 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %729, i64 %388, i32 0, i32 0, i32 0
  %731 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %730, align 8
  call void @_ZNK6webrtc17AdaptiveFirFilter6FilterERKNS_12RenderBufferEPNS_7FftDataE(%"class.webrtc::AdaptiveFirFilter"* %731, %"class.webrtc::RenderBuffer"* dereferenceable(32) %1, %"struct.webrtc::FftData"* nonnull %12) #15
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %63) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 -1, i64 504, i1 false) #15
  %732 = load i32, i32* %54, align 4
  store i32 %732, i32* %66, align 4
  %733 = load i32, i32* %57, align 4
  store i32 %733, i32* %68, align 4
  %734 = load <4 x i32>, <4 x i32>* %240, align 4
  %735 = load <4 x i32>, <4 x i32>* %242, align 4
  %736 = shufflevector <4 x i32> %734, <4 x i32> %735, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %736, <8 x i32>* %244, align 4
  %737 = load <4 x i32>, <4 x i32>* %246, align 4
  %738 = load <4 x i32>, <4 x i32>* %248, align 4
  %739 = shufflevector <4 x i32> %737, <4 x i32> %738, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %739, <8 x i32>* %250, align 4
  %740 = load <4 x i32>, <4 x i32>* %252, align 4
  %741 = load <4 x i32>, <4 x i32>* %254, align 4
  %742 = shufflevector <4 x i32> %740, <4 x i32> %741, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %742, <8 x i32>* %256, align 4
  %743 = load <4 x i32>, <4 x i32>* %258, align 4
  %744 = load <4 x i32>, <4 x i32>* %260, align 4
  %745 = shufflevector <4 x i32> %743, <4 x i32> %744, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %745, <8 x i32>* %262, align 4
  %746 = load <4 x i32>, <4 x i32>* %264, align 4
  %747 = load <4 x i32>, <4 x i32>* %266, align 4
  %748 = shufflevector <4 x i32> %746, <4 x i32> %747, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %748, <8 x i32>* %268, align 4
  %749 = load <4 x i32>, <4 x i32>* %270, align 4
  %750 = load <4 x i32>, <4 x i32>* %272, align 4
  %751 = shufflevector <4 x i32> %749, <4 x i32> %750, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %751, <8 x i32>* %274, align 4
  %752 = load <4 x i32>, <4 x i32>* %276, align 4
  %753 = load <4 x i32>, <4 x i32>* %278, align 4
  %754 = shufflevector <4 x i32> %752, <4 x i32> %753, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %754, <8 x i32>* %280, align 4
  %755 = load <4 x i32>, <4 x i32>* %282, align 4
  %756 = load <4 x i32>, <4 x i32>* %284, align 4
  %757 = shufflevector <4 x i32> %755, <4 x i32> %756, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %757, <8 x i32>* %286, align 4
  %758 = load <4 x i32>, <4 x i32>* %288, align 4
  %759 = load <4 x i32>, <4 x i32>* %290, align 4
  %760 = shufflevector <4 x i32> %758, <4 x i32> %759, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %760, <8 x i32>* %292, align 4
  %761 = load <4 x i32>, <4 x i32>* %294, align 4
  %762 = load <4 x i32>, <4 x i32>* %296, align 4
  %763 = shufflevector <4 x i32> %761, <4 x i32> %762, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %763, <8 x i32>* %298, align 4
  %764 = load <4 x i32>, <4 x i32>* %300, align 4
  %765 = load <4 x i32>, <4 x i32>* %302, align 4
  %766 = shufflevector <4 x i32> %764, <4 x i32> %765, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %766, <8 x i32>* %304, align 4
  %767 = load <4 x i32>, <4 x i32>* %306, align 4
  %768 = load <4 x i32>, <4 x i32>* %308, align 4
  %769 = shufflevector <4 x i32> %767, <4 x i32> %768, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %769, <8 x i32>* %310, align 4
  %770 = load <4 x i32>, <4 x i32>* %312, align 4
  %771 = load <4 x i32>, <4 x i32>* %314, align 4
  %772 = shufflevector <4 x i32> %770, <4 x i32> %771, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %772, <8 x i32>* %316, align 4
  %773 = load <4 x i32>, <4 x i32>* %318, align 4
  %774 = load <4 x i32>, <4 x i32>* %320, align 4
  %775 = shufflevector <4 x i32> %773, <4 x i32> %774, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %775, <8 x i32>* %322, align 4
  %776 = load <4 x i32>, <4 x i32>* %324, align 4
  %777 = load <4 x i32>, <4 x i32>* %326, align 4
  %778 = shufflevector <4 x i32> %776, <4 x i32> %777, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %778, <8 x i32>* %328, align 4
  %779 = load i32, i32* %330, align 4
  store i32 %779, i32* %332, align 4
  %780 = load i32, i32* %334, align 4
  store i32 %780, i32* %336, align 4
  %781 = load i32, i32* %338, align 4
  store i32 %781, i32* %340, align 4
  %782 = load i32, i32* %342, align 4
  store i32 %782, i32* %344, align 4
  %783 = load i32, i32* %346, align 4
  store i32 %783, i32* %348, align 4
  %784 = load i32, i32* %350, align 4
  store i32 %784, i32* %352, align 4
  %785 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1
  call void @_ZNK6webrtc8OouraFft10InverseFftEPf(%"class.webrtc::OouraFft"* %60, float* nonnull %69) #15
  br i1 %398, label %964, label %786

786:                                              ; preds = %728
  %787 = getelementptr inbounds %"struct.std::__1::array.223", %"struct.std::__1::array.223"* %459, i64 0, i32 0, i64 0
  %788 = getelementptr float, float* %460, i64 -1
  %789 = getelementptr float, float* %788, i64 %457
  %790 = ptrtoint float* %789 to i64
  %791 = sub i64 %790, %393
  %792 = lshr i64 %791, 2
  %793 = add nuw nsw i64 %792, 1
  %794 = icmp ult i64 %793, 8
  br i1 %794, label %899, label %795

795:                                              ; preds = %786
  %796 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3, i32 0, i64 0
  %797 = getelementptr float, float* %460, i64 -1
  %798 = getelementptr float, float* %797, i64 %457
  %799 = ptrtoint float* %798 to i64
  %800 = sub i64 %799, %393
  %801 = lshr i64 %800, 2
  %802 = add nuw nsw i64 %801, 1
  %803 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3, i32 0, i64 %802
  %804 = getelementptr float, float* %392, i64 1
  %805 = getelementptr float, float* %804, i64 %801
  %806 = getelementptr float, float* %87, i64 %801
  %807 = icmp ult float* %796, %805
  %808 = icmp ult float* %392, %803
  %809 = and i1 %807, %808
  %810 = icmp ult float* %796, %806
  %811 = icmp ult float* %86, %803
  %812 = and i1 %810, %811
  %813 = or i1 %809, %812
  br i1 %813, label %899, label %814

814:                                              ; preds = %795
  %815 = and i64 %793, 9223372036854775800
  %816 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3, i32 0, i64 %815
  %817 = getelementptr float, float* %70, i64 %815
  %818 = getelementptr float, float* %392, i64 %815
  %819 = add nsw i64 %815, -8
  %820 = lshr exact i64 %819, 3
  %821 = add nuw nsw i64 %820, 1
  %822 = and i64 %821, 1
  %823 = icmp eq i64 %819, 0
  br i1 %823, label %873, label %824

824:                                              ; preds = %814
  %825 = sub nuw nsw i64 %821, %822
  br label %826

826:                                              ; preds = %826, %824
  %827 = phi i64 [ 0, %824 ], [ %870, %826 ]
  %828 = phi i64 [ %825, %824 ], [ %871, %826 ]
  %829 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3, i32 0, i64 %827
  %830 = getelementptr float, float* %70, i64 %827
  %831 = getelementptr float, float* %392, i64 %827
  %832 = bitcast float* %831 to <4 x float>*
  %833 = load <4 x float>, <4 x float>* %832, align 4, !alias.scope !22
  %834 = getelementptr float, float* %831, i64 4
  %835 = bitcast float* %834 to <4 x float>*
  %836 = load <4 x float>, <4 x float>* %835, align 4, !alias.scope !22
  %837 = bitcast float* %830 to <4 x float>*
  %838 = load <4 x float>, <4 x float>* %837, align 4, !alias.scope !25
  %839 = getelementptr float, float* %830, i64 4
  %840 = bitcast float* %839 to <4 x float>*
  %841 = load <4 x float>, <4 x float>* %840, align 4, !alias.scope !25
  %842 = fmul <4 x float> %838, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %843 = fmul <4 x float> %841, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %844 = fsub <4 x float> %833, %842
  %845 = fsub <4 x float> %836, %843
  %846 = bitcast float* %829 to <4 x float>*
  store <4 x float> %844, <4 x float>* %846, align 4, !alias.scope !27, !noalias !29
  %847 = getelementptr float, float* %829, i64 4
  %848 = bitcast float* %847 to <4 x float>*
  store <4 x float> %845, <4 x float>* %848, align 4, !alias.scope !27, !noalias !29
  %849 = or i64 %827, 8
  %850 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3, i32 0, i64 %849
  %851 = getelementptr float, float* %70, i64 %849
  %852 = getelementptr float, float* %392, i64 %849
  %853 = bitcast float* %852 to <4 x float>*
  %854 = load <4 x float>, <4 x float>* %853, align 4, !alias.scope !22
  %855 = getelementptr float, float* %852, i64 4
  %856 = bitcast float* %855 to <4 x float>*
  %857 = load <4 x float>, <4 x float>* %856, align 4, !alias.scope !22
  %858 = bitcast float* %851 to <4 x float>*
  %859 = load <4 x float>, <4 x float>* %858, align 4, !alias.scope !25
  %860 = getelementptr float, float* %851, i64 4
  %861 = bitcast float* %860 to <4 x float>*
  %862 = load <4 x float>, <4 x float>* %861, align 4, !alias.scope !25
  %863 = fmul <4 x float> %859, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %864 = fmul <4 x float> %862, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %865 = fsub <4 x float> %854, %863
  %866 = fsub <4 x float> %857, %864
  %867 = bitcast float* %850 to <4 x float>*
  store <4 x float> %865, <4 x float>* %867, align 4, !alias.scope !27, !noalias !29
  %868 = getelementptr float, float* %850, i64 4
  %869 = bitcast float* %868 to <4 x float>*
  store <4 x float> %866, <4 x float>* %869, align 4, !alias.scope !27, !noalias !29
  %870 = add i64 %827, 16
  %871 = add i64 %828, -2
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %873, label %826, !llvm.loop !30

873:                                              ; preds = %826, %814
  %874 = phi i64 [ 0, %814 ], [ %870, %826 ]
  %875 = icmp eq i64 %822, 0
  br i1 %875, label %897, label %876

876:                                              ; preds = %873
  %877 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 3, i32 0, i64 %874
  %878 = getelementptr float, float* %70, i64 %874
  %879 = getelementptr float, float* %392, i64 %874
  %880 = bitcast float* %879 to <4 x float>*
  %881 = load <4 x float>, <4 x float>* %880, align 4, !alias.scope !22
  %882 = getelementptr float, float* %879, i64 4
  %883 = bitcast float* %882 to <4 x float>*
  %884 = load <4 x float>, <4 x float>* %883, align 4, !alias.scope !22
  %885 = bitcast float* %878 to <4 x float>*
  %886 = load <4 x float>, <4 x float>* %885, align 4, !alias.scope !25
  %887 = getelementptr float, float* %878, i64 4
  %888 = bitcast float* %887 to <4 x float>*
  %889 = load <4 x float>, <4 x float>* %888, align 4, !alias.scope !25
  %890 = fmul <4 x float> %886, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %891 = fmul <4 x float> %889, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %892 = fsub <4 x float> %881, %890
  %893 = fsub <4 x float> %884, %891
  %894 = bitcast float* %877 to <4 x float>*
  store <4 x float> %892, <4 x float>* %894, align 4, !alias.scope !27, !noalias !29
  %895 = getelementptr float, float* %877, i64 4
  %896 = bitcast float* %895 to <4 x float>*
  store <4 x float> %893, <4 x float>* %896, align 4, !alias.scope !27, !noalias !29
  br label %897

897:                                              ; preds = %873, %876
  %898 = icmp eq i64 %793, %815
  br i1 %898, label %964, label %899

899:                                              ; preds = %897, %795, %786
  %900 = phi float* [ %787, %795 ], [ %787, %786 ], [ %816, %897 ]
  %901 = phi float* [ %70, %795 ], [ %70, %786 ], [ %817, %897 ]
  %902 = phi float* [ %392, %795 ], [ %392, %786 ], [ %818, %897 ]
  %903 = ptrtoint float* %902 to i64
  %904 = getelementptr float, float* %460, i64 -1
  %905 = getelementptr float, float* %904, i64 %457
  %906 = ptrtoint float* %905 to i64
  %907 = sub i64 %906, %903
  %908 = lshr i64 %907, 2
  %909 = add nuw nsw i64 %908, 1
  %910 = and i64 %909, 3
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %926, label %912

912:                                              ; preds = %899, %912
  %913 = phi float* [ %923, %912 ], [ %900, %899 ]
  %914 = phi float* [ %922, %912 ], [ %901, %899 ]
  %915 = phi float* [ %921, %912 ], [ %902, %899 ]
  %916 = phi i64 [ %924, %912 ], [ %910, %899 ]
  %917 = load float, float* %915, align 4
  %918 = load float, float* %914, align 4
  %919 = fmul float %918, 1.562500e-02
  %920 = fsub float %917, %919
  store float %920, float* %913, align 4
  %921 = getelementptr inbounds float, float* %915, i64 1
  %922 = getelementptr inbounds float, float* %914, i64 1
  %923 = getelementptr inbounds float, float* %913, i64 1
  %924 = add i64 %916, -1
  %925 = icmp eq i64 %924, 0
  br i1 %925, label %926, label %912, !llvm.loop !31

926:                                              ; preds = %912, %899
  %927 = phi float* [ %900, %899 ], [ %923, %912 ]
  %928 = phi float* [ %901, %899 ], [ %922, %912 ]
  %929 = phi float* [ %902, %899 ], [ %921, %912 ]
  %930 = icmp ult i64 %907, 12
  br i1 %930, label %964, label %931

931:                                              ; preds = %926, %931
  %932 = phi float* [ %962, %931 ], [ %927, %926 ]
  %933 = phi float* [ %961, %931 ], [ %928, %926 ]
  %934 = phi float* [ %960, %931 ], [ %929, %926 ]
  %935 = load float, float* %934, align 4
  %936 = load float, float* %933, align 4
  %937 = fmul float %936, 1.562500e-02
  %938 = fsub float %935, %937
  store float %938, float* %932, align 4
  %939 = getelementptr inbounds float, float* %934, i64 1
  %940 = getelementptr inbounds float, float* %933, i64 1
  %941 = getelementptr inbounds float, float* %932, i64 1
  %942 = load float, float* %939, align 4
  %943 = load float, float* %940, align 4
  %944 = fmul float %943, 1.562500e-02
  %945 = fsub float %942, %944
  store float %945, float* %941, align 4
  %946 = getelementptr inbounds float, float* %934, i64 2
  %947 = getelementptr inbounds float, float* %933, i64 2
  %948 = getelementptr inbounds float, float* %932, i64 2
  %949 = load float, float* %946, align 4
  %950 = load float, float* %947, align 4
  %951 = fmul float %950, 1.562500e-02
  %952 = fsub float %949, %951
  store float %952, float* %948, align 4
  %953 = getelementptr inbounds float, float* %934, i64 3
  %954 = getelementptr inbounds float, float* %933, i64 3
  %955 = getelementptr inbounds float, float* %932, i64 3
  %956 = load float, float* %953, align 4
  %957 = load float, float* %954, align 4
  %958 = fmul float %957, 1.562500e-02
  %959 = fsub float %956, %958
  store float %959, float* %955, align 4
  %960 = getelementptr inbounds float, float* %934, i64 4
  %961 = getelementptr inbounds float, float* %933, i64 4
  %962 = getelementptr inbounds float, float* %932, i64 4
  %963 = icmp eq float* %960, %461
  br i1 %963, label %964, label %931, !llvm.loop !32

964:                                              ; preds = %926, %931, %897, %728
  %965 = icmp eq %"struct.std::__1::array.223"* %785, null
  br i1 %965, label %1052, label %966

966:                                              ; preds = %964
  %967 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 0
  %968 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 0
  %969 = icmp ult float* %967, %353
  %970 = icmp ult float* %85, %968
  %971 = and i1 %969, %970
  br i1 %971, label %1037, label %972

972:                                              ; preds = %966
  %973 = load <4 x float>, <4 x float>* %355, align 4, !alias.scope !33
  %974 = fmul <4 x float> %973, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %975 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 0
  %976 = bitcast float* %975 to <4 x float>*
  store <4 x float> %974, <4 x float>* %976, align 4, !alias.scope !36, !noalias !33
  %977 = load <4 x float>, <4 x float>* %357, align 4, !alias.scope !33
  %978 = fmul <4 x float> %977, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %979 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 4
  %980 = bitcast float* %979 to <4 x float>*
  store <4 x float> %978, <4 x float>* %980, align 4, !alias.scope !36, !noalias !33
  %981 = load <4 x float>, <4 x float>* %359, align 4, !alias.scope !33
  %982 = fmul <4 x float> %981, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %983 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 8
  %984 = bitcast float* %983 to <4 x float>*
  store <4 x float> %982, <4 x float>* %984, align 4, !alias.scope !36, !noalias !33
  %985 = load <4 x float>, <4 x float>* %361, align 4, !alias.scope !33
  %986 = fmul <4 x float> %985, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %987 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 12
  %988 = bitcast float* %987 to <4 x float>*
  store <4 x float> %986, <4 x float>* %988, align 4, !alias.scope !36, !noalias !33
  %989 = load <4 x float>, <4 x float>* %363, align 4, !alias.scope !33
  %990 = fmul <4 x float> %989, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %991 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 16
  %992 = bitcast float* %991 to <4 x float>*
  store <4 x float> %990, <4 x float>* %992, align 4, !alias.scope !36, !noalias !33
  %993 = load <4 x float>, <4 x float>* %365, align 4, !alias.scope !33
  %994 = fmul <4 x float> %993, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %995 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 20
  %996 = bitcast float* %995 to <4 x float>*
  store <4 x float> %994, <4 x float>* %996, align 4, !alias.scope !36, !noalias !33
  %997 = load <4 x float>, <4 x float>* %367, align 4, !alias.scope !33
  %998 = fmul <4 x float> %997, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %999 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 24
  %1000 = bitcast float* %999 to <4 x float>*
  store <4 x float> %998, <4 x float>* %1000, align 4, !alias.scope !36, !noalias !33
  %1001 = load <4 x float>, <4 x float>* %369, align 4, !alias.scope !33
  %1002 = fmul <4 x float> %1001, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1003 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 28
  %1004 = bitcast float* %1003 to <4 x float>*
  store <4 x float> %1002, <4 x float>* %1004, align 4, !alias.scope !36, !noalias !33
  %1005 = load <4 x float>, <4 x float>* %371, align 4, !alias.scope !33
  %1006 = fmul <4 x float> %1005, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1007 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 32
  %1008 = bitcast float* %1007 to <4 x float>*
  store <4 x float> %1006, <4 x float>* %1008, align 4, !alias.scope !36, !noalias !33
  %1009 = load <4 x float>, <4 x float>* %373, align 4, !alias.scope !33
  %1010 = fmul <4 x float> %1009, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1011 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 36
  %1012 = bitcast float* %1011 to <4 x float>*
  store <4 x float> %1010, <4 x float>* %1012, align 4, !alias.scope !36, !noalias !33
  %1013 = load <4 x float>, <4 x float>* %375, align 4, !alias.scope !33
  %1014 = fmul <4 x float> %1013, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1015 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 40
  %1016 = bitcast float* %1015 to <4 x float>*
  store <4 x float> %1014, <4 x float>* %1016, align 4, !alias.scope !36, !noalias !33
  %1017 = load <4 x float>, <4 x float>* %377, align 4, !alias.scope !33
  %1018 = fmul <4 x float> %1017, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1019 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 44
  %1020 = bitcast float* %1019 to <4 x float>*
  store <4 x float> %1018, <4 x float>* %1020, align 4, !alias.scope !36, !noalias !33
  %1021 = load <4 x float>, <4 x float>* %379, align 4, !alias.scope !33
  %1022 = fmul <4 x float> %1021, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1023 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 48
  %1024 = bitcast float* %1023 to <4 x float>*
  store <4 x float> %1022, <4 x float>* %1024, align 4, !alias.scope !36, !noalias !33
  %1025 = load <4 x float>, <4 x float>* %381, align 4, !alias.scope !33
  %1026 = fmul <4 x float> %1025, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1027 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 52
  %1028 = bitcast float* %1027 to <4 x float>*
  store <4 x float> %1026, <4 x float>* %1028, align 4, !alias.scope !36, !noalias !33
  %1029 = load <4 x float>, <4 x float>* %383, align 4, !alias.scope !33
  %1030 = fmul <4 x float> %1029, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1031 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 56
  %1032 = bitcast float* %1031 to <4 x float>*
  store <4 x float> %1030, <4 x float>* %1032, align 4, !alias.scope !36, !noalias !33
  %1033 = load <4 x float>, <4 x float>* %385, align 4, !alias.scope !33
  %1034 = fmul <4 x float> %1033, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1035 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 60
  %1036 = bitcast float* %1035 to <4 x float>*
  store <4 x float> %1034, <4 x float>* %1036, align 4, !alias.scope !36, !noalias !33
  br label %1052

1037:                                             ; preds = %966, %1037
  %1038 = phi i64 [ %1050, %1037 ], [ 0, %966 ]
  %1039 = add nuw nsw i64 %1038, 64
  %1040 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 %1039
  %1041 = load float, float* %1040, align 4
  %1042 = fmul float %1041, 1.562500e-02
  %1043 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 %1038
  store float %1042, float* %1043, align 4
  %1044 = or i64 %1038, 1
  %1045 = add nuw nsw i64 %1038, 65
  %1046 = getelementptr inbounds %"struct.std::__1::array.242", %"struct.std::__1::array.242"* %8, i64 0, i32 0, i64 %1045
  %1047 = load float, float* %1046, align 4
  %1048 = fmul float %1047, 1.562500e-02
  %1049 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 1, i32 0, i64 %1044
  store float %1048, float* %1049, align 4
  %1050 = add nuw nsw i64 %1038, 2
  %1051 = icmp eq i64 %1050, 64
  br i1 %1051, label %1052, label %1037, !llvm.loop !38

1052:                                             ; preds = %1037, %972, %964
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %63) #15
  call void @_ZN6webrtc16SubtractorOutput14ComputeMetricsEN3rtc9ArrayViewIKfLln4711EEE(%"struct.webrtc::SubtractorOutput"* %456, float* %460, i64 %457) #15
  %1053 = load %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*, %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %71, align 8
  %1054 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 9
  %1055 = load float, float* %1054, align 4
  %1056 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 2
  %1057 = load float, float* %1056, align 4
  %1058 = fadd float %1055, %1057
  store float %1058, float* %1056, align 4
  %1059 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 11
  %1060 = load float, float* %1059, align 4
  %1061 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 3
  %1062 = load float, float* %1061, align 4
  %1063 = fadd float %1060, %1062
  store float %1063, float* %1061, align 4
  %1064 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 1
  %1065 = load i32, i32* %1064, align 4
  %1066 = add nsw i32 %1065, 1
  store i32 %1066, i32* %1064, align 4
  %1067 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 0
  %1068 = load i32, i32* %1067, align 4
  %1069 = icmp eq i32 %1066, %1068
  br i1 %1069, label %1070, label %1103

1070:                                             ; preds = %1052
  %1071 = sitofp i32 %1066 to float
  %1072 = fmul float %1071, 2.000000e+02
  %1073 = fmul float %1072, 2.000000e+02
  %1074 = fmul float %1073, 6.400000e+01
  %1075 = fcmp ogt float %1063, %1074
  br i1 %1075, label %1076, label %1102

1076:                                             ; preds = %1070
  %1077 = fdiv float %1058, %1063
  %1078 = fmul float %1071, 7.500000e+03
  %1079 = fmul float %1078, 7.500000e+03
  %1080 = fmul float %1079, 6.400000e+01
  %1081 = fcmp ogt float %1058, %1080
  %1082 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 5
  br i1 %1081, label %1083, label %1086

1083:                                             ; preds = %1076
  store i32 4, i32* %1082, align 4
  %1084 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 4
  %1085 = load float, float* %1084, align 4
  br label %1096

1086:                                             ; preds = %1076
  %1087 = load i32, i32* %1082, align 4
  %1088 = icmp sgt i32 %1087, 1
  %1089 = select i1 %1088, i32 %1087, i32 1
  %1090 = add nsw i32 %1089, -1
  store i32 %1090, i32* %1082, align 4
  %1091 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1053, i64 %388, i32 4
  %1092 = load float, float* %1091, align 4
  %1093 = fcmp olt float %1077, %1092
  %1094 = icmp sgt i32 %1090, 0
  %1095 = or i1 %1093, %1094
  br i1 %1095, label %1096, label %1102

1096:                                             ; preds = %1083, %1086
  %1097 = phi float [ %1085, %1083 ], [ %1092, %1086 ]
  %1098 = phi float* [ %1084, %1083 ], [ %1091, %1086 ]
  %1099 = fsub float %1077, %1097
  %1100 = fmul float %1099, 0x3FB99999A0000000
  %1101 = fadd float %1097, %1100
  store float %1101, float* %1098, align 4
  br label %1102

1102:                                             ; preds = %1096, %1086, %1070
  store float 0.000000e+00, float* %1056, align 4
  store float 0.000000e+00, float* %1061, align 4
  store i32 0, i32* %1064, align 4
  br label %1103

1103:                                             ; preds = %1052, %1102
  %1104 = load %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*, %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %71, align 8
  %1105 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1104, i64 %388, i32 4
  %1106 = load float, float* %1105, align 4
  %1107 = fcmp ogt float %1106, 1.000000e+01
  br i1 %1107, label %1108, label %1301

1108:                                             ; preds = %1103
  %1109 = call float @sqrtf(float %1106) #15
  %1110 = fdiv float 2.000000e+00, %1109
  %1111 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %1112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1111, i64 %388, i32 0, i32 0, i32 0
  %1113 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1112, align 8
  call void @_ZN6webrtc17AdaptiveFirFilter11ScaleFilterEf(%"class.webrtc::AdaptiveFirFilter"* %1113, float %1110) #15
  %1114 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %72, align 8
  %1115 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %1114, i64 %388, i32 0, i32 0
  %1116 = load float*, float** %1115, align 8
  %1117 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %1114, i64 %388, i32 0, i32 1
  %1118 = load float*, float** %1117, align 8
  %1119 = icmp eq float* %1116, %1118
  br i1 %1119, label %1187, label %1120

1120:                                             ; preds = %1108
  %1121 = ptrtoint float* %1116 to i64
  %1122 = getelementptr float, float* %1118, i64 -1
  %1123 = ptrtoint float* %1122 to i64
  %1124 = sub i64 %1123, %1121
  %1125 = lshr i64 %1124, 2
  %1126 = add nuw nsw i64 %1125, 1
  %1127 = icmp ult i64 %1126, 8
  br i1 %1127, label %1128, label %1130

1128:                                             ; preds = %1185, %1120
  %1129 = phi float* [ %1116, %1120 ], [ %1132, %1185 ]
  br label %1295

1130:                                             ; preds = %1120
  %1131 = and i64 %1126, 9223372036854775800
  %1132 = getelementptr float, float* %1116, i64 %1131
  %1133 = insertelement <4 x float> undef, float %1110, i32 0
  %1134 = shufflevector <4 x float> %1133, <4 x float> undef, <4 x i32> zeroinitializer
  %1135 = insertelement <4 x float> undef, float %1110, i32 0
  %1136 = shufflevector <4 x float> %1135, <4 x float> undef, <4 x i32> zeroinitializer
  %1137 = add nsw i64 %1131, -8
  %1138 = lshr exact i64 %1137, 3
  %1139 = add nuw nsw i64 %1138, 1
  %1140 = and i64 %1139, 1
  %1141 = icmp eq i64 %1137, 0
  br i1 %1141, label %1171, label %1142

1142:                                             ; preds = %1130
  %1143 = sub nuw nsw i64 %1139, %1140
  br label %1144

1144:                                             ; preds = %1144, %1142
  %1145 = phi i64 [ 0, %1142 ], [ %1168, %1144 ]
  %1146 = phi i64 [ %1143, %1142 ], [ %1169, %1144 ]
  %1147 = getelementptr float, float* %1116, i64 %1145
  %1148 = bitcast float* %1147 to <4 x float>*
  %1149 = load <4 x float>, <4 x float>* %1148, align 4
  %1150 = getelementptr float, float* %1147, i64 4
  %1151 = bitcast float* %1150 to <4 x float>*
  %1152 = load <4 x float>, <4 x float>* %1151, align 4
  %1153 = fmul <4 x float> %1134, %1149
  %1154 = fmul <4 x float> %1136, %1152
  %1155 = bitcast float* %1147 to <4 x float>*
  store <4 x float> %1153, <4 x float>* %1155, align 4
  %1156 = bitcast float* %1150 to <4 x float>*
  store <4 x float> %1154, <4 x float>* %1156, align 4
  %1157 = or i64 %1145, 8
  %1158 = getelementptr float, float* %1116, i64 %1157
  %1159 = bitcast float* %1158 to <4 x float>*
  %1160 = load <4 x float>, <4 x float>* %1159, align 4
  %1161 = getelementptr float, float* %1158, i64 4
  %1162 = bitcast float* %1161 to <4 x float>*
  %1163 = load <4 x float>, <4 x float>* %1162, align 4
  %1164 = fmul <4 x float> %1134, %1160
  %1165 = fmul <4 x float> %1136, %1163
  %1166 = bitcast float* %1158 to <4 x float>*
  store <4 x float> %1164, <4 x float>* %1166, align 4
  %1167 = bitcast float* %1161 to <4 x float>*
  store <4 x float> %1165, <4 x float>* %1167, align 4
  %1168 = add i64 %1145, 16
  %1169 = add i64 %1146, -2
  %1170 = icmp eq i64 %1169, 0
  br i1 %1170, label %1171, label %1144, !llvm.loop !39

1171:                                             ; preds = %1144, %1130
  %1172 = phi i64 [ 0, %1130 ], [ %1168, %1144 ]
  %1173 = icmp eq i64 %1140, 0
  br i1 %1173, label %1185, label %1174

1174:                                             ; preds = %1171
  %1175 = getelementptr float, float* %1116, i64 %1172
  %1176 = bitcast float* %1175 to <4 x float>*
  %1177 = load <4 x float>, <4 x float>* %1176, align 4
  %1178 = getelementptr float, float* %1175, i64 4
  %1179 = bitcast float* %1178 to <4 x float>*
  %1180 = load <4 x float>, <4 x float>* %1179, align 4
  %1181 = fmul <4 x float> %1134, %1177
  %1182 = fmul <4 x float> %1136, %1180
  %1183 = bitcast float* %1175 to <4 x float>*
  store <4 x float> %1181, <4 x float>* %1183, align 4
  %1184 = bitcast float* %1178 to <4 x float>*
  store <4 x float> %1182, <4 x float>* %1184, align 4
  br label %1185

1185:                                             ; preds = %1171, %1174
  %1186 = icmp eq i64 %1126, %1131
  br i1 %1186, label %1187, label %1128

1187:                                             ; preds = %1295, %1185, %1108
  br i1 %398, label %1291, label %1188

1188:                                             ; preds = %1187
  %1189 = icmp ult i64 %457, 4
  br i1 %1189, label %1255, label %1190

1190:                                             ; preds = %1188
  %1191 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388
  %1192 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %457
  %1193 = getelementptr float, float* %460, i64 %457
  %1194 = bitcast float* %1193 to %"struct.webrtc::SubtractorOutput"*
  %1195 = icmp ult %"struct.webrtc::SubtractorOutput"* %1191, %1194
  %1196 = icmp ult float* %460, %1192
  %1197 = and i1 %1195, %1196
  br i1 %1197, label %1255, label %1198

1198:                                             ; preds = %1190
  %1199 = and i64 %457, -4
  %1200 = insertelement <4 x float> undef, float %1110, i32 0
  %1201 = shufflevector <4 x float> %1200, <4 x float> undef, <4 x i32> zeroinitializer
  %1202 = add nsw i64 %1199, -4
  %1203 = lshr exact i64 %1202, 2
  %1204 = add nuw nsw i64 %1203, 1
  %1205 = and i64 %1204, 1
  %1206 = icmp eq i64 %1202, 0
  br i1 %1206, label %1238, label %1207

1207:                                             ; preds = %1198
  %1208 = sub nuw nsw i64 %1204, %1205
  br label %1209

1209:                                             ; preds = %1209, %1207
  %1210 = phi i64 [ 0, %1207 ], [ %1235, %1209 ]
  %1211 = phi i64 [ %1208, %1207 ], [ %1236, %1209 ]
  %1212 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %1210
  %1213 = bitcast float* %1212 to <4 x float>*
  %1214 = load <4 x float>, <4 x float>* %1213, align 4, !alias.scope !40, !noalias !43
  %1215 = fmul <4 x float> %1201, %1214
  %1216 = bitcast float* %1212 to <4 x float>*
  store <4 x float> %1215, <4 x float>* %1216, align 4, !alias.scope !40, !noalias !43
  %1217 = getelementptr inbounds float, float* %460, i64 %1210
  %1218 = bitcast float* %1217 to <4 x float>*
  %1219 = load <4 x float>, <4 x float>* %1218, align 4, !alias.scope !43
  %1220 = fsub <4 x float> %1219, %1215
  %1221 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %1210
  %1222 = bitcast float* %1221 to <4 x float>*
  store <4 x float> %1220, <4 x float>* %1222, align 4, !alias.scope !40, !noalias !43
  %1223 = or i64 %1210, 4
  %1224 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %1223
  %1225 = bitcast float* %1224 to <4 x float>*
  %1226 = load <4 x float>, <4 x float>* %1225, align 4, !alias.scope !40, !noalias !43
  %1227 = fmul <4 x float> %1201, %1226
  %1228 = bitcast float* %1224 to <4 x float>*
  store <4 x float> %1227, <4 x float>* %1228, align 4, !alias.scope !40, !noalias !43
  %1229 = getelementptr inbounds float, float* %460, i64 %1223
  %1230 = bitcast float* %1229 to <4 x float>*
  %1231 = load <4 x float>, <4 x float>* %1230, align 4, !alias.scope !43
  %1232 = fsub <4 x float> %1231, %1227
  %1233 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %1223
  %1234 = bitcast float* %1233 to <4 x float>*
  store <4 x float> %1232, <4 x float>* %1234, align 4, !alias.scope !40, !noalias !43
  %1235 = add i64 %1210, 8
  %1236 = add i64 %1211, -2
  %1237 = icmp eq i64 %1236, 0
  br i1 %1237, label %1238, label %1209, !llvm.loop !45

1238:                                             ; preds = %1209, %1198
  %1239 = phi i64 [ 0, %1198 ], [ %1235, %1209 ]
  %1240 = icmp eq i64 %1205, 0
  br i1 %1240, label %1253, label %1241

1241:                                             ; preds = %1238
  %1242 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %1239
  %1243 = bitcast float* %1242 to <4 x float>*
  %1244 = load <4 x float>, <4 x float>* %1243, align 4, !alias.scope !40, !noalias !43
  %1245 = fmul <4 x float> %1201, %1244
  %1246 = bitcast float* %1242 to <4 x float>*
  store <4 x float> %1245, <4 x float>* %1246, align 4, !alias.scope !40, !noalias !43
  %1247 = getelementptr inbounds float, float* %460, i64 %1239
  %1248 = bitcast float* %1247 to <4 x float>*
  %1249 = load <4 x float>, <4 x float>* %1248, align 4, !alias.scope !43
  %1250 = fsub <4 x float> %1249, %1245
  %1251 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %1239
  %1252 = bitcast float* %1251 to <4 x float>*
  store <4 x float> %1250, <4 x float>* %1252, align 4, !alias.scope !40, !noalias !43
  br label %1253

1253:                                             ; preds = %1238, %1241
  %1254 = icmp eq i64 %457, %1199
  br i1 %1254, label %1291, label %1255

1255:                                             ; preds = %1253, %1190, %1188
  %1256 = phi i64 [ 0, %1190 ], [ 0, %1188 ], [ %1199, %1253 ]
  %1257 = and i64 %397, 4
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1268, label %1259

1259:                                             ; preds = %1255
  %1260 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %1256
  %1261 = load float, float* %1260, align 4
  %1262 = fmul float %1110, %1261
  store float %1262, float* %1260, align 4
  %1263 = getelementptr inbounds float, float* %460, i64 %1256
  %1264 = load float, float* %1263, align 4
  %1265 = fsub float %1264, %1262
  %1266 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %1256
  store float %1265, float* %1266, align 4
  %1267 = or i64 %1256, 1
  br label %1268

1268:                                             ; preds = %1259, %1255
  %1269 = phi i64 [ %1267, %1259 ], [ %1256, %1255 ]
  %1270 = or i64 %1256, 1
  %1271 = icmp eq i64 %457, %1270
  br i1 %1271, label %1291, label %1272

1272:                                             ; preds = %1268, %1272
  %1273 = phi i64 [ %1289, %1272 ], [ %1269, %1268 ]
  %1274 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %1273
  %1275 = load float, float* %1274, align 4
  %1276 = fmul float %1110, %1275
  store float %1276, float* %1274, align 4
  %1277 = getelementptr inbounds float, float* %460, i64 %1273
  %1278 = load float, float* %1277, align 4
  %1279 = fsub float %1278, %1276
  %1280 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %1273
  store float %1279, float* %1280, align 4
  %1281 = add nuw i64 %1273, 1
  %1282 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 0, i32 0, i64 %1281
  %1283 = load float, float* %1282, align 4
  %1284 = fmul float %1110, %1283
  store float %1284, float* %1282, align 4
  %1285 = getelementptr inbounds float, float* %460, i64 %1281
  %1286 = load float, float* %1285, align 4
  %1287 = fsub float %1286, %1284
  %1288 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 %1281
  store float %1287, float* %1288, align 4
  %1289 = add nuw i64 %1273, 2
  %1290 = icmp eq i64 %1289, %457
  br i1 %1290, label %1291, label %1272, !llvm.loop !46

1291:                                             ; preds = %1268, %1272, %1253, %1187
  %1292 = load %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"*, %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"** %71, align 8
  %1293 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %1292, i64 %388, i32 1
  %1294 = bitcast i32* %1293 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %1294, i8 0, i64 20, i1 false) #15
  br label %1301

1295:                                             ; preds = %1128, %1295
  %1296 = phi float* [ %1299, %1295 ], [ %1129, %1128 ]
  %1297 = load float, float* %1296, align 4
  %1298 = fmul float %1110, %1297
  store float %1298, float* %1296, align 4
  %1299 = getelementptr inbounds float, float* %1296, i64 1
  %1300 = icmp eq float* %1299, %1118
  br i1 %1300, label %1187, label %1295, !llvm.loop !47

1301:                                             ; preds = %1291, %1103
  %1302 = phi i1 [ true, %1291 ], [ false, %1103 ]
  %1303 = getelementptr inbounds %"struct.std::__1::array.223", %"struct.std::__1::array.223"* %399, i64 0, i32 0, i64 0
  call void @_ZNK6webrtc7Aec3Fft13ZeroPaddedFftEN3rtc9ArrayViewIKfLln4711EEENS0_6WindowEPNS_7FftDataE(%"class.webrtc::Aec3Fft"* %50, float* %1303, i64 64, i32 1, %"struct.webrtc::FftData"* %458) #15
  %1304 = getelementptr inbounds %"struct.std::__1::array.223", %"struct.std::__1::array.223"* %459, i64 0, i32 0, i64 0
  call void @_ZNK6webrtc7Aec3Fft13ZeroPaddedFftEN3rtc9ArrayViewIKfLln4711EEENS0_6WindowEPNS_7FftDataE(%"class.webrtc::Aec3Fft"* %50, float* %1304, i64 64, i32 1, %"struct.webrtc::FftData"* nonnull %11) #15
  %1305 = load i32, i32* %73, align 8
  %1306 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 6, i32 0, i64 0
  call void @_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"* nonnull %11, i32 %1305, float* %1306, i64 65)
  %1307 = load i32, i32* %73, align 8
  %1308 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 5, i32 0, i64 0
  call void @_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"* %458, i32 %1307, float* %1308, i64 65)
  br i1 %1302, label %1309, label %1310

1309:                                             ; preds = %1301
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 0, i64 520, i1 false)
  br label %1332

1310:                                             ; preds = %1301
  %1311 = load i32*, i32** %74, align 8
  %1312 = getelementptr inbounds i32, i32* %1311, i64 %388
  %1313 = load i32, i32* %1312, align 4
  %1314 = icmp sgt i32 %1313, 0
  br i1 %1314, label %1315, label %1318

1315:                                             ; preds = %1310
  %1316 = load i8, i8* %75, align 8, !range !2
  %1317 = icmp ne i8 %1316, 0
  br label %1318

1318:                                             ; preds = %1315, %1310
  %1319 = phi i1 [ false, %1310 ], [ %1317, %1315 ]
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %76) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 -1, i64 260, i1 false)
  %1320 = load %"class.std::__1::vector.73"*, %"class.std::__1::vector.73"** %77, align 8
  %1321 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1320, i64 %388
  call void @_ZN6webrtc10ComputeErlERKNS_16Aec3OptimizationERKNSt3__16vectorINS3_5arrayIfLm65EEENS3_9allocatorIS6_EEEEN3rtc9ArrayViewIfLln4711EEE(i32* dereferenceable(4) %73, %"class.std::__1::vector.73"* dereferenceable(24) %1321, float* nonnull %78, i64 65) #15
  %1322 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %79, align 8
  %1323 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %1322, i64 %388, i32 0, i32 0, i32 0
  %1324 = load %"class.webrtc::RefinedFilterUpdateGain"*, %"class.webrtc::RefinedFilterUpdateGain"** %1323, align 8
  %1325 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %1326 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1325, i64 %388, i32 0, i32 0, i32 0
  %1327 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1326, align 8
  %1328 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %1327, i64 0, i32 7
  %1329 = load i64, i64* %1328, align 8
  %1330 = load i8, i8* %80, align 8, !range !2
  %1331 = icmp ne i8 %1330, 0
  call void @_ZN6webrtc23RefinedFilterUpdateGain7ComputeERKNSt3__15arrayIfLm65EEERKNS_20RenderSignalAnalyzerERKNS_16SubtractorOutputEN3rtc9ArrayViewIKfLln4711EEEmbbPNS_7FftDataE(%"class.webrtc::RefinedFilterUpdateGain"* %1324, %"struct.std::__1::array"* nonnull dereferenceable(260) %9, %"class.webrtc::RenderSignalAnalyzer"* dereferenceable(528) %3, %"struct.webrtc::SubtractorOutput"* dereferenceable(2092) %456, float* nonnull %78, i64 65, i64 %1329, i1 zeroext %1331, i1 zeroext %1319, %"struct.webrtc::FftData"* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %76) #15
  br label %1332

1332:                                             ; preds = %1309, %1318
  %1333 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %1334 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1333, i64 %388, i32 0, i32 0, i32 0
  %1335 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1334, align 8
  %1336 = load %"class.std::__1::vector.87"*, %"class.std::__1::vector.87"** %72, align 8
  %1337 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %1336, i64 %388
  call void @_ZN6webrtc17AdaptiveFirFilter5AdaptERKNS_12RenderBufferERKNS_7FftDataEPNSt3__16vectorIfNS7_9allocatorIfEEEE(%"class.webrtc::AdaptiveFirFilter"* %1335, %"class.webrtc::RenderBuffer"* dereferenceable(32) %1, %"struct.webrtc::FftData"* nonnull dereferenceable(520) %12, %"class.std::__1::vector.87"* %1337) #15
  %1338 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %1339 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1338, i64 %388, i32 0, i32 0, i32 0
  %1340 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1339, align 8
  %1341 = load %"class.std::__1::vector.73"*, %"class.std::__1::vector.73"** %77, align 8
  %1342 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %1341, i64 %388
  call void @_ZNK6webrtc17AdaptiveFirFilter24ComputeFrequencyResponseEPNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEE(%"class.webrtc::AdaptiveFirFilter"* %1340, %"class.std::__1::vector.73"* %1342) #15
  %1343 = load float, float* %1054, align 4
  %1344 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 10
  %1345 = load float, float* %1344, align 4
  %1346 = fcmp olt float %1343, %1345
  %1347 = load i64*, i64** %81, align 8
  br i1 %1346, label %1348, label %1352

1348:                                             ; preds = %1332
  %1349 = getelementptr inbounds i64, i64* %1347, i64 %388
  %1350 = load i64, i64* %1349, align 8
  %1351 = add i64 %1350, 1
  br label %1352

1352:                                             ; preds = %1332, %1348
  %1353 = phi i64 [ %1351, %1348 ], [ 0, %1332 ]
  %1354 = getelementptr inbounds i64, i64* %1347, i64 %388
  store i64 %1353, i64* %1354, align 8
  %1355 = load i64*, i64** %81, align 8
  %1356 = getelementptr inbounds i64, i64* %1355, i64 %388
  %1357 = load i64, i64* %1356, align 8
  %1358 = icmp ult i64 %1357, 5
  br i1 %1358, label %1359, label %1376

1359:                                             ; preds = %1352
  %1360 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %82, align 8
  %1361 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %1360, i64 %388, i32 0, i32 0, i32 0
  %1362 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %1361, align 8
  %1363 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %1364 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1363, i64 %388, i32 0, i32 0, i32 0
  %1365 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1364, align 8
  %1366 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %1365, i64 0, i32 7
  %1367 = load i64, i64* %1366, align 8
  %1368 = load i8, i8* %80, align 8, !range !2
  %1369 = icmp ne i8 %1368, 0
  call void @_ZN6webrtc22CoarseFilterUpdateGain7ComputeERKNSt3__15arrayIfLm65EEERKNS_20RenderSignalAnalyzerERKNS_7FftDataEmbPS9_(%"class.webrtc::CoarseFilterUpdateGain"* %1362, %"struct.std::__1::array"* nonnull dereferenceable(260) %30, %"class.webrtc::RenderSignalAnalyzer"* dereferenceable(528) %3, %"struct.webrtc::FftData"* nonnull dereferenceable(520) %11, i64 %1367, i1 zeroext %1369, %"struct.webrtc::FftData"* nonnull %12) #15
  %1370 = load i32*, i32** %74, align 8
  %1371 = getelementptr inbounds i32, i32* %1370, i64 %388
  %1372 = load i32, i32* %1371, align 4
  %1373 = icmp sgt i32 %1372, 1
  %1374 = select i1 %1373, i32 %1372, i32 1
  %1375 = add nsw i32 %1374, -1
  store i32 %1375, i32* %1371, align 4
  br label %1399

1376:                                             ; preds = %1352
  store i64 0, i64* %1356, align 8
  %1377 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %1378 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1377, i64 %388, i32 0, i32 0, i32 0
  %1379 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1378, align 8
  %1380 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %1381 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1380, i64 %388, i32 0, i32 0, i32 0
  %1382 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1381, align 8
  %1383 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %1382, i64 0, i32 7
  %1384 = load i64, i64* %1383, align 8
  %1385 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %1382, i64 0, i32 11
  call void @_ZN6webrtc17AdaptiveFirFilter9SetFilterEmRKNSt3__16vectorINS2_INS_7FftDataENS1_9allocatorIS3_EEEENS4_IS6_EEEE(%"class.webrtc::AdaptiveFirFilter"* %1379, i64 %1384, %"class.std::__1::vector.0"* dereferenceable(24) %1385) #15
  %1386 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %82, align 8
  %1387 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %1386, i64 %388, i32 0, i32 0, i32 0
  %1388 = load %"class.webrtc::CoarseFilterUpdateGain"*, %"class.webrtc::CoarseFilterUpdateGain"** %1387, align 8
  %1389 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %1390 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1389, i64 %388, i32 0, i32 0, i32 0
  %1391 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1390, align 8
  %1392 = getelementptr inbounds %"class.webrtc::AdaptiveFirFilter", %"class.webrtc::AdaptiveFirFilter"* %1391, i64 0, i32 7
  %1393 = load i64, i64* %1392, align 8
  %1394 = load i8, i8* %80, align 8, !range !2
  %1395 = icmp ne i8 %1394, 0
  call void @_ZN6webrtc22CoarseFilterUpdateGain7ComputeERKNSt3__15arrayIfLm65EEERKNS_20RenderSignalAnalyzerERKNS_7FftDataEmbPS9_(%"class.webrtc::CoarseFilterUpdateGain"* %1388, %"struct.std::__1::array"* nonnull dereferenceable(260) %30, %"class.webrtc::RenderSignalAnalyzer"* dereferenceable(528) %3, %"struct.webrtc::FftData"* dereferenceable(520) %458, i64 %1393, i1 zeroext %1395, %"struct.webrtc::FftData"* nonnull %12) #15
  %1396 = load i32, i32* %83, align 4
  %1397 = load i32*, i32** %74, align 8
  %1398 = getelementptr inbounds i32, i32* %1397, i64 %388
  store i32 %1396, i32* %1398, align 4
  br label %1399

1399:                                             ; preds = %1376, %1359
  %1400 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %1401 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1400, i64 %388, i32 0, i32 0, i32 0
  %1402 = load %"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::AdaptiveFirFilter"** %1401, align 8
  call void @_ZN6webrtc17AdaptiveFirFilter5AdaptERKNS_12RenderBufferERKNS_7FftDataE(%"class.webrtc::AdaptiveFirFilter"* %1402, %"class.webrtc::RenderBuffer"* dereferenceable(32) %1, %"struct.webrtc::FftData"* nonnull dereferenceable(520) %12) #15
  %1403 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 0
  %1404 = bitcast float* %1403 to <4 x float>*
  %1405 = load <4 x float>, <4 x float>* %1404, align 4
  %1406 = fcmp ole <4 x float> %1405, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1407 = fcmp oge <4 x float> %1405, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1408 = select <4 x i1> %1407, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1405
  %1409 = select <4 x i1> %1406, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1408
  %1410 = bitcast float* %1403 to <4 x float>*
  store <4 x float> %1409, <4 x float>* %1410, align 4
  %1411 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 4
  %1412 = bitcast float* %1411 to <4 x float>*
  %1413 = load <4 x float>, <4 x float>* %1412, align 4
  %1414 = fcmp ole <4 x float> %1413, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1415 = fcmp oge <4 x float> %1413, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1416 = select <4 x i1> %1415, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1413
  %1417 = select <4 x i1> %1414, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1416
  %1418 = bitcast float* %1411 to <4 x float>*
  store <4 x float> %1417, <4 x float>* %1418, align 4
  %1419 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 8
  %1420 = bitcast float* %1419 to <4 x float>*
  %1421 = load <4 x float>, <4 x float>* %1420, align 4
  %1422 = fcmp ole <4 x float> %1421, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1423 = fcmp oge <4 x float> %1421, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1424 = select <4 x i1> %1423, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1421
  %1425 = select <4 x i1> %1422, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1424
  %1426 = bitcast float* %1419 to <4 x float>*
  store <4 x float> %1425, <4 x float>* %1426, align 4
  %1427 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 12
  %1428 = bitcast float* %1427 to <4 x float>*
  %1429 = load <4 x float>, <4 x float>* %1428, align 4
  %1430 = fcmp ole <4 x float> %1429, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1431 = fcmp oge <4 x float> %1429, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1432 = select <4 x i1> %1431, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1429
  %1433 = select <4 x i1> %1430, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1432
  %1434 = bitcast float* %1427 to <4 x float>*
  store <4 x float> %1433, <4 x float>* %1434, align 4
  %1435 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 16
  %1436 = bitcast float* %1435 to <4 x float>*
  %1437 = load <4 x float>, <4 x float>* %1436, align 4
  %1438 = fcmp ole <4 x float> %1437, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1439 = fcmp oge <4 x float> %1437, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1440 = select <4 x i1> %1439, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1437
  %1441 = select <4 x i1> %1438, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1440
  %1442 = bitcast float* %1435 to <4 x float>*
  store <4 x float> %1441, <4 x float>* %1442, align 4
  %1443 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 20
  %1444 = bitcast float* %1443 to <4 x float>*
  %1445 = load <4 x float>, <4 x float>* %1444, align 4
  %1446 = fcmp ole <4 x float> %1445, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1447 = fcmp oge <4 x float> %1445, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1448 = select <4 x i1> %1447, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1445
  %1449 = select <4 x i1> %1446, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1448
  %1450 = bitcast float* %1443 to <4 x float>*
  store <4 x float> %1449, <4 x float>* %1450, align 4
  %1451 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 24
  %1452 = bitcast float* %1451 to <4 x float>*
  %1453 = load <4 x float>, <4 x float>* %1452, align 4
  %1454 = fcmp ole <4 x float> %1453, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1455 = fcmp oge <4 x float> %1453, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1456 = select <4 x i1> %1455, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1453
  %1457 = select <4 x i1> %1454, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1456
  %1458 = bitcast float* %1451 to <4 x float>*
  store <4 x float> %1457, <4 x float>* %1458, align 4
  %1459 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 28
  %1460 = bitcast float* %1459 to <4 x float>*
  %1461 = load <4 x float>, <4 x float>* %1460, align 4
  %1462 = fcmp ole <4 x float> %1461, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1463 = fcmp oge <4 x float> %1461, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1464 = select <4 x i1> %1463, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1461
  %1465 = select <4 x i1> %1462, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1464
  %1466 = bitcast float* %1459 to <4 x float>*
  store <4 x float> %1465, <4 x float>* %1466, align 4
  %1467 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 32
  %1468 = bitcast float* %1467 to <4 x float>*
  %1469 = load <4 x float>, <4 x float>* %1468, align 4
  %1470 = fcmp ole <4 x float> %1469, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1471 = fcmp oge <4 x float> %1469, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1472 = select <4 x i1> %1471, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1469
  %1473 = select <4 x i1> %1470, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1472
  %1474 = bitcast float* %1467 to <4 x float>*
  store <4 x float> %1473, <4 x float>* %1474, align 4
  %1475 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 36
  %1476 = bitcast float* %1475 to <4 x float>*
  %1477 = load <4 x float>, <4 x float>* %1476, align 4
  %1478 = fcmp ole <4 x float> %1477, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1479 = fcmp oge <4 x float> %1477, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1480 = select <4 x i1> %1479, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1477
  %1481 = select <4 x i1> %1478, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1480
  %1482 = bitcast float* %1475 to <4 x float>*
  store <4 x float> %1481, <4 x float>* %1482, align 4
  %1483 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 40
  %1484 = bitcast float* %1483 to <4 x float>*
  %1485 = load <4 x float>, <4 x float>* %1484, align 4
  %1486 = fcmp ole <4 x float> %1485, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1487 = fcmp oge <4 x float> %1485, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1488 = select <4 x i1> %1487, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1485
  %1489 = select <4 x i1> %1486, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1488
  %1490 = bitcast float* %1483 to <4 x float>*
  store <4 x float> %1489, <4 x float>* %1490, align 4
  %1491 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 44
  %1492 = bitcast float* %1491 to <4 x float>*
  %1493 = load <4 x float>, <4 x float>* %1492, align 4
  %1494 = fcmp ole <4 x float> %1493, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1495 = fcmp oge <4 x float> %1493, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1496 = select <4 x i1> %1495, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1493
  %1497 = select <4 x i1> %1494, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1496
  %1498 = bitcast float* %1491 to <4 x float>*
  store <4 x float> %1497, <4 x float>* %1498, align 4
  %1499 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 48
  %1500 = bitcast float* %1499 to <4 x float>*
  %1501 = load <4 x float>, <4 x float>* %1500, align 4
  %1502 = fcmp ole <4 x float> %1501, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1503 = fcmp oge <4 x float> %1501, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1504 = select <4 x i1> %1503, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1501
  %1505 = select <4 x i1> %1502, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1504
  %1506 = bitcast float* %1499 to <4 x float>*
  store <4 x float> %1505, <4 x float>* %1506, align 4
  %1507 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 52
  %1508 = bitcast float* %1507 to <4 x float>*
  %1509 = load <4 x float>, <4 x float>* %1508, align 4
  %1510 = fcmp ole <4 x float> %1509, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1511 = fcmp oge <4 x float> %1509, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1512 = select <4 x i1> %1511, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1509
  %1513 = select <4 x i1> %1510, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1512
  %1514 = bitcast float* %1507 to <4 x float>*
  store <4 x float> %1513, <4 x float>* %1514, align 4
  %1515 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 56
  %1516 = bitcast float* %1515 to <4 x float>*
  %1517 = load <4 x float>, <4 x float>* %1516, align 4
  %1518 = fcmp ole <4 x float> %1517, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1519 = fcmp oge <4 x float> %1517, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1520 = select <4 x i1> %1519, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1517
  %1521 = select <4 x i1> %1518, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1520
  %1522 = bitcast float* %1515 to <4 x float>*
  store <4 x float> %1521, <4 x float>* %1522, align 4
  %1523 = getelementptr %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %389, i64 %388, i32 2, i32 0, i64 60
  %1524 = bitcast float* %1523 to <4 x float>*
  %1525 = load <4 x float>, <4 x float>* %1524, align 4
  %1526 = fcmp ole <4 x float> %1525, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %1527 = fcmp oge <4 x float> %1525, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %1528 = select <4 x i1> %1527, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> %1525
  %1529 = select <4 x i1> %1526, <4 x float> <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>, <4 x float> %1528
  %1530 = bitcast float* %1523 to <4 x float>*
  store <4 x float> %1529, <4 x float>* %1530, align 4
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 520, i8* nonnull %49) #15
  %1531 = add nuw i64 %388, 1
  %1532 = load i64, i64* %43, align 8
  %1533 = icmp ult i64 %1531, %1532
  br i1 %1533, label %387, label %386
}

declare void @_ZNK6webrtc12RenderBuffer11SpectralSumEmPNSt3__15arrayIfLm65EEE(%"class.webrtc::RenderBuffer"*, i64, %"struct.std::__1::array"*) local_unnamed_addr #1

declare void @_ZNK6webrtc12RenderBuffer12SpectralSumsEmmPNSt3__15arrayIfLm65EEES4_(%"class.webrtc::RenderBuffer"*, i64, i64, %"struct.std::__1::array"*, %"struct.std::__1::array"*) local_unnamed_addr #1

declare void @_ZNK6webrtc17AdaptiveFirFilter6FilterERKNS_12RenderBufferEPNS_7FftDataE(%"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::RenderBuffer"* dereferenceable(32), %"struct.webrtc::FftData"*) local_unnamed_addr #1

declare void @_ZN6webrtc16SubtractorOutput14ComputeMetricsEN3rtc9ArrayViewIKfLln4711EEE(%"struct.webrtc::SubtractorOutput"*, float*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10Subtractor28FilterMisadjustmentEstimator6UpdateERKNS_16SubtractorOutputE(%"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* nocapture, %"struct.webrtc::SubtractorOutput"* nocapture readonly dereferenceable(2092)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %1, i64 0, i32 9
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 2
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"struct.webrtc::SubtractorOutput", %"struct.webrtc::SubtractorOutput"* %1, i64 0, i32 11
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 3
  %11 = load float, float* %10, align 4
  %12 = fadd float %9, %11
  store float %12, float* %10, align 4
  %13 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %49

19:                                               ; preds = %2
  %20 = sitofp i32 %15 to float
  %21 = fmul float %20, 2.000000e+02
  %22 = fmul float %21, 2.000000e+02
  %23 = fmul float %22, 6.400000e+01
  %24 = fcmp ogt float %12, %23
  br i1 %24, label %25, label %48

25:                                               ; preds = %19
  %26 = fdiv float %7, %12
  %27 = fmul float %20, 7.500000e+03
  %28 = fmul float %27, 7.500000e+03
  %29 = fmul float %28, 6.400000e+01
  %30 = fcmp ogt float %7, %29
  %31 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 5
  br i1 %30, label %37, label %32

32:                                               ; preds = %25
  %33 = load i32, i32* %31, align 4
  %34 = icmp sgt i32 %33, 1
  %35 = select i1 %34, i32 %33, i32 1
  %36 = add nsw i32 %35, -1
  br label %37

37:                                               ; preds = %25, %32
  %38 = phi i32 [ %36, %32 ], [ 4, %25 ]
  store i32 %38, i32* %31, align 4
  %39 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 4
  %40 = load float, float* %39, align 4
  %41 = fcmp olt float %26, %40
  %42 = icmp sgt i32 %38, 0
  %43 = or i1 %41, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = fsub float %26, %40
  %46 = fmul float %45, 0x3FB99999A0000000
  %47 = fadd float %40, %46
  store float %47, float* %39, align 4
  br label %48

48:                                               ; preds = %37, %44, %19
  store float 0.000000e+00, float* %5, align 4
  store float 0.000000e+00, float* %10, align 4
  store i32 0, i32* %13, align 4
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

declare void @_ZN6webrtc17AdaptiveFirFilter11ScaleFilterEf(%"class.webrtc::AdaptiveFirFilter"*, float) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc10Subtractor28FilterMisadjustmentEstimator5ResetEv(%"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Subtractor::FilterMisadjustmentEstimator", %"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* %0, i64 0, i32 1
  %3 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 20, i1 false)
  ret void
}

declare void @_ZNK6webrtc7Aec3Fft13ZeroPaddedFftEN3rtc9ArrayViewIKfLln4711EEENS0_6WindowEPNS_7FftDataE(%"class.webrtc::Aec3Fft"*, float*, i64, i32, %"struct.webrtc::FftData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"*, i32, float*, i64) local_unnamed_addr #4 comdat align 2 {
  switch i32 %1, label %191 [
    i32 1, label %5
    i32 2, label %188
  ]

5:                                                ; preds = %4
  %6 = bitcast %"struct.webrtc::FftData"* %0 to <4 x float>*
  %7 = load <4 x float>, <4 x float>* %6, align 1
  %8 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 1
  %11 = fmul <4 x float> %10, %10
  %12 = fmul <4 x float> %7, %7
  %13 = fadd <4 x float> %12, %11
  %14 = bitcast float* %2 to <4 x float>*
  store <4 x float> %13, <4 x float>* %14, align 1
  %15 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 1
  %18 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 1
  %21 = fmul <4 x float> %20, %20
  %22 = fmul <4 x float> %17, %17
  %23 = fadd <4 x float> %22, %21
  %24 = getelementptr inbounds float, float* %2, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 1
  %26 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 8
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 1
  %29 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 8
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 1
  %32 = fmul <4 x float> %31, %31
  %33 = fmul <4 x float> %28, %28
  %34 = fadd <4 x float> %33, %32
  %35 = getelementptr inbounds float, float* %2, i64 8
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 1
  %37 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 12
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 1
  %40 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 12
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 1
  %43 = fmul <4 x float> %42, %42
  %44 = fmul <4 x float> %39, %39
  %45 = fadd <4 x float> %44, %43
  %46 = getelementptr inbounds float, float* %2, i64 12
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 1
  %48 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 16
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 1
  %51 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 16
  %52 = bitcast float* %51 to <4 x float>*
  %53 = load <4 x float>, <4 x float>* %52, align 1
  %54 = fmul <4 x float> %53, %53
  %55 = fmul <4 x float> %50, %50
  %56 = fadd <4 x float> %55, %54
  %57 = getelementptr inbounds float, float* %2, i64 16
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 1
  %59 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 20
  %60 = bitcast float* %59 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 1
  %62 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 20
  %63 = bitcast float* %62 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 1
  %65 = fmul <4 x float> %64, %64
  %66 = fmul <4 x float> %61, %61
  %67 = fadd <4 x float> %66, %65
  %68 = getelementptr inbounds float, float* %2, i64 20
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %67, <4 x float>* %69, align 1
  %70 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 24
  %71 = bitcast float* %70 to <4 x float>*
  %72 = load <4 x float>, <4 x float>* %71, align 1
  %73 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 24
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 1
  %76 = fmul <4 x float> %75, %75
  %77 = fmul <4 x float> %72, %72
  %78 = fadd <4 x float> %77, %76
  %79 = getelementptr inbounds float, float* %2, i64 24
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 1
  %81 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 28
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 1
  %84 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 28
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 1
  %87 = fmul <4 x float> %86, %86
  %88 = fmul <4 x float> %83, %83
  %89 = fadd <4 x float> %88, %87
  %90 = getelementptr inbounds float, float* %2, i64 28
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %89, <4 x float>* %91, align 1
  %92 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 32
  %93 = bitcast float* %92 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 1
  %95 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 32
  %96 = bitcast float* %95 to <4 x float>*
  %97 = load <4 x float>, <4 x float>* %96, align 1
  %98 = fmul <4 x float> %97, %97
  %99 = fmul <4 x float> %94, %94
  %100 = fadd <4 x float> %99, %98
  %101 = getelementptr inbounds float, float* %2, i64 32
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 1
  %103 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 36
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 1
  %106 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 36
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 1
  %109 = fmul <4 x float> %108, %108
  %110 = fmul <4 x float> %105, %105
  %111 = fadd <4 x float> %110, %109
  %112 = getelementptr inbounds float, float* %2, i64 36
  %113 = bitcast float* %112 to <4 x float>*
  store <4 x float> %111, <4 x float>* %113, align 1
  %114 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 40
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 1
  %117 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 40
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 1
  %120 = fmul <4 x float> %119, %119
  %121 = fmul <4 x float> %116, %116
  %122 = fadd <4 x float> %121, %120
  %123 = getelementptr inbounds float, float* %2, i64 40
  %124 = bitcast float* %123 to <4 x float>*
  store <4 x float> %122, <4 x float>* %124, align 1
  %125 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 44
  %126 = bitcast float* %125 to <4 x float>*
  %127 = load <4 x float>, <4 x float>* %126, align 1
  %128 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 44
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 1
  %131 = fmul <4 x float> %130, %130
  %132 = fmul <4 x float> %127, %127
  %133 = fadd <4 x float> %132, %131
  %134 = getelementptr inbounds float, float* %2, i64 44
  %135 = bitcast float* %134 to <4 x float>*
  store <4 x float> %133, <4 x float>* %135, align 1
  %136 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 48
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 1
  %139 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 48
  %140 = bitcast float* %139 to <4 x float>*
  %141 = load <4 x float>, <4 x float>* %140, align 1
  %142 = fmul <4 x float> %141, %141
  %143 = fmul <4 x float> %138, %138
  %144 = fadd <4 x float> %143, %142
  %145 = getelementptr inbounds float, float* %2, i64 48
  %146 = bitcast float* %145 to <4 x float>*
  store <4 x float> %144, <4 x float>* %146, align 1
  %147 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 52
  %148 = bitcast float* %147 to <4 x float>*
  %149 = load <4 x float>, <4 x float>* %148, align 1
  %150 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 52
  %151 = bitcast float* %150 to <4 x float>*
  %152 = load <4 x float>, <4 x float>* %151, align 1
  %153 = fmul <4 x float> %152, %152
  %154 = fmul <4 x float> %149, %149
  %155 = fadd <4 x float> %154, %153
  %156 = getelementptr inbounds float, float* %2, i64 52
  %157 = bitcast float* %156 to <4 x float>*
  store <4 x float> %155, <4 x float>* %157, align 1
  %158 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 56
  %159 = bitcast float* %158 to <4 x float>*
  %160 = load <4 x float>, <4 x float>* %159, align 1
  %161 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 56
  %162 = bitcast float* %161 to <4 x float>*
  %163 = load <4 x float>, <4 x float>* %162, align 1
  %164 = fmul <4 x float> %163, %163
  %165 = fmul <4 x float> %160, %160
  %166 = fadd <4 x float> %165, %164
  %167 = getelementptr inbounds float, float* %2, i64 56
  %168 = bitcast float* %167 to <4 x float>*
  store <4 x float> %166, <4 x float>* %168, align 1
  %169 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 60
  %170 = bitcast float* %169 to <4 x float>*
  %171 = load <4 x float>, <4 x float>* %170, align 1
  %172 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 60
  %173 = bitcast float* %172 to <4 x float>*
  %174 = load <4 x float>, <4 x float>* %173, align 1
  %175 = fmul <4 x float> %174, %174
  %176 = fmul <4 x float> %171, %171
  %177 = fadd <4 x float> %176, %175
  %178 = getelementptr inbounds float, float* %2, i64 60
  %179 = bitcast float* %178 to <4 x float>*
  store <4 x float> %177, <4 x float>* %179, align 1
  %180 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %181 = load float, float* %180, align 4
  %182 = fmul float %181, %181
  %183 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 64
  %184 = load float, float* %183, align 4
  %185 = fmul float %184, %184
  %186 = fadd float %182, %185
  %187 = getelementptr inbounds float, float* %2, i64 64
  store float %186, float* %187, align 4
  br label %448

188:                                              ; preds = %4
  %189 = icmp eq i64 %3, 0
  %190 = select i1 %189, float* null, float* %2
  tail call void @_ZNK6webrtc7FftData12SpectrumAVX2EN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"* %0, float* %190, i64 %3) #15
  br label %448

191:                                              ; preds = %4
  %192 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 0
  %193 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 65
  %194 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %195 = getelementptr float, float* %2, i64 65
  %196 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 1, i32 0, i32 0, i64 0
  %197 = icmp ugt float* %196, %2
  %198 = bitcast float* %195 to %"struct.webrtc::FftData"*
  %199 = icmp ugt %"struct.webrtc::FftData"* %198, %0
  %200 = and i1 %197, %199
  br i1 %200, label %379, label %201

201:                                              ; preds = %191
  %202 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %203 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 64
  %204 = getelementptr float, float* %2, i64 64
  %205 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %206 = bitcast %"struct.webrtc::FftData"* %0 to <4 x float>*
  %207 = load <4 x float>, <4 x float>* %206, align 4, !alias.scope !49
  %208 = bitcast float* %205 to <4 x float>*
  %209 = load <4 x float>, <4 x float>* %208, align 4, !alias.scope !49
  %210 = fmul <4 x float> %207, %207
  %211 = fmul <4 x float> %209, %209
  %212 = fadd <4 x float> %210, %211
  %213 = bitcast float* %2 to <4 x float>*
  store <4 x float> %212, <4 x float>* %213, align 4, !alias.scope !52, !noalias !49
  %214 = getelementptr float, float* %2, i64 4
  %215 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 4
  %216 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 4
  %217 = bitcast float* %216 to <4 x float>*
  %218 = load <4 x float>, <4 x float>* %217, align 4, !alias.scope !49
  %219 = bitcast float* %215 to <4 x float>*
  %220 = load <4 x float>, <4 x float>* %219, align 4, !alias.scope !49
  %221 = fmul <4 x float> %218, %218
  %222 = fmul <4 x float> %220, %220
  %223 = fadd <4 x float> %221, %222
  %224 = bitcast float* %214 to <4 x float>*
  store <4 x float> %223, <4 x float>* %224, align 4, !alias.scope !52, !noalias !49
  %225 = getelementptr float, float* %2, i64 8
  %226 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 8
  %227 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 8
  %228 = bitcast float* %227 to <4 x float>*
  %229 = load <4 x float>, <4 x float>* %228, align 4, !alias.scope !49
  %230 = bitcast float* %226 to <4 x float>*
  %231 = load <4 x float>, <4 x float>* %230, align 4, !alias.scope !49
  %232 = fmul <4 x float> %229, %229
  %233 = fmul <4 x float> %231, %231
  %234 = fadd <4 x float> %232, %233
  %235 = bitcast float* %225 to <4 x float>*
  store <4 x float> %234, <4 x float>* %235, align 4, !alias.scope !52, !noalias !49
  %236 = getelementptr float, float* %2, i64 12
  %237 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 12
  %238 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 12
  %239 = bitcast float* %238 to <4 x float>*
  %240 = load <4 x float>, <4 x float>* %239, align 4, !alias.scope !49
  %241 = bitcast float* %237 to <4 x float>*
  %242 = load <4 x float>, <4 x float>* %241, align 4, !alias.scope !49
  %243 = fmul <4 x float> %240, %240
  %244 = fmul <4 x float> %242, %242
  %245 = fadd <4 x float> %243, %244
  %246 = bitcast float* %236 to <4 x float>*
  store <4 x float> %245, <4 x float>* %246, align 4, !alias.scope !52, !noalias !49
  %247 = getelementptr float, float* %2, i64 16
  %248 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 16
  %249 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 16
  %250 = bitcast float* %249 to <4 x float>*
  %251 = load <4 x float>, <4 x float>* %250, align 4, !alias.scope !49
  %252 = bitcast float* %248 to <4 x float>*
  %253 = load <4 x float>, <4 x float>* %252, align 4, !alias.scope !49
  %254 = fmul <4 x float> %251, %251
  %255 = fmul <4 x float> %253, %253
  %256 = fadd <4 x float> %254, %255
  %257 = bitcast float* %247 to <4 x float>*
  store <4 x float> %256, <4 x float>* %257, align 4, !alias.scope !52, !noalias !49
  %258 = getelementptr float, float* %2, i64 20
  %259 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 20
  %260 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 20
  %261 = bitcast float* %260 to <4 x float>*
  %262 = load <4 x float>, <4 x float>* %261, align 4, !alias.scope !49
  %263 = bitcast float* %259 to <4 x float>*
  %264 = load <4 x float>, <4 x float>* %263, align 4, !alias.scope !49
  %265 = fmul <4 x float> %262, %262
  %266 = fmul <4 x float> %264, %264
  %267 = fadd <4 x float> %265, %266
  %268 = bitcast float* %258 to <4 x float>*
  store <4 x float> %267, <4 x float>* %268, align 4, !alias.scope !52, !noalias !49
  %269 = getelementptr float, float* %2, i64 24
  %270 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 24
  %271 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 24
  %272 = bitcast float* %271 to <4 x float>*
  %273 = load <4 x float>, <4 x float>* %272, align 4, !alias.scope !49
  %274 = bitcast float* %270 to <4 x float>*
  %275 = load <4 x float>, <4 x float>* %274, align 4, !alias.scope !49
  %276 = fmul <4 x float> %273, %273
  %277 = fmul <4 x float> %275, %275
  %278 = fadd <4 x float> %276, %277
  %279 = bitcast float* %269 to <4 x float>*
  store <4 x float> %278, <4 x float>* %279, align 4, !alias.scope !52, !noalias !49
  %280 = getelementptr float, float* %2, i64 28
  %281 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 28
  %282 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 28
  %283 = bitcast float* %282 to <4 x float>*
  %284 = load <4 x float>, <4 x float>* %283, align 4, !alias.scope !49
  %285 = bitcast float* %281 to <4 x float>*
  %286 = load <4 x float>, <4 x float>* %285, align 4, !alias.scope !49
  %287 = fmul <4 x float> %284, %284
  %288 = fmul <4 x float> %286, %286
  %289 = fadd <4 x float> %287, %288
  %290 = bitcast float* %280 to <4 x float>*
  store <4 x float> %289, <4 x float>* %290, align 4, !alias.scope !52, !noalias !49
  %291 = getelementptr float, float* %2, i64 32
  %292 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 32
  %293 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 32
  %294 = bitcast float* %293 to <4 x float>*
  %295 = load <4 x float>, <4 x float>* %294, align 4, !alias.scope !49
  %296 = bitcast float* %292 to <4 x float>*
  %297 = load <4 x float>, <4 x float>* %296, align 4, !alias.scope !49
  %298 = fmul <4 x float> %295, %295
  %299 = fmul <4 x float> %297, %297
  %300 = fadd <4 x float> %298, %299
  %301 = bitcast float* %291 to <4 x float>*
  store <4 x float> %300, <4 x float>* %301, align 4, !alias.scope !52, !noalias !49
  %302 = getelementptr float, float* %2, i64 36
  %303 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 36
  %304 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 36
  %305 = bitcast float* %304 to <4 x float>*
  %306 = load <4 x float>, <4 x float>* %305, align 4, !alias.scope !49
  %307 = bitcast float* %303 to <4 x float>*
  %308 = load <4 x float>, <4 x float>* %307, align 4, !alias.scope !49
  %309 = fmul <4 x float> %306, %306
  %310 = fmul <4 x float> %308, %308
  %311 = fadd <4 x float> %309, %310
  %312 = bitcast float* %302 to <4 x float>*
  store <4 x float> %311, <4 x float>* %312, align 4, !alias.scope !52, !noalias !49
  %313 = getelementptr float, float* %2, i64 40
  %314 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 40
  %315 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 40
  %316 = bitcast float* %315 to <4 x float>*
  %317 = load <4 x float>, <4 x float>* %316, align 4, !alias.scope !49
  %318 = bitcast float* %314 to <4 x float>*
  %319 = load <4 x float>, <4 x float>* %318, align 4, !alias.scope !49
  %320 = fmul <4 x float> %317, %317
  %321 = fmul <4 x float> %319, %319
  %322 = fadd <4 x float> %320, %321
  %323 = bitcast float* %313 to <4 x float>*
  store <4 x float> %322, <4 x float>* %323, align 4, !alias.scope !52, !noalias !49
  %324 = getelementptr float, float* %2, i64 44
  %325 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 44
  %326 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 44
  %327 = bitcast float* %326 to <4 x float>*
  %328 = load <4 x float>, <4 x float>* %327, align 4, !alias.scope !49
  %329 = bitcast float* %325 to <4 x float>*
  %330 = load <4 x float>, <4 x float>* %329, align 4, !alias.scope !49
  %331 = fmul <4 x float> %328, %328
  %332 = fmul <4 x float> %330, %330
  %333 = fadd <4 x float> %331, %332
  %334 = bitcast float* %324 to <4 x float>*
  store <4 x float> %333, <4 x float>* %334, align 4, !alias.scope !52, !noalias !49
  %335 = getelementptr float, float* %2, i64 48
  %336 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 48
  %337 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 48
  %338 = bitcast float* %337 to <4 x float>*
  %339 = load <4 x float>, <4 x float>* %338, align 4, !alias.scope !49
  %340 = bitcast float* %336 to <4 x float>*
  %341 = load <4 x float>, <4 x float>* %340, align 4, !alias.scope !49
  %342 = fmul <4 x float> %339, %339
  %343 = fmul <4 x float> %341, %341
  %344 = fadd <4 x float> %342, %343
  %345 = bitcast float* %335 to <4 x float>*
  store <4 x float> %344, <4 x float>* %345, align 4, !alias.scope !52, !noalias !49
  %346 = getelementptr float, float* %2, i64 52
  %347 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 52
  %348 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 52
  %349 = bitcast float* %348 to <4 x float>*
  %350 = load <4 x float>, <4 x float>* %349, align 4, !alias.scope !49
  %351 = bitcast float* %347 to <4 x float>*
  %352 = load <4 x float>, <4 x float>* %351, align 4, !alias.scope !49
  %353 = fmul <4 x float> %350, %350
  %354 = fmul <4 x float> %352, %352
  %355 = fadd <4 x float> %353, %354
  %356 = bitcast float* %346 to <4 x float>*
  store <4 x float> %355, <4 x float>* %356, align 4, !alias.scope !52, !noalias !49
  %357 = getelementptr float, float* %2, i64 56
  %358 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 56
  %359 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 56
  %360 = bitcast float* %359 to <4 x float>*
  %361 = load <4 x float>, <4 x float>* %360, align 4, !alias.scope !49
  %362 = bitcast float* %358 to <4 x float>*
  %363 = load <4 x float>, <4 x float>* %362, align 4, !alias.scope !49
  %364 = fmul <4 x float> %361, %361
  %365 = fmul <4 x float> %363, %363
  %366 = fadd <4 x float> %364, %365
  %367 = bitcast float* %357 to <4 x float>*
  store <4 x float> %366, <4 x float>* %367, align 4, !alias.scope !52, !noalias !49
  %368 = getelementptr float, float* %2, i64 60
  %369 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 60
  %370 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 60
  %371 = bitcast float* %370 to <4 x float>*
  %372 = load <4 x float>, <4 x float>* %371, align 4, !alias.scope !49
  %373 = bitcast float* %369 to <4 x float>*
  %374 = load <4 x float>, <4 x float>* %373, align 4, !alias.scope !49
  %375 = fmul <4 x float> %372, %372
  %376 = fmul <4 x float> %374, %374
  %377 = fadd <4 x float> %375, %376
  %378 = bitcast float* %368 to <4 x float>*
  store <4 x float> %377, <4 x float>* %378, align 4, !alias.scope !52, !noalias !49
  br label %379

379:                                              ; preds = %201, %191
  %380 = phi float* [ %2, %191 ], [ %204, %201 ]
  %381 = phi float* [ %194, %191 ], [ %203, %201 ]
  %382 = phi float* [ %192, %191 ], [ %202, %201 ]
  %383 = ptrtoint float* %382 to i64
  %384 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %385 = ptrtoint float* %384 to i64
  %386 = sub i64 %385, %383
  %387 = lshr i64 %386, 2
  %388 = add nuw nsw i64 %387, 1
  %389 = and i64 %388, 3
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %406, label %391

391:                                              ; preds = %379, %391
  %392 = phi float* [ %403, %391 ], [ %380, %379 ]
  %393 = phi float* [ %402, %391 ], [ %381, %379 ]
  %394 = phi float* [ %401, %391 ], [ %382, %379 ]
  %395 = phi i64 [ %404, %391 ], [ %389, %379 ]
  %396 = load float, float* %394, align 4
  %397 = load float, float* %393, align 4
  %398 = fmul float %396, %396
  %399 = fmul float %397, %397
  %400 = fadd float %398, %399
  store float %400, float* %392, align 4
  %401 = getelementptr inbounds float, float* %394, i64 1
  %402 = getelementptr inbounds float, float* %393, i64 1
  %403 = getelementptr inbounds float, float* %392, i64 1
  %404 = add i64 %395, -1
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %406, label %391, !llvm.loop !54

406:                                              ; preds = %391, %379
  %407 = phi float* [ %380, %379 ], [ %403, %391 ]
  %408 = phi float* [ %381, %379 ], [ %402, %391 ]
  %409 = phi float* [ %382, %379 ], [ %401, %391 ]
  %410 = icmp ult i64 %386, 12
  br i1 %410, label %448, label %411

411:                                              ; preds = %406, %411
  %412 = phi float* [ %446, %411 ], [ %407, %406 ]
  %413 = phi float* [ %445, %411 ], [ %408, %406 ]
  %414 = phi float* [ %444, %411 ], [ %409, %406 ]
  %415 = load float, float* %414, align 4
  %416 = load float, float* %413, align 4
  %417 = fmul float %415, %415
  %418 = fmul float %416, %416
  %419 = fadd float %417, %418
  store float %419, float* %412, align 4
  %420 = getelementptr inbounds float, float* %414, i64 1
  %421 = getelementptr inbounds float, float* %413, i64 1
  %422 = getelementptr inbounds float, float* %412, i64 1
  %423 = load float, float* %420, align 4
  %424 = load float, float* %421, align 4
  %425 = fmul float %423, %423
  %426 = fmul float %424, %424
  %427 = fadd float %425, %426
  store float %427, float* %422, align 4
  %428 = getelementptr inbounds float, float* %414, i64 2
  %429 = getelementptr inbounds float, float* %413, i64 2
  %430 = getelementptr inbounds float, float* %412, i64 2
  %431 = load float, float* %428, align 4
  %432 = load float, float* %429, align 4
  %433 = fmul float %431, %431
  %434 = fmul float %432, %432
  %435 = fadd float %433, %434
  store float %435, float* %430, align 4
  %436 = getelementptr inbounds float, float* %414, i64 3
  %437 = getelementptr inbounds float, float* %413, i64 3
  %438 = getelementptr inbounds float, float* %412, i64 3
  %439 = load float, float* %436, align 4
  %440 = load float, float* %437, align 4
  %441 = fmul float %439, %439
  %442 = fmul float %440, %440
  %443 = fadd float %441, %442
  store float %443, float* %438, align 4
  %444 = getelementptr inbounds float, float* %414, i64 4
  %445 = getelementptr inbounds float, float* %413, i64 4
  %446 = getelementptr inbounds float, float* %412, i64 4
  %447 = icmp eq float* %444, %193
  br i1 %447, label %448, label %411, !llvm.loop !55

448:                                              ; preds = %406, %411, %188, %5
  ret void
}

declare void @_ZN6webrtc10ComputeErlERKNS_16Aec3OptimizationERKNSt3__16vectorINS3_5arrayIfLm65EEENS3_9allocatorIS6_EEEEN3rtc9ArrayViewIfLln4711EEE(i32* dereferenceable(4), %"class.std::__1::vector.73"* dereferenceable(24), float*, i64) local_unnamed_addr #1

declare void @_ZN6webrtc23RefinedFilterUpdateGain7ComputeERKNSt3__15arrayIfLm65EEERKNS_20RenderSignalAnalyzerERKNS_16SubtractorOutputEN3rtc9ArrayViewIKfLln4711EEEmbbPNS_7FftDataE(%"class.webrtc::RefinedFilterUpdateGain"*, %"struct.std::__1::array"* dereferenceable(260), %"class.webrtc::RenderSignalAnalyzer"* dereferenceable(528), %"struct.webrtc::SubtractorOutput"* dereferenceable(2092), float*, i64, i64, i1 zeroext, i1 zeroext, %"struct.webrtc::FftData"*) local_unnamed_addr #1

declare void @_ZN6webrtc17AdaptiveFirFilter5AdaptERKNS_12RenderBufferERKNS_7FftDataEPNSt3__16vectorIfNS7_9allocatorIfEEEE(%"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::RenderBuffer"* dereferenceable(32), %"struct.webrtc::FftData"* dereferenceable(520), %"class.std::__1::vector.87"*) local_unnamed_addr #1

declare void @_ZNK6webrtc17AdaptiveFirFilter24ComputeFrequencyResponseEPNSt3__16vectorINS1_5arrayIfLm65EEENS1_9allocatorIS4_EEEE(%"class.webrtc::AdaptiveFirFilter"*, %"class.std::__1::vector.73"*) local_unnamed_addr #1

declare void @_ZN6webrtc22CoarseFilterUpdateGain7ComputeERKNSt3__15arrayIfLm65EEERKNS_20RenderSignalAnalyzerERKNS_7FftDataEmbPS9_(%"class.webrtc::CoarseFilterUpdateGain"*, %"struct.std::__1::array"* dereferenceable(260), %"class.webrtc::RenderSignalAnalyzer"* dereferenceable(528), %"struct.webrtc::FftData"* dereferenceable(520), i64, i1 zeroext, %"struct.webrtc::FftData"*) local_unnamed_addr #1

declare void @_ZN6webrtc17AdaptiveFirFilter9SetFilterEmRKNSt3__16vectorINS2_INS_7FftDataENS1_9allocatorIS3_EEEENS4_IS6_EEEE(%"class.webrtc::AdaptiveFirFilter"*, i64, %"class.std::__1::vector.0"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN6webrtc17AdaptiveFirFilter5AdaptERKNS_12RenderBufferERKNS_7FftDataE(%"class.webrtc::AdaptiveFirFilter"*, %"class.webrtc::RenderBuffer"* dereferenceable(32), %"struct.webrtc::FftData"* dereferenceable(520)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK6webrtc10Subtractor28FilterMisadjustmentEstimator4DumpEPNS_13ApmDataDumperE(%"class.webrtc::Subtractor::FilterMisadjustmentEstimator"* nocapture, %"class.webrtc::ApmDataDumper"* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #6 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = tail call i64 @strlen(i8* %0) #15
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #16
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #17
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #15
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #15
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #17
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #17
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6webrtc8OouraFftD1Ev(%"class.webrtc::OouraFft"*) unnamed_addr #12

declare void @_ZN6webrtc17AdaptiveFirFilter20HandleEchoPathChangeEv(%"class.webrtc::AdaptiveFirFilter"*) local_unnamed_addr #1

declare void @_ZN6webrtc22CoarseFilterUpdateGain20HandleEchoPathChangeEv(%"class.webrtc::CoarseFilterUpdateGain"*) local_unnamed_addr #1

declare void @_ZNK6webrtc8OouraFft10InverseFftEPf(%"class.webrtc::OouraFft"*, float*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #13

declare void @_ZNK6webrtc7FftData12SpectrumAVX2EN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"*, float*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN6webrtc17AdaptiveFirFilterC1EmmmmNS_16Aec3OptimizationEPNS_13ApmDataDumperE(%"class.webrtc::AdaptiveFirFilter"*, i64, i64, i64, i64, i32, %"class.webrtc::ApmDataDumper"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc17AdaptiveFirFilterD1Ev(%"class.webrtc::AdaptiveFirFilter"*) unnamed_addr #12

declare void @_ZN6webrtc23RefinedFilterUpdateGainC1ERKNS_20EchoCanceller3Config6Filter20RefinedConfigurationEm(%"class.webrtc::RefinedFilterUpdateGain"*, %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration"* dereferenceable(32), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc23RefinedFilterUpdateGainD1Ev(%"class.webrtc::RefinedFilterUpdateGain"*) unnamed_addr #12

declare void @_ZN6webrtc22CoarseFilterUpdateGainC1ERKNS_20EchoCanceller3Config6Filter19CoarseConfigurationEm(%"class.webrtc::CoarseFilterUpdateGain"*, %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration"* dereferenceable(16), i64) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = !{!9}
!9 = distinct !{!9, !5}
!10 = !{!4, !7}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !12}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !12}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = !{!28}
!28 = distinct !{!28, !24}
!29 = !{!23, !26}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !12}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !12}
!39 = distinct !{!39, !12}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !12}
!46 = distinct !{!46, !12}
!47 = distinct !{!47, !48, !12}
!48 = !{!"llvm.loop.unroll.runtime.disable"}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !14}
!55 = distinct !{!55, !12}
