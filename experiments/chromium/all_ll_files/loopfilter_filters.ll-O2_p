; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/loopfilter_filters.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/loopfilter_filters.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.loop_filter_info = type { i8*, i8*, i8*, i8* }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_simple_horizontal_edge_c(i8* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = mul nsw i32 %1, -2
  %5 = sext i32 %4 to i64
  %6 = sub nsw i32 0, %1
  %7 = sext i32 %6 to i64
  %8 = sext i32 %1 to i64
  %9 = shl nsw i32 %1, 1
  %10 = sext i32 %9 to i64
  %11 = sub nsw i64 0, %10
  %12 = sub nsw i64 0, %8
  br label %13

13:                                               ; preds = %13, %3
  %14 = phi i8* [ %0, %3 ], [ %91, %13 ]
  %15 = phi i32 [ 0, %3 ], [ %92, %13 ]
  %16 = load i8, i8* %2, align 1
  %17 = getelementptr inbounds i8, i8* %14, i64 %5
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %14, i64 %7
  %20 = load i8, i8* %19, align 1
  %21 = load i8, i8* %14, align 1
  %22 = getelementptr inbounds i8, i8* %14, i64 %8
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %20 to i32
  %25 = zext i8 %21 to i32
  %26 = sub nsw i32 %24, %25
  %27 = icmp slt i32 %26, 0
  %28 = sub nsw i32 0, %26
  %29 = select i1 %27, i32 %28, i32 %26
  %30 = shl nuw nsw i32 %29, 1
  %31 = zext i8 %18 to i32
  %32 = zext i8 %23 to i32
  %33 = sub nsw i32 %31, %32
  %34 = icmp slt i32 %33, 0
  %35 = sub nsw i32 0, %33
  %36 = select i1 %34, i32 %35, i32 %33
  %37 = lshr i32 %36, 1
  %38 = add nuw nsw i32 %37, %30
  %39 = zext i8 %16 to i32
  %40 = icmp sgt i32 %38, %39
  %41 = getelementptr inbounds i8, i8* %14, i64 %11
  %42 = getelementptr inbounds i8, i8* %14, i64 %12
  %43 = load i8, i8* %41, align 1
  %44 = xor i8 %43, -128
  %45 = load i8, i8* %42, align 1
  %46 = xor i8 %45, -128
  %47 = xor i8 %21, -128
  %48 = xor i8 %23, -128
  %49 = sext i8 %44 to i32
  %50 = sext i8 %48 to i32
  %51 = sub nsw i32 %49, %50
  %52 = icmp sgt i32 %51, -128
  %53 = select i1 %52, i32 %51, i32 -128
  %54 = icmp slt i32 %53, 127
  %55 = select i1 %54, i32 %53, i32 127
  %56 = sext i8 %47 to i32
  %57 = sext i8 %46 to i32
  %58 = sub nsw i32 %56, %57
  %59 = mul nsw i32 %58, 3
  %60 = add nsw i32 %55, %59
  %61 = icmp sgt i32 %60, -128
  %62 = select i1 %61, i32 %60, i32 -128
  %63 = icmp slt i32 %62, 127
  %64 = select i1 %63, i32 %62, i32 127
  %65 = trunc i32 %64 to i8
  %66 = select i1 %40, i8 0, i8 %65
  %67 = icmp slt i8 %66, 123
  %68 = select i1 %67, i8 %66, i8 123
  %69 = add nsw i8 %68, 4
  %70 = ashr i8 %69, 3
  %71 = sext i8 %70 to i32
  %72 = sub nsw i32 %56, %71
  %73 = icmp sgt i32 %72, -128
  %74 = select i1 %73, i32 %72, i32 -128
  %75 = icmp slt i32 %74, 127
  %76 = select i1 %75, i32 %74, i32 127
  %77 = trunc i32 %76 to i8
  %78 = xor i8 %77, -128
  store i8 %78, i8* %14, align 1
  %79 = icmp slt i8 %66, 124
  %80 = select i1 %79, i8 %66, i8 124
  %81 = add nsw i8 %80, 3
  %82 = ashr i8 %81, 3
  %83 = sext i8 %82 to i32
  %84 = add nsw i32 %83, %57
  %85 = icmp sgt i32 %84, -128
  %86 = select i1 %85, i32 %84, i32 -128
  %87 = icmp slt i32 %86, 127
  %88 = select i1 %87, i32 %86, i32 127
  %89 = trunc i32 %88 to i8
  %90 = xor i8 %89, -128
  store i8 %90, i8* %42, align 1
  %91 = getelementptr inbounds i8, i8* %14, i64 1
  %92 = add nuw nsw i32 %15, 1
  %93 = icmp eq i32 %92, 16
  br i1 %93, label %94, label %13

94:                                               ; preds = %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_simple_vertical_edge_c(i8* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = sext i32 %1 to i64
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %83, label %6

6:                                                ; preds = %3, %6
  %7 = phi i8* [ %80, %6 ], [ %0, %3 ]
  %8 = phi i32 [ %81, %6 ], [ 0, %3 ]
  %9 = load i8, i8* %2, align 1
  %10 = getelementptr inbounds i8, i8* %7, i64 -2
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds i8, i8* %7, i64 -1
  %13 = load i8, i8* %12, align 1
  %14 = load i8, i8* %7, align 1
  %15 = getelementptr inbounds i8, i8* %7, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %13 to i32
  %18 = zext i8 %14 to i32
  %19 = sub nsw i32 %17, %18
  %20 = icmp slt i32 %19, 0
  %21 = sub nsw i32 0, %19
  %22 = select i1 %20, i32 %21, i32 %19
  %23 = shl nuw nsw i32 %22, 1
  %24 = zext i8 %11 to i32
  %25 = zext i8 %16 to i32
  %26 = sub nsw i32 %24, %25
  %27 = icmp slt i32 %26, 0
  %28 = sub nsw i32 0, %26
  %29 = select i1 %27, i32 %28, i32 %26
  %30 = lshr i32 %29, 1
  %31 = add nuw nsw i32 %30, %23
  %32 = zext i8 %9 to i32
  %33 = icmp sgt i32 %31, %32
  %34 = xor i8 %11, -128
  %35 = xor i8 %13, -128
  %36 = xor i8 %14, -128
  %37 = xor i8 %16, -128
  %38 = sext i8 %34 to i32
  %39 = sext i8 %37 to i32
  %40 = sub nsw i32 %38, %39
  %41 = icmp sgt i32 %40, -128
  %42 = select i1 %41, i32 %40, i32 -128
  %43 = icmp slt i32 %42, 127
  %44 = select i1 %43, i32 %42, i32 127
  %45 = sext i8 %36 to i32
  %46 = sext i8 %35 to i32
  %47 = sub nsw i32 %45, %46
  %48 = mul nsw i32 %47, 3
  %49 = add nsw i32 %44, %48
  %50 = icmp sgt i32 %49, -128
  %51 = select i1 %50, i32 %49, i32 -128
  %52 = icmp slt i32 %51, 127
  %53 = select i1 %52, i32 %51, i32 127
  %54 = trunc i32 %53 to i8
  %55 = select i1 %33, i8 0, i8 %54
  %56 = icmp slt i8 %55, 123
  %57 = select i1 %56, i8 %55, i8 123
  %58 = add nsw i8 %57, 4
  %59 = ashr i8 %58, 3
  %60 = sext i8 %59 to i32
  %61 = sub nsw i32 %45, %60
  %62 = icmp sgt i32 %61, -128
  %63 = select i1 %62, i32 %61, i32 -128
  %64 = icmp slt i32 %63, 127
  %65 = select i1 %64, i32 %63, i32 127
  %66 = trunc i32 %65 to i8
  %67 = xor i8 %66, -128
  store i8 %67, i8* %7, align 1
  %68 = icmp slt i8 %55, 124
  %69 = select i1 %68, i8 %55, i8 124
  %70 = add nsw i8 %69, 3
  %71 = ashr i8 %70, 3
  %72 = sext i8 %71 to i32
  %73 = add nsw i32 %72, %46
  %74 = icmp sgt i32 %73, -128
  %75 = select i1 %74, i32 %73, i32 -128
  %76 = icmp slt i32 %75, 127
  %77 = select i1 %76, i32 %75, i32 127
  %78 = trunc i32 %77 to i8
  %79 = xor i8 %78, -128
  store i8 %79, i8* %12, align 1
  %80 = getelementptr inbounds i8, i8* %7, i64 %4
  %81 = add nuw nsw i32 %8, 1
  %82 = icmp eq i32 %81, 16
  br i1 %82, label %163, label %6

83:                                               ; preds = %3
  %84 = getelementptr i8, i8* %0, i64 -1
  %85 = load i8, i8* %84, align 1
  br label %86

86:                                               ; preds = %86, %83
  %87 = phi i8 [ %85, %83 ], [ %147, %86 ]
  %88 = phi i8* [ %0, %83 ], [ %160, %86 ]
  %89 = phi i32 [ 0, %83 ], [ %161, %86 ]
  %90 = load i8, i8* %2, align 1
  %91 = getelementptr inbounds i8, i8* %88, i64 -2
  %92 = load i8, i8* %91, align 1
  %93 = getelementptr inbounds i8, i8* %88, i64 -1
  %94 = load i8, i8* %88, align 1
  %95 = getelementptr inbounds i8, i8* %88, i64 1
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %87 to i32
  %98 = zext i8 %94 to i32
  %99 = sub nsw i32 %97, %98
  %100 = icmp slt i32 %99, 0
  %101 = sub nsw i32 0, %99
  %102 = select i1 %100, i32 %101, i32 %99
  %103 = shl nuw nsw i32 %102, 1
  %104 = zext i8 %92 to i32
  %105 = zext i8 %96 to i32
  %106 = sub nsw i32 %104, %105
  %107 = icmp slt i32 %106, 0
  %108 = sub nsw i32 0, %106
  %109 = select i1 %107, i32 %108, i32 %106
  %110 = lshr i32 %109, 1
  %111 = add nuw nsw i32 %110, %103
  %112 = zext i8 %90 to i32
  %113 = icmp sgt i32 %111, %112
  %114 = xor i8 %92, -128
  %115 = xor i8 %87, -128
  %116 = xor i8 %94, -128
  %117 = xor i8 %96, -128
  %118 = sext i8 %114 to i32
  %119 = sext i8 %117 to i32
  %120 = sub nsw i32 %118, %119
  %121 = icmp sgt i32 %120, -128
  %122 = select i1 %121, i32 %120, i32 -128
  %123 = icmp slt i32 %122, 127
  %124 = select i1 %123, i32 %122, i32 127
  %125 = sext i8 %116 to i32
  %126 = sext i8 %115 to i32
  %127 = sub nsw i32 %125, %126
  %128 = mul nsw i32 %127, 3
  %129 = add nsw i32 %124, %128
  %130 = icmp sgt i32 %129, -128
  %131 = select i1 %130, i32 %129, i32 -128
  %132 = icmp slt i32 %131, 127
  %133 = select i1 %132, i32 %131, i32 127
  %134 = trunc i32 %133 to i8
  %135 = select i1 %113, i8 0, i8 %134
  %136 = icmp slt i8 %135, 123
  %137 = select i1 %136, i8 %135, i8 123
  %138 = add nsw i8 %137, 4
  %139 = ashr i8 %138, 3
  %140 = sext i8 %139 to i32
  %141 = sub nsw i32 %125, %140
  %142 = icmp sgt i32 %141, -128
  %143 = select i1 %142, i32 %141, i32 -128
  %144 = icmp slt i32 %143, 127
  %145 = select i1 %144, i32 %143, i32 127
  %146 = trunc i32 %145 to i8
  %147 = xor i8 %146, -128
  store i8 %147, i8* %88, align 1
  %148 = icmp slt i8 %135, 124
  %149 = select i1 %148, i8 %135, i8 124
  %150 = add nsw i8 %149, 3
  %151 = ashr i8 %150, 3
  %152 = sext i8 %151 to i32
  %153 = add nsw i32 %152, %126
  %154 = icmp sgt i32 %153, -128
  %155 = select i1 %154, i32 %153, i32 -128
  %156 = icmp slt i32 %155, 127
  %157 = select i1 %156, i32 %155, i32 127
  %158 = trunc i32 %157 to i8
  %159 = xor i8 %158, -128
  store i8 %159, i8* %93, align 1
  %160 = getelementptr inbounds i8, i8* %88, i64 %4
  %161 = add nuw nsw i32 %89, 1
  %162 = icmp eq i32 %161, 16
  br i1 %162, label %163, label %86

163:                                              ; preds = %6, %86
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_mbh_c(i8* nocapture, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  tail call fastcc void @mbloop_filter_horizontal_edge_c(i8* %0, i32 %3, i8* %8, i8* %10, i8* %12, i32 2)
  %13 = icmp eq i8* %1, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %7, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = load i8*, i8** %11, align 8
  tail call fastcc void @mbloop_filter_horizontal_edge_c(i8* nonnull %1, i32 %4, i8* %15, i8* %16, i8* %17, i32 1)
  br label %18

18:                                               ; preds = %6, %14
  %19 = icmp eq i8* %2, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %18
  %21 = load i8*, i8** %7, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = load i8*, i8** %11, align 8
  tail call fastcc void @mbloop_filter_horizontal_edge_c(i8* nonnull %2, i32 %4, i8* %21, i8* %22, i8* %23, i32 1)
  br label %24

24:                                               ; preds = %18, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @mbloop_filter_horizontal_edge_c(i8* nocapture, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #0 {
  %7 = mul nsw i32 %1, -4
  %8 = sext i32 %7 to i64
  %9 = mul nsw i32 %1, -3
  %10 = sext i32 %9 to i64
  %11 = mul nsw i32 %1, -2
  %12 = sext i32 %11 to i64
  %13 = sub nsw i32 0, %1
  %14 = sext i32 %13 to i64
  %15 = sext i32 %1 to i64
  %16 = shl nsw i32 %1, 1
  %17 = sext i32 %16 to i64
  %18 = mul nsw i32 %1, 3
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 0, %19
  %21 = sub nsw i64 0, %17
  %22 = sub nsw i64 0, %15
  %23 = shl nsw i32 %5, 3
  br label %24

24:                                               ; preds = %24, %6
  %25 = phi i8* [ %0, %6 ], [ %113, %24 ]
  %26 = phi i32 [ 0, %6 ], [ %114, %24 ]
  %27 = load i8, i8* %3, align 1
  %28 = load i8, i8* %2, align 1
  %29 = getelementptr inbounds i8, i8* %25, i64 %8
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %25, i64 %10
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %25, i64 %12
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %25, i64 %14
  %36 = load i8, i8* %35, align 1
  %37 = load i8, i8* %25, align 1
  %38 = getelementptr inbounds i8, i8* %25, i64 %15
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %25, i64 %17
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %25, i64 %19
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %30 to i32
  %45 = zext i8 %32 to i32
  %46 = sub nsw i32 %44, %45
  %47 = icmp slt i32 %46, 0
  %48 = sub nsw i32 0, %46
  %49 = select i1 %47, i32 %48, i32 %46
  %50 = zext i8 %27 to i32
  %51 = icmp sgt i32 %49, %50
  %52 = zext i8 %34 to i32
  %53 = sub nsw i32 %45, %52
  %54 = icmp slt i32 %53, 0
  %55 = sub nsw i32 0, %53
  %56 = select i1 %54, i32 %55, i32 %53
  %57 = icmp sgt i32 %56, %50
  %58 = or i1 %51, %57
  %59 = zext i8 %36 to i32
  %60 = sub nsw i32 %52, %59
  %61 = icmp slt i32 %60, 0
  %62 = sub nsw i32 0, %60
  %63 = select i1 %61, i32 %62, i32 %60
  %64 = icmp sgt i32 %63, %50
  %65 = or i1 %58, %64
  %66 = zext i8 %39 to i32
  %67 = zext i8 %37 to i32
  %68 = sub nsw i32 %66, %67
  %69 = icmp slt i32 %68, 0
  %70 = sub nsw i32 0, %68
  %71 = select i1 %69, i32 %70, i32 %68
  %72 = icmp sgt i32 %71, %50
  %73 = or i1 %65, %72
  %74 = zext i8 %41 to i32
  %75 = sub nsw i32 %74, %66
  %76 = icmp slt i32 %75, 0
  %77 = sub nsw i32 0, %75
  %78 = select i1 %76, i32 %77, i32 %75
  %79 = icmp sgt i32 %78, %50
  %80 = or i1 %73, %79
  %81 = zext i8 %43 to i32
  %82 = sub nsw i32 %81, %74
  %83 = icmp slt i32 %82, 0
  %84 = sub nsw i32 0, %82
  %85 = select i1 %83, i32 %84, i32 %82
  %86 = icmp sgt i32 %85, %50
  %87 = or i1 %80, %86
  %88 = sub nsw i32 %59, %67
  %89 = icmp slt i32 %88, 0
  %90 = sub nsw i32 0, %88
  %91 = select i1 %89, i32 %90, i32 %88
  %92 = shl nuw nsw i32 %91, 1
  %93 = sub nsw i32 %52, %66
  %94 = icmp slt i32 %93, 0
  %95 = sub nsw i32 0, %93
  %96 = select i1 %94, i32 %95, i32 %93
  %97 = lshr i32 %96, 1
  %98 = add nuw nsw i32 %97, %92
  %99 = zext i8 %28 to i32
  %100 = icmp sgt i32 %98, %99
  %101 = or i1 %100, %87
  %102 = xor i1 %101, true
  %103 = sext i1 %102 to i8
  %104 = load i8, i8* %4, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp sgt i32 %63, %105
  %107 = icmp sgt i32 %71, %105
  %108 = or i1 %106, %107
  %109 = sext i1 %108 to i8
  %110 = getelementptr inbounds i8, i8* %25, i64 %20
  %111 = getelementptr inbounds i8, i8* %25, i64 %21
  %112 = getelementptr inbounds i8, i8* %25, i64 %22
  tail call fastcc void @vp8_mbfilter(i8 signext %103, i8 zeroext %109, i8* %110, i8* %111, i8* %112, i8* %25, i8* %38, i8* %40)
  %113 = getelementptr inbounds i8, i8* %25, i64 1
  %114 = add nuw nsw i32 %26, 1
  %115 = icmp slt i32 %114, %23
  br i1 %115, label %24, label %116

116:                                              ; preds = %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_mbv_c(i8* nocapture, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  tail call fastcc void @mbloop_filter_vertical_edge_c(i8* %0, i32 %3, i8* %8, i8* %10, i8* %12, i32 2)
  %13 = icmp eq i8* %1, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %7, align 8
  %16 = load i8*, i8** %9, align 8
  %17 = load i8*, i8** %11, align 8
  tail call fastcc void @mbloop_filter_vertical_edge_c(i8* nonnull %1, i32 %4, i8* %15, i8* %16, i8* %17, i32 1)
  br label %18

18:                                               ; preds = %6, %14
  %19 = icmp eq i8* %2, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %18
  %21 = load i8*, i8** %7, align 8
  %22 = load i8*, i8** %9, align 8
  %23 = load i8*, i8** %11, align 8
  tail call fastcc void @mbloop_filter_vertical_edge_c(i8* nonnull %2, i32 %4, i8* %21, i8* %22, i8* %23, i32 1)
  br label %24

24:                                               ; preds = %18, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @mbloop_filter_vertical_edge_c(i8* nocapture, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #0 {
  %7 = sext i32 %1 to i64
  %8 = shl nsw i32 %5, 3
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi i8* [ %0, %6 ], [ %95, %9 ]
  %11 = phi i32 [ 0, %6 ], [ %96, %9 ]
  %12 = load i8, i8* %3, align 1
  %13 = load i8, i8* %2, align 1
  %14 = getelementptr inbounds i8, i8* %10, i64 -4
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds i8, i8* %10, i64 -3
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds i8, i8* %10, i64 -2
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds i8, i8* %10, i64 -1
  %21 = load i8, i8* %20, align 1
  %22 = load i8, i8* %10, align 1
  %23 = getelementptr inbounds i8, i8* %10, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds i8, i8* %10, i64 2
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %10, i64 3
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %15 to i32
  %30 = zext i8 %17 to i32
  %31 = sub nsw i32 %29, %30
  %32 = icmp slt i32 %31, 0
  %33 = sub nsw i32 0, %31
  %34 = select i1 %32, i32 %33, i32 %31
  %35 = zext i8 %12 to i32
  %36 = icmp sgt i32 %34, %35
  %37 = zext i8 %19 to i32
  %38 = sub nsw i32 %30, %37
  %39 = icmp slt i32 %38, 0
  %40 = sub nsw i32 0, %38
  %41 = select i1 %39, i32 %40, i32 %38
  %42 = icmp sgt i32 %41, %35
  %43 = or i1 %36, %42
  %44 = zext i8 %21 to i32
  %45 = sub nsw i32 %37, %44
  %46 = icmp slt i32 %45, 0
  %47 = sub nsw i32 0, %45
  %48 = select i1 %46, i32 %47, i32 %45
  %49 = icmp sgt i32 %48, %35
  %50 = or i1 %43, %49
  %51 = zext i8 %24 to i32
  %52 = zext i8 %22 to i32
  %53 = sub nsw i32 %51, %52
  %54 = icmp slt i32 %53, 0
  %55 = sub nsw i32 0, %53
  %56 = select i1 %54, i32 %55, i32 %53
  %57 = icmp sgt i32 %56, %35
  %58 = or i1 %50, %57
  %59 = zext i8 %26 to i32
  %60 = sub nsw i32 %59, %51
  %61 = icmp slt i32 %60, 0
  %62 = sub nsw i32 0, %60
  %63 = select i1 %61, i32 %62, i32 %60
  %64 = icmp sgt i32 %63, %35
  %65 = or i1 %58, %64
  %66 = zext i8 %28 to i32
  %67 = sub nsw i32 %66, %59
  %68 = icmp slt i32 %67, 0
  %69 = sub nsw i32 0, %67
  %70 = select i1 %68, i32 %69, i32 %67
  %71 = icmp sgt i32 %70, %35
  %72 = or i1 %65, %71
  %73 = sub nsw i32 %44, %52
  %74 = icmp slt i32 %73, 0
  %75 = sub nsw i32 0, %73
  %76 = select i1 %74, i32 %75, i32 %73
  %77 = shl nuw nsw i32 %76, 1
  %78 = sub nsw i32 %37, %51
  %79 = icmp slt i32 %78, 0
  %80 = sub nsw i32 0, %78
  %81 = select i1 %79, i32 %80, i32 %78
  %82 = lshr i32 %81, 1
  %83 = add nuw nsw i32 %82, %77
  %84 = zext i8 %13 to i32
  %85 = icmp sgt i32 %83, %84
  %86 = or i1 %85, %72
  %87 = xor i1 %86, true
  %88 = sext i1 %87 to i8
  %89 = load i8, i8* %4, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp sgt i32 %48, %90
  %92 = icmp sgt i32 %56, %90
  %93 = or i1 %91, %92
  %94 = sext i1 %93 to i8
  tail call fastcc void @vp8_mbfilter(i8 signext %88, i8 zeroext %94, i8* %16, i8* %18, i8* %20, i8* %10, i8* %23, i8* %25)
  %95 = getelementptr inbounds i8, i8* %10, i64 %7
  %96 = add nuw nsw i32 %11, 1
  %97 = icmp slt i32 %96, %8
  br i1 %97, label %9, label %98

98:                                               ; preds = %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_bh_c(i8* nocapture, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = shl nsw i32 %3, 2
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  %10 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  tail call fastcc void @loop_filter_horizontal_edge_c(i8* %9, i32 %3, i8* %11, i8* %13, i8* %15, i32 2)
  %16 = shl nsw i32 %3, 3
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8*, i8** %10, align 8
  %20 = load i8*, i8** %12, align 8
  %21 = load i8*, i8** %14, align 8
  tail call fastcc void @loop_filter_horizontal_edge_c(i8* %18, i32 %3, i8* %19, i8* %20, i8* %21, i32 2)
  %22 = mul nsw i32 %3, 12
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %0, i64 %23
  %25 = load i8*, i8** %10, align 8
  %26 = load i8*, i8** %12, align 8
  %27 = load i8*, i8** %14, align 8
  tail call fastcc void @loop_filter_horizontal_edge_c(i8* %24, i32 %3, i8* %25, i8* %26, i8* %27, i32 2)
  %28 = icmp eq i8* %1, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %6
  %30 = shl nsw i32 %4, 2
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  %33 = load i8*, i8** %10, align 8
  %34 = load i8*, i8** %12, align 8
  %35 = load i8*, i8** %14, align 8
  tail call fastcc void @loop_filter_horizontal_edge_c(i8* %32, i32 %4, i8* %33, i8* %34, i8* %35, i32 1)
  br label %36

36:                                               ; preds = %6, %29
  %37 = icmp eq i8* %2, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %36
  %39 = shl nsw i32 %4, 2
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %2, i64 %40
  %42 = load i8*, i8** %10, align 8
  %43 = load i8*, i8** %12, align 8
  %44 = load i8*, i8** %14, align 8
  tail call fastcc void @loop_filter_horizontal_edge_c(i8* %41, i32 %4, i8* %42, i8* %43, i8* %44, i32 1)
  br label %45

45:                                               ; preds = %36, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @loop_filter_horizontal_edge_c(i8* nocapture, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #0 {
  %7 = mul nsw i32 %1, -4
  %8 = sext i32 %7 to i64
  %9 = mul nsw i32 %1, -3
  %10 = sext i32 %9 to i64
  %11 = mul nsw i32 %1, -2
  %12 = sext i32 %11 to i64
  %13 = sub nsw i32 0, %1
  %14 = sext i32 %13 to i64
  %15 = sext i32 %1 to i64
  %16 = shl nsw i32 %1, 1
  %17 = sext i32 %16 to i64
  %18 = mul nsw i32 %1, 3
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 0, %17
  %21 = sub nsw i64 0, %15
  %22 = shl nsw i32 %5, 3
  br label %23

23:                                               ; preds = %23, %6
  %24 = phi i8* [ %0, %6 ], [ %179, %23 ]
  %25 = phi i32 [ 0, %6 ], [ %180, %23 ]
  %26 = load i8, i8* %3, align 1
  %27 = load i8, i8* %2, align 1
  %28 = getelementptr inbounds i8, i8* %24, i64 %8
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds i8, i8* %24, i64 %10
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds i8, i8* %24, i64 %12
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %24, i64 %14
  %35 = load i8, i8* %34, align 1
  %36 = load i8, i8* %24, align 1
  %37 = getelementptr inbounds i8, i8* %24, i64 %15
  %38 = load i8, i8* %37, align 1
  %39 = getelementptr inbounds i8, i8* %24, i64 %17
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %24, i64 %19
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %29 to i32
  %44 = zext i8 %31 to i32
  %45 = sub nsw i32 %43, %44
  %46 = icmp slt i32 %45, 0
  %47 = sub nsw i32 0, %45
  %48 = select i1 %46, i32 %47, i32 %45
  %49 = zext i8 %26 to i32
  %50 = icmp sgt i32 %48, %49
  %51 = zext i8 %33 to i32
  %52 = sub nsw i32 %44, %51
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = icmp sgt i32 %55, %49
  %57 = or i1 %50, %56
  %58 = zext i8 %35 to i32
  %59 = sub nsw i32 %51, %58
  %60 = icmp slt i32 %59, 0
  %61 = sub nsw i32 0, %59
  %62 = select i1 %60, i32 %61, i32 %59
  %63 = icmp sgt i32 %62, %49
  %64 = or i1 %57, %63
  %65 = zext i8 %38 to i32
  %66 = zext i8 %36 to i32
  %67 = sub nsw i32 %65, %66
  %68 = icmp slt i32 %67, 0
  %69 = sub nsw i32 0, %67
  %70 = select i1 %68, i32 %69, i32 %67
  %71 = icmp sgt i32 %70, %49
  %72 = or i1 %64, %71
  %73 = zext i8 %40 to i32
  %74 = sub nsw i32 %73, %65
  %75 = icmp slt i32 %74, 0
  %76 = sub nsw i32 0, %74
  %77 = select i1 %75, i32 %76, i32 %74
  %78 = icmp sgt i32 %77, %49
  %79 = or i1 %72, %78
  %80 = zext i8 %42 to i32
  %81 = sub nsw i32 %80, %73
  %82 = icmp slt i32 %81, 0
  %83 = sub nsw i32 0, %81
  %84 = select i1 %82, i32 %83, i32 %81
  %85 = icmp sgt i32 %84, %49
  %86 = or i1 %79, %85
  %87 = sub nsw i32 %58, %66
  %88 = icmp slt i32 %87, 0
  %89 = sub nsw i32 0, %87
  %90 = select i1 %88, i32 %89, i32 %87
  %91 = shl nuw nsw i32 %90, 1
  %92 = sub nsw i32 %51, %65
  %93 = icmp slt i32 %92, 0
  %94 = sub nsw i32 0, %92
  %95 = select i1 %93, i32 %94, i32 %92
  %96 = lshr i32 %95, 1
  %97 = add nuw nsw i32 %96, %91
  %98 = zext i8 %27 to i32
  %99 = icmp sgt i32 %97, %98
  %100 = or i1 %99, %86
  %101 = load i8, i8* %4, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp sgt i32 %62, %102
  %104 = icmp sgt i32 %70, %102
  %105 = or i1 %103, %104
  %106 = sext i1 %105 to i8
  %107 = getelementptr inbounds i8, i8* %24, i64 %20
  %108 = getelementptr inbounds i8, i8* %24, i64 %21
  %109 = load i8, i8* %107, align 1
  %110 = xor i8 %109, -128
  %111 = load i8, i8* %108, align 1
  %112 = xor i8 %111, -128
  %113 = xor i8 %36, -128
  %114 = xor i8 %38, -128
  %115 = sext i8 %110 to i32
  %116 = sext i8 %114 to i32
  %117 = sub nsw i32 %115, %116
  %118 = icmp sgt i32 %117, -128
  %119 = select i1 %118, i32 %117, i32 -128
  %120 = icmp slt i32 %119, 127
  %121 = select i1 %120, i32 %119, i32 127
  %122 = trunc i32 %121 to i8
  %123 = and i8 %122, %106
  %124 = sext i8 %123 to i32
  %125 = sext i8 %113 to i32
  %126 = sext i8 %112 to i32
  %127 = sub nsw i32 %125, %126
  %128 = mul nsw i32 %127, 3
  %129 = add nsw i32 %128, %124
  %130 = icmp sgt i32 %129, -128
  %131 = select i1 %130, i32 %129, i32 -128
  %132 = icmp slt i32 %131, 127
  %133 = select i1 %132, i32 %131, i32 127
  %134 = trunc i32 %133 to i8
  %135 = select i1 %100, i8 0, i8 %134
  %136 = icmp slt i8 %135, 123
  %137 = select i1 %136, i8 %135, i8 123
  %138 = add nsw i8 %137, 4
  %139 = icmp slt i8 %135, 124
  %140 = select i1 %139, i8 %135, i8 124
  %141 = add nsw i8 %140, 3
  %142 = ashr i8 %138, 3
  %143 = ashr i8 %141, 3
  %144 = sext i8 %142 to i32
  %145 = sub nsw i32 %125, %144
  %146 = icmp sgt i32 %145, -128
  %147 = select i1 %146, i32 %145, i32 -128
  %148 = icmp slt i32 %147, 127
  %149 = select i1 %148, i32 %147, i32 127
  %150 = trunc i32 %149 to i8
  %151 = xor i8 %150, -128
  store i8 %151, i8* %24, align 1
  %152 = sext i8 %143 to i32
  %153 = add nsw i32 %152, %126
  %154 = icmp sgt i32 %153, -128
  %155 = select i1 %154, i32 %153, i32 -128
  %156 = icmp slt i32 %155, 127
  %157 = select i1 %156, i32 %155, i32 127
  %158 = trunc i32 %157 to i8
  %159 = xor i8 %158, -128
  store i8 %159, i8* %108, align 1
  %160 = add nsw i8 %142, 1
  %161 = ashr i8 %160, 1
  %162 = xor i8 %106, -1
  %163 = and i8 %161, %162
  %164 = sext i8 %163 to i32
  %165 = sub nsw i32 %116, %164
  %166 = icmp sgt i32 %165, -128
  %167 = select i1 %166, i32 %165, i32 -128
  %168 = icmp slt i32 %167, 127
  %169 = select i1 %168, i32 %167, i32 127
  %170 = trunc i32 %169 to i8
  %171 = xor i8 %170, -128
  store i8 %171, i8* %37, align 1
  %172 = add nsw i32 %164, %115
  %173 = icmp sgt i32 %172, -128
  %174 = select i1 %173, i32 %172, i32 -128
  %175 = icmp slt i32 %174, 127
  %176 = select i1 %175, i32 %174, i32 127
  %177 = trunc i32 %176 to i8
  %178 = xor i8 %177, -128
  store i8 %178, i8* %107, align 1
  %179 = getelementptr inbounds i8, i8* %24, i64 1
  %180 = add nuw nsw i32 %25, 1
  %181 = icmp slt i32 %180, %22
  br i1 %181, label %23, label %182

182:                                              ; preds = %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_bhs_c(i8* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = shl nsw i32 %1, 2
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  tail call void @vp8_loop_filter_simple_horizontal_edge_c(i8* %6, i32 %1, i8* %2)
  %7 = shl nsw i32 %1, 3
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  tail call void @vp8_loop_filter_simple_horizontal_edge_c(i8* %9, i32 %1, i8* %2)
  %10 = mul nsw i32 %1, 12
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  tail call void @vp8_loop_filter_simple_horizontal_edge_c(i8* %12, i32 %1, i8* %2)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_bv_c(i8* nocapture, i8*, i8*, i32, i32, %struct.loop_filter_info* nocapture readonly) local_unnamed_addr #0 {
  %7 = getelementptr inbounds i8, i8* %0, i64 4
  %8 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.loop_filter_info, %struct.loop_filter_info* %5, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  tail call fastcc void @loop_filter_vertical_edge_c(i8* %7, i32 %3, i8* %9, i8* %11, i8* %13, i32 2)
  %14 = getelementptr inbounds i8, i8* %0, i64 8
  %15 = load i8*, i8** %8, align 8
  %16 = load i8*, i8** %10, align 8
  %17 = load i8*, i8** %12, align 8
  tail call fastcc void @loop_filter_vertical_edge_c(i8* %14, i32 %3, i8* %15, i8* %16, i8* %17, i32 2)
  %18 = getelementptr inbounds i8, i8* %0, i64 12
  %19 = load i8*, i8** %8, align 8
  %20 = load i8*, i8** %10, align 8
  %21 = load i8*, i8** %12, align 8
  tail call fastcc void @loop_filter_vertical_edge_c(i8* %18, i32 %3, i8* %19, i8* %20, i8* %21, i32 2)
  %22 = icmp eq i8* %1, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %6
  %24 = getelementptr inbounds i8, i8* %1, i64 4
  %25 = load i8*, i8** %8, align 8
  %26 = load i8*, i8** %10, align 8
  %27 = load i8*, i8** %12, align 8
  tail call fastcc void @loop_filter_vertical_edge_c(i8* %24, i32 %4, i8* %25, i8* %26, i8* %27, i32 1)
  br label %28

28:                                               ; preds = %6, %23
  %29 = icmp eq i8* %2, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %2, i64 4
  %32 = load i8*, i8** %8, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = load i8*, i8** %12, align 8
  tail call fastcc void @loop_filter_vertical_edge_c(i8* %31, i32 %4, i8* %32, i8* %33, i8* %34, i32 1)
  br label %35

35:                                               ; preds = %28, %30
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @loop_filter_vertical_edge_c(i8* nocapture, i32, i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #0 {
  %7 = sext i32 %1 to i64
  %8 = shl nsw i32 %5, 3
  %9 = icmp eq i32 %1, 1
  br i1 %9, label %165, label %10

10:                                               ; preds = %6, %10
  %11 = phi i8* [ %162, %10 ], [ %0, %6 ]
  %12 = phi i32 [ %163, %10 ], [ 0, %6 ]
  %13 = load i8, i8* %3, align 1
  %14 = load i8, i8* %2, align 1
  %15 = getelementptr inbounds i8, i8* %11, i64 -4
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 -3
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 -2
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds i8, i8* %11, i64 -1
  %22 = load i8, i8* %21, align 1
  %23 = load i8, i8* %11, align 1
  %24 = getelementptr inbounds i8, i8* %11, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %11, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %16 to i32
  %31 = zext i8 %18 to i32
  %32 = sub nsw i32 %30, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = zext i8 %13 to i32
  %37 = icmp sgt i32 %35, %36
  %38 = zext i8 %20 to i32
  %39 = sub nsw i32 %31, %38
  %40 = icmp slt i32 %39, 0
  %41 = sub nsw i32 0, %39
  %42 = select i1 %40, i32 %41, i32 %39
  %43 = icmp sgt i32 %42, %36
  %44 = or i1 %37, %43
  %45 = zext i8 %22 to i32
  %46 = sub nsw i32 %38, %45
  %47 = icmp slt i32 %46, 0
  %48 = sub nsw i32 0, %46
  %49 = select i1 %47, i32 %48, i32 %46
  %50 = icmp sgt i32 %49, %36
  %51 = or i1 %44, %50
  %52 = zext i8 %25 to i32
  %53 = zext i8 %23 to i32
  %54 = sub nsw i32 %52, %53
  %55 = icmp slt i32 %54, 0
  %56 = sub nsw i32 0, %54
  %57 = select i1 %55, i32 %56, i32 %54
  %58 = icmp sgt i32 %57, %36
  %59 = or i1 %51, %58
  %60 = zext i8 %27 to i32
  %61 = sub nsw i32 %60, %52
  %62 = icmp slt i32 %61, 0
  %63 = sub nsw i32 0, %61
  %64 = select i1 %62, i32 %63, i32 %61
  %65 = icmp sgt i32 %64, %36
  %66 = or i1 %59, %65
  %67 = zext i8 %29 to i32
  %68 = sub nsw i32 %67, %60
  %69 = icmp slt i32 %68, 0
  %70 = sub nsw i32 0, %68
  %71 = select i1 %69, i32 %70, i32 %68
  %72 = icmp sgt i32 %71, %36
  %73 = or i1 %66, %72
  %74 = sub nsw i32 %45, %53
  %75 = icmp slt i32 %74, 0
  %76 = sub nsw i32 0, %74
  %77 = select i1 %75, i32 %76, i32 %74
  %78 = shl nuw nsw i32 %77, 1
  %79 = sub nsw i32 %38, %52
  %80 = icmp slt i32 %79, 0
  %81 = sub nsw i32 0, %79
  %82 = select i1 %80, i32 %81, i32 %79
  %83 = lshr i32 %82, 1
  %84 = add nuw nsw i32 %83, %78
  %85 = zext i8 %14 to i32
  %86 = icmp sgt i32 %84, %85
  %87 = or i1 %86, %73
  %88 = load i8, i8* %4, align 1
  %89 = zext i8 %88 to i32
  %90 = icmp sgt i32 %49, %89
  %91 = icmp sgt i32 %57, %89
  %92 = or i1 %90, %91
  %93 = sext i1 %92 to i8
  %94 = xor i8 %20, -128
  %95 = xor i8 %22, -128
  %96 = xor i8 %23, -128
  %97 = xor i8 %25, -128
  %98 = sext i8 %94 to i32
  %99 = sext i8 %97 to i32
  %100 = sub nsw i32 %98, %99
  %101 = icmp sgt i32 %100, -128
  %102 = select i1 %101, i32 %100, i32 -128
  %103 = icmp slt i32 %102, 127
  %104 = select i1 %103, i32 %102, i32 127
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, %93
  %107 = sext i8 %106 to i32
  %108 = sext i8 %96 to i32
  %109 = sext i8 %95 to i32
  %110 = sub nsw i32 %108, %109
  %111 = mul nsw i32 %110, 3
  %112 = add nsw i32 %111, %107
  %113 = icmp sgt i32 %112, -128
  %114 = select i1 %113, i32 %112, i32 -128
  %115 = icmp slt i32 %114, 127
  %116 = select i1 %115, i32 %114, i32 127
  %117 = trunc i32 %116 to i8
  %118 = select i1 %87, i8 0, i8 %117
  %119 = icmp slt i8 %118, 123
  %120 = select i1 %119, i8 %118, i8 123
  %121 = add nsw i8 %120, 4
  %122 = icmp slt i8 %118, 124
  %123 = select i1 %122, i8 %118, i8 124
  %124 = add nsw i8 %123, 3
  %125 = ashr i8 %121, 3
  %126 = ashr i8 %124, 3
  %127 = sext i8 %125 to i32
  %128 = sub nsw i32 %108, %127
  %129 = icmp sgt i32 %128, -128
  %130 = select i1 %129, i32 %128, i32 -128
  %131 = icmp slt i32 %130, 127
  %132 = select i1 %131, i32 %130, i32 127
  %133 = trunc i32 %132 to i8
  %134 = xor i8 %133, -128
  store i8 %134, i8* %11, align 1
  %135 = sext i8 %126 to i32
  %136 = add nsw i32 %135, %109
  %137 = icmp sgt i32 %136, -128
  %138 = select i1 %137, i32 %136, i32 -128
  %139 = icmp slt i32 %138, 127
  %140 = select i1 %139, i32 %138, i32 127
  %141 = trunc i32 %140 to i8
  %142 = xor i8 %141, -128
  store i8 %142, i8* %21, align 1
  %143 = add nsw i8 %125, 1
  %144 = ashr i8 %143, 1
  %145 = xor i8 %93, -1
  %146 = and i8 %144, %145
  %147 = sext i8 %146 to i32
  %148 = sub nsw i32 %99, %147
  %149 = icmp sgt i32 %148, -128
  %150 = select i1 %149, i32 %148, i32 -128
  %151 = icmp slt i32 %150, 127
  %152 = select i1 %151, i32 %150, i32 127
  %153 = trunc i32 %152 to i8
  %154 = xor i8 %153, -128
  store i8 %154, i8* %24, align 1
  %155 = add nsw i32 %147, %98
  %156 = icmp sgt i32 %155, -128
  %157 = select i1 %156, i32 %155, i32 -128
  %158 = icmp slt i32 %157, 127
  %159 = select i1 %158, i32 %157, i32 127
  %160 = trunc i32 %159 to i8
  %161 = xor i8 %160, -128
  store i8 %161, i8* %19, align 1
  %162 = getelementptr inbounds i8, i8* %11, i64 %7
  %163 = add nuw nsw i32 %12, 1
  %164 = icmp slt i32 %163, %8
  br i1 %164, label %10, label %322

165:                                              ; preds = %6
  %166 = load i8, i8* %0, align 1
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i8 [ %166, %165 ], [ %311, %167 ]
  %169 = phi i8* [ %0, %165 ], [ %319, %167 ]
  %170 = phi i32 [ 0, %165 ], [ %320, %167 ]
  %171 = load i8, i8* %3, align 1
  %172 = load i8, i8* %2, align 1
  %173 = getelementptr inbounds i8, i8* %169, i64 -4
  %174 = load i8, i8* %173, align 1
  %175 = getelementptr inbounds i8, i8* %169, i64 -3
  %176 = load i8, i8* %175, align 1
  %177 = getelementptr inbounds i8, i8* %169, i64 -2
  %178 = load i8, i8* %177, align 1
  %179 = getelementptr inbounds i8, i8* %169, i64 -1
  %180 = load i8, i8* %179, align 1
  %181 = getelementptr inbounds i8, i8* %169, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = getelementptr inbounds i8, i8* %169, i64 2
  %184 = load i8, i8* %183, align 1
  %185 = getelementptr inbounds i8, i8* %169, i64 3
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %174 to i32
  %188 = zext i8 %176 to i32
  %189 = sub nsw i32 %187, %188
  %190 = icmp slt i32 %189, 0
  %191 = sub nsw i32 0, %189
  %192 = select i1 %190, i32 %191, i32 %189
  %193 = zext i8 %171 to i32
  %194 = icmp sgt i32 %192, %193
  %195 = zext i8 %178 to i32
  %196 = sub nsw i32 %188, %195
  %197 = icmp slt i32 %196, 0
  %198 = sub nsw i32 0, %196
  %199 = select i1 %197, i32 %198, i32 %196
  %200 = icmp sgt i32 %199, %193
  %201 = or i1 %194, %200
  %202 = zext i8 %180 to i32
  %203 = sub nsw i32 %195, %202
  %204 = icmp slt i32 %203, 0
  %205 = sub nsw i32 0, %203
  %206 = select i1 %204, i32 %205, i32 %203
  %207 = icmp sgt i32 %206, %193
  %208 = or i1 %201, %207
  %209 = zext i8 %182 to i32
  %210 = zext i8 %168 to i32
  %211 = sub nsw i32 %209, %210
  %212 = icmp slt i32 %211, 0
  %213 = sub nsw i32 0, %211
  %214 = select i1 %212, i32 %213, i32 %211
  %215 = icmp sgt i32 %214, %193
  %216 = or i1 %208, %215
  %217 = zext i8 %184 to i32
  %218 = sub nsw i32 %217, %209
  %219 = icmp slt i32 %218, 0
  %220 = sub nsw i32 0, %218
  %221 = select i1 %219, i32 %220, i32 %218
  %222 = icmp sgt i32 %221, %193
  %223 = or i1 %216, %222
  %224 = zext i8 %186 to i32
  %225 = sub nsw i32 %224, %217
  %226 = icmp slt i32 %225, 0
  %227 = sub nsw i32 0, %225
  %228 = select i1 %226, i32 %227, i32 %225
  %229 = icmp sgt i32 %228, %193
  %230 = or i1 %223, %229
  %231 = sub nsw i32 %202, %210
  %232 = icmp slt i32 %231, 0
  %233 = sub nsw i32 0, %231
  %234 = select i1 %232, i32 %233, i32 %231
  %235 = shl nuw nsw i32 %234, 1
  %236 = sub nsw i32 %195, %209
  %237 = icmp slt i32 %236, 0
  %238 = sub nsw i32 0, %236
  %239 = select i1 %237, i32 %238, i32 %236
  %240 = lshr i32 %239, 1
  %241 = add nuw nsw i32 %240, %235
  %242 = zext i8 %172 to i32
  %243 = icmp sgt i32 %241, %242
  %244 = or i1 %243, %230
  %245 = load i8, i8* %4, align 1
  %246 = zext i8 %245 to i32
  %247 = icmp sgt i32 %206, %246
  %248 = icmp sgt i32 %214, %246
  %249 = or i1 %247, %248
  %250 = sext i1 %249 to i8
  %251 = xor i8 %178, -128
  %252 = xor i8 %180, -128
  %253 = xor i8 %168, -128
  %254 = xor i8 %182, -128
  %255 = sext i8 %251 to i32
  %256 = sext i8 %254 to i32
  %257 = sub nsw i32 %255, %256
  %258 = icmp sgt i32 %257, -128
  %259 = select i1 %258, i32 %257, i32 -128
  %260 = icmp slt i32 %259, 127
  %261 = select i1 %260, i32 %259, i32 127
  %262 = trunc i32 %261 to i8
  %263 = and i8 %262, %250
  %264 = sext i8 %263 to i32
  %265 = sext i8 %253 to i32
  %266 = sext i8 %252 to i32
  %267 = sub nsw i32 %265, %266
  %268 = mul nsw i32 %267, 3
  %269 = add nsw i32 %268, %264
  %270 = icmp sgt i32 %269, -128
  %271 = select i1 %270, i32 %269, i32 -128
  %272 = icmp slt i32 %271, 127
  %273 = select i1 %272, i32 %271, i32 127
  %274 = trunc i32 %273 to i8
  %275 = select i1 %244, i8 0, i8 %274
  %276 = icmp slt i8 %275, 123
  %277 = select i1 %276, i8 %275, i8 123
  %278 = add nsw i8 %277, 4
  %279 = icmp slt i8 %275, 124
  %280 = select i1 %279, i8 %275, i8 124
  %281 = add nsw i8 %280, 3
  %282 = ashr i8 %278, 3
  %283 = ashr i8 %281, 3
  %284 = sext i8 %282 to i32
  %285 = sub nsw i32 %265, %284
  %286 = icmp sgt i32 %285, -128
  %287 = select i1 %286, i32 %285, i32 -128
  %288 = icmp slt i32 %287, 127
  %289 = select i1 %288, i32 %287, i32 127
  %290 = trunc i32 %289 to i8
  %291 = xor i8 %290, -128
  store i8 %291, i8* %169, align 1
  %292 = sext i8 %283 to i32
  %293 = add nsw i32 %292, %266
  %294 = icmp sgt i32 %293, -128
  %295 = select i1 %294, i32 %293, i32 -128
  %296 = icmp slt i32 %295, 127
  %297 = select i1 %296, i32 %295, i32 127
  %298 = trunc i32 %297 to i8
  %299 = xor i8 %298, -128
  store i8 %299, i8* %179, align 1
  %300 = add nsw i8 %282, 1
  %301 = ashr i8 %300, 1
  %302 = xor i8 %250, -1
  %303 = and i8 %301, %302
  %304 = sext i8 %303 to i32
  %305 = sub nsw i32 %256, %304
  %306 = icmp sgt i32 %305, -128
  %307 = select i1 %306, i32 %305, i32 -128
  %308 = icmp slt i32 %307, 127
  %309 = select i1 %308, i32 %307, i32 127
  %310 = trunc i32 %309 to i8
  %311 = xor i8 %310, -128
  store i8 %311, i8* %181, align 1
  %312 = add nsw i32 %304, %255
  %313 = icmp sgt i32 %312, -128
  %314 = select i1 %313, i32 %312, i32 -128
  %315 = icmp slt i32 %314, 127
  %316 = select i1 %315, i32 %314, i32 127
  %317 = trunc i32 %316 to i8
  %318 = xor i8 %317, -128
  store i8 %318, i8* %177, align 1
  %319 = getelementptr inbounds i8, i8* %169, i64 %7
  %320 = add nuw nsw i32 %170, 1
  %321 = icmp slt i32 %320, %8
  br i1 %321, label %167, label %322

322:                                              ; preds = %10, %167
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp8_loop_filter_bvs_c(i8* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 4
  tail call void @vp8_loop_filter_simple_vertical_edge_c(i8* %4, i32 %1, i8* %2)
  %5 = getelementptr inbounds i8, i8* %0, i64 8
  tail call void @vp8_loop_filter_simple_vertical_edge_c(i8* %5, i32 %1, i8* %2)
  %6 = getelementptr inbounds i8, i8* %0, i64 12
  tail call void @vp8_loop_filter_simple_vertical_edge_c(i8* %6, i32 %1, i8* %2)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @vp8_mbfilter(i8 signext, i8 zeroext, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture, i8* nocapture) unnamed_addr #0 {
  %9 = load i8, i8* %2, align 1
  %10 = xor i8 %9, -128
  %11 = load i8, i8* %3, align 1
  %12 = xor i8 %11, -128
  %13 = load i8, i8* %4, align 1
  %14 = xor i8 %13, -128
  %15 = load i8, i8* %5, align 1
  %16 = xor i8 %15, -128
  %17 = load i8, i8* %6, align 1
  %18 = xor i8 %17, -128
  %19 = load i8, i8* %7, align 1
  %20 = xor i8 %19, -128
  %21 = sext i8 %12 to i32
  %22 = sext i8 %18 to i32
  %23 = sub nsw i32 %21, %22
  %24 = icmp sgt i32 %23, -128
  %25 = select i1 %24, i32 %23, i32 -128
  %26 = icmp slt i32 %25, 127
  %27 = select i1 %26, i32 %25, i32 127
  %28 = sext i8 %16 to i32
  %29 = sext i8 %14 to i32
  %30 = sub nsw i32 %28, %29
  %31 = mul nsw i32 %30, 3
  %32 = add nsw i32 %27, %31
  %33 = icmp sgt i32 %32, -128
  %34 = select i1 %33, i32 %32, i32 -128
  %35 = icmp slt i32 %34, 127
  %36 = select i1 %35, i32 %34, i32 127
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, %0
  %39 = and i8 %38, %1
  %40 = icmp slt i8 %39, 123
  %41 = select i1 %40, i8 %39, i8 123
  %42 = add nsw i8 %41, 4
  %43 = icmp slt i8 %39, 124
  %44 = select i1 %43, i8 %39, i8 124
  %45 = add nsw i8 %44, 3
  %46 = ashr i8 %42, 3
  %47 = ashr i8 %45, 3
  %48 = sext i8 %46 to i32
  %49 = sub nsw i32 %28, %48
  %50 = icmp sgt i32 %49, -128
  %51 = select i1 %50, i32 %49, i32 -128
  %52 = icmp slt i32 %51, 127
  %53 = select i1 %52, i32 %51, i32 127
  %54 = sext i8 %47 to i32
  %55 = add nsw i32 %54, %29
  %56 = icmp sgt i32 %55, -128
  %57 = select i1 %56, i32 %55, i32 -128
  %58 = icmp slt i32 %57, 127
  %59 = select i1 %58, i32 %57, i32 127
  %60 = xor i8 %1, -1
  %61 = and i8 %38, %60
  %62 = sext i8 %61 to i32
  %63 = mul nsw i32 %62, 27
  %64 = add nsw i32 %63, 63
  %65 = ashr i32 %64, 7
  %66 = icmp sgt i32 %65, -128
  %67 = select i1 %66, i32 %65, i32 -128
  %68 = icmp slt i32 %67, 127
  %69 = select i1 %68, i32 %67, i32 127
  %70 = sub nsw i32 %53, %69
  %71 = icmp sgt i32 %70, -128
  %72 = select i1 %71, i32 %70, i32 -128
  %73 = icmp slt i32 %72, 127
  %74 = select i1 %73, i32 %72, i32 127
  %75 = trunc i32 %74 to i8
  %76 = xor i8 %75, -128
  store i8 %76, i8* %5, align 1
  %77 = add nsw i32 %59, %69
  %78 = icmp sgt i32 %77, -128
  %79 = select i1 %78, i32 %77, i32 -128
  %80 = icmp slt i32 %79, 127
  %81 = select i1 %80, i32 %79, i32 127
  %82 = trunc i32 %81 to i8
  %83 = xor i8 %82, -128
  store i8 %83, i8* %4, align 1
  %84 = mul nsw i32 %62, 18
  %85 = add nsw i32 %84, 63
  %86 = ashr i32 %85, 7
  %87 = icmp sgt i32 %86, -128
  %88 = select i1 %87, i32 %86, i32 -128
  %89 = icmp slt i32 %88, 127
  %90 = select i1 %89, i32 %88, i32 127
  %91 = sub nsw i32 %22, %90
  %92 = icmp sgt i32 %91, -128
  %93 = select i1 %92, i32 %91, i32 -128
  %94 = icmp slt i32 %93, 127
  %95 = select i1 %94, i32 %93, i32 127
  %96 = trunc i32 %95 to i8
  %97 = xor i8 %96, -128
  store i8 %97, i8* %6, align 1
  %98 = add nsw i32 %90, %21
  %99 = icmp sgt i32 %98, -128
  %100 = select i1 %99, i32 %98, i32 -128
  %101 = icmp slt i32 %100, 127
  %102 = select i1 %101, i32 %100, i32 127
  %103 = trunc i32 %102 to i8
  %104 = xor i8 %103, -128
  store i8 %104, i8* %3, align 1
  %105 = mul nsw i32 %62, 9
  %106 = add nsw i32 %105, 63
  %107 = ashr i32 %106, 7
  %108 = icmp sgt i32 %107, -128
  %109 = select i1 %108, i32 %107, i32 -128
  %110 = icmp slt i32 %109, 127
  %111 = select i1 %110, i32 %109, i32 127
  %112 = sext i8 %20 to i32
  %113 = sub nsw i32 %112, %111
  %114 = icmp sgt i32 %113, -128
  %115 = select i1 %114, i32 %113, i32 -128
  %116 = icmp slt i32 %115, 127
  %117 = select i1 %116, i32 %115, i32 127
  %118 = trunc i32 %117 to i8
  %119 = xor i8 %118, -128
  store i8 %119, i8* %7, align 1
  %120 = sext i8 %10 to i32
  %121 = add nsw i32 %111, %120
  %122 = icmp sgt i32 %121, -128
  %123 = select i1 %122, i32 %121, i32 -128
  %124 = icmp slt i32 %123, 127
  %125 = select i1 %124, i32 %123, i32 127
  %126 = trunc i32 %125 to i8
  %127 = xor i8 %126, -128
  store i8 %127, i8* %2, align 1
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
