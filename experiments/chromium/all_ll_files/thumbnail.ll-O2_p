; ModuleID = '../../pdf/ui/thumbnail.cc'
source_filename = "../../pdf/ui/thumbnail.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.chrome_pdf::Thumbnail" = type <{ %class.SkBitmap, float, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Size" = type { i32, i32 }

@_ZN10chrome_pdf9ThumbnailC1Ev = hidden unnamed_addr alias void (%"class.chrome_pdf::Thumbnail"*), void (%"class.chrome_pdf::Thumbnail"*)* @_ZN10chrome_pdf9ThumbnailC2Ev
@_ZN10chrome_pdf9ThumbnailC1ERKN3gfx4SizeEf = hidden unnamed_addr alias void (%"class.chrome_pdf::Thumbnail"*, %"class.gfx::Size"*, float), void (%"class.chrome_pdf::Thumbnail"*, %"class.gfx::Size"*, float)* @_ZN10chrome_pdf9ThumbnailC2ERKN3gfx4SizeEf
@_ZN10chrome_pdf9ThumbnailC1EOS0_ = hidden unnamed_addr alias void (%"class.chrome_pdf::Thumbnail"*, %"class.chrome_pdf::Thumbnail"*), void (%"class.chrome_pdf::Thumbnail"*, %"class.chrome_pdf::Thumbnail"*)* @_ZN10chrome_pdf9ThumbnailC2EOS0_
@_ZN10chrome_pdf9ThumbnailD1Ev = hidden unnamed_addr alias void (%"class.chrome_pdf::Thumbnail"*), void (%"class.chrome_pdf::Thumbnail"*)* @_ZN10chrome_pdf9ThumbnailD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf9ThumbnailC2Ev(%"class.chrome_pdf::Thumbnail"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %2) #6
  %3 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 1
  store float 1.000000e+00, float* %3, align 8
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf9ThumbnailC2ERKN3gfx4SizeEf(%"class.chrome_pdf::Thumbnail"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), float) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.gfx::Size", align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.SkImageInfo, align 16
  %9 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %9) #6
  %10 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 1
  %11 = fcmp olt float %2, 2.500000e-01
  %12 = select i1 %11, float 2.500000e-01, float %2
  %13 = fcmp ogt float %12, 2.000000e+00
  %14 = bitcast float %12 to i32
  %15 = select i1 %13, i32 1073741824, i32 %14
  %16 = bitcast float* %10 to i32*
  store i32 %15, i32* %16, align 8
  %17 = bitcast i32 %15 to float
  %18 = bitcast i64* %6 to %"class.gfx::Size"*
  %19 = bitcast i64* %7 to %"class.gfx::Size"*
  %20 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  %21 = bitcast i64* %6 to i32*
  store i32 -1431655766, i32* %21, align 8
  %22 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %18, i64 0, i32 1
  store i32 -1431655766, i32* %22, align 4
  %23 = bitcast %"class.gfx::Size"* %1 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = bitcast i64* %4 to %"class.gfx::Size"*
  store i64 %24, i64* %4, align 8
  %27 = bitcast %"class.gfx::Size"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 0
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 1
  store i32 1, i32* %29, align 4
  call void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"* nonnull %26, %"class.gfx::Size"* nonnull dereferenceable(8) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  %30 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %26, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = bitcast i64* %4 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = sdiv i32 %31, %33
  %35 = icmp sgt i32 %34, 4800
  br i1 %35, label %43, label %36

36:                                               ; preds = %3
  %37 = sdiv i32 %33, %31
  %38 = icmp sgt i32 %37, 4800
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = load i64, i64* %4, align 8
  %41 = and i64 %40, -4294967296
  %42 = and i64 %40, 4294967295
  br label %43

43:                                               ; preds = %39, %36, %3
  %44 = phi i64 [ %41, %39 ], [ 61847529062400, %3 ], [ 12884901888, %36 ]
  %45 = phi i64 [ %42, %39 ], [ 3, %3 ], [ 14400, %36 ]
  %46 = or i64 %45, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  store i64 %46, i64* %6, align 8
  %47 = trunc i64 %45 to i32
  %48 = lshr exact i64 %44, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %49, %47
  %51 = select i1 %50, i32 %49, i32 %47
  %52 = sitofp i32 %51 to float
  %53 = fdiv float 1.080000e+02, %52
  %54 = icmp slt i32 %47, %49
  %55 = select i1 %54, i32 %49, i32 %47
  %56 = sitofp i32 %55 to float
  %57 = fdiv float 1.400000e+02, %56
  %58 = fcmp olt float %53, %57
  %59 = select i1 %58, float %57, float %53
  %60 = fmul float %59, %17
  %61 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #6
  %62 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %18, float %60) #6
  store i64 %62, i64* %7, align 8
  %63 = call i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"* nonnull %19) #6
  %64 = trunc i64 %63 to i8
  %65 = lshr i64 %63, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i8 %64, 0
  %68 = icmp sgt i32 %66, 65280
  %69 = or i1 %67, %68
  br i1 %69, label %70, label %79, !prof !2

70:                                               ; preds = %43
  %71 = load i32, i32* %21, align 8
  %72 = sitofp i32 %71 to float
  %73 = fdiv float 6.528000e+04, %72
  %74 = load i32, i32* %22, align 4
  %75 = sitofp i32 %74 to float
  %76 = fdiv float %73, %75
  %77 = call float @sqrtf(float %76) #6
  %78 = call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %18, float %77) #6
  br label %81

79:                                               ; preds = %43
  %80 = load i64, i64* %7, align 8
  br label %81

81:                                               ; preds = %79, %70
  %82 = phi i64 [ %78, %70 ], [ %80, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  %83 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #6
  %84 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %struct.SkImageInfo* %8 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934596>, <2 x i64>* %85, align 16, !alias.scope !3
  %86 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %87 = bitcast %struct.SkISize* %86 to i64*
  store i64 %82, i64* %87, align 16, !alias.scope !3
  %88 = shl i64 %82, 32
  %89 = ashr exact i64 %88, 32
  %90 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0
  %91 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %90) #6
  %92 = sext i32 %91 to i64
  %93 = mul nsw i64 %89, %92
  %94 = icmp ult i64 %93, 2147483648
  %95 = select i1 %94, i64 %93, i64 0
  %96 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %9, %struct.SkImageInfo* nonnull dereferenceable(24) %8, i64 %95) #6
  %97 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 16
  %98 = icmp eq %class.SkColorSpace* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %81
  %100 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkColorSpace* %97 to i8*
  call void @_ZdlPv(i8* %104) #7
  br label %105

105:                                              ; preds = %81, %99, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf9ThumbnailC2EOS0_(%"class.chrome_pdf::Thumbnail"*, %"class.chrome_pdf::Thumbnail"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %1, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %3, %class.SkBitmap* dereferenceable(56) %4) #6
  %5 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %1, i64 0, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = bitcast float* %5 to i32*
  store i32 %8, i32* %9, align 8
  ret void
}

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.chrome_pdf::Thumbnail"* @_ZN10chrome_pdf9ThumbnailaSEOS0_(%"class.chrome_pdf::Thumbnail"* returned, %"class.chrome_pdf::Thumbnail"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %3, %class.SkBitmap* dereferenceable(56) %4) #6
  %6 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %1, i64 0, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 1
  %10 = bitcast float* %9 to i32*
  store i32 %8, i32* %10, align 8
  ret %"class.chrome_pdf::Thumbnail"* %0
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf9ThumbnailD2Ev(%"class.chrome_pdf::Thumbnail"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.chrome_pdf::Thumbnail", %"class.chrome_pdf::Thumbnail"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #1

declare i64 @_ZNK3gfx4Size14GetCheckedAreaEv(%"class.gfx::Size"*) local_unnamed_addr #1

declare void @_ZN3gfx4Size8SetToMaxERKS0_(%"class.gfx::Size"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #4

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2002, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
